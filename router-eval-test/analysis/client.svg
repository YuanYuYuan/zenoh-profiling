<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1334" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1317.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1317.00"> </text><svg id="frames" x="10" width="1180" total_samples="27828"><g><title>[unknown] (6 samples, 0.02%)</title><rect x="0.0072%" y="1253" width="0.0216%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="6"/><text x="0.2572%" y="1263.50"></text></g><g><title>async_io::reactor::Reactor::get (4 samples, 0.01%)</title><rect x="0.0827%" y="1013" width="0.0144%" height="15" fill="rgb(217,0,24)" fg:x="23" fg:w="4"/><text x="0.3327%" y="1023.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="0.0827%" y="997" width="0.0144%" height="15" fill="rgb(221,193,54)" fg:x="23" fg:w="4"/><text x="0.3327%" y="1007.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (4 samples, 0.01%)</title><rect x="0.0827%" y="981" width="0.0144%" height="15" fill="rgb(248,212,6)" fg:x="23" fg:w="4"/><text x="0.3327%" y="991.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (4 samples, 0.01%)</title><rect x="0.0827%" y="965" width="0.0144%" height="15" fill="rgb(208,68,35)" fg:x="23" fg:w="4"/><text x="0.3327%" y="975.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (4 samples, 0.01%)</title><rect x="0.0827%" y="949" width="0.0144%" height="15" fill="rgb(232,128,0)" fg:x="23" fg:w="4"/><text x="0.3327%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="0.0827%" y="933" width="0.0144%" height="15" fill="rgb(207,160,47)" fg:x="23" fg:w="4"/><text x="0.3327%" y="943.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (4 samples, 0.01%)</title><rect x="0.0827%" y="917" width="0.0144%" height="15" fill="rgb(228,23,34)" fg:x="23" fg:w="4"/><text x="0.3327%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::lock (3 samples, 0.01%)</title><rect x="0.0970%" y="1013" width="0.0108%" height="15" fill="rgb(218,30,26)" fg:x="27" fg:w="3"/><text x="0.3470%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.01%)</title><rect x="0.0970%" y="997" width="0.0108%" height="15" fill="rgb(220,122,19)" fg:x="27" fg:w="3"/><text x="0.3470%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.01%)</title><rect x="0.0970%" y="981" width="0.0108%" height="15" fill="rgb(250,228,42)" fg:x="27" fg:w="3"/><text x="0.3470%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (3 samples, 0.01%)</title><rect x="0.0970%" y="965" width="0.0108%" height="15" fill="rgb(240,193,28)" fg:x="27" fg:w="3"/><text x="0.3470%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (3 samples, 0.01%)</title><rect x="0.0970%" y="949" width="0.0108%" height="15" fill="rgb(216,20,37)" fg:x="27" fg:w="3"/><text x="0.3470%" y="959.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (6 samples, 0.02%)</title><rect x="0.1114%" y="1013" width="0.0216%" height="15" fill="rgb(206,188,39)" fg:x="31" fg:w="6"/><text x="0.3614%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (6 samples, 0.02%)</title><rect x="0.1114%" y="997" width="0.0216%" height="15" fill="rgb(217,207,13)" fg:x="31" fg:w="6"/><text x="0.3614%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="0.1366%" y="965" width="0.0180%" height="15" fill="rgb(231,73,38)" fg:x="38" fg:w="5"/><text x="0.3866%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.02%)</title><rect x="0.1366%" y="949" width="0.0180%" height="15" fill="rgb(225,20,46)" fg:x="38" fg:w="5"/><text x="0.3866%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.02%)</title><rect x="0.1366%" y="933" width="0.0180%" height="15" fill="rgb(210,31,41)" fg:x="38" fg:w="5"/><text x="0.3866%" y="943.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="0.1437%" y="917" width="0.0108%" height="15" fill="rgb(221,200,47)" fg:x="40" fg:w="3"/><text x="0.3937%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.02%)</title><rect x="0.1366%" y="981" width="0.0216%" height="15" fill="rgb(226,26,5)" fg:x="38" fg:w="6"/><text x="0.3866%" y="991.50"></text></g><g><title>async_io::reactor::Direction::drain_into (8 samples, 0.03%)</title><rect x="0.1366%" y="997" width="0.0287%" height="15" fill="rgb(249,33,26)" fg:x="38" fg:w="8"/><text x="0.3866%" y="1007.50"></text></g><g><title>async_io::reactor::Direction::is_empty (3 samples, 0.01%)</title><rect x="0.1653%" y="997" width="0.0108%" height="15" fill="rgb(235,183,28)" fg:x="46" fg:w="3"/><text x="0.4153%" y="1007.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_right_border (5 samples, 0.02%)</title><rect x="0.2048%" y="949" width="0.0180%" height="15" fill="rgb(221,5,38)" fg:x="57" fg:w="5"/><text x="0.4548%" y="959.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_top (5 samples, 0.02%)</title><rect x="0.2048%" y="933" width="0.0180%" height="15" fill="rgb(247,18,42)" fg:x="57" fg:w="5"/><text x="0.4548%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::pop_internal_level (5 samples, 0.02%)</title><rect x="0.2048%" y="917" width="0.0180%" height="15" fill="rgb(241,131,45)" fg:x="57" fg:w="5"/><text x="0.4548%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="0.2048%" y="901" width="0.0180%" height="15" fill="rgb(249,31,29)" fg:x="57" fg:w="5"/><text x="0.4548%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="0.2048%" y="885" width="0.0180%" height="15" fill="rgb(225,111,53)" fg:x="57" fg:w="5"/><text x="0.4548%" y="895.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="0.2048%" y="869" width="0.0180%" height="15" fill="rgb(238,160,17)" fg:x="57" fg:w="5"/><text x="0.4548%" y="879.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="0.2120%" y="853" width="0.0108%" height="15" fill="rgb(214,148,48)" fg:x="59" fg:w="3"/><text x="0.4620%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (6 samples, 0.02%)</title><rect x="0.2264%" y="933" width="0.0216%" height="15" fill="rgb(232,36,49)" fg:x="63" fg:w="6"/><text x="0.4764%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (6 samples, 0.02%)</title><rect x="0.2264%" y="917" width="0.0216%" height="15" fill="rgb(209,103,24)" fg:x="63" fg:w="6"/><text x="0.4764%" y="927.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::set_parent_link (6 samples, 0.02%)</title><rect x="0.2264%" y="901" width="0.0216%" height="15" fill="rgb(229,88,8)" fg:x="63" fg:w="6"/><text x="0.4764%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.01%)</title><rect x="0.2336%" y="885" width="0.0144%" height="15" fill="rgb(213,181,19)" fg:x="65" fg:w="4"/><text x="0.4836%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (18 samples, 0.06%)</title><rect x="0.2228%" y="949" width="0.0647%" height="15" fill="rgb(254,191,54)" fg:x="62" fg:w="18"/><text x="0.4728%" y="959.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (11 samples, 0.04%)</title><rect x="0.2480%" y="933" width="0.0395%" height="15" fill="rgb(241,83,37)" fg:x="69" fg:w="11"/><text x="0.4980%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.04%)</title><rect x="0.2480%" y="917" width="0.0395%" height="15" fill="rgb(233,36,39)" fg:x="69" fg:w="11"/><text x="0.4980%" y="927.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="0.2480%" y="901" width="0.0395%" height="15" fill="rgb(226,3,54)" fg:x="69" fg:w="11"/><text x="0.4980%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (3 samples, 0.01%)</title><rect x="0.2875%" y="949" width="0.0108%" height="15" fill="rgb(245,192,40)" fg:x="80" fg:w="3"/><text x="0.5375%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (3 samples, 0.01%)</title><rect x="0.2875%" y="933" width="0.0108%" height="15" fill="rgb(238,167,29)" fg:x="80" fg:w="3"/><text x="0.5375%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (11 samples, 0.04%)</title><rect x="0.2983%" y="933" width="0.0395%" height="15" fill="rgb(232,182,51)" fg:x="83" fg:w="11"/><text x="0.5483%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (11 samples, 0.04%)</title><rect x="0.2983%" y="917" width="0.0395%" height="15" fill="rgb(231,60,39)" fg:x="83" fg:w="11"/><text x="0.5483%" y="927.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (11 samples, 0.04%)</title><rect x="0.2983%" y="901" width="0.0395%" height="15" fill="rgb(208,69,12)" fg:x="83" fg:w="11"/><text x="0.5483%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (11 samples, 0.04%)</title><rect x="0.2983%" y="885" width="0.0395%" height="15" fill="rgb(235,93,37)" fg:x="83" fg:w="11"/><text x="0.5483%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (11 samples, 0.04%)</title><rect x="0.2983%" y="869" width="0.0395%" height="15" fill="rgb(213,116,39)" fg:x="83" fg:w="11"/><text x="0.5483%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (11 samples, 0.04%)</title><rect x="0.2983%" y="853" width="0.0395%" height="15" fill="rgb(222,207,29)" fg:x="83" fg:w="11"/><text x="0.5483%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.04%)</title><rect x="0.2983%" y="837" width="0.0395%" height="15" fill="rgb(206,96,30)" fg:x="83" fg:w="11"/><text x="0.5483%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.04%)</title><rect x="0.2983%" y="821" width="0.0395%" height="15" fill="rgb(218,138,4)" fg:x="83" fg:w="11"/><text x="0.5483%" y="831.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.04%)</title><rect x="0.2983%" y="805" width="0.0395%" height="15" fill="rgb(250,191,14)" fg:x="83" fg:w="11"/><text x="0.5483%" y="815.50"></text></g><g><title>malloc (9 samples, 0.03%)</title><rect x="0.3054%" y="789" width="0.0323%" height="15" fill="rgb(239,60,40)" fg:x="85" fg:w="9"/><text x="0.5554%" y="799.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (16 samples, 0.06%)</title><rect x="0.2983%" y="949" width="0.0575%" height="15" fill="rgb(206,27,48)" fg:x="83" fg:w="16"/><text x="0.5483%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (5 samples, 0.02%)</title><rect x="0.3378%" y="933" width="0.0180%" height="15" fill="rgb(225,35,8)" fg:x="94" fg:w="5"/><text x="0.5878%" y="943.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (5 samples, 0.02%)</title><rect x="0.3378%" y="917" width="0.0180%" height="15" fill="rgb(250,213,24)" fg:x="94" fg:w="5"/><text x="0.5878%" y="927.50"></text></g><g><title>alloc::collections::btree::mem::replace (5 samples, 0.02%)</title><rect x="0.3378%" y="901" width="0.0180%" height="15" fill="rgb(247,123,22)" fg:x="94" fg:w="5"/><text x="0.5878%" y="911.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::{{closure}} (5 samples, 0.02%)</title><rect x="0.3378%" y="885" width="0.0180%" height="15" fill="rgb(231,138,38)" fg:x="94" fg:w="5"/><text x="0.5878%" y="895.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}} (5 samples, 0.02%)</title><rect x="0.3378%" y="869" width="0.0180%" height="15" fill="rgb(231,145,46)" fg:x="94" fg:w="5"/><text x="0.5878%" y="879.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (5 samples, 0.02%)</title><rect x="0.3378%" y="853" width="0.0180%" height="15" fill="rgb(251,118,11)" fg:x="94" fg:w="5"/><text x="0.5878%" y="863.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (5 samples, 0.02%)</title><rect x="0.3378%" y="837" width="0.0180%" height="15" fill="rgb(217,147,25)" fg:x="94" fg:w="5"/><text x="0.5878%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (5 samples, 0.02%)</title><rect x="0.3378%" y="821" width="0.0180%" height="15" fill="rgb(247,81,37)" fg:x="94" fg:w="5"/><text x="0.5878%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.02%)</title><rect x="0.3378%" y="805" width="0.0180%" height="15" fill="rgb(209,12,38)" fg:x="94" fg:w="5"/><text x="0.5878%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.02%)</title><rect x="0.3378%" y="789" width="0.0180%" height="15" fill="rgb(227,1,9)" fg:x="94" fg:w="5"/><text x="0.5878%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="0.3378%" y="773" width="0.0180%" height="15" fill="rgb(248,47,43)" fg:x="94" fg:w="5"/><text x="0.5878%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="0.3378%" y="757" width="0.0180%" height="15" fill="rgb(221,10,30)" fg:x="94" fg:w="5"/><text x="0.5878%" y="767.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="0.3378%" y="741" width="0.0180%" height="15" fill="rgb(210,229,1)" fg:x="94" fg:w="5"/><text x="0.5878%" y="751.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="0.3414%" y="725" width="0.0144%" height="15" fill="rgb(222,148,37)" fg:x="95" fg:w="4"/><text x="0.5914%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (44 samples, 0.16%)</title><rect x="0.2012%" y="981" width="0.1581%" height="15" fill="rgb(234,67,33)" fg:x="56" fg:w="44"/><text x="0.4512%" y="991.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (44 samples, 0.16%)</title><rect x="0.2012%" y="965" width="0.1581%" height="15" fill="rgb(247,98,35)" fg:x="56" fg:w="44"/><text x="0.4512%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (22 samples, 0.08%)</title><rect x="0.3701%" y="949" width="0.0791%" height="15" fill="rgb(247,138,52)" fg:x="103" fg:w="22"/><text x="0.6201%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (21 samples, 0.08%)</title><rect x="0.3737%" y="933" width="0.0755%" height="15" fill="rgb(213,79,30)" fg:x="104" fg:w="21"/><text x="0.6237%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19 samples, 0.07%)</title><rect x="0.3809%" y="917" width="0.0683%" height="15" fill="rgb(246,177,23)" fg:x="106" fg:w="19"/><text x="0.6309%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19 samples, 0.07%)</title><rect x="0.3809%" y="901" width="0.0683%" height="15" fill="rgb(230,62,27)" fg:x="106" fg:w="19"/><text x="0.6309%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (10 samples, 0.04%)</title><rect x="0.4133%" y="885" width="0.0359%" height="15" fill="rgb(216,154,8)" fg:x="115" fg:w="10"/><text x="0.6633%" y="895.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (9 samples, 0.03%)</title><rect x="0.4168%" y="869" width="0.0323%" height="15" fill="rgb(244,35,45)" fg:x="116" fg:w="9"/><text x="0.6668%" y="879.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (9 samples, 0.03%)</title><rect x="0.4168%" y="853" width="0.0323%" height="15" fill="rgb(251,115,12)" fg:x="116" fg:w="9"/><text x="0.6668%" y="863.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (9 samples, 0.03%)</title><rect x="0.4168%" y="837" width="0.0323%" height="15" fill="rgb(240,54,50)" fg:x="116" fg:w="9"/><text x="0.6668%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (6 samples, 0.02%)</title><rect x="0.4276%" y="821" width="0.0216%" height="15" fill="rgb(233,84,52)" fg:x="119" fg:w="6"/><text x="0.6776%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (4 samples, 0.01%)</title><rect x="0.4600%" y="917" width="0.0144%" height="15" fill="rgb(207,117,47)" fg:x="128" fg:w="4"/><text x="0.7100%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (31 samples, 0.11%)</title><rect x="0.3665%" y="965" width="0.1114%" height="15" fill="rgb(249,43,39)" fg:x="102" fg:w="31"/><text x="0.6165%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (8 samples, 0.03%)</title><rect x="0.4492%" y="949" width="0.0287%" height="15" fill="rgb(209,38,44)" fg:x="125" fg:w="8"/><text x="0.6992%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.02%)</title><rect x="0.4600%" y="933" width="0.0180%" height="15" fill="rgb(236,212,23)" fg:x="128" fg:w="5"/><text x="0.7100%" y="943.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_internal_kv (4 samples, 0.01%)</title><rect x="0.4959%" y="885" width="0.0144%" height="15" fill="rgb(242,79,21)" fg:x="138" fg:w="4"/><text x="0.7459%" y="895.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (4 samples, 0.01%)</title><rect x="0.5139%" y="869" width="0.0144%" height="15" fill="rgb(211,96,35)" fg:x="143" fg:w="4"/><text x="0.7639%" y="879.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (4 samples, 0.01%)</title><rect x="0.5139%" y="853" width="0.0144%" height="15" fill="rgb(253,215,40)" fg:x="143" fg:w="4"/><text x="0.7639%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (19 samples, 0.07%)</title><rect x="0.4779%" y="933" width="0.0683%" height="15" fill="rgb(211,81,21)" fg:x="133" fg:w="19"/><text x="0.7279%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (19 samples, 0.07%)</title><rect x="0.4779%" y="917" width="0.0683%" height="15" fill="rgb(208,190,38)" fg:x="133" fg:w="19"/><text x="0.7279%" y="927.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (18 samples, 0.06%)</title><rect x="0.4815%" y="901" width="0.0647%" height="15" fill="rgb(235,213,38)" fg:x="134" fg:w="18"/><text x="0.7315%" y="911.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (10 samples, 0.04%)</title><rect x="0.5103%" y="885" width="0.0359%" height="15" fill="rgb(237,122,38)" fg:x="142" fg:w="10"/><text x="0.7603%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (4 samples, 0.01%)</title><rect x="0.5318%" y="869" width="0.0144%" height="15" fill="rgb(244,218,35)" fg:x="148" fg:w="4"/><text x="0.7818%" y="879.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (4 samples, 0.01%)</title><rect x="0.5318%" y="853" width="0.0144%" height="15" fill="rgb(240,68,47)" fg:x="148" fg:w="4"/><text x="0.7818%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (36 samples, 0.13%)</title><rect x="0.4779%" y="965" width="0.1294%" height="15" fill="rgb(210,16,53)" fg:x="133" fg:w="36"/><text x="0.7279%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (36 samples, 0.13%)</title><rect x="0.4779%" y="949" width="0.1294%" height="15" fill="rgb(235,124,12)" fg:x="133" fg:w="36"/><text x="0.7279%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (17 samples, 0.06%)</title><rect x="0.5462%" y="933" width="0.0611%" height="15" fill="rgb(224,169,11)" fg:x="152" fg:w="17"/><text x="0.7962%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (14 samples, 0.05%)</title><rect x="0.5570%" y="917" width="0.0503%" height="15" fill="rgb(250,166,2)" fg:x="155" fg:w="14"/><text x="0.8070%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (14 samples, 0.05%)</title><rect x="0.5570%" y="901" width="0.0503%" height="15" fill="rgb(242,216,29)" fg:x="155" fg:w="14"/><text x="0.8070%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (8 samples, 0.03%)</title><rect x="0.5786%" y="885" width="0.0287%" height="15" fill="rgb(230,116,27)" fg:x="161" fg:w="8"/><text x="0.8286%" y="895.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (7 samples, 0.03%)</title><rect x="0.5821%" y="869" width="0.0252%" height="15" fill="rgb(228,99,48)" fg:x="162" fg:w="7"/><text x="0.8321%" y="879.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (7 samples, 0.03%)</title><rect x="0.5821%" y="853" width="0.0252%" height="15" fill="rgb(253,11,6)" fg:x="162" fg:w="7"/><text x="0.8321%" y="863.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (7 samples, 0.03%)</title><rect x="0.5821%" y="837" width="0.0252%" height="15" fill="rgb(247,143,39)" fg:x="162" fg:w="7"/><text x="0.8321%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (4 samples, 0.01%)</title><rect x="0.5929%" y="821" width="0.0144%" height="15" fill="rgb(236,97,10)" fg:x="165" fg:w="4"/><text x="0.8429%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (5 samples, 0.02%)</title><rect x="0.6828%" y="933" width="0.0180%" height="15" fill="rgb(233,208,19)" fg:x="190" fg:w="5"/><text x="0.9328%" y="943.50"></text></g><g><title>core::ptr::read (5 samples, 0.02%)</title><rect x="0.6828%" y="917" width="0.0180%" height="15" fill="rgb(216,164,2)" fg:x="190" fg:w="5"/><text x="0.9328%" y="927.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (30 samples, 0.11%)</title><rect x="0.6109%" y="965" width="0.1078%" height="15" fill="rgb(220,129,5)" fg:x="170" fg:w="30"/><text x="0.8609%" y="975.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (28 samples, 0.10%)</title><rect x="0.6181%" y="949" width="0.1006%" height="15" fill="rgb(242,17,10)" fg:x="172" fg:w="28"/><text x="0.8681%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.02%)</title><rect x="0.7007%" y="933" width="0.0180%" height="15" fill="rgb(242,107,0)" fg:x="195" fg:w="5"/><text x="0.9507%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.02%)</title><rect x="0.7007%" y="917" width="0.0180%" height="15" fill="rgb(251,28,31)" fg:x="195" fg:w="5"/><text x="0.9507%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (115 samples, 0.41%)</title><rect x="0.3594%" y="981" width="0.4133%" height="15" fill="rgb(233,223,10)" fg:x="100" fg:w="115"/><text x="0.6094%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (14 samples, 0.05%)</title><rect x="0.7223%" y="965" width="0.0503%" height="15" fill="rgb(215,21,27)" fg:x="201" fg:w="14"/><text x="0.9723%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (14 samples, 0.05%)</title><rect x="0.7223%" y="949" width="0.0503%" height="15" fill="rgb(232,23,21)" fg:x="201" fg:w="14"/><text x="0.9723%" y="959.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (14 samples, 0.05%)</title><rect x="0.7223%" y="933" width="0.0503%" height="15" fill="rgb(244,5,23)" fg:x="201" fg:w="14"/><text x="0.9723%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (14 samples, 0.05%)</title><rect x="0.7223%" y="917" width="0.0503%" height="15" fill="rgb(226,81,46)" fg:x="201" fg:w="14"/><text x="0.9723%" y="927.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="0.7726%" y="981" width="0.0108%" height="15" fill="rgb(247,70,30)" fg:x="215" fg:w="3"/><text x="1.0226%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="0.7726%" y="965" width="0.0108%" height="15" fill="rgb(212,68,19)" fg:x="215" fg:w="3"/><text x="1.0226%" y="975.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (183 samples, 0.66%)</title><rect x="0.1761%" y="997" width="0.6576%" height="15" fill="rgb(240,187,13)" fg:x="49" fg:w="183"/><text x="0.4261%" y="1007.50"></text></g><g><title>std::time::Instant::now (12 samples, 0.04%)</title><rect x="0.7906%" y="981" width="0.0431%" height="15" fill="rgb(223,113,26)" fg:x="220" fg:w="12"/><text x="1.0406%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (10 samples, 0.04%)</title><rect x="0.7978%" y="965" width="0.0359%" height="15" fill="rgb(206,192,2)" fg:x="222" fg:w="10"/><text x="1.0478%" y="975.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (10 samples, 0.04%)</title><rect x="0.7978%" y="949" width="0.0359%" height="15" fill="rgb(241,108,4)" fg:x="222" fg:w="10"/><text x="1.0478%" y="959.50"></text></g><g><title>clock_gettime (10 samples, 0.04%)</title><rect x="0.7978%" y="933" width="0.0359%" height="15" fill="rgb(247,173,49)" fg:x="222" fg:w="10"/><text x="1.0478%" y="943.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.02%)</title><rect x="0.8157%" y="917" width="0.0180%" height="15" fill="rgb(224,114,35)" fg:x="227" fg:w="5"/><text x="1.0657%" y="927.50"></text></g><g><title>epoll_wait (10 samples, 0.04%)</title><rect x="0.8768%" y="965" width="0.0359%" height="15" fill="rgb(245,159,27)" fg:x="244" fg:w="10"/><text x="1.1268%" y="975.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.8804%" y="949" width="0.0323%" height="15" fill="rgb(245,172,44)" fg:x="245" fg:w="9"/><text x="1.1304%" y="959.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.8804%" y="933" width="0.0323%" height="15" fill="rgb(236,23,11)" fg:x="245" fg:w="9"/><text x="1.1304%" y="943.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.8804%" y="917" width="0.0323%" height="15" fill="rgb(205,117,38)" fg:x="245" fg:w="9"/><text x="1.1304%" y="927.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="0.8804%" y="901" width="0.0323%" height="15" fill="rgb(237,72,25)" fg:x="245" fg:w="9"/><text x="1.1304%" y="911.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="0.8840%" y="885" width="0.0287%" height="15" fill="rgb(244,70,9)" fg:x="246" fg:w="8"/><text x="1.1340%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="0.8912%" y="869" width="0.0216%" height="15" fill="rgb(217,125,39)" fg:x="248" fg:w="6"/><text x="1.1412%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.8984%" y="853" width="0.0144%" height="15" fill="rgb(235,36,10)" fg:x="250" fg:w="4"/><text x="1.1484%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.8984%" y="837" width="0.0144%" height="15" fill="rgb(251,123,47)" fg:x="250" fg:w="4"/><text x="1.1484%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.8984%" y="821" width="0.0144%" height="15" fill="rgb(221,13,13)" fg:x="250" fg:w="4"/><text x="1.1484%" y="831.50"></text></g><g><title>polling::epoll::Poller::modify (25 samples, 0.09%)</title><rect x="0.9127%" y="965" width="0.0898%" height="15" fill="rgb(238,131,9)" fg:x="254" fg:w="25"/><text x="1.1627%" y="975.50"></text></g><g><title>polling::epoll::Poller::ctl (23 samples, 0.08%)</title><rect x="0.9199%" y="949" width="0.0827%" height="15" fill="rgb(211,50,8)" fg:x="256" fg:w="23"/><text x="1.1699%" y="959.50"></text></g><g><title>epoll_ctl (21 samples, 0.08%)</title><rect x="0.9271%" y="933" width="0.0755%" height="15" fill="rgb(245,182,24)" fg:x="258" fg:w="21"/><text x="1.1771%" y="943.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="0.9379%" y="917" width="0.0647%" height="15" fill="rgb(242,14,37)" fg:x="261" fg:w="18"/><text x="1.1879%" y="927.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="0.9451%" y="901" width="0.0575%" height="15" fill="rgb(246,228,12)" fg:x="263" fg:w="16"/><text x="1.1951%" y="911.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="0.9451%" y="885" width="0.0575%" height="15" fill="rgb(213,55,15)" fg:x="263" fg:w="16"/><text x="1.1951%" y="895.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="0.9451%" y="869" width="0.0575%" height="15" fill="rgb(209,9,3)" fg:x="263" fg:w="16"/><text x="1.1951%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="0.9882%" y="853" width="0.0144%" height="15" fill="rgb(230,59,30)" fg:x="275" fg:w="4"/><text x="1.2382%" y="863.50"></text></g><g><title>read (17 samples, 0.06%)</title><rect x="1.0026%" y="965" width="0.0611%" height="15" fill="rgb(209,121,21)" fg:x="279" fg:w="17"/><text x="1.2526%" y="975.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="1.0026%" y="949" width="0.0611%" height="15" fill="rgb(220,109,13)" fg:x="279" fg:w="17"/><text x="1.2526%" y="959.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="1.0026%" y="933" width="0.0611%" height="15" fill="rgb(232,18,1)" fg:x="279" fg:w="17"/><text x="1.2526%" y="943.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="1.0026%" y="917" width="0.0611%" height="15" fill="rgb(215,41,42)" fg:x="279" fg:w="17"/><text x="1.2526%" y="927.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="1.0026%" y="901" width="0.0611%" height="15" fill="rgb(224,123,36)" fg:x="279" fg:w="17"/><text x="1.2526%" y="911.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="1.0062%" y="885" width="0.0575%" height="15" fill="rgb(240,125,3)" fg:x="280" fg:w="16"/><text x="1.2562%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="1.0457%" y="869" width="0.0180%" height="15" fill="rgb(205,98,50)" fg:x="291" fg:w="5"/><text x="1.2957%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="1.0457%" y="853" width="0.0180%" height="15" fill="rgb(205,185,37)" fg:x="291" fg:w="5"/><text x="1.2957%" y="863.50"></text></g><g><title>polling::epoll::Poller::wait (80 samples, 0.29%)</title><rect x="0.8768%" y="981" width="0.2875%" height="15" fill="rgb(238,207,15)" fg:x="244" fg:w="80"/><text x="1.1268%" y="991.50"></text></g><g><title>syscall (26 samples, 0.09%)</title><rect x="1.0709%" y="965" width="0.0934%" height="15" fill="rgb(213,199,42)" fg:x="298" fg:w="26"/><text x="1.3209%" y="975.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="1.0745%" y="949" width="0.0898%" height="15" fill="rgb(235,201,11)" fg:x="299" fg:w="25"/><text x="1.3245%" y="959.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="1.0781%" y="933" width="0.0862%" height="15" fill="rgb(207,46,11)" fg:x="300" fg:w="24"/><text x="1.3281%" y="943.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="1.0816%" y="917" width="0.0827%" height="15" fill="rgb(241,35,35)" fg:x="301" fg:w="23"/><text x="1.3316%" y="927.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="1.0888%" y="901" width="0.0755%" height="15" fill="rgb(243,32,47)" fg:x="303" fg:w="21"/><text x="1.3388%" y="911.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="1.0996%" y="885" width="0.0647%" height="15" fill="rgb(247,202,23)" fg:x="306" fg:w="18"/><text x="1.3496%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="1.1427%" y="869" width="0.0216%" height="15" fill="rgb(219,102,11)" fg:x="318" fg:w="6"/><text x="1.3927%" y="879.50"></text></g><g><title>polling::Poller::wait (91 samples, 0.33%)</title><rect x="0.8445%" y="997" width="0.3270%" height="15" fill="rgb(243,110,44)" fg:x="235" fg:w="91"/><text x="1.0945%" y="1007.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3 samples, 0.01%)</title><rect x="1.1715%" y="997" width="0.0108%" height="15" fill="rgb(222,74,54)" fg:x="326" fg:w="3"/><text x="1.4215%" y="1007.50"></text></g><g><title>async_executor::State::notify (9 samples, 0.03%)</title><rect x="1.1966%" y="869" width="0.0323%" height="15" fill="rgb(216,99,12)" fg:x="333" fg:w="9"/><text x="1.4466%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (9 samples, 0.03%)</title><rect x="1.1966%" y="853" width="0.0323%" height="15" fill="rgb(226,22,26)" fg:x="333" fg:w="9"/><text x="1.4466%" y="863.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (9 samples, 0.03%)</title><rect x="1.1966%" y="837" width="0.0323%" height="15" fill="rgb(217,163,10)" fg:x="333" fg:w="9"/><text x="1.4466%" y="847.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (9 samples, 0.03%)</title><rect x="1.1966%" y="821" width="0.0323%" height="15" fill="rgb(213,25,53)" fg:x="333" fg:w="9"/><text x="1.4466%" y="831.50"></text></g><g><title>parking::Unparker::unpark (9 samples, 0.03%)</title><rect x="1.1966%" y="805" width="0.0323%" height="15" fill="rgb(252,105,26)" fg:x="333" fg:w="9"/><text x="1.4466%" y="815.50"></text></g><g><title>parking::Inner::unpark (8 samples, 0.03%)</title><rect x="1.2002%" y="789" width="0.0287%" height="15" fill="rgb(220,39,43)" fg:x="334" fg:w="8"/><text x="1.4502%" y="799.50"></text></g><g><title>syscall (6 samples, 0.02%)</title><rect x="1.2074%" y="773" width="0.0216%" height="15" fill="rgb(229,68,48)" fg:x="336" fg:w="6"/><text x="1.4574%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="1.2074%" y="757" width="0.0216%" height="15" fill="rgb(252,8,32)" fg:x="336" fg:w="6"/><text x="1.4574%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="1.2074%" y="741" width="0.0216%" height="15" fill="rgb(223,20,43)" fg:x="336" fg:w="6"/><text x="1.4574%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="1.2074%" y="725" width="0.0216%" height="15" fill="rgb(229,81,49)" fg:x="336" fg:w="6"/><text x="1.4574%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="1.2110%" y="709" width="0.0180%" height="15" fill="rgb(236,28,36)" fg:x="337" fg:w="5"/><text x="1.4610%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="1.2110%" y="693" width="0.0180%" height="15" fill="rgb(249,185,26)" fg:x="337" fg:w="5"/><text x="1.4610%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="1.2146%" y="677" width="0.0144%" height="15" fill="rgb(249,174,33)" fg:x="338" fg:w="4"/><text x="1.4646%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="1.2182%" y="661" width="0.0108%" height="15" fill="rgb(233,201,37)" fg:x="339" fg:w="3"/><text x="1.4682%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (17 samples, 0.06%)</title><rect x="1.1966%" y="885" width="0.0611%" height="15" fill="rgb(221,78,26)" fg:x="333" fg:w="17"/><text x="1.4466%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (8 samples, 0.03%)</title><rect x="1.2290%" y="869" width="0.0287%" height="15" fill="rgb(250,127,30)" fg:x="342" fg:w="8"/><text x="1.4790%" y="879.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (6 samples, 0.02%)</title><rect x="1.2362%" y="853" width="0.0216%" height="15" fill="rgb(230,49,44)" fg:x="344" fg:w="6"/><text x="1.4862%" y="863.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.08%)</title><rect x="1.1823%" y="997" width="0.0791%" height="15" fill="rgb(229,67,23)" fg:x="329" fg:w="22"/><text x="1.4323%" y="1007.50"></text></g><g><title>std::panicking::try (22 samples, 0.08%)</title><rect x="1.1823%" y="981" width="0.0791%" height="15" fill="rgb(249,83,47)" fg:x="329" fg:w="22"/><text x="1.4323%" y="991.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.08%)</title><rect x="1.1823%" y="965" width="0.0791%" height="15" fill="rgb(215,43,3)" fg:x="329" fg:w="22"/><text x="1.4323%" y="975.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (22 samples, 0.08%)</title><rect x="1.1823%" y="949" width="0.0791%" height="15" fill="rgb(238,154,13)" fg:x="329" fg:w="22"/><text x="1.4323%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (22 samples, 0.08%)</title><rect x="1.1823%" y="933" width="0.0791%" height="15" fill="rgb(219,56,2)" fg:x="329" fg:w="22"/><text x="1.4323%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (22 samples, 0.08%)</title><rect x="1.1823%" y="917" width="0.0791%" height="15" fill="rgb(233,0,4)" fg:x="329" fg:w="22"/><text x="1.4323%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (20 samples, 0.07%)</title><rect x="1.1894%" y="901" width="0.0719%" height="15" fill="rgb(235,30,7)" fg:x="331" fg:w="20"/><text x="1.4394%" y="911.50"></text></g><g><title>async_io::reactor::ReactorLock::react (317 samples, 1.14%)</title><rect x="0.1330%" y="1013" width="1.1391%" height="15" fill="rgb(250,79,13)" fg:x="37" fg:w="317"/><text x="0.3830%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.01%)</title><rect x="1.2613%" y="997" width="0.0108%" height="15" fill="rgb(211,146,34)" fg:x="351" fg:w="3"/><text x="1.5113%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.01%)</title><rect x="1.2613%" y="981" width="0.0108%" height="15" fill="rgb(228,22,38)" fg:x="351" fg:w="3"/><text x="1.5113%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (3 samples, 0.01%)</title><rect x="1.2613%" y="965" width="0.0108%" height="15" fill="rgb(235,168,5)" fg:x="351" fg:w="3"/><text x="1.5113%" y="975.50"></text></g><g><title>core::time::Duration::from_micros (4 samples, 0.01%)</title><rect x="1.2757%" y="1013" width="0.0144%" height="15" fill="rgb(221,155,16)" fg:x="355" fg:w="4"/><text x="1.5257%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.01%)</title><rect x="1.3044%" y="981" width="0.0108%" height="15" fill="rgb(215,215,53)" fg:x="363" fg:w="3"/><text x="1.5544%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.01%)</title><rect x="1.3044%" y="965" width="0.0108%" height="15" fill="rgb(223,4,10)" fg:x="363" fg:w="3"/><text x="1.5544%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (46 samples, 0.17%)</title><rect x="1.3655%" y="901" width="0.1653%" height="15" fill="rgb(234,103,6)" fg:x="380" fg:w="46"/><text x="1.6155%" y="911.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (46 samples, 0.17%)</title><rect x="1.3655%" y="885" width="0.1653%" height="15" fill="rgb(227,97,0)" fg:x="380" fg:w="46"/><text x="1.6155%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (43 samples, 0.15%)</title><rect x="1.3763%" y="869" width="0.1545%" height="15" fill="rgb(234,150,53)" fg:x="383" fg:w="43"/><text x="1.6263%" y="879.50"></text></g><g><title>clock_gettime (43 samples, 0.15%)</title><rect x="1.3763%" y="853" width="0.1545%" height="15" fill="rgb(228,201,54)" fg:x="383" fg:w="43"/><text x="1.6263%" y="863.50"></text></g><g><title>__vdso_clock_gettime (23 samples, 0.08%)</title><rect x="1.4482%" y="837" width="0.0827%" height="15" fill="rgb(222,22,37)" fg:x="403" fg:w="23"/><text x="1.6982%" y="847.50"></text></g><g><title>[[vdso]] (9 samples, 0.03%)</title><rect x="1.4985%" y="821" width="0.0323%" height="15" fill="rgb(237,53,32)" fg:x="417" fg:w="9"/><text x="1.7485%" y="831.50"></text></g><g><title>std::sys::unix::futex::futex_wait (546 samples, 1.96%)</title><rect x="1.3440%" y="917" width="1.9621%" height="15" fill="rgb(233,25,53)" fg:x="374" fg:w="546"/><text x="1.5940%" y="927.50">s..</text></g><g><title>syscall (493 samples, 1.77%)</title><rect x="1.5344%" y="901" width="1.7716%" height="15" fill="rgb(210,40,34)" fg:x="427" fg:w="493"/><text x="1.7844%" y="911.50">s..</text></g><g><title>[unknown] (489 samples, 1.76%)</title><rect x="1.5488%" y="885" width="1.7572%" height="15" fill="rgb(241,220,44)" fg:x="431" fg:w="489"/><text x="1.7988%" y="895.50"></text></g><g><title>[unknown] (479 samples, 1.72%)</title><rect x="1.5847%" y="869" width="1.7213%" height="15" fill="rgb(235,28,35)" fg:x="441" fg:w="479"/><text x="1.8347%" y="879.50"></text></g><g><title>[unknown] (478 samples, 1.72%)</title><rect x="1.5883%" y="853" width="1.7177%" height="15" fill="rgb(210,56,17)" fg:x="442" fg:w="478"/><text x="1.8383%" y="863.50"></text></g><g><title>[unknown] (463 samples, 1.66%)</title><rect x="1.6422%" y="837" width="1.6638%" height="15" fill="rgb(224,130,29)" fg:x="457" fg:w="463"/><text x="1.8922%" y="847.50"></text></g><g><title>[unknown] (445 samples, 1.60%)</title><rect x="1.7069%" y="821" width="1.5991%" height="15" fill="rgb(235,212,8)" fg:x="475" fg:w="445"/><text x="1.9569%" y="831.50"></text></g><g><title>[unknown] (431 samples, 1.55%)</title><rect x="1.7572%" y="805" width="1.5488%" height="15" fill="rgb(223,33,50)" fg:x="489" fg:w="431"/><text x="2.0072%" y="815.50"></text></g><g><title>[unknown] (408 samples, 1.47%)</title><rect x="1.8399%" y="789" width="1.4661%" height="15" fill="rgb(219,149,13)" fg:x="512" fg:w="408"/><text x="2.0899%" y="799.50"></text></g><g><title>[unknown] (324 samples, 1.16%)</title><rect x="2.1417%" y="773" width="1.1643%" height="15" fill="rgb(250,156,29)" fg:x="596" fg:w="324"/><text x="2.3917%" y="783.50"></text></g><g><title>[unknown] (247 samples, 0.89%)</title><rect x="2.4184%" y="757" width="0.8876%" height="15" fill="rgb(216,193,19)" fg:x="673" fg:w="247"/><text x="2.6684%" y="767.50"></text></g><g><title>[unknown] (159 samples, 0.57%)</title><rect x="2.7347%" y="741" width="0.5714%" height="15" fill="rgb(216,135,14)" fg:x="761" fg:w="159"/><text x="2.9847%" y="751.50"></text></g><g><title>[unknown] (106 samples, 0.38%)</title><rect x="2.9251%" y="725" width="0.3809%" height="15" fill="rgb(241,47,5)" fg:x="814" fg:w="106"/><text x="3.1751%" y="735.50"></text></g><g><title>[unknown] (62 samples, 0.22%)</title><rect x="3.0832%" y="709" width="0.2228%" height="15" fill="rgb(233,42,35)" fg:x="858" fg:w="62"/><text x="3.3332%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="3.2881%" y="693" width="0.0180%" height="15" fill="rgb(231,13,6)" fg:x="915" fg:w="5"/><text x="3.5381%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (557 samples, 2.00%)</title><rect x="1.3260%" y="949" width="2.0016%" height="15" fill="rgb(207,181,40)" fg:x="369" fg:w="557"/><text x="1.5760%" y="959.50">s..</text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (552 samples, 1.98%)</title><rect x="1.3440%" y="933" width="1.9836%" height="15" fill="rgb(254,173,49)" fg:x="374" fg:w="552"/><text x="1.5940%" y="943.50">s..</text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (6 samples, 0.02%)</title><rect x="3.3060%" y="917" width="0.0216%" height="15" fill="rgb(221,1,38)" fg:x="920" fg:w="6"/><text x="3.5560%" y="927.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::wake (6 samples, 0.02%)</title><rect x="3.3060%" y="901" width="0.0216%" height="15" fill="rgb(206,124,46)" fg:x="920" fg:w="6"/><text x="3.5560%" y="911.50"></text></g><g><title>std::sys::unix::futex::futex_wake (6 samples, 0.02%)</title><rect x="3.3060%" y="885" width="0.0216%" height="15" fill="rgb(249,21,11)" fg:x="920" fg:w="6"/><text x="3.5560%" y="895.50"></text></g><g><title>syscall (6 samples, 0.02%)</title><rect x="3.3060%" y="869" width="0.0216%" height="15" fill="rgb(222,201,40)" fg:x="920" fg:w="6"/><text x="3.5560%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="3.3060%" y="853" width="0.0216%" height="15" fill="rgb(235,61,29)" fg:x="920" fg:w="6"/><text x="3.5560%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="3.3060%" y="837" width="0.0216%" height="15" fill="rgb(219,207,3)" fg:x="920" fg:w="6"/><text x="3.5560%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="3.3060%" y="821" width="0.0216%" height="15" fill="rgb(222,56,46)" fg:x="920" fg:w="6"/><text x="3.5560%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="3.3060%" y="805" width="0.0216%" height="15" fill="rgb(239,76,54)" fg:x="920" fg:w="6"/><text x="3.5560%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="3.3060%" y="789" width="0.0216%" height="15" fill="rgb(231,124,27)" fg:x="920" fg:w="6"/><text x="3.5560%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="3.3060%" y="773" width="0.0216%" height="15" fill="rgb(249,195,6)" fg:x="920" fg:w="6"/><text x="3.5560%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="3.3132%" y="757" width="0.0144%" height="15" fill="rgb(237,174,47)" fg:x="922" fg:w="4"/><text x="3.5632%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="3.3168%" y="741" width="0.0108%" height="15" fill="rgb(206,201,31)" fg:x="923" fg:w="3"/><text x="3.5668%" y="751.50"></text></g><g><title>std::panic::catch_unwind (921 samples, 3.31%)</title><rect x="0.0287%" y="1141" width="3.3096%" height="15" fill="rgb(231,57,52)" fg:x="8" fg:w="921"/><text x="0.2787%" y="1151.50">std..</text></g><g><title>std::panicking::try (921 samples, 3.31%)</title><rect x="0.0287%" y="1125" width="3.3096%" height="15" fill="rgb(248,177,22)" fg:x="8" fg:w="921"/><text x="0.2787%" y="1135.50">std..</text></g><g><title>std::panicking::try::do_call (921 samples, 3.31%)</title><rect x="0.0287%" y="1109" width="3.3096%" height="15" fill="rgb(215,211,37)" fg:x="8" fg:w="921"/><text x="0.2787%" y="1119.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (921 samples, 3.31%)</title><rect x="0.0287%" y="1093" width="3.3096%" height="15" fill="rgb(241,128,51)" fg:x="8" fg:w="921"/><text x="0.2787%" y="1103.50">&lt;co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (921 samples, 3.31%)</title><rect x="0.0287%" y="1077" width="3.3096%" height="15" fill="rgb(227,165,31)" fg:x="8" fg:w="921"/><text x="0.2787%" y="1087.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (921 samples, 3.31%)</title><rect x="0.0287%" y="1061" width="3.3096%" height="15" fill="rgb(228,167,24)" fg:x="8" fg:w="921"/><text x="0.2787%" y="1071.50">std..</text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (921 samples, 3.31%)</title><rect x="0.0287%" y="1045" width="3.3096%" height="15" fill="rgb(228,143,12)" fg:x="8" fg:w="921"/><text x="0.2787%" y="1055.50">asy..</text></g><g><title>async_io::driver::main_loop (921 samples, 3.31%)</title><rect x="0.0287%" y="1029" width="3.3096%" height="15" fill="rgb(249,149,8)" fg:x="8" fg:w="921"/><text x="0.2787%" y="1039.50">asy..</text></g><g><title>parking::Parker::park_timeout (570 samples, 2.05%)</title><rect x="1.2901%" y="1013" width="2.0483%" height="15" fill="rgb(243,35,44)" fg:x="359" fg:w="570"/><text x="1.5401%" y="1023.50">p..</text></g><g><title>parking::Inner::park (570 samples, 2.05%)</title><rect x="1.2901%" y="997" width="2.0483%" height="15" fill="rgb(246,89,9)" fg:x="359" fg:w="570"/><text x="1.5401%" y="1007.50">p..</text></g><g><title>std::sync::condvar::Condvar::wait_timeout (562 samples, 2.02%)</title><rect x="1.3188%" y="981" width="2.0195%" height="15" fill="rgb(233,213,13)" fg:x="367" fg:w="562"/><text x="1.5688%" y="991.50">s..</text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (562 samples, 2.02%)</title><rect x="1.3188%" y="965" width="2.0195%" height="15" fill="rgb(233,141,41)" fg:x="367" fg:w="562"/><text x="1.5688%" y="975.50">s..</text></g><g><title>async-io (929 samples, 3.34%)</title><rect x="0.0072%" y="1269" width="3.3384%" height="15" fill="rgb(239,167,4)" fg:x="2" fg:w="929"/><text x="0.2572%" y="1279.50">asy..</text></g><g><title>__clone (923 samples, 3.32%)</title><rect x="0.0287%" y="1253" width="3.3168%" height="15" fill="rgb(209,217,16)" fg:x="8" fg:w="923"/><text x="0.2787%" y="1263.50">__c..</text></g><g><title>[libc.so.6] (923 samples, 3.32%)</title><rect x="0.0287%" y="1237" width="3.3168%" height="15" fill="rgb(219,88,35)" fg:x="8" fg:w="923"/><text x="0.2787%" y="1247.50">[li..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (923 samples, 3.32%)</title><rect x="0.0287%" y="1221" width="3.3168%" height="15" fill="rgb(220,193,23)" fg:x="8" fg:w="923"/><text x="0.2787%" y="1231.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (923 samples, 3.32%)</title><rect x="0.0287%" y="1205" width="3.3168%" height="15" fill="rgb(230,90,52)" fg:x="8" fg:w="923"/><text x="0.2787%" y="1215.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (923 samples, 3.32%)</title><rect x="0.0287%" y="1189" width="3.3168%" height="15" fill="rgb(252,106,19)" fg:x="8" fg:w="923"/><text x="0.2787%" y="1199.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (923 samples, 3.32%)</title><rect x="0.0287%" y="1173" width="3.3168%" height="15" fill="rgb(206,74,20)" fg:x="8" fg:w="923"/><text x="0.2787%" y="1183.50">cor..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (923 samples, 3.32%)</title><rect x="0.0287%" y="1157" width="3.3168%" height="15" fill="rgb(230,138,44)" fg:x="8" fg:w="923"/><text x="0.2787%" y="1167.50">std..</text></g><g><title>[libc.so.6] (22 samples, 0.08%)</title><rect x="3.3563%" y="1237" width="0.0791%" height="15" fill="rgb(235,182,43)" fg:x="934" fg:w="22"/><text x="3.6063%" y="1247.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="3.3563%" y="1221" width="0.0791%" height="15" fill="rgb(242,16,51)" fg:x="934" fg:w="22"/><text x="3.6063%" y="1231.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="3.4713%" y="1093" width="0.0144%" height="15" fill="rgb(248,9,4)" fg:x="966" fg:w="4"/><text x="3.7213%" y="1103.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="3.4857%" y="997" width="0.0144%" height="15" fill="rgb(210,31,22)" fg:x="970" fg:w="4"/><text x="3.7357%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="3.4857%" y="981" width="0.0144%" height="15" fill="rgb(239,54,39)" fg:x="970" fg:w="4"/><text x="3.7357%" y="991.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="3.4857%" y="1013" width="0.0216%" height="15" fill="rgb(230,99,41)" fg:x="970" fg:w="6"/><text x="3.7357%" y="1023.50"></text></g><g><title>__rdl_alloc (9 samples, 0.03%)</title><rect x="3.4857%" y="1093" width="0.0323%" height="15" fill="rgb(253,106,12)" fg:x="970" fg:w="9"/><text x="3.7357%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (9 samples, 0.03%)</title><rect x="3.4857%" y="1077" width="0.0323%" height="15" fill="rgb(213,46,41)" fg:x="970" fg:w="9"/><text x="3.7357%" y="1087.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (9 samples, 0.03%)</title><rect x="3.4857%" y="1061" width="0.0323%" height="15" fill="rgb(215,133,35)" fg:x="970" fg:w="9"/><text x="3.7357%" y="1071.50"></text></g><g><title>posix_memalign (9 samples, 0.03%)</title><rect x="3.4857%" y="1045" width="0.0323%" height="15" fill="rgb(213,28,5)" fg:x="970" fg:w="9"/><text x="3.7357%" y="1055.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="3.4857%" y="1029" width="0.0323%" height="15" fill="rgb(215,77,49)" fg:x="970" fg:w="9"/><text x="3.7357%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="3.5073%" y="1013" width="0.0108%" height="15" fill="rgb(248,100,22)" fg:x="976" fg:w="3"/><text x="3.7573%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (17 samples, 0.06%)</title><rect x="3.4713%" y="1109" width="0.0611%" height="15" fill="rgb(208,67,9)" fg:x="966" fg:w="17"/><text x="3.7213%" y="1119.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::new (3 samples, 0.01%)</title><rect x="3.5216%" y="1093" width="0.0108%" height="15" fill="rgb(219,133,21)" fg:x="980" fg:w="3"/><text x="3.7716%" y="1103.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="3.5216%" y="1077" width="0.0108%" height="15" fill="rgb(246,46,29)" fg:x="980" fg:w="3"/><text x="3.7716%" y="1087.50"></text></g><g><title>async_executor::State::new (23 samples, 0.08%)</title><rect x="3.4641%" y="1125" width="0.0827%" height="15" fill="rgb(246,185,52)" fg:x="964" fg:w="23"/><text x="3.7141%" y="1135.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="3.5324%" y="1109" width="0.0144%" height="15" fill="rgb(252,136,11)" fg:x="983" fg:w="4"/><text x="3.7824%" y="1119.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="3.5324%" y="1093" width="0.0144%" height="15" fill="rgb(219,138,53)" fg:x="983" fg:w="4"/><text x="3.7824%" y="1103.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (26 samples, 0.09%)</title><rect x="3.4641%" y="1237" width="0.0934%" height="15" fill="rgb(211,51,23)" fg:x="964" fg:w="26"/><text x="3.7141%" y="1247.50"></text></g><g><title>once_cell::imp::initialize_or_wait (26 samples, 0.09%)</title><rect x="3.4641%" y="1221" width="0.0934%" height="15" fill="rgb(247,221,28)" fg:x="964" fg:w="26"/><text x="3.7141%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;once_cell::imp::Guard&gt; (26 samples, 0.09%)</title><rect x="3.4641%" y="1205" width="0.0934%" height="15" fill="rgb(251,222,45)" fg:x="964" fg:w="26"/><text x="3.7141%" y="1215.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (26 samples, 0.09%)</title><rect x="3.4641%" y="1189" width="0.0934%" height="15" fill="rgb(217,162,53)" fg:x="964" fg:w="26"/><text x="3.7141%" y="1199.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (26 samples, 0.09%)</title><rect x="3.4641%" y="1173" width="0.0934%" height="15" fill="rgb(229,93,14)" fg:x="964" fg:w="26"/><text x="3.7141%" y="1183.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (26 samples, 0.09%)</title><rect x="3.4641%" y="1157" width="0.0934%" height="15" fill="rgb(209,67,49)" fg:x="964" fg:w="26"/><text x="3.7141%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (26 samples, 0.09%)</title><rect x="3.4641%" y="1141" width="0.0934%" height="15" fill="rgb(213,87,29)" fg:x="964" fg:w="26"/><text x="3.7141%" y="1151.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="3.5468%" y="1125" width="0.0108%" height="15" fill="rgb(205,151,52)" fg:x="987" fg:w="3"/><text x="3.7968%" y="1135.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="3.5468%" y="1109" width="0.0108%" height="15" fill="rgb(253,215,39)" fg:x="987" fg:w="3"/><text x="3.7968%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="3.5468%" y="1093" width="0.0108%" height="15" fill="rgb(221,220,41)" fg:x="987" fg:w="3"/><text x="3.7968%" y="1103.50"></text></g><g><title>pthread_getaffinity_np (22 samples, 0.08%)</title><rect x="3.5755%" y="1237" width="0.0791%" height="15" fill="rgb(218,133,21)" fg:x="995" fg:w="22"/><text x="3.8255%" y="1247.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="3.5755%" y="1221" width="0.0791%" height="15" fill="rgb(221,193,43)" fg:x="995" fg:w="22"/><text x="3.8255%" y="1231.50"></text></g><g><title>syscall (4 samples, 0.01%)</title><rect x="3.6690%" y="1237" width="0.0144%" height="15" fill="rgb(240,128,52)" fg:x="1021" fg:w="4"/><text x="3.9190%" y="1247.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="3.6690%" y="1221" width="0.0144%" height="15" fill="rgb(253,114,12)" fg:x="1021" fg:w="4"/><text x="3.9190%" y="1231.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="3.6833%" y="1125" width="0.0108%" height="15" fill="rgb(215,223,47)" fg:x="1025" fg:w="3"/><text x="3.9333%" y="1135.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="3.6833%" y="1109" width="0.0108%" height="15" fill="rgb(248,225,23)" fg:x="1025" fg:w="3"/><text x="3.9333%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="3.6833%" y="1093" width="0.0108%" height="15" fill="rgb(250,108,0)" fg:x="1025" fg:w="3"/><text x="3.9333%" y="1103.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="3.6941%" y="1109" width="0.0108%" height="15" fill="rgb(228,208,7)" fg:x="1028" fg:w="3"/><text x="3.9441%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="3.6941%" y="1093" width="0.0108%" height="15" fill="rgb(244,45,10)" fg:x="1028" fg:w="3"/><text x="3.9441%" y="1103.50"></text></g><g><title>tokio::runtime::context::try_enter (8 samples, 0.03%)</title><rect x="3.6833%" y="1237" width="0.0287%" height="15" fill="rgb(207,125,25)" fg:x="1025" fg:w="8"/><text x="3.9333%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.03%)</title><rect x="3.6833%" y="1221" width="0.0287%" height="15" fill="rgb(210,195,18)" fg:x="1025" fg:w="8"/><text x="3.9333%" y="1231.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (8 samples, 0.03%)</title><rect x="3.6833%" y="1205" width="0.0287%" height="15" fill="rgb(249,80,12)" fg:x="1025" fg:w="8"/><text x="3.9333%" y="1215.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (8 samples, 0.03%)</title><rect x="3.6833%" y="1189" width="0.0287%" height="15" fill="rgb(221,65,9)" fg:x="1025" fg:w="8"/><text x="3.9333%" y="1199.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (8 samples, 0.03%)</title><rect x="3.6833%" y="1173" width="0.0287%" height="15" fill="rgb(235,49,36)" fg:x="1025" fg:w="8"/><text x="3.9333%" y="1183.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (8 samples, 0.03%)</title><rect x="3.6833%" y="1157" width="0.0287%" height="15" fill="rgb(225,32,20)" fg:x="1025" fg:w="8"/><text x="3.9333%" y="1167.50"></text></g><g><title>__cxa_thread_atexit_impl (8 samples, 0.03%)</title><rect x="3.6833%" y="1141" width="0.0287%" height="15" fill="rgb(215,141,46)" fg:x="1025" fg:w="8"/><text x="3.9333%" y="1151.50"></text></g><g><title>__libc_calloc (5 samples, 0.02%)</title><rect x="3.6941%" y="1125" width="0.0180%" height="15" fill="rgb(250,160,47)" fg:x="1028" fg:w="5"/><text x="3.9441%" y="1135.50"></text></g><g><title>[anon] (102 samples, 0.37%)</title><rect x="3.3527%" y="1253" width="0.3665%" height="15" fill="rgb(216,222,40)" fg:x="933" fg:w="102"/><text x="3.6027%" y="1263.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="3.8990%" y="1221" width="0.0395%" height="15" fill="rgb(234,217,39)" fg:x="1085" fg:w="11"/><text x="4.1490%" y="1231.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="3.9025%" y="1205" width="0.0359%" height="15" fill="rgb(207,178,40)" fg:x="1086" fg:w="10"/><text x="4.1525%" y="1215.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="3.9025%" y="1189" width="0.0359%" height="15" fill="rgb(221,136,13)" fg:x="1086" fg:w="10"/><text x="4.1525%" y="1199.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="3.9025%" y="1173" width="0.0359%" height="15" fill="rgb(249,199,10)" fg:x="1086" fg:w="10"/><text x="4.1525%" y="1183.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="3.9025%" y="1157" width="0.0359%" height="15" fill="rgb(249,222,13)" fg:x="1086" fg:w="10"/><text x="4.1525%" y="1167.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="3.9133%" y="1141" width="0.0252%" height="15" fill="rgb(244,185,38)" fg:x="1089" fg:w="7"/><text x="4.1633%" y="1151.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="3.9241%" y="1125" width="0.0144%" height="15" fill="rgb(236,202,9)" fg:x="1092" fg:w="4"/><text x="4.1741%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="3.9277%" y="1109" width="0.0108%" height="15" fill="rgb(250,229,37)" fg:x="1093" fg:w="3"/><text x="4.1777%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="3.9277%" y="1093" width="0.0108%" height="15" fill="rgb(206,174,23)" fg:x="1093" fg:w="3"/><text x="4.1777%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.03%)</title><rect x="3.9493%" y="405" width="0.0252%" height="15" fill="rgb(211,33,43)" fg:x="1099" fg:w="7"/><text x="4.1993%" y="415.50"></text></g><g><title>async_lock::mutex::Mutex&lt;T&gt;::lock::{{closure}} (7 samples, 0.03%)</title><rect x="3.9493%" y="389" width="0.0252%" height="15" fill="rgb(245,58,50)" fg:x="1099" fg:w="7"/><text x="4.1993%" y="399.50"></text></g><g><title>core::mem::drop (6 samples, 0.02%)</title><rect x="3.9744%" y="405" width="0.0216%" height="15" fill="rgb(244,68,36)" fg:x="1106" fg:w="6"/><text x="4.2244%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::mutex::MutexGuard&lt;zenoh_collections::stack_buffer::StackBuffer&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="3.9744%" y="389" width="0.0216%" height="15" fill="rgb(232,229,15)" fg:x="1106" fg:w="6"/><text x="4.2244%" y="399.50"></text></g><g><title>&lt;async_lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="3.9744%" y="373" width="0.0216%" height="15" fill="rgb(254,30,23)" fg:x="1106" fg:w="6"/><text x="4.2244%" y="383.50"></text></g><g><title>event_listener::Event::notify (6 samples, 0.02%)</title><rect x="3.9744%" y="357" width="0.0216%" height="15" fill="rgb(235,160,14)" fg:x="1106" fg:w="6"/><text x="4.2244%" y="367.50"></text></g><g><title>event_listener::full_fence (6 samples, 0.02%)</title><rect x="3.9744%" y="341" width="0.0216%" height="15" fill="rgb(212,155,44)" fg:x="1106" fg:w="6"/><text x="4.2244%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.02%)</title><rect x="3.9744%" y="325" width="0.0216%" height="15" fill="rgb(226,2,50)" fg:x="1106" fg:w="6"/><text x="4.2244%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="3.9744%" y="309" width="0.0216%" height="15" fill="rgb(234,177,6)" fg:x="1106" fg:w="6"/><text x="4.2244%" y="319.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18 samples, 0.06%)</title><rect x="3.9385%" y="549" width="0.0647%" height="15" fill="rgb(217,24,9)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="559.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.06%)</title><rect x="3.9385%" y="533" width="0.0647%" height="15" fill="rgb(220,13,46)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="543.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (18 samples, 0.06%)</title><rect x="3.9385%" y="517" width="0.0647%" height="15" fill="rgb(239,221,27)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.06%)</title><rect x="3.9385%" y="501" width="0.0647%" height="15" fill="rgb(222,198,25)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.06%)</title><rect x="3.9385%" y="485" width="0.0647%" height="15" fill="rgb(211,99,13)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="495.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (18 samples, 0.06%)</title><rect x="3.9385%" y="469" width="0.0647%" height="15" fill="rgb(232,111,31)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (18 samples, 0.06%)</title><rect x="3.9385%" y="453" width="0.0647%" height="15" fill="rgb(245,82,37)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.06%)</title><rect x="3.9385%" y="437" width="0.0647%" height="15" fill="rgb(227,149,46)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="447.50"></text></g><g><title>zenoh_collections::lifo_queue::LifoQueue&lt;T&gt;::push::{{closure}} (18 samples, 0.06%)</title><rect x="3.9385%" y="421" width="0.0647%" height="15" fill="rgb(218,36,50)" fg:x="1096" fg:w="18"/><text x="4.1885%" y="431.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="4.0032%" y="533" width="0.0180%" height="15" fill="rgb(226,80,48)" fg:x="1114" fg:w="5"/><text x="4.2532%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (5 samples, 0.02%)</title><rect x="4.0032%" y="517" width="0.0180%" height="15" fill="rgb(238,224,15)" fg:x="1114" fg:w="5"/><text x="4.2532%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (5 samples, 0.02%)</title><rect x="4.0032%" y="501" width="0.0180%" height="15" fill="rgb(241,136,10)" fg:x="1114" fg:w="5"/><text x="4.2532%" y="511.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="4.0103%" y="485" width="0.0108%" height="15" fill="rgb(208,32,45)" fg:x="1116" fg:w="3"/><text x="4.2603%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;,alloc::alloc::Global&gt;&gt; (3 samples, 0.01%)</title><rect x="4.0103%" y="469" width="0.0108%" height="15" fill="rgb(207,135,9)" fg:x="1116" fg:w="3"/><text x="4.2603%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="4.0103%" y="453" width="0.0108%" height="15" fill="rgb(206,86,44)" fg:x="1116" fg:w="3"/><text x="4.2603%" y="463.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="4.0211%" y="485" width="0.0180%" height="15" fill="rgb(245,177,15)" fg:x="1119" fg:w="5"/><text x="4.2711%" y="495.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="4.0211%" y="469" width="0.0180%" height="15" fill="rgb(206,64,50)" fg:x="1119" fg:w="5"/><text x="4.2711%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.03%)</title><rect x="4.0211%" y="501" width="0.0323%" height="15" fill="rgb(234,36,40)" fg:x="1119" fg:w="9"/><text x="4.2711%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (4 samples, 0.01%)</title><rect x="4.0391%" y="485" width="0.0144%" height="15" fill="rgb(213,64,8)" fg:x="1124" fg:w="4"/><text x="4.2891%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (4 samples, 0.01%)</title><rect x="4.0391%" y="469" width="0.0144%" height="15" fill="rgb(210,75,36)" fg:x="1124" fg:w="4"/><text x="4.2891%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="4.0391%" y="453" width="0.0144%" height="15" fill="rgb(229,88,21)" fg:x="1124" fg:w="4"/><text x="4.2891%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (4 samples, 0.01%)</title><rect x="4.0391%" y="437" width="0.0144%" height="15" fill="rgb(252,204,47)" fg:x="1124" fg:w="4"/><text x="4.2891%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (3 samples, 0.01%)</title><rect x="4.0427%" y="421" width="0.0108%" height="15" fill="rgb(208,77,27)" fg:x="1125" fg:w="3"/><text x="4.2927%" y="431.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.01%)</title><rect x="4.0427%" y="405" width="0.0108%" height="15" fill="rgb(221,76,26)" fg:x="1125" fg:w="3"/><text x="4.2927%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="4.0427%" y="389" width="0.0108%" height="15" fill="rgb(225,139,18)" fg:x="1125" fg:w="3"/><text x="4.2927%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="4.0427%" y="373" width="0.0108%" height="15" fill="rgb(230,137,11)" fg:x="1125" fg:w="3"/><text x="4.2927%" y="383.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="4.0427%" y="357" width="0.0108%" height="15" fill="rgb(212,28,1)" fg:x="1125" fg:w="3"/><text x="4.2927%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="4.0427%" y="341" width="0.0108%" height="15" fill="rgb(248,164,17)" fg:x="1125" fg:w="3"/><text x="4.2927%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (16 samples, 0.06%)</title><rect x="4.0032%" y="549" width="0.0575%" height="15" fill="rgb(222,171,42)" fg:x="1114" fg:w="16"/><text x="4.2532%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (11 samples, 0.04%)</title><rect x="4.0211%" y="533" width="0.0395%" height="15" fill="rgb(243,84,45)" fg:x="1119" fg:w="11"/><text x="4.2711%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="4.0211%" y="517" width="0.0395%" height="15" fill="rgb(252,49,23)" fg:x="1119" fg:w="11"/><text x="4.2711%" y="527.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="1221" width="0.1258%" height="15" fill="rgb(215,19,7)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1231.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (35 samples, 0.13%)</title><rect x="3.9385%" y="1205" width="0.1258%" height="15" fill="rgb(238,81,41)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="3.9385%" y="1189" width="0.1258%" height="15" fill="rgb(210,199,37)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="3.9385%" y="1173" width="0.1258%" height="15" fill="rgb(244,192,49)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1183.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="1157" width="0.1258%" height="15" fill="rgb(226,211,11)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1167.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="3.9385%" y="1141" width="0.1258%" height="15" fill="rgb(236,162,54)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (35 samples, 0.13%)</title><rect x="3.9385%" y="1125" width="0.1258%" height="15" fill="rgb(220,229,9)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.13%)</title><rect x="3.9385%" y="1109" width="0.1258%" height="15" fill="rgb(250,87,22)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.13%)</title><rect x="3.9385%" y="1093" width="0.1258%" height="15" fill="rgb(239,43,17)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="1077" width="0.1258%" height="15" fill="rgb(231,177,25)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1087.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="1061" width="0.1258%" height="15" fill="rgb(219,179,1)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="3.9385%" y="1045" width="0.1258%" height="15" fill="rgb(238,219,53)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="1029" width="0.1258%" height="15" fill="rgb(232,167,36)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="3.9385%" y="1013" width="0.1258%" height="15" fill="rgb(244,19,51)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="997" width="0.1258%" height="15" fill="rgb(224,6,22)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="3.9385%" y="981" width="0.1258%" height="15" fill="rgb(224,145,5)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="991.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="965" width="0.1258%" height="15" fill="rgb(234,130,49)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="975.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (35 samples, 0.13%)</title><rect x="3.9385%" y="949" width="0.1258%" height="15" fill="rgb(254,6,2)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (35 samples, 0.13%)</title><rect x="3.9385%" y="933" width="0.1258%" height="15" fill="rgb(208,96,46)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (35 samples, 0.13%)</title><rect x="3.9385%" y="917" width="0.1258%" height="15" fill="rgb(239,3,39)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="927.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.13%)</title><rect x="3.9385%" y="901" width="0.1258%" height="15" fill="rgb(233,210,1)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="911.50"></text></g><g><title>async_std::task::block_on::block_on (35 samples, 0.13%)</title><rect x="3.9385%" y="885" width="0.1258%" height="15" fill="rgb(244,137,37)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="895.50"></text></g><g><title>async_std::task::builder::Builder::blocking (35 samples, 0.13%)</title><rect x="3.9385%" y="869" width="0.1258%" height="15" fill="rgb(240,136,2)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.13%)</title><rect x="3.9385%" y="853" width="0.1258%" height="15" fill="rgb(239,18,37)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.13%)</title><rect x="3.9385%" y="837" width="0.1258%" height="15" fill="rgb(218,185,22)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="847.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="821" width="0.1258%" height="15" fill="rgb(225,218,4)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="831.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (35 samples, 0.13%)</title><rect x="3.9385%" y="805" width="0.1258%" height="15" fill="rgb(230,182,32)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.13%)</title><rect x="3.9385%" y="789" width="0.1258%" height="15" fill="rgb(242,56,43)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.13%)</title><rect x="3.9385%" y="773" width="0.1258%" height="15" fill="rgb(233,99,24)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="757" width="0.1258%" height="15" fill="rgb(234,209,42)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="767.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="741" width="0.1258%" height="15" fill="rgb(227,7,12)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="751.50"></text></g><g><title>async_global_executor::executor::block_on (35 samples, 0.13%)</title><rect x="3.9385%" y="725" width="0.1258%" height="15" fill="rgb(245,203,43)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.13%)</title><rect x="3.9385%" y="709" width="0.1258%" height="15" fill="rgb(238,205,33)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.13%)</title><rect x="3.9385%" y="693" width="0.1258%" height="15" fill="rgb(231,56,7)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="703.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="677" width="0.1258%" height="15" fill="rgb(244,186,29)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="687.50"></text></g><g><title>async_global_executor::reactor::block_on (35 samples, 0.13%)</title><rect x="3.9385%" y="661" width="0.1258%" height="15" fill="rgb(234,111,31)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="671.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="645" width="0.1258%" height="15" fill="rgb(241,149,10)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="655.50"></text></g><g><title>async_io::driver::block_on (35 samples, 0.13%)</title><rect x="3.9385%" y="629" width="0.1258%" height="15" fill="rgb(249,206,44)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="3.9385%" y="613" width="0.1258%" height="15" fill="rgb(251,153,30)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="623.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="597" width="0.1258%" height="15" fill="rgb(239,152,38)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="3.9385%" y="581" width="0.1258%" height="15" fill="rgb(249,139,47)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (35 samples, 0.13%)</title><rect x="3.9385%" y="565" width="0.1258%" height="15" fill="rgb(244,64,35)" fg:x="1096" fg:w="35"/><text x="4.1885%" y="575.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="4.0643%" y="485" width="0.0180%" height="15" fill="rgb(216,46,15)" fg:x="1131" fg:w="5"/><text x="4.3143%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (5 samples, 0.02%)</title><rect x="4.0643%" y="469" width="0.0180%" height="15" fill="rgb(250,74,19)" fg:x="1131" fg:w="5"/><text x="4.3143%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (5 samples, 0.02%)</title><rect x="4.0643%" y="453" width="0.0180%" height="15" fill="rgb(249,42,33)" fg:x="1131" fg:w="5"/><text x="4.3143%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (8 samples, 0.03%)</title><rect x="4.0643%" y="501" width="0.0287%" height="15" fill="rgb(242,149,17)" fg:x="1131" fg:w="8"/><text x="4.3143%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="4.0822%" y="485" width="0.0108%" height="15" fill="rgb(244,29,21)" fg:x="1136" fg:w="3"/><text x="4.3322%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="4.0822%" y="469" width="0.0108%" height="15" fill="rgb(220,130,37)" fg:x="1136" fg:w="3"/><text x="4.3322%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="4.0822%" y="453" width="0.0108%" height="15" fill="rgb(211,67,2)" fg:x="1136" fg:w="3"/><text x="4.3322%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (3 samples, 0.01%)</title><rect x="4.0822%" y="437" width="0.0108%" height="15" fill="rgb(235,68,52)" fg:x="1136" fg:w="3"/><text x="4.3322%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (3 samples, 0.01%)</title><rect x="4.0822%" y="421" width="0.0108%" height="15" fill="rgb(246,142,3)" fg:x="1136" fg:w="3"/><text x="4.3322%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="4.0822%" y="405" width="0.0108%" height="15" fill="rgb(241,25,7)" fg:x="1136" fg:w="3"/><text x="4.3322%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (3 samples, 0.01%)</title><rect x="4.0822%" y="389" width="0.0108%" height="15" fill="rgb(242,119,39)" fg:x="1136" fg:w="3"/><text x="4.3322%" y="399.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="1221" width="0.0359%" height="15" fill="rgb(241,98,45)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1231.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="1205" width="0.0359%" height="15" fill="rgb(254,28,30)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="1189" width="0.0359%" height="15" fill="rgb(241,142,54)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1199.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="1173" width="0.0359%" height="15" fill="rgb(222,85,15)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (10 samples, 0.04%)</title><rect x="4.0643%" y="1157" width="0.0359%" height="15" fill="rgb(210,85,47)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="1141" width="0.0359%" height="15" fill="rgb(224,206,25)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="1125" width="0.0359%" height="15" fill="rgb(243,201,19)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1135.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="1109" width="0.0359%" height="15" fill="rgb(236,59,4)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1119.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="1093" width="0.0359%" height="15" fill="rgb(254,179,45)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10 samples, 0.04%)</title><rect x="4.0643%" y="1077" width="0.0359%" height="15" fill="rgb(226,14,10)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.04%)</title><rect x="4.0643%" y="1061" width="0.0359%" height="15" fill="rgb(244,27,41)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.04%)</title><rect x="4.0643%" y="1045" width="0.0359%" height="15" fill="rgb(235,35,32)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1055.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="1029" width="0.0359%" height="15" fill="rgb(218,68,31)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1039.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="1013" width="0.0359%" height="15" fill="rgb(207,120,37)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="997" width="0.0359%" height="15" fill="rgb(227,98,0)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="981" width="0.0359%" height="15" fill="rgb(207,7,3)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="965" width="0.0359%" height="15" fill="rgb(206,98,19)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="975.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="949" width="0.0359%" height="15" fill="rgb(217,5,26)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="933" width="0.0359%" height="15" fill="rgb(235,190,38)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="943.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="917" width="0.0359%" height="15" fill="rgb(247,86,24)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="927.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (10 samples, 0.04%)</title><rect x="4.0643%" y="901" width="0.0359%" height="15" fill="rgb(205,101,16)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (10 samples, 0.04%)</title><rect x="4.0643%" y="885" width="0.0359%" height="15" fill="rgb(246,168,33)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (10 samples, 0.04%)</title><rect x="4.0643%" y="869" width="0.0359%" height="15" fill="rgb(231,114,1)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="879.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="4.0643%" y="853" width="0.0359%" height="15" fill="rgb(207,184,53)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="863.50"></text></g><g><title>async_std::task::block_on::block_on (10 samples, 0.04%)</title><rect x="4.0643%" y="837" width="0.0359%" height="15" fill="rgb(224,95,51)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="847.50"></text></g><g><title>async_std::task::builder::Builder::blocking (10 samples, 0.04%)</title><rect x="4.0643%" y="821" width="0.0359%" height="15" fill="rgb(212,188,45)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.04%)</title><rect x="4.0643%" y="805" width="0.0359%" height="15" fill="rgb(223,154,38)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.04%)</title><rect x="4.0643%" y="789" width="0.0359%" height="15" fill="rgb(251,22,52)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="799.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="773" width="0.0359%" height="15" fill="rgb(229,209,22)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (10 samples, 0.04%)</title><rect x="4.0643%" y="757" width="0.0359%" height="15" fill="rgb(234,138,34)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.04%)</title><rect x="4.0643%" y="741" width="0.0359%" height="15" fill="rgb(212,95,11)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.04%)</title><rect x="4.0643%" y="725" width="0.0359%" height="15" fill="rgb(240,179,47)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="709" width="0.0359%" height="15" fill="rgb(240,163,11)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="719.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="693" width="0.0359%" height="15" fill="rgb(236,37,12)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="703.50"></text></g><g><title>async_global_executor::executor::block_on (10 samples, 0.04%)</title><rect x="4.0643%" y="677" width="0.0359%" height="15" fill="rgb(232,164,16)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.04%)</title><rect x="4.0643%" y="661" width="0.0359%" height="15" fill="rgb(244,205,15)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.04%)</title><rect x="4.0643%" y="645" width="0.0359%" height="15" fill="rgb(223,117,47)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="655.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="629" width="0.0359%" height="15" fill="rgb(244,107,35)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="639.50"></text></g><g><title>async_global_executor::reactor::block_on (10 samples, 0.04%)</title><rect x="4.0643%" y="613" width="0.0359%" height="15" fill="rgb(205,140,8)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="623.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="597" width="0.0359%" height="15" fill="rgb(228,84,46)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="607.50"></text></g><g><title>async_io::driver::block_on (10 samples, 0.04%)</title><rect x="4.0643%" y="581" width="0.0359%" height="15" fill="rgb(254,188,9)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="565" width="0.0359%" height="15" fill="rgb(206,112,54)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="575.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="549" width="0.0359%" height="15" fill="rgb(216,84,49)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="4.0643%" y="533" width="0.0359%" height="15" fill="rgb(214,194,35)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (10 samples, 0.04%)</title><rect x="4.0643%" y="517" width="0.0359%" height="15" fill="rgb(249,28,3)" fg:x="1131" fg:w="10"/><text x="4.3143%" y="527.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (6 samples, 0.02%)</title><rect x="4.1074%" y="1173" width="0.0216%" height="15" fill="rgb(222,56,52)" fg:x="1143" fg:w="6"/><text x="4.3574%" y="1183.50"></text></g><g><title>zenoh::net::routing::queries::declare_client_queryable (6 samples, 0.02%)</title><rect x="4.1074%" y="1157" width="0.0216%" height="15" fill="rgb(245,217,50)" fg:x="1143" fg:w="6"/><text x="4.3574%" y="1167.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (5 samples, 0.02%)</title><rect x="4.1110%" y="1141" width="0.0180%" height="15" fill="rgb(213,201,24)" fg:x="1144" fg:w="5"/><text x="4.3610%" y="1151.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches (5 samples, 0.02%)</title><rect x="4.1110%" y="1125" width="0.0180%" height="15" fill="rgb(248,116,28)" fg:x="1144" fg:w="5"/><text x="4.3610%" y="1135.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (5 samples, 0.02%)</title><rect x="4.1110%" y="1109" width="0.0180%" height="15" fill="rgb(219,72,43)" fg:x="1144" fg:w="5"/><text x="4.3610%" y="1119.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (4 samples, 0.01%)</title><rect x="4.1146%" y="1093" width="0.0144%" height="15" fill="rgb(209,138,14)" fg:x="1145" fg:w="4"/><text x="4.3646%" y="1103.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (3 samples, 0.01%)</title><rect x="4.1182%" y="1077" width="0.0108%" height="15" fill="rgb(222,18,33)" fg:x="1146" fg:w="3"/><text x="4.3682%" y="1087.50"></text></g><g><title>&lt;zenoh::queryable::QueryableBuilder as core::future::future::Future&gt;::poll (8 samples, 0.03%)</title><rect x="4.1074%" y="1205" width="0.0287%" height="15" fill="rgb(213,199,7)" fg:x="1143" fg:w="8"/><text x="4.3574%" y="1215.50"></text></g><g><title>&lt;zenoh::queryable::QueryableBuilder as zenoh_sync::Runnable&gt;::run (8 samples, 0.03%)</title><rect x="4.1074%" y="1189" width="0.0287%" height="15" fill="rgb(250,110,10)" fg:x="1143" fg:w="8"/><text x="4.3574%" y="1199.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="4.1505%" y="1141" width="0.0862%" height="15" fill="rgb(248,123,6)" fg:x="1155" fg:w="24"/><text x="4.4005%" y="1151.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="4.1541%" y="1125" width="0.0827%" height="15" fill="rgb(206,91,31)" fg:x="1156" fg:w="23"/><text x="4.4041%" y="1135.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="4.1577%" y="1109" width="0.0791%" height="15" fill="rgb(211,154,13)" fg:x="1157" fg:w="22"/><text x="4.4077%" y="1119.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="4.1613%" y="1093" width="0.0755%" height="15" fill="rgb(225,148,7)" fg:x="1158" fg:w="21"/><text x="4.4113%" y="1103.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="4.1828%" y="1077" width="0.0539%" height="15" fill="rgb(220,160,43)" fg:x="1164" fg:w="15"/><text x="4.4328%" y="1087.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="4.1900%" y="1061" width="0.0467%" height="15" fill="rgb(213,52,39)" fg:x="1166" fg:w="13"/><text x="4.4400%" y="1071.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="4.1972%" y="1045" width="0.0395%" height="15" fill="rgb(243,137,7)" fg:x="1168" fg:w="11"/><text x="4.4472%" y="1055.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="4.2044%" y="1029" width="0.0323%" height="15" fill="rgb(230,79,13)" fg:x="1170" fg:w="9"/><text x="4.4544%" y="1039.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="4.2116%" y="1013" width="0.0252%" height="15" fill="rgb(247,105,23)" fg:x="1172" fg:w="7"/><text x="4.4616%" y="1023.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="4.2116%" y="997" width="0.0252%" height="15" fill="rgb(223,179,41)" fg:x="1172" fg:w="7"/><text x="4.4616%" y="1007.50"></text></g><g><title>__rust_probestack (10 samples, 0.04%)</title><rect x="4.2367%" y="1141" width="0.0359%" height="15" fill="rgb(218,9,34)" fg:x="1179" fg:w="10"/><text x="4.4867%" y="1151.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.2511%" y="1125" width="0.0216%" height="15" fill="rgb(222,106,8)" fg:x="1183" fg:w="6"/><text x="4.5011%" y="1135.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="4.2583%" y="1109" width="0.0144%" height="15" fill="rgb(211,220,0)" fg:x="1185" fg:w="4"/><text x="4.5083%" y="1119.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (3 samples, 0.01%)</title><rect x="4.2763%" y="1125" width="0.0108%" height="15" fill="rgb(229,52,16)" fg:x="1190" fg:w="3"/><text x="4.5263%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="4.3122%" y="997" width="0.0144%" height="15" fill="rgb(212,155,18)" fg:x="1200" fg:w="4"/><text x="4.5622%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (4 samples, 0.01%)</title><rect x="4.3122%" y="981" width="0.0144%" height="15" fill="rgb(242,21,14)" fg:x="1200" fg:w="4"/><text x="4.5622%" y="991.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (9 samples, 0.03%)</title><rect x="4.3122%" y="1013" width="0.0323%" height="15" fill="rgb(222,19,48)" fg:x="1200" fg:w="9"/><text x="4.5622%" y="1023.50"></text></g><g><title>async_io::reactor::Reactor::notify (5 samples, 0.02%)</title><rect x="4.3266%" y="997" width="0.0180%" height="15" fill="rgb(232,45,27)" fg:x="1204" fg:w="5"/><text x="4.5766%" y="1007.50"></text></g><g><title>polling::Poller::notify (5 samples, 0.02%)</title><rect x="4.3266%" y="981" width="0.0180%" height="15" fill="rgb(249,103,42)" fg:x="1204" fg:w="5"/><text x="4.5766%" y="991.50"></text></g><g><title>polling::epoll::Poller::notify (4 samples, 0.01%)</title><rect x="4.3302%" y="965" width="0.0144%" height="15" fill="rgb(246,81,33)" fg:x="1205" fg:w="4"/><text x="4.5802%" y="975.50"></text></g><g><title>write (4 samples, 0.01%)</title><rect x="4.3302%" y="949" width="0.0144%" height="15" fill="rgb(252,33,42)" fg:x="1205" fg:w="4"/><text x="4.5802%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.3338%" y="933" width="0.0108%" height="15" fill="rgb(209,212,41)" fg:x="1206" fg:w="3"/><text x="4.5838%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.3338%" y="917" width="0.0108%" height="15" fill="rgb(207,154,6)" fg:x="1206" fg:w="3"/><text x="4.5838%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.3338%" y="901" width="0.0108%" height="15" fill="rgb(223,64,47)" fg:x="1206" fg:w="3"/><text x="4.5838%" y="911.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.05%)</title><rect x="4.2978%" y="1061" width="0.0503%" height="15" fill="rgb(211,161,38)" fg:x="1196" fg:w="14"/><text x="4.5478%" y="1071.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (14 samples, 0.05%)</title><rect x="4.2978%" y="1045" width="0.0503%" height="15" fill="rgb(219,138,40)" fg:x="1196" fg:w="14"/><text x="4.5478%" y="1055.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (12 samples, 0.04%)</title><rect x="4.3050%" y="1029" width="0.0431%" height="15" fill="rgb(241,228,46)" fg:x="1198" fg:w="12"/><text x="4.5550%" y="1039.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (22 samples, 0.08%)</title><rect x="4.2870%" y="1109" width="0.0791%" height="15" fill="rgb(223,209,38)" fg:x="1193" fg:w="22"/><text x="4.5370%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="4.2978%" y="1093" width="0.0683%" height="15" fill="rgb(236,164,45)" fg:x="1196" fg:w="19"/><text x="4.5478%" y="1103.50"></text></g><g><title>async_std::io::timeout::timeout::{{closure}} (19 samples, 0.07%)</title><rect x="4.2978%" y="1077" width="0.0683%" height="15" fill="rgb(231,15,5)" fg:x="1196" fg:w="19"/><text x="4.5478%" y="1087.50"></text></g><g><title>async_std::utils::timer_after (5 samples, 0.02%)</title><rect x="4.3481%" y="1061" width="0.0180%" height="15" fill="rgb(252,35,15)" fg:x="1210" fg:w="5"/><text x="4.5981%" y="1071.50"></text></g><g><title>async_io::Timer::after (5 samples, 0.02%)</title><rect x="4.3481%" y="1045" width="0.0180%" height="15" fill="rgb(248,181,18)" fg:x="1210" fg:w="5"/><text x="4.5981%" y="1055.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.01%)</title><rect x="4.3517%" y="1029" width="0.0144%" height="15" fill="rgb(233,39,42)" fg:x="1211" fg:w="4"/><text x="4.6017%" y="1039.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="4.3553%" y="1013" width="0.0108%" height="15" fill="rgb(238,110,33)" fg:x="1212" fg:w="3"/><text x="4.6053%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.01%)</title><rect x="4.3553%" y="997" width="0.0108%" height="15" fill="rgb(233,195,10)" fg:x="1212" fg:w="3"/><text x="4.6053%" y="1007.50"></text></g><g><title>clock_gettime (3 samples, 0.01%)</title><rect x="4.3553%" y="981" width="0.0108%" height="15" fill="rgb(254,105,3)" fg:x="1212" fg:w="3"/><text x="4.6053%" y="991.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (9 samples, 0.03%)</title><rect x="4.3949%" y="1093" width="0.0323%" height="15" fill="rgb(221,225,9)" fg:x="1223" fg:w="9"/><text x="4.6449%" y="1103.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="4.3949%" y="1077" width="0.0323%" height="15" fill="rgb(224,227,45)" fg:x="1223" fg:w="9"/><text x="4.6449%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (4 samples, 0.01%)</title><rect x="4.4452%" y="1061" width="0.0144%" height="15" fill="rgb(229,198,43)" fg:x="1237" fg:w="4"/><text x="4.6952%" y="1071.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}}::{{closure}} (4 samples, 0.01%)</title><rect x="4.4452%" y="1045" width="0.0144%" height="15" fill="rgb(206,209,35)" fg:x="1237" fg:w="4"/><text x="4.6952%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="4.4452%" y="1029" width="0.0144%" height="15" fill="rgb(245,195,53)" fg:x="1237" fg:w="4"/><text x="4.6952%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="4.4488%" y="1013" width="0.0108%" height="15" fill="rgb(240,92,26)" fg:x="1238" fg:w="3"/><text x="4.6988%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.01%)</title><rect x="4.4488%" y="997" width="0.0108%" height="15" fill="rgb(207,40,23)" fg:x="1238" fg:w="3"/><text x="4.6988%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.01%)</title><rect x="4.4488%" y="981" width="0.0108%" height="15" fill="rgb(223,111,35)" fg:x="1238" fg:w="3"/><text x="4.6988%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.01%)</title><rect x="4.4488%" y="965" width="0.0108%" height="15" fill="rgb(229,147,28)" fg:x="1238" fg:w="3"/><text x="4.6988%" y="975.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="4.4595%" y="997" width="0.0216%" height="15" fill="rgb(211,29,28)" fg:x="1241" fg:w="6"/><text x="4.7095%" y="1007.50"></text></g><g><title>event_listener::List::remove (3 samples, 0.01%)</title><rect x="4.4703%" y="981" width="0.0108%" height="15" fill="rgb(228,72,33)" fg:x="1244" fg:w="3"/><text x="4.7203%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="4.4595%" y="1029" width="0.0395%" height="15" fill="rgb(205,214,31)" fg:x="1241" fg:w="11"/><text x="4.7095%" y="1039.50"></text></g><g><title>async_lock::mutex::Mutex&lt;T&gt;::acquire_slow::{{closure}} (11 samples, 0.04%)</title><rect x="4.4595%" y="1013" width="0.0395%" height="15" fill="rgb(224,111,15)" fg:x="1241" fg:w="11"/><text x="4.7095%" y="1023.50"></text></g><g><title>event_listener::Event::listen (5 samples, 0.02%)</title><rect x="4.4811%" y="997" width="0.0180%" height="15" fill="rgb(253,21,26)" fg:x="1247" fg:w="5"/><text x="4.7311%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.05%)</title><rect x="4.4595%" y="1061" width="0.0467%" height="15" fill="rgb(245,139,43)" fg:x="1241" fg:w="13"/><text x="4.7095%" y="1071.50"></text></g><g><title>async_lock::mutex::Mutex&lt;T&gt;::lock::{{closure}} (13 samples, 0.05%)</title><rect x="4.4595%" y="1045" width="0.0467%" height="15" fill="rgb(252,170,7)" fg:x="1241" fg:w="13"/><text x="4.7095%" y="1055.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.01%)</title><rect x="4.5242%" y="917" width="0.0108%" height="15" fill="rgb(231,118,14)" fg:x="1259" fg:w="3"/><text x="4.7742%" y="927.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (3 samples, 0.01%)</title><rect x="4.5242%" y="901" width="0.0108%" height="15" fill="rgb(238,83,0)" fg:x="1259" fg:w="3"/><text x="4.7742%" y="911.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (3 samples, 0.01%)</title><rect x="4.5242%" y="885" width="0.0108%" height="15" fill="rgb(221,39,39)" fg:x="1259" fg:w="3"/><text x="4.7742%" y="895.50"></text></g><g><title>async_executor::State::notify (5 samples, 0.02%)</title><rect x="4.5206%" y="933" width="0.0180%" height="15" fill="rgb(222,119,46)" fg:x="1258" fg:w="5"/><text x="4.7706%" y="943.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (8 samples, 0.03%)</title><rect x="4.5206%" y="949" width="0.0287%" height="15" fill="rgb(222,165,49)" fg:x="1258" fg:w="8"/><text x="4.7706%" y="959.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (3 samples, 0.01%)</title><rect x="4.5386%" y="933" width="0.0108%" height="15" fill="rgb(219,113,52)" fg:x="1263" fg:w="3"/><text x="4.7886%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::mutex::MutexGuard&lt;usize&gt;&gt; (12 samples, 0.04%)</title><rect x="4.5098%" y="1061" width="0.0431%" height="15" fill="rgb(214,7,15)" fg:x="1255" fg:w="12"/><text x="4.7598%" y="1071.50"></text></g><g><title>&lt;async_lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="4.5098%" y="1045" width="0.0431%" height="15" fill="rgb(235,32,4)" fg:x="1255" fg:w="12"/><text x="4.7598%" y="1055.50"></text></g><g><title>event_listener::Event::notify (12 samples, 0.04%)</title><rect x="4.5098%" y="1029" width="0.0431%" height="15" fill="rgb(238,90,54)" fg:x="1255" fg:w="12"/><text x="4.7598%" y="1039.50"></text></g><g><title>event_listener::List::notify (11 samples, 0.04%)</title><rect x="4.5134%" y="1013" width="0.0395%" height="15" fill="rgb(213,208,19)" fg:x="1256" fg:w="11"/><text x="4.7634%" y="1023.50"></text></g><g><title>core::task::wake::Waker::wake (10 samples, 0.04%)</title><rect x="4.5170%" y="997" width="0.0359%" height="15" fill="rgb(233,156,4)" fg:x="1257" fg:w="10"/><text x="4.7670%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (10 samples, 0.04%)</title><rect x="4.5170%" y="981" width="0.0359%" height="15" fill="rgb(207,194,5)" fg:x="1257" fg:w="10"/><text x="4.7670%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (10 samples, 0.04%)</title><rect x="4.5170%" y="965" width="0.0359%" height="15" fill="rgb(206,111,30)" fg:x="1257" fg:w="10"/><text x="4.7670%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinHandle&lt;()&gt;&gt; (3 samples, 0.01%)</title><rect x="4.5530%" y="1061" width="0.0108%" height="15" fill="rgb(243,70,54)" fg:x="1267" fg:w="3"/><text x="4.8030%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinInner&lt;()&gt;&gt; (3 samples, 0.01%)</title><rect x="4.5530%" y="1045" width="0.0108%" height="15" fill="rgb(242,28,8)" fg:x="1267" fg:w="3"/><text x="4.8030%" y="1055.50"></text></g><g><title>std::thread::Builder::new (4 samples, 0.01%)</title><rect x="4.5637%" y="1061" width="0.0144%" height="15" fill="rgb(219,106,18)" fg:x="1270" fg:w="4"/><text x="4.8137%" y="1071.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="4.5637%" y="1045" width="0.0144%" height="15" fill="rgb(244,222,10)" fg:x="1270" fg:w="4"/><text x="4.8137%" y="1055.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="4.5637%" y="1029" width="0.0144%" height="15" fill="rgb(236,179,52)" fg:x="1270" fg:w="4"/><text x="4.8137%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.01%)</title><rect x="4.6033%" y="853" width="0.0108%" height="15" fill="rgb(213,23,39)" fg:x="1281" fg:w="3"/><text x="4.8533%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="4.6033%" y="837" width="0.0108%" height="15" fill="rgb(238,48,10)" fg:x="1281" fg:w="3"/><text x="4.8533%" y="847.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.01%)</title><rect x="4.6033%" y="821" width="0.0108%" height="15" fill="rgb(251,196,23)" fg:x="1281" fg:w="3"/><text x="4.8533%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.03%)</title><rect x="4.5925%" y="1013" width="0.0287%" height="15" fill="rgb(250,152,24)" fg:x="1278" fg:w="8"/><text x="4.8425%" y="1023.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (8 samples, 0.03%)</title><rect x="4.5925%" y="997" width="0.0287%" height="15" fill="rgb(209,150,17)" fg:x="1278" fg:w="8"/><text x="4.8425%" y="1007.50"></text></g><g><title>alloc::ffi::c_str::CString::new (8 samples, 0.03%)</title><rect x="4.5925%" y="981" width="0.0287%" height="15" fill="rgb(234,202,34)" fg:x="1278" fg:w="8"/><text x="4.8425%" y="991.50"></text></g><g><title>&lt;T as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (8 samples, 0.03%)</title><rect x="4.5925%" y="965" width="0.0287%" height="15" fill="rgb(253,148,53)" fg:x="1278" fg:w="8"/><text x="4.8425%" y="975.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (8 samples, 0.03%)</title><rect x="4.5925%" y="949" width="0.0287%" height="15" fill="rgb(218,129,16)" fg:x="1278" fg:w="8"/><text x="4.8425%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (6 samples, 0.02%)</title><rect x="4.5997%" y="933" width="0.0216%" height="15" fill="rgb(216,85,19)" fg:x="1280" fg:w="6"/><text x="4.8497%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.02%)</title><rect x="4.5997%" y="917" width="0.0216%" height="15" fill="rgb(235,228,7)" fg:x="1280" fg:w="6"/><text x="4.8497%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.02%)</title><rect x="4.5997%" y="901" width="0.0216%" height="15" fill="rgb(245,175,0)" fg:x="1280" fg:w="6"/><text x="4.8497%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (6 samples, 0.02%)</title><rect x="4.5997%" y="885" width="0.0216%" height="15" fill="rgb(208,168,36)" fg:x="1280" fg:w="6"/><text x="4.8497%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="4.5997%" y="869" width="0.0216%" height="15" fill="rgb(246,171,24)" fg:x="1280" fg:w="6"/><text x="4.8497%" y="879.50"></text></g><g><title>pthread_attr_init (3 samples, 0.01%)</title><rect x="4.6248%" y="997" width="0.0108%" height="15" fill="rgb(215,142,24)" fg:x="1287" fg:w="3"/><text x="4.8748%" y="1007.50"></text></g><g><title>__getpagesize (3 samples, 0.01%)</title><rect x="4.6248%" y="981" width="0.0108%" height="15" fill="rgb(250,187,7)" fg:x="1287" fg:w="3"/><text x="4.8748%" y="991.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="4.6572%" y="981" width="0.0287%" height="15" fill="rgb(228,66,33)" fg:x="1296" fg:w="8"/><text x="4.9072%" y="991.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="4.6644%" y="965" width="0.0216%" height="15" fill="rgb(234,215,21)" fg:x="1298" fg:w="6"/><text x="4.9144%" y="975.50"></text></g><g><title>__clone (6 samples, 0.02%)</title><rect x="4.6644%" y="949" width="0.0216%" height="15" fill="rgb(222,191,20)" fg:x="1298" fg:w="6"/><text x="4.9144%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.6644%" y="933" width="0.0216%" height="15" fill="rgb(245,79,54)" fg:x="1298" fg:w="6"/><text x="4.9144%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.6644%" y="917" width="0.0216%" height="15" fill="rgb(240,10,37)" fg:x="1298" fg:w="6"/><text x="4.9144%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.6644%" y="901" width="0.0216%" height="15" fill="rgb(214,192,32)" fg:x="1298" fg:w="6"/><text x="4.9144%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.6644%" y="885" width="0.0216%" height="15" fill="rgb(209,36,54)" fg:x="1298" fg:w="6"/><text x="4.9144%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.6751%" y="869" width="0.0108%" height="15" fill="rgb(220,10,11)" fg:x="1301" fg:w="3"/><text x="4.9251%" y="879.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="4.6859%" y="981" width="0.0359%" height="15" fill="rgb(221,106,17)" fg:x="1304" fg:w="10"/><text x="4.9359%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="4.6967%" y="965" width="0.0252%" height="15" fill="rgb(251,142,44)" fg:x="1307" fg:w="7"/><text x="4.9467%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="4.6967%" y="949" width="0.0252%" height="15" fill="rgb(238,13,15)" fg:x="1307" fg:w="7"/><text x="4.9467%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.7003%" y="933" width="0.0216%" height="15" fill="rgb(208,107,27)" fg:x="1308" fg:w="6"/><text x="4.9503%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.7003%" y="917" width="0.0216%" height="15" fill="rgb(205,136,37)" fg:x="1308" fg:w="6"/><text x="4.9503%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="4.7039%" y="901" width="0.0180%" height="15" fill="rgb(250,205,27)" fg:x="1309" fg:w="5"/><text x="4.9539%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="4.7039%" y="885" width="0.0180%" height="15" fill="rgb(210,80,43)" fg:x="1309" fg:w="5"/><text x="4.9539%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="4.7075%" y="869" width="0.0144%" height="15" fill="rgb(247,160,36)" fg:x="1310" fg:w="4"/><text x="4.9575%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="4.7075%" y="853" width="0.0144%" height="15" fill="rgb(234,13,49)" fg:x="1310" fg:w="4"/><text x="4.9575%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="4.7075%" y="837" width="0.0144%" height="15" fill="rgb(234,122,0)" fg:x="1310" fg:w="4"/><text x="4.9575%" y="847.50"></text></g><g><title>__mmap (9 samples, 0.03%)</title><rect x="4.7219%" y="981" width="0.0323%" height="15" fill="rgb(207,146,38)" fg:x="1314" fg:w="9"/><text x="4.9719%" y="991.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="4.7219%" y="965" width="0.0323%" height="15" fill="rgb(207,177,25)" fg:x="1314" fg:w="9"/><text x="4.9719%" y="975.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="4.7219%" y="949" width="0.0323%" height="15" fill="rgb(211,178,42)" fg:x="1314" fg:w="9"/><text x="4.9719%" y="959.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="4.7219%" y="933" width="0.0323%" height="15" fill="rgb(230,69,54)" fg:x="1314" fg:w="9"/><text x="4.9719%" y="943.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="4.7219%" y="917" width="0.0323%" height="15" fill="rgb(214,135,41)" fg:x="1314" fg:w="9"/><text x="4.9719%" y="927.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="4.7290%" y="901" width="0.0252%" height="15" fill="rgb(237,67,25)" fg:x="1316" fg:w="7"/><text x="4.9790%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="4.7398%" y="885" width="0.0144%" height="15" fill="rgb(222,189,50)" fg:x="1319" fg:w="4"/><text x="4.9898%" y="895.50"></text></g><g><title>_dl_allocate_tls (4 samples, 0.01%)</title><rect x="4.7614%" y="981" width="0.0144%" height="15" fill="rgb(245,148,34)" fg:x="1325" fg:w="4"/><text x="5.0114%" y="991.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 0.01%)</title><rect x="4.7614%" y="965" width="0.0144%" height="15" fill="rgb(222,29,6)" fg:x="1325" fg:w="4"/><text x="5.0114%" y="975.50"></text></g><g><title>__libc_calloc (4 samples, 0.01%)</title><rect x="4.7614%" y="949" width="0.0144%" height="15" fill="rgb(221,189,43)" fg:x="1325" fg:w="4"/><text x="5.0114%" y="959.50"></text></g><g><title>std::sys::unix::thread::Thread::new (47 samples, 0.17%)</title><rect x="4.6212%" y="1013" width="0.1689%" height="15" fill="rgb(207,36,27)" fg:x="1286" fg:w="47"/><text x="4.8712%" y="1023.50"></text></g><g><title>pthread_create (43 samples, 0.15%)</title><rect x="4.6356%" y="997" width="0.1545%" height="15" fill="rgb(217,90,24)" fg:x="1290" fg:w="43"/><text x="4.8856%" y="1007.50"></text></g><g><title>_dl_allocate_tls_init (4 samples, 0.01%)</title><rect x="4.7758%" y="981" width="0.0144%" height="15" fill="rgb(224,66,35)" fg:x="1329" fg:w="4"/><text x="5.0258%" y="991.50"></text></g><g><title>async_global_executor::threading::spawn_more_threads::{{closure}} (99 samples, 0.36%)</title><rect x="4.4416%" y="1077" width="0.3558%" height="15" fill="rgb(221,13,50)" fg:x="1236" fg:w="99"/><text x="4.6916%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn (61 samples, 0.22%)</title><rect x="4.5781%" y="1061" width="0.2192%" height="15" fill="rgb(236,68,49)" fg:x="1274" fg:w="61"/><text x="4.8281%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (61 samples, 0.22%)</title><rect x="4.5781%" y="1045" width="0.2192%" height="15" fill="rgb(229,146,28)" fg:x="1274" fg:w="61"/><text x="4.8281%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (61 samples, 0.22%)</title><rect x="4.5781%" y="1029" width="0.2192%" height="15" fill="rgb(225,31,38)" fg:x="1274" fg:w="61"/><text x="4.8281%" y="1039.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (3 samples, 0.01%)</title><rect x="4.7973%" y="1077" width="0.0108%" height="15" fill="rgb(250,208,3)" fg:x="1335" fg:w="3"/><text x="5.0473%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (105 samples, 0.38%)</title><rect x="4.4344%" y="1093" width="0.3773%" height="15" fill="rgb(246,54,23)" fg:x="1234" fg:w="105"/><text x="4.6844%" y="1103.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (3 samples, 0.01%)</title><rect x="4.8369%" y="1093" width="0.0108%" height="15" fill="rgb(243,76,11)" fg:x="1346" fg:w="3"/><text x="5.0869%" y="1103.50"></text></g><g><title>getrandom::imp::getrandom_inner (3 samples, 0.01%)</title><rect x="4.8369%" y="1077" width="0.0108%" height="15" fill="rgb(245,21,50)" fg:x="1346" fg:w="3"/><text x="5.0869%" y="1087.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (3 samples, 0.01%)</title><rect x="4.8369%" y="1061" width="0.0108%" height="15" fill="rgb(228,9,43)" fg:x="1346" fg:w="3"/><text x="5.0869%" y="1071.50"></text></g><g><title>getrandom::imp::getrandom_inner::{{closure}} (3 samples, 0.01%)</title><rect x="4.8369%" y="1045" width="0.0108%" height="15" fill="rgb(208,100,47)" fg:x="1346" fg:w="3"/><text x="5.0869%" y="1055.50"></text></g><g><title>getrandom::imp::getrandom (3 samples, 0.01%)</title><rect x="4.8369%" y="1029" width="0.0108%" height="15" fill="rgb(232,26,8)" fg:x="1346" fg:w="3"/><text x="5.0869%" y="1039.50"></text></g><g><title>syscall (3 samples, 0.01%)</title><rect x="4.8369%" y="1013" width="0.0108%" height="15" fill="rgb(216,166,38)" fg:x="1346" fg:w="3"/><text x="5.0869%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.8369%" y="997" width="0.0108%" height="15" fill="rgb(251,202,51)" fg:x="1346" fg:w="3"/><text x="5.0869%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="4.8548%" y="1061" width="0.0108%" height="15" fill="rgb(254,216,34)" fg:x="1351" fg:w="3"/><text x="5.1048%" y="1071.50"></text></g><g><title>zenoh_config::Notifier&lt;T&gt;::subscribe (8 samples, 0.03%)</title><rect x="4.8476%" y="1093" width="0.0287%" height="15" fill="rgb(251,32,27)" fg:x="1349" fg:w="8"/><text x="5.0976%" y="1103.50"></text></g><g><title>flume::unbounded (6 samples, 0.02%)</title><rect x="4.8548%" y="1077" width="0.0216%" height="15" fill="rgb(208,127,28)" fg:x="1351" fg:w="6"/><text x="5.1048%" y="1087.50"></text></g><g><title>flume::Shared&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="4.8656%" y="1061" width="0.0108%" height="15" fill="rgb(224,137,22)" fg:x="1354" fg:w="3"/><text x="5.1156%" y="1071.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="4.8656%" y="1045" width="0.0108%" height="15" fill="rgb(254,70,32)" fg:x="1354" fg:w="3"/><text x="5.1156%" y="1055.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::new_in (3 samples, 0.01%)</title><rect x="4.8656%" y="1029" width="0.0108%" height="15" fill="rgb(229,75,37)" fg:x="1354" fg:w="3"/><text x="5.1156%" y="1039.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="4.8656%" y="1013" width="0.0108%" height="15" fill="rgb(252,64,23)" fg:x="1354" fg:w="3"/><text x="5.1156%" y="1023.50"></text></g><g><title>zenoh_config::defaults::&lt;impl core::default::Default for zenoh_config::QueueConf&gt;::default (3 samples, 0.01%)</title><rect x="4.8872%" y="1061" width="0.0108%" height="15" fill="rgb(232,162,48)" fg:x="1360" fg:w="3"/><text x="5.1372%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportManager::builder (7 samples, 0.03%)</title><rect x="4.8764%" y="1093" width="0.0252%" height="15" fill="rgb(246,160,12)" fg:x="1357" fg:w="7"/><text x="5.1264%" y="1103.50"></text></g><g><title>&lt;zenoh_transport::manager::TransportManagerBuilder as core::default::Default&gt;::default (7 samples, 0.03%)</title><rect x="4.8764%" y="1077" width="0.0252%" height="15" fill="rgb(247,166,0)" fg:x="1357" fg:w="7"/><text x="5.1264%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (175 samples, 0.63%)</title><rect x="4.2870%" y="1125" width="0.6289%" height="15" fill="rgb(249,219,21)" fg:x="1193" fg:w="175"/><text x="4.5370%" y="1135.50"></text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}} (153 samples, 0.55%)</title><rect x="4.3661%" y="1109" width="0.5498%" height="15" fill="rgb(205,209,3)" fg:x="1215" fg:w="153"/><text x="4.6161%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (222 samples, 0.80%)</title><rect x="4.1397%" y="1157" width="0.7978%" height="15" fill="rgb(243,44,1)" fg:x="1152" fg:w="222"/><text x="4.3897%" y="1167.50"></text></g><g><title>zenoh::session::Session::new::{{closure}} (185 samples, 0.66%)</title><rect x="4.2727%" y="1141" width="0.6648%" height="15" fill="rgb(206,159,16)" fg:x="1189" fg:w="185"/><text x="4.5227%" y="1151.50"></text></g><g><title>&lt;zenoh_sync::ZPinBoxFuture&lt;T&gt; as core::future::future::Future&gt;::poll (223 samples, 0.80%)</title><rect x="4.1397%" y="1205" width="0.8014%" height="15" fill="rgb(244,77,30)" fg:x="1152" fg:w="223"/><text x="4.3897%" y="1215.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (223 samples, 0.80%)</title><rect x="4.1397%" y="1189" width="0.8014%" height="15" fill="rgb(218,69,12)" fg:x="1152" fg:w="223"/><text x="4.3897%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (223 samples, 0.80%)</title><rect x="4.1397%" y="1173" width="0.8014%" height="15" fill="rgb(212,87,7)" fg:x="1152" fg:w="223"/><text x="4.3897%" y="1183.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="4.9411%" y="1141" width="0.0108%" height="15" fill="rgb(245,114,25)" fg:x="1375" fg:w="3"/><text x="5.1911%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.9411%" y="1125" width="0.0108%" height="15" fill="rgb(210,61,42)" fg:x="1375" fg:w="3"/><text x="5.1911%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.9411%" y="1109" width="0.0108%" height="15" fill="rgb(211,52,33)" fg:x="1375" fg:w="3"/><text x="5.1911%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.9411%" y="1093" width="0.0108%" height="15" fill="rgb(234,58,33)" fg:x="1375" fg:w="3"/><text x="5.1911%" y="1103.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.9411%" y="1077" width="0.0108%" height="15" fill="rgb(220,115,36)" fg:x="1375" fg:w="3"/><text x="5.1911%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.9411%" y="1061" width="0.0108%" height="15" fill="rgb(243,153,54)" fg:x="1375" fg:w="3"/><text x="5.1911%" y="1071.50"></text></g><g><title>router_eval_test::main::main::{{closure}}::{{closure}}::{{closure}} (243 samples, 0.87%)</title><rect x="4.1002%" y="1221" width="0.8732%" height="15" fill="rgb(251,47,18)" fg:x="1141" fg:w="243"/><text x="4.3502%" y="1231.50"></text></g><g><title>zenoh::open (9 samples, 0.03%)</title><rect x="4.9411%" y="1205" width="0.0323%" height="15" fill="rgb(242,102,42)" fg:x="1375" fg:w="9"/><text x="5.1911%" y="1215.50"></text></g><g><title>zenoh::session::Session::new (9 samples, 0.03%)</title><rect x="4.9411%" y="1189" width="0.0323%" height="15" fill="rgb(234,31,38)" fg:x="1375" fg:w="9"/><text x="5.1911%" y="1199.50"></text></g><g><title>zenoh_sync::zpinbox (9 samples, 0.03%)</title><rect x="4.9411%" y="1173" width="0.0323%" height="15" fill="rgb(221,117,51)" fg:x="1375" fg:w="9"/><text x="5.1911%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (9 samples, 0.03%)</title><rect x="4.9411%" y="1157" width="0.0323%" height="15" fill="rgb(212,20,18)" fg:x="1375" fg:w="9"/><text x="5.1911%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.02%)</title><rect x="4.9518%" y="1141" width="0.0216%" height="15" fill="rgb(245,133,36)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="4.9518%" y="1125" width="0.0216%" height="15" fill="rgb(212,6,19)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="4.9518%" y="1109" width="0.0216%" height="15" fill="rgb(218,1,36)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="4.9518%" y="1093" width="0.0216%" height="15" fill="rgb(246,84,54)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1103.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="4.9518%" y="1077" width="0.0216%" height="15" fill="rgb(242,110,6)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1087.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="4.9518%" y="1061" width="0.0216%" height="15" fill="rgb(214,47,5)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1071.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.9518%" y="1045" width="0.0216%" height="15" fill="rgb(218,159,25)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.9518%" y="1029" width="0.0216%" height="15" fill="rgb(215,211,28)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.9518%" y="1013" width="0.0216%" height="15" fill="rgb(238,59,32)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="4.9518%" y="997" width="0.0216%" height="15" fill="rgb(226,82,3)" fg:x="1378" fg:w="6"/><text x="5.2018%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="4.9626%" y="981" width="0.0108%" height="15" fill="rgb(240,164,32)" fg:x="1381" fg:w="3"/><text x="5.2126%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="4.9842%" y="933" width="0.0108%" height="15" fill="rgb(232,46,7)" fg:x="1387" fg:w="3"/><text x="5.2342%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="4.9842%" y="917" width="0.0108%" height="15" fill="rgb(229,129,53)" fg:x="1387" fg:w="3"/><text x="5.2342%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="4.9842%" y="901" width="0.0108%" height="15" fill="rgb(234,188,29)" fg:x="1387" fg:w="3"/><text x="5.2342%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="4.9842%" y="885" width="0.0108%" height="15" fill="rgb(246,141,4)" fg:x="1387" fg:w="3"/><text x="5.2342%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="4.9842%" y="869" width="0.0108%" height="15" fill="rgb(229,23,39)" fg:x="1387" fg:w="3"/><text x="5.2342%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="4.9842%" y="853" width="0.0108%" height="15" fill="rgb(206,12,3)" fg:x="1387" fg:w="3"/><text x="5.2342%" y="863.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="4.9842%" y="837" width="0.0108%" height="15" fill="rgb(252,226,20)" fg:x="1387" fg:w="3"/><text x="5.2342%" y="847.50"></text></g><g><title>&lt;zenoh_protocol_core::endpoints::EndPoint as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="4.9842%" y="1045" width="0.0144%" height="15" fill="rgb(216,123,35)" fg:x="1387" fg:w="4"/><text x="5.2342%" y="1055.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="4.9842%" y="1029" width="0.0144%" height="15" fill="rgb(212,68,40)" fg:x="1387" fg:w="4"/><text x="5.2342%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="4.9842%" y="1013" width="0.0144%" height="15" fill="rgb(254,125,32)" fg:x="1387" fg:w="4"/><text x="5.2342%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="4.9842%" y="997" width="0.0144%" height="15" fill="rgb(253,97,22)" fg:x="1387" fg:w="4"/><text x="5.2342%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="4.9842%" y="981" width="0.0144%" height="15" fill="rgb(241,101,14)" fg:x="1387" fg:w="4"/><text x="5.2342%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="4.9842%" y="965" width="0.0144%" height="15" fill="rgb(238,103,29)" fg:x="1387" fg:w="4"/><text x="5.2342%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="4.9842%" y="949" width="0.0144%" height="15" fill="rgb(233,195,47)" fg:x="1387" fg:w="4"/><text x="5.2342%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="4.9842%" y="1109" width="0.0180%" height="15" fill="rgb(246,218,30)" fg:x="1387" fg:w="5"/><text x="5.2342%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.02%)</title><rect x="4.9842%" y="1093" width="0.0180%" height="15" fill="rgb(219,145,47)" fg:x="1387" fg:w="5"/><text x="5.2342%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.02%)</title><rect x="4.9842%" y="1077" width="0.0180%" height="15" fill="rgb(243,12,26)" fg:x="1387" fg:w="5"/><text x="5.2342%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.02%)</title><rect x="4.9842%" y="1061" width="0.0180%" height="15" fill="rgb(214,87,16)" fg:x="1387" fg:w="5"/><text x="5.2342%" y="1071.50"></text></g><g><title>zenoh_link::LocatorInspector::is_multicast::{{closure}} (4 samples, 0.01%)</title><rect x="5.0129%" y="1061" width="0.0144%" height="15" fill="rgb(208,99,42)" fg:x="1395" fg:w="4"/><text x="5.2629%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="5.0345%" y="1045" width="0.0108%" height="15" fill="rgb(253,99,2)" fg:x="1401" fg:w="3"/><text x="5.2845%" y="1055.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="5.0812%" y="901" width="0.0180%" height="15" fill="rgb(220,168,23)" fg:x="1414" fg:w="5"/><text x="5.3312%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (5 samples, 0.02%)</title><rect x="5.0812%" y="885" width="0.0180%" height="15" fill="rgb(242,38,24)" fg:x="1414" fg:w="5"/><text x="5.3312%" y="895.50"></text></g><g><title>async_io::reactor::Reactor::get (3 samples, 0.01%)</title><rect x="5.0992%" y="901" width="0.0108%" height="15" fill="rgb(225,182,9)" fg:x="1419" fg:w="3"/><text x="5.3492%" y="911.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="5.0992%" y="885" width="0.0108%" height="15" fill="rgb(243,178,37)" fg:x="1419" fg:w="3"/><text x="5.3492%" y="895.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (3 samples, 0.01%)</title><rect x="5.0992%" y="869" width="0.0108%" height="15" fill="rgb(232,139,19)" fg:x="1419" fg:w="3"/><text x="5.3492%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (3 samples, 0.01%)</title><rect x="5.0992%" y="853" width="0.0108%" height="15" fill="rgb(225,201,24)" fg:x="1419" fg:w="3"/><text x="5.3492%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (3 samples, 0.01%)</title><rect x="5.0992%" y="837" width="0.0108%" height="15" fill="rgb(221,47,46)" fg:x="1419" fg:w="3"/><text x="5.3492%" y="847.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (3 samples, 0.01%)</title><rect x="5.0992%" y="821" width="0.0108%" height="15" fill="rgb(249,23,13)" fg:x="1419" fg:w="3"/><text x="5.3492%" y="831.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (3 samples, 0.01%)</title><rect x="5.0992%" y="805" width="0.0108%" height="15" fill="rgb(219,9,5)" fg:x="1419" fg:w="3"/><text x="5.3492%" y="815.50"></text></g><g><title>polling::Poller::modify (14 samples, 0.05%)</title><rect x="5.1136%" y="901" width="0.0503%" height="15" fill="rgb(254,171,16)" fg:x="1423" fg:w="14"/><text x="5.3636%" y="911.50"></text></g><g><title>polling::epoll::Poller::modify (14 samples, 0.05%)</title><rect x="5.1136%" y="885" width="0.0503%" height="15" fill="rgb(230,171,20)" fg:x="1423" fg:w="14"/><text x="5.3636%" y="895.50"></text></g><g><title>polling::epoll::Poller::ctl (14 samples, 0.05%)</title><rect x="5.1136%" y="869" width="0.0503%" height="15" fill="rgb(210,71,41)" fg:x="1423" fg:w="14"/><text x="5.3636%" y="879.50"></text></g><g><title>epoll_ctl (14 samples, 0.05%)</title><rect x="5.1136%" y="853" width="0.0503%" height="15" fill="rgb(206,173,20)" fg:x="1423" fg:w="14"/><text x="5.3636%" y="863.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="5.1136%" y="837" width="0.0503%" height="15" fill="rgb(233,88,34)" fg:x="1423" fg:w="14"/><text x="5.3636%" y="847.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="5.1171%" y="821" width="0.0467%" height="15" fill="rgb(223,209,46)" fg:x="1424" fg:w="13"/><text x="5.3671%" y="831.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="5.1171%" y="805" width="0.0467%" height="15" fill="rgb(250,43,18)" fg:x="1424" fg:w="13"/><text x="5.3671%" y="815.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="5.1171%" y="789" width="0.0467%" height="15" fill="rgb(208,13,10)" fg:x="1424" fg:w="13"/><text x="5.3671%" y="799.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="5.1279%" y="773" width="0.0359%" height="15" fill="rgb(212,200,36)" fg:x="1427" fg:w="10"/><text x="5.3779%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.1495%" y="757" width="0.0144%" height="15" fill="rgb(225,90,30)" fg:x="1433" fg:w="4"/><text x="5.3995%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.1531%" y="741" width="0.0108%" height="15" fill="rgb(236,182,39)" fg:x="1434" fg:w="3"/><text x="5.4031%" y="751.50"></text></g><g><title>&lt;async_io::reactor::Writable&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.10%)</title><rect x="5.0704%" y="933" width="0.0970%" height="15" fill="rgb(212,144,35)" fg:x="1411" fg:w="27"/><text x="5.3204%" y="943.50"></text></g><g><title>&lt;async_io::reactor::Ready&lt;H,T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.09%)</title><rect x="5.0740%" y="917" width="0.0934%" height="15" fill="rgb(228,63,44)" fg:x="1412" fg:w="26"/><text x="5.3240%" y="927.50"></text></g><g><title>__libc_fcntl64 (14 samples, 0.05%)</title><rect x="5.1782%" y="917" width="0.0503%" height="15" fill="rgb(228,109,6)" fg:x="1441" fg:w="14"/><text x="5.4282%" y="927.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="5.1782%" y="901" width="0.0503%" height="15" fill="rgb(238,117,24)" fg:x="1441" fg:w="14"/><text x="5.4282%" y="911.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="5.1890%" y="885" width="0.0395%" height="15" fill="rgb(242,26,26)" fg:x="1444" fg:w="11"/><text x="5.4390%" y="895.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="5.1926%" y="869" width="0.0359%" height="15" fill="rgb(221,92,48)" fg:x="1445" fg:w="10"/><text x="5.4426%" y="879.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="5.1962%" y="853" width="0.0323%" height="15" fill="rgb(209,209,32)" fg:x="1446" fg:w="9"/><text x="5.4462%" y="863.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="5.1962%" y="837" width="0.0323%" height="15" fill="rgb(221,70,22)" fg:x="1446" fg:w="9"/><text x="5.4462%" y="847.50"></text></g><g><title>async_io::reactor::Reactor::get (3 samples, 0.01%)</title><rect x="5.2285%" y="917" width="0.0108%" height="15" fill="rgb(248,145,5)" fg:x="1455" fg:w="3"/><text x="5.4785%" y="927.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (19 samples, 0.07%)</title><rect x="5.1782%" y="933" width="0.0683%" height="15" fill="rgb(226,116,26)" fg:x="1441" fg:w="19"/><text x="5.4282%" y="943.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="5.2717%" y="869" width="0.0287%" height="15" fill="rgb(244,5,17)" fg:x="1467" fg:w="8"/><text x="5.5217%" y="879.50"></text></g><g><title>socket2::socket::Socket::connect (31 samples, 0.11%)</title><rect x="5.2537%" y="917" width="0.1114%" height="15" fill="rgb(252,159,33)" fg:x="1462" fg:w="31"/><text x="5.5037%" y="927.50"></text></g><g><title>socket2::sys::connect (30 samples, 0.11%)</title><rect x="5.2573%" y="901" width="0.1078%" height="15" fill="rgb(206,71,0)" fg:x="1463" fg:w="30"/><text x="5.5073%" y="911.50"></text></g><g><title>connect (28 samples, 0.10%)</title><rect x="5.2645%" y="885" width="0.1006%" height="15" fill="rgb(233,118,54)" fg:x="1465" fg:w="28"/><text x="5.5145%" y="895.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="5.3004%" y="869" width="0.0647%" height="15" fill="rgb(234,83,48)" fg:x="1475" fg:w="18"/><text x="5.5504%" y="879.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="5.3004%" y="853" width="0.0647%" height="15" fill="rgb(228,3,54)" fg:x="1475" fg:w="18"/><text x="5.5504%" y="863.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="5.3004%" y="837" width="0.0647%" height="15" fill="rgb(226,155,13)" fg:x="1475" fg:w="18"/><text x="5.5504%" y="847.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="5.3040%" y="821" width="0.0611%" height="15" fill="rgb(241,28,37)" fg:x="1476" fg:w="17"/><text x="5.5540%" y="831.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="5.3220%" y="805" width="0.0431%" height="15" fill="rgb(233,93,10)" fg:x="1481" fg:w="12"/><text x="5.5720%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="5.3364%" y="789" width="0.0287%" height="15" fill="rgb(225,113,19)" fg:x="1485" fg:w="8"/><text x="5.5864%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.3507%" y="773" width="0.0144%" height="15" fill="rgb(241,2,18)" fg:x="1489" fg:w="4"/><text x="5.6007%" y="783.50"></text></g><g><title>async_io::connect (38 samples, 0.14%)</title><rect x="5.2465%" y="933" width="0.1366%" height="15" fill="rgb(228,207,21)" fg:x="1460" fg:w="38"/><text x="5.4965%" y="943.50"></text></g><g><title>socket2::socket::Socket::new (5 samples, 0.02%)</title><rect x="5.3651%" y="917" width="0.0180%" height="15" fill="rgb(213,211,35)" fg:x="1493" fg:w="5"/><text x="5.6151%" y="927.50"></text></g><g><title>socket2::socket::Socket::new_raw (5 samples, 0.02%)</title><rect x="5.3651%" y="901" width="0.0180%" height="15" fill="rgb(209,83,10)" fg:x="1493" fg:w="5"/><text x="5.6151%" y="911.50"></text></g><g><title>socket2::sys::socket (5 samples, 0.02%)</title><rect x="5.3651%" y="885" width="0.0180%" height="15" fill="rgb(209,164,1)" fg:x="1493" fg:w="5"/><text x="5.6151%" y="895.50"></text></g><g><title>__socket (3 samples, 0.01%)</title><rect x="5.3723%" y="869" width="0.0108%" height="15" fill="rgb(213,184,43)" fg:x="1495" fg:w="3"/><text x="5.6223%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.3723%" y="853" width="0.0108%" height="15" fill="rgb(231,61,34)" fg:x="1495" fg:w="3"/><text x="5.6223%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.3723%" y="837" width="0.0108%" height="15" fill="rgb(235,75,3)" fg:x="1495" fg:w="3"/><text x="5.6223%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.3723%" y="821" width="0.0108%" height="15" fill="rgb(220,106,47)" fg:x="1495" fg:w="3"/><text x="5.6223%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.3723%" y="805" width="0.0108%" height="15" fill="rgb(210,196,33)" fg:x="1495" fg:w="3"/><text x="5.6223%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (96 samples, 0.34%)</title><rect x="5.0525%" y="965" width="0.3450%" height="15" fill="rgb(229,154,42)" fg:x="1406" fg:w="96"/><text x="5.3025%" y="975.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (96 samples, 0.34%)</title><rect x="5.0525%" y="949" width="0.3450%" height="15" fill="rgb(228,114,26)" fg:x="1406" fg:w="96"/><text x="5.3025%" y="959.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::take_error (4 samples, 0.01%)</title><rect x="5.3831%" y="933" width="0.0144%" height="15" fill="rgb(208,144,1)" fg:x="1498" fg:w="4"/><text x="5.6331%" y="943.50"></text></g><g><title>std::sys::unix::net::Socket::take_error (4 samples, 0.01%)</title><rect x="5.3831%" y="917" width="0.0144%" height="15" fill="rgb(239,112,37)" fg:x="1498" fg:w="4"/><text x="5.6331%" y="927.50"></text></g><g><title>std::sys_common::net::getsockopt (4 samples, 0.01%)</title><rect x="5.3831%" y="901" width="0.0144%" height="15" fill="rgb(210,96,50)" fg:x="1498" fg:w="4"/><text x="5.6331%" y="911.50"></text></g><g><title>getsockopt (4 samples, 0.01%)</title><rect x="5.3831%" y="885" width="0.0144%" height="15" fill="rgb(222,178,2)" fg:x="1498" fg:w="4"/><text x="5.6331%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.3831%" y="869" width="0.0144%" height="15" fill="rgb(226,74,18)" fg:x="1498" fg:w="4"/><text x="5.6331%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.3831%" y="853" width="0.0144%" height="15" fill="rgb(225,67,54)" fg:x="1498" fg:w="4"/><text x="5.6331%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.3831%" y="837" width="0.0144%" height="15" fill="rgb(251,92,32)" fg:x="1498" fg:w="4"/><text x="5.6331%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.3831%" y="821" width="0.0144%" height="15" fill="rgb(228,149,22)" fg:x="1498" fg:w="4"/><text x="5.6331%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.3867%" y="805" width="0.0108%" height="15" fill="rgb(243,54,13)" fg:x="1499" fg:w="3"/><text x="5.6367%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.3867%" y="789" width="0.0108%" height="15" fill="rgb(243,180,28)" fg:x="1499" fg:w="3"/><text x="5.6367%" y="799.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (99 samples, 0.36%)</title><rect x="5.0489%" y="981" width="0.3558%" height="15" fill="rgb(208,167,24)" fg:x="1405" fg:w="99"/><text x="5.2989%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.36%)</title><rect x="5.0489%" y="997" width="0.3629%" height="15" fill="rgb(245,73,45)" fg:x="1405" fg:w="101"/><text x="5.2989%" y="1007.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (107 samples, 0.38%)</title><rect x="5.0453%" y="1045" width="0.3845%" height="15" fill="rgb(237,203,48)" fg:x="1404" fg:w="107"/><text x="5.2953%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.38%)</title><rect x="5.0453%" y="1029" width="0.3845%" height="15" fill="rgb(211,197,16)" fg:x="1404" fg:w="107"/><text x="5.2953%" y="1039.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (106 samples, 0.38%)</title><rect x="5.0489%" y="1013" width="0.3809%" height="15" fill="rgb(243,99,51)" fg:x="1405" fg:w="106"/><text x="5.2989%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_transport::unicast::establishment::authenticator::AuthenticatedPeerLink&gt; (7 samples, 0.03%)</title><rect x="5.4406%" y="1045" width="0.0252%" height="15" fill="rgb(215,123,29)" fg:x="1514" fg:w="7"/><text x="5.6906%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (7 samples, 0.03%)</title><rect x="5.4406%" y="1029" width="0.0252%" height="15" fill="rgb(239,186,37)" fg:x="1514" fg:w="7"/><text x="5.6906%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.03%)</title><rect x="5.4406%" y="1013" width="0.0252%" height="15" fill="rgb(252,136,39)" fg:x="1514" fg:w="7"/><text x="5.6906%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.03%)</title><rect x="5.4406%" y="997" width="0.0252%" height="15" fill="rgb(223,213,32)" fg:x="1514" fg:w="7"/><text x="5.6906%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.03%)</title><rect x="5.4406%" y="981" width="0.0252%" height="15" fill="rgb(233,115,5)" fg:x="1514" fg:w="7"/><text x="5.6906%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="5.4406%" y="965" width="0.0252%" height="15" fill="rgb(207,226,44)" fg:x="1514" fg:w="7"/><text x="5.6906%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.03%)</title><rect x="5.4406%" y="949" width="0.0252%" height="15" fill="rgb(208,126,0)" fg:x="1514" fg:w="7"/><text x="5.6906%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.03%)</title><rect x="5.4406%" y="933" width="0.0252%" height="15" fill="rgb(244,66,21)" fg:x="1514" fg:w="7"/><text x="5.6906%" y="943.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="5.4442%" y="917" width="0.0216%" height="15" fill="rgb(222,97,12)" fg:x="1515" fg:w="6"/><text x="5.6942%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (137 samples, 0.49%)</title><rect x="5.0022%" y="1109" width="0.4923%" height="15" fill="rgb(219,213,19)" fg:x="1392" fg:w="137"/><text x="5.2522%" y="1119.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (137 samples, 0.49%)</title><rect x="5.0022%" y="1093" width="0.4923%" height="15" fill="rgb(252,169,30)" fg:x="1392" fg:w="137"/><text x="5.2522%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (136 samples, 0.49%)</title><rect x="5.0057%" y="1077" width="0.4887%" height="15" fill="rgb(206,32,51)" fg:x="1393" fg:w="136"/><text x="5.2557%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (130 samples, 0.47%)</title><rect x="5.0273%" y="1061" width="0.4672%" height="15" fill="rgb(250,172,42)" fg:x="1399" fg:w="130"/><text x="5.2773%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::new_link_manager_unicast (6 samples, 0.02%)</title><rect x="5.4729%" y="1045" width="0.0216%" height="15" fill="rgb(209,34,43)" fg:x="1523" fg:w="6"/><text x="5.7229%" y="1055.50"></text></g><g><title>zenoh_link::LinkManagerBuilderUnicast::make (3 samples, 0.01%)</title><rect x="5.4837%" y="1029" width="0.0108%" height="15" fill="rgb(223,11,35)" fg:x="1526" fg:w="3"/><text x="5.7337%" y="1039.50"></text></g><g><title>zenoh_link_tcp::unicast::LinkManagerUnicastTcp::new (3 samples, 0.01%)</title><rect x="5.4837%" y="1013" width="0.0108%" height="15" fill="rgb(251,219,26)" fg:x="1526" fg:w="3"/><text x="5.7337%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (152 samples, 0.55%)</title><rect x="4.9734%" y="1141" width="0.5462%" height="15" fill="rgb(231,119,3)" fg:x="1384" fg:w="152"/><text x="5.2234%" y="1151.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_client::{{closure}} (152 samples, 0.55%)</title><rect x="4.9734%" y="1125" width="0.5462%" height="15" fill="rgb(216,97,11)" fg:x="1384" fg:w="152"/><text x="5.2234%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="5.5196%" y="1141" width="0.0180%" height="15" fill="rgb(223,59,9)" fg:x="1536" fg:w="5"/><text x="5.7696%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="5.5196%" y="1125" width="0.0180%" height="15" fill="rgb(233,93,31)" fg:x="1536" fg:w="5"/><text x="5.7696%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="5.5196%" y="1109" width="0.0180%" height="15" fill="rgb(239,81,33)" fg:x="1536" fg:w="5"/><text x="5.7696%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="5.5196%" y="1093" width="0.0180%" height="15" fill="rgb(213,120,34)" fg:x="1536" fg:w="5"/><text x="5.7696%" y="1103.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.5232%" y="1077" width="0.0144%" height="15" fill="rgb(243,49,53)" fg:x="1537" fg:w="4"/><text x="5.7732%" y="1087.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.5232%" y="1061" width="0.0144%" height="15" fill="rgb(247,216,33)" fg:x="1537" fg:w="4"/><text x="5.7732%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.5268%" y="1045" width="0.0108%" height="15" fill="rgb(226,26,14)" fg:x="1538" fg:w="3"/><text x="5.7768%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="5.5268%" y="1029" width="0.0108%" height="15" fill="rgb(215,49,53)" fg:x="1538" fg:w="3"/><text x="5.7768%" y="1039.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (160 samples, 0.57%)</title><rect x="4.9734%" y="1157" width="0.5750%" height="15" fill="rgb(245,162,40)" fg:x="1384" fg:w="160"/><text x="5.2234%" y="1167.50"></text></g><g><title>__rust_probestack (3 samples, 0.01%)</title><rect x="5.5376%" y="1141" width="0.0108%" height="15" fill="rgb(229,68,17)" fg:x="1541" fg:w="3"/><text x="5.7876%" y="1151.50"></text></g><g><title>zenoh_link::LinkConfigurator::configurations::{{closure}} (3 samples, 0.01%)</title><rect x="5.5627%" y="1125" width="0.0108%" height="15" fill="rgb(213,182,10)" fg:x="1548" fg:w="3"/><text x="5.8127%" y="1135.50"></text></g><g><title>zenoh_transport::multicast::manager::TransportManagerBuilderMulticast::from_config::{{closure}} (4 samples, 0.01%)</title><rect x="5.5735%" y="1125" width="0.0144%" height="15" fill="rgb(245,125,30)" fg:x="1551" fg:w="4"/><text x="5.8235%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.01%)</title><rect x="5.5771%" y="1109" width="0.0108%" height="15" fill="rgb(232,202,2)" fg:x="1552" fg:w="3"/><text x="5.8271%" y="1119.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="5.5987%" y="1061" width="0.0287%" height="15" fill="rgb(237,140,51)" fg:x="1558" fg:w="8"/><text x="5.8487%" y="1071.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="5.6274%" y="1045" width="0.0108%" height="15" fill="rgb(236,157,25)" fg:x="1566" fg:w="3"/><text x="5.8774%" y="1055.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="5.6382%" y="1029" width="0.0144%" height="15" fill="rgb(219,209,0)" fg:x="1569" fg:w="4"/><text x="5.8882%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.10%)</title><rect x="5.5987%" y="1077" width="0.0970%" height="15" fill="rgb(240,116,54)" fg:x="1558" fg:w="27"/><text x="5.8487%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::shm::&lt;impl core::convert::From&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator&gt; for zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator&gt;::from (19 samples, 0.07%)</title><rect x="5.6274%" y="1061" width="0.0683%" height="15" fill="rgb(216,10,36)" fg:x="1566" fg:w="19"/><text x="5.8774%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (16 samples, 0.06%)</title><rect x="5.6382%" y="1045" width="0.0575%" height="15" fill="rgb(222,72,44)" fg:x="1569" fg:w="16"/><text x="5.8882%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.04%)</title><rect x="5.6526%" y="1029" width="0.0431%" height="15" fill="rgb(232,159,9)" fg:x="1573" fg:w="12"/><text x="5.9026%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.04%)</title><rect x="5.6526%" y="1013" width="0.0431%" height="15" fill="rgb(210,39,32)" fg:x="1573" fg:w="12"/><text x="5.9026%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.04%)</title><rect x="5.6526%" y="997" width="0.0431%" height="15" fill="rgb(216,194,45)" fg:x="1573" fg:w="12"/><text x="5.9026%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.04%)</title><rect x="5.6526%" y="981" width="0.0431%" height="15" fill="rgb(218,18,35)" fg:x="1573" fg:w="12"/><text x="5.9026%" y="991.50"></text></g><g><title>malloc (12 samples, 0.04%)</title><rect x="5.6526%" y="965" width="0.0431%" height="15" fill="rgb(207,83,51)" fg:x="1573" fg:w="12"/><text x="5.9026%" y="975.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="5.6670%" y="949" width="0.0287%" height="15" fill="rgb(225,63,43)" fg:x="1577" fg:w="8"/><text x="5.9170%" y="959.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="5.7173%" y="1045" width="0.0252%" height="15" fill="rgb(207,57,36)" fg:x="1591" fg:w="7"/><text x="5.9673%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.05%)</title><rect x="5.7460%" y="1045" width="0.0467%" height="15" fill="rgb(216,99,33)" fg:x="1599" fg:w="13"/><text x="5.9960%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.04%)</title><rect x="5.7532%" y="1029" width="0.0395%" height="15" fill="rgb(225,42,16)" fg:x="1601" fg:w="11"/><text x="6.0032%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.04%)</title><rect x="5.7532%" y="1013" width="0.0395%" height="15" fill="rgb(220,201,45)" fg:x="1601" fg:w="11"/><text x="6.0032%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.04%)</title><rect x="5.7532%" y="997" width="0.0395%" height="15" fill="rgb(225,33,4)" fg:x="1601" fg:w="11"/><text x="6.0032%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.04%)</title><rect x="5.7532%" y="981" width="0.0395%" height="15" fill="rgb(224,33,50)" fg:x="1601" fg:w="11"/><text x="6.0032%" y="991.50"></text></g><g><title>malloc (11 samples, 0.04%)</title><rect x="5.7532%" y="965" width="0.0395%" height="15" fill="rgb(246,198,51)" fg:x="1601" fg:w="11"/><text x="6.0032%" y="975.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="5.7748%" y="949" width="0.0180%" height="15" fill="rgb(205,22,4)" fg:x="1607" fg:w="5"/><text x="6.0248%" y="959.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="5.7963%" y="1045" width="0.0216%" height="15" fill="rgb(206,3,8)" fg:x="1613" fg:w="6"/><text x="6.0463%" y="1055.50"></text></g><g><title>std::sync::poison::Flag::new (4 samples, 0.01%)</title><rect x="5.8035%" y="1029" width="0.0144%" height="15" fill="rgb(251,23,15)" fg:x="1615" fg:w="4"/><text x="6.0535%" y="1039.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="5.9437%" y="949" width="0.0395%" height="15" fill="rgb(252,88,28)" fg:x="1654" fg:w="11"/><text x="6.1937%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (44 samples, 0.16%)</title><rect x="5.8466%" y="1013" width="0.1581%" height="15" fill="rgb(212,127,14)" fg:x="1627" fg:w="44"/><text x="6.0966%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (43 samples, 0.15%)</title><rect x="5.8502%" y="997" width="0.1545%" height="15" fill="rgb(247,145,37)" fg:x="1628" fg:w="43"/><text x="6.1002%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.15%)</title><rect x="5.8502%" y="981" width="0.1545%" height="15" fill="rgb(209,117,53)" fg:x="1628" fg:w="43"/><text x="6.1002%" y="991.50"></text></g><g><title>malloc (40 samples, 0.14%)</title><rect x="5.8610%" y="965" width="0.1437%" height="15" fill="rgb(212,90,42)" fg:x="1631" fg:w="40"/><text x="6.1110%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="5.9832%" y="949" width="0.0216%" height="15" fill="rgb(218,164,37)" fg:x="1665" fg:w="6"/><text x="6.2332%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="5.9832%" y="933" width="0.0216%" height="15" fill="rgb(246,65,34)" fg:x="1665" fg:w="6"/><text x="6.2332%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="5.9832%" y="917" width="0.0216%" height="15" fill="rgb(231,100,33)" fg:x="1665" fg:w="6"/><text x="6.2332%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="5.9832%" y="901" width="0.0216%" height="15" fill="rgb(228,126,14)" fg:x="1665" fg:w="6"/><text x="6.2332%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="5.9832%" y="885" width="0.0216%" height="15" fill="rgb(215,173,21)" fg:x="1665" fg:w="6"/><text x="6.2332%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="5.9904%" y="869" width="0.0144%" height="15" fill="rgb(210,6,40)" fg:x="1667" fg:w="4"/><text x="6.2404%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (47 samples, 0.17%)</title><rect x="5.8466%" y="1029" width="0.1689%" height="15" fill="rgb(212,48,18)" fg:x="1627" fg:w="47"/><text x="6.0966%" y="1039.50"></text></g><g><title>core::ptr::write (3 samples, 0.01%)</title><rect x="6.0047%" y="1013" width="0.0108%" height="15" fill="rgb(230,214,11)" fg:x="1671" fg:w="3"/><text x="6.2547%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="6.0299%" y="1013" width="0.0108%" height="15" fill="rgb(254,105,39)" fg:x="1678" fg:w="3"/><text x="6.2799%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="6.0299%" y="997" width="0.0108%" height="15" fill="rgb(245,158,5)" fg:x="1678" fg:w="3"/><text x="6.2799%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.01%)</title><rect x="6.0299%" y="981" width="0.0108%" height="15" fill="rgb(249,208,11)" fg:x="1678" fg:w="3"/><text x="6.2799%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.01%)</title><rect x="6.0299%" y="965" width="0.0108%" height="15" fill="rgb(210,39,28)" fg:x="1678" fg:w="3"/><text x="6.2799%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.01%)</title><rect x="6.0299%" y="949" width="0.0108%" height="15" fill="rgb(211,56,53)" fg:x="1678" fg:w="3"/><text x="6.2799%" y="959.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryManager::alloc (77 samples, 0.28%)</title><rect x="5.8251%" y="1045" width="0.2767%" height="15" fill="rgb(226,201,30)" fg:x="1621" fg:w="77"/><text x="6.0751%" y="1055.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryManager::free_chunk_map_to_shmbuf (24 samples, 0.09%)</title><rect x="6.0155%" y="1029" width="0.0862%" height="15" fill="rgb(239,101,34)" fg:x="1674" fg:w="24"/><text x="6.2655%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (17 samples, 0.06%)</title><rect x="6.0407%" y="1013" width="0.0611%" height="15" fill="rgb(226,209,5)" fg:x="1681" fg:w="17"/><text x="6.2907%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_store (17 samples, 0.06%)</title><rect x="6.0407%" y="997" width="0.0611%" height="15" fill="rgb(250,105,47)" fg:x="1681" fg:w="17"/><text x="6.2907%" y="1007.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="6.0407%" y="981" width="0.0611%" height="15" fill="rgb(230,72,3)" fg:x="1681" fg:w="17"/><text x="6.2907%" y="991.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="6.0407%" y="965" width="0.0611%" height="15" fill="rgb(232,218,39)" fg:x="1681" fg:w="17"/><text x="6.2907%" y="975.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="6.0443%" y="949" width="0.0575%" height="15" fill="rgb(248,166,6)" fg:x="1682" fg:w="16"/><text x="6.2943%" y="959.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="6.0479%" y="933" width="0.0539%" height="15" fill="rgb(247,89,20)" fg:x="1683" fg:w="15"/><text x="6.2979%" y="943.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="6.0551%" y="917" width="0.0467%" height="15" fill="rgb(248,130,54)" fg:x="1685" fg:w="13"/><text x="6.3051%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="6.0910%" y="901" width="0.0108%" height="15" fill="rgb(234,196,4)" fg:x="1695" fg:w="3"/><text x="6.3410%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="6.0910%" y="885" width="0.0108%" height="15" fill="rgb(250,143,31)" fg:x="1695" fg:w="3"/><text x="6.3410%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="6.0910%" y="869" width="0.0108%" height="15" fill="rgb(211,110,34)" fg:x="1695" fg:w="3"/><text x="6.3410%" y="879.50"></text></g><g><title>cfree (7 samples, 0.03%)</title><rect x="6.1197%" y="981" width="0.0252%" height="15" fill="rgb(215,124,48)" fg:x="1703" fg:w="7"/><text x="6.3697%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="6.1125%" y="1029" width="0.0539%" height="15" fill="rgb(216,46,13)" fg:x="1701" fg:w="15"/><text x="6.3625%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.05%)</title><rect x="6.1125%" y="1013" width="0.0539%" height="15" fill="rgb(205,184,25)" fg:x="1701" fg:w="15"/><text x="6.3625%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.05%)</title><rect x="6.1125%" y="997" width="0.0539%" height="15" fill="rgb(228,1,10)" fg:x="1701" fg:w="15"/><text x="6.3625%" y="1007.50"></text></g><g><title>shared_memory::ShmemConf::create (6 samples, 0.02%)</title><rect x="6.1449%" y="981" width="0.0216%" height="15" fill="rgb(213,116,27)" fg:x="1710" fg:w="6"/><text x="6.3949%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (6 samples, 0.02%)</title><rect x="6.1449%" y="965" width="0.0216%" height="15" fill="rgb(241,95,50)" fg:x="1710" fg:w="6"/><text x="6.3949%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (6 samples, 0.02%)</title><rect x="6.1449%" y="949" width="0.0216%" height="15" fill="rgb(238,48,32)" fg:x="1710" fg:w="6"/><text x="6.3949%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (6 samples, 0.02%)</title><rect x="6.1449%" y="933" width="0.0216%" height="15" fill="rgb(235,113,49)" fg:x="1710" fg:w="6"/><text x="6.3949%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (6 samples, 0.02%)</title><rect x="6.1449%" y="917" width="0.0216%" height="15" fill="rgb(205,127,43)" fg:x="1710" fg:w="6"/><text x="6.3949%" y="927.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="6.1449%" y="901" width="0.0216%" height="15" fill="rgb(250,162,2)" fg:x="1710" fg:w="6"/><text x="6.3949%" y="911.50"></text></g><g><title>__close (6 samples, 0.02%)</title><rect x="6.1449%" y="885" width="0.0216%" height="15" fill="rgb(220,13,41)" fg:x="1710" fg:w="6"/><text x="6.3949%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="6.1449%" y="869" width="0.0216%" height="15" fill="rgb(249,221,25)" fg:x="1710" fg:w="6"/><text x="6.3949%" y="879.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (7 samples, 0.03%)</title><rect x="6.1772%" y="1029" width="0.0252%" height="15" fill="rgb(215,208,19)" fg:x="1719" fg:w="7"/><text x="6.4272%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.03%)</title><rect x="6.1772%" y="1013" width="0.0252%" height="15" fill="rgb(236,175,2)" fg:x="1719" fg:w="7"/><text x="6.4272%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.03%)</title><rect x="6.1772%" y="997" width="0.0252%" height="15" fill="rgb(241,52,2)" fg:x="1719" fg:w="7"/><text x="6.4272%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.03%)</title><rect x="6.1772%" y="981" width="0.0252%" height="15" fill="rgb(248,140,14)" fg:x="1719" fg:w="7"/><text x="6.4272%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="6.1772%" y="965" width="0.0252%" height="15" fill="rgb(253,22,42)" fg:x="1719" fg:w="7"/><text x="6.4272%" y="975.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="6.1808%" y="949" width="0.0216%" height="15" fill="rgb(234,61,47)" fg:x="1720" fg:w="6"/><text x="6.4308%" y="959.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="6.2024%" y="1029" width="0.0108%" height="15" fill="rgb(208,226,15)" fg:x="1726" fg:w="3"/><text x="6.4524%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (26 samples, 0.09%)</title><rect x="6.2491%" y="1013" width="0.0934%" height="15" fill="rgb(217,221,4)" fg:x="1739" fg:w="26"/><text x="6.4991%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (26 samples, 0.09%)</title><rect x="6.2491%" y="997" width="0.0934%" height="15" fill="rgb(212,174,34)" fg:x="1739" fg:w="26"/><text x="6.4991%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (26 samples, 0.09%)</title><rect x="6.2491%" y="981" width="0.0934%" height="15" fill="rgb(253,83,4)" fg:x="1739" fg:w="26"/><text x="6.4991%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.09%)</title><rect x="6.2491%" y="965" width="0.0934%" height="15" fill="rgb(250,195,49)" fg:x="1739" fg:w="26"/><text x="6.4991%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.09%)</title><rect x="6.2491%" y="949" width="0.0934%" height="15" fill="rgb(241,192,25)" fg:x="1739" fg:w="26"/><text x="6.4991%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.09%)</title><rect x="6.2491%" y="933" width="0.0934%" height="15" fill="rgb(208,124,10)" fg:x="1739" fg:w="26"/><text x="6.4991%" y="943.50"></text></g><g><title>cfree (24 samples, 0.09%)</title><rect x="6.2563%" y="917" width="0.0862%" height="15" fill="rgb(222,33,0)" fg:x="1741" fg:w="24"/><text x="6.5063%" y="927.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="6.3066%" y="901" width="0.0359%" height="15" fill="rgb(234,209,28)" fg:x="1755" fg:w="10"/><text x="6.5566%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (19 samples, 0.07%)</title><rect x="6.3425%" y="1013" width="0.0683%" height="15" fill="rgb(224,11,23)" fg:x="1765" fg:w="19"/><text x="6.5925%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (19 samples, 0.07%)</title><rect x="6.3425%" y="997" width="0.0683%" height="15" fill="rgb(232,99,1)" fg:x="1765" fg:w="19"/><text x="6.5925%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (19 samples, 0.07%)</title><rect x="6.3425%" y="981" width="0.0683%" height="15" fill="rgb(237,95,45)" fg:x="1765" fg:w="19"/><text x="6.5925%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (19 samples, 0.07%)</title><rect x="6.3425%" y="965" width="0.0683%" height="15" fill="rgb(208,109,11)" fg:x="1765" fg:w="19"/><text x="6.5925%" y="975.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (19 samples, 0.07%)</title><rect x="6.3425%" y="949" width="0.0683%" height="15" fill="rgb(216,190,48)" fg:x="1765" fg:w="19"/><text x="6.5925%" y="959.50"></text></g><g><title>__close (19 samples, 0.07%)</title><rect x="6.3425%" y="933" width="0.0683%" height="15" fill="rgb(251,171,36)" fg:x="1765" fg:w="19"/><text x="6.5925%" y="943.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="6.3425%" y="917" width="0.0683%" height="15" fill="rgb(230,62,22)" fg:x="1765" fg:w="19"/><text x="6.5925%" y="927.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="6.3461%" y="901" width="0.0647%" height="15" fill="rgb(225,114,35)" fg:x="1766" fg:w="18"/><text x="6.5961%" y="911.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="6.3461%" y="885" width="0.0647%" height="15" fill="rgb(215,118,42)" fg:x="1766" fg:w="18"/><text x="6.5961%" y="895.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="6.3461%" y="869" width="0.0647%" height="15" fill="rgb(243,119,21)" fg:x="1766" fg:w="18"/><text x="6.5961%" y="879.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="6.3497%" y="853" width="0.0611%" height="15" fill="rgb(252,177,53)" fg:x="1767" fg:w="17"/><text x="6.5997%" y="863.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="6.3533%" y="837" width="0.0575%" height="15" fill="rgb(237,209,29)" fg:x="1768" fg:w="16"/><text x="6.6033%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="6.3928%" y="821" width="0.0180%" height="15" fill="rgb(212,65,23)" fg:x="1779" fg:w="5"/><text x="6.6428%" y="831.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="6.4144%" y="789" width="0.0108%" height="15" fill="rgb(230,222,46)" fg:x="1785" fg:w="3"/><text x="6.6644%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.07%)</title><rect x="6.4144%" y="885" width="0.0719%" height="15" fill="rgb(215,135,32)" fg:x="1785" fg:w="20"/><text x="6.6644%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.07%)</title><rect x="6.4144%" y="869" width="0.0719%" height="15" fill="rgb(246,101,22)" fg:x="1785" fg:w="20"/><text x="6.6644%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.07%)</title><rect x="6.4144%" y="853" width="0.0719%" height="15" fill="rgb(206,107,13)" fg:x="1785" fg:w="20"/><text x="6.6644%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.07%)</title><rect x="6.4144%" y="837" width="0.0719%" height="15" fill="rgb(250,100,44)" fg:x="1785" fg:w="20"/><text x="6.6644%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.07%)</title><rect x="6.4144%" y="821" width="0.0719%" height="15" fill="rgb(231,147,38)" fg:x="1785" fg:w="20"/><text x="6.6644%" y="831.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.07%)</title><rect x="6.4144%" y="805" width="0.0719%" height="15" fill="rgb(229,8,40)" fg:x="1785" fg:w="20"/><text x="6.6644%" y="815.50"></text></g><g><title>malloc (17 samples, 0.06%)</title><rect x="6.4252%" y="789" width="0.0611%" height="15" fill="rgb(221,135,30)" fg:x="1788" fg:w="17"/><text x="6.6752%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (21 samples, 0.08%)</title><rect x="6.4144%" y="997" width="0.0755%" height="15" fill="rgb(249,193,18)" fg:x="1785" fg:w="21"/><text x="6.6644%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (21 samples, 0.08%)</title><rect x="6.4144%" y="981" width="0.0755%" height="15" fill="rgb(209,133,39)" fg:x="1785" fg:w="21"/><text x="6.6644%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (21 samples, 0.08%)</title><rect x="6.4144%" y="965" width="0.0755%" height="15" fill="rgb(232,100,14)" fg:x="1785" fg:w="21"/><text x="6.6644%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (21 samples, 0.08%)</title><rect x="6.4144%" y="949" width="0.0755%" height="15" fill="rgb(224,185,1)" fg:x="1785" fg:w="21"/><text x="6.6644%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.08%)</title><rect x="6.4144%" y="933" width="0.0755%" height="15" fill="rgb(223,139,8)" fg:x="1785" fg:w="21"/><text x="6.6644%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.08%)</title><rect x="6.4144%" y="917" width="0.0755%" height="15" fill="rgb(232,213,38)" fg:x="1785" fg:w="21"/><text x="6.6644%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.08%)</title><rect x="6.4144%" y="901" width="0.0755%" height="15" fill="rgb(207,94,22)" fg:x="1785" fg:w="21"/><text x="6.6644%" y="911.50"></text></g><g><title>__mmap (18 samples, 0.06%)</title><rect x="6.4899%" y="981" width="0.0647%" height="15" fill="rgb(219,183,54)" fg:x="1806" fg:w="18"/><text x="6.7399%" y="991.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="6.4899%" y="965" width="0.0647%" height="15" fill="rgb(216,185,54)" fg:x="1806" fg:w="18"/><text x="6.7399%" y="975.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="6.4899%" y="949" width="0.0647%" height="15" fill="rgb(254,217,39)" fg:x="1806" fg:w="18"/><text x="6.7399%" y="959.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="6.4899%" y="933" width="0.0647%" height="15" fill="rgb(240,178,23)" fg:x="1806" fg:w="18"/><text x="6.7399%" y="943.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="6.4899%" y="917" width="0.0647%" height="15" fill="rgb(218,11,47)" fg:x="1806" fg:w="18"/><text x="6.7399%" y="927.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="6.4935%" y="901" width="0.0611%" height="15" fill="rgb(218,51,51)" fg:x="1807" fg:w="17"/><text x="6.7435%" y="911.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="6.5006%" y="885" width="0.0539%" height="15" fill="rgb(238,126,27)" fg:x="1809" fg:w="15"/><text x="6.7506%" y="895.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="6.5042%" y="869" width="0.0503%" height="15" fill="rgb(249,202,22)" fg:x="1810" fg:w="14"/><text x="6.7542%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="6.5402%" y="853" width="0.0144%" height="15" fill="rgb(254,195,49)" fg:x="1820" fg:w="4"/><text x="6.7902%" y="863.50"></text></g><g><title>nix::sys::mman::mmap (19 samples, 0.07%)</title><rect x="6.4899%" y="997" width="0.0683%" height="15" fill="rgb(208,123,14)" fg:x="1806" fg:w="19"/><text x="6.7399%" y="1007.50"></text></g><g><title>&lt;str as nix::NixPath&gt;::with_nix_path (4 samples, 0.01%)</title><rect x="6.5581%" y="981" width="0.0144%" height="15" fill="rgb(224,200,8)" fg:x="1825" fg:w="4"/><text x="6.8081%" y="991.50"></text></g><g><title>&lt;std::ffi::os_str::OsStr as nix::NixPath&gt;::with_nix_path (4 samples, 0.01%)</title><rect x="6.5581%" y="965" width="0.0144%" height="15" fill="rgb(217,61,36)" fg:x="1825" fg:w="4"/><text x="6.8081%" y="975.50"></text></g><g><title>&lt;[u8] as nix::NixPath&gt;::with_nix_path (4 samples, 0.01%)</title><rect x="6.5581%" y="949" width="0.0144%" height="15" fill="rgb(206,35,45)" fg:x="1825" fg:w="4"/><text x="6.8081%" y="959.50"></text></g><g><title>nix::sys::mman::shm_open (5 samples, 0.02%)</title><rect x="6.5581%" y="997" width="0.0180%" height="15" fill="rgb(217,65,33)" fg:x="1825" fg:w="5"/><text x="6.8081%" y="1007.50"></text></g><g><title>shared_memory::unix::create_mapping (66 samples, 0.24%)</title><rect x="6.4144%" y="1013" width="0.2372%" height="15" fill="rgb(222,158,48)" fg:x="1785" fg:w="66"/><text x="6.6644%" y="1023.50"></text></g><g><title>nix::unistd::ftruncate (21 samples, 0.08%)</title><rect x="6.5761%" y="997" width="0.0755%" height="15" fill="rgb(254,2,54)" fg:x="1830" fg:w="21"/><text x="6.8261%" y="1007.50"></text></g><g><title>ftruncate64 (21 samples, 0.08%)</title><rect x="6.5761%" y="981" width="0.0755%" height="15" fill="rgb(250,143,38)" fg:x="1830" fg:w="21"/><text x="6.8261%" y="991.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="6.5761%" y="965" width="0.0755%" height="15" fill="rgb(248,25,0)" fg:x="1830" fg:w="21"/><text x="6.8261%" y="975.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="6.5761%" y="949" width="0.0755%" height="15" fill="rgb(206,152,27)" fg:x="1830" fg:w="21"/><text x="6.8261%" y="959.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="6.5761%" y="933" width="0.0755%" height="15" fill="rgb(240,77,30)" fg:x="1830" fg:w="21"/><text x="6.8261%" y="943.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="6.5869%" y="917" width="0.0647%" height="15" fill="rgb(231,5,3)" fg:x="1833" fg:w="18"/><text x="6.8369%" y="927.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="6.6192%" y="901" width="0.0323%" height="15" fill="rgb(207,226,32)" fg:x="1842" fg:w="9"/><text x="6.8692%" y="911.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="6.6228%" y="885" width="0.0287%" height="15" fill="rgb(222,207,47)" fg:x="1843" fg:w="8"/><text x="6.8728%" y="895.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="6.6264%" y="869" width="0.0252%" height="15" fill="rgb(229,115,45)" fg:x="1844" fg:w="7"/><text x="6.8764%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="6.6336%" y="853" width="0.0180%" height="15" fill="rgb(224,191,6)" fg:x="1846" fg:w="5"/><text x="6.8836%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="6.6372%" y="837" width="0.0144%" height="15" fill="rgb(230,227,24)" fg:x="1847" fg:w="4"/><text x="6.8872%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::ffi::c_str::CString&gt; (12 samples, 0.04%)</title><rect x="6.6624%" y="965" width="0.0431%" height="15" fill="rgb(228,80,19)" fg:x="1854" fg:w="12"/><text x="6.9124%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (12 samples, 0.04%)</title><rect x="6.6624%" y="949" width="0.0431%" height="15" fill="rgb(247,229,0)" fg:x="1854" fg:w="12"/><text x="6.9124%" y="959.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.04%)</title><rect x="6.6624%" y="933" width="0.0431%" height="15" fill="rgb(237,194,15)" fg:x="1854" fg:w="12"/><text x="6.9124%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.04%)</title><rect x="6.6624%" y="917" width="0.0431%" height="15" fill="rgb(219,203,20)" fg:x="1854" fg:w="12"/><text x="6.9124%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.04%)</title><rect x="6.6695%" y="901" width="0.0359%" height="15" fill="rgb(234,128,8)" fg:x="1856" fg:w="10"/><text x="6.9195%" y="911.50"></text></g><g><title>cfree (9 samples, 0.03%)</title><rect x="6.6731%" y="885" width="0.0323%" height="15" fill="rgb(248,202,8)" fg:x="1857" fg:w="9"/><text x="6.9231%" y="895.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="6.6947%" y="869" width="0.0108%" height="15" fill="rgb(206,104,37)" fg:x="1863" fg:w="3"/><text x="6.9447%" y="879.50"></text></g><g><title>[libc.so.6] (13 samples, 0.05%)</title><rect x="6.7199%" y="901" width="0.0467%" height="15" fill="rgb(223,8,27)" fg:x="1870" fg:w="13"/><text x="6.9699%" y="911.50"></text></g><g><title>std::sys::unix::cvt_r (80 samples, 0.29%)</title><rect x="6.7091%" y="949" width="0.2875%" height="15" fill="rgb(216,217,28)" fg:x="1867" fg:w="80"/><text x="6.9591%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (79 samples, 0.28%)</title><rect x="6.7127%" y="933" width="0.2839%" height="15" fill="rgb(249,199,1)" fg:x="1868" fg:w="79"/><text x="6.9627%" y="943.50"></text></g><g><title>open64 (79 samples, 0.28%)</title><rect x="6.7127%" y="917" width="0.2839%" height="15" fill="rgb(240,85,17)" fg:x="1868" fg:w="79"/><text x="6.9627%" y="927.50"></text></g><g><title>[unknown] (64 samples, 0.23%)</title><rect x="6.7666%" y="901" width="0.2300%" height="15" fill="rgb(206,108,45)" fg:x="1883" fg:w="64"/><text x="7.0166%" y="911.50"></text></g><g><title>[unknown] (64 samples, 0.23%)</title><rect x="6.7666%" y="885" width="0.2300%" height="15" fill="rgb(245,210,41)" fg:x="1883" fg:w="64"/><text x="7.0166%" y="895.50"></text></g><g><title>[unknown] (64 samples, 0.23%)</title><rect x="6.7666%" y="869" width="0.2300%" height="15" fill="rgb(206,13,37)" fg:x="1883" fg:w="64"/><text x="7.0166%" y="879.50"></text></g><g><title>[unknown] (63 samples, 0.23%)</title><rect x="6.7702%" y="853" width="0.2264%" height="15" fill="rgb(250,61,18)" fg:x="1884" fg:w="63"/><text x="7.0202%" y="863.50"></text></g><g><title>[unknown] (59 samples, 0.21%)</title><rect x="6.7845%" y="837" width="0.2120%" height="15" fill="rgb(235,172,48)" fg:x="1888" fg:w="59"/><text x="7.0345%" y="847.50"></text></g><g><title>[unknown] (48 samples, 0.17%)</title><rect x="6.8241%" y="821" width="0.1725%" height="15" fill="rgb(249,201,17)" fg:x="1899" fg:w="48"/><text x="7.0741%" y="831.50"></text></g><g><title>[unknown] (35 samples, 0.13%)</title><rect x="6.8708%" y="805" width="0.1258%" height="15" fill="rgb(219,208,6)" fg:x="1912" fg:w="35"/><text x="7.1208%" y="815.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="6.9570%" y="789" width="0.0395%" height="15" fill="rgb(248,31,23)" fg:x="1936" fg:w="11"/><text x="7.2070%" y="799.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="6.9714%" y="773" width="0.0252%" height="15" fill="rgb(245,15,42)" fg:x="1940" fg:w="7"/><text x="7.2214%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="6.9786%" y="757" width="0.0180%" height="15" fill="rgb(222,217,39)" fg:x="1942" fg:w="5"/><text x="7.2286%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="6.9858%" y="741" width="0.0108%" height="15" fill="rgb(210,219,27)" fg:x="1944" fg:w="3"/><text x="7.2358%" y="751.50"></text></g><g><title>std::sys::unix::fs::File::open_c (82 samples, 0.29%)</title><rect x="6.7055%" y="965" width="0.2947%" height="15" fill="rgb(252,166,36)" fg:x="1866" fg:w="82"/><text x="6.9555%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (3 samples, 0.01%)</title><rect x="7.0001%" y="901" width="0.0108%" height="15" fill="rgb(245,132,34)" fg:x="1948" fg:w="3"/><text x="7.2501%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="7.0001%" y="885" width="0.0108%" height="15" fill="rgb(236,54,3)" fg:x="1948" fg:w="3"/><text x="7.2501%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="7.0001%" y="869" width="0.0108%" height="15" fill="rgb(241,173,43)" fg:x="1948" fg:w="3"/><text x="7.2501%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="7.0001%" y="853" width="0.0108%" height="15" fill="rgb(215,190,9)" fg:x="1948" fg:w="3"/><text x="7.2501%" y="863.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="7.0001%" y="837" width="0.0108%" height="15" fill="rgb(242,101,16)" fg:x="1948" fg:w="3"/><text x="7.2501%" y="847.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (10 samples, 0.04%)</title><rect x="7.0109%" y="901" width="0.0359%" height="15" fill="rgb(223,190,21)" fg:x="1951" fg:w="10"/><text x="7.2609%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (9 samples, 0.03%)</title><rect x="7.0145%" y="885" width="0.0323%" height="15" fill="rgb(215,228,25)" fg:x="1952" fg:w="9"/><text x="7.2645%" y="895.50"></text></g><g><title>__rust_alloc (3 samples, 0.01%)</title><rect x="7.0505%" y="789" width="0.0108%" height="15" fill="rgb(225,36,22)" fg:x="1962" fg:w="3"/><text x="7.3005%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (21 samples, 0.08%)</title><rect x="7.0469%" y="901" width="0.0755%" height="15" fill="rgb(251,106,46)" fg:x="1961" fg:w="21"/><text x="7.2969%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.08%)</title><rect x="7.0469%" y="885" width="0.0755%" height="15" fill="rgb(208,90,1)" fg:x="1961" fg:w="21"/><text x="7.2969%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.08%)</title><rect x="7.0469%" y="869" width="0.0755%" height="15" fill="rgb(243,10,4)" fg:x="1961" fg:w="21"/><text x="7.2969%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.08%)</title><rect x="7.0469%" y="853" width="0.0755%" height="15" fill="rgb(212,137,27)" fg:x="1961" fg:w="21"/><text x="7.2969%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.08%)</title><rect x="7.0469%" y="837" width="0.0755%" height="15" fill="rgb(231,220,49)" fg:x="1961" fg:w="21"/><text x="7.2969%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.08%)</title><rect x="7.0469%" y="821" width="0.0755%" height="15" fill="rgb(237,96,20)" fg:x="1961" fg:w="21"/><text x="7.2969%" y="831.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.08%)</title><rect x="7.0469%" y="805" width="0.0755%" height="15" fill="rgb(239,229,30)" fg:x="1961" fg:w="21"/><text x="7.2969%" y="815.50"></text></g><g><title>malloc (17 samples, 0.06%)</title><rect x="7.0612%" y="789" width="0.0611%" height="15" fill="rgb(219,65,33)" fg:x="1965" fg:w="17"/><text x="7.3112%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.02%)</title><rect x="7.1223%" y="901" width="0.0180%" height="15" fill="rgb(243,134,7)" fg:x="1982" fg:w="5"/><text x="7.3723%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.02%)</title><rect x="7.1223%" y="885" width="0.0180%" height="15" fill="rgb(216,177,54)" fg:x="1982" fg:w="5"/><text x="7.3723%" y="895.50"></text></g><g><title>std::fs::OpenOptions::open (138 samples, 0.50%)</title><rect x="6.6552%" y="1013" width="0.4959%" height="15" fill="rgb(211,160,20)" fg:x="1852" fg:w="138"/><text x="6.9052%" y="1023.50"></text></g><g><title>std::fs::OpenOptions::_open (138 samples, 0.50%)</title><rect x="6.6552%" y="997" width="0.4959%" height="15" fill="rgb(239,85,39)" fg:x="1852" fg:w="138"/><text x="6.9052%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::open (136 samples, 0.49%)</title><rect x="6.6624%" y="981" width="0.4887%" height="15" fill="rgb(232,125,22)" fg:x="1854" fg:w="136"/><text x="6.9124%" y="991.50"></text></g><g><title>std::sys::unix::fs::cstr (42 samples, 0.15%)</title><rect x="7.0001%" y="965" width="0.1509%" height="15" fill="rgb(244,57,34)" fg:x="1948" fg:w="42"/><text x="7.2501%" y="975.50"></text></g><g><title>alloc::ffi::c_str::CString::new (42 samples, 0.15%)</title><rect x="7.0001%" y="949" width="0.1509%" height="15" fill="rgb(214,203,32)" fg:x="1948" fg:w="42"/><text x="7.2501%" y="959.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (42 samples, 0.15%)</title><rect x="7.0001%" y="933" width="0.1509%" height="15" fill="rgb(207,58,43)" fg:x="1948" fg:w="42"/><text x="7.2501%" y="943.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (42 samples, 0.15%)</title><rect x="7.0001%" y="917" width="0.1509%" height="15" fill="rgb(215,193,15)" fg:x="1948" fg:w="42"/><text x="7.2501%" y="927.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryManager::make (334 samples, 1.20%)</title><rect x="6.1018%" y="1045" width="1.2002%" height="15" fill="rgb(232,15,44)" fg:x="1698" fg:w="334"/><text x="6.3518%" y="1055.50"></text></g><g><title>shared_memory::ShmemConf::create (303 samples, 1.09%)</title><rect x="6.2132%" y="1029" width="1.0888%" height="15" fill="rgb(212,3,48)" fg:x="1729" fg:w="303"/><text x="6.4632%" y="1039.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (42 samples, 0.15%)</title><rect x="7.1511%" y="1013" width="0.1509%" height="15" fill="rgb(218,128,7)" fg:x="1990" fg:w="42"/><text x="7.4011%" y="1023.50"></text></g><g><title>std::sys::unix::net::Socket::write (41 samples, 0.15%)</title><rect x="7.1547%" y="997" width="0.1473%" height="15" fill="rgb(226,216,39)" fg:x="1991" fg:w="41"/><text x="7.4047%" y="1007.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (41 samples, 0.15%)</title><rect x="7.1547%" y="981" width="0.1473%" height="15" fill="rgb(243,47,51)" fg:x="1991" fg:w="41"/><text x="7.4047%" y="991.50"></text></g><g><title>write (41 samples, 0.15%)</title><rect x="7.1547%" y="965" width="0.1473%" height="15" fill="rgb(241,183,40)" fg:x="1991" fg:w="41"/><text x="7.4047%" y="975.50"></text></g><g><title>[unknown] (41 samples, 0.15%)</title><rect x="7.1547%" y="949" width="0.1473%" height="15" fill="rgb(231,217,32)" fg:x="1991" fg:w="41"/><text x="7.4047%" y="959.50"></text></g><g><title>[unknown] (41 samples, 0.15%)</title><rect x="7.1547%" y="933" width="0.1473%" height="15" fill="rgb(229,61,38)" fg:x="1991" fg:w="41"/><text x="7.4047%" y="943.50"></text></g><g><title>[unknown] (41 samples, 0.15%)</title><rect x="7.1547%" y="917" width="0.1473%" height="15" fill="rgb(225,210,5)" fg:x="1991" fg:w="41"/><text x="7.4047%" y="927.50"></text></g><g><title>[unknown] (41 samples, 0.15%)</title><rect x="7.1547%" y="901" width="0.1473%" height="15" fill="rgb(231,79,45)" fg:x="1991" fg:w="41"/><text x="7.4047%" y="911.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="7.1619%" y="885" width="0.1401%" height="15" fill="rgb(224,100,7)" fg:x="1993" fg:w="39"/><text x="7.4119%" y="895.50"></text></g><g><title>[unknown] (34 samples, 0.12%)</title><rect x="7.1798%" y="869" width="0.1222%" height="15" fill="rgb(241,198,18)" fg:x="1998" fg:w="34"/><text x="7.4298%" y="879.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="7.1870%" y="853" width="0.1150%" height="15" fill="rgb(252,97,53)" fg:x="2000" fg:w="32"/><text x="7.4370%" y="863.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="7.1978%" y="837" width="0.1042%" height="15" fill="rgb(220,88,7)" fg:x="2003" fg:w="29"/><text x="7.4478%" y="847.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="7.2086%" y="821" width="0.0934%" height="15" fill="rgb(213,176,14)" fg:x="2006" fg:w="26"/><text x="7.4586%" y="831.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="7.2158%" y="805" width="0.0862%" height="15" fill="rgb(246,73,7)" fg:x="2008" fg:w="24"/><text x="7.4658%" y="815.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="7.2373%" y="789" width="0.0647%" height="15" fill="rgb(245,64,36)" fg:x="2014" fg:w="18"/><text x="7.4873%" y="799.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="7.2481%" y="773" width="0.0539%" height="15" fill="rgb(245,80,10)" fg:x="2017" fg:w="15"/><text x="7.4981%" y="783.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (10 samples, 0.04%)</title><rect x="7.3020%" y="933" width="0.0359%" height="15" fill="rgb(232,107,50)" fg:x="2032" fg:w="10"/><text x="7.5520%" y="943.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (10 samples, 0.04%)</title><rect x="7.3020%" y="917" width="0.0359%" height="15" fill="rgb(253,3,0)" fg:x="2032" fg:w="10"/><text x="7.5520%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (460 samples, 1.65%)</title><rect x="5.6957%" y="1077" width="1.6530%" height="15" fill="rgb(212,99,53)" fg:x="1585" fg:w="460"/><text x="5.9457%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator::from_config::{{closure}} (460 samples, 1.65%)</title><rect x="5.6957%" y="1061" width="1.6530%" height="15" fill="rgb(249,111,54)" fg:x="1585" fg:w="460"/><text x="5.9457%" y="1071.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::new (13 samples, 0.05%)</title><rect x="7.3020%" y="1045" width="0.0467%" height="15" fill="rgb(249,55,30)" fg:x="2032" fg:w="13"/><text x="7.5520%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (13 samples, 0.05%)</title><rect x="7.3020%" y="1029" width="0.0467%" height="15" fill="rgb(237,47,42)" fg:x="2032" fg:w="13"/><text x="7.5520%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (13 samples, 0.05%)</title><rect x="7.3020%" y="1013" width="0.0467%" height="15" fill="rgb(211,20,18)" fg:x="2032" fg:w="13"/><text x="7.5520%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (13 samples, 0.05%)</title><rect x="7.3020%" y="997" width="0.0467%" height="15" fill="rgb(231,203,46)" fg:x="2032" fg:w="13"/><text x="7.5520%" y="1007.50"></text></g><g><title>std::collections::hash::map::RandomState::new (13 samples, 0.05%)</title><rect x="7.3020%" y="981" width="0.0467%" height="15" fill="rgb(237,142,3)" fg:x="2032" fg:w="13"/><text x="7.5520%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.05%)</title><rect x="7.3020%" y="965" width="0.0467%" height="15" fill="rgb(241,107,1)" fg:x="2032" fg:w="13"/><text x="7.5520%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.05%)</title><rect x="7.3020%" y="949" width="0.0467%" height="15" fill="rgb(229,83,13)" fg:x="2032" fg:w="13"/><text x="7.5520%" y="959.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (3 samples, 0.01%)</title><rect x="7.3379%" y="933" width="0.0108%" height="15" fill="rgb(241,91,40)" fg:x="2042" fg:w="3"/><text x="7.5879%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.01%)</title><rect x="7.3379%" y="917" width="0.0108%" height="15" fill="rgb(225,3,45)" fg:x="2042" fg:w="3"/><text x="7.5879%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.03%)</title><rect x="7.3487%" y="997" width="0.0252%" height="15" fill="rgb(244,223,14)" fg:x="2045" fg:w="7"/><text x="7.5987%" y="1007.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (6 samples, 0.02%)</title><rect x="7.3523%" y="981" width="0.0216%" height="15" fill="rgb(224,124,37)" fg:x="2046" fg:w="6"/><text x="7.6023%" y="991.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (6 samples, 0.02%)</title><rect x="7.3523%" y="965" width="0.0216%" height="15" fill="rgb(251,171,30)" fg:x="2046" fg:w="6"/><text x="7.6023%" y="975.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (6 samples, 0.02%)</title><rect x="7.3523%" y="949" width="0.0216%" height="15" fill="rgb(236,46,54)" fg:x="2046" fg:w="6"/><text x="7.6023%" y="959.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.03%)</title><rect x="7.3487%" y="1029" width="0.0323%" height="15" fill="rgb(245,213,5)" fg:x="2045" fg:w="9"/><text x="7.5987%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.03%)</title><rect x="7.3487%" y="1013" width="0.0323%" height="15" fill="rgb(230,144,27)" fg:x="2045" fg:w="9"/><text x="7.5987%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.01%)</title><rect x="7.4062%" y="917" width="0.0108%" height="15" fill="rgb(220,86,6)" fg:x="2061" fg:w="3"/><text x="7.6562%" y="927.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.01%)</title><rect x="7.4062%" y="901" width="0.0108%" height="15" fill="rgb(240,20,13)" fg:x="2061" fg:w="3"/><text x="7.6562%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="7.4062%" y="885" width="0.0108%" height="15" fill="rgb(217,89,34)" fg:x="2061" fg:w="3"/><text x="7.6562%" y="895.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="7.4314%" y="821" width="0.0108%" height="15" fill="rgb(229,13,5)" fg:x="2068" fg:w="3"/><text x="7.6814%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (16 samples, 0.06%)</title><rect x="7.3882%" y="1013" width="0.0575%" height="15" fill="rgb(244,67,35)" fg:x="2056" fg:w="16"/><text x="7.6382%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 0.06%)</title><rect x="7.3882%" y="997" width="0.0575%" height="15" fill="rgb(221,40,2)" fg:x="2056" fg:w="16"/><text x="7.6382%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (15 samples, 0.05%)</title><rect x="7.3918%" y="981" width="0.0539%" height="15" fill="rgb(237,157,21)" fg:x="2057" fg:w="15"/><text x="7.6418%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (12 samples, 0.04%)</title><rect x="7.4026%" y="965" width="0.0431%" height="15" fill="rgb(222,94,11)" fg:x="2060" fg:w="12"/><text x="7.6526%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (11 samples, 0.04%)</title><rect x="7.4062%" y="949" width="0.0395%" height="15" fill="rgb(249,113,6)" fg:x="2061" fg:w="11"/><text x="7.6562%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (11 samples, 0.04%)</title><rect x="7.4062%" y="933" width="0.0395%" height="15" fill="rgb(238,137,36)" fg:x="2061" fg:w="11"/><text x="7.6562%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (8 samples, 0.03%)</title><rect x="7.4170%" y="917" width="0.0287%" height="15" fill="rgb(210,102,26)" fg:x="2064" fg:w="8"/><text x="7.6670%" y="927.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (8 samples, 0.03%)</title><rect x="7.4170%" y="901" width="0.0287%" height="15" fill="rgb(218,30,30)" fg:x="2064" fg:w="8"/><text x="7.6670%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.03%)</title><rect x="7.4170%" y="885" width="0.0287%" height="15" fill="rgb(214,67,26)" fg:x="2064" fg:w="8"/><text x="7.6670%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="7.4170%" y="869" width="0.0287%" height="15" fill="rgb(251,9,53)" fg:x="2064" fg:w="8"/><text x="7.6670%" y="879.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="7.4170%" y="853" width="0.0287%" height="15" fill="rgb(228,204,25)" fg:x="2064" fg:w="8"/><text x="7.6670%" y="863.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="7.4170%" y="837" width="0.0287%" height="15" fill="rgb(207,153,8)" fg:x="2064" fg:w="8"/><text x="7.6670%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (518 samples, 1.86%)</title><rect x="5.5879%" y="1109" width="1.8614%" height="15" fill="rgb(242,9,16)" fg:x="1555" fg:w="518"/><text x="5.8379%" y="1119.50">&lt;..</text></g><g><title>zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator::from_config::{{closure}} (517 samples, 1.86%)</title><rect x="5.5915%" y="1093" width="1.8578%" height="15" fill="rgb(217,211,10)" fg:x="1556" fg:w="517"/><text x="5.8415%" y="1103.50">z..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (28 samples, 0.10%)</title><rect x="7.3487%" y="1077" width="0.1006%" height="15" fill="rgb(219,228,52)" fg:x="2045" fg:w="28"/><text x="7.5987%" y="1087.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (28 samples, 0.10%)</title><rect x="7.3487%" y="1061" width="0.1006%" height="15" fill="rgb(231,92,29)" fg:x="2045" fg:w="28"/><text x="7.5987%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.10%)</title><rect x="7.3487%" y="1045" width="0.1006%" height="15" fill="rgb(232,8,23)" fg:x="2045" fg:w="28"/><text x="7.5987%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 0.06%)</title><rect x="7.3846%" y="1029" width="0.0647%" height="15" fill="rgb(216,211,34)" fg:x="2055" fg:w="18"/><text x="7.6346%" y="1039.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.4493%" y="1109" width="0.0180%" height="15" fill="rgb(236,151,0)" fg:x="2073" fg:w="5"/><text x="7.6993%" y="1119.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="7.4889%" y="1093" width="0.0108%" height="15" fill="rgb(209,168,3)" fg:x="2084" fg:w="3"/><text x="7.7389%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (554 samples, 1.99%)</title><rect x="5.5627%" y="1141" width="1.9908%" height="15" fill="rgb(208,129,28)" fg:x="1548" fg:w="554"/><text x="5.8127%" y="1151.50">&lt;..</text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::from_config::{{closure}} (547 samples, 1.97%)</title><rect x="5.5879%" y="1125" width="1.9656%" height="15" fill="rgb(229,78,22)" fg:x="1555" fg:w="547"/><text x="5.8379%" y="1135.50">z..</text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::peer_authenticator (19 samples, 0.07%)</title><rect x="7.4853%" y="1109" width="0.0683%" height="15" fill="rgb(228,187,13)" fg:x="2083" fg:w="19"/><text x="7.7353%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator&gt;&gt; (15 samples, 0.05%)</title><rect x="7.4996%" y="1093" width="0.0539%" height="15" fill="rgb(240,119,24)" fg:x="2087" fg:w="15"/><text x="7.7496%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator,std::collections::hash::map::RandomState&gt;&gt; (15 samples, 0.05%)</title><rect x="7.4996%" y="1077" width="0.0539%" height="15" fill="rgb(209,194,42)" fg:x="2087" fg:w="15"/><text x="7.7496%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator,(),std::collections::hash::map::RandomState&gt;&gt; (15 samples, 0.05%)</title><rect x="7.4996%" y="1061" width="0.0539%" height="15" fill="rgb(247,200,46)" fg:x="2087" fg:w="15"/><text x="7.7496%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator,())&gt;&gt; (15 samples, 0.05%)</title><rect x="7.4996%" y="1045" width="0.0539%" height="15" fill="rgb(218,76,16)" fg:x="2087" fg:w="15"/><text x="7.7496%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="7.4996%" y="1029" width="0.0539%" height="15" fill="rgb(225,21,48)" fg:x="2087" fg:w="15"/><text x="7.7496%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (14 samples, 0.05%)</title><rect x="7.5032%" y="1013" width="0.0503%" height="15" fill="rgb(239,223,50)" fg:x="2088" fg:w="14"/><text x="7.7532%" y="1023.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="7.5535%" y="1141" width="0.0287%" height="15" fill="rgb(244,45,21)" fg:x="2102" fg:w="8"/><text x="7.8035%" y="1151.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="7.5931%" y="1125" width="0.0180%" height="15" fill="rgb(232,33,43)" fg:x="2113" fg:w="5"/><text x="7.8431%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;zenoh_transport::unicast::establishment::authenticator::LinkAuthenticator&gt;&gt; (3 samples, 0.01%)</title><rect x="7.6110%" y="1109" width="0.0108%" height="15" fill="rgb(209,8,3)" fg:x="2118" fg:w="3"/><text x="7.8610%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;zenoh_transport::unicast::establishment::authenticator::LinkAuthenticator,std::collections::hash::map::RandomState&gt;&gt; (3 samples, 0.01%)</title><rect x="7.6110%" y="1093" width="0.0108%" height="15" fill="rgb(214,25,53)" fg:x="2118" fg:w="3"/><text x="7.8610%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;zenoh_transport::unicast::establishment::authenticator::LinkAuthenticator,(),std::collections::hash::map::RandomState&gt;&gt; (3 samples, 0.01%)</title><rect x="7.6110%" y="1077" width="0.0108%" height="15" fill="rgb(254,186,54)" fg:x="2118" fg:w="3"/><text x="7.8610%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(zenoh_transport::unicast::establishment::authenticator::LinkAuthenticator,())&gt;&gt; (3 samples, 0.01%)</title><rect x="7.6110%" y="1061" width="0.0108%" height="15" fill="rgb(208,174,49)" fg:x="2118" fg:w="3"/><text x="7.8610%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="7.6110%" y="1045" width="0.0108%" height="15" fill="rgb(233,191,51)" fg:x="2118" fg:w="3"/><text x="7.8610%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (3 samples, 0.01%)</title><rect x="7.6110%" y="1029" width="0.0108%" height="15" fill="rgb(222,134,10)" fg:x="2118" fg:w="3"/><text x="7.8610%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (740 samples, 2.66%)</title><rect x="4.9734%" y="1173" width="2.6592%" height="15" fill="rgb(230,226,20)" fg:x="1384" fg:w="740"/><text x="5.2234%" y="1183.50">&lt;c..</text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::from_config::{{closure}} (580 samples, 2.08%)</title><rect x="5.5484%" y="1157" width="2.0842%" height="15" fill="rgb(251,111,25)" fg:x="1544" fg:w="580"/><text x="5.7984%" y="1167.50">z..</text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::unicast (11 samples, 0.04%)</title><rect x="7.5931%" y="1141" width="0.0395%" height="15" fill="rgb(224,40,46)" fg:x="2113" fg:w="11"/><text x="7.8431%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_transport::unicast::manager::TransportManagerBuilderUnicast&gt; (6 samples, 0.02%)</title><rect x="7.6110%" y="1125" width="0.0216%" height="15" fill="rgb(236,108,47)" fg:x="2118" fg:w="6"/><text x="7.8610%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator&gt;&gt; (3 samples, 0.01%)</title><rect x="7.6218%" y="1109" width="0.0108%" height="15" fill="rgb(234,93,0)" fg:x="2121" fg:w="3"/><text x="7.8718%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator,std::collections::hash::map::RandomState&gt;&gt; (3 samples, 0.01%)</title><rect x="7.6218%" y="1093" width="0.0108%" height="15" fill="rgb(224,213,32)" fg:x="2121" fg:w="3"/><text x="7.8718%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator,(),std::collections::hash::map::RandomState&gt;&gt; (3 samples, 0.01%)</title><rect x="7.6218%" y="1077" width="0.0108%" height="15" fill="rgb(251,11,48)" fg:x="2121" fg:w="3"/><text x="7.8718%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator,())&gt;&gt; (3 samples, 0.01%)</title><rect x="7.6218%" y="1061" width="0.0108%" height="15" fill="rgb(236,173,5)" fg:x="2121" fg:w="3"/><text x="7.8718%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="7.6218%" y="1045" width="0.0108%" height="15" fill="rgb(230,95,12)" fg:x="2121" fg:w="3"/><text x="7.8718%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (3 samples, 0.01%)</title><rect x="7.6218%" y="1029" width="0.0108%" height="15" fill="rgb(232,209,1)" fg:x="2121" fg:w="3"/><text x="7.8718%" y="1039.50"></text></g><g><title>zenoh::net::routing::router::Router::new (5 samples, 0.02%)</title><rect x="7.6326%" y="1173" width="0.0180%" height="15" fill="rgb(232,6,1)" fg:x="2124" fg:w="5"/><text x="7.8826%" y="1183.50"></text></g><g><title>zenoh::net::routing::router::Tables::new (4 samples, 0.01%)</title><rect x="7.6362%" y="1157" width="0.0144%" height="15" fill="rgb(210,224,50)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1167.50"></text></g><g><title>zenoh::net::routing::resource::Resource::root (4 samples, 0.01%)</title><rect x="7.6362%" y="1141" width="0.0144%" height="15" fill="rgb(228,127,35)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="7.6362%" y="1125" width="0.0144%" height="15" fill="rgb(245,102,45)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="7.6362%" y="1109" width="0.0144%" height="15" fill="rgb(214,1,49)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="7.6362%" y="1093" width="0.0144%" height="15" fill="rgb(226,163,40)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="7.6362%" y="1077" width="0.0144%" height="15" fill="rgb(239,212,28)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="7.6362%" y="1061" width="0.0144%" height="15" fill="rgb(220,20,13)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1071.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="7.6362%" y="1045" width="0.0144%" height="15" fill="rgb(210,164,35)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1055.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.6362%" y="1029" width="0.0144%" height="15" fill="rgb(248,109,41)" fg:x="2125" fg:w="4"/><text x="7.8862%" y="1039.50"></text></g><g><title>async_std::task::spawn::spawn (5 samples, 0.02%)</title><rect x="7.6613%" y="1125" width="0.0180%" height="15" fill="rgb(238,23,50)" fg:x="2132" fg:w="5"/><text x="7.9113%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::spawn (4 samples, 0.01%)</title><rect x="7.6649%" y="1109" width="0.0144%" height="15" fill="rgb(211,48,49)" fg:x="2133" fg:w="4"/><text x="7.9149%" y="1119.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn (9 samples, 0.03%)</title><rect x="7.6506%" y="1173" width="0.0323%" height="15" fill="rgb(223,36,21)" fg:x="2129" fg:w="9"/><text x="7.9006%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.03%)</title><rect x="7.6578%" y="1157" width="0.0252%" height="15" fill="rgb(207,123,46)" fg:x="2131" fg:w="7"/><text x="7.9078%" y="1167.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn::{{closure}} (7 samples, 0.03%)</title><rect x="7.6578%" y="1141" width="0.0252%" height="15" fill="rgb(240,218,32)" fg:x="2131" fg:w="7"/><text x="7.9078%" y="1151.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.6829%" y="1061" width="0.0144%" height="15" fill="rgb(252,5,43)" fg:x="2138" fg:w="4"/><text x="7.9329%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="7.6829%" y="1157" width="0.0180%" height="15" fill="rgb(252,84,19)" fg:x="2138" fg:w="5"/><text x="7.9329%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="7.6829%" y="1141" width="0.0180%" height="15" fill="rgb(243,152,39)" fg:x="2138" fg:w="5"/><text x="7.9329%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="7.6829%" y="1125" width="0.0180%" height="15" fill="rgb(234,160,15)" fg:x="2138" fg:w="5"/><text x="7.9329%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="7.6829%" y="1109" width="0.0180%" height="15" fill="rgb(237,34,20)" fg:x="2138" fg:w="5"/><text x="7.9329%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="7.6829%" y="1093" width="0.0180%" height="15" fill="rgb(229,97,13)" fg:x="2138" fg:w="5"/><text x="7.9329%" y="1103.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="7.6829%" y="1077" width="0.0180%" height="15" fill="rgb(234,71,50)" fg:x="2138" fg:w="5"/><text x="7.9329%" y="1087.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="7.7117%" y="1141" width="0.0108%" height="15" fill="rgb(253,155,4)" fg:x="2146" fg:w="3"/><text x="7.9617%" y="1151.50"></text></g><g><title>zenoh_config::Notifier&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="7.6829%" y="1173" width="0.0431%" height="15" fill="rgb(222,185,37)" fg:x="2138" fg:w="12"/><text x="7.9329%" y="1183.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="7.7009%" y="1157" width="0.0252%" height="15" fill="rgb(251,177,13)" fg:x="2143" fg:w="7"/><text x="7.9509%" y="1167.50"></text></g><g><title>&lt;zenoh_config::Config as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="7.7260%" y="1125" width="0.0144%" height="15" fill="rgb(250,179,40)" fg:x="2150" fg:w="4"/><text x="7.9760%" y="1135.50"></text></g><g><title>&lt;zenoh_config::TransportConf as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="7.7260%" y="1109" width="0.0144%" height="15" fill="rgb(242,44,2)" fg:x="2150" fg:w="4"/><text x="7.9760%" y="1119.50"></text></g><g><title>&lt;zenoh_config::TransportLinkConf as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="7.7260%" y="1093" width="0.0144%" height="15" fill="rgb(216,177,13)" fg:x="2150" fg:w="4"/><text x="7.9760%" y="1103.50"></text></g><g><title>zenoh_config::defaults::&lt;impl core::default::Default for zenoh_config::LinkTxConf&gt;::default (4 samples, 0.01%)</title><rect x="7.7260%" y="1077" width="0.0144%" height="15" fill="rgb(216,106,43)" fg:x="2150" fg:w="4"/><text x="7.9760%" y="1087.50"></text></g><g><title>num_cpus::get (4 samples, 0.01%)</title><rect x="7.7260%" y="1061" width="0.0144%" height="15" fill="rgb(216,183,2)" fg:x="2150" fg:w="4"/><text x="7.9760%" y="1071.50"></text></g><g><title>num_cpus::linux::get_num_cpus (4 samples, 0.01%)</title><rect x="7.7260%" y="1045" width="0.0144%" height="15" fill="rgb(249,75,3)" fg:x="2150" fg:w="4"/><text x="7.9760%" y="1055.50"></text></g><g><title>num_cpus::linux::logical_cpus (4 samples, 0.01%)</title><rect x="7.7260%" y="1029" width="0.0144%" height="15" fill="rgb(219,67,39)" fg:x="2150" fg:w="4"/><text x="7.9760%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="7.7692%" y="741" width="0.0180%" height="15" fill="rgb(253,228,2)" fg:x="2162" fg:w="5"/><text x="8.0192%" y="751.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="7.7727%" y="725" width="0.0144%" height="15" fill="rgb(235,138,27)" fg:x="2163" fg:w="4"/><text x="8.0227%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.7727%" y="709" width="0.0144%" height="15" fill="rgb(236,97,51)" fg:x="2163" fg:w="4"/><text x="8.0227%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.7727%" y="693" width="0.0144%" height="15" fill="rgb(240,80,30)" fg:x="2163" fg:w="4"/><text x="8.0227%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.7727%" y="677" width="0.0144%" height="15" fill="rgb(230,178,19)" fg:x="2163" fg:w="4"/><text x="8.0227%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.7727%" y="661" width="0.0144%" height="15" fill="rgb(210,190,27)" fg:x="2163" fg:w="4"/><text x="8.0227%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.7727%" y="645" width="0.0144%" height="15" fill="rgb(222,107,31)" fg:x="2163" fg:w="4"/><text x="8.0227%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="7.7763%" y="629" width="0.0108%" height="15" fill="rgb(216,127,34)" fg:x="2164" fg:w="3"/><text x="8.0263%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (12 samples, 0.04%)</title><rect x="7.7548%" y="773" width="0.0431%" height="15" fill="rgb(234,116,52)" fg:x="2158" fg:w="12"/><text x="8.0048%" y="783.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (8 samples, 0.03%)</title><rect x="7.7692%" y="757" width="0.0287%" height="15" fill="rgb(222,124,15)" fg:x="2162" fg:w="8"/><text x="8.0192%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="7.7871%" y="741" width="0.0108%" height="15" fill="rgb(231,179,28)" fg:x="2167" fg:w="3"/><text x="8.0371%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="7.7871%" y="725" width="0.0108%" height="15" fill="rgb(226,93,45)" fg:x="2167" fg:w="3"/><text x="8.0371%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="7.7871%" y="709" width="0.0108%" height="15" fill="rgb(215,8,51)" fg:x="2167" fg:w="3"/><text x="8.0371%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="7.7871%" y="693" width="0.0108%" height="15" fill="rgb(223,106,5)" fg:x="2167" fg:w="3"/><text x="8.0371%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="7.7871%" y="677" width="0.0108%" height="15" fill="rgb(250,191,5)" fg:x="2167" fg:w="3"/><text x="8.0371%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="7.7871%" y="661" width="0.0108%" height="15" fill="rgb(242,132,44)" fg:x="2167" fg:w="3"/><text x="8.0371%" y="671.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="7.7871%" y="645" width="0.0108%" height="15" fill="rgb(251,152,29)" fg:x="2167" fg:w="3"/><text x="8.0371%" y="655.50"></text></g><g><title>async_executor::Runner::new (14 samples, 0.05%)</title><rect x="7.7512%" y="789" width="0.0503%" height="15" fill="rgb(218,179,5)" fg:x="2157" fg:w="14"/><text x="8.0012%" y="799.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="7.8051%" y="773" width="0.0108%" height="15" fill="rgb(227,67,19)" fg:x="2172" fg:w="3"/><text x="8.0551%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (3 samples, 0.01%)</title><rect x="7.8051%" y="757" width="0.0108%" height="15" fill="rgb(233,119,31)" fg:x="2172" fg:w="3"/><text x="8.0551%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (6 samples, 0.02%)</title><rect x="7.8051%" y="789" width="0.0216%" height="15" fill="rgb(241,120,22)" fg:x="2172" fg:w="6"/><text x="8.0551%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.08%)</title><rect x="7.7512%" y="853" width="0.0827%" height="15" fill="rgb(224,102,30)" fg:x="2157" fg:w="23"/><text x="8.0012%" y="863.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (23 samples, 0.08%)</title><rect x="7.7512%" y="837" width="0.0827%" height="15" fill="rgb(210,164,37)" fg:x="2157" fg:w="23"/><text x="8.0012%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.08%)</title><rect x="7.7512%" y="821" width="0.0827%" height="15" fill="rgb(226,191,16)" fg:x="2157" fg:w="23"/><text x="8.0012%" y="831.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (23 samples, 0.08%)</title><rect x="7.7512%" y="805" width="0.0827%" height="15" fill="rgb(214,40,45)" fg:x="2157" fg:w="23"/><text x="8.0012%" y="815.50"></text></g><g><title>zenoh_transport::manager::TransportManager::builder (34 samples, 0.12%)</title><rect x="7.7260%" y="1173" width="0.1222%" height="15" fill="rgb(244,29,26)" fg:x="2150" fg:w="34"/><text x="7.9760%" y="1183.50"></text></g><g><title>&lt;zenoh_transport::manager::TransportManagerBuilder as core::default::Default&gt;::default (34 samples, 0.12%)</title><rect x="7.7260%" y="1157" width="0.1222%" height="15" fill="rgb(216,16,5)" fg:x="2150" fg:w="34"/><text x="7.9760%" y="1167.50"></text></g><g><title>&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast as core::default::Default&gt;::default (34 samples, 0.12%)</title><rect x="7.7260%" y="1141" width="0.1222%" height="15" fill="rgb(249,76,35)" fg:x="2150" fg:w="34"/><text x="7.9760%" y="1151.50"></text></g><g><title>async_std::task::block_on::block_on (30 samples, 0.11%)</title><rect x="7.7404%" y="1125" width="0.1078%" height="15" fill="rgb(207,11,44)" fg:x="2154" fg:w="30"/><text x="7.9904%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::blocking (30 samples, 0.11%)</title><rect x="7.7404%" y="1109" width="0.1078%" height="15" fill="rgb(228,190,49)" fg:x="2154" fg:w="30"/><text x="7.9904%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (30 samples, 0.11%)</title><rect x="7.7404%" y="1093" width="0.1078%" height="15" fill="rgb(214,173,12)" fg:x="2154" fg:w="30"/><text x="7.9904%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.10%)</title><rect x="7.7440%" y="1077" width="0.1042%" height="15" fill="rgb(218,26,35)" fg:x="2155" fg:w="29"/><text x="7.9940%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (29 samples, 0.10%)</title><rect x="7.7440%" y="1061" width="0.1042%" height="15" fill="rgb(220,200,19)" fg:x="2155" fg:w="29"/><text x="7.9940%" y="1071.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (29 samples, 0.10%)</title><rect x="7.7440%" y="1045" width="0.1042%" height="15" fill="rgb(239,95,49)" fg:x="2155" fg:w="29"/><text x="7.9940%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29 samples, 0.10%)</title><rect x="7.7440%" y="1029" width="0.1042%" height="15" fill="rgb(235,85,53)" fg:x="2155" fg:w="29"/><text x="7.9940%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.10%)</title><rect x="7.7476%" y="1013" width="0.1006%" height="15" fill="rgb(233,133,31)" fg:x="2156" fg:w="28"/><text x="7.9976%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (27 samples, 0.10%)</title><rect x="7.7512%" y="997" width="0.0970%" height="15" fill="rgb(218,25,20)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (27 samples, 0.10%)</title><rect x="7.7512%" y="981" width="0.0970%" height="15" fill="rgb(252,210,38)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="991.50"></text></g><g><title>async_global_executor::executor::block_on (27 samples, 0.10%)</title><rect x="7.7512%" y="965" width="0.0970%" height="15" fill="rgb(242,134,21)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.10%)</title><rect x="7.7512%" y="949" width="0.0970%" height="15" fill="rgb(213,28,48)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.10%)</title><rect x="7.7512%" y="933" width="0.0970%" height="15" fill="rgb(250,196,2)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="943.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (27 samples, 0.10%)</title><rect x="7.7512%" y="917" width="0.0970%" height="15" fill="rgb(227,5,17)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on (27 samples, 0.10%)</title><rect x="7.7512%" y="901" width="0.0970%" height="15" fill="rgb(221,226,24)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (27 samples, 0.10%)</title><rect x="7.7512%" y="885" width="0.0970%" height="15" fill="rgb(211,5,48)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="895.50"></text></g><g><title>async_io::driver::block_on (27 samples, 0.10%)</title><rect x="7.7512%" y="869" width="0.0970%" height="15" fill="rgb(219,150,6)" fg:x="2157" fg:w="27"/><text x="8.0012%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="7.8482%" y="1125" width="0.0252%" height="15" fill="rgb(251,46,16)" fg:x="2184" fg:w="7"/><text x="8.0982%" y="1135.50"></text></g><g><title>&lt;zenoh_transport::manager::TransportManager as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="7.8482%" y="1141" width="0.0287%" height="15" fill="rgb(220,204,40)" fg:x="2184" fg:w="8"/><text x="8.0982%" y="1151.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="7.8806%" y="1109" width="0.0108%" height="15" fill="rgb(211,85,2)" fg:x="2193" fg:w="3"/><text x="8.1306%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="7.8985%" y="1077" width="0.0108%" height="15" fill="rgb(229,17,7)" fg:x="2198" fg:w="3"/><text x="8.1485%" y="1087.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="7.9093%" y="1077" width="0.0216%" height="15" fill="rgb(239,72,28)" fg:x="2201" fg:w="6"/><text x="8.1593%" y="1087.50"></text></g><g><title>async_executor::State::notify (14 samples, 0.05%)</title><rect x="7.9452%" y="1045" width="0.0503%" height="15" fill="rgb(230,47,54)" fg:x="2211" fg:w="14"/><text x="8.1952%" y="1055.50"></text></g><g><title>core::task::wake::Waker::wake (12 samples, 0.04%)</title><rect x="7.9524%" y="1029" width="0.0431%" height="15" fill="rgb(214,50,8)" fg:x="2213" fg:w="12"/><text x="8.2024%" y="1039.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (12 samples, 0.04%)</title><rect x="7.9524%" y="1013" width="0.0431%" height="15" fill="rgb(216,198,43)" fg:x="2213" fg:w="12"/><text x="8.2024%" y="1023.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (11 samples, 0.04%)</title><rect x="7.9560%" y="997" width="0.0395%" height="15" fill="rgb(234,20,35)" fg:x="2214" fg:w="11"/><text x="8.2060%" y="1007.50"></text></g><g><title>parking::Unparker::unpark (11 samples, 0.04%)</title><rect x="7.9560%" y="981" width="0.0395%" height="15" fill="rgb(254,45,19)" fg:x="2214" fg:w="11"/><text x="8.2060%" y="991.50"></text></g><g><title>parking::Inner::unpark (9 samples, 0.03%)</title><rect x="7.9632%" y="965" width="0.0323%" height="15" fill="rgb(219,14,44)" fg:x="2216" fg:w="9"/><text x="8.2132%" y="975.50"></text></g><g><title>syscall (8 samples, 0.03%)</title><rect x="7.9668%" y="949" width="0.0287%" height="15" fill="rgb(217,220,26)" fg:x="2217" fg:w="8"/><text x="8.2168%" y="959.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="7.9668%" y="933" width="0.0287%" height="15" fill="rgb(213,158,28)" fg:x="2217" fg:w="8"/><text x="8.2168%" y="943.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="7.9668%" y="917" width="0.0287%" height="15" fill="rgb(252,51,52)" fg:x="2217" fg:w="8"/><text x="8.2168%" y="927.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="7.9668%" y="901" width="0.0287%" height="15" fill="rgb(246,89,16)" fg:x="2217" fg:w="8"/><text x="8.2168%" y="911.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="7.9668%" y="885" width="0.0287%" height="15" fill="rgb(216,158,49)" fg:x="2217" fg:w="8"/><text x="8.2168%" y="895.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="7.9668%" y="869" width="0.0287%" height="15" fill="rgb(236,107,19)" fg:x="2217" fg:w="8"/><text x="8.2168%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="7.9740%" y="853" width="0.0216%" height="15" fill="rgb(228,185,30)" fg:x="2219" fg:w="6"/><text x="8.2240%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.9812%" y="837" width="0.0144%" height="15" fill="rgb(246,134,8)" fg:x="2221" fg:w="4"/><text x="8.2312%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.9812%" y="821" width="0.0144%" height="15" fill="rgb(214,143,50)" fg:x="2221" fg:w="4"/><text x="8.2312%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.9812%" y="805" width="0.0144%" height="15" fill="rgb(228,75,8)" fg:x="2221" fg:w="4"/><text x="8.2312%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (26 samples, 0.09%)</title><rect x="7.9452%" y="1077" width="0.0934%" height="15" fill="rgb(207,175,4)" fg:x="2211" fg:w="26"/><text x="8.1952%" y="1087.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (26 samples, 0.09%)</title><rect x="7.9452%" y="1061" width="0.0934%" height="15" fill="rgb(205,108,24)" fg:x="2211" fg:w="26"/><text x="8.1952%" y="1071.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (12 samples, 0.04%)</title><rect x="7.9955%" y="1045" width="0.0431%" height="15" fill="rgb(244,120,49)" fg:x="2225" fg:w="12"/><text x="8.2455%" y="1055.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (11 samples, 0.04%)</title><rect x="7.9991%" y="1029" width="0.0395%" height="15" fill="rgb(223,47,38)" fg:x="2226" fg:w="11"/><text x="8.2491%" y="1039.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="8.0423%" y="1061" width="0.0216%" height="15" fill="rgb(229,179,11)" fg:x="2238" fg:w="6"/><text x="8.2923%" y="1071.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="8.1033%" y="997" width="0.0252%" height="15" fill="rgb(231,122,1)" fg:x="2255" fg:w="7"/><text x="8.3533%" y="1007.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="8.0782%" y="1013" width="0.0611%" height="15" fill="rgb(245,119,9)" fg:x="2248" fg:w="17"/><text x="8.3282%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="8.1285%" y="997" width="0.0108%" height="15" fill="rgb(241,163,25)" fg:x="2262" fg:w="3"/><text x="8.3785%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="8.1285%" y="981" width="0.0108%" height="15" fill="rgb(217,214,3)" fg:x="2262" fg:w="3"/><text x="8.3785%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="8.1285%" y="965" width="0.0108%" height="15" fill="rgb(240,86,28)" fg:x="2262" fg:w="3"/><text x="8.3785%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="8.1285%" y="949" width="0.0108%" height="15" fill="rgb(215,47,9)" fg:x="2262" fg:w="3"/><text x="8.3785%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="8.1285%" y="933" width="0.0108%" height="15" fill="rgb(252,25,45)" fg:x="2262" fg:w="3"/><text x="8.3785%" y="943.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.08%)</title><rect x="8.0674%" y="1045" width="0.0827%" height="15" fill="rgb(251,164,9)" fg:x="2245" fg:w="23"/><text x="8.3174%" y="1055.50"></text></g><g><title>malloc (22 samples, 0.08%)</title><rect x="8.0710%" y="1029" width="0.0791%" height="15" fill="rgb(233,194,0)" fg:x="2246" fg:w="22"/><text x="8.3210%" y="1039.50"></text></g><g><title>async_task::runnable::spawn_unchecked (36 samples, 0.13%)</title><rect x="8.0423%" y="1077" width="0.1294%" height="15" fill="rgb(249,111,24)" fg:x="2238" fg:w="36"/><text x="8.2923%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (30 samples, 0.11%)</title><rect x="8.0638%" y="1061" width="0.1078%" height="15" fill="rgb(250,223,3)" fg:x="2244" fg:w="30"/><text x="8.3138%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.02%)</title><rect x="8.1501%" y="1045" width="0.0216%" height="15" fill="rgb(236,178,37)" fg:x="2268" fg:w="6"/><text x="8.4001%" y="1055.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="8.1501%" y="1029" width="0.0216%" height="15" fill="rgb(241,158,50)" fg:x="2268" fg:w="6"/><text x="8.4001%" y="1039.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="8.1501%" y="1013" width="0.0216%" height="15" fill="rgb(213,121,41)" fg:x="2268" fg:w="6"/><text x="8.4001%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (14 samples, 0.05%)</title><rect x="8.1716%" y="1077" width="0.0503%" height="15" fill="rgb(240,92,3)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="1087.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.05%)</title><rect x="8.1716%" y="1061" width="0.0503%" height="15" fill="rgb(205,123,3)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="1071.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (14 samples, 0.05%)</title><rect x="8.1716%" y="1045" width="0.0503%" height="15" fill="rgb(205,97,47)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="1055.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (14 samples, 0.05%)</title><rect x="8.1716%" y="1029" width="0.0503%" height="15" fill="rgb(247,152,14)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="1039.50"></text></g><g><title>syscall (14 samples, 0.05%)</title><rect x="8.1716%" y="1013" width="0.0503%" height="15" fill="rgb(248,195,53)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="1023.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="8.1716%" y="997" width="0.0503%" height="15" fill="rgb(226,201,16)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="1007.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="8.1716%" y="981" width="0.0503%" height="15" fill="rgb(205,98,0)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="991.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="8.1716%" y="965" width="0.0503%" height="15" fill="rgb(214,191,48)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="975.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="8.1716%" y="949" width="0.0503%" height="15" fill="rgb(237,112,39)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="959.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="8.1716%" y="933" width="0.0503%" height="15" fill="rgb(247,203,27)" fg:x="2274" fg:w="14"/><text x="8.4216%" y="943.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="8.1824%" y="917" width="0.0395%" height="15" fill="rgb(235,124,28)" fg:x="2277" fg:w="11"/><text x="8.4324%" y="927.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="8.1932%" y="901" width="0.0287%" height="15" fill="rgb(208,207,46)" fg:x="2280" fg:w="8"/><text x="8.4432%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="8.2004%" y="885" width="0.0216%" height="15" fill="rgb(234,176,4)" fg:x="2282" fg:w="6"/><text x="8.4504%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="8.2040%" y="869" width="0.0180%" height="15" fill="rgb(230,133,28)" fg:x="2283" fg:w="5"/><text x="8.4540%" y="879.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (6 samples, 0.02%)</title><rect x="8.2219%" y="1077" width="0.0216%" height="15" fill="rgb(211,137,40)" fg:x="2288" fg:w="6"/><text x="8.4719%" y="1087.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (5 samples, 0.02%)</title><rect x="8.2255%" y="1061" width="0.0180%" height="15" fill="rgb(254,35,13)" fg:x="2289" fg:w="5"/><text x="8.4755%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="8.2327%" y="1045" width="0.0108%" height="15" fill="rgb(225,49,51)" fg:x="2291" fg:w="3"/><text x="8.4827%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="8.2327%" y="1029" width="0.0108%" height="15" fill="rgb(251,10,15)" fg:x="2291" fg:w="3"/><text x="8.4827%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="8.2327%" y="1013" width="0.0108%" height="15" fill="rgb(228,207,15)" fg:x="2291" fg:w="3"/><text x="8.4827%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="8.2327%" y="997" width="0.0108%" height="15" fill="rgb(241,99,19)" fg:x="2291" fg:w="3"/><text x="8.4827%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.01%)</title><rect x="8.2327%" y="981" width="0.0108%" height="15" fill="rgb(207,104,49)" fg:x="2291" fg:w="3"/><text x="8.4827%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="8.2327%" y="965" width="0.0108%" height="15" fill="rgb(234,99,18)" fg:x="2291" fg:w="3"/><text x="8.4827%" y="975.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.01%)</title><rect x="8.2327%" y="949" width="0.0108%" height="15" fill="rgb(213,191,49)" fg:x="2291" fg:w="3"/><text x="8.4827%" y="959.50"></text></g><g><title>realloc (3 samples, 0.01%)</title><rect x="8.2327%" y="933" width="0.0108%" height="15" fill="rgb(210,226,19)" fg:x="2291" fg:w="3"/><text x="8.4827%" y="943.50"></text></g><g><title>std::sys::unix::futex::futex_wait (16 samples, 0.06%)</title><rect x="8.2507%" y="1013" width="0.0575%" height="15" fill="rgb(229,97,18)" fg:x="2296" fg:w="16"/><text x="8.5007%" y="1023.50"></text></g><g><title>syscall (14 samples, 0.05%)</title><rect x="8.2579%" y="997" width="0.0503%" height="15" fill="rgb(211,167,15)" fg:x="2298" fg:w="14"/><text x="8.5079%" y="1007.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="8.2615%" y="981" width="0.0467%" height="15" fill="rgb(210,169,34)" fg:x="2299" fg:w="13"/><text x="8.5115%" y="991.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="8.2615%" y="965" width="0.0467%" height="15" fill="rgb(241,121,31)" fg:x="2299" fg:w="13"/><text x="8.5115%" y="975.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="8.2651%" y="949" width="0.0431%" height="15" fill="rgb(232,40,11)" fg:x="2300" fg:w="12"/><text x="8.5151%" y="959.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="8.2687%" y="933" width="0.0395%" height="15" fill="rgb(205,86,26)" fg:x="2301" fg:w="11"/><text x="8.5187%" y="943.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="8.2722%" y="917" width="0.0359%" height="15" fill="rgb(231,126,28)" fg:x="2302" fg:w="10"/><text x="8.5222%" y="927.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="8.2722%" y="901" width="0.0359%" height="15" fill="rgb(219,221,18)" fg:x="2302" fg:w="10"/><text x="8.5222%" y="911.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="8.2722%" y="885" width="0.0359%" height="15" fill="rgb(211,40,0)" fg:x="2302" fg:w="10"/><text x="8.5222%" y="895.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="8.2794%" y="869" width="0.0287%" height="15" fill="rgb(239,85,43)" fg:x="2304" fg:w="8"/><text x="8.5294%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="8.2902%" y="853" width="0.0180%" height="15" fill="rgb(231,55,21)" fg:x="2307" fg:w="5"/><text x="8.5402%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="8.2974%" y="837" width="0.0108%" height="15" fill="rgb(225,184,43)" fg:x="2309" fg:w="3"/><text x="8.5474%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="8.2974%" y="821" width="0.0108%" height="15" fill="rgb(251,158,41)" fg:x="2309" fg:w="3"/><text x="8.5474%" y="831.50"></text></g><g><title>async_executor::Executor::spawn (125 samples, 0.45%)</title><rect x="7.8985%" y="1093" width="0.4492%" height="15" fill="rgb(234,159,37)" fg:x="2198" fg:w="125"/><text x="8.1485%" y="1103.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.10%)</title><rect x="8.2435%" y="1077" width="0.1042%" height="15" fill="rgb(216,204,22)" fg:x="2294" fg:w="29"/><text x="8.4935%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.10%)</title><rect x="8.2435%" y="1061" width="0.1042%" height="15" fill="rgb(214,17,3)" fg:x="2294" fg:w="29"/><text x="8.4935%" y="1071.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (29 samples, 0.10%)</title><rect x="8.2435%" y="1045" width="0.1042%" height="15" fill="rgb(212,111,17)" fg:x="2294" fg:w="29"/><text x="8.4935%" y="1055.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (28 samples, 0.10%)</title><rect x="8.2471%" y="1029" width="0.1006%" height="15" fill="rgb(221,157,24)" fg:x="2295" fg:w="28"/><text x="8.4971%" y="1039.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (11 samples, 0.04%)</title><rect x="8.3082%" y="1013" width="0.0395%" height="15" fill="rgb(252,16,13)" fg:x="2312" fg:w="11"/><text x="8.5582%" y="1023.50"></text></g><g><title>async_global_executor::executor::spawn (132 samples, 0.47%)</title><rect x="7.8913%" y="1109" width="0.4743%" height="15" fill="rgb(221,62,2)" fg:x="2196" fg:w="132"/><text x="8.1413%" y="1119.50"></text></g><g><title>async_global_executor::init::init (5 samples, 0.02%)</title><rect x="8.3477%" y="1093" width="0.0180%" height="15" fill="rgb(247,87,22)" fg:x="2323" fg:w="5"/><text x="8.5977%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (3 samples, 0.01%)</title><rect x="8.3549%" y="1077" width="0.0108%" height="15" fill="rgb(215,73,9)" fg:x="2325" fg:w="3"/><text x="8.6049%" y="1087.50"></text></g><g><title>async_std::task::spawn::spawn (141 samples, 0.51%)</title><rect x="7.8770%" y="1141" width="0.5067%" height="15" fill="rgb(207,175,33)" fg:x="2192" fg:w="141"/><text x="8.1270%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::spawn (141 samples, 0.51%)</title><rect x="7.8770%" y="1125" width="0.5067%" height="15" fill="rgb(243,129,54)" fg:x="2192" fg:w="141"/><text x="8.1270%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::build (5 samples, 0.02%)</title><rect x="8.3657%" y="1109" width="0.0180%" height="15" fill="rgb(227,119,45)" fg:x="2328" fg:w="5"/><text x="8.6157%" y="1119.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::new (4 samples, 0.01%)</title><rect x="8.3693%" y="1093" width="0.0144%" height="15" fill="rgb(205,109,36)" fg:x="2329" fg:w="4"/><text x="8.6193%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.09%)</title><rect x="8.3836%" y="1125" width="0.0862%" height="15" fill="rgb(205,6,39)" fg:x="2333" fg:w="24"/><text x="8.6336%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="8.4950%" y="1109" width="0.0144%" height="15" fill="rgb(221,32,16)" fg:x="2364" fg:w="4"/><text x="8.7450%" y="1119.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.05%)</title><rect x="8.4699%" y="1125" width="0.0467%" height="15" fill="rgb(228,144,50)" fg:x="2357" fg:w="13"/><text x="8.7199%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (4 samples, 0.01%)</title><rect x="8.5202%" y="1125" width="0.0144%" height="15" fill="rgb(229,201,53)" fg:x="2371" fg:w="4"/><text x="8.7702%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Packet&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt;&gt; (20 samples, 0.07%)</title><rect x="8.5346%" y="1093" width="0.0719%" height="15" fill="rgb(249,153,27)" fg:x="2375" fg:w="20"/><text x="8.7846%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.07%)</title><rect x="8.5346%" y="1077" width="0.0719%" height="15" fill="rgb(227,106,25)" fg:x="2375" fg:w="20"/><text x="8.7846%" y="1087.50"></text></g><g><title>&lt;std::sys::unix::thread::Thread as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="8.6280%" y="1077" width="0.0180%" height="15" fill="rgb(230,65,29)" fg:x="2401" fg:w="5"/><text x="8.8780%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::thread::Thread&gt; (48 samples, 0.17%)</title><rect x="8.6064%" y="1093" width="0.1725%" height="15" fill="rgb(221,57,46)" fg:x="2395" fg:w="48"/><text x="8.8564%" y="1103.50"></text></g><g><title>pthread_detach (37 samples, 0.13%)</title><rect x="8.6460%" y="1077" width="0.1330%" height="15" fill="rgb(229,161,17)" fg:x="2406" fg:w="37"/><text x="8.8960%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinHandle&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt; (86 samples, 0.31%)</title><rect x="8.5346%" y="1125" width="0.3090%" height="15" fill="rgb(222,213,11)" fg:x="2375" fg:w="86"/><text x="8.7846%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinInner&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt; (86 samples, 0.31%)</title><rect x="8.5346%" y="1109" width="0.3090%" height="15" fill="rgb(235,35,13)" fg:x="2375" fg:w="86"/><text x="8.7846%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::Thread&gt; (18 samples, 0.06%)</title><rect x="8.7789%" y="1093" width="0.0647%" height="15" fill="rgb(233,158,34)" fg:x="2443" fg:w="18"/><text x="9.0289%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt;&gt; (18 samples, 0.06%)</title><rect x="8.7789%" y="1077" width="0.0647%" height="15" fill="rgb(215,151,48)" fg:x="2443" fg:w="18"/><text x="9.0289%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::thread::Inner&gt;&gt; (18 samples, 0.06%)</title><rect x="8.7789%" y="1061" width="0.0647%" height="15" fill="rgb(229,84,14)" fg:x="2443" fg:w="18"/><text x="9.0289%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.06%)</title><rect x="8.7789%" y="1045" width="0.0647%" height="15" fill="rgb(229,68,14)" fg:x="2443" fg:w="18"/><text x="9.0289%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.03%)</title><rect x="8.8867%" y="1061" width="0.0287%" height="15" fill="rgb(243,106,26)" fg:x="2473" fg:w="8"/><text x="9.1367%" y="1071.50"></text></g><g><title>&lt;std::thread::Thread as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="8.9155%" y="1061" width="0.0323%" height="15" fill="rgb(206,45,38)" fg:x="2481" fg:w="9"/><text x="9.1655%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="8.9155%" y="1045" width="0.0323%" height="15" fill="rgb(226,6,15)" fg:x="2481" fg:w="9"/><text x="9.1655%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="8.9155%" y="1029" width="0.0323%" height="15" fill="rgb(232,22,54)" fg:x="2481" fg:w="9"/><text x="9.1655%" y="1039.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="9.0161%" y="965" width="0.0647%" height="15" fill="rgb(229,222,32)" fg:x="2509" fg:w="18"/><text x="9.2661%" y="975.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="9.0556%" y="949" width="0.0252%" height="15" fill="rgb(228,62,29)" fg:x="2520" fg:w="7"/><text x="9.3056%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (41 samples, 0.15%)</title><rect x="8.9478%" y="1061" width="0.1473%" height="15" fill="rgb(251,103,34)" fg:x="2490" fg:w="41"/><text x="9.1978%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.13%)</title><rect x="8.9622%" y="1045" width="0.1330%" height="15" fill="rgb(233,12,30)" fg:x="2494" fg:w="37"/><text x="9.2122%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.13%)</title><rect x="8.9622%" y="1029" width="0.1330%" height="15" fill="rgb(238,52,0)" fg:x="2494" fg:w="37"/><text x="9.2122%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.13%)</title><rect x="8.9622%" y="1013" width="0.1330%" height="15" fill="rgb(223,98,5)" fg:x="2494" fg:w="37"/><text x="9.2122%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (37 samples, 0.13%)</title><rect x="8.9622%" y="997" width="0.1330%" height="15" fill="rgb(228,75,37)" fg:x="2494" fg:w="37"/><text x="9.2122%" y="1007.50"></text></g><g><title>malloc (36 samples, 0.13%)</title><rect x="8.9658%" y="981" width="0.1294%" height="15" fill="rgb(205,115,49)" fg:x="2495" fg:w="36"/><text x="9.2158%" y="991.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="9.2066%" y="949" width="0.0144%" height="15" fill="rgb(250,154,43)" fg:x="2562" fg:w="4"/><text x="9.4566%" y="959.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="9.1598%" y="965" width="0.0647%" height="15" fill="rgb(226,43,29)" fg:x="2549" fg:w="18"/><text x="9.4098%" y="975.50"></text></g><g><title>__lll_lock_wait_private (6 samples, 0.02%)</title><rect x="9.2245%" y="965" width="0.0216%" height="15" fill="rgb(249,228,39)" fg:x="2567" fg:w="6"/><text x="9.4745%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2245%" y="949" width="0.0216%" height="15" fill="rgb(216,79,43)" fg:x="2567" fg:w="6"/><text x="9.4745%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2245%" y="933" width="0.0216%" height="15" fill="rgb(228,95,12)" fg:x="2567" fg:w="6"/><text x="9.4745%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2245%" y="917" width="0.0216%" height="15" fill="rgb(249,221,15)" fg:x="2567" fg:w="6"/><text x="9.4745%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2245%" y="901" width="0.0216%" height="15" fill="rgb(233,34,13)" fg:x="2567" fg:w="6"/><text x="9.4745%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2245%" y="885" width="0.0216%" height="15" fill="rgb(214,103,39)" fg:x="2567" fg:w="6"/><text x="9.4745%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2245%" y="869" width="0.0216%" height="15" fill="rgb(251,126,39)" fg:x="2567" fg:w="6"/><text x="9.4745%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2245%" y="853" width="0.0216%" height="15" fill="rgb(214,216,36)" fg:x="2567" fg:w="6"/><text x="9.4745%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="9.2281%" y="837" width="0.0180%" height="15" fill="rgb(220,221,8)" fg:x="2568" fg:w="5"/><text x="9.4781%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="9.2317%" y="821" width="0.0144%" height="15" fill="rgb(240,216,3)" fg:x="2569" fg:w="4"/><text x="9.4817%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="9.2353%" y="805" width="0.0108%" height="15" fill="rgb(232,218,17)" fg:x="2570" fg:w="3"/><text x="9.4853%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (43 samples, 0.15%)</title><rect x="9.0952%" y="1061" width="0.1545%" height="15" fill="rgb(229,163,45)" fg:x="2531" fg:w="43"/><text x="9.3452%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (39 samples, 0.14%)</title><rect x="9.1095%" y="1045" width="0.1401%" height="15" fill="rgb(231,110,42)" fg:x="2535" fg:w="39"/><text x="9.3595%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.14%)</title><rect x="9.1095%" y="1029" width="0.1401%" height="15" fill="rgb(208,170,48)" fg:x="2535" fg:w="39"/><text x="9.3595%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.14%)</title><rect x="9.1095%" y="1013" width="0.1401%" height="15" fill="rgb(239,116,25)" fg:x="2535" fg:w="39"/><text x="9.3595%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.14%)</title><rect x="9.1131%" y="997" width="0.1366%" height="15" fill="rgb(219,200,50)" fg:x="2536" fg:w="38"/><text x="9.3631%" y="1007.50"></text></g><g><title>malloc (38 samples, 0.14%)</title><rect x="9.1131%" y="981" width="0.1366%" height="15" fill="rgb(245,200,0)" fg:x="2536" fg:w="38"/><text x="9.3631%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (5 samples, 0.02%)</title><rect x="9.2497%" y="1061" width="0.0180%" height="15" fill="rgb(245,119,33)" fg:x="2574" fg:w="5"/><text x="9.4997%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="9.2497%" y="1045" width="0.0180%" height="15" fill="rgb(231,125,12)" fg:x="2574" fg:w="5"/><text x="9.4997%" y="1055.50"></text></g><g><title>std::sys_common::thread::min_stack (5 samples, 0.02%)</title><rect x="9.2497%" y="1029" width="0.0180%" height="15" fill="rgb(216,96,41)" fg:x="2574" fg:w="5"/><text x="9.4997%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.01%)</title><rect x="9.2569%" y="1013" width="0.0108%" height="15" fill="rgb(248,43,45)" fg:x="2576" fg:w="3"/><text x="9.5069%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="9.2569%" y="997" width="0.0108%" height="15" fill="rgb(217,222,7)" fg:x="2576" fg:w="3"/><text x="9.5069%" y="1007.50"></text></g><g><title>std::io::stdio::set_output_capture (6 samples, 0.02%)</title><rect x="9.2676%" y="1061" width="0.0216%" height="15" fill="rgb(233,28,6)" fg:x="2579" fg:w="6"/><text x="9.5176%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (3 samples, 0.01%)</title><rect x="9.2784%" y="1045" width="0.0108%" height="15" fill="rgb(231,218,15)" fg:x="2582" fg:w="3"/><text x="9.5284%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (25 samples, 0.09%)</title><rect x="9.3431%" y="1045" width="0.0898%" height="15" fill="rgb(226,171,48)" fg:x="2600" fg:w="25"/><text x="9.5931%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.09%)</title><rect x="9.3431%" y="1029" width="0.0898%" height="15" fill="rgb(235,201,9)" fg:x="2600" fg:w="25"/><text x="9.5931%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.09%)</title><rect x="9.3431%" y="1013" width="0.0898%" height="15" fill="rgb(217,80,15)" fg:x="2600" fg:w="25"/><text x="9.5931%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.09%)</title><rect x="9.3431%" y="997" width="0.0898%" height="15" fill="rgb(219,152,8)" fg:x="2600" fg:w="25"/><text x="9.5931%" y="1007.50"></text></g><g><title>malloc (21 samples, 0.08%)</title><rect x="9.3575%" y="981" width="0.0755%" height="15" fill="rgb(243,107,38)" fg:x="2604" fg:w="21"/><text x="9.6075%" y="991.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="9.4222%" y="965" width="0.0108%" height="15" fill="rgb(231,17,5)" fg:x="2622" fg:w="3"/><text x="9.6722%" y="975.50"></text></g><g><title>pthread_attr_destroy (5 samples, 0.02%)</title><rect x="9.4401%" y="1045" width="0.0180%" height="15" fill="rgb(209,25,54)" fg:x="2627" fg:w="5"/><text x="9.6901%" y="1055.50"></text></g><g><title>pthread_attr_init (6 samples, 0.02%)</title><rect x="9.4581%" y="1045" width="0.0216%" height="15" fill="rgb(219,0,2)" fg:x="2632" fg:w="6"/><text x="9.7081%" y="1055.50"></text></g><g><title>__getpagesize (5 samples, 0.02%)</title><rect x="9.4617%" y="1029" width="0.0180%" height="15" fill="rgb(246,9,5)" fg:x="2633" fg:w="5"/><text x="9.7117%" y="1039.50"></text></g><g><title>[libc.so.6] (197 samples, 0.71%)</title><rect x="10.0474%" y="1029" width="0.7079%" height="15" fill="rgb(226,159,4)" fg:x="2796" fg:w="197"/><text x="10.2974%" y="1039.50"></text></g><g><title>[libc.so.6] (165 samples, 0.59%)</title><rect x="10.1624%" y="1013" width="0.5929%" height="15" fill="rgb(219,175,34)" fg:x="2828" fg:w="165"/><text x="10.4124%" y="1023.50"></text></g><g><title>__clone (161 samples, 0.58%)</title><rect x="10.1768%" y="997" width="0.5786%" height="15" fill="rgb(236,10,46)" fg:x="2832" fg:w="161"/><text x="10.4268%" y="1007.50"></text></g><g><title>[unknown] (156 samples, 0.56%)</title><rect x="10.1948%" y="981" width="0.5606%" height="15" fill="rgb(240,211,16)" fg:x="2837" fg:w="156"/><text x="10.4448%" y="991.50"></text></g><g><title>[unknown] (153 samples, 0.55%)</title><rect x="10.2055%" y="965" width="0.5498%" height="15" fill="rgb(205,3,43)" fg:x="2840" fg:w="153"/><text x="10.4555%" y="975.50"></text></g><g><title>[unknown] (148 samples, 0.53%)</title><rect x="10.2235%" y="949" width="0.5318%" height="15" fill="rgb(245,7,22)" fg:x="2845" fg:w="148"/><text x="10.4735%" y="959.50"></text></g><g><title>[unknown] (148 samples, 0.53%)</title><rect x="10.2235%" y="933" width="0.5318%" height="15" fill="rgb(239,132,32)" fg:x="2845" fg:w="148"/><text x="10.4735%" y="943.50"></text></g><g><title>[unknown] (123 samples, 0.44%)</title><rect x="10.3134%" y="917" width="0.4420%" height="15" fill="rgb(228,202,34)" fg:x="2870" fg:w="123"/><text x="10.5634%" y="927.50"></text></g><g><title>[unknown] (101 samples, 0.36%)</title><rect x="10.3924%" y="901" width="0.3629%" height="15" fill="rgb(254,200,22)" fg:x="2892" fg:w="101"/><text x="10.6424%" y="911.50"></text></g><g><title>[unknown] (86 samples, 0.31%)</title><rect x="10.4463%" y="885" width="0.3090%" height="15" fill="rgb(219,10,39)" fg:x="2907" fg:w="86"/><text x="10.6963%" y="895.50"></text></g><g><title>[unknown] (70 samples, 0.25%)</title><rect x="10.5038%" y="869" width="0.2515%" height="15" fill="rgb(226,210,39)" fg:x="2923" fg:w="70"/><text x="10.7538%" y="879.50"></text></g><g><title>[unknown] (51 samples, 0.18%)</title><rect x="10.5721%" y="853" width="0.1833%" height="15" fill="rgb(208,219,16)" fg:x="2942" fg:w="51"/><text x="10.8221%" y="863.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="10.6979%" y="837" width="0.0575%" height="15" fill="rgb(216,158,51)" fg:x="2977" fg:w="16"/><text x="10.9479%" y="847.50"></text></g><g><title>[unknown] (352 samples, 1.26%)</title><rect x="10.7554%" y="1029" width="1.2649%" height="15" fill="rgb(233,14,44)" fg:x="2993" fg:w="352"/><text x="11.0054%" y="1039.50"></text></g><g><title>[unknown] (305 samples, 1.10%)</title><rect x="10.9242%" y="1013" width="1.0960%" height="15" fill="rgb(237,97,39)" fg:x="3040" fg:w="305"/><text x="11.1742%" y="1023.50"></text></g><g><title>[unknown] (301 samples, 1.08%)</title><rect x="10.9386%" y="997" width="1.0816%" height="15" fill="rgb(218,198,43)" fg:x="3044" fg:w="301"/><text x="11.1886%" y="1007.50"></text></g><g><title>[unknown] (287 samples, 1.03%)</title><rect x="10.9889%" y="981" width="1.0313%" height="15" fill="rgb(231,104,20)" fg:x="3058" fg:w="287"/><text x="11.2389%" y="991.50"></text></g><g><title>[unknown] (251 samples, 0.90%)</title><rect x="11.1183%" y="965" width="0.9020%" height="15" fill="rgb(254,36,13)" fg:x="3094" fg:w="251"/><text x="11.3683%" y="975.50"></text></g><g><title>[unknown] (154 samples, 0.55%)</title><rect x="11.4669%" y="949" width="0.5534%" height="15" fill="rgb(248,14,50)" fg:x="3191" fg:w="154"/><text x="11.7169%" y="959.50"></text></g><g><title>[unknown] (141 samples, 0.51%)</title><rect x="11.5136%" y="933" width="0.5067%" height="15" fill="rgb(217,107,29)" fg:x="3204" fg:w="141"/><text x="11.7636%" y="943.50"></text></g><g><title>[unknown] (129 samples, 0.46%)</title><rect x="11.5567%" y="917" width="0.4636%" height="15" fill="rgb(251,169,33)" fg:x="3216" fg:w="129"/><text x="11.8067%" y="927.50"></text></g><g><title>[unknown] (111 samples, 0.40%)</title><rect x="11.6214%" y="901" width="0.3989%" height="15" fill="rgb(217,108,32)" fg:x="3234" fg:w="111"/><text x="11.8714%" y="911.50"></text></g><g><title>[unknown] (64 samples, 0.23%)</title><rect x="11.7903%" y="885" width="0.2300%" height="15" fill="rgb(219,66,42)" fg:x="3281" fg:w="64"/><text x="12.0403%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="12.0023%" y="869" width="0.0180%" height="15" fill="rgb(206,180,7)" fg:x="3340" fg:w="5"/><text x="12.2523%" y="879.50"></text></g><g><title>__lll_lock_wait_private (4 samples, 0.01%)</title><rect x="12.0203%" y="1029" width="0.0144%" height="15" fill="rgb(208,226,31)" fg:x="3345" fg:w="4"/><text x="12.2703%" y="1039.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="12.0203%" y="1013" width="0.0144%" height="15" fill="rgb(218,26,49)" fg:x="3345" fg:w="4"/><text x="12.2703%" y="1023.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="12.0203%" y="997" width="0.0144%" height="15" fill="rgb(233,197,48)" fg:x="3345" fg:w="4"/><text x="12.2703%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="12.0203%" y="981" width="0.0144%" height="15" fill="rgb(252,181,51)" fg:x="3345" fg:w="4"/><text x="12.2703%" y="991.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="12.0203%" y="965" width="0.0144%" height="15" fill="rgb(253,90,19)" fg:x="3345" fg:w="4"/><text x="12.2703%" y="975.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="12.0203%" y="949" width="0.0144%" height="15" fill="rgb(215,171,30)" fg:x="3345" fg:w="4"/><text x="12.2703%" y="959.50"></text></g><g><title>__lll_lock_wake_private (9 samples, 0.03%)</title><rect x="12.0346%" y="1029" width="0.0323%" height="15" fill="rgb(214,222,9)" fg:x="3349" fg:w="9"/><text x="12.2846%" y="1039.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="12.0346%" y="1013" width="0.0323%" height="15" fill="rgb(223,3,22)" fg:x="3349" fg:w="9"/><text x="12.2846%" y="1023.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="12.0346%" y="997" width="0.0323%" height="15" fill="rgb(225,196,46)" fg:x="3349" fg:w="9"/><text x="12.2846%" y="1007.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="12.0346%" y="981" width="0.0323%" height="15" fill="rgb(209,110,37)" fg:x="3349" fg:w="9"/><text x="12.2846%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="12.0418%" y="965" width="0.0252%" height="15" fill="rgb(249,89,12)" fg:x="3351" fg:w="7"/><text x="12.2918%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="12.0454%" y="949" width="0.0216%" height="15" fill="rgb(226,27,33)" fg:x="3352" fg:w="6"/><text x="12.2954%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="12.0454%" y="933" width="0.0216%" height="15" fill="rgb(213,82,22)" fg:x="3352" fg:w="6"/><text x="12.2954%" y="943.50"></text></g><g><title>__mmap (135 samples, 0.49%)</title><rect x="12.0670%" y="1029" width="0.4851%" height="15" fill="rgb(248,140,0)" fg:x="3358" fg:w="135"/><text x="12.3170%" y="1039.50"></text></g><g><title>[unknown] (135 samples, 0.49%)</title><rect x="12.0670%" y="1013" width="0.4851%" height="15" fill="rgb(228,106,3)" fg:x="3358" fg:w="135"/><text x="12.3170%" y="1023.50"></text></g><g><title>[unknown] (133 samples, 0.48%)</title><rect x="12.0742%" y="997" width="0.4779%" height="15" fill="rgb(209,23,37)" fg:x="3360" fg:w="133"/><text x="12.3242%" y="1007.50"></text></g><g><title>[unknown] (131 samples, 0.47%)</title><rect x="12.0814%" y="981" width="0.4707%" height="15" fill="rgb(241,93,50)" fg:x="3362" fg:w="131"/><text x="12.3314%" y="991.50"></text></g><g><title>[unknown] (123 samples, 0.44%)</title><rect x="12.1101%" y="965" width="0.4420%" height="15" fill="rgb(253,46,43)" fg:x="3370" fg:w="123"/><text x="12.3601%" y="975.50"></text></g><g><title>[unknown] (78 samples, 0.28%)</title><rect x="12.2718%" y="949" width="0.2803%" height="15" fill="rgb(226,206,43)" fg:x="3415" fg:w="78"/><text x="12.5218%" y="959.50"></text></g><g><title>[unknown] (68 samples, 0.24%)</title><rect x="12.3077%" y="933" width="0.2444%" height="15" fill="rgb(217,54,7)" fg:x="3425" fg:w="68"/><text x="12.5577%" y="943.50"></text></g><g><title>[unknown] (37 samples, 0.13%)</title><rect x="12.4191%" y="917" width="0.1330%" height="15" fill="rgb(223,5,52)" fg:x="3456" fg:w="37"/><text x="12.6691%" y="927.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="12.4802%" y="901" width="0.0719%" height="15" fill="rgb(206,52,46)" fg:x="3473" fg:w="20"/><text x="12.7302%" y="911.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="12.5090%" y="885" width="0.0431%" height="15" fill="rgb(253,136,11)" fg:x="3481" fg:w="12"/><text x="12.7590%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="12.5377%" y="869" width="0.0144%" height="15" fill="rgb(208,106,33)" fg:x="3489" fg:w="4"/><text x="12.7877%" y="879.50"></text></g><g><title>__mprotect (173 samples, 0.62%)</title><rect x="12.5521%" y="1029" width="0.6217%" height="15" fill="rgb(206,54,4)" fg:x="3493" fg:w="173"/><text x="12.8021%" y="1039.50"></text></g><g><title>[unknown] (173 samples, 0.62%)</title><rect x="12.5521%" y="1013" width="0.6217%" height="15" fill="rgb(213,3,15)" fg:x="3493" fg:w="173"/><text x="12.8021%" y="1023.50"></text></g><g><title>[unknown] (173 samples, 0.62%)</title><rect x="12.5521%" y="997" width="0.6217%" height="15" fill="rgb(252,211,39)" fg:x="3493" fg:w="173"/><text x="12.8021%" y="1007.50"></text></g><g><title>[unknown] (173 samples, 0.62%)</title><rect x="12.5521%" y="981" width="0.6217%" height="15" fill="rgb(223,6,36)" fg:x="3493" fg:w="173"/><text x="12.8021%" y="991.50"></text></g><g><title>[unknown] (172 samples, 0.62%)</title><rect x="12.5557%" y="965" width="0.6181%" height="15" fill="rgb(252,169,45)" fg:x="3494" fg:w="172"/><text x="12.8057%" y="975.50"></text></g><g><title>[unknown] (168 samples, 0.60%)</title><rect x="12.5701%" y="949" width="0.6037%" height="15" fill="rgb(212,48,26)" fg:x="3498" fg:w="168"/><text x="12.8201%" y="959.50"></text></g><g><title>[unknown] (154 samples, 0.55%)</title><rect x="12.6204%" y="933" width="0.5534%" height="15" fill="rgb(251,102,48)" fg:x="3512" fg:w="154"/><text x="12.8704%" y="943.50"></text></g><g><title>[unknown] (106 samples, 0.38%)</title><rect x="12.7929%" y="917" width="0.3809%" height="15" fill="rgb(243,208,16)" fg:x="3560" fg:w="106"/><text x="13.0429%" y="927.50"></text></g><g><title>[unknown] (37 samples, 0.13%)</title><rect x="13.0408%" y="901" width="0.1330%" height="15" fill="rgb(219,96,24)" fg:x="3629" fg:w="37"/><text x="13.2908%" y="911.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="13.0839%" y="885" width="0.0898%" height="15" fill="rgb(219,33,29)" fg:x="3641" fg:w="25"/><text x="13.3339%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="13.1558%" y="869" width="0.0180%" height="15" fill="rgb(223,176,5)" fg:x="3661" fg:w="5"/><text x="13.4058%" y="879.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="13.2025%" y="997" width="0.0359%" height="15" fill="rgb(228,140,14)" fg:x="3674" fg:w="10"/><text x="13.4525%" y="1007.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="13.5367%" y="965" width="0.0144%" height="15" fill="rgb(217,179,31)" fg:x="3767" fg:w="4"/><text x="13.7867%" y="975.50"></text></g><g><title>[libc.so.6] (45 samples, 0.16%)</title><rect x="13.4110%" y="981" width="0.1617%" height="15" fill="rgb(230,9,30)" fg:x="3732" fg:w="45"/><text x="13.6610%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="13.5511%" y="965" width="0.0216%" height="15" fill="rgb(230,136,20)" fg:x="3771" fg:w="6"/><text x="13.8011%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="13.5547%" y="949" width="0.0180%" height="15" fill="rgb(215,210,22)" fg:x="3772" fg:w="5"/><text x="13.8047%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="13.5547%" y="933" width="0.0180%" height="15" fill="rgb(218,43,5)" fg:x="3772" fg:w="5"/><text x="13.8047%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="13.5547%" y="917" width="0.0180%" height="15" fill="rgb(216,11,5)" fg:x="3772" fg:w="5"/><text x="13.8047%" y="927.50"></text></g><g><title>__lll_lock_wait_private (51 samples, 0.18%)</title><rect x="13.5798%" y="981" width="0.1833%" height="15" fill="rgb(209,82,29)" fg:x="3779" fg:w="51"/><text x="13.8298%" y="991.50"></text></g><g><title>[unknown] (51 samples, 0.18%)</title><rect x="13.5798%" y="965" width="0.1833%" height="15" fill="rgb(244,115,12)" fg:x="3779" fg:w="51"/><text x="13.8298%" y="975.50"></text></g><g><title>[unknown] (48 samples, 0.17%)</title><rect x="13.5906%" y="949" width="0.1725%" height="15" fill="rgb(222,82,18)" fg:x="3782" fg:w="48"/><text x="13.8406%" y="959.50"></text></g><g><title>[unknown] (47 samples, 0.17%)</title><rect x="13.5942%" y="933" width="0.1689%" height="15" fill="rgb(249,227,8)" fg:x="3783" fg:w="47"/><text x="13.8442%" y="943.50"></text></g><g><title>[unknown] (47 samples, 0.17%)</title><rect x="13.5942%" y="917" width="0.1689%" height="15" fill="rgb(253,141,45)" fg:x="3783" fg:w="47"/><text x="13.8442%" y="927.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="13.6050%" y="901" width="0.1581%" height="15" fill="rgb(234,184,4)" fg:x="3786" fg:w="44"/><text x="13.8550%" y="911.50"></text></g><g><title>[unknown] (41 samples, 0.15%)</title><rect x="13.6158%" y="885" width="0.1473%" height="15" fill="rgb(218,194,23)" fg:x="3789" fg:w="41"/><text x="13.8658%" y="895.50"></text></g><g><title>[unknown] (40 samples, 0.14%)</title><rect x="13.6194%" y="869" width="0.1437%" height="15" fill="rgb(235,66,41)" fg:x="3790" fg:w="40"/><text x="13.8694%" y="879.50"></text></g><g><title>[unknown] (34 samples, 0.12%)</title><rect x="13.6409%" y="853" width="0.1222%" height="15" fill="rgb(245,217,1)" fg:x="3796" fg:w="34"/><text x="13.8909%" y="863.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="13.6589%" y="837" width="0.1042%" height="15" fill="rgb(229,91,1)" fg:x="3801" fg:w="29"/><text x="13.9089%" y="847.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="13.6697%" y="821" width="0.0934%" height="15" fill="rgb(207,101,30)" fg:x="3804" fg:w="26"/><text x="13.9197%" y="831.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="13.7056%" y="805" width="0.0575%" height="15" fill="rgb(223,82,49)" fg:x="3814" fg:w="16"/><text x="13.9556%" y="815.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="13.7308%" y="789" width="0.0323%" height="15" fill="rgb(218,167,17)" fg:x="3821" fg:w="9"/><text x="13.9808%" y="799.50"></text></g><g><title>_dl_allocate_tls (182 samples, 0.65%)</title><rect x="13.1738%" y="1029" width="0.6540%" height="15" fill="rgb(208,103,14)" fg:x="3666" fg:w="182"/><text x="13.4238%" y="1039.50"></text></g><g><title>[ld-linux-x86-64.so.2] (182 samples, 0.65%)</title><rect x="13.1738%" y="1013" width="0.6540%" height="15" fill="rgb(238,20,8)" fg:x="3666" fg:w="182"/><text x="13.4238%" y="1023.50"></text></g><g><title>__libc_calloc (164 samples, 0.59%)</title><rect x="13.2385%" y="997" width="0.5893%" height="15" fill="rgb(218,80,54)" fg:x="3684" fg:w="164"/><text x="13.4885%" y="1007.50"></text></g><g><title>__lll_lock_wake_private (18 samples, 0.06%)</title><rect x="13.7631%" y="981" width="0.0647%" height="15" fill="rgb(240,144,17)" fg:x="3830" fg:w="18"/><text x="14.0131%" y="991.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="13.7631%" y="965" width="0.0647%" height="15" fill="rgb(245,27,50)" fg:x="3830" fg:w="18"/><text x="14.0131%" y="975.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="13.7631%" y="949" width="0.0647%" height="15" fill="rgb(251,51,7)" fg:x="3830" fg:w="18"/><text x="14.0131%" y="959.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="13.7667%" y="933" width="0.0611%" height="15" fill="rgb(245,217,29)" fg:x="3831" fg:w="17"/><text x="14.0167%" y="943.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="13.7703%" y="917" width="0.0575%" height="15" fill="rgb(221,176,29)" fg:x="3832" fg:w="16"/><text x="14.0203%" y="927.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="13.7739%" y="901" width="0.0539%" height="15" fill="rgb(212,180,24)" fg:x="3833" fg:w="15"/><text x="14.0239%" y="911.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="13.7955%" y="885" width="0.0323%" height="15" fill="rgb(254,24,2)" fg:x="3839" fg:w="9"/><text x="14.0455%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="13.8098%" y="869" width="0.0180%" height="15" fill="rgb(230,100,2)" fg:x="3843" fg:w="5"/><text x="14.0598%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="13.8098%" y="853" width="0.0180%" height="15" fill="rgb(219,142,25)" fg:x="3843" fg:w="5"/><text x="14.0598%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="13.8170%" y="837" width="0.0108%" height="15" fill="rgb(240,73,43)" fg:x="3845" fg:w="3"/><text x="14.0670%" y="847.50"></text></g><g><title>[ld-linux-x86-64.so.2] (38 samples, 0.14%)</title><rect x="13.9823%" y="1013" width="0.1366%" height="15" fill="rgb(214,114,15)" fg:x="3891" fg:w="38"/><text x="14.2323%" y="1023.50"></text></g><g><title>[libc.so.6] (16 samples, 0.06%)</title><rect x="14.1189%" y="1013" width="0.0575%" height="15" fill="rgb(207,130,4)" fg:x="3929" fg:w="16"/><text x="14.3689%" y="1023.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="14.1548%" y="997" width="0.0216%" height="15" fill="rgb(221,25,40)" fg:x="3939" fg:w="6"/><text x="14.4048%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.1548%" y="981" width="0.0216%" height="15" fill="rgb(241,184,7)" fg:x="3939" fg:w="6"/><text x="14.4048%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.1548%" y="965" width="0.0216%" height="15" fill="rgb(235,159,4)" fg:x="3939" fg:w="6"/><text x="14.4048%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.1548%" y="949" width="0.0216%" height="15" fill="rgb(214,87,48)" fg:x="3939" fg:w="6"/><text x="14.4048%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="14.1584%" y="933" width="0.0180%" height="15" fill="rgb(246,198,24)" fg:x="3940" fg:w="5"/><text x="14.4084%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="14.1584%" y="917" width="0.0180%" height="15" fill="rgb(209,66,40)" fg:x="3940" fg:w="5"/><text x="14.4084%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.1620%" y="901" width="0.0144%" height="15" fill="rgb(233,147,39)" fg:x="3941" fg:w="4"/><text x="14.4120%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="14.1656%" y="885" width="0.0108%" height="15" fill="rgb(231,145,52)" fg:x="3942" fg:w="3"/><text x="14.4156%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="14.1764%" y="1013" width="0.0108%" height="15" fill="rgb(206,20,26)" fg:x="3945" fg:w="3"/><text x="14.4264%" y="1023.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="14.3021%" y="997" width="0.0216%" height="15" fill="rgb(238,220,4)" fg:x="3980" fg:w="6"/><text x="14.5521%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.3021%" y="981" width="0.0216%" height="15" fill="rgb(252,195,42)" fg:x="3980" fg:w="6"/><text x="14.5521%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.3021%" y="965" width="0.0216%" height="15" fill="rgb(209,10,6)" fg:x="3980" fg:w="6"/><text x="14.5521%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.3021%" y="949" width="0.0216%" height="15" fill="rgb(229,3,52)" fg:x="3980" fg:w="6"/><text x="14.5521%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.3021%" y="933" width="0.0216%" height="15" fill="rgb(253,49,37)" fg:x="3980" fg:w="6"/><text x="14.5521%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.3021%" y="917" width="0.0216%" height="15" fill="rgb(240,103,49)" fg:x="3980" fg:w="6"/><text x="14.5521%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.3093%" y="901" width="0.0144%" height="15" fill="rgb(250,182,30)" fg:x="3982" fg:w="4"/><text x="14.5593%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.3093%" y="885" width="0.0144%" height="15" fill="rgb(248,8,30)" fg:x="3982" fg:w="4"/><text x="14.5593%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="14.3129%" y="869" width="0.0108%" height="15" fill="rgb(237,120,30)" fg:x="3983" fg:w="3"/><text x="14.5629%" y="879.50"></text></g><g><title>pthread_create (1,351 samples, 4.85%)</title><rect x="9.4797%" y="1045" width="4.8548%" height="15" fill="rgb(221,146,34)" fg:x="2638" fg:w="1351"/><text x="9.7297%" y="1055.50">pthrea..</text></g><g><title>_dl_allocate_tls_init (141 samples, 0.51%)</title><rect x="13.8278%" y="1029" width="0.5067%" height="15" fill="rgb(242,55,13)" fg:x="3848" fg:w="141"/><text x="14.0778%" y="1039.50"></text></g><g><title>pthread_mutex_lock (41 samples, 0.15%)</title><rect x="14.1871%" y="1013" width="0.1473%" height="15" fill="rgb(242,112,31)" fg:x="3948" fg:w="41"/><text x="14.4371%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="14.3237%" y="997" width="0.0108%" height="15" fill="rgb(249,192,27)" fg:x="3986" fg:w="3"/><text x="14.5737%" y="1007.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1,407 samples, 5.06%)</title><rect x="9.2892%" y="1061" width="5.0561%" height="15" fill="rgb(208,204,44)" fg:x="2585" fg:w="1407"/><text x="9.5392%" y="1071.50">std::s..</text></g><g><title>std::sys::unix::thread::min_stack_size (3 samples, 0.01%)</title><rect x="14.3345%" y="1045" width="0.0108%" height="15" fill="rgb(208,93,54)" fg:x="3989" fg:w="3"/><text x="14.5845%" y="1055.50"></text></g><g><title>__rdl_alloc (7 samples, 0.03%)</title><rect x="14.3489%" y="933" width="0.0252%" height="15" fill="rgb(242,1,31)" fg:x="3993" fg:w="7"/><text x="14.5989%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.02%)</title><rect x="14.3560%" y="917" width="0.0180%" height="15" fill="rgb(241,83,25)" fg:x="3995" fg:w="5"/><text x="14.6060%" y="927.50"></text></g><g><title>[libc.so.6] (31 samples, 0.11%)</title><rect x="14.5249%" y="917" width="0.1114%" height="15" fill="rgb(205,169,50)" fg:x="4042" fg:w="31"/><text x="14.7749%" y="927.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="14.6112%" y="901" width="0.0252%" height="15" fill="rgb(239,186,37)" fg:x="4066" fg:w="7"/><text x="14.8612%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.6363%" y="917" width="0.0144%" height="15" fill="rgb(205,221,10)" fg:x="4073" fg:w="4"/><text x="14.8863%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="14.6399%" y="901" width="0.0108%" height="15" fill="rgb(218,196,15)" fg:x="4074" fg:w="3"/><text x="14.8899%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="14.6399%" y="885" width="0.0108%" height="15" fill="rgb(218,196,35)" fg:x="4074" fg:w="3"/><text x="14.8899%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="14.6399%" y="869" width="0.0108%" height="15" fill="rgb(233,63,24)" fg:x="4074" fg:w="3"/><text x="14.8899%" y="879.50"></text></g><g><title>__lll_lock_wait_private (25 samples, 0.09%)</title><rect x="14.6507%" y="917" width="0.0898%" height="15" fill="rgb(225,8,4)" fg:x="4077" fg:w="25"/><text x="14.9007%" y="927.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="14.6507%" y="901" width="0.0898%" height="15" fill="rgb(234,105,35)" fg:x="4077" fg:w="25"/><text x="14.9007%" y="911.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="14.6615%" y="885" width="0.0791%" height="15" fill="rgb(236,21,32)" fg:x="4080" fg:w="22"/><text x="14.9115%" y="895.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="14.6615%" y="869" width="0.0791%" height="15" fill="rgb(228,109,6)" fg:x="4080" fg:w="22"/><text x="14.9115%" y="879.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="14.6651%" y="853" width="0.0755%" height="15" fill="rgb(229,215,31)" fg:x="4081" fg:w="21"/><text x="14.9151%" y="863.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="14.6651%" y="837" width="0.0755%" height="15" fill="rgb(221,52,54)" fg:x="4081" fg:w="21"/><text x="14.9151%" y="847.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="14.6651%" y="821" width="0.0755%" height="15" fill="rgb(252,129,43)" fg:x="4081" fg:w="21"/><text x="14.9151%" y="831.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="14.6687%" y="805" width="0.0719%" height="15" fill="rgb(248,183,27)" fg:x="4082" fg:w="20"/><text x="14.9187%" y="815.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="14.6866%" y="789" width="0.0539%" height="15" fill="rgb(250,0,22)" fg:x="4087" fg:w="15"/><text x="14.9366%" y="799.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="14.6974%" y="773" width="0.0431%" height="15" fill="rgb(213,166,10)" fg:x="4090" fg:w="12"/><text x="14.9474%" y="783.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="14.6974%" y="757" width="0.0431%" height="15" fill="rgb(207,163,36)" fg:x="4090" fg:w="12"/><text x="14.9474%" y="767.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="14.7082%" y="741" width="0.0323%" height="15" fill="rgb(208,122,22)" fg:x="4093" fg:w="9"/><text x="14.9582%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.7190%" y="725" width="0.0216%" height="15" fill="rgb(207,104,49)" fg:x="4096" fg:w="6"/><text x="14.9690%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (119 samples, 0.43%)</title><rect x="14.3453%" y="1045" width="0.4276%" height="15" fill="rgb(248,211,50)" fg:x="3992" fg:w="119"/><text x="14.5953%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (119 samples, 0.43%)</title><rect x="14.3453%" y="1029" width="0.4276%" height="15" fill="rgb(217,13,45)" fg:x="3992" fg:w="119"/><text x="14.5953%" y="1039.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (119 samples, 0.43%)</title><rect x="14.3453%" y="1013" width="0.4276%" height="15" fill="rgb(211,216,49)" fg:x="3992" fg:w="119"/><text x="14.5953%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit::{{closure}} (118 samples, 0.42%)</title><rect x="14.3489%" y="997" width="0.4240%" height="15" fill="rgb(221,58,53)" fg:x="3993" fg:w="118"/><text x="14.5989%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (118 samples, 0.42%)</title><rect x="14.3489%" y="981" width="0.4240%" height="15" fill="rgb(220,112,41)" fg:x="3993" fg:w="118"/><text x="14.5989%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (118 samples, 0.42%)</title><rect x="14.3489%" y="965" width="0.4240%" height="15" fill="rgb(236,38,28)" fg:x="3993" fg:w="118"/><text x="14.5989%" y="975.50"></text></g><g><title>alloc::alloc::alloc (118 samples, 0.42%)</title><rect x="14.3489%" y="949" width="0.4240%" height="15" fill="rgb(227,195,22)" fg:x="3993" fg:w="118"/><text x="14.5989%" y="959.50"></text></g><g><title>malloc (111 samples, 0.40%)</title><rect x="14.3740%" y="933" width="0.3989%" height="15" fill="rgb(214,55,33)" fg:x="4000" fg:w="111"/><text x="14.6240%" y="943.50"></text></g><g><title>__lll_lock_wake_private (9 samples, 0.03%)</title><rect x="14.7405%" y="917" width="0.0323%" height="15" fill="rgb(248,80,13)" fg:x="4102" fg:w="9"/><text x="14.9905%" y="927.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="14.7405%" y="901" width="0.0323%" height="15" fill="rgb(238,52,6)" fg:x="4102" fg:w="9"/><text x="14.9905%" y="911.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="14.7405%" y="885" width="0.0323%" height="15" fill="rgb(224,198,47)" fg:x="4102" fg:w="9"/><text x="14.9905%" y="895.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="14.7405%" y="869" width="0.0323%" height="15" fill="rgb(233,171,20)" fg:x="4102" fg:w="9"/><text x="14.9905%" y="879.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="14.7405%" y="853" width="0.0323%" height="15" fill="rgb(241,30,25)" fg:x="4102" fg:w="9"/><text x="14.9905%" y="863.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="14.7477%" y="837" width="0.0252%" height="15" fill="rgb(207,171,38)" fg:x="4104" fg:w="7"/><text x="14.9977%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.7585%" y="821" width="0.0144%" height="15" fill="rgb(234,70,1)" fg:x="4107" fg:w="4"/><text x="15.0085%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::StaticMutexGuard&gt; (10 samples, 0.04%)</title><rect x="14.7980%" y="1029" width="0.0359%" height="15" fill="rgb(232,178,18)" fg:x="4118" fg:w="10"/><text x="15.0480%" y="1039.50"></text></g><g><title>&lt;std::sys_common::mutex::StaticMutexGuard as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="14.7980%" y="1013" width="0.0359%" height="15" fill="rgb(241,78,40)" fg:x="4118" fg:w="10"/><text x="15.0480%" y="1023.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (10 samples, 0.04%)</title><rect x="14.7980%" y="997" width="0.0359%" height="15" fill="rgb(222,35,25)" fg:x="4118" fg:w="10"/><text x="15.0480%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="14.8771%" y="997" width="0.0108%" height="15" fill="rgb(207,92,16)" fg:x="4140" fg:w="3"/><text x="15.1271%" y="1007.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new (1,814 samples, 6.52%)</title><rect x="8.3836%" y="1141" width="6.5186%" height="15" fill="rgb(216,59,51)" fg:x="2333" fg:w="1814"/><text x="8.6336%" y="1151.50">zenoh_tra..</text></g><g><title>std::thread::spawn (1,686 samples, 6.06%)</title><rect x="8.8436%" y="1125" width="6.0586%" height="15" fill="rgb(213,80,28)" fg:x="2461" fg:w="1686"/><text x="9.0936%" y="1135.50">std::thr..</text></g><g><title>std::thread::Builder::spawn (1,681 samples, 6.04%)</title><rect x="8.8616%" y="1109" width="6.0407%" height="15" fill="rgb(220,93,7)" fg:x="2466" fg:w="1681"/><text x="9.1116%" y="1119.50">std::thr..</text></g><g><title>std::thread::Builder::spawn_unchecked (1,681 samples, 6.04%)</title><rect x="8.8616%" y="1093" width="6.0407%" height="15" fill="rgb(225,24,44)" fg:x="2466" fg:w="1681"/><text x="9.1116%" y="1103.50">std::thr..</text></g><g><title>std::thread::Builder::spawn_unchecked_ (1,680 samples, 6.04%)</title><rect x="8.8652%" y="1077" width="6.0371%" height="15" fill="rgb(243,74,40)" fg:x="2467" fg:w="1680"/><text x="9.1152%" y="1087.50">std::thr..</text></g><g><title>std::thread::Thread::new (155 samples, 0.56%)</title><rect x="14.3453%" y="1061" width="0.5570%" height="15" fill="rgb(228,39,7)" fg:x="3992" fg:w="155"/><text x="14.5953%" y="1071.50"></text></g><g><title>std::thread::ThreadId::new (36 samples, 0.13%)</title><rect x="14.7729%" y="1045" width="0.1294%" height="15" fill="rgb(227,79,8)" fg:x="4111" fg:w="36"/><text x="15.0229%" y="1055.50"></text></g><g><title>std::sys_common::mutex::StaticMutex::lock (19 samples, 0.07%)</title><rect x="14.8340%" y="1029" width="0.0683%" height="15" fill="rgb(236,58,11)" fg:x="4128" fg:w="19"/><text x="15.0840%" y="1039.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (19 samples, 0.07%)</title><rect x="14.8340%" y="1013" width="0.0683%" height="15" fill="rgb(249,63,35)" fg:x="4128" fg:w="19"/><text x="15.0840%" y="1023.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (4 samples, 0.01%)</title><rect x="14.8879%" y="997" width="0.0144%" height="15" fill="rgb(252,114,16)" fg:x="4143" fg:w="4"/><text x="15.1379%" y="1007.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (3 samples, 0.01%)</title><rect x="14.8915%" y="981" width="0.0108%" height="15" fill="rgb(254,151,24)" fg:x="4144" fg:w="3"/><text x="15.1415%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.01%)</title><rect x="14.8915%" y="965" width="0.0108%" height="15" fill="rgb(253,54,39)" fg:x="4144" fg:w="3"/><text x="15.1415%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="14.8915%" y="949" width="0.0108%" height="15" fill="rgb(243,25,45)" fg:x="4144" fg:w="3"/><text x="15.1415%" y="959.50"></text></g><g><title>zenoh_transport::manager::TransportManager::new (1,964 samples, 7.06%)</title><rect x="7.8482%" y="1157" width="7.0576%" height="15" fill="rgb(234,134,9)" fg:x="2184" fg:w="1964"/><text x="8.0982%" y="1167.50">zenoh_tra..</text></g><g><title>num_bigint_dig::biguint::BigUint::from_bytes_be (4 samples, 0.01%)</title><rect x="14.9238%" y="1061" width="0.0144%" height="15" fill="rgb(227,166,31)" fg:x="4153" fg:w="4"/><text x="15.1738%" y="1071.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::from_bytes_le (3 samples, 0.01%)</title><rect x="14.9274%" y="1045" width="0.0108%" height="15" fill="rgb(245,143,41)" fg:x="4154" fg:w="3"/><text x="15.1774%" y="1055.50"></text></g><g><title>num_bigint_dig::biguint::from_bitwise_digits_le (3 samples, 0.01%)</title><rect x="14.9274%" y="1029" width="0.0108%" height="15" fill="rgb(238,181,32)" fg:x="4154" fg:w="3"/><text x="15.1774%" y="1039.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;u32&gt;&gt;::rem (3 samples, 0.01%)</title><rect x="14.9418%" y="1045" width="0.0108%" height="15" fill="rgb(224,113,18)" fg:x="4158" fg:w="3"/><text x="15.1918%" y="1055.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="14.9418%" y="1029" width="0.0108%" height="15" fill="rgb(240,229,28)" fg:x="4158" fg:w="3"/><text x="15.1918%" y="1039.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Mul&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::mul (5 samples, 0.02%)</title><rect x="14.9633%" y="1029" width="0.0180%" height="15" fill="rgb(250,185,3)" fg:x="4164" fg:w="5"/><text x="15.2133%" y="1039.50"></text></g><g><title>num_bigint_dig::algorithms::mul::mul3 (5 samples, 0.02%)</title><rect x="14.9633%" y="1013" width="0.0180%" height="15" fill="rgb(212,59,25)" fg:x="4164" fg:w="5"/><text x="15.2133%" y="1023.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::from_elem (3 samples, 0.01%)</title><rect x="14.9705%" y="997" width="0.0108%" height="15" fill="rgb(221,87,20)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="1007.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.01%)</title><rect x="14.9705%" y="981" width="0.0108%" height="15" fill="rgb(213,74,28)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="991.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.01%)</title><rect x="14.9705%" y="965" width="0.0108%" height="15" fill="rgb(224,132,34)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (3 samples, 0.01%)</title><rect x="14.9705%" y="949" width="0.0108%" height="15" fill="rgb(222,101,24)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="14.9705%" y="933" width="0.0108%" height="15" fill="rgb(254,142,4)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (3 samples, 0.01%)</title><rect x="14.9705%" y="917" width="0.0108%" height="15" fill="rgb(230,229,49)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="14.9705%" y="901" width="0.0108%" height="15" fill="rgb(238,70,47)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="911.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3 samples, 0.01%)</title><rect x="14.9705%" y="885" width="0.0108%" height="15" fill="rgb(231,160,17)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="895.50"></text></g><g><title>__libc_calloc (3 samples, 0.01%)</title><rect x="14.9705%" y="869" width="0.0108%" height="15" fill="rgb(218,68,53)" fg:x="4166" fg:w="3"/><text x="15.2205%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::normalized (5 samples, 0.02%)</title><rect x="14.9957%" y="949" width="0.0180%" height="15" fill="rgb(236,111,10)" fg:x="4173" fg:w="5"/><text x="15.2457%" y="959.50"></text></g><g><title>__libc_calloc (8 samples, 0.03%)</title><rect x="15.0172%" y="821" width="0.0287%" height="15" fill="rgb(224,34,41)" fg:x="4179" fg:w="8"/><text x="15.2672%" y="831.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="15.0352%" y="805" width="0.0108%" height="15" fill="rgb(241,118,19)" fg:x="4184" fg:w="3"/><text x="15.2852%" y="815.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Mul&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::mul (21 samples, 0.08%)</title><rect x="14.9849%" y="981" width="0.0755%" height="15" fill="rgb(238,129,25)" fg:x="4170" fg:w="21"/><text x="15.2349%" y="991.50"></text></g><g><title>num_bigint_dig::algorithms::mul::mul3 (21 samples, 0.08%)</title><rect x="14.9849%" y="965" width="0.0755%" height="15" fill="rgb(238,22,31)" fg:x="4170" fg:w="21"/><text x="15.2349%" y="975.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::from_elem (13 samples, 0.05%)</title><rect x="15.0137%" y="949" width="0.0467%" height="15" fill="rgb(222,174,48)" fg:x="4178" fg:w="13"/><text x="15.2637%" y="959.50"></text></g><g><title>alloc::vec::from_elem (13 samples, 0.05%)</title><rect x="15.0137%" y="933" width="0.0467%" height="15" fill="rgb(206,152,40)" fg:x="4178" fg:w="13"/><text x="15.2637%" y="943.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (13 samples, 0.05%)</title><rect x="15.0137%" y="917" width="0.0467%" height="15" fill="rgb(218,99,54)" fg:x="4178" fg:w="13"/><text x="15.2637%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (13 samples, 0.05%)</title><rect x="15.0137%" y="901" width="0.0467%" height="15" fill="rgb(220,174,26)" fg:x="4178" fg:w="13"/><text x="15.2637%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.05%)</title><rect x="15.0137%" y="885" width="0.0467%" height="15" fill="rgb(245,116,9)" fg:x="4178" fg:w="13"/><text x="15.2637%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (13 samples, 0.05%)</title><rect x="15.0137%" y="869" width="0.0467%" height="15" fill="rgb(209,72,35)" fg:x="4178" fg:w="13"/><text x="15.2637%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.05%)</title><rect x="15.0137%" y="853" width="0.0467%" height="15" fill="rgb(226,126,21)" fg:x="4178" fg:w="13"/><text x="15.2637%" y="863.50"></text></g><g><title>alloc::alloc::alloc_zeroed (12 samples, 0.04%)</title><rect x="15.0172%" y="837" width="0.0431%" height="15" fill="rgb(227,192,1)" fg:x="4179" fg:w="12"/><text x="15.2672%" y="847.50"></text></g><g><title>__rust_alloc_zeroed (3 samples, 0.01%)</title><rect x="15.0496%" y="821" width="0.0108%" height="15" fill="rgb(237,180,29)" fg:x="4188" fg:w="3"/><text x="15.2996%" y="831.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (4 samples, 0.01%)</title><rect x="15.0604%" y="949" width="0.0144%" height="15" fill="rgb(230,197,35)" fg:x="4191" fg:w="4"/><text x="15.3104%" y="959.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (4 samples, 0.01%)</title><rect x="15.0604%" y="933" width="0.0144%" height="15" fill="rgb(246,193,31)" fg:x="4191" fg:w="4"/><text x="15.3104%" y="943.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="15.0604%" y="917" width="0.0144%" height="15" fill="rgb(241,36,4)" fg:x="4191" fg:w="4"/><text x="15.3104%" y="927.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="15.0640%" y="901" width="0.0108%" height="15" fill="rgb(241,130,17)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="911.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (3 samples, 0.01%)</title><rect x="15.0640%" y="885" width="0.0108%" height="15" fill="rgb(206,137,32)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.01%)</title><rect x="15.0640%" y="869" width="0.0108%" height="15" fill="rgb(237,228,51)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="15.0640%" y="853" width="0.0108%" height="15" fill="rgb(243,6,42)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="863.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.01%)</title><rect x="15.0640%" y="837" width="0.0108%" height="15" fill="rgb(251,74,28)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="847.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (3 samples, 0.01%)</title><rect x="15.0640%" y="821" width="0.0108%" height="15" fill="rgb(218,20,49)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="831.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (3 samples, 0.01%)</title><rect x="15.0640%" y="805" width="0.0108%" height="15" fill="rgb(238,28,14)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="815.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (3 samples, 0.01%)</title><rect x="15.0640%" y="789" width="0.0108%" height="15" fill="rgb(229,40,46)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="799.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="15.0640%" y="773" width="0.0108%" height="15" fill="rgb(244,195,20)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="783.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="15.0640%" y="757" width="0.0108%" height="15" fill="rgb(253,56,35)" fg:x="4192" fg:w="3"/><text x="15.3140%" y="767.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (5 samples, 0.02%)</title><rect x="15.0604%" y="981" width="0.0180%" height="15" fill="rgb(210,149,44)" fg:x="4191" fg:w="5"/><text x="15.3104%" y="991.50"></text></g><g><title>num_bigint_dig::algorithms::shl::biguint_shl (5 samples, 0.02%)</title><rect x="15.0604%" y="965" width="0.0180%" height="15" fill="rgb(240,135,12)" fg:x="4191" fg:w="5"/><text x="15.3104%" y="975.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_traits::identities::One&gt;::one (4 samples, 0.01%)</title><rect x="15.0963%" y="981" width="0.0144%" height="15" fill="rgb(251,24,50)" fg:x="4201" fg:w="4"/><text x="15.3463%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::new (4 samples, 0.01%)</title><rect x="15.0963%" y="965" width="0.0144%" height="15" fill="rgb(243,200,47)" fg:x="4201" fg:w="4"/><text x="15.3463%" y="975.50"></text></g><g><title>num_bigint_dig::biguint::ensure_big_digit (4 samples, 0.01%)</title><rect x="15.0963%" y="949" width="0.0144%" height="15" fill="rgb(224,166,26)" fg:x="4201" fg:w="4"/><text x="15.3463%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::ensure_big_digit_slice (3 samples, 0.01%)</title><rect x="15.0999%" y="933" width="0.0108%" height="15" fill="rgb(233,0,47)" fg:x="4202" fg:w="3"/><text x="15.3499%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.01%)</title><rect x="15.0999%" y="917" width="0.0108%" height="15" fill="rgb(253,80,5)" fg:x="4202" fg:w="3"/><text x="15.3499%" y="927.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="15.0999%" y="901" width="0.0108%" height="15" fill="rgb(214,133,25)" fg:x="4202" fg:w="3"/><text x="15.3499%" y="911.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.01%)</title><rect x="15.0999%" y="885" width="0.0108%" height="15" fill="rgb(209,27,14)" fg:x="4202" fg:w="3"/><text x="15.3499%" y="895.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem_digit (7 samples, 0.03%)</title><rect x="15.1322%" y="981" width="0.0252%" height="15" fill="rgb(219,102,51)" fg:x="4211" fg:w="7"/><text x="15.3822%" y="991.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (56 samples, 0.20%)</title><rect x="14.9813%" y="1013" width="0.2012%" height="15" fill="rgb(237,18,16)" fg:x="4169" fg:w="56"/><text x="15.2313%" y="1023.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (56 samples, 0.20%)</title><rect x="14.9813%" y="997" width="0.2012%" height="15" fill="rgb(241,85,17)" fg:x="4169" fg:w="56"/><text x="15.2313%" y="1007.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::from_elem (3 samples, 0.01%)</title><rect x="15.1718%" y="981" width="0.0108%" height="15" fill="rgb(236,90,42)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="991.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.01%)</title><rect x="15.1718%" y="965" width="0.0108%" height="15" fill="rgb(249,57,21)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="975.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.01%)</title><rect x="15.1718%" y="949" width="0.0108%" height="15" fill="rgb(243,12,36)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (3 samples, 0.01%)</title><rect x="15.1718%" y="933" width="0.0108%" height="15" fill="rgb(253,128,47)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="15.1718%" y="917" width="0.0108%" height="15" fill="rgb(207,33,20)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (3 samples, 0.01%)</title><rect x="15.1718%" y="901" width="0.0108%" height="15" fill="rgb(233,215,35)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="15.1718%" y="885" width="0.0108%" height="15" fill="rgb(249,188,52)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="895.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3 samples, 0.01%)</title><rect x="15.1718%" y="869" width="0.0108%" height="15" fill="rgb(225,12,32)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="879.50"></text></g><g><title>__libc_calloc (3 samples, 0.01%)</title><rect x="15.1718%" y="853" width="0.0108%" height="15" fill="rgb(247,98,14)" fg:x="4222" fg:w="3"/><text x="15.4218%" y="863.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_lucas (63 samples, 0.23%)</title><rect x="14.9633%" y="1045" width="0.2264%" height="15" fill="rgb(247,219,48)" fg:x="4164" fg:w="63"/><text x="15.2133%" y="1055.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (58 samples, 0.21%)</title><rect x="14.9813%" y="1029" width="0.2084%" height="15" fill="rgb(253,60,48)" fg:x="4169" fg:w="58"/><text x="15.2313%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,846 samples, 10.23%)</title><rect x="4.9734%" y="1205" width="10.2271%" height="15" fill="rgb(245,15,52)" fg:x="1384" fg:w="2846"/><text x="5.2234%" y="1215.50">&lt;core::future::..</text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}} (2,846 samples, 10.23%)</title><rect x="4.9734%" y="1189" width="10.2271%" height="15" fill="rgb(220,133,28)" fg:x="1384" fg:w="2846"/><text x="5.2234%" y="1199.50">zenoh::net::run..</text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::build (2,046 samples, 7.35%)</title><rect x="7.8482%" y="1173" width="7.3523%" height="15" fill="rgb(217,180,4)" fg:x="2184" fg:w="2046"/><text x="8.0982%" y="1183.50">zenoh_tran..</text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (82 samples, 0.29%)</title><rect x="14.9059%" y="1157" width="0.2947%" height="15" fill="rgb(251,24,1)" fg:x="4148" fg:w="82"/><text x="15.1559%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (81 samples, 0.29%)</title><rect x="14.9094%" y="1141" width="0.2911%" height="15" fill="rgb(212,185,49)" fg:x="4149" fg:w="81"/><text x="15.1594%" y="1151.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (79 samples, 0.28%)</title><rect x="14.9166%" y="1125" width="0.2839%" height="15" fill="rgb(215,175,22)" fg:x="4151" fg:w="79"/><text x="15.1666%" y="1135.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (79 samples, 0.28%)</title><rect x="14.9166%" y="1109" width="0.2839%" height="15" fill="rgb(250,205,14)" fg:x="4151" fg:w="79"/><text x="15.1666%" y="1119.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (79 samples, 0.28%)</title><rect x="14.9166%" y="1093" width="0.2839%" height="15" fill="rgb(225,211,22)" fg:x="4151" fg:w="79"/><text x="15.1666%" y="1103.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (79 samples, 0.28%)</title><rect x="14.9166%" y="1077" width="0.2839%" height="15" fill="rgb(251,179,42)" fg:x="4151" fg:w="79"/><text x="15.1666%" y="1087.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (73 samples, 0.26%)</title><rect x="14.9382%" y="1061" width="0.2623%" height="15" fill="rgb(208,216,51)" fg:x="4157" fg:w="73"/><text x="15.1882%" y="1071.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (3 samples, 0.01%)</title><rect x="15.1897%" y="1045" width="0.0108%" height="15" fill="rgb(235,36,11)" fg:x="4227" fg:w="3"/><text x="15.4397%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="15.2113%" y="1189" width="0.0144%" height="15" fill="rgb(213,189,28)" fg:x="4233" fg:w="4"/><text x="15.4613%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="15.2149%" y="1173" width="0.0108%" height="15" fill="rgb(227,203,42)" fg:x="4234" fg:w="3"/><text x="15.4649%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="15.2149%" y="1157" width="0.0108%" height="15" fill="rgb(244,72,36)" fg:x="4234" fg:w="3"/><text x="15.4649%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="15.2149%" y="1141" width="0.0108%" height="15" fill="rgb(213,53,17)" fg:x="4234" fg:w="3"/><text x="15.4649%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="15.2149%" y="1125" width="0.0108%" height="15" fill="rgb(207,167,3)" fg:x="4234" fg:w="3"/><text x="15.4649%" y="1135.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="15.2149%" y="1109" width="0.0108%" height="15" fill="rgb(216,98,30)" fg:x="4234" fg:w="3"/><text x="15.4649%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="15.2436%" y="1093" width="0.0108%" height="15" fill="rgb(236,123,15)" fg:x="4242" fg:w="3"/><text x="15.4936%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="15.2436%" y="1077" width="0.0108%" height="15" fill="rgb(248,81,50)" fg:x="4242" fg:w="3"/><text x="15.4936%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="15.2436%" y="1061" width="0.0108%" height="15" fill="rgb(214,120,4)" fg:x="4242" fg:w="3"/><text x="15.4936%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="15.2436%" y="1045" width="0.0108%" height="15" fill="rgb(208,179,34)" fg:x="4242" fg:w="3"/><text x="15.4936%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="15.2436%" y="1029" width="0.0108%" height="15" fill="rgb(227,140,7)" fg:x="4242" fg:w="3"/><text x="15.4936%" y="1039.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="15.2436%" y="1013" width="0.0108%" height="15" fill="rgb(214,22,6)" fg:x="4242" fg:w="3"/><text x="15.4936%" y="1023.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="15.2436%" y="997" width="0.0108%" height="15" fill="rgb(207,137,27)" fg:x="4242" fg:w="3"/><text x="15.4936%" y="1007.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="15.2436%" y="981" width="0.0108%" height="15" fill="rgb(210,8,46)" fg:x="4242" fg:w="3"/><text x="15.4936%" y="991.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (6 samples, 0.02%)</title><rect x="15.2365%" y="1141" width="0.0216%" height="15" fill="rgb(240,16,54)" fg:x="4240" fg:w="6"/><text x="15.4865%" y="1151.50"></text></g><g><title>zenoh::net::routing::router::Tables::open_net_face::{{closure}} (5 samples, 0.02%)</title><rect x="15.2400%" y="1125" width="0.0180%" height="15" fill="rgb(211,209,29)" fg:x="4241" fg:w="5"/><text x="15.4900%" y="1135.50"></text></g><g><title>zenoh::net::routing::face::FaceState::new (5 samples, 0.02%)</title><rect x="15.2400%" y="1109" width="0.0180%" height="15" fill="rgb(226,228,24)" fg:x="4241" fg:w="5"/><text x="15.4900%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.02%)</title><rect x="15.2688%" y="1125" width="0.0180%" height="15" fill="rgb(222,84,9)" fg:x="4249" fg:w="5"/><text x="15.5188%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="15.2688%" y="1109" width="0.0180%" height="15" fill="rgb(234,203,30)" fg:x="4249" fg:w="5"/><text x="15.5188%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="15.2688%" y="1093" width="0.0180%" height="15" fill="rgb(238,109,14)" fg:x="4249" fg:w="5"/><text x="15.5188%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="15.2724%" y="1077" width="0.0144%" height="15" fill="rgb(233,206,34)" fg:x="4250" fg:w="4"/><text x="15.5224%" y="1087.50"></text></g><g><title>zenoh::net::routing::pubsub::pubsub_new_face (7 samples, 0.03%)</title><rect x="15.2652%" y="1141" width="0.0252%" height="15" fill="rgb(220,167,47)" fg:x="4248" fg:w="7"/><text x="15.5152%" y="1151.50"></text></g><g><title>zenoh::session::Session::new::{{closure}} (2,875 samples, 10.33%)</title><rect x="4.9734%" y="1221" width="10.3313%" height="15" fill="rgb(238,105,10)" fg:x="1384" fg:w="2875"/><text x="5.2234%" y="1231.50">zenoh::session:..</text></g><g><title>zenoh::session::Session::init (29 samples, 0.10%)</title><rect x="15.2005%" y="1205" width="0.1042%" height="15" fill="rgb(213,227,17)" fg:x="4230" fg:w="29"/><text x="15.4505%" y="1215.50"></text></g><g><title>zenoh::net::routing::router::Router::new_primitives (22 samples, 0.08%)</title><rect x="15.2257%" y="1189" width="0.0791%" height="15" fill="rgb(217,132,38)" fg:x="4237" fg:w="22"/><text x="15.4757%" y="1199.50"></text></g><g><title>zenoh::net::routing::router::Tables::open_face (19 samples, 0.07%)</title><rect x="15.2365%" y="1173" width="0.0683%" height="15" fill="rgb(242,146,4)" fg:x="4240" fg:w="19"/><text x="15.4865%" y="1183.50"></text></g><g><title>zenoh::net::routing::router::Tables::open_net_face (19 samples, 0.07%)</title><rect x="15.2365%" y="1157" width="0.0683%" height="15" fill="rgb(212,61,9)" fg:x="4240" fg:w="19"/><text x="15.4865%" y="1167.50"></text></g><g><title>zenoh::net::routing::queries::queries_new_face (4 samples, 0.01%)</title><rect x="15.2904%" y="1141" width="0.0144%" height="15" fill="rgb(247,126,22)" fg:x="4255" fg:w="4"/><text x="15.5404%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_rx (5 samples, 0.02%)</title><rect x="15.3083%" y="1109" width="0.0180%" height="15" fill="rgb(220,196,2)" fg:x="4260" fg:w="5"/><text x="15.5583%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx (5 samples, 0.02%)</title><rect x="15.3083%" y="1093" width="0.0180%" height="15" fill="rgb(208,46,4)" fg:x="4260" fg:w="5"/><text x="15.5583%" y="1103.50"></text></g><g><title>async_std::task::spawn::spawn (5 samples, 0.02%)</title><rect x="15.3083%" y="1077" width="0.0180%" height="15" fill="rgb(252,104,46)" fg:x="4260" fg:w="5"/><text x="15.5583%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::spawn (5 samples, 0.02%)</title><rect x="15.3083%" y="1061" width="0.0180%" height="15" fill="rgb(237,152,48)" fg:x="4260" fg:w="5"/><text x="15.5583%" y="1071.50"></text></g><g><title>async_std::task::builder::Builder::build (4 samples, 0.01%)</title><rect x="15.3119%" y="1045" width="0.0144%" height="15" fill="rgb(221,59,37)" fg:x="4261" fg:w="4"/><text x="15.5619%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="15.3299%" y="1045" width="0.0108%" height="15" fill="rgb(209,202,51)" fg:x="4266" fg:w="3"/><text x="15.5799%" y="1055.50"></text></g><g><title>async_executor::Executor::state (4 samples, 0.01%)</title><rect x="15.3443%" y="1045" width="0.0144%" height="15" fill="rgb(228,81,30)" fg:x="4270" fg:w="4"/><text x="15.5943%" y="1055.50"></text></g><g><title>core::task::wake::Waker::wake (20 samples, 0.07%)</title><rect x="15.3766%" y="997" width="0.0719%" height="15" fill="rgb(227,42,39)" fg:x="4279" fg:w="20"/><text x="15.6266%" y="1007.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (20 samples, 0.07%)</title><rect x="15.3766%" y="981" width="0.0719%" height="15" fill="rgb(221,26,2)" fg:x="4279" fg:w="20"/><text x="15.6266%" y="991.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (20 samples, 0.07%)</title><rect x="15.3766%" y="965" width="0.0719%" height="15" fill="rgb(254,61,31)" fg:x="4279" fg:w="20"/><text x="15.6266%" y="975.50"></text></g><g><title>parking::Unparker::unpark (20 samples, 0.07%)</title><rect x="15.3766%" y="949" width="0.0719%" height="15" fill="rgb(222,173,38)" fg:x="4279" fg:w="20"/><text x="15.6266%" y="959.50"></text></g><g><title>parking::Inner::unpark (13 samples, 0.05%)</title><rect x="15.4018%" y="933" width="0.0467%" height="15" fill="rgb(218,50,12)" fg:x="4286" fg:w="13"/><text x="15.6518%" y="943.50"></text></g><g><title>syscall (11 samples, 0.04%)</title><rect x="15.4089%" y="917" width="0.0395%" height="15" fill="rgb(223,88,40)" fg:x="4288" fg:w="11"/><text x="15.6589%" y="927.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="15.4089%" y="901" width="0.0395%" height="15" fill="rgb(237,54,19)" fg:x="4288" fg:w="11"/><text x="15.6589%" y="911.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="15.4089%" y="885" width="0.0395%" height="15" fill="rgb(251,129,25)" fg:x="4288" fg:w="11"/><text x="15.6589%" y="895.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="15.4089%" y="869" width="0.0395%" height="15" fill="rgb(238,97,19)" fg:x="4288" fg:w="11"/><text x="15.6589%" y="879.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="15.4089%" y="853" width="0.0395%" height="15" fill="rgb(240,169,18)" fg:x="4288" fg:w="11"/><text x="15.6589%" y="863.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="15.4089%" y="837" width="0.0395%" height="15" fill="rgb(230,187,49)" fg:x="4288" fg:w="11"/><text x="15.6589%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="15.4377%" y="821" width="0.0108%" height="15" fill="rgb(209,44,26)" fg:x="4296" fg:w="3"/><text x="15.6877%" y="831.50"></text></g><g><title>async_executor::State::notify (26 samples, 0.09%)</title><rect x="15.3586%" y="1013" width="0.0934%" height="15" fill="rgb(244,0,6)" fg:x="4274" fg:w="26"/><text x="15.6086%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="15.4628%" y="981" width="0.0144%" height="15" fill="rgb(248,18,21)" fg:x="4303" fg:w="4"/><text x="15.7128%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="15.4628%" y="965" width="0.0144%" height="15" fill="rgb(245,180,19)" fg:x="4303" fg:w="4"/><text x="15.7128%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="15.4628%" y="949" width="0.0144%" height="15" fill="rgb(252,118,36)" fg:x="4303" fg:w="4"/><text x="15.7128%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="15.4628%" y="933" width="0.0144%" height="15" fill="rgb(210,224,19)" fg:x="4303" fg:w="4"/><text x="15.7128%" y="943.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="15.4628%" y="917" width="0.0144%" height="15" fill="rgb(218,30,24)" fg:x="4303" fg:w="4"/><text x="15.7128%" y="927.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="15.4628%" y="901" width="0.0144%" height="15" fill="rgb(219,75,50)" fg:x="4303" fg:w="4"/><text x="15.7128%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (36 samples, 0.13%)</title><rect x="15.3586%" y="1045" width="0.1294%" height="15" fill="rgb(234,72,50)" fg:x="4274" fg:w="36"/><text x="15.6086%" y="1055.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (36 samples, 0.13%)</title><rect x="15.3586%" y="1029" width="0.1294%" height="15" fill="rgb(219,100,48)" fg:x="4274" fg:w="36"/><text x="15.6086%" y="1039.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (10 samples, 0.04%)</title><rect x="15.4521%" y="1013" width="0.0359%" height="15" fill="rgb(253,5,41)" fg:x="4300" fg:w="10"/><text x="15.7021%" y="1023.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (10 samples, 0.04%)</title><rect x="15.4521%" y="997" width="0.0359%" height="15" fill="rgb(247,181,11)" fg:x="4300" fg:w="10"/><text x="15.7021%" y="1007.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="15.4880%" y="1029" width="0.0108%" height="15" fill="rgb(222,223,25)" fg:x="4310" fg:w="3"/><text x="15.7380%" y="1039.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="15.5060%" y="981" width="0.0359%" height="15" fill="rgb(214,198,28)" fg:x="4315" fg:w="10"/><text x="15.7560%" y="991.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="15.5060%" y="965" width="0.0359%" height="15" fill="rgb(230,46,43)" fg:x="4315" fg:w="10"/><text x="15.7560%" y="975.50"></text></g><g><title>__mprotect (8 samples, 0.03%)</title><rect x="15.5132%" y="949" width="0.0287%" height="15" fill="rgb(233,65,53)" fg:x="4317" fg:w="8"/><text x="15.7632%" y="959.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="15.5132%" y="933" width="0.0287%" height="15" fill="rgb(221,121,27)" fg:x="4317" fg:w="8"/><text x="15.7632%" y="943.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="15.5132%" y="917" width="0.0287%" height="15" fill="rgb(247,70,47)" fg:x="4317" fg:w="8"/><text x="15.7632%" y="927.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="15.5132%" y="901" width="0.0287%" height="15" fill="rgb(228,85,35)" fg:x="4317" fg:w="8"/><text x="15.7632%" y="911.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="15.5132%" y="885" width="0.0287%" height="15" fill="rgb(209,50,18)" fg:x="4317" fg:w="8"/><text x="15.7632%" y="895.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="15.5167%" y="869" width="0.0252%" height="15" fill="rgb(250,19,35)" fg:x="4318" fg:w="7"/><text x="15.7667%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="15.5203%" y="853" width="0.0216%" height="15" fill="rgb(253,107,29)" fg:x="4319" fg:w="6"/><text x="15.7703%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="15.5275%" y="837" width="0.0144%" height="15" fill="rgb(252,179,29)" fg:x="4321" fg:w="4"/><text x="15.7775%" y="847.50"></text></g><g><title>async_task::runnable::spawn_unchecked (17 samples, 0.06%)</title><rect x="15.4880%" y="1045" width="0.0611%" height="15" fill="rgb(238,194,6)" fg:x="4310" fg:w="17"/><text x="15.7380%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (13 samples, 0.05%)</title><rect x="15.5024%" y="1029" width="0.0467%" height="15" fill="rgb(238,164,29)" fg:x="4314" fg:w="13"/><text x="15.7524%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.05%)</title><rect x="15.5024%" y="1013" width="0.0467%" height="15" fill="rgb(224,25,9)" fg:x="4314" fg:w="13"/><text x="15.7524%" y="1023.50"></text></g><g><title>malloc (13 samples, 0.05%)</title><rect x="15.5024%" y="997" width="0.0467%" height="15" fill="rgb(244,153,23)" fg:x="4314" fg:w="13"/><text x="15.7524%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="15.5491%" y="965" width="0.0108%" height="15" fill="rgb(212,203,14)" fg:x="4327" fg:w="3"/><text x="15.7991%" y="975.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (4 samples, 0.01%)</title><rect x="15.5491%" y="1045" width="0.0144%" height="15" fill="rgb(220,164,20)" fg:x="4327" fg:w="4"/><text x="15.7991%" y="1055.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (4 samples, 0.01%)</title><rect x="15.5491%" y="1029" width="0.0144%" height="15" fill="rgb(222,203,48)" fg:x="4327" fg:w="4"/><text x="15.7991%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="15.5491%" y="1013" width="0.0144%" height="15" fill="rgb(215,159,22)" fg:x="4327" fg:w="4"/><text x="15.7991%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="15.5491%" y="997" width="0.0144%" height="15" fill="rgb(216,183,47)" fg:x="4327" fg:w="4"/><text x="15.7991%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="15.5491%" y="981" width="0.0144%" height="15" fill="rgb(229,195,25)" fg:x="4327" fg:w="4"/><text x="15.7991%" y="991.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (79 samples, 0.28%)</title><rect x="15.3047%" y="1221" width="0.2839%" height="15" fill="rgb(224,132,51)" fg:x="4259" fg:w="79"/><text x="15.5547%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (79 samples, 0.28%)</title><rect x="15.3047%" y="1205" width="0.2839%" height="15" fill="rgb(240,63,7)" fg:x="4259" fg:w="79"/><text x="15.5547%" y="1215.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (79 samples, 0.28%)</title><rect x="15.3047%" y="1189" width="0.2839%" height="15" fill="rgb(249,182,41)" fg:x="4259" fg:w="79"/><text x="15.5547%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (79 samples, 0.28%)</title><rect x="15.3047%" y="1173" width="0.2839%" height="15" fill="rgb(243,47,26)" fg:x="4259" fg:w="79"/><text x="15.5547%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (79 samples, 0.28%)</title><rect x="15.3047%" y="1157" width="0.2839%" height="15" fill="rgb(233,48,2)" fg:x="4259" fg:w="79"/><text x="15.5547%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (79 samples, 0.28%)</title><rect x="15.3047%" y="1141" width="0.2839%" height="15" fill="rgb(244,165,34)" fg:x="4259" fg:w="79"/><text x="15.5547%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (78 samples, 0.28%)</title><rect x="15.3083%" y="1125" width="0.2803%" height="15" fill="rgb(207,89,7)" fg:x="4260" fg:w="78"/><text x="15.5583%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (73 samples, 0.26%)</title><rect x="15.3263%" y="1109" width="0.2623%" height="15" fill="rgb(244,117,36)" fg:x="4265" fg:w="73"/><text x="15.5763%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (73 samples, 0.26%)</title><rect x="15.3263%" y="1093" width="0.2623%" height="15" fill="rgb(226,144,34)" fg:x="4265" fg:w="73"/><text x="15.5763%" y="1103.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::spawn (73 samples, 0.26%)</title><rect x="15.3263%" y="1077" width="0.2623%" height="15" fill="rgb(213,23,19)" fg:x="4265" fg:w="73"/><text x="15.5763%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn (73 samples, 0.26%)</title><rect x="15.3263%" y="1061" width="0.2623%" height="15" fill="rgb(217,75,12)" fg:x="4265" fg:w="73"/><text x="15.5763%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.03%)</title><rect x="15.5635%" y="1045" width="0.0252%" height="15" fill="rgb(224,159,17)" fg:x="4331" fg:w="7"/><text x="15.8135%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.02%)</title><rect x="15.5671%" y="1029" width="0.0216%" height="15" fill="rgb(217,118,1)" fg:x="4332" fg:w="6"/><text x="15.8171%" y="1039.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (6 samples, 0.02%)</title><rect x="15.5671%" y="1013" width="0.0216%" height="15" fill="rgb(232,180,48)" fg:x="4332" fg:w="6"/><text x="15.8171%" y="1023.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="15.5958%" y="645" width="0.0108%" height="15" fill="rgb(230,27,33)" fg:x="4340" fg:w="3"/><text x="15.8458%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (23 samples, 0.08%)</title><rect x="15.5958%" y="725" width="0.0827%" height="15" fill="rgb(205,31,21)" fg:x="4340" fg:w="23"/><text x="15.8458%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.08%)</title><rect x="15.5958%" y="709" width="0.0827%" height="15" fill="rgb(253,59,4)" fg:x="4340" fg:w="23"/><text x="15.8458%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.08%)</title><rect x="15.5958%" y="693" width="0.0827%" height="15" fill="rgb(224,201,9)" fg:x="4340" fg:w="23"/><text x="15.8458%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.08%)</title><rect x="15.5958%" y="677" width="0.0827%" height="15" fill="rgb(229,206,30)" fg:x="4340" fg:w="23"/><text x="15.8458%" y="687.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.08%)</title><rect x="15.5958%" y="661" width="0.0827%" height="15" fill="rgb(212,67,47)" fg:x="4340" fg:w="23"/><text x="15.8458%" y="671.50"></text></g><g><title>malloc (19 samples, 0.07%)</title><rect x="15.6102%" y="645" width="0.0683%" height="15" fill="rgb(211,96,50)" fg:x="4344" fg:w="19"/><text x="15.8602%" y="655.50"></text></g><g><title>[libc.so.6] (16 samples, 0.06%)</title><rect x="15.6210%" y="629" width="0.0575%" height="15" fill="rgb(252,114,18)" fg:x="4347" fg:w="16"/><text x="15.8710%" y="639.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="15.6820%" y="693" width="0.0108%" height="15" fill="rgb(223,58,37)" fg:x="4364" fg:w="3"/><text x="15.9320%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="15.8617%" y="501" width="0.0144%" height="15" fill="rgb(237,70,4)" fg:x="4414" fg:w="4"/><text x="16.1117%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="15.8617%" y="485" width="0.0144%" height="15" fill="rgb(244,85,46)" fg:x="4414" fg:w="4"/><text x="16.1117%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="15.8617%" y="469" width="0.0144%" height="15" fill="rgb(223,39,52)" fg:x="4414" fg:w="4"/><text x="16.1117%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="15.8653%" y="453" width="0.0108%" height="15" fill="rgb(218,200,14)" fg:x="4415" fg:w="3"/><text x="16.1153%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="15.8653%" y="437" width="0.0108%" height="15" fill="rgb(208,171,16)" fg:x="4415" fg:w="3"/><text x="16.1153%" y="447.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="15.8366%" y="517" width="0.0431%" height="15" fill="rgb(234,200,18)" fg:x="4407" fg:w="12"/><text x="16.0866%" y="527.50"></text></g><g><title>__rdl_alloc (51 samples, 0.18%)</title><rect x="15.7000%" y="629" width="0.1833%" height="15" fill="rgb(228,45,11)" fg:x="4369" fg:w="51"/><text x="15.9500%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (49 samples, 0.18%)</title><rect x="15.7072%" y="613" width="0.1761%" height="15" fill="rgb(237,182,11)" fg:x="4371" fg:w="49"/><text x="15.9572%" y="623.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (49 samples, 0.18%)</title><rect x="15.7072%" y="597" width="0.1761%" height="15" fill="rgb(241,175,49)" fg:x="4371" fg:w="49"/><text x="15.9572%" y="607.50"></text></g><g><title>posix_memalign (49 samples, 0.18%)</title><rect x="15.7072%" y="581" width="0.1761%" height="15" fill="rgb(247,38,35)" fg:x="4371" fg:w="49"/><text x="15.9572%" y="591.50"></text></g><g><title>[libc.so.6] (45 samples, 0.16%)</title><rect x="15.7216%" y="565" width="0.1617%" height="15" fill="rgb(228,39,49)" fg:x="4375" fg:w="45"/><text x="15.9716%" y="575.50"></text></g><g><title>[libc.so.6] (38 samples, 0.14%)</title><rect x="15.7467%" y="549" width="0.1366%" height="15" fill="rgb(226,101,26)" fg:x="4382" fg:w="38"/><text x="15.9967%" y="559.50"></text></g><g><title>[libc.so.6] (36 samples, 0.13%)</title><rect x="15.7539%" y="533" width="0.1294%" height="15" fill="rgb(206,141,19)" fg:x="4384" fg:w="36"/><text x="16.0039%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (60 samples, 0.22%)</title><rect x="15.6820%" y="709" width="0.2156%" height="15" fill="rgb(211,200,13)" fg:x="4364" fg:w="60"/><text x="15.9320%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (57 samples, 0.20%)</title><rect x="15.6928%" y="693" width="0.2048%" height="15" fill="rgb(241,121,6)" fg:x="4367" fg:w="57"/><text x="15.9428%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.20%)</title><rect x="15.6928%" y="677" width="0.2048%" height="15" fill="rgb(234,221,29)" fg:x="4367" fg:w="57"/><text x="15.9428%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.20%)</title><rect x="15.6928%" y="661" width="0.2048%" height="15" fill="rgb(229,136,5)" fg:x="4367" fg:w="57"/><text x="15.9428%" y="671.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.20%)</title><rect x="15.6928%" y="645" width="0.2048%" height="15" fill="rgb(238,36,11)" fg:x="4367" fg:w="57"/><text x="15.9428%" y="655.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="15.8833%" y="629" width="0.0144%" height="15" fill="rgb(251,55,41)" fg:x="4420" fg:w="4"/><text x="16.1333%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="16.0558%" y="677" width="0.0144%" height="15" fill="rgb(242,34,40)" fg:x="4468" fg:w="4"/><text x="16.3058%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (75 samples, 0.27%)</title><rect x="15.9120%" y="693" width="0.2695%" height="15" fill="rgb(215,42,17)" fg:x="4428" fg:w="75"/><text x="16.1620%" y="703.50"></text></g><g><title>core::ptr::write (31 samples, 0.11%)</title><rect x="16.0701%" y="677" width="0.1114%" height="15" fill="rgb(207,44,46)" fg:x="4472" fg:w="31"/><text x="16.3201%" y="687.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="16.0845%" y="661" width="0.0970%" height="15" fill="rgb(211,206,28)" fg:x="4476" fg:w="27"/><text x="16.3345%" y="671.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="16.0845%" y="645" width="0.0970%" height="15" fill="rgb(237,167,16)" fg:x="4476" fg:w="27"/><text x="16.3345%" y="655.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="16.0917%" y="629" width="0.0898%" height="15" fill="rgb(233,66,6)" fg:x="4478" fg:w="25"/><text x="16.3417%" y="639.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="16.0953%" y="613" width="0.0862%" height="15" fill="rgb(246,123,29)" fg:x="4479" fg:w="24"/><text x="16.3453%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="16.1240%" y="597" width="0.0575%" height="15" fill="rgb(209,62,40)" fg:x="4487" fg:w="16"/><text x="16.3740%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="16.1456%" y="581" width="0.0359%" height="15" fill="rgb(218,4,25)" fg:x="4493" fg:w="10"/><text x="16.3956%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="16.1492%" y="565" width="0.0323%" height="15" fill="rgb(253,91,49)" fg:x="4494" fg:w="9"/><text x="16.3992%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="16.1672%" y="549" width="0.0144%" height="15" fill="rgb(228,155,29)" fg:x="4499" fg:w="4"/><text x="16.4172%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="16.1708%" y="533" width="0.0108%" height="15" fill="rgb(243,57,37)" fg:x="4500" fg:w="3"/><text x="16.4208%" y="543.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="16.1959%" y="533" width="0.0970%" height="15" fill="rgb(244,167,17)" fg:x="4507" fg:w="27"/><text x="16.4459%" y="543.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="16.2175%" y="517" width="0.0755%" height="15" fill="rgb(207,181,38)" fg:x="4513" fg:w="21"/><text x="16.4675%" y="527.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="16.2175%" y="501" width="0.0755%" height="15" fill="rgb(211,8,23)" fg:x="4513" fg:w="21"/><text x="16.4675%" y="511.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="16.2211%" y="485" width="0.0719%" height="15" fill="rgb(235,11,44)" fg:x="4514" fg:w="20"/><text x="16.4711%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="16.2319%" y="469" width="0.0611%" height="15" fill="rgb(248,18,52)" fg:x="4517" fg:w="17"/><text x="16.4819%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="16.2570%" y="453" width="0.0359%" height="15" fill="rgb(208,4,7)" fg:x="4524" fg:w="10"/><text x="16.5070%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="16.2642%" y="437" width="0.0287%" height="15" fill="rgb(240,17,39)" fg:x="4526" fg:w="8"/><text x="16.5142%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="16.2678%" y="421" width="0.0252%" height="15" fill="rgb(207,170,3)" fg:x="4527" fg:w="7"/><text x="16.5178%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="16.2750%" y="405" width="0.0180%" height="15" fill="rgb(236,100,52)" fg:x="4529" fg:w="5"/><text x="16.5250%" y="415.50"></text></g><g><title>[libc.so.6] (35 samples, 0.13%)</title><rect x="16.1923%" y="549" width="0.1258%" height="15" fill="rgb(246,78,51)" fg:x="4506" fg:w="35"/><text x="16.4423%" y="559.50"></text></g><g><title>__mprotect (7 samples, 0.03%)</title><rect x="16.2929%" y="533" width="0.0252%" height="15" fill="rgb(211,17,15)" fg:x="4534" fg:w="7"/><text x="16.5429%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="16.2929%" y="517" width="0.0252%" height="15" fill="rgb(209,59,46)" fg:x="4534" fg:w="7"/><text x="16.5429%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="16.2929%" y="501" width="0.0252%" height="15" fill="rgb(210,92,25)" fg:x="4534" fg:w="7"/><text x="16.5429%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="16.3001%" y="485" width="0.0180%" height="15" fill="rgb(238,174,52)" fg:x="4536" fg:w="5"/><text x="16.5501%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="16.3001%" y="469" width="0.0180%" height="15" fill="rgb(230,73,7)" fg:x="4536" fg:w="5"/><text x="16.5501%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="16.3001%" y="453" width="0.0180%" height="15" fill="rgb(243,124,40)" fg:x="4536" fg:w="5"/><text x="16.5501%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="16.3037%" y="437" width="0.0144%" height="15" fill="rgb(244,170,11)" fg:x="4537" fg:w="4"/><text x="16.5537%" y="447.50"></text></g><g><title>[libc.so.6] (40 samples, 0.14%)</title><rect x="16.1851%" y="565" width="0.1437%" height="15" fill="rgb(207,114,54)" fg:x="4504" fg:w="40"/><text x="16.4351%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="16.3181%" y="549" width="0.0108%" height="15" fill="rgb(205,42,20)" fg:x="4541" fg:w="3"/><text x="16.5681%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (44 samples, 0.16%)</title><rect x="16.1815%" y="693" width="0.1581%" height="15" fill="rgb(230,30,28)" fg:x="4503" fg:w="44"/><text x="16.4315%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44 samples, 0.16%)</title><rect x="16.1815%" y="677" width="0.1581%" height="15" fill="rgb(205,73,54)" fg:x="4503" fg:w="44"/><text x="16.4315%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44 samples, 0.16%)</title><rect x="16.1815%" y="661" width="0.1581%" height="15" fill="rgb(254,227,23)" fg:x="4503" fg:w="44"/><text x="16.4315%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.16%)</title><rect x="16.1815%" y="645" width="0.1581%" height="15" fill="rgb(228,202,34)" fg:x="4503" fg:w="44"/><text x="16.4315%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.16%)</title><rect x="16.1815%" y="629" width="0.1581%" height="15" fill="rgb(222,225,37)" fg:x="4503" fg:w="44"/><text x="16.4315%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.16%)</title><rect x="16.1815%" y="613" width="0.1581%" height="15" fill="rgb(221,14,54)" fg:x="4503" fg:w="44"/><text x="16.4315%" y="623.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.16%)</title><rect x="16.1815%" y="597" width="0.1581%" height="15" fill="rgb(254,102,2)" fg:x="4503" fg:w="44"/><text x="16.4315%" y="607.50"></text></g><g><title>malloc (44 samples, 0.16%)</title><rect x="16.1815%" y="581" width="0.1581%" height="15" fill="rgb(232,104,17)" fg:x="4503" fg:w="44"/><text x="16.4315%" y="591.50"></text></g><g><title>__lll_lock_wake_private (3 samples, 0.01%)</title><rect x="16.3289%" y="565" width="0.0108%" height="15" fill="rgb(250,220,14)" fg:x="4544" fg:w="3"/><text x="16.5789%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="16.3289%" y="549" width="0.0108%" height="15" fill="rgb(241,158,9)" fg:x="4544" fg:w="3"/><text x="16.5789%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="16.3289%" y="533" width="0.0108%" height="15" fill="rgb(246,9,43)" fg:x="4544" fg:w="3"/><text x="16.5789%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (190 samples, 0.68%)</title><rect x="15.6820%" y="725" width="0.6828%" height="15" fill="rgb(206,73,33)" fg:x="4364" fg:w="190"/><text x="15.9320%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (130 samples, 0.47%)</title><rect x="15.8977%" y="709" width="0.4672%" height="15" fill="rgb(222,79,8)" fg:x="4424" fg:w="130"/><text x="16.1477%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.03%)</title><rect x="16.3397%" y="693" width="0.0252%" height="15" fill="rgb(234,8,54)" fg:x="4547" fg:w="7"/><text x="16.5897%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.03%)</title><rect x="16.3397%" y="677" width="0.0252%" height="15" fill="rgb(209,134,38)" fg:x="4547" fg:w="7"/><text x="16.5897%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.02%)</title><rect x="16.3433%" y="661" width="0.0216%" height="15" fill="rgb(230,127,29)" fg:x="4548" fg:w="6"/><text x="16.5933%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="16.3648%" y="725" width="0.0144%" height="15" fill="rgb(242,44,41)" fg:x="4554" fg:w="4"/><text x="16.6148%" y="735.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="16.3648%" y="709" width="0.0144%" height="15" fill="rgb(222,56,43)" fg:x="4554" fg:w="4"/><text x="16.6148%" y="719.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (4 samples, 0.01%)</title><rect x="16.3648%" y="693" width="0.0144%" height="15" fill="rgb(238,39,47)" fg:x="4554" fg:w="4"/><text x="16.6148%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (4 samples, 0.01%)</title><rect x="16.3648%" y="677" width="0.0144%" height="15" fill="rgb(226,79,43)" fg:x="4554" fg:w="4"/><text x="16.6148%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::has_writers_waiting (3 samples, 0.01%)</title><rect x="16.3684%" y="661" width="0.0108%" height="15" fill="rgb(242,105,53)" fg:x="4555" fg:w="3"/><text x="16.6184%" y="671.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (223 samples, 0.80%)</title><rect x="15.5886%" y="1141" width="0.8014%" height="15" fill="rgb(251,132,46)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (223 samples, 0.80%)</title><rect x="15.5886%" y="1125" width="0.8014%" height="15" fill="rgb(231,77,14)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (223 samples, 0.80%)</title><rect x="15.5886%" y="1109" width="0.8014%" height="15" fill="rgb(240,135,9)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1119.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (223 samples, 0.80%)</title><rect x="15.5886%" y="1093" width="0.8014%" height="15" fill="rgb(248,109,14)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1103.50"></text></g><g><title>async_std::task::block_on::block_on (223 samples, 0.80%)</title><rect x="15.5886%" y="1077" width="0.8014%" height="15" fill="rgb(227,146,52)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking (223 samples, 0.80%)</title><rect x="15.5886%" y="1061" width="0.8014%" height="15" fill="rgb(232,54,3)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (223 samples, 0.80%)</title><rect x="15.5886%" y="1045" width="0.8014%" height="15" fill="rgb(229,201,43)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (223 samples, 0.80%)</title><rect x="15.5886%" y="1029" width="0.8014%" height="15" fill="rgb(252,161,33)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (223 samples, 0.80%)</title><rect x="15.5886%" y="1013" width="0.8014%" height="15" fill="rgb(226,146,40)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (223 samples, 0.80%)</title><rect x="15.5886%" y="997" width="0.8014%" height="15" fill="rgb(219,47,25)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (223 samples, 0.80%)</title><rect x="15.5886%" y="981" width="0.8014%" height="15" fill="rgb(250,135,13)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (223 samples, 0.80%)</title><rect x="15.5886%" y="965" width="0.8014%" height="15" fill="rgb(219,229,18)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (223 samples, 0.80%)</title><rect x="15.5886%" y="949" width="0.8014%" height="15" fill="rgb(217,152,27)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="959.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (223 samples, 0.80%)</title><rect x="15.5886%" y="933" width="0.8014%" height="15" fill="rgb(225,71,47)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="943.50"></text></g><g><title>async_global_executor::executor::block_on (223 samples, 0.80%)</title><rect x="15.5886%" y="917" width="0.8014%" height="15" fill="rgb(220,139,14)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (223 samples, 0.80%)</title><rect x="15.5886%" y="901" width="0.8014%" height="15" fill="rgb(247,54,32)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (223 samples, 0.80%)</title><rect x="15.5886%" y="885" width="0.8014%" height="15" fill="rgb(252,131,39)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (223 samples, 0.80%)</title><rect x="15.5886%" y="869" width="0.8014%" height="15" fill="rgb(210,108,39)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on (223 samples, 0.80%)</title><rect x="15.5886%" y="853" width="0.8014%" height="15" fill="rgb(205,23,29)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="863.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (223 samples, 0.80%)</title><rect x="15.5886%" y="837" width="0.8014%" height="15" fill="rgb(246,139,46)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="847.50"></text></g><g><title>async_io::driver::block_on (223 samples, 0.80%)</title><rect x="15.5886%" y="821" width="0.8014%" height="15" fill="rgb(250,81,26)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (223 samples, 0.80%)</title><rect x="15.5886%" y="805" width="0.8014%" height="15" fill="rgb(214,104,7)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="815.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (223 samples, 0.80%)</title><rect x="15.5886%" y="789" width="0.8014%" height="15" fill="rgb(233,189,8)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (223 samples, 0.80%)</title><rect x="15.5886%" y="773" width="0.8014%" height="15" fill="rgb(228,141,17)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (223 samples, 0.80%)</title><rect x="15.5886%" y="757" width="0.8014%" height="15" fill="rgb(247,157,1)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="767.50"></text></g><g><title>async_executor::Runner::new (223 samples, 0.80%)</title><rect x="15.5886%" y="741" width="0.8014%" height="15" fill="rgb(249,225,5)" fg:x="4338" fg:w="223"/><text x="15.8386%" y="751.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (3 samples, 0.01%)</title><rect x="16.3792%" y="725" width="0.0108%" height="15" fill="rgb(242,55,13)" fg:x="4558" fg:w="3"/><text x="16.6292%" y="735.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (3 samples, 0.01%)</title><rect x="16.3792%" y="709" width="0.0108%" height="15" fill="rgb(230,49,50)" fg:x="4558" fg:w="3"/><text x="16.6292%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (3 samples, 0.01%)</title><rect x="16.3792%" y="693" width="0.0108%" height="15" fill="rgb(241,111,38)" fg:x="4558" fg:w="3"/><text x="16.6292%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="16.4906%" y="1029" width="0.0108%" height="15" fill="rgb(252,155,4)" fg:x="4589" fg:w="3"/><text x="16.7406%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zenoh::net::routing::face::FaceState&gt;&gt; (5 samples, 0.02%)</title><rect x="16.5014%" y="1029" width="0.0180%" height="15" fill="rgb(212,69,32)" fg:x="4592" fg:w="5"/><text x="16.7514%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="16.5014%" y="1013" width="0.0180%" height="15" fill="rgb(243,107,47)" fg:x="4592" fg:w="5"/><text x="16.7514%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;zenoh::net::routing::router::Tables&gt;&gt; (4 samples, 0.01%)</title><rect x="16.5193%" y="1029" width="0.0144%" height="15" fill="rgb(247,130,12)" fg:x="4597" fg:w="4"/><text x="16.7693%" y="1039.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="16.5193%" y="1013" width="0.0144%" height="15" fill="rgb(233,74,16)" fg:x="4597" fg:w="4"/><text x="16.7693%" y="1023.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (3 samples, 0.01%)</title><rect x="16.5229%" y="997" width="0.0108%" height="15" fill="rgb(208,58,18)" fg:x="4598" fg:w="3"/><text x="16.7729%" y="1007.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (3 samples, 0.01%)</title><rect x="16.5229%" y="981" width="0.0108%" height="15" fill="rgb(242,225,1)" fg:x="4598" fg:w="3"/><text x="16.7729%" y="991.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (6 samples, 0.02%)</title><rect x="16.5840%" y="997" width="0.0216%" height="15" fill="rgb(249,39,40)" fg:x="4615" fg:w="6"/><text x="16.8340%" y="1007.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (5 samples, 0.02%)</title><rect x="16.5876%" y="981" width="0.0180%" height="15" fill="rgb(207,72,44)" fg:x="4616" fg:w="5"/><text x="16.8376%" y="991.50"></text></g><g><title>alloc::rc::is_dangling (5 samples, 0.02%)</title><rect x="16.5876%" y="965" width="0.0180%" height="15" fill="rgb(215,193,12)" fg:x="4616" fg:w="5"/><text x="16.8376%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zenoh::net::routing::resource::Resource&gt;&gt; (4 samples, 0.01%)</title><rect x="16.6056%" y="997" width="0.0144%" height="15" fill="rgb(248,41,39)" fg:x="4621" fg:w="4"/><text x="16.8556%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="16.6056%" y="981" width="0.0144%" height="15" fill="rgb(253,85,4)" fg:x="4621" fg:w="4"/><text x="16.8556%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="16.6415%" y="901" width="0.0108%" height="15" fill="rgb(243,70,31)" fg:x="4631" fg:w="3"/><text x="16.8915%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.02%)</title><rect x="16.6379%" y="933" width="0.0180%" height="15" fill="rgb(253,195,26)" fg:x="4630" fg:w="5"/><text x="16.8879%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt; (4 samples, 0.01%)</title><rect x="16.6415%" y="917" width="0.0144%" height="15" fill="rgb(243,42,11)" fg:x="4631" fg:w="4"/><text x="16.8915%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt;&gt; (10 samples, 0.04%)</title><rect x="16.6271%" y="981" width="0.0359%" height="15" fill="rgb(239,66,17)" fg:x="4627" fg:w="10"/><text x="16.8771%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt; (10 samples, 0.04%)</title><rect x="16.6271%" y="965" width="0.0359%" height="15" fill="rgb(217,132,21)" fg:x="4627" fg:w="10"/><text x="16.8771%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="16.6271%" y="949" width="0.0359%" height="15" fill="rgb(252,202,21)" fg:x="4627" fg:w="10"/><text x="16.8771%" y="959.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.01%)</title><rect x="16.6739%" y="965" width="0.0108%" height="15" fill="rgb(233,98,36)" fg:x="4640" fg:w="3"/><text x="16.9239%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (3 samples, 0.01%)</title><rect x="16.6739%" y="949" width="0.0108%" height="15" fill="rgb(216,153,54)" fg:x="4640" fg:w="3"/><text x="16.9239%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (3 samples, 0.01%)</title><rect x="16.6739%" y="933" width="0.0108%" height="15" fill="rgb(250,99,7)" fg:x="4640" fg:w="3"/><text x="16.9239%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.01%)</title><rect x="16.6739%" y="917" width="0.0108%" height="15" fill="rgb(207,56,50)" fg:x="4640" fg:w="3"/><text x="16.9239%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="16.6846%" y="965" width="0.0144%" height="15" fill="rgb(244,61,34)" fg:x="4643" fg:w="4"/><text x="16.9346%" y="975.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="16.6846%" y="949" width="0.0144%" height="15" fill="rgb(241,50,38)" fg:x="4643" fg:w="4"/><text x="16.9346%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="16.6846%" y="933" width="0.0144%" height="15" fill="rgb(212,166,30)" fg:x="4643" fg:w="4"/><text x="16.9346%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="16.6846%" y="917" width="0.0144%" height="15" fill="rgb(249,127,32)" fg:x="4643" fg:w="4"/><text x="16.9346%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="16.7062%" y="965" width="0.0144%" height="15" fill="rgb(209,103,0)" fg:x="4649" fg:w="4"/><text x="16.9562%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="16.7062%" y="949" width="0.0144%" height="15" fill="rgb(238,209,51)" fg:x="4649" fg:w="4"/><text x="16.9562%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="16.7062%" y="933" width="0.0144%" height="15" fill="rgb(237,56,23)" fg:x="4649" fg:w="4"/><text x="16.9562%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="16.7062%" y="917" width="0.0144%" height="15" fill="rgb(215,153,46)" fg:x="4649" fg:w="4"/><text x="16.9562%" y="927.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="16.7062%" y="901" width="0.0144%" height="15" fill="rgb(224,49,31)" fg:x="4649" fg:w="4"/><text x="16.9562%" y="911.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="16.7062%" y="885" width="0.0144%" height="15" fill="rgb(250,18,42)" fg:x="4649" fg:w="4"/><text x="16.9562%" y="895.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (4 samples, 0.01%)</title><rect x="16.7206%" y="965" width="0.0144%" height="15" fill="rgb(215,176,39)" fg:x="4653" fg:w="4"/><text x="16.9706%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="16.7421%" y="949" width="0.0108%" height="15" fill="rgb(223,77,29)" fg:x="4659" fg:w="3"/><text x="16.9921%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="16.7421%" y="933" width="0.0108%" height="15" fill="rgb(234,94,52)" fg:x="4659" fg:w="3"/><text x="16.9921%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.03%)</title><rect x="16.7349%" y="965" width="0.0287%" height="15" fill="rgb(220,154,50)" fg:x="4657" fg:w="8"/><text x="16.9849%" y="975.50"></text></g><g><title>core::ptr::write (3 samples, 0.01%)</title><rect x="16.7529%" y="949" width="0.0108%" height="15" fill="rgb(212,11,10)" fg:x="4662" fg:w="3"/><text x="17.0029%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.01%)</title><rect x="16.7673%" y="965" width="0.0144%" height="15" fill="rgb(205,166,19)" fg:x="4666" fg:w="4"/><text x="17.0173%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="16.7673%" y="949" width="0.0144%" height="15" fill="rgb(244,198,16)" fg:x="4666" fg:w="4"/><text x="17.0173%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="16.7673%" y="933" width="0.0144%" height="15" fill="rgb(219,69,12)" fg:x="4666" fg:w="4"/><text x="17.0173%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="16.7673%" y="917" width="0.0144%" height="15" fill="rgb(245,30,7)" fg:x="4666" fg:w="4"/><text x="17.0173%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="16.7673%" y="901" width="0.0144%" height="15" fill="rgb(218,221,48)" fg:x="4666" fg:w="4"/><text x="17.0173%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="16.7673%" y="885" width="0.0144%" height="15" fill="rgb(216,66,15)" fg:x="4666" fg:w="4"/><text x="17.0173%" y="895.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="16.7673%" y="869" width="0.0144%" height="15" fill="rgb(226,122,50)" fg:x="4666" fg:w="4"/><text x="17.0173%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zenoh::net::routing::resource::Resource&gt;&gt; (3 samples, 0.01%)</title><rect x="16.7817%" y="965" width="0.0108%" height="15" fill="rgb(239,156,16)" fg:x="4670" fg:w="3"/><text x="17.0317%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="16.7817%" y="949" width="0.0108%" height="15" fill="rgb(224,27,38)" fg:x="4670" fg:w="3"/><text x="17.0317%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (5 samples, 0.02%)</title><rect x="16.8032%" y="965" width="0.0180%" height="15" fill="rgb(224,39,27)" fg:x="4676" fg:w="5"/><text x="17.0532%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (3 samples, 0.01%)</title><rect x="16.8104%" y="949" width="0.0108%" height="15" fill="rgb(215,92,29)" fg:x="4678" fg:w="3"/><text x="17.0604%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::next (3 samples, 0.01%)</title><rect x="16.8392%" y="917" width="0.0108%" height="15" fill="rgb(207,159,16)" fg:x="4686" fg:w="3"/><text x="17.0892%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (3 samples, 0.01%)</title><rect x="16.8392%" y="901" width="0.0108%" height="15" fill="rgb(238,163,47)" fg:x="4686" fg:w="3"/><text x="17.0892%" y="911.50"></text></g><g><title>zenoh_protocol_core::key_expr::advance (4 samples, 0.01%)</title><rect x="16.8392%" y="933" width="0.0144%" height="15" fill="rgb(219,91,49)" fg:x="4686" fg:w="4"/><text x="17.0892%" y="943.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (57 samples, 0.20%)</title><rect x="16.6631%" y="981" width="0.2048%" height="15" fill="rgb(227,167,31)" fg:x="4637" fg:w="57"/><text x="16.9131%" y="991.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (13 samples, 0.05%)</title><rect x="16.8212%" y="965" width="0.0467%" height="15" fill="rgb(234,80,54)" fg:x="4681" fg:w="13"/><text x="17.0712%" y="975.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (13 samples, 0.05%)</title><rect x="16.8212%" y="949" width="0.0467%" height="15" fill="rgb(212,114,2)" fg:x="4681" fg:w="13"/><text x="17.0712%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::wild (3 samples, 0.01%)</title><rect x="16.8571%" y="933" width="0.0108%" height="15" fill="rgb(234,50,24)" fg:x="4691" fg:w="3"/><text x="17.1071%" y="943.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (93 samples, 0.33%)</title><rect x="16.5553%" y="1013" width="0.3342%" height="15" fill="rgb(221,68,8)" fg:x="4607" fg:w="93"/><text x="16.8053%" y="1023.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (75 samples, 0.27%)</title><rect x="16.6200%" y="997" width="0.2695%" height="15" fill="rgb(254,180,31)" fg:x="4625" fg:w="75"/><text x="16.8700%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::context_mut (6 samples, 0.02%)</title><rect x="16.8679%" y="981" width="0.0216%" height="15" fill="rgb(247,130,50)" fg:x="4694" fg:w="6"/><text x="17.1179%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.02%)</title><rect x="16.8679%" y="965" width="0.0216%" height="15" fill="rgb(211,109,4)" fg:x="4694" fg:w="6"/><text x="17.1179%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (3 samples, 0.01%)</title><rect x="16.9793%" y="837" width="0.0108%" height="15" fill="rgb(238,50,21)" fg:x="4725" fg:w="3"/><text x="17.2293%" y="847.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (3 samples, 0.01%)</title><rect x="16.9793%" y="821" width="0.0108%" height="15" fill="rgb(225,57,45)" fg:x="4725" fg:w="3"/><text x="17.2293%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3 samples, 0.01%)</title><rect x="16.9793%" y="805" width="0.0108%" height="15" fill="rgb(209,196,50)" fg:x="4725" fg:w="3"/><text x="17.2293%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.05%)</title><rect x="16.9541%" y="949" width="0.0503%" height="15" fill="rgb(242,140,13)" fg:x="4718" fg:w="14"/><text x="17.2041%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.05%)</title><rect x="16.9541%" y="933" width="0.0503%" height="15" fill="rgb(217,111,7)" fg:x="4718" fg:w="14"/><text x="17.2041%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (12 samples, 0.04%)</title><rect x="16.9613%" y="917" width="0.0431%" height="15" fill="rgb(253,193,51)" fg:x="4720" fg:w="12"/><text x="17.2113%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (12 samples, 0.04%)</title><rect x="16.9613%" y="901" width="0.0431%" height="15" fill="rgb(252,70,29)" fg:x="4720" fg:w="12"/><text x="17.2113%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (12 samples, 0.04%)</title><rect x="16.9613%" y="885" width="0.0431%" height="15" fill="rgb(232,127,12)" fg:x="4720" fg:w="12"/><text x="17.2113%" y="895.50"></text></g><g><title>&lt;zenoh::net::routing::resource::Resource as core::hash::Hash&gt;::hash (12 samples, 0.04%)</title><rect x="16.9613%" y="869" width="0.0431%" height="15" fill="rgb(211,180,21)" fg:x="4720" fg:w="12"/><text x="17.2113%" y="879.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (8 samples, 0.03%)</title><rect x="16.9757%" y="853" width="0.0287%" height="15" fill="rgb(229,72,13)" fg:x="4724" fg:w="8"/><text x="17.2257%" y="863.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (3 samples, 0.01%)</title><rect x="16.9937%" y="837" width="0.0108%" height="15" fill="rgb(240,211,49)" fg:x="4729" fg:w="3"/><text x="17.2437%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (30 samples, 0.11%)</title><rect x="16.9290%" y="997" width="0.1078%" height="15" fill="rgb(219,149,40)" fg:x="4711" fg:w="30"/><text x="17.1790%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (30 samples, 0.11%)</title><rect x="16.9290%" y="981" width="0.1078%" height="15" fill="rgb(210,127,46)" fg:x="4711" fg:w="30"/><text x="17.1790%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.11%)</title><rect x="16.9290%" y="965" width="0.1078%" height="15" fill="rgb(220,106,7)" fg:x="4711" fg:w="30"/><text x="17.1790%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.03%)</title><rect x="17.0045%" y="949" width="0.0323%" height="15" fill="rgb(249,31,22)" fg:x="4732" fg:w="9"/><text x="17.2545%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.03%)</title><rect x="17.0045%" y="933" width="0.0323%" height="15" fill="rgb(253,1,49)" fg:x="4732" fg:w="9"/><text x="17.2545%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.03%)</title><rect x="17.0045%" y="917" width="0.0323%" height="15" fill="rgb(227,144,33)" fg:x="4732" fg:w="9"/><text x="17.2545%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.03%)</title><rect x="17.0116%" y="901" width="0.0252%" height="15" fill="rgb(249,163,44)" fg:x="4734" fg:w="7"/><text x="17.2616%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.03%)</title><rect x="17.0116%" y="885" width="0.0252%" height="15" fill="rgb(234,15,39)" fg:x="4734" fg:w="7"/><text x="17.2616%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.03%)</title><rect x="17.0116%" y="869" width="0.0252%" height="15" fill="rgb(207,66,16)" fg:x="4734" fg:w="7"/><text x="17.2616%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.03%)</title><rect x="17.0763%" y="885" width="0.0252%" height="15" fill="rgb(233,112,24)" fg:x="4752" fg:w="7"/><text x="17.3263%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.0835%" y="869" width="0.0180%" height="15" fill="rgb(230,90,22)" fg:x="4754" fg:w="5"/><text x="17.3335%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.0835%" y="853" width="0.0180%" height="15" fill="rgb(229,61,13)" fg:x="4754" fg:w="5"/><text x="17.3335%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.0835%" y="837" width="0.0180%" height="15" fill="rgb(225,57,24)" fg:x="4754" fg:w="5"/><text x="17.3335%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.0835%" y="821" width="0.0180%" height="15" fill="rgb(208,169,48)" fg:x="4754" fg:w="5"/><text x="17.3335%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.0835%" y="805" width="0.0180%" height="15" fill="rgb(244,218,51)" fg:x="4754" fg:w="5"/><text x="17.3335%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.0835%" y="789" width="0.0180%" height="15" fill="rgb(214,148,10)" fg:x="4754" fg:w="5"/><text x="17.3335%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.0835%" y="773" width="0.0180%" height="15" fill="rgb(225,174,27)" fg:x="4754" fg:w="5"/><text x="17.3335%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (26 samples, 0.09%)</title><rect x="17.0548%" y="949" width="0.0934%" height="15" fill="rgb(230,96,26)" fg:x="4746" fg:w="26"/><text x="17.3048%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (26 samples, 0.09%)</title><rect x="17.0548%" y="933" width="0.0934%" height="15" fill="rgb(232,10,30)" fg:x="4746" fg:w="26"/><text x="17.3048%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (26 samples, 0.09%)</title><rect x="17.0548%" y="917" width="0.0934%" height="15" fill="rgb(222,8,50)" fg:x="4746" fg:w="26"/><text x="17.3048%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (26 samples, 0.09%)</title><rect x="17.0548%" y="901" width="0.0934%" height="15" fill="rgb(213,81,27)" fg:x="4746" fg:w="26"/><text x="17.3048%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (9 samples, 0.03%)</title><rect x="17.1159%" y="885" width="0.0323%" height="15" fill="rgb(245,50,10)" fg:x="4763" fg:w="9"/><text x="17.3659%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (9 samples, 0.03%)</title><rect x="17.1159%" y="869" width="0.0323%" height="15" fill="rgb(216,100,18)" fg:x="4763" fg:w="9"/><text x="17.3659%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.01%)</title><rect x="17.1338%" y="853" width="0.0144%" height="15" fill="rgb(236,147,54)" fg:x="4768" fg:w="4"/><text x="17.3838%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="17.1338%" y="837" width="0.0144%" height="15" fill="rgb(205,143,26)" fg:x="4768" fg:w="4"/><text x="17.3838%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (34 samples, 0.12%)</title><rect x="17.0368%" y="997" width="0.1222%" height="15" fill="rgb(236,26,9)" fg:x="4741" fg:w="34"/><text x="17.2868%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34 samples, 0.12%)</title><rect x="17.0368%" y="981" width="0.1222%" height="15" fill="rgb(221,165,53)" fg:x="4741" fg:w="34"/><text x="17.2868%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (29 samples, 0.10%)</title><rect x="17.0548%" y="965" width="0.1042%" height="15" fill="rgb(214,110,17)" fg:x="4746" fg:w="29"/><text x="17.3048%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values_mut (4 samples, 0.01%)</title><rect x="17.1590%" y="997" width="0.0144%" height="15" fill="rgb(237,197,12)" fg:x="4775" fg:w="4"/><text x="17.4090%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter_mut (4 samples, 0.01%)</title><rect x="17.1590%" y="981" width="0.0144%" height="15" fill="rgb(205,84,17)" fg:x="4775" fg:w="4"/><text x="17.4090%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter_mut (4 samples, 0.01%)</title><rect x="17.1590%" y="965" width="0.0144%" height="15" fill="rgb(237,18,45)" fg:x="4775" fg:w="4"/><text x="17.4090%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (4 samples, 0.01%)</title><rect x="17.1590%" y="949" width="0.0144%" height="15" fill="rgb(221,87,14)" fg:x="4775" fg:w="4"/><text x="17.4090%" y="959.50"></text></g><g><title>&lt;zenoh_protocol_core::whatami::WhatAmI as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="17.1805%" y="981" width="0.0108%" height="15" fill="rgb(238,186,15)" fg:x="4781" fg:w="3"/><text x="17.4305%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.03%)</title><rect x="17.1913%" y="981" width="0.0287%" height="15" fill="rgb(208,115,11)" fg:x="4784" fg:w="8"/><text x="17.4413%" y="991.50"></text></g><g><title>zenoh::net::routing::queries::local_qabl_info::{{closure}} (7 samples, 0.03%)</title><rect x="17.1949%" y="965" width="0.0252%" height="15" fill="rgb(254,175,0)" fg:x="4785" fg:w="7"/><text x="17.4449%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="17.2093%" y="949" width="0.0108%" height="15" fill="rgb(227,24,42)" fg:x="4789" fg:w="3"/><text x="17.4593%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.01%)</title><rect x="17.2093%" y="933" width="0.0108%" height="15" fill="rgb(223,211,37)" fg:x="4789" fg:w="3"/><text x="17.4593%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.01%)</title><rect x="17.2093%" y="917" width="0.0108%" height="15" fill="rgb(235,49,27)" fg:x="4789" fg:w="3"/><text x="17.4593%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (3 samples, 0.01%)</title><rect x="17.2201%" y="981" width="0.0108%" height="15" fill="rgb(254,97,51)" fg:x="4792" fg:w="3"/><text x="17.4701%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (3 samples, 0.01%)</title><rect x="17.2201%" y="965" width="0.0108%" height="15" fill="rgb(249,51,40)" fg:x="4792" fg:w="3"/><text x="17.4701%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.01%)</title><rect x="17.2201%" y="949" width="0.0108%" height="15" fill="rgb(210,128,45)" fg:x="4792" fg:w="3"/><text x="17.4701%" y="959.50"></text></g><g><title>zenoh::net::routing::queries::local_qabl_info (19 samples, 0.07%)</title><rect x="17.1734%" y="997" width="0.0683%" height="15" fill="rgb(224,137,50)" fg:x="4779" fg:w="19"/><text x="17.4234%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (3 samples, 0.01%)</title><rect x="17.2308%" y="981" width="0.0108%" height="15" fill="rgb(242,15,9)" fg:x="4795" fg:w="3"/><text x="17.4808%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (3 samples, 0.01%)</title><rect x="17.2308%" y="965" width="0.0108%" height="15" fill="rgb(233,187,41)" fg:x="4795" fg:w="3"/><text x="17.4808%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (3 samples, 0.01%)</title><rect x="17.2308%" y="949" width="0.0108%" height="15" fill="rgb(227,2,29)" fg:x="4795" fg:w="3"/><text x="17.4808%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.01%)</title><rect x="17.2308%" y="933" width="0.0108%" height="15" fill="rgb(222,70,3)" fg:x="4795" fg:w="3"/><text x="17.4808%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="17.2308%" y="917" width="0.0108%" height="15" fill="rgb(213,11,42)" fg:x="4795" fg:w="3"/><text x="17.4808%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="17.2812%" y="981" width="0.0108%" height="15" fill="rgb(225,150,9)" fg:x="4809" fg:w="3"/><text x="17.5312%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::key_expr::KeyExpr&gt; (7 samples, 0.03%)</title><rect x="17.2991%" y="981" width="0.0252%" height="15" fill="rgb(230,162,45)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (7 samples, 0.03%)</title><rect x="17.2991%" y="965" width="0.0252%" height="15" fill="rgb(222,14,52)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.03%)</title><rect x="17.2991%" y="949" width="0.0252%" height="15" fill="rgb(254,198,14)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.03%)</title><rect x="17.2991%" y="933" width="0.0252%" height="15" fill="rgb(220,217,30)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.03%)</title><rect x="17.2991%" y="917" width="0.0252%" height="15" fill="rgb(215,146,41)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="17.2991%" y="901" width="0.0252%" height="15" fill="rgb(217,27,36)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.03%)</title><rect x="17.2991%" y="885" width="0.0252%" height="15" fill="rgb(219,218,39)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.03%)</title><rect x="17.2991%" y="869" width="0.0252%" height="15" fill="rgb(219,4,42)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="879.50"></text></g><g><title>cfree (7 samples, 0.03%)</title><rect x="17.2991%" y="853" width="0.0252%" height="15" fill="rgb(249,119,36)" fg:x="4814" fg:w="7"/><text x="17.5491%" y="863.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="17.3135%" y="837" width="0.0108%" height="15" fill="rgb(209,23,33)" fg:x="4818" fg:w="3"/><text x="17.5635%" y="847.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (3 samples, 0.01%)</title><rect x="17.3243%" y="965" width="0.0108%" height="15" fill="rgb(211,10,0)" fg:x="4821" fg:w="3"/><text x="17.5743%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.01%)</title><rect x="17.3243%" y="949" width="0.0108%" height="15" fill="rgb(208,99,37)" fg:x="4821" fg:w="3"/><text x="17.5743%" y="959.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (6 samples, 0.02%)</title><rect x="17.3243%" y="981" width="0.0216%" height="15" fill="rgb(213,132,31)" fg:x="4821" fg:w="6"/><text x="17.5743%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::decl_key::{{closure}} (3 samples, 0.01%)</title><rect x="17.3351%" y="965" width="0.0108%" height="15" fill="rgb(243,129,40)" fg:x="4824" fg:w="3"/><text x="17.5851%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (4 samples, 0.01%)</title><rect x="17.3458%" y="981" width="0.0144%" height="15" fill="rgb(210,66,33)" fg:x="4827" fg:w="4"/><text x="17.5958%" y="991.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="17.3926%" y="917" width="0.0108%" height="15" fill="rgb(209,189,4)" fg:x="4840" fg:w="3"/><text x="17.6426%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.01%)</title><rect x="17.5794%" y="869" width="0.0144%" height="15" fill="rgb(214,107,37)" fg:x="4892" fg:w="4"/><text x="17.8294%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (4 samples, 0.01%)</title><rect x="17.5794%" y="853" width="0.0144%" height="15" fill="rgb(245,88,54)" fg:x="4892" fg:w="4"/><text x="17.8294%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.01%)</title><rect x="17.5794%" y="837" width="0.0144%" height="15" fill="rgb(205,146,20)" fg:x="4892" fg:w="4"/><text x="17.8294%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.01%)</title><rect x="17.5794%" y="821" width="0.0144%" height="15" fill="rgb(220,161,25)" fg:x="4892" fg:w="4"/><text x="17.8294%" y="831.50"></text></g><g><title>hashbrown::raw::h2 (4 samples, 0.01%)</title><rect x="17.5938%" y="869" width="0.0144%" height="15" fill="rgb(215,152,15)" fg:x="4896" fg:w="4"/><text x="17.8438%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.02%)</title><rect x="17.6082%" y="869" width="0.0216%" height="15" fill="rgb(233,192,44)" fg:x="4900" fg:w="6"/><text x="17.8582%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.02%)</title><rect x="17.6082%" y="853" width="0.0216%" height="15" fill="rgb(240,170,46)" fg:x="4900" fg:w="6"/><text x="17.8582%" y="863.50"></text></g><g><title>zenoh::net::routing::face::FaceState::get_next_local_id (74 samples, 0.27%)</title><rect x="17.3674%" y="981" width="0.2659%" height="15" fill="rgb(207,104,33)" fg:x="4833" fg:w="74"/><text x="17.6174%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (73 samples, 0.26%)</title><rect x="17.3710%" y="965" width="0.2623%" height="15" fill="rgb(219,21,39)" fg:x="4834" fg:w="73"/><text x="17.6210%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (73 samples, 0.26%)</title><rect x="17.3710%" y="949" width="0.2623%" height="15" fill="rgb(214,133,29)" fg:x="4834" fg:w="73"/><text x="17.6210%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (73 samples, 0.26%)</title><rect x="17.3710%" y="933" width="0.2623%" height="15" fill="rgb(226,93,6)" fg:x="4834" fg:w="73"/><text x="17.6210%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (64 samples, 0.23%)</title><rect x="17.4033%" y="917" width="0.2300%" height="15" fill="rgb(252,222,34)" fg:x="4843" fg:w="64"/><text x="17.6533%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (64 samples, 0.23%)</title><rect x="17.4033%" y="901" width="0.2300%" height="15" fill="rgb(252,92,48)" fg:x="4843" fg:w="64"/><text x="17.6533%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (64 samples, 0.23%)</title><rect x="17.4033%" y="885" width="0.2300%" height="15" fill="rgb(245,223,24)" fg:x="4843" fg:w="64"/><text x="17.6533%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="17.6405%" y="965" width="0.0108%" height="15" fill="rgb(205,176,3)" fg:x="4909" fg:w="3"/><text x="17.8905%" y="975.50"></text></g><g><title>zenoh::net::routing::queries::propagate_simple_queryable (213 samples, 0.77%)</title><rect x="16.8895%" y="1013" width="0.7654%" height="15" fill="rgb(235,151,15)" fg:x="4700" fg:w="213"/><text x="17.1395%" y="1023.50"></text></g><g><title>zenoh::net::routing::resource::Resource::decl_key (115 samples, 0.41%)</title><rect x="17.2416%" y="997" width="0.4133%" height="15" fill="rgb(237,209,11)" fg:x="4798" fg:w="115"/><text x="17.4916%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::nonwild_prefix (6 samples, 0.02%)</title><rect x="17.6333%" y="981" width="0.0216%" height="15" fill="rgb(243,227,24)" fg:x="4907" fg:w="6"/><text x="17.8833%" y="991.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.01%)</title><rect x="17.6728%" y="965" width="0.0108%" height="15" fill="rgb(239,193,16)" fg:x="4918" fg:w="3"/><text x="17.9228%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="17.6728%" y="949" width="0.0108%" height="15" fill="rgb(231,27,9)" fg:x="4918" fg:w="3"/><text x="17.9228%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.7124%" y="725" width="0.0108%" height="15" fill="rgb(219,169,10)" fg:x="4929" fg:w="3"/><text x="17.9624%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.7124%" y="709" width="0.0108%" height="15" fill="rgb(244,229,43)" fg:x="4929" fg:w="3"/><text x="17.9624%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.7124%" y="693" width="0.0108%" height="15" fill="rgb(254,38,20)" fg:x="4929" fg:w="3"/><text x="17.9624%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.7124%" y="677" width="0.0108%" height="15" fill="rgb(250,47,30)" fg:x="4929" fg:w="3"/><text x="17.9624%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.7124%" y="661" width="0.0108%" height="15" fill="rgb(224,124,36)" fg:x="4929" fg:w="3"/><text x="17.9624%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.7124%" y="645" width="0.0108%" height="15" fill="rgb(246,68,51)" fg:x="4929" fg:w="3"/><text x="17.9624%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.7124%" y="629" width="0.0108%" height="15" fill="rgb(253,43,49)" fg:x="4929" fg:w="3"/><text x="17.9624%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.04%)</title><rect x="17.6872%" y="949" width="0.0395%" height="15" fill="rgb(219,54,36)" fg:x="4922" fg:w="11"/><text x="17.9372%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.04%)</title><rect x="17.6872%" y="933" width="0.0395%" height="15" fill="rgb(227,133,34)" fg:x="4922" fg:w="11"/><text x="17.9372%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (11 samples, 0.04%)</title><rect x="17.6872%" y="917" width="0.0395%" height="15" fill="rgb(247,227,15)" fg:x="4922" fg:w="11"/><text x="17.9372%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (9 samples, 0.03%)</title><rect x="17.6944%" y="901" width="0.0323%" height="15" fill="rgb(229,96,14)" fg:x="4924" fg:w="9"/><text x="17.9444%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (9 samples, 0.03%)</title><rect x="17.6944%" y="885" width="0.0323%" height="15" fill="rgb(220,79,17)" fg:x="4924" fg:w="9"/><text x="17.9444%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (9 samples, 0.03%)</title><rect x="17.6944%" y="869" width="0.0323%" height="15" fill="rgb(205,131,53)" fg:x="4924" fg:w="9"/><text x="17.9444%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (7 samples, 0.03%)</title><rect x="17.7016%" y="853" width="0.0252%" height="15" fill="rgb(209,50,29)" fg:x="4926" fg:w="7"/><text x="17.9516%" y="863.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.03%)</title><rect x="17.7016%" y="837" width="0.0252%" height="15" fill="rgb(245,86,46)" fg:x="4926" fg:w="7"/><text x="17.9516%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="17.7016%" y="821" width="0.0252%" height="15" fill="rgb(235,66,46)" fg:x="4926" fg:w="7"/><text x="17.9516%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="17.7016%" y="805" width="0.0252%" height="15" fill="rgb(232,148,31)" fg:x="4926" fg:w="7"/><text x="17.9516%" y="815.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="17.7016%" y="789" width="0.0252%" height="15" fill="rgb(217,149,8)" fg:x="4926" fg:w="7"/><text x="17.9516%" y="799.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="17.7052%" y="773" width="0.0216%" height="15" fill="rgb(209,183,11)" fg:x="4927" fg:w="6"/><text x="17.9552%" y="783.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="17.7052%" y="757" width="0.0216%" height="15" fill="rgb(208,55,20)" fg:x="4927" fg:w="6"/><text x="17.9552%" y="767.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="17.7124%" y="741" width="0.0144%" height="15" fill="rgb(218,39,14)" fg:x="4929" fg:w="4"/><text x="17.9624%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.01%)</title><rect x="17.7268%" y="949" width="0.0144%" height="15" fill="rgb(216,169,33)" fg:x="4933" fg:w="4"/><text x="17.9768%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.07%)</title><rect x="17.6728%" y="997" width="0.0719%" height="15" fill="rgb(233,80,24)" fg:x="4918" fg:w="20"/><text x="17.9228%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.07%)</title><rect x="17.6728%" y="981" width="0.0719%" height="15" fill="rgb(213,179,31)" fg:x="4918" fg:w="20"/><text x="17.9228%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (17 samples, 0.06%)</title><rect x="17.6836%" y="965" width="0.0611%" height="15" fill="rgb(209,19,5)" fg:x="4921" fg:w="17"/><text x="17.9336%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (6 samples, 0.02%)</title><rect x="17.7771%" y="821" width="0.0216%" height="15" fill="rgb(219,18,35)" fg:x="4947" fg:w="6"/><text x="18.0271%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (6 samples, 0.02%)</title><rect x="17.7771%" y="805" width="0.0216%" height="15" fill="rgb(209,169,16)" fg:x="4947" fg:w="6"/><text x="18.0271%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (6 samples, 0.02%)</title><rect x="17.7771%" y="789" width="0.0216%" height="15" fill="rgb(245,90,51)" fg:x="4947" fg:w="6"/><text x="18.0271%" y="799.50"></text></g><g><title>alloc::str::join_generic_copy (6 samples, 0.02%)</title><rect x="17.7771%" y="773" width="0.0216%" height="15" fill="rgb(220,99,45)" fg:x="4947" fg:w="6"/><text x="18.0271%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="17.7807%" y="757" width="0.0180%" height="15" fill="rgb(249,89,25)" fg:x="4948" fg:w="5"/><text x="18.0307%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="17.7807%" y="741" width="0.0180%" height="15" fill="rgb(239,193,0)" fg:x="4948" fg:w="5"/><text x="18.0307%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="17.7807%" y="725" width="0.0180%" height="15" fill="rgb(231,126,1)" fg:x="4948" fg:w="5"/><text x="18.0307%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="17.7807%" y="709" width="0.0180%" height="15" fill="rgb(243,166,3)" fg:x="4948" fg:w="5"/><text x="18.0307%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="17.7807%" y="693" width="0.0180%" height="15" fill="rgb(223,22,34)" fg:x="4948" fg:w="5"/><text x="18.0307%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="17.7807%" y="677" width="0.0180%" height="15" fill="rgb(251,52,51)" fg:x="4948" fg:w="5"/><text x="18.0307%" y="687.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="17.7807%" y="661" width="0.0180%" height="15" fill="rgb(221,165,28)" fg:x="4948" fg:w="5"/><text x="18.0307%" y="671.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="17.7842%" y="645" width="0.0144%" height="15" fill="rgb(218,121,47)" fg:x="4949" fg:w="4"/><text x="18.0342%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (14 samples, 0.05%)</title><rect x="17.7519%" y="885" width="0.0503%" height="15" fill="rgb(209,120,9)" fg:x="4940" fg:w="14"/><text x="18.0019%" y="895.50"></text></g><g><title>&lt;zenoh::net::routing::resource::Resource as core::hash::Hash&gt;::hash (14 samples, 0.05%)</title><rect x="17.7519%" y="869" width="0.0503%" height="15" fill="rgb(236,68,12)" fg:x="4940" fg:w="14"/><text x="18.0019%" y="879.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (11 samples, 0.04%)</title><rect x="17.7627%" y="853" width="0.0395%" height="15" fill="rgb(225,194,26)" fg:x="4943" fg:w="11"/><text x="18.0127%" y="863.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (9 samples, 0.03%)</title><rect x="17.7699%" y="837" width="0.0323%" height="15" fill="rgb(231,84,39)" fg:x="4945" fg:w="9"/><text x="18.0199%" y="847.50"></text></g><g><title>hashbrown::map::make_insert_hash (17 samples, 0.06%)</title><rect x="17.7447%" y="949" width="0.0611%" height="15" fill="rgb(210,11,45)" fg:x="4938" fg:w="17"/><text x="17.9947%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.06%)</title><rect x="17.7447%" y="933" width="0.0611%" height="15" fill="rgb(224,54,52)" fg:x="4938" fg:w="17"/><text x="17.9947%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.05%)</title><rect x="17.7519%" y="917" width="0.0539%" height="15" fill="rgb(238,102,14)" fg:x="4940" fg:w="15"/><text x="18.0019%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (15 samples, 0.05%)</title><rect x="17.7519%" y="901" width="0.0539%" height="15" fill="rgb(243,160,52)" fg:x="4940" fg:w="15"/><text x="18.0019%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.04%)</title><rect x="17.8058%" y="949" width="0.0395%" height="15" fill="rgb(216,114,19)" fg:x="4955" fg:w="11"/><text x="18.0558%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.04%)</title><rect x="17.8058%" y="933" width="0.0395%" height="15" fill="rgb(244,166,37)" fg:x="4955" fg:w="11"/><text x="18.0558%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (11 samples, 0.04%)</title><rect x="17.8058%" y="917" width="0.0395%" height="15" fill="rgb(246,29,44)" fg:x="4955" fg:w="11"/><text x="18.0558%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.03%)</title><rect x="17.8202%" y="901" width="0.0252%" height="15" fill="rgb(215,56,53)" fg:x="4959" fg:w="7"/><text x="18.0702%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.03%)</title><rect x="17.8202%" y="885" width="0.0252%" height="15" fill="rgb(217,60,2)" fg:x="4959" fg:w="7"/><text x="18.0702%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.03%)</title><rect x="17.8202%" y="869" width="0.0252%" height="15" fill="rgb(207,26,24)" fg:x="4959" fg:w="7"/><text x="18.0702%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="17.8633%" y="869" width="0.0144%" height="15" fill="rgb(252,210,15)" fg:x="4971" fg:w="4"/><text x="18.1133%" y="879.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="17.8633%" y="853" width="0.0144%" height="15" fill="rgb(253,209,26)" fg:x="4971" fg:w="4"/><text x="18.1133%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (4 samples, 0.01%)</title><rect x="17.8633%" y="837" width="0.0144%" height="15" fill="rgb(238,170,14)" fg:x="4971" fg:w="4"/><text x="18.1133%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 0.01%)</title><rect x="17.8633%" y="821" width="0.0144%" height="15" fill="rgb(216,178,15)" fg:x="4971" fg:w="4"/><text x="18.1133%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="17.8633%" y="805" width="0.0144%" height="15" fill="rgb(250,197,2)" fg:x="4971" fg:w="4"/><text x="18.1133%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="17.8633%" y="789" width="0.0144%" height="15" fill="rgb(212,70,42)" fg:x="4971" fg:w="4"/><text x="18.1133%" y="799.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="17.8633%" y="773" width="0.0144%" height="15" fill="rgb(227,213,9)" fg:x="4971" fg:w="4"/><text x="18.1133%" y="783.50"></text></g><g><title>__lll_lock_wake_private (3 samples, 0.01%)</title><rect x="17.8669%" y="757" width="0.0108%" height="15" fill="rgb(245,99,25)" fg:x="4972" fg:w="3"/><text x="18.1169%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.8669%" y="741" width="0.0108%" height="15" fill="rgb(250,82,29)" fg:x="4972" fg:w="3"/><text x="18.1169%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="17.8669%" y="725" width="0.0108%" height="15" fill="rgb(241,226,54)" fg:x="4972" fg:w="3"/><text x="18.1169%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="17.8777%" y="805" width="0.0108%" height="15" fill="rgb(221,99,41)" fg:x="4975" fg:w="3"/><text x="18.1277%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="17.8777%" y="789" width="0.0108%" height="15" fill="rgb(213,90,21)" fg:x="4975" fg:w="3"/><text x="18.1277%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="17.8777%" y="773" width="0.0108%" height="15" fill="rgb(205,208,24)" fg:x="4975" fg:w="3"/><text x="18.1277%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="17.8885%" y="757" width="0.0144%" height="15" fill="rgb(246,31,12)" fg:x="4978" fg:w="4"/><text x="18.1385%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.01%)</title><rect x="17.9028%" y="741" width="0.0108%" height="15" fill="rgb(213,154,6)" fg:x="4982" fg:w="3"/><text x="18.1528%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.02%)</title><rect x="17.9136%" y="741" width="0.0216%" height="15" fill="rgb(222,163,29)" fg:x="4985" fg:w="6"/><text x="18.1636%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="17.9136%" y="725" width="0.0216%" height="15" fill="rgb(227,201,8)" fg:x="4985" fg:w="6"/><text x="18.1636%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="17.9136%" y="709" width="0.0216%" height="15" fill="rgb(233,9,32)" fg:x="4985" fg:w="6"/><text x="18.1636%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="17.9136%" y="693" width="0.0216%" height="15" fill="rgb(217,54,24)" fg:x="4985" fg:w="6"/><text x="18.1636%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="17.9172%" y="677" width="0.0180%" height="15" fill="rgb(235,192,0)" fg:x="4986" fg:w="5"/><text x="18.1672%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="17.9172%" y="661" width="0.0180%" height="15" fill="rgb(235,45,9)" fg:x="4986" fg:w="5"/><text x="18.1672%" y="671.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="17.9172%" y="645" width="0.0180%" height="15" fill="rgb(246,42,40)" fg:x="4986" fg:w="5"/><text x="18.1672%" y="655.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="17.9208%" y="629" width="0.0144%" height="15" fill="rgb(248,111,24)" fg:x="4987" fg:w="4"/><text x="18.1708%" y="639.50"></text></g><g><title>alloc::str::join_generic_copy (14 samples, 0.05%)</title><rect x="17.9639%" y="677" width="0.0503%" height="15" fill="rgb(249,65,22)" fg:x="4999" fg:w="14"/><text x="18.2139%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.02%)</title><rect x="17.9927%" y="661" width="0.0216%" height="15" fill="rgb(238,111,51)" fg:x="5007" fg:w="6"/><text x="18.2427%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="17.9927%" y="645" width="0.0216%" height="15" fill="rgb(250,118,22)" fg:x="5007" fg:w="6"/><text x="18.2427%" y="655.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="17.9927%" y="629" width="0.0216%" height="15" fill="rgb(234,84,26)" fg:x="5007" fg:w="6"/><text x="18.2427%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (17 samples, 0.06%)</title><rect x="17.9603%" y="725" width="0.0611%" height="15" fill="rgb(243,172,12)" fg:x="4998" fg:w="17"/><text x="18.2103%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (17 samples, 0.06%)</title><rect x="17.9603%" y="709" width="0.0611%" height="15" fill="rgb(236,150,49)" fg:x="4998" fg:w="17"/><text x="18.2103%" y="719.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (16 samples, 0.06%)</title><rect x="17.9639%" y="693" width="0.0575%" height="15" fill="rgb(225,197,26)" fg:x="4999" fg:w="16"/><text x="18.2139%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.01%)</title><rect x="18.0214%" y="725" width="0.0144%" height="15" fill="rgb(214,17,42)" fg:x="5015" fg:w="4"/><text x="18.2714%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="18.0214%" y="709" width="0.0144%" height="15" fill="rgb(224,165,40)" fg:x="5015" fg:w="4"/><text x="18.2714%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="18.0214%" y="693" width="0.0144%" height="15" fill="rgb(246,100,4)" fg:x="5015" fg:w="4"/><text x="18.2714%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="18.0214%" y="677" width="0.0144%" height="15" fill="rgb(222,103,0)" fg:x="5015" fg:w="4"/><text x="18.2714%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="18.0214%" y="661" width="0.0144%" height="15" fill="rgb(227,189,26)" fg:x="5015" fg:w="4"/><text x="18.2714%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="18.0214%" y="645" width="0.0144%" height="15" fill="rgb(214,202,17)" fg:x="5015" fg:w="4"/><text x="18.2714%" y="655.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="18.0250%" y="629" width="0.0108%" height="15" fill="rgb(229,111,3)" fg:x="5016" fg:w="3"/><text x="18.2750%" y="639.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="18.0250%" y="613" width="0.0108%" height="15" fill="rgb(229,172,15)" fg:x="5016" fg:w="3"/><text x="18.2750%" y="623.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (56 samples, 0.20%)</title><rect x="17.8777%" y="853" width="0.2012%" height="15" fill="rgb(230,224,35)" fg:x="4975" fg:w="56"/><text x="18.1277%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (56 samples, 0.20%)</title><rect x="17.8777%" y="837" width="0.2012%" height="15" fill="rgb(251,141,6)" fg:x="4975" fg:w="56"/><text x="18.1277%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (56 samples, 0.20%)</title><rect x="17.8777%" y="821" width="0.2012%" height="15" fill="rgb(225,208,6)" fg:x="4975" fg:w="56"/><text x="18.1277%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (53 samples, 0.19%)</title><rect x="17.8885%" y="805" width="0.1905%" height="15" fill="rgb(246,181,16)" fg:x="4978" fg:w="53"/><text x="18.1385%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (53 samples, 0.19%)</title><rect x="17.8885%" y="789" width="0.1905%" height="15" fill="rgb(227,129,36)" fg:x="4978" fg:w="53"/><text x="18.1385%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (53 samples, 0.19%)</title><rect x="17.8885%" y="773" width="0.1905%" height="15" fill="rgb(248,117,24)" fg:x="4978" fg:w="53"/><text x="18.1385%" y="783.50"></text></g><g><title>&lt;zenoh::net::routing::resource::Resource as core::hash::Hash&gt;::hash (49 samples, 0.18%)</title><rect x="17.9028%" y="757" width="0.1761%" height="15" fill="rgb(214,185,35)" fg:x="4982" fg:w="49"/><text x="18.1528%" y="767.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (40 samples, 0.14%)</title><rect x="17.9352%" y="741" width="0.1437%" height="15" fill="rgb(236,150,34)" fg:x="4991" fg:w="40"/><text x="18.1852%" y="751.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (12 samples, 0.04%)</title><rect x="18.0358%" y="725" width="0.0431%" height="15" fill="rgb(243,228,27)" fg:x="5019" fg:w="12"/><text x="18.2858%" y="735.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (5 samples, 0.02%)</title><rect x="18.0609%" y="709" width="0.0180%" height="15" fill="rgb(245,77,44)" fg:x="5026" fg:w="5"/><text x="18.3109%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (57 samples, 0.20%)</title><rect x="17.8777%" y="869" width="0.2048%" height="15" fill="rgb(235,214,42)" fg:x="4975" fg:w="57"/><text x="18.1277%" y="879.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="18.0933%" y="741" width="0.0144%" height="15" fill="rgb(221,74,3)" fg:x="5035" fg:w="4"/><text x="18.3433%" y="751.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="18.0933%" y="725" width="0.0144%" height="15" fill="rgb(206,121,29)" fg:x="5035" fg:w="4"/><text x="18.3433%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="18.0933%" y="709" width="0.0144%" height="15" fill="rgb(249,131,53)" fg:x="5035" fg:w="4"/><text x="18.3433%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="18.0933%" y="693" width="0.0144%" height="15" fill="rgb(236,170,29)" fg:x="5035" fg:w="4"/><text x="18.3433%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="18.0933%" y="677" width="0.0144%" height="15" fill="rgb(247,96,15)" fg:x="5035" fg:w="4"/><text x="18.3433%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="18.0933%" y="661" width="0.0144%" height="15" fill="rgb(211,210,7)" fg:x="5035" fg:w="4"/><text x="18.3433%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="18.0969%" y="645" width="0.0108%" height="15" fill="rgb(240,88,50)" fg:x="5036" fg:w="3"/><text x="18.3469%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="18.0969%" y="629" width="0.0108%" height="15" fill="rgb(209,229,26)" fg:x="5036" fg:w="3"/><text x="18.3469%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (75 samples, 0.27%)</title><rect x="17.8453%" y="933" width="0.2695%" height="15" fill="rgb(210,68,23)" fg:x="4966" fg:w="75"/><text x="18.0953%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (75 samples, 0.27%)</title><rect x="17.8453%" y="917" width="0.2695%" height="15" fill="rgb(229,180,13)" fg:x="4966" fg:w="75"/><text x="18.0953%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (75 samples, 0.27%)</title><rect x="17.8453%" y="901" width="0.2695%" height="15" fill="rgb(236,53,44)" fg:x="4966" fg:w="75"/><text x="18.0953%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (75 samples, 0.27%)</title><rect x="17.8453%" y="885" width="0.2695%" height="15" fill="rgb(244,214,29)" fg:x="4966" fg:w="75"/><text x="18.0953%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (7 samples, 0.03%)</title><rect x="18.0897%" y="869" width="0.0252%" height="15" fill="rgb(220,75,29)" fg:x="5034" fg:w="7"/><text x="18.3397%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (7 samples, 0.03%)</title><rect x="18.0897%" y="853" width="0.0252%" height="15" fill="rgb(214,183,37)" fg:x="5034" fg:w="7"/><text x="18.3397%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (7 samples, 0.03%)</title><rect x="18.0897%" y="837" width="0.0252%" height="15" fill="rgb(239,117,29)" fg:x="5034" fg:w="7"/><text x="18.3397%" y="847.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.03%)</title><rect x="18.0897%" y="821" width="0.0252%" height="15" fill="rgb(237,171,35)" fg:x="5034" fg:w="7"/><text x="18.3397%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="18.0897%" y="805" width="0.0252%" height="15" fill="rgb(229,178,53)" fg:x="5034" fg:w="7"/><text x="18.3397%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="18.0897%" y="789" width="0.0252%" height="15" fill="rgb(210,102,19)" fg:x="5034" fg:w="7"/><text x="18.3397%" y="799.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="18.0897%" y="773" width="0.0252%" height="15" fill="rgb(235,127,22)" fg:x="5034" fg:w="7"/><text x="18.3397%" y="783.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="18.0933%" y="757" width="0.0216%" height="15" fill="rgb(244,31,31)" fg:x="5035" fg:w="6"/><text x="18.3433%" y="767.50"></text></g><g><title>zenoh::net::routing::queries::register_client_queryable (134 samples, 0.48%)</title><rect x="17.6549%" y="1013" width="0.4815%" height="15" fill="rgb(231,43,21)" fg:x="4913" fg:w="134"/><text x="17.9049%" y="1023.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (109 samples, 0.39%)</title><rect x="17.7447%" y="997" width="0.3917%" height="15" fill="rgb(217,131,35)" fg:x="4938" fg:w="109"/><text x="17.9947%" y="1007.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (109 samples, 0.39%)</title><rect x="17.7447%" y="981" width="0.3917%" height="15" fill="rgb(221,149,4)" fg:x="4938" fg:w="109"/><text x="17.9947%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (109 samples, 0.39%)</title><rect x="17.7447%" y="965" width="0.3917%" height="15" fill="rgb(232,170,28)" fg:x="4938" fg:w="109"/><text x="17.9947%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (81 samples, 0.29%)</title><rect x="17.8453%" y="949" width="0.2911%" height="15" fill="rgb(238,56,10)" fg:x="4966" fg:w="81"/><text x="18.0953%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (5 samples, 0.02%)</title><rect x="18.1184%" y="933" width="0.0180%" height="15" fill="rgb(235,196,14)" fg:x="5042" fg:w="5"/><text x="18.3684%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (3 samples, 0.01%)</title><rect x="18.1256%" y="917" width="0.0108%" height="15" fill="rgb(216,45,48)" fg:x="5044" fg:w="3"/><text x="18.3756%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.01%)</title><rect x="18.1508%" y="981" width="0.0144%" height="15" fill="rgb(238,213,17)" fg:x="5051" fg:w="4"/><text x="18.4008%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="18.1508%" y="965" width="0.0144%" height="15" fill="rgb(212,13,2)" fg:x="5051" fg:w="4"/><text x="18.4008%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="18.1508%" y="949" width="0.0144%" height="15" fill="rgb(240,114,20)" fg:x="5051" fg:w="4"/><text x="18.4008%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="18.1508%" y="933" width="0.0144%" height="15" fill="rgb(228,41,40)" fg:x="5051" fg:w="4"/><text x="18.4008%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="18.1508%" y="917" width="0.0144%" height="15" fill="rgb(244,132,35)" fg:x="5051" fg:w="4"/><text x="18.4008%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="18.1508%" y="901" width="0.0144%" height="15" fill="rgb(253,189,4)" fg:x="5051" fg:w="4"/><text x="18.4008%" y="911.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="18.1544%" y="885" width="0.0108%" height="15" fill="rgb(224,37,19)" fg:x="5052" fg:w="3"/><text x="18.4044%" y="895.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (9 samples, 0.03%)</title><rect x="18.1472%" y="997" width="0.0323%" height="15" fill="rgb(235,223,18)" fg:x="5050" fg:w="9"/><text x="18.3972%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (4 samples, 0.01%)</title><rect x="18.1652%" y="981" width="0.0144%" height="15" fill="rgb(235,163,25)" fg:x="5055" fg:w="4"/><text x="18.4152%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.01%)</title><rect x="18.1903%" y="965" width="0.0108%" height="15" fill="rgb(217,145,28)" fg:x="5062" fg:w="3"/><text x="18.4403%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::eq (3 samples, 0.01%)</title><rect x="18.2262%" y="949" width="0.0108%" height="15" fill="rgb(223,223,32)" fg:x="5072" fg:w="3"/><text x="18.4762%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.01%)</title><rect x="18.2262%" y="933" width="0.0108%" height="15" fill="rgb(227,189,39)" fg:x="5072" fg:w="3"/><text x="18.4762%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.01%)</title><rect x="18.2262%" y="917" width="0.0108%" height="15" fill="rgb(248,10,22)" fg:x="5072" fg:w="3"/><text x="18.4762%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.01%)</title><rect x="18.2262%" y="901" width="0.0108%" height="15" fill="rgb(248,46,39)" fg:x="5072" fg:w="3"/><text x="18.4762%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.01%)</title><rect x="18.2262%" y="885" width="0.0108%" height="15" fill="rgb(248,113,48)" fg:x="5072" fg:w="3"/><text x="18.4762%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.01%)</title><rect x="18.2406%" y="869" width="0.0108%" height="15" fill="rgb(245,16,25)" fg:x="5076" fg:w="3"/><text x="18.4906%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="18.2370%" y="949" width="0.0180%" height="15" fill="rgb(249,152,16)" fg:x="5075" fg:w="5"/><text x="18.4870%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="18.2370%" y="933" width="0.0180%" height="15" fill="rgb(250,16,1)" fg:x="5075" fg:w="5"/><text x="18.4870%" y="943.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="18.2370%" y="917" width="0.0180%" height="15" fill="rgb(249,138,3)" fg:x="5075" fg:w="5"/><text x="18.4870%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="18.2370%" y="901" width="0.0180%" height="15" fill="rgb(227,71,41)" fg:x="5075" fg:w="5"/><text x="18.4870%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="18.2370%" y="885" width="0.0180%" height="15" fill="rgb(209,184,23)" fg:x="5075" fg:w="5"/><text x="18.4870%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="18.2586%" y="917" width="0.0323%" height="15" fill="rgb(223,215,31)" fg:x="5081" fg:w="9"/><text x="18.5086%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="18.2586%" y="901" width="0.0323%" height="15" fill="rgb(210,146,28)" fg:x="5081" fg:w="9"/><text x="18.5086%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="18.2694%" y="885" width="0.0216%" height="15" fill="rgb(209,183,41)" fg:x="5084" fg:w="6"/><text x="18.5194%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="18.2694%" y="869" width="0.0216%" height="15" fill="rgb(209,224,45)" fg:x="5084" fg:w="6"/><text x="18.5194%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="18.2694%" y="853" width="0.0216%" height="15" fill="rgb(224,209,51)" fg:x="5084" fg:w="6"/><text x="18.5194%" y="863.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="18.2730%" y="837" width="0.0180%" height="15" fill="rgb(223,17,39)" fg:x="5085" fg:w="5"/><text x="18.5230%" y="847.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="18.2730%" y="821" width="0.0180%" height="15" fill="rgb(234,204,37)" fg:x="5085" fg:w="5"/><text x="18.5230%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.06%)</title><rect x="18.2550%" y="933" width="0.0611%" height="15" fill="rgb(236,120,5)" fg:x="5080" fg:w="17"/><text x="18.5050%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.03%)</title><rect x="18.2909%" y="917" width="0.0252%" height="15" fill="rgb(248,97,27)" fg:x="5090" fg:w="7"/><text x="18.5409%" y="927.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="18.2981%" y="901" width="0.0180%" height="15" fill="rgb(240,66,17)" fg:x="5092" fg:w="5"/><text x="18.5481%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (18 samples, 0.06%)</title><rect x="18.2550%" y="949" width="0.0647%" height="15" fill="rgb(210,79,3)" fg:x="5080" fg:w="18"/><text x="18.5050%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.01%)</title><rect x="18.3197%" y="949" width="0.0108%" height="15" fill="rgb(214,176,27)" fg:x="5098" fg:w="3"/><text x="18.5697%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (3 samples, 0.01%)</title><rect x="18.3197%" y="933" width="0.0108%" height="15" fill="rgb(235,185,3)" fg:x="5098" fg:w="3"/><text x="18.5697%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.01%)</title><rect x="18.3197%" y="917" width="0.0108%" height="15" fill="rgb(227,24,12)" fg:x="5098" fg:w="3"/><text x="18.5697%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.01%)</title><rect x="18.3197%" y="901" width="0.0108%" height="15" fill="rgb(252,169,48)" fg:x="5098" fg:w="3"/><text x="18.5697%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.01%)</title><rect x="18.3197%" y="885" width="0.0108%" height="15" fill="rgb(212,65,1)" fg:x="5098" fg:w="3"/><text x="18.5697%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Weak&lt;zenoh::net::routing::resource::Resource&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="18.3341%" y="949" width="0.0144%" height="15" fill="rgb(242,39,24)" fg:x="5102" fg:w="4"/><text x="18.5841%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Weak&lt;zenoh::net::routing::resource::Resource&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="18.3341%" y="933" width="0.0144%" height="15" fill="rgb(249,32,23)" fg:x="5102" fg:w="4"/><text x="18.5841%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="18.3341%" y="917" width="0.0144%" height="15" fill="rgb(251,195,23)" fg:x="5102" fg:w="4"/><text x="18.5841%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="18.3341%" y="901" width="0.0144%" height="15" fill="rgb(236,174,8)" fg:x="5102" fg:w="4"/><text x="18.5841%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="18.3844%" y="933" width="0.0108%" height="15" fill="rgb(220,197,8)" fg:x="5116" fg:w="3"/><text x="18.6344%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (24 samples, 0.09%)</title><rect x="18.3987%" y="933" width="0.0862%" height="15" fill="rgb(240,108,37)" fg:x="5120" fg:w="24"/><text x="18.6487%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (24 samples, 0.09%)</title><rect x="18.3987%" y="917" width="0.0862%" height="15" fill="rgb(232,176,24)" fg:x="5120" fg:w="24"/><text x="18.6487%" y="927.50"></text></g><g><title>zenoh::net::routing::resource::Resource::fst_chunk (15 samples, 0.05%)</title><rect x="18.4886%" y="933" width="0.0539%" height="15" fill="rgb(243,35,29)" fg:x="5145" fg:w="15"/><text x="18.7386%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_prefix (4 samples, 0.01%)</title><rect x="18.5281%" y="917" width="0.0144%" height="15" fill="rgb(210,37,18)" fg:x="5156" fg:w="4"/><text x="18.7781%" y="927.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::strip_prefix_of (4 samples, 0.01%)</title><rect x="18.5281%" y="901" width="0.0144%" height="15" fill="rgb(224,184,40)" fg:x="5156" fg:w="4"/><text x="18.7781%" y="911.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_prefix_of (4 samples, 0.01%)</title><rect x="18.5281%" y="885" width="0.0144%" height="15" fill="rgb(236,39,29)" fg:x="5156" fg:w="4"/><text x="18.7781%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.06%)</title><rect x="18.5568%" y="917" width="0.0611%" height="15" fill="rgb(232,48,39)" fg:x="5164" fg:w="17"/><text x="18.8068%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.06%)</title><rect x="18.5568%" y="901" width="0.0611%" height="15" fill="rgb(236,34,42)" fg:x="5164" fg:w="17"/><text x="18.8068%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 0.06%)</title><rect x="18.5568%" y="885" width="0.0611%" height="15" fill="rgb(243,106,37)" fg:x="5164" fg:w="17"/><text x="18.8068%" y="895.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="18.5784%" y="869" width="0.0395%" height="15" fill="rgb(218,96,6)" fg:x="5170" fg:w="11"/><text x="18.8284%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (6 samples, 0.02%)</title><rect x="18.6359%" y="869" width="0.0216%" height="15" fill="rgb(235,130,12)" fg:x="5186" fg:w="6"/><text x="18.8859%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (12 samples, 0.04%)</title><rect x="18.6179%" y="917" width="0.0431%" height="15" fill="rgb(231,95,0)" fg:x="5181" fg:w="12"/><text x="18.8679%" y="927.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (12 samples, 0.04%)</title><rect x="18.6179%" y="901" width="0.0431%" height="15" fill="rgb(228,12,23)" fg:x="5181" fg:w="12"/><text x="18.8679%" y="911.50"></text></g><g><title>core::slice::memchr::memchr (10 samples, 0.04%)</title><rect x="18.6251%" y="885" width="0.0359%" height="15" fill="rgb(216,12,1)" fg:x="5183" fg:w="10"/><text x="18.8751%" y="895.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (108 samples, 0.39%)</title><rect x="18.3556%" y="949" width="0.3881%" height="15" fill="rgb(219,59,3)" fg:x="5108" fg:w="108"/><text x="18.6056%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::intersect (56 samples, 0.20%)</title><rect x="18.5425%" y="933" width="0.2012%" height="15" fill="rgb(215,208,46)" fg:x="5160" fg:w="56"/><text x="18.7925%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (23 samples, 0.08%)</title><rect x="18.6611%" y="917" width="0.0827%" height="15" fill="rgb(254,224,29)" fg:x="5193" fg:w="23"/><text x="18.9111%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.07%)</title><rect x="18.6718%" y="901" width="0.0719%" height="15" fill="rgb(232,14,29)" fg:x="5196" fg:w="20"/><text x="18.9218%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (20 samples, 0.07%)</title><rect x="18.6718%" y="885" width="0.0719%" height="15" fill="rgb(208,45,52)" fg:x="5196" fg:w="20"/><text x="18.9218%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (20 samples, 0.07%)</title><rect x="18.6718%" y="869" width="0.0719%" height="15" fill="rgb(234,191,28)" fg:x="5196" fg:w="20"/><text x="18.9218%" y="879.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches (158 samples, 0.57%)</title><rect x="18.1795%" y="997" width="0.5678%" height="15" fill="rgb(244,67,43)" fg:x="5059" fg:w="158"/><text x="18.4295%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (158 samples, 0.57%)</title><rect x="18.1795%" y="981" width="0.5678%" height="15" fill="rgb(236,189,24)" fg:x="5059" fg:w="158"/><text x="18.4295%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (152 samples, 0.55%)</title><rect x="18.2011%" y="965" width="0.5462%" height="15" fill="rgb(239,214,33)" fg:x="5065" fg:w="152"/><text x="18.4511%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (173 samples, 0.62%)</title><rect x="18.1364%" y="1013" width="0.6217%" height="15" fill="rgb(226,176,41)" fg:x="5047" fg:w="173"/><text x="18.3864%" y="1023.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource::matches_contain (3 samples, 0.01%)</title><rect x="18.7473%" y="997" width="0.0108%" height="15" fill="rgb(248,47,8)" fg:x="5217" fg:w="3"/><text x="18.9973%" y="1007.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (639 samples, 2.30%)</title><rect x="16.4726%" y="1045" width="2.2962%" height="15" fill="rgb(218,81,44)" fg:x="4584" fg:w="639"/><text x="16.7226%" y="1055.50">&lt;..</text></g><g><title>zenoh::net::routing::queries::declare_client_queryable (622 samples, 2.24%)</title><rect x="16.5337%" y="1029" width="2.2352%" height="15" fill="rgb(213,98,6)" fg:x="4601" fg:w="622"/><text x="16.7837%" y="1039.50">z..</text></g><g><title>zenoh::net::routing::router::Tables::get_mapping (3 samples, 0.01%)</title><rect x="18.7581%" y="1013" width="0.0108%" height="15" fill="rgb(222,85,22)" fg:x="5220" fg:w="3"/><text x="19.0081%" y="1023.50"></text></g><g><title>zenoh::net::routing::face::FaceState::get_mapping (3 samples, 0.01%)</title><rect x="18.7581%" y="997" width="0.0108%" height="15" fill="rgb(239,46,39)" fg:x="5220" fg:w="3"/><text x="19.0081%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="18.7581%" y="981" width="0.0108%" height="15" fill="rgb(237,12,29)" fg:x="5220" fg:w="3"/><text x="19.0081%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.01%)</title><rect x="18.7581%" y="965" width="0.0108%" height="15" fill="rgb(214,77,8)" fg:x="5220" fg:w="3"/><text x="19.0081%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.01%)</title><rect x="18.7581%" y="949" width="0.0108%" height="15" fill="rgb(217,168,37)" fg:x="5220" fg:w="3"/><text x="19.0081%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="18.7581%" y="933" width="0.0108%" height="15" fill="rgb(221,217,23)" fg:x="5220" fg:w="3"/><text x="19.0081%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="18.7581%" y="917" width="0.0108%" height="15" fill="rgb(243,229,36)" fg:x="5220" fg:w="3"/><text x="19.0081%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;zenoh::net::routing::router::Tables&gt;&gt; (4 samples, 0.01%)</title><rect x="18.7976%" y="1029" width="0.0144%" height="15" fill="rgb(251,163,40)" fg:x="5231" fg:w="4"/><text x="19.0476%" y="1039.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="18.7976%" y="1013" width="0.0144%" height="15" fill="rgb(237,222,12)" fg:x="5231" fg:w="4"/><text x="19.0476%" y="1023.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (4 samples, 0.01%)</title><rect x="18.7976%" y="997" width="0.0144%" height="15" fill="rgb(248,132,6)" fg:x="5231" fg:w="4"/><text x="19.0476%" y="1007.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (4 samples, 0.01%)</title><rect x="18.7976%" y="981" width="0.0144%" height="15" fill="rgb(227,167,50)" fg:x="5231" fg:w="4"/><text x="19.0476%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::has_readers_waiting (3 samples, 0.01%)</title><rect x="18.8012%" y="965" width="0.0108%" height="15" fill="rgb(242,84,37)" fg:x="5232" fg:w="3"/><text x="19.0512%" y="975.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::try_write (3 samples, 0.01%)</title><rect x="18.8120%" y="1029" width="0.0108%" height="15" fill="rgb(212,4,50)" fg:x="5235" fg:w="3"/><text x="19.0620%" y="1039.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::try_write (3 samples, 0.01%)</title><rect x="18.8120%" y="1013" width="0.0108%" height="15" fill="rgb(230,228,32)" fg:x="5235" fg:w="3"/><text x="19.0620%" y="1023.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::try_write (3 samples, 0.01%)</title><rect x="18.8120%" y="997" width="0.0108%" height="15" fill="rgb(248,217,23)" fg:x="5235" fg:w="3"/><text x="19.0620%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_update (3 samples, 0.01%)</title><rect x="18.8120%" y="981" width="0.0108%" height="15" fill="rgb(238,197,32)" fg:x="5235" fg:w="3"/><text x="19.0620%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="18.8300%" y="1013" width="0.0108%" height="15" fill="rgb(236,106,1)" fg:x="5240" fg:w="3"/><text x="19.0800%" y="1023.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (9 samples, 0.03%)</title><rect x="18.8407%" y="1013" width="0.0323%" height="15" fill="rgb(219,228,13)" fg:x="5243" fg:w="9"/><text x="19.0907%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="18.8407%" y="997" width="0.0323%" height="15" fill="rgb(238,30,35)" fg:x="5243" fg:w="9"/><text x="19.0907%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zenoh::net::routing::resource::Resource&gt;&gt; (5 samples, 0.02%)</title><rect x="18.8731%" y="1013" width="0.0180%" height="15" fill="rgb(236,70,23)" fg:x="5252" fg:w="5"/><text x="19.1231%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="18.8731%" y="997" width="0.0180%" height="15" fill="rgb(249,104,48)" fg:x="5252" fg:w="5"/><text x="19.1231%" y="1007.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="18.8946%" y="965" width="0.0144%" height="15" fill="rgb(254,117,50)" fg:x="5258" fg:w="4"/><text x="19.1446%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="18.8946%" y="981" width="0.0431%" height="15" fill="rgb(223,152,4)" fg:x="5258" fg:w="12"/><text x="19.1446%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.03%)</title><rect x="18.9090%" y="965" width="0.0287%" height="15" fill="rgb(245,6,2)" fg:x="5262" fg:w="8"/><text x="19.1590%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.03%)</title><rect x="18.9090%" y="949" width="0.0287%" height="15" fill="rgb(249,150,24)" fg:x="5262" fg:w="8"/><text x="19.1590%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="18.9090%" y="933" width="0.0287%" height="15" fill="rgb(228,185,42)" fg:x="5262" fg:w="8"/><text x="19.1590%" y="943.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="18.9090%" y="917" width="0.0287%" height="15" fill="rgb(226,39,33)" fg:x="5262" fg:w="8"/><text x="19.1590%" y="927.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="18.9090%" y="901" width="0.0287%" height="15" fill="rgb(221,166,19)" fg:x="5262" fg:w="8"/><text x="19.1590%" y="911.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="18.9234%" y="885" width="0.0144%" height="15" fill="rgb(209,109,2)" fg:x="5266" fg:w="4"/><text x="19.1734%" y="895.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="18.9234%" y="869" width="0.0144%" height="15" fill="rgb(252,216,26)" fg:x="5266" fg:w="4"/><text x="19.1734%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="18.9270%" y="853" width="0.0108%" height="15" fill="rgb(227,173,36)" fg:x="5267" fg:w="3"/><text x="19.1770%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="18.9270%" y="837" width="0.0108%" height="15" fill="rgb(209,90,7)" fg:x="5267" fg:w="3"/><text x="19.1770%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="18.9270%" y="821" width="0.0108%" height="15" fill="rgb(250,194,11)" fg:x="5267" fg:w="3"/><text x="19.1770%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="18.9270%" y="805" width="0.0108%" height="15" fill="rgb(220,72,50)" fg:x="5267" fg:w="3"/><text x="19.1770%" y="815.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (15 samples, 0.05%)</title><rect x="18.8910%" y="1013" width="0.0539%" height="15" fill="rgb(222,106,48)" fg:x="5257" fg:w="15"/><text x="19.1410%" y="1023.50"></text></g><g><title>zenoh::net::routing::resource::register_expr::{{closure}} (14 samples, 0.05%)</title><rect x="18.8946%" y="997" width="0.0503%" height="15" fill="rgb(216,220,45)" fg:x="5258" fg:w="14"/><text x="19.1446%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (3 samples, 0.01%)</title><rect x="18.9737%" y="869" width="0.0108%" height="15" fill="rgb(234,112,18)" fg:x="5280" fg:w="3"/><text x="19.2237%" y="879.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.01%)</title><rect x="18.9737%" y="853" width="0.0108%" height="15" fill="rgb(206,179,9)" fg:x="5280" fg:w="3"/><text x="19.2237%" y="863.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="18.9737%" y="837" width="0.0108%" height="15" fill="rgb(215,115,40)" fg:x="5280" fg:w="3"/><text x="19.2237%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (17 samples, 0.06%)</title><rect x="18.9557%" y="981" width="0.0611%" height="15" fill="rgb(222,69,34)" fg:x="5275" fg:w="17"/><text x="19.2057%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (17 samples, 0.06%)</title><rect x="18.9557%" y="965" width="0.0611%" height="15" fill="rgb(209,161,10)" fg:x="5275" fg:w="17"/><text x="19.2057%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.06%)</title><rect x="18.9557%" y="949" width="0.0611%" height="15" fill="rgb(217,6,38)" fg:x="5275" fg:w="17"/><text x="19.2057%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (16 samples, 0.06%)</title><rect x="18.9593%" y="933" width="0.0575%" height="15" fill="rgb(229,229,48)" fg:x="5276" fg:w="16"/><text x="19.2093%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (14 samples, 0.05%)</title><rect x="18.9665%" y="917" width="0.0503%" height="15" fill="rgb(225,21,28)" fg:x="5278" fg:w="14"/><text x="19.2165%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (12 samples, 0.04%)</title><rect x="18.9737%" y="901" width="0.0431%" height="15" fill="rgb(206,33,13)" fg:x="5280" fg:w="12"/><text x="19.2237%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (12 samples, 0.04%)</title><rect x="18.9737%" y="885" width="0.0431%" height="15" fill="rgb(242,178,17)" fg:x="5280" fg:w="12"/><text x="19.2237%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (9 samples, 0.03%)</title><rect x="18.9845%" y="869" width="0.0323%" height="15" fill="rgb(220,162,5)" fg:x="5283" fg:w="9"/><text x="19.2345%" y="879.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (9 samples, 0.03%)</title><rect x="18.9845%" y="853" width="0.0323%" height="15" fill="rgb(210,33,43)" fg:x="5283" fg:w="9"/><text x="19.2345%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.03%)</title><rect x="18.9845%" y="837" width="0.0323%" height="15" fill="rgb(216,116,54)" fg:x="5283" fg:w="9"/><text x="19.2345%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.03%)</title><rect x="18.9845%" y="821" width="0.0323%" height="15" fill="rgb(249,92,24)" fg:x="5283" fg:w="9"/><text x="19.2345%" y="831.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.03%)</title><rect x="18.9845%" y="805" width="0.0323%" height="15" fill="rgb(231,189,14)" fg:x="5283" fg:w="9"/><text x="19.2345%" y="815.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="18.9881%" y="789" width="0.0287%" height="15" fill="rgb(230,8,41)" fg:x="5284" fg:w="8"/><text x="19.2381%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (21 samples, 0.08%)</title><rect x="18.9449%" y="1013" width="0.0755%" height="15" fill="rgb(249,7,27)" fg:x="5272" fg:w="21"/><text x="19.1949%" y="1023.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 0.06%)</title><rect x="18.9557%" y="997" width="0.0647%" height="15" fill="rgb(232,86,5)" fg:x="5275" fg:w="18"/><text x="19.2057%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.01%)</title><rect x="19.0204%" y="965" width="0.0108%" height="15" fill="rgb(224,175,18)" fg:x="5293" fg:w="3"/><text x="19.2704%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="19.0204%" y="949" width="0.0108%" height="15" fill="rgb(220,129,12)" fg:x="5293" fg:w="3"/><text x="19.2704%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.04%)</title><rect x="19.0384%" y="917" width="0.0395%" height="15" fill="rgb(210,19,36)" fg:x="5298" fg:w="11"/><text x="19.2884%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.04%)</title><rect x="19.0384%" y="901" width="0.0395%" height="15" fill="rgb(219,96,14)" fg:x="5298" fg:w="11"/><text x="19.2884%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.06%)</title><rect x="19.0204%" y="1013" width="0.0611%" height="15" fill="rgb(249,106,1)" fg:x="5293" fg:w="17"/><text x="19.2704%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.06%)</title><rect x="19.0204%" y="997" width="0.0611%" height="15" fill="rgb(249,155,20)" fg:x="5293" fg:w="17"/><text x="19.2704%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.06%)</title><rect x="19.0204%" y="981" width="0.0611%" height="15" fill="rgb(244,168,9)" fg:x="5293" fg:w="17"/><text x="19.2704%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.05%)</title><rect x="19.0312%" y="965" width="0.0503%" height="15" fill="rgb(216,23,50)" fg:x="5296" fg:w="14"/><text x="19.2812%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.05%)</title><rect x="19.0312%" y="949" width="0.0503%" height="15" fill="rgb(224,219,20)" fg:x="5296" fg:w="14"/><text x="19.2812%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.05%)</title><rect x="19.0312%" y="933" width="0.0503%" height="15" fill="rgb(222,156,15)" fg:x="5296" fg:w="14"/><text x="19.2812%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.02%)</title><rect x="19.0887%" y="981" width="0.0216%" height="15" fill="rgb(231,97,17)" fg:x="5312" fg:w="6"/><text x="19.3387%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="19.0887%" y="965" width="0.0216%" height="15" fill="rgb(218,70,48)" fg:x="5312" fg:w="6"/><text x="19.3387%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.02%)</title><rect x="19.0887%" y="949" width="0.0216%" height="15" fill="rgb(212,196,52)" fg:x="5312" fg:w="6"/><text x="19.3387%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="19.0959%" y="933" width="0.0144%" height="15" fill="rgb(243,203,18)" fg:x="5314" fg:w="4"/><text x="19.3459%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="19.0959%" y="917" width="0.0144%" height="15" fill="rgb(252,125,41)" fg:x="5314" fg:w="4"/><text x="19.3459%" y="927.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="19.1462%" y="789" width="0.0108%" height="15" fill="rgb(223,180,33)" fg:x="5328" fg:w="3"/><text x="19.3962%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (5 samples, 0.02%)</title><rect x="19.1426%" y="853" width="0.0180%" height="15" fill="rgb(254,159,46)" fg:x="5327" fg:w="5"/><text x="19.3926%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="19.1426%" y="837" width="0.0180%" height="15" fill="rgb(254,38,10)" fg:x="5327" fg:w="5"/><text x="19.3926%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="19.1426%" y="821" width="0.0180%" height="15" fill="rgb(208,217,32)" fg:x="5327" fg:w="5"/><text x="19.3926%" y="831.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="19.1426%" y="805" width="0.0180%" height="15" fill="rgb(221,120,13)" fg:x="5327" fg:w="5"/><text x="19.3926%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (6 samples, 0.02%)</title><rect x="19.1426%" y="901" width="0.0216%" height="15" fill="rgb(246,54,52)" fg:x="5327" fg:w="6"/><text x="19.3926%" y="911.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="19.1426%" y="885" width="0.0216%" height="15" fill="rgb(242,34,25)" fg:x="5327" fg:w="6"/><text x="19.3926%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (6 samples, 0.02%)</title><rect x="19.1426%" y="869" width="0.0216%" height="15" fill="rgb(247,209,9)" fg:x="5327" fg:w="6"/><text x="19.3926%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.01%)</title><rect x="19.1821%" y="773" width="0.0108%" height="15" fill="rgb(228,71,26)" fg:x="5338" fg:w="3"/><text x="19.4321%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.03%)</title><rect x="19.1713%" y="837" width="0.0287%" height="15" fill="rgb(222,145,49)" fg:x="5335" fg:w="8"/><text x="19.4213%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.03%)</title><rect x="19.1713%" y="821" width="0.0287%" height="15" fill="rgb(218,121,17)" fg:x="5335" fg:w="8"/><text x="19.4213%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.03%)</title><rect x="19.1713%" y="805" width="0.0287%" height="15" fill="rgb(244,50,7)" fg:x="5335" fg:w="8"/><text x="19.4213%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.02%)</title><rect x="19.1821%" y="789" width="0.0180%" height="15" fill="rgb(246,229,37)" fg:x="5338" fg:w="5"/><text x="19.4321%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (20 samples, 0.07%)</title><rect x="19.1642%" y="901" width="0.0719%" height="15" fill="rgb(225,18,5)" fg:x="5333" fg:w="20"/><text x="19.4142%" y="911.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (20 samples, 0.07%)</title><rect x="19.1642%" y="885" width="0.0719%" height="15" fill="rgb(213,204,8)" fg:x="5333" fg:w="20"/><text x="19.4142%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.07%)</title><rect x="19.1642%" y="869" width="0.0719%" height="15" fill="rgb(238,103,6)" fg:x="5333" fg:w="20"/><text x="19.4142%" y="879.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.07%)</title><rect x="19.1642%" y="853" width="0.0719%" height="15" fill="rgb(222,25,35)" fg:x="5333" fg:w="20"/><text x="19.4142%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.04%)</title><rect x="19.2001%" y="837" width="0.0359%" height="15" fill="rgb(213,203,35)" fg:x="5343" fg:w="10"/><text x="19.4501%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (10 samples, 0.04%)</title><rect x="19.2001%" y="821" width="0.0359%" height="15" fill="rgb(221,79,53)" fg:x="5343" fg:w="10"/><text x="19.4501%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.04%)</title><rect x="19.2001%" y="805" width="0.0359%" height="15" fill="rgb(243,200,35)" fg:x="5343" fg:w="10"/><text x="19.4501%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="19.2145%" y="789" width="0.0216%" height="15" fill="rgb(248,60,25)" fg:x="5347" fg:w="6"/><text x="19.4645%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="19.2145%" y="773" width="0.0216%" height="15" fill="rgb(227,53,46)" fg:x="5347" fg:w="6"/><text x="19.4645%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="19.2145%" y="757" width="0.0216%" height="15" fill="rgb(216,120,32)" fg:x="5347" fg:w="6"/><text x="19.4645%" y="767.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="19.2612%" y="773" width="0.0144%" height="15" fill="rgb(220,134,1)" fg:x="5360" fg:w="4"/><text x="19.5112%" y="783.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="19.2648%" y="757" width="0.0108%" height="15" fill="rgb(237,168,5)" fg:x="5361" fg:w="3"/><text x="19.5148%" y="767.50"></text></g><g><title>__mprotect (3 samples, 0.01%)</title><rect x="19.2648%" y="741" width="0.0108%" height="15" fill="rgb(231,100,33)" fg:x="5361" fg:w="3"/><text x="19.5148%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="19.2648%" y="725" width="0.0108%" height="15" fill="rgb(236,177,47)" fg:x="5361" fg:w="3"/><text x="19.5148%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (7 samples, 0.03%)</title><rect x="19.2540%" y="869" width="0.0252%" height="15" fill="rgb(235,7,49)" fg:x="5358" fg:w="7"/><text x="19.5040%" y="879.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.03%)</title><rect x="19.2540%" y="853" width="0.0252%" height="15" fill="rgb(232,119,22)" fg:x="5358" fg:w="7"/><text x="19.5040%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="19.2540%" y="837" width="0.0252%" height="15" fill="rgb(254,73,53)" fg:x="5358" fg:w="7"/><text x="19.5040%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="19.2540%" y="821" width="0.0252%" height="15" fill="rgb(251,35,20)" fg:x="5358" fg:w="7"/><text x="19.5040%" y="831.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="19.2540%" y="805" width="0.0252%" height="15" fill="rgb(241,119,20)" fg:x="5358" fg:w="7"/><text x="19.5040%" y="815.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="19.2540%" y="789" width="0.0252%" height="15" fill="rgb(207,102,14)" fg:x="5358" fg:w="7"/><text x="19.5040%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (47 samples, 0.17%)</title><rect x="19.1138%" y="965" width="0.1689%" height="15" fill="rgb(248,201,50)" fg:x="5319" fg:w="47"/><text x="19.3638%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (47 samples, 0.17%)</title><rect x="19.1138%" y="949" width="0.1689%" height="15" fill="rgb(222,185,44)" fg:x="5319" fg:w="47"/><text x="19.3638%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (46 samples, 0.17%)</title><rect x="19.1174%" y="933" width="0.1653%" height="15" fill="rgb(218,107,18)" fg:x="5320" fg:w="46"/><text x="19.3674%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (46 samples, 0.17%)</title><rect x="19.1174%" y="917" width="0.1653%" height="15" fill="rgb(237,177,39)" fg:x="5320" fg:w="46"/><text x="19.3674%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (9 samples, 0.03%)</title><rect x="19.2504%" y="901" width="0.0323%" height="15" fill="rgb(246,69,6)" fg:x="5357" fg:w="9"/><text x="19.5004%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (9 samples, 0.03%)</title><rect x="19.2504%" y="885" width="0.0323%" height="15" fill="rgb(234,208,37)" fg:x="5357" fg:w="9"/><text x="19.5004%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (57 samples, 0.20%)</title><rect x="19.0815%" y="1013" width="0.2048%" height="15" fill="rgb(225,4,6)" fg:x="5310" fg:w="57"/><text x="19.3315%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (57 samples, 0.20%)</title><rect x="19.0815%" y="997" width="0.2048%" height="15" fill="rgb(233,45,0)" fg:x="5310" fg:w="57"/><text x="19.3315%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (49 samples, 0.18%)</title><rect x="19.1102%" y="981" width="0.1761%" height="15" fill="rgb(226,136,5)" fg:x="5318" fg:w="49"/><text x="19.3602%" y="991.50"></text></g><g><title>zenoh::net::routing::face::FaceState::get_next_local_id (5 samples, 0.02%)</title><rect x="19.2863%" y="1013" width="0.0180%" height="15" fill="rgb(211,91,47)" fg:x="5367" fg:w="5"/><text x="19.5363%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="19.2863%" y="997" width="0.0180%" height="15" fill="rgb(242,88,51)" fg:x="5367" fg:w="5"/><text x="19.5363%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.02%)</title><rect x="19.2863%" y="981" width="0.0180%" height="15" fill="rgb(230,91,28)" fg:x="5367" fg:w="5"/><text x="19.5363%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.02%)</title><rect x="19.2863%" y="965" width="0.0180%" height="15" fill="rgb(254,186,29)" fg:x="5367" fg:w="5"/><text x="19.5363%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.01%)</title><rect x="19.2899%" y="949" width="0.0144%" height="15" fill="rgb(238,6,4)" fg:x="5368" fg:w="4"/><text x="19.5399%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="19.2899%" y="933" width="0.0144%" height="15" fill="rgb(221,151,16)" fg:x="5368" fg:w="4"/><text x="19.5399%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.01%)</title><rect x="19.2899%" y="917" width="0.0144%" height="15" fill="rgb(251,143,52)" fg:x="5368" fg:w="4"/><text x="19.5399%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="19.3330%" y="997" width="0.0144%" height="15" fill="rgb(206,90,15)" fg:x="5380" fg:w="4"/><text x="19.5830%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="19.3330%" y="981" width="0.0144%" height="15" fill="rgb(218,35,8)" fg:x="5380" fg:w="4"/><text x="19.5830%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="19.3330%" y="965" width="0.0144%" height="15" fill="rgb(239,215,6)" fg:x="5380" fg:w="4"/><text x="19.5830%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Weak&lt;zenoh::net::routing::resource::Resource&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="19.3510%" y="997" width="0.0108%" height="15" fill="rgb(245,116,39)" fg:x="5385" fg:w="3"/><text x="19.6010%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15 samples, 0.05%)</title><rect x="19.3798%" y="917" width="0.0539%" height="15" fill="rgb(242,65,28)" fg:x="5393" fg:w="15"/><text x="19.6298%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.05%)</title><rect x="19.3798%" y="901" width="0.0539%" height="15" fill="rgb(252,132,53)" fg:x="5393" fg:w="15"/><text x="19.6298%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.05%)</title><rect x="19.3798%" y="885" width="0.0539%" height="15" fill="rgb(224,159,50)" fg:x="5393" fg:w="15"/><text x="19.6298%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.05%)</title><rect x="19.3798%" y="869" width="0.0539%" height="15" fill="rgb(224,93,4)" fg:x="5393" fg:w="15"/><text x="19.6298%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.05%)</title><rect x="19.3798%" y="853" width="0.0539%" height="15" fill="rgb(208,81,34)" fg:x="5393" fg:w="15"/><text x="19.6298%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.05%)</title><rect x="19.3798%" y="837" width="0.0539%" height="15" fill="rgb(233,92,54)" fg:x="5393" fg:w="15"/><text x="19.6298%" y="847.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.05%)</title><rect x="19.3798%" y="821" width="0.0539%" height="15" fill="rgb(237,21,14)" fg:x="5393" fg:w="15"/><text x="19.6298%" y="831.50"></text></g><g><title>malloc (15 samples, 0.05%)</title><rect x="19.3798%" y="805" width="0.0539%" height="15" fill="rgb(249,128,51)" fg:x="5393" fg:w="15"/><text x="19.6298%" y="815.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="19.3941%" y="789" width="0.0395%" height="15" fill="rgb(223,129,24)" fg:x="5397" fg:w="11"/><text x="19.6441%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.01%)</title><rect x="19.4337%" y="917" width="0.0108%" height="15" fill="rgb(231,168,25)" fg:x="5408" fg:w="3"/><text x="19.6837%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="19.4337%" y="901" width="0.0108%" height="15" fill="rgb(224,39,20)" fg:x="5408" fg:w="3"/><text x="19.6837%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="19.4337%" y="885" width="0.0108%" height="15" fill="rgb(225,152,53)" fg:x="5408" fg:w="3"/><text x="19.6837%" y="895.50"></text></g><g><title>alloc::str::join_generic_copy (21 samples, 0.08%)</title><rect x="19.3726%" y="933" width="0.0755%" height="15" fill="rgb(252,17,24)" fg:x="5391" fg:w="21"/><text x="19.6226%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (22 samples, 0.08%)</title><rect x="19.3726%" y="981" width="0.0791%" height="15" fill="rgb(250,114,30)" fg:x="5391" fg:w="22"/><text x="19.6226%" y="991.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (22 samples, 0.08%)</title><rect x="19.3726%" y="965" width="0.0791%" height="15" fill="rgb(229,5,4)" fg:x="5391" fg:w="22"/><text x="19.6226%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (22 samples, 0.08%)</title><rect x="19.3726%" y="949" width="0.0791%" height="15" fill="rgb(225,176,49)" fg:x="5391" fg:w="22"/><text x="19.6226%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.02%)</title><rect x="19.4516%" y="981" width="0.0180%" height="15" fill="rgb(224,221,49)" fg:x="5413" fg:w="5"/><text x="19.7016%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="19.4516%" y="965" width="0.0180%" height="15" fill="rgb(253,169,27)" fg:x="5413" fg:w="5"/><text x="19.7016%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="19.4516%" y="949" width="0.0180%" height="15" fill="rgb(211,206,16)" fg:x="5413" fg:w="5"/><text x="19.7016%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="19.4516%" y="933" width="0.0180%" height="15" fill="rgb(244,87,35)" fg:x="5413" fg:w="5"/><text x="19.7016%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="19.4516%" y="917" width="0.0180%" height="15" fill="rgb(246,28,10)" fg:x="5413" fg:w="5"/><text x="19.7016%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="19.4516%" y="901" width="0.0180%" height="15" fill="rgb(229,12,44)" fg:x="5413" fg:w="5"/><text x="19.7016%" y="911.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="19.4516%" y="885" width="0.0180%" height="15" fill="rgb(210,145,37)" fg:x="5413" fg:w="5"/><text x="19.7016%" y="895.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="19.4588%" y="869" width="0.0108%" height="15" fill="rgb(227,112,52)" fg:x="5415" fg:w="3"/><text x="19.7088%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.04%)</title><rect x="19.4948%" y="901" width="0.0359%" height="15" fill="rgb(238,155,34)" fg:x="5425" fg:w="10"/><text x="19.7448%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.04%)</title><rect x="19.4948%" y="885" width="0.0359%" height="15" fill="rgb(239,226,36)" fg:x="5425" fg:w="10"/><text x="19.7448%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.03%)</title><rect x="19.4983%" y="869" width="0.0323%" height="15" fill="rgb(230,16,23)" fg:x="5426" fg:w="9"/><text x="19.7483%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.03%)</title><rect x="19.4983%" y="853" width="0.0323%" height="15" fill="rgb(236,171,36)" fg:x="5426" fg:w="9"/><text x="19.7483%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.03%)</title><rect x="19.4983%" y="837" width="0.0323%" height="15" fill="rgb(221,22,14)" fg:x="5426" fg:w="9"/><text x="19.7483%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.03%)</title><rect x="19.4983%" y="821" width="0.0323%" height="15" fill="rgb(242,43,11)" fg:x="5426" fg:w="9"/><text x="19.7483%" y="831.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.03%)</title><rect x="19.4983%" y="805" width="0.0323%" height="15" fill="rgb(232,69,23)" fg:x="5426" fg:w="9"/><text x="19.7483%" y="815.50"></text></g><g><title>malloc (9 samples, 0.03%)</title><rect x="19.4983%" y="789" width="0.0323%" height="15" fill="rgb(216,180,54)" fg:x="5426" fg:w="9"/><text x="19.7483%" y="799.50"></text></g><g><title>alloc::str::join_generic_copy (20 samples, 0.07%)</title><rect x="19.4840%" y="917" width="0.0719%" height="15" fill="rgb(216,5,24)" fg:x="5422" fg:w="20"/><text x="19.7340%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.03%)</title><rect x="19.5307%" y="901" width="0.0252%" height="15" fill="rgb(225,89,9)" fg:x="5435" fg:w="7"/><text x="19.7807%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.03%)</title><rect x="19.5307%" y="885" width="0.0252%" height="15" fill="rgb(243,75,33)" fg:x="5435" fg:w="7"/><text x="19.7807%" y="895.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="19.5307%" y="869" width="0.0252%" height="15" fill="rgb(247,141,45)" fg:x="5435" fg:w="7"/><text x="19.7807%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (22 samples, 0.08%)</title><rect x="19.4840%" y="965" width="0.0791%" height="15" fill="rgb(232,177,36)" fg:x="5422" fg:w="22"/><text x="19.7340%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (22 samples, 0.08%)</title><rect x="19.4840%" y="949" width="0.0791%" height="15" fill="rgb(219,125,36)" fg:x="5422" fg:w="22"/><text x="19.7340%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (22 samples, 0.08%)</title><rect x="19.4840%" y="933" width="0.0791%" height="15" fill="rgb(227,94,9)" fg:x="5422" fg:w="22"/><text x="19.7340%" y="943.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (62 samples, 0.22%)</title><rect x="19.3618%" y="997" width="0.2228%" height="15" fill="rgb(240,34,52)" fg:x="5388" fg:w="62"/><text x="19.6118%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (32 samples, 0.11%)</title><rect x="19.4696%" y="981" width="0.1150%" height="15" fill="rgb(216,45,12)" fg:x="5418" fg:w="32"/><text x="19.7196%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (6 samples, 0.02%)</title><rect x="19.5630%" y="965" width="0.0216%" height="15" fill="rgb(246,21,19)" fg:x="5444" fg:w="6"/><text x="19.8130%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (3 samples, 0.01%)</title><rect x="19.6026%" y="965" width="0.0108%" height="15" fill="rgb(213,98,42)" fg:x="5455" fg:w="3"/><text x="19.8526%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.01%)</title><rect x="19.6026%" y="949" width="0.0108%" height="15" fill="rgb(250,136,47)" fg:x="5455" fg:w="3"/><text x="19.8526%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (5 samples, 0.02%)</title><rect x="19.6169%" y="965" width="0.0180%" height="15" fill="rgb(251,124,27)" fg:x="5459" fg:w="5"/><text x="19.8669%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (5 samples, 0.02%)</title><rect x="19.6169%" y="949" width="0.0180%" height="15" fill="rgb(229,180,14)" fg:x="5459" fg:w="5"/><text x="19.8669%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (5 samples, 0.02%)</title><rect x="19.6169%" y="933" width="0.0180%" height="15" fill="rgb(245,216,25)" fg:x="5459" fg:w="5"/><text x="19.8669%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5 samples, 0.02%)</title><rect x="19.6169%" y="917" width="0.0180%" height="15" fill="rgb(251,43,5)" fg:x="5459" fg:w="5"/><text x="19.8669%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="19.6205%" y="901" width="0.0144%" height="15" fill="rgb(250,128,24)" fg:x="5460" fg:w="4"/><text x="19.8705%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (4 samples, 0.01%)</title><rect x="19.6205%" y="885" width="0.0144%" height="15" fill="rgb(217,117,27)" fg:x="5460" fg:w="4"/><text x="19.8705%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.01%)</title><rect x="19.6205%" y="869" width="0.0144%" height="15" fill="rgb(245,147,4)" fg:x="5460" fg:w="4"/><text x="19.8705%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="19.6205%" y="853" width="0.0144%" height="15" fill="rgb(242,201,35)" fg:x="5460" fg:w="4"/><text x="19.8705%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::eq (5 samples, 0.02%)</title><rect x="19.6601%" y="949" width="0.0180%" height="15" fill="rgb(218,181,1)" fg:x="5471" fg:w="5"/><text x="19.9101%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.02%)</title><rect x="19.6601%" y="933" width="0.0180%" height="15" fill="rgb(222,6,29)" fg:x="5471" fg:w="5"/><text x="19.9101%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.02%)</title><rect x="19.6601%" y="917" width="0.0180%" height="15" fill="rgb(208,186,3)" fg:x="5471" fg:w="5"/><text x="19.9101%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.02%)</title><rect x="19.6601%" y="901" width="0.0180%" height="15" fill="rgb(216,36,26)" fg:x="5471" fg:w="5"/><text x="19.9101%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.02%)</title><rect x="19.6601%" y="885" width="0.0180%" height="15" fill="rgb(248,201,23)" fg:x="5471" fg:w="5"/><text x="19.9101%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="19.6852%" y="869" width="0.0144%" height="15" fill="rgb(251,170,31)" fg:x="5478" fg:w="4"/><text x="19.9352%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="19.6780%" y="933" width="0.0252%" height="15" fill="rgb(207,110,25)" fg:x="5476" fg:w="7"/><text x="19.9280%" y="943.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="19.6780%" y="917" width="0.0252%" height="15" fill="rgb(250,54,15)" fg:x="5476" fg:w="7"/><text x="19.9280%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="19.6780%" y="901" width="0.0252%" height="15" fill="rgb(227,68,33)" fg:x="5476" fg:w="7"/><text x="19.9280%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="19.6780%" y="885" width="0.0252%" height="15" fill="rgb(238,34,41)" fg:x="5476" fg:w="7"/><text x="19.9280%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.03%)</title><rect x="19.6780%" y="949" width="0.0287%" height="15" fill="rgb(220,11,15)" fg:x="5476" fg:w="8"/><text x="19.9280%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.05%)</title><rect x="19.7140%" y="917" width="0.0467%" height="15" fill="rgb(246,111,35)" fg:x="5486" fg:w="13"/><text x="19.9640%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.04%)</title><rect x="19.7176%" y="901" width="0.0431%" height="15" fill="rgb(209,88,53)" fg:x="5487" fg:w="12"/><text x="19.9676%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.04%)</title><rect x="19.7211%" y="885" width="0.0395%" height="15" fill="rgb(231,185,47)" fg:x="5488" fg:w="11"/><text x="19.9711%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.04%)</title><rect x="19.7211%" y="869" width="0.0395%" height="15" fill="rgb(233,154,1)" fg:x="5488" fg:w="11"/><text x="19.9711%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.04%)</title><rect x="19.7211%" y="853" width="0.0395%" height="15" fill="rgb(225,15,46)" fg:x="5488" fg:w="11"/><text x="19.9711%" y="863.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="19.7319%" y="837" width="0.0287%" height="15" fill="rgb(211,135,41)" fg:x="5491" fg:w="8"/><text x="19.9819%" y="847.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="19.7391%" y="821" width="0.0216%" height="15" fill="rgb(208,54,0)" fg:x="5493" fg:w="6"/><text x="19.9891%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.08%)</title><rect x="19.7068%" y="933" width="0.0755%" height="15" fill="rgb(244,136,14)" fg:x="5484" fg:w="21"/><text x="19.9568%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="19.7607%" y="917" width="0.0216%" height="15" fill="rgb(241,56,14)" fg:x="5499" fg:w="6"/><text x="20.0107%" y="927.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="19.7607%" y="901" width="0.0216%" height="15" fill="rgb(205,80,24)" fg:x="5499" fg:w="6"/><text x="20.0107%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (26 samples, 0.09%)</title><rect x="19.7068%" y="949" width="0.0934%" height="15" fill="rgb(220,57,4)" fg:x="5484" fg:w="26"/><text x="19.9568%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (5 samples, 0.02%)</title><rect x="19.7822%" y="933" width="0.0180%" height="15" fill="rgb(226,193,50)" fg:x="5505" fg:w="5"/><text x="20.0322%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="19.7822%" y="917" width="0.0180%" height="15" fill="rgb(231,168,22)" fg:x="5505" fg:w="5"/><text x="20.0322%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (5 samples, 0.02%)</title><rect x="19.8074%" y="949" width="0.0180%" height="15" fill="rgb(254,215,14)" fg:x="5512" fg:w="5"/><text x="20.0574%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.02%)</title><rect x="19.8074%" y="933" width="0.0180%" height="15" fill="rgb(211,115,16)" fg:x="5512" fg:w="5"/><text x="20.0574%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Weak&lt;zenoh::net::routing::resource::Resource&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="19.8254%" y="949" width="0.0108%" height="15" fill="rgb(236,210,16)" fg:x="5517" fg:w="3"/><text x="20.0754%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::sync::Weak&lt;zenoh::net::routing::resource::Resource&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="19.8254%" y="933" width="0.0108%" height="15" fill="rgb(221,94,12)" fg:x="5517" fg:w="3"/><text x="20.0754%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="19.8254%" y="917" width="0.0108%" height="15" fill="rgb(235,218,49)" fg:x="5517" fg:w="3"/><text x="20.0754%" y="927.50"></text></g><g><title>zenoh::net::routing::resource::Resource::fst_chunk (3 samples, 0.01%)</title><rect x="19.8397%" y="949" width="0.0108%" height="15" fill="rgb(217,114,14)" fg:x="5521" fg:w="3"/><text x="20.0897%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="19.9080%" y="933" width="0.0108%" height="15" fill="rgb(216,145,22)" fg:x="5540" fg:w="3"/><text x="20.1580%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="19.9080%" y="917" width="0.0108%" height="15" fill="rgb(217,112,39)" fg:x="5540" fg:w="3"/><text x="20.1580%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="19.9080%" y="901" width="0.0108%" height="15" fill="rgb(225,85,32)" fg:x="5540" fg:w="3"/><text x="20.1580%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="19.9080%" y="885" width="0.0108%" height="15" fill="rgb(245,209,47)" fg:x="5540" fg:w="3"/><text x="20.1580%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (124 samples, 0.45%)</title><rect x="19.9224%" y="933" width="0.4456%" height="15" fill="rgb(218,220,15)" fg:x="5544" fg:w="124"/><text x="20.1724%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (124 samples, 0.45%)</title><rect x="19.9224%" y="917" width="0.4456%" height="15" fill="rgb(222,202,31)" fg:x="5544" fg:w="124"/><text x="20.1724%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.01%)</title><rect x="20.3680%" y="933" width="0.0144%" height="15" fill="rgb(243,203,4)" fg:x="5668" fg:w="4"/><text x="20.6180%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="20.3680%" y="917" width="0.0144%" height="15" fill="rgb(237,92,17)" fg:x="5668" fg:w="4"/><text x="20.6180%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="20.3680%" y="901" width="0.0144%" height="15" fill="rgb(231,119,7)" fg:x="5668" fg:w="4"/><text x="20.6180%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="20.3680%" y="885" width="0.0144%" height="15" fill="rgb(237,82,41)" fg:x="5668" fg:w="4"/><text x="20.6180%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="20.3680%" y="869" width="0.0144%" height="15" fill="rgb(226,81,48)" fg:x="5668" fg:w="4"/><text x="20.6180%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="20.3680%" y="853" width="0.0144%" height="15" fill="rgb(234,70,51)" fg:x="5668" fg:w="4"/><text x="20.6180%" y="863.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="20.3716%" y="837" width="0.0108%" height="15" fill="rgb(251,86,4)" fg:x="5669" fg:w="3"/><text x="20.6216%" y="847.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.01%)</title><rect x="20.3967%" y="901" width="0.0144%" height="15" fill="rgb(244,144,28)" fg:x="5676" fg:w="4"/><text x="20.6467%" y="911.50"></text></g><g><title>core::slice::memchr::memchr (4 samples, 0.01%)</title><rect x="20.3967%" y="885" width="0.0144%" height="15" fill="rgb(232,161,39)" fg:x="5676" fg:w="4"/><text x="20.6467%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (4 samples, 0.01%)</title><rect x="20.3967%" y="869" width="0.0144%" height="15" fill="rgb(247,34,51)" fg:x="5676" fg:w="4"/><text x="20.6467%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (5 samples, 0.02%)</title><rect x="20.3967%" y="917" width="0.0180%" height="15" fill="rgb(225,132,2)" fg:x="5676" fg:w="5"/><text x="20.6467%" y="927.50"></text></g><g><title>zenoh::net::routing::resource::Resource::fst_chunk (9 samples, 0.03%)</title><rect x="20.3859%" y="933" width="0.0323%" height="15" fill="rgb(209,159,44)" fg:x="5673" fg:w="9"/><text x="20.6359%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (17 samples, 0.06%)</title><rect x="20.4255%" y="917" width="0.0611%" height="15" fill="rgb(251,214,1)" fg:x="5684" fg:w="17"/><text x="20.6755%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.06%)</title><rect x="20.4255%" y="901" width="0.0611%" height="15" fill="rgb(247,84,47)" fg:x="5684" fg:w="17"/><text x="20.6755%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 0.06%)</title><rect x="20.4255%" y="885" width="0.0611%" height="15" fill="rgb(240,111,43)" fg:x="5684" fg:w="17"/><text x="20.6755%" y="895.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="20.4363%" y="869" width="0.0503%" height="15" fill="rgb(215,214,35)" fg:x="5687" fg:w="14"/><text x="20.6863%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.02%)</title><rect x="20.4866%" y="885" width="0.0180%" height="15" fill="rgb(248,207,23)" fg:x="5701" fg:w="5"/><text x="20.7366%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="20.5548%" y="853" width="0.0144%" height="15" fill="rgb(214,186,4)" fg:x="5720" fg:w="4"/><text x="20.8048%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (24 samples, 0.09%)</title><rect x="20.4866%" y="917" width="0.0862%" height="15" fill="rgb(220,133,22)" fg:x="5701" fg:w="24"/><text x="20.7366%" y="927.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (24 samples, 0.09%)</title><rect x="20.4866%" y="901" width="0.0862%" height="15" fill="rgb(239,134,19)" fg:x="5701" fg:w="24"/><text x="20.7366%" y="911.50"></text></g><g><title>core::slice::memchr::memchr (19 samples, 0.07%)</title><rect x="20.5045%" y="885" width="0.0683%" height="15" fill="rgb(250,140,9)" fg:x="5706" fg:w="19"/><text x="20.7545%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (15 samples, 0.05%)</title><rect x="20.5189%" y="869" width="0.0539%" height="15" fill="rgb(225,59,14)" fg:x="5710" fg:w="15"/><text x="20.7689%" y="879.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (289 samples, 1.04%)</title><rect x="19.8505%" y="949" width="1.0385%" height="15" fill="rgb(214,152,51)" fg:x="5524" fg:w="289"/><text x="20.1005%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::intersect (131 samples, 0.47%)</title><rect x="20.4183%" y="933" width="0.4707%" height="15" fill="rgb(251,227,43)" fg:x="5682" fg:w="131"/><text x="20.6683%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (88 samples, 0.32%)</title><rect x="20.5728%" y="917" width="0.3162%" height="15" fill="rgb(241,96,17)" fg:x="5725" fg:w="88"/><text x="20.8228%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (83 samples, 0.30%)</title><rect x="20.5908%" y="901" width="0.2983%" height="15" fill="rgb(234,198,43)" fg:x="5730" fg:w="83"/><text x="20.8408%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (83 samples, 0.30%)</title><rect x="20.5908%" y="885" width="0.2983%" height="15" fill="rgb(220,108,29)" fg:x="5730" fg:w="83"/><text x="20.8408%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (83 samples, 0.30%)</title><rect x="20.5908%" y="869" width="0.2983%" height="15" fill="rgb(226,163,33)" fg:x="5730" fg:w="83"/><text x="20.8408%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (3 samples, 0.01%)</title><rect x="20.8998%" y="933" width="0.0108%" height="15" fill="rgb(205,194,45)" fg:x="5816" fg:w="3"/><text x="21.1498%" y="943.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.01%)</title><rect x="20.8998%" y="917" width="0.0108%" height="15" fill="rgb(206,143,44)" fg:x="5816" fg:w="3"/><text x="21.1498%" y="927.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.01%)</title><rect x="20.8998%" y="901" width="0.0108%" height="15" fill="rgb(236,136,36)" fg:x="5816" fg:w="3"/><text x="21.1498%" y="911.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches (372 samples, 1.34%)</title><rect x="19.5846%" y="997" width="1.3368%" height="15" fill="rgb(249,172,42)" fg:x="5450" fg:w="372"/><text x="19.8346%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (372 samples, 1.34%)</title><rect x="19.5846%" y="981" width="1.3368%" height="15" fill="rgb(216,139,23)" fg:x="5450" fg:w="372"/><text x="19.8346%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (358 samples, 1.29%)</title><rect x="19.6349%" y="965" width="1.2865%" height="15" fill="rgb(207,166,20)" fg:x="5464" fg:w="358"/><text x="19.8849%" y="975.50"></text></g><g><title>zenoh_protocol_core::key_expr::intersect (9 samples, 0.03%)</title><rect x="20.8890%" y="949" width="0.0323%" height="15" fill="rgb(210,209,22)" fg:x="5813" fg:w="9"/><text x="21.1390%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (3 samples, 0.01%)</title><rect x="20.9106%" y="933" width="0.0108%" height="15" fill="rgb(232,118,20)" fg:x="5819" fg:w="3"/><text x="21.1606%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.01%)</title><rect x="20.9106%" y="917" width="0.0108%" height="15" fill="rgb(238,113,42)" fg:x="5819" fg:w="3"/><text x="21.1606%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.01%)</title><rect x="20.9106%" y="901" width="0.0108%" height="15" fill="rgb(231,42,5)" fg:x="5819" fg:w="3"/><text x="21.1606%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.01%)</title><rect x="20.9106%" y="885" width="0.0108%" height="15" fill="rgb(243,166,24)" fg:x="5819" fg:w="3"/><text x="21.1606%" y="895.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (449 samples, 1.61%)</title><rect x="19.3115%" y="1013" width="1.6135%" height="15" fill="rgb(237,226,12)" fg:x="5374" fg:w="449"/><text x="19.5615%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="20.9465%" y="965" width="0.0144%" height="15" fill="rgb(229,133,24)" fg:x="5829" fg:w="4"/><text x="21.1965%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (6 samples, 0.02%)</title><rect x="20.9932%" y="949" width="0.0216%" height="15" fill="rgb(238,33,43)" fg:x="5842" fg:w="6"/><text x="21.2432%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (6 samples, 0.02%)</title><rect x="20.9932%" y="933" width="0.0216%" height="15" fill="rgb(227,59,38)" fg:x="5842" fg:w="6"/><text x="21.2432%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (6 samples, 0.02%)</title><rect x="20.9932%" y="917" width="0.0216%" height="15" fill="rgb(230,97,0)" fg:x="5842" fg:w="6"/><text x="21.2432%" y="927.50"></text></g><g><title>alloc::str::join_generic_copy (6 samples, 0.02%)</title><rect x="20.9932%" y="901" width="0.0216%" height="15" fill="rgb(250,173,50)" fg:x="5842" fg:w="6"/><text x="21.2432%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="21.0436%" y="837" width="0.0108%" height="15" fill="rgb(240,15,50)" fg:x="5856" fg:w="3"/><text x="21.2936%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="21.0148%" y="949" width="0.0431%" height="15" fill="rgb(221,93,22)" fg:x="5848" fg:w="12"/><text x="21.2648%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.04%)</title><rect x="21.0184%" y="933" width="0.0395%" height="15" fill="rgb(245,180,53)" fg:x="5849" fg:w="11"/><text x="21.2684%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.04%)</title><rect x="21.0184%" y="917" width="0.0395%" height="15" fill="rgb(231,88,51)" fg:x="5849" fg:w="11"/><text x="21.2684%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.04%)</title><rect x="21.0184%" y="901" width="0.0395%" height="15" fill="rgb(240,58,21)" fg:x="5849" fg:w="11"/><text x="21.2684%" y="911.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.04%)</title><rect x="21.0184%" y="885" width="0.0395%" height="15" fill="rgb(237,21,10)" fg:x="5849" fg:w="11"/><text x="21.2684%" y="895.50"></text></g><g><title>malloc (9 samples, 0.03%)</title><rect x="21.0256%" y="869" width="0.0323%" height="15" fill="rgb(218,43,11)" fg:x="5851" fg:w="9"/><text x="21.2756%" y="879.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="21.0328%" y="853" width="0.0252%" height="15" fill="rgb(218,221,29)" fg:x="5853" fg:w="7"/><text x="21.2828%" y="863.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (3 samples, 0.01%)</title><rect x="21.0579%" y="949" width="0.0108%" height="15" fill="rgb(214,118,42)" fg:x="5860" fg:w="3"/><text x="21.3079%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (5 samples, 0.02%)</title><rect x="21.0795%" y="949" width="0.0180%" height="15" fill="rgb(251,200,26)" fg:x="5866" fg:w="5"/><text x="21.3295%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (5 samples, 0.02%)</title><rect x="21.0795%" y="933" width="0.0180%" height="15" fill="rgb(237,101,39)" fg:x="5866" fg:w="5"/><text x="21.3295%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (5 samples, 0.02%)</title><rect x="21.0795%" y="917" width="0.0180%" height="15" fill="rgb(251,117,11)" fg:x="5866" fg:w="5"/><text x="21.3295%" y="927.50"></text></g><g><title>std::collections::hash::map::RandomState::new (5 samples, 0.02%)</title><rect x="21.0795%" y="901" width="0.0180%" height="15" fill="rgb(216,223,23)" fg:x="5866" fg:w="5"/><text x="21.3295%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="21.0795%" y="885" width="0.0180%" height="15" fill="rgb(251,54,12)" fg:x="5866" fg:w="5"/><text x="21.3295%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.02%)</title><rect x="21.0795%" y="869" width="0.0180%" height="15" fill="rgb(254,176,54)" fg:x="5866" fg:w="5"/><text x="21.3295%" y="879.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (3 samples, 0.01%)</title><rect x="21.0867%" y="853" width="0.0108%" height="15" fill="rgb(210,32,8)" fg:x="5868" fg:w="3"/><text x="21.3367%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.01%)</title><rect x="21.0867%" y="837" width="0.0108%" height="15" fill="rgb(235,52,38)" fg:x="5868" fg:w="3"/><text x="21.3367%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.01%)</title><rect x="21.1082%" y="933" width="0.0108%" height="15" fill="rgb(231,4,44)" fg:x="5874" fg:w="3"/><text x="21.3582%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="21.1082%" y="917" width="0.0108%" height="15" fill="rgb(249,2,32)" fg:x="5874" fg:w="3"/><text x="21.3582%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="21.1082%" y="901" width="0.0108%" height="15" fill="rgb(224,65,26)" fg:x="5874" fg:w="3"/><text x="21.3582%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="21.1082%" y="885" width="0.0108%" height="15" fill="rgb(250,73,40)" fg:x="5874" fg:w="3"/><text x="21.3582%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="21.1082%" y="869" width="0.0108%" height="15" fill="rgb(253,177,16)" fg:x="5874" fg:w="3"/><text x="21.3582%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="21.1082%" y="853" width="0.0108%" height="15" fill="rgb(217,32,34)" fg:x="5874" fg:w="3"/><text x="21.3582%" y="863.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="21.1082%" y="837" width="0.0108%" height="15" fill="rgb(212,7,10)" fg:x="5874" fg:w="3"/><text x="21.3582%" y="847.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (10 samples, 0.04%)</title><rect x="21.0975%" y="949" width="0.0359%" height="15" fill="rgb(245,89,8)" fg:x="5871" fg:w="10"/><text x="21.3475%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (4 samples, 0.01%)</title><rect x="21.1190%" y="933" width="0.0144%" height="15" fill="rgb(237,16,53)" fg:x="5877" fg:w="4"/><text x="21.3690%" y="943.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (45 samples, 0.16%)</title><rect x="20.9753%" y="965" width="0.1617%" height="15" fill="rgb(250,204,30)" fg:x="5837" fg:w="45"/><text x="21.2253%" y="975.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (3 samples, 0.01%)</title><rect x="21.1550%" y="949" width="0.0108%" height="15" fill="rgb(208,77,27)" fg:x="5887" fg:w="3"/><text x="21.4050%" y="959.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (66 samples, 0.24%)</title><rect x="20.9429%" y="981" width="0.2372%" height="15" fill="rgb(250,204,28)" fg:x="5828" fg:w="66"/><text x="21.1929%" y="991.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_matching_pulls (12 samples, 0.04%)</title><rect x="21.1370%" y="965" width="0.0431%" height="15" fill="rgb(244,63,21)" fg:x="5882" fg:w="12"/><text x="21.3870%" y="975.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="21.2089%" y="949" width="0.0144%" height="15" fill="rgb(236,85,44)" fg:x="5902" fg:w="4"/><text x="21.4589%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (4 samples, 0.01%)</title><rect x="21.2089%" y="933" width="0.0144%" height="15" fill="rgb(215,98,4)" fg:x="5902" fg:w="4"/><text x="21.4589%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (4 samples, 0.01%)</title><rect x="21.2089%" y="917" width="0.0144%" height="15" fill="rgb(235,38,11)" fg:x="5902" fg:w="4"/><text x="21.4589%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (4 samples, 0.01%)</title><rect x="21.2089%" y="901" width="0.0144%" height="15" fill="rgb(254,186,25)" fg:x="5902" fg:w="4"/><text x="21.4589%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="21.2124%" y="885" width="0.0108%" height="15" fill="rgb(225,55,31)" fg:x="5903" fg:w="3"/><text x="21.4624%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (4 samples, 0.01%)</title><rect x="21.2304%" y="949" width="0.0144%" height="15" fill="rgb(211,15,21)" fg:x="5908" fg:w="4"/><text x="21.4804%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (4 samples, 0.01%)</title><rect x="21.2304%" y="933" width="0.0144%" height="15" fill="rgb(215,187,41)" fg:x="5908" fg:w="4"/><text x="21.4804%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (4 samples, 0.01%)</title><rect x="21.2304%" y="917" width="0.0144%" height="15" fill="rgb(248,69,32)" fg:x="5908" fg:w="4"/><text x="21.4804%" y="927.50"></text></g><g><title>alloc::str::join_generic_copy (4 samples, 0.01%)</title><rect x="21.2304%" y="901" width="0.0144%" height="15" fill="rgb(252,102,52)" fg:x="5908" fg:w="4"/><text x="21.4804%" y="911.50"></text></g><g><title>alloc::str::join_generic_copy (4 samples, 0.01%)</title><rect x="21.2771%" y="885" width="0.0144%" height="15" fill="rgb(253,140,32)" fg:x="5921" fg:w="4"/><text x="21.5271%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (6 samples, 0.02%)</title><rect x="21.2735%" y="933" width="0.0216%" height="15" fill="rgb(216,56,42)" fg:x="5920" fg:w="6"/><text x="21.5235%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (5 samples, 0.02%)</title><rect x="21.2771%" y="917" width="0.0180%" height="15" fill="rgb(216,184,14)" fg:x="5921" fg:w="5"/><text x="21.5271%" y="927.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5 samples, 0.02%)</title><rect x="21.2771%" y="901" width="0.0180%" height="15" fill="rgb(237,187,27)" fg:x="5921" fg:w="5"/><text x="21.5271%" y="911.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (9 samples, 0.03%)</title><rect x="21.2699%" y="949" width="0.0323%" height="15" fill="rgb(219,65,3)" fg:x="5919" fg:w="9"/><text x="21.5199%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::cend (3 samples, 0.01%)</title><rect x="21.3526%" y="901" width="0.0108%" height="15" fill="rgb(245,83,25)" fg:x="5942" fg:w="3"/><text x="21.6026%" y="911.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (13 samples, 0.05%)</title><rect x="21.3203%" y="917" width="0.0467%" height="15" fill="rgb(214,205,45)" fg:x="5933" fg:w="13"/><text x="21.5703%" y="927.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (724 samples, 2.60%)</title><rect x="18.7689%" y="1045" width="2.6017%" height="15" fill="rgb(241,20,18)" fg:x="5223" fg:w="724"/><text x="19.0189%" y="1055.50">&lt;z..</text></g><g><title>zenoh::net::routing::resource::register_expr (709 samples, 2.55%)</title><rect x="18.8228%" y="1029" width="2.5478%" height="15" fill="rgb(232,163,23)" fg:x="5238" fg:w="709"/><text x="19.0728%" y="1039.50">ze..</text></g><g><title>zenoh::net::routing::router::Tables::compute_matches_routes (124 samples, 0.45%)</title><rect x="20.9250%" y="1013" width="0.4456%" height="15" fill="rgb(214,5,46)" fg:x="5823" fg:w="124"/><text x="21.1750%" y="1023.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_routes (120 samples, 0.43%)</title><rect x="20.9393%" y="997" width="0.4312%" height="15" fill="rgb(229,78,17)" fg:x="5827" fg:w="120"/><text x="21.1893%" y="1007.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (53 samples, 0.19%)</title><rect x="21.1801%" y="981" width="0.1905%" height="15" fill="rgb(248,89,10)" fg:x="5894" fg:w="53"/><text x="21.4301%" y="991.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (48 samples, 0.17%)</title><rect x="21.1981%" y="965" width="0.1725%" height="15" fill="rgb(248,54,15)" fg:x="5899" fg:w="48"/><text x="21.4481%" y="975.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (17 samples, 0.06%)</title><rect x="21.3095%" y="949" width="0.0611%" height="15" fill="rgb(223,116,6)" fg:x="5930" fg:w="17"/><text x="21.5595%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (17 samples, 0.06%)</title><rect x="21.3095%" y="933" width="0.0611%" height="15" fill="rgb(205,125,38)" fg:x="5930" fg:w="17"/><text x="21.5595%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="21.3885%" y="965" width="0.0108%" height="15" fill="rgb(251,78,38)" fg:x="5952" fg:w="3"/><text x="21.6385%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="21.3885%" y="949" width="0.0108%" height="15" fill="rgb(253,78,28)" fg:x="5952" fg:w="3"/><text x="21.6385%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="21.3885%" y="933" width="0.0108%" height="15" fill="rgb(209,120,3)" fg:x="5952" fg:w="3"/><text x="21.6385%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="21.3885%" y="917" width="0.0108%" height="15" fill="rgb(238,229,9)" fg:x="5952" fg:w="3"/><text x="21.6385%" y="927.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="21.3885%" y="901" width="0.0108%" height="15" fill="rgb(253,159,18)" fg:x="5952" fg:w="3"/><text x="21.6385%" y="911.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (8 samples, 0.03%)</title><rect x="21.3849%" y="981" width="0.0287%" height="15" fill="rgb(244,42,34)" fg:x="5951" fg:w="8"/><text x="21.6349%" y="991.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_matches_data_routes (10 samples, 0.04%)</title><rect x="21.3813%" y="1013" width="0.0359%" height="15" fill="rgb(224,8,7)" fg:x="5950" fg:w="10"/><text x="21.6313%" y="1023.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (9 samples, 0.03%)</title><rect x="21.3849%" y="997" width="0.0323%" height="15" fill="rgb(210,201,45)" fg:x="5951" fg:w="9"/><text x="21.6349%" y="1007.50"></text></g><g><title>zenoh::net::routing::pubsub::propagate_simple_subscription (5 samples, 0.02%)</title><rect x="21.4173%" y="1013" width="0.0180%" height="15" fill="rgb(252,185,21)" fg:x="5960" fg:w="5"/><text x="21.6673%" y="1023.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (4 samples, 0.01%)</title><rect x="21.4532%" y="997" width="0.0144%" height="15" fill="rgb(223,131,1)" fg:x="5970" fg:w="4"/><text x="21.7032%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (4 samples, 0.01%)</title><rect x="21.4532%" y="981" width="0.0144%" height="15" fill="rgb(245,141,16)" fg:x="5970" fg:w="4"/><text x="21.7032%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (3 samples, 0.01%)</title><rect x="21.4568%" y="965" width="0.0108%" height="15" fill="rgb(229,55,45)" fg:x="5971" fg:w="3"/><text x="21.7068%" y="975.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_subscriber (29 samples, 0.10%)</title><rect x="21.3706%" y="1045" width="0.1042%" height="15" fill="rgb(208,92,15)" fg:x="5947" fg:w="29"/><text x="21.6206%" y="1055.50"></text></g><g><title>zenoh::net::routing::pubsub::declare_client_subscription (27 samples, 0.10%)</title><rect x="21.3777%" y="1029" width="0.0970%" height="15" fill="rgb(234,185,47)" fg:x="5949" fg:w="27"/><text x="21.6277%" y="1039.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (9 samples, 0.03%)</title><rect x="21.4424%" y="1013" width="0.0323%" height="15" fill="rgb(253,104,50)" fg:x="5967" fg:w="9"/><text x="21.6924%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,904 samples, 17.62%)</title><rect x="3.8990%" y="1237" width="17.6225%" height="15" fill="rgb(205,70,7)" fg:x="1085" fg:w="4904"/><text x="4.1490%" y="1247.50">&lt;core::future::from_generat..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (1,651 samples, 5.93%)</title><rect x="15.5886%" y="1221" width="5.9329%" height="15" fill="rgb(240,178,43)" fg:x="4338" fg:w="1651"/><text x="15.8386%" y="1231.50">zenoh_tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,651 samples, 5.93%)</title><rect x="15.5886%" y="1205" width="5.9329%" height="15" fill="rgb(214,112,2)" fg:x="4338" fg:w="1651"/><text x="15.8386%" y="1215.50">&lt;core::f..</text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (1,651 samples, 5.93%)</title><rect x="15.5886%" y="1189" width="5.9329%" height="15" fill="rgb(206,46,17)" fg:x="4338" fg:w="1651"/><text x="15.8386%" y="1199.50">zenoh_tr..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,651 samples, 5.93%)</title><rect x="15.5886%" y="1173" width="5.9329%" height="15" fill="rgb(225,220,16)" fg:x="4338" fg:w="1651"/><text x="15.8386%" y="1183.50">&lt;core::f..</text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (1,651 samples, 5.93%)</title><rect x="15.5886%" y="1157" width="5.9329%" height="15" fill="rgb(238,65,40)" fg:x="4338" fg:w="1651"/><text x="15.8386%" y="1167.50">zenoh_tr..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (1,428 samples, 5.13%)</title><rect x="16.3900%" y="1141" width="5.1315%" height="15" fill="rgb(230,151,21)" fg:x="4561" fg:w="1428"/><text x="16.6400%" y="1151.50">zenoh_..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (1,428 samples, 5.13%)</title><rect x="16.3900%" y="1125" width="5.1315%" height="15" fill="rgb(218,58,49)" fg:x="4561" fg:w="1428"/><text x="16.6400%" y="1135.50">zenoh_..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (1,428 samples, 5.13%)</title><rect x="16.3900%" y="1109" width="5.1315%" height="15" fill="rgb(219,179,14)" fg:x="4561" fg:w="1428"/><text x="16.6400%" y="1119.50">zenoh_..</text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,428 samples, 5.13%)</title><rect x="16.3900%" y="1093" width="5.1315%" height="15" fill="rgb(223,72,1)" fg:x="4561" fg:w="1428"/><text x="16.6400%" y="1103.50">&lt;zenoh..</text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,428 samples, 5.13%)</title><rect x="16.3900%" y="1077" width="5.1315%" height="15" fill="rgb(238,126,10)" fg:x="4561" fg:w="1428"/><text x="16.6400%" y="1087.50">&lt;zenoh..</text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,428 samples, 5.13%)</title><rect x="16.3900%" y="1061" width="5.1315%" height="15" fill="rgb(224,206,38)" fg:x="4561" fg:w="1428"/><text x="16.6400%" y="1071.50">&lt;zenoh..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;zenoh_protocol::proto::msg::Declaration&gt;&gt; (12 samples, 0.04%)</title><rect x="21.4784%" y="1045" width="0.0431%" height="15" fill="rgb(212,201,54)" fg:x="5977" fg:w="12"/><text x="21.7284%" y="1055.50"></text></g><g><title>cfree (10 samples, 0.04%)</title><rect x="21.4856%" y="1029" width="0.0359%" height="15" fill="rgb(218,154,48)" fg:x="5979" fg:w="10"/><text x="21.7356%" y="1039.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="21.5071%" y="1013" width="0.0144%" height="15" fill="rgb(232,93,24)" fg:x="5985" fg:w="4"/><text x="21.7571%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (3 samples, 0.01%)</title><rect x="21.5287%" y="1237" width="0.0108%" height="15" fill="rgb(245,30,21)" fg:x="5991" fg:w="3"/><text x="21.7787%" y="1247.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.01%)</title><rect x="21.5395%" y="1237" width="0.0108%" height="15" fill="rgb(242,148,29)" fg:x="5994" fg:w="3"/><text x="21.7895%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="21.5395%" y="1221" width="0.0108%" height="15" fill="rgb(244,153,54)" fg:x="5994" fg:w="3"/><text x="21.7895%" y="1231.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="21.5574%" y="1221" width="0.0719%" height="15" fill="rgb(252,87,22)" fg:x="5999" fg:w="20"/><text x="21.8074%" y="1231.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (21 samples, 0.08%)</title><rect x="21.6437%" y="389" width="0.0755%" height="15" fill="rgb(210,51,29)" fg:x="6023" fg:w="21"/><text x="21.8937%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (21 samples, 0.08%)</title><rect x="21.6437%" y="373" width="0.0755%" height="15" fill="rgb(242,136,47)" fg:x="6023" fg:w="21"/><text x="21.8937%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (64 samples, 0.23%)</title><rect x="21.6293%" y="405" width="0.2300%" height="15" fill="rgb(238,68,4)" fg:x="6019" fg:w="64"/><text x="21.8793%" y="415.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::skip_bytes_no_check (39 samples, 0.14%)</title><rect x="21.7191%" y="389" width="0.1401%" height="15" fill="rgb(242,161,30)" fg:x="6044" fg:w="39"/><text x="21.9691%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (11 samples, 0.04%)</title><rect x="21.9132%" y="357" width="0.0395%" height="15" fill="rgb(218,58,44)" fg:x="6098" fg:w="11"/><text x="22.1632%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (11 samples, 0.04%)</title><rect x="21.9132%" y="341" width="0.0395%" height="15" fill="rgb(252,125,32)" fg:x="6098" fg:w="11"/><text x="22.1632%" y="351.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::curr_slice (3 samples, 0.01%)</title><rect x="21.9527%" y="357" width="0.0108%" height="15" fill="rgb(219,178,0)" fg:x="6109" fg:w="3"/><text x="22.2027%" y="367.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::get_zslice (3 samples, 0.01%)</title><rect x="21.9527%" y="341" width="0.0108%" height="15" fill="rgb(213,152,7)" fg:x="6109" fg:w="3"/><text x="22.2027%" y="351.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (32 samples, 0.11%)</title><rect x="21.8593%" y="405" width="0.1150%" height="15" fill="rgb(249,109,34)" fg:x="6083" fg:w="32"/><text x="22.1093%" y="415.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (32 samples, 0.11%)</title><rect x="21.8593%" y="389" width="0.1150%" height="15" fill="rgb(232,96,21)" fg:x="6083" fg:w="32"/><text x="22.1093%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (28 samples, 0.10%)</title><rect x="21.8737%" y="373" width="0.1006%" height="15" fill="rgb(228,27,39)" fg:x="6087" fg:w="28"/><text x="22.1237%" y="383.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::skip_bytes_no_check (3 samples, 0.01%)</title><rect x="21.9635%" y="357" width="0.0108%" height="15" fill="rgb(211,182,52)" fg:x="6112" fg:w="3"/><text x="22.2135%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (5 samples, 0.02%)</title><rect x="21.9851%" y="341" width="0.0180%" height="15" fill="rgb(234,178,38)" fg:x="6118" fg:w="5"/><text x="22.2351%" y="351.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (5 samples, 0.02%)</title><rect x="21.9851%" y="325" width="0.0180%" height="15" fill="rgb(221,111,3)" fg:x="6118" fg:w="5"/><text x="22.2351%" y="335.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="21.9922%" y="309" width="0.0108%" height="15" fill="rgb(228,175,21)" fg:x="6120" fg:w="3"/><text x="22.2422%" y="319.50"></text></g><g><title>zenoh_buffers::zslice::ZSliceBuffer::as_slice (3 samples, 0.01%)</title><rect x="21.9922%" y="293" width="0.0108%" height="15" fill="rgb(228,174,43)" fg:x="6120" fg:w="3"/><text x="22.2422%" y="303.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declaration (105 samples, 0.38%)</title><rect x="21.6293%" y="421" width="0.3773%" height="15" fill="rgb(211,191,0)" fg:x="6019" fg:w="105"/><text x="21.8793%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_key_expr (9 samples, 0.03%)</title><rect x="21.9743%" y="405" width="0.0323%" height="15" fill="rgb(253,117,3)" fg:x="6115" fg:w="9"/><text x="22.2243%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (9 samples, 0.03%)</title><rect x="21.9743%" y="389" width="0.0323%" height="15" fill="rgb(241,127,19)" fg:x="6115" fg:w="9"/><text x="22.2243%" y="399.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (9 samples, 0.03%)</title><rect x="21.9743%" y="373" width="0.0323%" height="15" fill="rgb(218,103,12)" fg:x="6115" fg:w="9"/><text x="22.2243%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (9 samples, 0.03%)</title><rect x="21.9743%" y="357" width="0.0323%" height="15" fill="rgb(236,214,43)" fg:x="6115" fg:w="9"/><text x="22.2243%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (108 samples, 0.39%)</title><rect x="21.6293%" y="1045" width="0.3881%" height="15" fill="rgb(244,144,19)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="1055.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (108 samples, 0.39%)</title><rect x="21.6293%" y="1029" width="0.3881%" height="15" fill="rgb(246,188,10)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (108 samples, 0.39%)</title><rect x="21.6293%" y="1013" width="0.3881%" height="15" fill="rgb(212,193,33)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="1023.50"></text></g><g><title>std::panicking::try (108 samples, 0.39%)</title><rect x="21.6293%" y="997" width="0.3881%" height="15" fill="rgb(241,51,29)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (108 samples, 0.39%)</title><rect x="21.6293%" y="981" width="0.3881%" height="15" fill="rgb(211,58,19)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="991.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="965" width="0.3881%" height="15" fill="rgb(229,111,26)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (108 samples, 0.39%)</title><rect x="21.6293%" y="949" width="0.3881%" height="15" fill="rgb(213,115,40)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (108 samples, 0.39%)</title><rect x="21.6293%" y="933" width="0.3881%" height="15" fill="rgb(209,56,44)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="943.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="917" width="0.3881%" height="15" fill="rgb(230,108,32)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on (108 samples, 0.39%)</title><rect x="21.6293%" y="901" width="0.3881%" height="15" fill="rgb(216,165,31)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="885" width="0.3881%" height="15" fill="rgb(218,122,21)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="895.50"></text></g><g><title>async_io::driver::block_on (108 samples, 0.39%)</title><rect x="21.6293%" y="869" width="0.3881%" height="15" fill="rgb(223,224,47)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="853" width="0.3881%" height="15" fill="rgb(238,102,44)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="837" width="0.3881%" height="15" fill="rgb(236,46,40)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="821" width="0.3881%" height="15" fill="rgb(247,202,50)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="831.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="805" width="0.3881%" height="15" fill="rgb(209,99,20)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="789" width="0.3881%" height="15" fill="rgb(252,27,34)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="773" width="0.3881%" height="15" fill="rgb(215,206,23)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (108 samples, 0.39%)</title><rect x="21.6293%" y="757" width="0.3881%" height="15" fill="rgb(212,135,36)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="741" width="0.3881%" height="15" fill="rgb(240,189,1)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="725" width="0.3881%" height="15" fill="rgb(242,56,20)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="709" width="0.3881%" height="15" fill="rgb(247,132,33)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="693" width="0.3881%" height="15" fill="rgb(208,149,11)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (108 samples, 0.39%)</title><rect x="21.6293%" y="677" width="0.3881%" height="15" fill="rgb(211,33,11)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (108 samples, 0.39%)</title><rect x="21.6293%" y="661" width="0.3881%" height="15" fill="rgb(221,29,38)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (108 samples, 0.39%)</title><rect x="21.6293%" y="645" width="0.3881%" height="15" fill="rgb(206,182,49)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="629" width="0.3881%" height="15" fill="rgb(216,140,1)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="613" width="0.3881%" height="15" fill="rgb(232,57,40)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="597" width="0.3881%" height="15" fill="rgb(224,186,18)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="607.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="581" width="0.3881%" height="15" fill="rgb(215,121,11)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="565" width="0.3881%" height="15" fill="rgb(245,147,10)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="575.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="549" width="0.3881%" height="15" fill="rgb(238,153,13)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.39%)</title><rect x="21.6293%" y="533" width="0.3881%" height="15" fill="rgb(233,108,0)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (108 samples, 0.39%)</title><rect x="21.6293%" y="517" width="0.3881%" height="15" fill="rgb(212,157,17)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (108 samples, 0.39%)</title><rect x="21.6293%" y="501" width="0.3881%" height="15" fill="rgb(225,213,38)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (108 samples, 0.39%)</title><rect x="21.6293%" y="485" width="0.3881%" height="15" fill="rgb(248,16,11)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (108 samples, 0.39%)</title><rect x="21.6293%" y="469" width="0.3881%" height="15" fill="rgb(241,33,4)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declare (108 samples, 0.39%)</title><rect x="21.6293%" y="453" width="0.3881%" height="15" fill="rgb(222,26,43)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declarations (108 samples, 0.39%)</title><rect x="21.6293%" y="437" width="0.3881%" height="15" fill="rgb(243,29,36)" fg:x="6019" fg:w="108"/><text x="21.8793%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="22.0066%" y="421" width="0.0108%" height="15" fill="rgb(241,9,27)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="22.0066%" y="405" width="0.0108%" height="15" fill="rgb(205,117,26)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="22.0066%" y="389" width="0.0108%" height="15" fill="rgb(209,80,39)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="22.0066%" y="373" width="0.0108%" height="15" fill="rgb(239,155,6)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="22.0066%" y="357" width="0.0108%" height="15" fill="rgb(212,104,12)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="22.0066%" y="341" width="0.0108%" height="15" fill="rgb(234,204,3)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="22.0066%" y="325" width="0.0108%" height="15" fill="rgb(251,218,7)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="335.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="22.0066%" y="309" width="0.0108%" height="15" fill="rgb(221,81,32)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="22.0066%" y="293" width="0.0108%" height="15" fill="rgb(214,152,26)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="303.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="22.0066%" y="277" width="0.0108%" height="15" fill="rgb(223,22,3)" fg:x="6124" fg:w="3"/><text x="22.2566%" y="287.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="22.0174%" y="533" width="0.0323%" height="15" fill="rgb(207,174,7)" fg:x="6127" fg:w="9"/><text x="22.2674%" y="543.50"></text></g><g><title>event_listener::Event::listen (9 samples, 0.03%)</title><rect x="22.0174%" y="517" width="0.0323%" height="15" fill="rgb(224,19,52)" fg:x="6127" fg:w="9"/><text x="22.2674%" y="527.50"></text></g><g><title>event_listener::List::insert (7 samples, 0.03%)</title><rect x="22.0246%" y="501" width="0.0252%" height="15" fill="rgb(228,24,14)" fg:x="6129" fg:w="7"/><text x="22.2746%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="22.0246%" y="485" width="0.0252%" height="15" fill="rgb(230,153,43)" fg:x="6129" fg:w="7"/><text x="22.2746%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.03%)</title><rect x="22.0246%" y="469" width="0.0252%" height="15" fill="rgb(231,106,12)" fg:x="6129" fg:w="7"/><text x="22.2746%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="22.0246%" y="453" width="0.0252%" height="15" fill="rgb(215,92,2)" fg:x="6129" fg:w="7"/><text x="22.2746%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="22.0246%" y="437" width="0.0252%" height="15" fill="rgb(249,143,25)" fg:x="6129" fg:w="7"/><text x="22.2746%" y="447.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="22.0246%" y="421" width="0.0252%" height="15" fill="rgb(252,7,35)" fg:x="6129" fg:w="7"/><text x="22.2746%" y="431.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="22.0246%" y="405" width="0.0252%" height="15" fill="rgb(216,69,40)" fg:x="6129" fg:w="7"/><text x="22.2746%" y="415.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="22.0246%" y="389" width="0.0252%" height="15" fill="rgb(240,36,33)" fg:x="6129" fg:w="7"/><text x="22.2746%" y="399.50"></text></g><g><title>fastrand::RNG::__getit (51 samples, 0.18%)</title><rect x="22.0533%" y="341" width="0.1833%" height="15" fill="rgb(231,128,14)" fg:x="6137" fg:w="51"/><text x="22.3033%" y="351.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (43 samples, 0.15%)</title><rect x="22.0821%" y="325" width="0.1545%" height="15" fill="rgb(245,143,14)" fg:x="6145" fg:w="43"/><text x="22.3321%" y="335.50"></text></g><g><title>fastrand::usize (58 samples, 0.21%)</title><rect x="22.0497%" y="389" width="0.2084%" height="15" fill="rgb(222,130,28)" fg:x="6136" fg:w="58"/><text x="22.2997%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (58 samples, 0.21%)</title><rect x="22.0497%" y="373" width="0.2084%" height="15" fill="rgb(212,10,48)" fg:x="6136" fg:w="58"/><text x="22.2997%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (58 samples, 0.21%)</title><rect x="22.0497%" y="357" width="0.2084%" height="15" fill="rgb(254,118,45)" fg:x="6136" fg:w="58"/><text x="22.2997%" y="367.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (5 samples, 0.02%)</title><rect x="22.2402%" y="341" width="0.0180%" height="15" fill="rgb(228,6,45)" fg:x="6189" fg:w="5"/><text x="22.4902%" y="351.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (59 samples, 0.21%)</title><rect x="22.0497%" y="405" width="0.2120%" height="15" fill="rgb(241,18,35)" fg:x="6136" fg:w="59"/><text x="22.2997%" y="415.50"></text></g><g><title>async_executor::State::notify (7 samples, 0.03%)</title><rect x="22.2618%" y="405" width="0.0252%" height="15" fill="rgb(227,214,53)" fg:x="6195" fg:w="7"/><text x="22.5118%" y="415.50"></text></g><g><title>core::task::wake::Waker::wake (7 samples, 0.03%)</title><rect x="22.2618%" y="389" width="0.0252%" height="15" fill="rgb(224,107,51)" fg:x="6195" fg:w="7"/><text x="22.5118%" y="399.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (7 samples, 0.03%)</title><rect x="22.2618%" y="373" width="0.0252%" height="15" fill="rgb(248,60,28)" fg:x="6195" fg:w="7"/><text x="22.5118%" y="383.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (7 samples, 0.03%)</title><rect x="22.2618%" y="357" width="0.0252%" height="15" fill="rgb(249,101,23)" fg:x="6195" fg:w="7"/><text x="22.5118%" y="367.50"></text></g><g><title>async_io::reactor::Reactor::notify (7 samples, 0.03%)</title><rect x="22.2618%" y="341" width="0.0252%" height="15" fill="rgb(228,51,19)" fg:x="6195" fg:w="7"/><text x="22.5118%" y="351.50"></text></g><g><title>polling::Poller::notify (7 samples, 0.03%)</title><rect x="22.2618%" y="325" width="0.0252%" height="15" fill="rgb(213,20,6)" fg:x="6195" fg:w="7"/><text x="22.5118%" y="335.50"></text></g><g><title>polling::epoll::Poller::notify (6 samples, 0.02%)</title><rect x="22.2653%" y="309" width="0.0216%" height="15" fill="rgb(212,124,10)" fg:x="6196" fg:w="6"/><text x="22.5153%" y="319.50"></text></g><g><title>write (6 samples, 0.02%)</title><rect x="22.2653%" y="293" width="0.0216%" height="15" fill="rgb(248,3,40)" fg:x="6196" fg:w="6"/><text x="22.5153%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="22.2653%" y="277" width="0.0216%" height="15" fill="rgb(223,178,23)" fg:x="6196" fg:w="6"/><text x="22.5153%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="22.2653%" y="261" width="0.0216%" height="15" fill="rgb(240,132,45)" fg:x="6196" fg:w="6"/><text x="22.5153%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="22.2653%" y="245" width="0.0216%" height="15" fill="rgb(245,164,36)" fg:x="6196" fg:w="6"/><text x="22.5153%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="22.2653%" y="229" width="0.0216%" height="15" fill="rgb(231,188,53)" fg:x="6196" fg:w="6"/><text x="22.5153%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="22.2653%" y="213" width="0.0216%" height="15" fill="rgb(237,198,39)" fg:x="6196" fg:w="6"/><text x="22.5153%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="22.2689%" y="197" width="0.0180%" height="15" fill="rgb(223,120,35)" fg:x="6197" fg:w="5"/><text x="22.5189%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="22.2725%" y="181" width="0.0144%" height="15" fill="rgb(253,107,49)" fg:x="6198" fg:w="4"/><text x="22.5225%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="22.2761%" y="165" width="0.0108%" height="15" fill="rgb(216,44,31)" fg:x="6199" fg:w="3"/><text x="22.5261%" y="175.50"></text></g><g><title>async_executor::Sleepers::insert (3 samples, 0.01%)</title><rect x="22.2869%" y="389" width="0.0108%" height="15" fill="rgb(253,87,21)" fg:x="6202" fg:w="3"/><text x="22.5369%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="22.2869%" y="373" width="0.0108%" height="15" fill="rgb(226,18,2)" fg:x="6202" fg:w="3"/><text x="22.5369%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="22.2869%" y="357" width="0.0108%" height="15" fill="rgb(216,8,46)" fg:x="6202" fg:w="3"/><text x="22.5369%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="22.2869%" y="341" width="0.0108%" height="15" fill="rgb(226,140,39)" fg:x="6202" fg:w="3"/><text x="22.5369%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="22.2869%" y="325" width="0.0108%" height="15" fill="rgb(221,194,54)" fg:x="6202" fg:w="3"/><text x="22.5369%" y="335.50"></text></g><g><title>async_executor::Ticker::sleep (7 samples, 0.03%)</title><rect x="22.2869%" y="405" width="0.0252%" height="15" fill="rgb(213,92,11)" fg:x="6202" fg:w="7"/><text x="22.5369%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="22.2977%" y="389" width="0.0144%" height="15" fill="rgb(229,162,46)" fg:x="6205" fg:w="4"/><text x="22.5477%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (4 samples, 0.01%)</title><rect x="22.2977%" y="373" width="0.0144%" height="15" fill="rgb(214,111,36)" fg:x="6205" fg:w="4"/><text x="22.5477%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (4 samples, 0.01%)</title><rect x="22.2977%" y="357" width="0.0144%" height="15" fill="rgb(207,6,21)" fg:x="6205" fg:w="4"/><text x="22.5477%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (4 samples, 0.01%)</title><rect x="22.2977%" y="341" width="0.0144%" height="15" fill="rgb(213,127,38)" fg:x="6205" fg:w="4"/><text x="22.5477%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (3 samples, 0.01%)</title><rect x="22.3013%" y="325" width="0.0108%" height="15" fill="rgb(238,118,32)" fg:x="6206" fg:w="3"/><text x="22.5513%" y="335.50"></text></g><g><title>__lll_lock_wait_private (43 samples, 0.15%)</title><rect x="22.3264%" y="293" width="0.1545%" height="15" fill="rgb(240,139,39)" fg:x="6213" fg:w="43"/><text x="22.5764%" y="303.50"></text></g><g><title>[unknown] (43 samples, 0.15%)</title><rect x="22.3264%" y="277" width="0.1545%" height="15" fill="rgb(235,10,37)" fg:x="6213" fg:w="43"/><text x="22.5764%" y="287.50"></text></g><g><title>[unknown] (43 samples, 0.15%)</title><rect x="22.3264%" y="261" width="0.1545%" height="15" fill="rgb(249,171,38)" fg:x="6213" fg:w="43"/><text x="22.5764%" y="271.50"></text></g><g><title>[unknown] (43 samples, 0.15%)</title><rect x="22.3264%" y="245" width="0.1545%" height="15" fill="rgb(242,144,32)" fg:x="6213" fg:w="43"/><text x="22.5764%" y="255.50"></text></g><g><title>[unknown] (43 samples, 0.15%)</title><rect x="22.3264%" y="229" width="0.1545%" height="15" fill="rgb(217,117,21)" fg:x="6213" fg:w="43"/><text x="22.5764%" y="239.50"></text></g><g><title>[unknown] (42 samples, 0.15%)</title><rect x="22.3300%" y="213" width="0.1509%" height="15" fill="rgb(249,87,1)" fg:x="6214" fg:w="42"/><text x="22.5800%" y="223.50"></text></g><g><title>[unknown] (42 samples, 0.15%)</title><rect x="22.3300%" y="197" width="0.1509%" height="15" fill="rgb(248,196,48)" fg:x="6214" fg:w="42"/><text x="22.5800%" y="207.50"></text></g><g><title>[unknown] (42 samples, 0.15%)</title><rect x="22.3300%" y="181" width="0.1509%" height="15" fill="rgb(251,206,33)" fg:x="6214" fg:w="42"/><text x="22.5800%" y="191.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="22.3408%" y="165" width="0.1401%" height="15" fill="rgb(232,141,28)" fg:x="6217" fg:w="39"/><text x="22.5908%" y="175.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="22.3408%" y="149" width="0.1401%" height="15" fill="rgb(209,167,14)" fg:x="6217" fg:w="39"/><text x="22.5908%" y="159.50"></text></g><g><title>[unknown] (35 samples, 0.13%)</title><rect x="22.3552%" y="133" width="0.1258%" height="15" fill="rgb(225,11,50)" fg:x="6221" fg:w="35"/><text x="22.6052%" y="143.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="22.3767%" y="117" width="0.1042%" height="15" fill="rgb(209,50,20)" fg:x="6227" fg:w="29"/><text x="22.6267%" y="127.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="22.3911%" y="101" width="0.0898%" height="15" fill="rgb(212,17,46)" fg:x="6231" fg:w="25"/><text x="22.6411%" y="111.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.44%)</title><rect x="22.0497%" y="501" width="0.4420%" height="15" fill="rgb(216,101,39)" fg:x="6136" fg:w="123"/><text x="22.2997%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (123 samples, 0.44%)</title><rect x="22.0497%" y="485" width="0.4420%" height="15" fill="rgb(212,228,48)" fg:x="6136" fg:w="123"/><text x="22.2997%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.44%)</title><rect x="22.0497%" y="469" width="0.4420%" height="15" fill="rgb(250,6,50)" fg:x="6136" fg:w="123"/><text x="22.2997%" y="479.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (123 samples, 0.44%)</title><rect x="22.0497%" y="453" width="0.4420%" height="15" fill="rgb(250,160,48)" fg:x="6136" fg:w="123"/><text x="22.2997%" y="463.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (123 samples, 0.44%)</title><rect x="22.0497%" y="437" width="0.4420%" height="15" fill="rgb(244,216,33)" fg:x="6136" fg:w="123"/><text x="22.2997%" y="447.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (123 samples, 0.44%)</title><rect x="22.0497%" y="421" width="0.4420%" height="15" fill="rgb(207,157,5)" fg:x="6136" fg:w="123"/><text x="22.2997%" y="431.50"></text></g><g><title>async_executor::Ticker::wake (50 samples, 0.18%)</title><rect x="22.3121%" y="405" width="0.1797%" height="15" fill="rgb(228,199,8)" fg:x="6209" fg:w="50"/><text x="22.5621%" y="415.50"></text></g><g><title>async_executor::Sleepers::remove (50 samples, 0.18%)</title><rect x="22.3121%" y="389" width="0.1797%" height="15" fill="rgb(227,80,20)" fg:x="6209" fg:w="50"/><text x="22.5621%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (50 samples, 0.18%)</title><rect x="22.3121%" y="373" width="0.1797%" height="15" fill="rgb(222,9,33)" fg:x="6209" fg:w="50"/><text x="22.5621%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (50 samples, 0.18%)</title><rect x="22.3121%" y="357" width="0.1797%" height="15" fill="rgb(239,44,28)" fg:x="6209" fg:w="50"/><text x="22.5621%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (50 samples, 0.18%)</title><rect x="22.3121%" y="341" width="0.1797%" height="15" fill="rgb(249,187,43)" fg:x="6209" fg:w="50"/><text x="22.5621%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.18%)</title><rect x="22.3121%" y="325" width="0.1797%" height="15" fill="rgb(216,141,28)" fg:x="6209" fg:w="50"/><text x="22.5621%" y="335.50"></text></g><g><title>malloc (49 samples, 0.18%)</title><rect x="22.3157%" y="309" width="0.1761%" height="15" fill="rgb(230,154,53)" fg:x="6210" fg:w="49"/><text x="22.5657%" y="319.50"></text></g><g><title>__lll_lock_wake_private (3 samples, 0.01%)</title><rect x="22.4810%" y="293" width="0.0108%" height="15" fill="rgb(227,82,4)" fg:x="6256" fg:w="3"/><text x="22.7310%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="22.4810%" y="277" width="0.0108%" height="15" fill="rgb(220,107,16)" fg:x="6256" fg:w="3"/><text x="22.7310%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="22.4810%" y="261" width="0.0108%" height="15" fill="rgb(207,187,2)" fg:x="6256" fg:w="3"/><text x="22.7310%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="22.4810%" y="245" width="0.0108%" height="15" fill="rgb(210,162,52)" fg:x="6256" fg:w="3"/><text x="22.7310%" y="255.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (134 samples, 0.48%)</title><rect x="22.0174%" y="549" width="0.4815%" height="15" fill="rgb(217,216,49)" fg:x="6127" fg:w="134"/><text x="22.2674%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (125 samples, 0.45%)</title><rect x="22.0497%" y="533" width="0.4492%" height="15" fill="rgb(218,146,49)" fg:x="6136" fg:w="125"/><text x="22.2997%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (125 samples, 0.45%)</title><rect x="22.0497%" y="517" width="0.4492%" height="15" fill="rgb(216,55,40)" fg:x="6136" fg:w="125"/><text x="22.2997%" y="527.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (141 samples, 0.51%)</title><rect x="22.0174%" y="677" width="0.5067%" height="15" fill="rgb(208,196,21)" fg:x="6127" fg:w="141"/><text x="22.2674%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (141 samples, 0.51%)</title><rect x="22.0174%" y="661" width="0.5067%" height="15" fill="rgb(242,117,42)" fg:x="6127" fg:w="141"/><text x="22.2674%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (141 samples, 0.51%)</title><rect x="22.0174%" y="645" width="0.5067%" height="15" fill="rgb(210,11,23)" fg:x="6127" fg:w="141"/><text x="22.2674%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (141 samples, 0.51%)</title><rect x="22.0174%" y="629" width="0.5067%" height="15" fill="rgb(217,110,2)" fg:x="6127" fg:w="141"/><text x="22.2674%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (141 samples, 0.51%)</title><rect x="22.0174%" y="613" width="0.5067%" height="15" fill="rgb(229,77,54)" fg:x="6127" fg:w="141"/><text x="22.2674%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (141 samples, 0.51%)</title><rect x="22.0174%" y="597" width="0.5067%" height="15" fill="rgb(218,53,16)" fg:x="6127" fg:w="141"/><text x="22.2674%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (141 samples, 0.51%)</title><rect x="22.0174%" y="581" width="0.5067%" height="15" fill="rgb(215,38,13)" fg:x="6127" fg:w="141"/><text x="22.2674%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (141 samples, 0.51%)</title><rect x="22.0174%" y="565" width="0.5067%" height="15" fill="rgb(235,42,18)" fg:x="6127" fg:w="141"/><text x="22.2674%" y="575.50"></text></g><g><title>async_executor::Executor::state (7 samples, 0.03%)</title><rect x="22.4989%" y="549" width="0.0252%" height="15" fill="rgb(219,66,54)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="559.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (7 samples, 0.03%)</title><rect x="22.4989%" y="533" width="0.0252%" height="15" fill="rgb(222,205,4)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (7 samples, 0.03%)</title><rect x="22.4989%" y="517" width="0.0252%" height="15" fill="rgb(227,213,46)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="527.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (7 samples, 0.03%)</title><rect x="22.4989%" y="501" width="0.0252%" height="15" fill="rgb(250,145,42)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="511.50"></text></g><g><title>once_cell::imp::initialize_or_wait (7 samples, 0.03%)</title><rect x="22.4989%" y="485" width="0.0252%" height="15" fill="rgb(219,15,2)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.03%)</title><rect x="22.4989%" y="469" width="0.0252%" height="15" fill="rgb(231,181,52)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="479.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (7 samples, 0.03%)</title><rect x="22.4989%" y="453" width="0.0252%" height="15" fill="rgb(235,1,42)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (7 samples, 0.03%)</title><rect x="22.4989%" y="437" width="0.0252%" height="15" fill="rgb(249,88,27)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="447.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (7 samples, 0.03%)</title><rect x="22.4989%" y="421" width="0.0252%" height="15" fill="rgb(235,145,16)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="22.4989%" y="405" width="0.0252%" height="15" fill="rgb(237,114,19)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.03%)</title><rect x="22.4989%" y="389" width="0.0252%" height="15" fill="rgb(238,51,50)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="22.4989%" y="373" width="0.0252%" height="15" fill="rgb(205,194,25)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="22.4989%" y="357" width="0.0252%" height="15" fill="rgb(215,203,17)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="367.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="22.4989%" y="341" width="0.0252%" height="15" fill="rgb(233,112,49)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="351.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="22.4989%" y="325" width="0.0252%" height="15" fill="rgb(241,130,26)" fg:x="6261" fg:w="7"/><text x="22.7489%" y="335.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="22.5025%" y="309" width="0.0216%" height="15" fill="rgb(252,223,19)" fg:x="6262" fg:w="6"/><text x="22.7525%" y="319.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (148 samples, 0.53%)</title><rect x="22.0174%" y="693" width="0.5318%" height="15" fill="rgb(211,95,25)" fg:x="6127" fg:w="148"/><text x="22.2674%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.03%)</title><rect x="22.5241%" y="677" width="0.0252%" height="15" fill="rgb(251,182,27)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="687.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7 samples, 0.03%)</title><rect x="22.5241%" y="661" width="0.0252%" height="15" fill="rgb(238,24,4)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.03%)</title><rect x="22.5241%" y="645" width="0.0252%" height="15" fill="rgb(224,220,25)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (7 samples, 0.03%)</title><rect x="22.5241%" y="629" width="0.0252%" height="15" fill="rgb(239,133,26)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.03%)</title><rect x="22.5241%" y="613" width="0.0252%" height="15" fill="rgb(211,94,48)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (7 samples, 0.03%)</title><rect x="22.5241%" y="597" width="0.0252%" height="15" fill="rgb(239,87,6)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.03%)</title><rect x="22.5241%" y="581" width="0.0252%" height="15" fill="rgb(227,62,0)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (7 samples, 0.03%)</title><rect x="22.5241%" y="565" width="0.0252%" height="15" fill="rgb(211,226,4)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (7 samples, 0.03%)</title><rect x="22.5241%" y="549" width="0.0252%" height="15" fill="rgb(253,38,52)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="559.50"></text></g><g><title>async_executor::Sleepers::insert (7 samples, 0.03%)</title><rect x="22.5241%" y="533" width="0.0252%" height="15" fill="rgb(229,126,40)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.03%)</title><rect x="22.5241%" y="517" width="0.0252%" height="15" fill="rgb(229,165,44)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.03%)</title><rect x="22.5241%" y="501" width="0.0252%" height="15" fill="rgb(247,95,47)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.03%)</title><rect x="22.5241%" y="485" width="0.0252%" height="15" fill="rgb(216,140,30)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.03%)</title><rect x="22.5241%" y="469" width="0.0252%" height="15" fill="rgb(246,214,8)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="479.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="22.5241%" y="453" width="0.0252%" height="15" fill="rgb(227,224,15)" fg:x="6268" fg:w="7"/><text x="22.7741%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (163 samples, 0.59%)</title><rect x="22.0174%" y="757" width="0.5857%" height="15" fill="rgb(233,175,4)" fg:x="6127" fg:w="163"/><text x="22.2674%" y="767.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (163 samples, 0.59%)</title><rect x="22.0174%" y="741" width="0.5857%" height="15" fill="rgb(221,66,45)" fg:x="6127" fg:w="163"/><text x="22.2674%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (163 samples, 0.59%)</title><rect x="22.0174%" y="725" width="0.5857%" height="15" fill="rgb(221,178,18)" fg:x="6127" fg:w="163"/><text x="22.2674%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (163 samples, 0.59%)</title><rect x="22.0174%" y="709" width="0.5857%" height="15" fill="rgb(213,81,29)" fg:x="6127" fg:w="163"/><text x="22.2674%" y="719.50"></text></g><g><title>async_executor::Executor::state (15 samples, 0.05%)</title><rect x="22.5492%" y="693" width="0.0539%" height="15" fill="rgb(220,89,49)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (15 samples, 0.05%)</title><rect x="22.5492%" y="677" width="0.0539%" height="15" fill="rgb(227,60,33)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (15 samples, 0.05%)</title><rect x="22.5492%" y="661" width="0.0539%" height="15" fill="rgb(205,113,12)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (15 samples, 0.05%)</title><rect x="22.5492%" y="645" width="0.0539%" height="15" fill="rgb(211,32,1)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="655.50"></text></g><g><title>once_cell::imp::initialize_or_wait (15 samples, 0.05%)</title><rect x="22.5492%" y="629" width="0.0539%" height="15" fill="rgb(246,2,12)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.05%)</title><rect x="22.5492%" y="613" width="0.0539%" height="15" fill="rgb(243,37,27)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="623.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (15 samples, 0.05%)</title><rect x="22.5492%" y="597" width="0.0539%" height="15" fill="rgb(248,211,31)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (15 samples, 0.05%)</title><rect x="22.5492%" y="581" width="0.0539%" height="15" fill="rgb(242,146,47)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="591.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (15 samples, 0.05%)</title><rect x="22.5492%" y="565" width="0.0539%" height="15" fill="rgb(206,70,20)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.05%)</title><rect x="22.5492%" y="549" width="0.0539%" height="15" fill="rgb(215,10,51)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.05%)</title><rect x="22.5492%" y="533" width="0.0539%" height="15" fill="rgb(243,178,53)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.05%)</title><rect x="22.5492%" y="517" width="0.0539%" height="15" fill="rgb(233,221,20)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.05%)</title><rect x="22.5492%" y="501" width="0.0539%" height="15" fill="rgb(218,95,35)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="511.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.05%)</title><rect x="22.5492%" y="485" width="0.0539%" height="15" fill="rgb(229,13,5)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="495.50"></text></g><g><title>malloc (15 samples, 0.05%)</title><rect x="22.5492%" y="469" width="0.0539%" height="15" fill="rgb(252,164,30)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="479.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="22.5492%" y="453" width="0.0539%" height="15" fill="rgb(232,68,36)" fg:x="6275" fg:w="15"/><text x="22.7992%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="22.5852%" y="437" width="0.0180%" height="15" fill="rgb(219,59,54)" fg:x="6285" fg:w="5"/><text x="22.8352%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="22.5852%" y="421" width="0.0180%" height="15" fill="rgb(250,92,33)" fg:x="6285" fg:w="5"/><text x="22.8352%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="22.5852%" y="405" width="0.0180%" height="15" fill="rgb(229,162,54)" fg:x="6285" fg:w="5"/><text x="22.8352%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="22.5852%" y="389" width="0.0180%" height="15" fill="rgb(244,114,52)" fg:x="6285" fg:w="5"/><text x="22.8352%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="22.5852%" y="373" width="0.0180%" height="15" fill="rgb(212,211,43)" fg:x="6285" fg:w="5"/><text x="22.8352%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="22.5888%" y="357" width="0.0144%" height="15" fill="rgb(226,147,8)" fg:x="6286" fg:w="4"/><text x="22.8388%" y="367.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (12 samples, 0.04%)</title><rect x="22.6031%" y="741" width="0.0431%" height="15" fill="rgb(226,23,13)" fg:x="6290" fg:w="12"/><text x="22.8531%" y="751.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.03%)</title><rect x="22.6175%" y="725" width="0.0287%" height="15" fill="rgb(240,63,4)" fg:x="6294" fg:w="8"/><text x="22.8675%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (7 samples, 0.03%)</title><rect x="22.6211%" y="709" width="0.0252%" height="15" fill="rgb(221,1,32)" fg:x="6295" fg:w="7"/><text x="22.8711%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (7 samples, 0.03%)</title><rect x="22.6211%" y="693" width="0.0252%" height="15" fill="rgb(242,117,10)" fg:x="6295" fg:w="7"/><text x="22.8711%" y="703.50"></text></g><g><title>clock_gettime (7 samples, 0.03%)</title><rect x="22.6211%" y="677" width="0.0252%" height="15" fill="rgb(249,172,44)" fg:x="6295" fg:w="7"/><text x="22.8711%" y="687.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.01%)</title><rect x="22.6355%" y="661" width="0.0108%" height="15" fill="rgb(244,46,45)" fg:x="6299" fg:w="3"/><text x="22.8855%" y="671.50"></text></g><g><title>[[vdso]] (3 samples, 0.01%)</title><rect x="22.6355%" y="645" width="0.0108%" height="15" fill="rgb(206,43,17)" fg:x="6299" fg:w="3"/><text x="22.8855%" y="655.50"></text></g><g><title>epoll_wait (16 samples, 0.06%)</title><rect x="22.6642%" y="709" width="0.0575%" height="15" fill="rgb(239,218,39)" fg:x="6307" fg:w="16"/><text x="22.9142%" y="719.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="22.6714%" y="693" width="0.0503%" height="15" fill="rgb(208,169,54)" fg:x="6309" fg:w="14"/><text x="22.9214%" y="703.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="22.6750%" y="677" width="0.0467%" height="15" fill="rgb(247,25,42)" fg:x="6310" fg:w="13"/><text x="22.9250%" y="687.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="22.6750%" y="661" width="0.0467%" height="15" fill="rgb(226,23,31)" fg:x="6310" fg:w="13"/><text x="22.9250%" y="671.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="22.6786%" y="645" width="0.0431%" height="15" fill="rgb(247,16,28)" fg:x="6311" fg:w="12"/><text x="22.9286%" y="655.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="22.6858%" y="629" width="0.0359%" height="15" fill="rgb(231,147,38)" fg:x="6313" fg:w="10"/><text x="22.9358%" y="639.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="22.6894%" y="613" width="0.0323%" height="15" fill="rgb(253,81,48)" fg:x="6314" fg:w="9"/><text x="22.9394%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="22.6966%" y="597" width="0.0252%" height="15" fill="rgb(249,222,43)" fg:x="6316" fg:w="7"/><text x="22.9466%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="22.7002%" y="581" width="0.0216%" height="15" fill="rgb(221,3,27)" fg:x="6317" fg:w="6"/><text x="22.9502%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="22.7038%" y="565" width="0.0180%" height="15" fill="rgb(228,180,5)" fg:x="6318" fg:w="5"/><text x="22.9538%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="22.7109%" y="549" width="0.0108%" height="15" fill="rgb(227,131,42)" fg:x="6320" fg:w="3"/><text x="22.9609%" y="559.50"></text></g><g><title>read (72 samples, 0.26%)</title><rect x="22.7217%" y="709" width="0.2587%" height="15" fill="rgb(212,3,39)" fg:x="6323" fg:w="72"/><text x="22.9717%" y="719.50"></text></g><g><title>[unknown] (70 samples, 0.25%)</title><rect x="22.7289%" y="693" width="0.2515%" height="15" fill="rgb(226,45,5)" fg:x="6325" fg:w="70"/><text x="22.9789%" y="703.50"></text></g><g><title>[unknown] (69 samples, 0.25%)</title><rect x="22.7325%" y="677" width="0.2480%" height="15" fill="rgb(215,167,45)" fg:x="6326" fg:w="69"/><text x="22.9825%" y="687.50"></text></g><g><title>[unknown] (69 samples, 0.25%)</title><rect x="22.7325%" y="661" width="0.2480%" height="15" fill="rgb(250,218,53)" fg:x="6326" fg:w="69"/><text x="22.9825%" y="671.50"></text></g><g><title>[unknown] (67 samples, 0.24%)</title><rect x="22.7397%" y="645" width="0.2408%" height="15" fill="rgb(207,140,0)" fg:x="6328" fg:w="67"/><text x="22.9897%" y="655.50"></text></g><g><title>[unknown] (59 samples, 0.21%)</title><rect x="22.7684%" y="629" width="0.2120%" height="15" fill="rgb(238,133,51)" fg:x="6336" fg:w="59"/><text x="23.0184%" y="639.50"></text></g><g><title>[unknown] (28 samples, 0.10%)</title><rect x="22.8798%" y="613" width="0.1006%" height="15" fill="rgb(218,203,53)" fg:x="6367" fg:w="28"/><text x="23.1298%" y="623.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="22.9086%" y="597" width="0.0719%" height="15" fill="rgb(226,184,25)" fg:x="6375" fg:w="20"/><text x="23.1586%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="22.9517%" y="581" width="0.0287%" height="15" fill="rgb(231,121,21)" fg:x="6387" fg:w="8"/><text x="23.2017%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="22.9625%" y="565" width="0.0180%" height="15" fill="rgb(251,14,34)" fg:x="6390" fg:w="5"/><text x="23.2125%" y="575.50"></text></g><g><title>polling::Poller::wait (124 samples, 0.45%)</title><rect x="22.6463%" y="741" width="0.4456%" height="15" fill="rgb(249,193,11)" fg:x="6302" fg:w="124"/><text x="22.8963%" y="751.50"></text></g><g><title>polling::epoll::Poller::wait (124 samples, 0.45%)</title><rect x="22.6463%" y="725" width="0.4456%" height="15" fill="rgb(220,172,37)" fg:x="6302" fg:w="124"/><text x="22.8963%" y="735.50"></text></g><g><title>syscall (31 samples, 0.11%)</title><rect x="22.9805%" y="709" width="0.1114%" height="15" fill="rgb(231,229,43)" fg:x="6395" fg:w="31"/><text x="23.2305%" y="719.50"></text></g><g><title>[unknown] (31 samples, 0.11%)</title><rect x="22.9805%" y="693" width="0.1114%" height="15" fill="rgb(250,161,5)" fg:x="6395" fg:w="31"/><text x="23.2305%" y="703.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="22.9876%" y="677" width="0.1042%" height="15" fill="rgb(218,225,18)" fg:x="6397" fg:w="29"/><text x="23.2376%" y="687.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="22.9876%" y="661" width="0.1042%" height="15" fill="rgb(245,45,42)" fg:x="6397" fg:w="29"/><text x="23.2376%" y="671.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="22.9876%" y="645" width="0.1042%" height="15" fill="rgb(211,115,1)" fg:x="6397" fg:w="29"/><text x="23.2376%" y="655.50"></text></g><g><title>[unknown] (28 samples, 0.10%)</title><rect x="22.9912%" y="629" width="0.1006%" height="15" fill="rgb(248,133,52)" fg:x="6398" fg:w="28"/><text x="23.2412%" y="639.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="23.0272%" y="613" width="0.0647%" height="15" fill="rgb(238,100,21)" fg:x="6408" fg:w="18"/><text x="23.2772%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="23.0775%" y="597" width="0.0144%" height="15" fill="rgb(247,144,11)" fg:x="6422" fg:w="4"/><text x="23.3275%" y="607.50"></text></g><g><title>[libc.so.6] (431 samples, 1.55%)</title><rect x="21.5502%" y="1237" width="1.5488%" height="15" fill="rgb(206,164,16)" fg:x="5997" fg:w="431"/><text x="21.8002%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (409 samples, 1.47%)</title><rect x="21.6293%" y="1221" width="1.4697%" height="15" fill="rgb(222,34,3)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (409 samples, 1.47%)</title><rect x="21.6293%" y="1205" width="1.4697%" height="15" fill="rgb(248,82,4)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (409 samples, 1.47%)</title><rect x="21.6293%" y="1189" width="1.4697%" height="15" fill="rgb(228,81,46)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (409 samples, 1.47%)</title><rect x="21.6293%" y="1173" width="1.4697%" height="15" fill="rgb(227,67,47)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (409 samples, 1.47%)</title><rect x="21.6293%" y="1157" width="1.4697%" height="15" fill="rgb(215,93,53)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (409 samples, 1.47%)</title><rect x="21.6293%" y="1141" width="1.4697%" height="15" fill="rgb(248,194,39)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1151.50"></text></g><g><title>std::panicking::try (409 samples, 1.47%)</title><rect x="21.6293%" y="1125" width="1.4697%" height="15" fill="rgb(215,5,19)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (409 samples, 1.47%)</title><rect x="21.6293%" y="1109" width="1.4697%" height="15" fill="rgb(226,215,51)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (409 samples, 1.47%)</title><rect x="21.6293%" y="1093" width="1.4697%" height="15" fill="rgb(225,56,26)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (409 samples, 1.47%)</title><rect x="21.6293%" y="1077" width="1.4697%" height="15" fill="rgb(222,75,29)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (409 samples, 1.47%)</title><rect x="21.6293%" y="1061" width="1.4697%" height="15" fill="rgb(236,139,6)" fg:x="6019" fg:w="409"/><text x="21.8793%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (301 samples, 1.08%)</title><rect x="22.0174%" y="1045" width="1.0816%" height="15" fill="rgb(223,137,36)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="1055.50"></text></g><g><title>async_std::task::block_on::block_on (301 samples, 1.08%)</title><rect x="22.0174%" y="1029" width="1.0816%" height="15" fill="rgb(226,99,2)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking (301 samples, 1.08%)</title><rect x="22.0174%" y="1013" width="1.0816%" height="15" fill="rgb(206,133,23)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (301 samples, 1.08%)</title><rect x="22.0174%" y="997" width="1.0816%" height="15" fill="rgb(243,173,15)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (301 samples, 1.08%)</title><rect x="22.0174%" y="981" width="1.0816%" height="15" fill="rgb(228,69,28)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="991.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (301 samples, 1.08%)</title><rect x="22.0174%" y="965" width="1.0816%" height="15" fill="rgb(212,51,22)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (301 samples, 1.08%)</title><rect x="22.0174%" y="949" width="1.0816%" height="15" fill="rgb(227,113,0)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (301 samples, 1.08%)</title><rect x="22.0174%" y="933" width="1.0816%" height="15" fill="rgb(252,84,27)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (301 samples, 1.08%)</title><rect x="22.0174%" y="917" width="1.0816%" height="15" fill="rgb(223,145,39)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (301 samples, 1.08%)</title><rect x="22.0174%" y="901" width="1.0816%" height="15" fill="rgb(239,219,30)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="911.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (301 samples, 1.08%)</title><rect x="22.0174%" y="885" width="1.0816%" height="15" fill="rgb(224,196,39)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on (301 samples, 1.08%)</title><rect x="22.0174%" y="869" width="1.0816%" height="15" fill="rgb(205,35,43)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (301 samples, 1.08%)</title><rect x="22.0174%" y="853" width="1.0816%" height="15" fill="rgb(228,201,21)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (301 samples, 1.08%)</title><rect x="22.0174%" y="837" width="1.0816%" height="15" fill="rgb(237,118,16)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="847.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (301 samples, 1.08%)</title><rect x="22.0174%" y="821" width="1.0816%" height="15" fill="rgb(241,17,19)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on (301 samples, 1.08%)</title><rect x="22.0174%" y="805" width="1.0816%" height="15" fill="rgb(214,10,25)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="815.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (301 samples, 1.08%)</title><rect x="22.0174%" y="789" width="1.0816%" height="15" fill="rgb(238,37,29)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="799.50"></text></g><g><title>async_io::driver::block_on (301 samples, 1.08%)</title><rect x="22.0174%" y="773" width="1.0816%" height="15" fill="rgb(253,83,25)" fg:x="6127" fg:w="301"/><text x="22.2674%" y="783.50"></text></g><g><title>async_io::reactor::ReactorLock::react (138 samples, 0.50%)</title><rect x="22.6031%" y="757" width="0.4959%" height="15" fill="rgb(234,192,12)" fg:x="6290" fg:w="138"/><text x="22.8531%" y="767.50"></text></g><g><title>[unknown] (340 samples, 1.22%)</title><rect x="23.0990%" y="1237" width="1.2218%" height="15" fill="rgb(241,216,45)" fg:x="6428" fg:w="340"/><text x="23.3490%" y="1247.50"></text></g><g><title>[unknown] (332 samples, 1.19%)</title><rect x="23.1278%" y="1221" width="1.1930%" height="15" fill="rgb(242,22,33)" fg:x="6436" fg:w="332"/><text x="23.3778%" y="1231.50"></text></g><g><title>[unknown] (325 samples, 1.17%)</title><rect x="23.1529%" y="1205" width="1.1679%" height="15" fill="rgb(231,105,49)" fg:x="6443" fg:w="325"/><text x="23.4029%" y="1215.50"></text></g><g><title>[unknown] (218 samples, 0.78%)</title><rect x="23.5374%" y="1189" width="0.7834%" height="15" fill="rgb(218,204,15)" fg:x="6550" fg:w="218"/><text x="23.7874%" y="1199.50"></text></g><g><title>[unknown] (132 samples, 0.47%)</title><rect x="23.8465%" y="1173" width="0.4743%" height="15" fill="rgb(235,138,41)" fg:x="6636" fg:w="132"/><text x="24.0965%" y="1183.50"></text></g><g><title>[unknown] (99 samples, 0.36%)</title><rect x="23.9651%" y="1157" width="0.3558%" height="15" fill="rgb(246,0,9)" fg:x="6669" fg:w="99"/><text x="24.2151%" y="1167.50"></text></g><g><title>[unknown] (76 samples, 0.27%)</title><rect x="24.0477%" y="1141" width="0.2731%" height="15" fill="rgb(210,74,4)" fg:x="6692" fg:w="76"/><text x="24.2977%" y="1151.50"></text></g><g><title>[unknown] (57 samples, 0.20%)</title><rect x="24.1160%" y="1125" width="0.2048%" height="15" fill="rgb(250,60,41)" fg:x="6711" fg:w="57"/><text x="24.3660%" y="1135.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="24.2454%" y="1109" width="0.0755%" height="15" fill="rgb(220,115,12)" fg:x="6747" fg:w="21"/><text x="24.4954%" y="1119.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="24.3065%" y="1093" width="0.0144%" height="15" fill="rgb(237,100,13)" fg:x="6764" fg:w="4"/><text x="24.5565%" y="1103.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="24.3065%" y="1077" width="0.0144%" height="15" fill="rgb(213,55,26)" fg:x="6764" fg:w="4"/><text x="24.5565%" y="1087.50"></text></g><g><title>__clone (196 samples, 0.70%)</title><rect x="24.3208%" y="1237" width="0.7043%" height="15" fill="rgb(216,17,4)" fg:x="6768" fg:w="196"/><text x="24.5708%" y="1247.50"></text></g><g><title>[unknown] (196 samples, 0.70%)</title><rect x="24.3208%" y="1221" width="0.7043%" height="15" fill="rgb(220,153,47)" fg:x="6768" fg:w="196"/><text x="24.5708%" y="1231.50"></text></g><g><title>[unknown] (195 samples, 0.70%)</title><rect x="24.3244%" y="1205" width="0.7007%" height="15" fill="rgb(215,131,9)" fg:x="6769" fg:w="195"/><text x="24.5744%" y="1215.50"></text></g><g><title>[unknown] (192 samples, 0.69%)</title><rect x="24.3352%" y="1189" width="0.6900%" height="15" fill="rgb(233,46,42)" fg:x="6772" fg:w="192"/><text x="24.5852%" y="1199.50"></text></g><g><title>[unknown] (187 samples, 0.67%)</title><rect x="24.3532%" y="1173" width="0.6720%" height="15" fill="rgb(226,86,7)" fg:x="6777" fg:w="187"/><text x="24.6032%" y="1183.50"></text></g><g><title>[unknown] (176 samples, 0.63%)</title><rect x="24.3927%" y="1157" width="0.6325%" height="15" fill="rgb(239,226,21)" fg:x="6788" fg:w="176"/><text x="24.6427%" y="1167.50"></text></g><g><title>[unknown] (162 samples, 0.58%)</title><rect x="24.4430%" y="1141" width="0.5821%" height="15" fill="rgb(244,137,22)" fg:x="6802" fg:w="162"/><text x="24.6930%" y="1151.50"></text></g><g><title>[unknown] (115 samples, 0.41%)</title><rect x="24.6119%" y="1125" width="0.4133%" height="15" fill="rgb(211,139,35)" fg:x="6849" fg:w="115"/><text x="24.8619%" y="1135.50"></text></g><g><title>[unknown] (46 samples, 0.17%)</title><rect x="24.8599%" y="1109" width="0.1653%" height="15" fill="rgb(214,62,50)" fg:x="6918" fg:w="46"/><text x="25.1099%" y="1119.50"></text></g><g><title>[unknown] (31 samples, 0.11%)</title><rect x="24.9138%" y="1093" width="0.1114%" height="15" fill="rgb(212,113,44)" fg:x="6933" fg:w="31"/><text x="25.1638%" y="1103.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="24.9533%" y="1077" width="0.0719%" height="15" fill="rgb(226,150,43)" fg:x="6944" fg:w="20"/><text x="25.2033%" y="1087.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="24.9856%" y="1061" width="0.0395%" height="15" fill="rgb(250,71,37)" fg:x="6953" fg:w="11"/><text x="25.2356%" y="1071.50"></text></g><g><title>__libc_calloc (6 samples, 0.02%)</title><rect x="25.0252%" y="1237" width="0.0216%" height="15" fill="rgb(219,76,19)" fg:x="6964" fg:w="6"/><text x="25.2752%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="25.0252%" y="1221" width="0.0216%" height="15" fill="rgb(250,39,11)" fg:x="6964" fg:w="6"/><text x="25.2752%" y="1231.50"></text></g><g><title>__lll_lock_wake_private (6 samples, 0.02%)</title><rect x="25.0467%" y="1237" width="0.0216%" height="15" fill="rgb(230,64,31)" fg:x="6970" fg:w="6"/><text x="25.2967%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="25.0467%" y="1221" width="0.0216%" height="15" fill="rgb(208,222,23)" fg:x="6970" fg:w="6"/><text x="25.2967%" y="1231.50"></text></g><g><title>__rust_probestack (3 samples, 0.01%)</title><rect x="25.0683%" y="1237" width="0.0108%" height="15" fill="rgb(227,125,18)" fg:x="6976" fg:w="3"/><text x="25.3183%" y="1247.50"></text></g><g><title>__udivti3 (5 samples, 0.02%)</title><rect x="25.0791%" y="1237" width="0.0180%" height="15" fill="rgb(234,210,9)" fg:x="6979" fg:w="5"/><text x="25.3291%" y="1247.50"></text></g><g><title>compiler_builtins::int::udiv::__udivti3 (3 samples, 0.01%)</title><rect x="25.0862%" y="1221" width="0.0108%" height="15" fill="rgb(217,127,24)" fg:x="6981" fg:w="3"/><text x="25.3362%" y="1231.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (3 samples, 0.01%)</title><rect x="25.0862%" y="1205" width="0.0108%" height="15" fill="rgb(239,141,48)" fg:x="6981" fg:w="3"/><text x="25.3362%" y="1215.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (3 samples, 0.01%)</title><rect x="25.0862%" y="1189" width="0.0108%" height="15" fill="rgb(227,109,8)" fg:x="6981" fg:w="3"/><text x="25.3362%" y="1199.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (8 samples, 0.03%)</title><rect x="25.1150%" y="837" width="0.0287%" height="15" fill="rgb(235,184,23)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (8 samples, 0.03%)</title><rect x="25.1150%" y="821" width="0.0287%" height="15" fill="rgb(227,226,48)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (8 samples, 0.03%)</title><rect x="25.1150%" y="805" width="0.0287%" height="15" fill="rgb(206,150,11)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="815.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="25.1150%" y="789" width="0.0287%" height="15" fill="rgb(254,2,33)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="799.50"></text></g><g><title>async_std::task::block_on::block_on (8 samples, 0.03%)</title><rect x="25.1150%" y="773" width="0.0287%" height="15" fill="rgb(243,160,20)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="783.50"></text></g><g><title>async_std::task::builder::Builder::blocking (8 samples, 0.03%)</title><rect x="25.1150%" y="757" width="0.0287%" height="15" fill="rgb(218,208,30)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.03%)</title><rect x="25.1150%" y="741" width="0.0287%" height="15" fill="rgb(224,120,49)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.03%)</title><rect x="25.1150%" y="725" width="0.0287%" height="15" fill="rgb(246,12,2)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="735.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (8 samples, 0.03%)</title><rect x="25.1150%" y="709" width="0.0287%" height="15" fill="rgb(236,117,3)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (8 samples, 0.03%)</title><rect x="25.1150%" y="693" width="0.0287%" height="15" fill="rgb(216,128,52)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.03%)</title><rect x="25.1150%" y="677" width="0.0287%" height="15" fill="rgb(246,145,19)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.03%)</title><rect x="25.1150%" y="661" width="0.0287%" height="15" fill="rgb(222,11,46)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (8 samples, 0.03%)</title><rect x="25.1150%" y="645" width="0.0287%" height="15" fill="rgb(245,82,36)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="655.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (8 samples, 0.03%)</title><rect x="25.1150%" y="629" width="0.0287%" height="15" fill="rgb(250,73,51)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="639.50"></text></g><g><title>async_global_executor::executor::block_on (8 samples, 0.03%)</title><rect x="25.1150%" y="613" width="0.0287%" height="15" fill="rgb(221,189,23)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.03%)</title><rect x="25.1150%" y="597" width="0.0287%" height="15" fill="rgb(210,33,7)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.03%)</title><rect x="25.1150%" y="581" width="0.0287%" height="15" fill="rgb(210,107,22)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="591.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (8 samples, 0.03%)</title><rect x="25.1150%" y="565" width="0.0287%" height="15" fill="rgb(222,116,37)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="575.50"></text></g><g><title>async_global_executor::reactor::block_on (8 samples, 0.03%)</title><rect x="25.1150%" y="549" width="0.0287%" height="15" fill="rgb(254,17,48)" fg:x="6989" fg:w="8"/><text x="25.3650%" y="559.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (3 samples, 0.01%)</title><rect x="25.1545%" y="773" width="0.0108%" height="15" fill="rgb(224,36,32)" fg:x="7000" fg:w="3"/><text x="25.4045%" y="783.50"></text></g><g><title>async_global_executor::reactor::block_on (16 samples, 0.06%)</title><rect x="25.1150%" y="1237" width="0.0575%" height="15" fill="rgb(232,90,46)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1247.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="1221" width="0.0575%" height="15" fill="rgb(241,66,40)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1231.50"></text></g><g><title>async_io::driver::block_on (16 samples, 0.06%)</title><rect x="25.1150%" y="1205" width="0.0575%" height="15" fill="rgb(249,184,29)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1215.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="1189" width="0.0575%" height="15" fill="rgb(231,181,1)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="1173" width="0.0575%" height="15" fill="rgb(224,94,2)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1183.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="1157" width="0.0575%" height="15" fill="rgb(229,170,15)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="1141" width="0.0575%" height="15" fill="rgb(240,127,35)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="1125" width="0.0575%" height="15" fill="rgb(248,196,34)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="1109" width="0.0575%" height="15" fill="rgb(236,137,7)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (16 samples, 0.06%)</title><rect x="25.1150%" y="1093" width="0.0575%" height="15" fill="rgb(235,127,16)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="1077" width="0.0575%" height="15" fill="rgb(250,192,54)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="1061" width="0.0575%" height="15" fill="rgb(218,98,20)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1071.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="1045" width="0.0575%" height="15" fill="rgb(230,176,47)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1055.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="1029" width="0.0575%" height="15" fill="rgb(244,2,33)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1039.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (16 samples, 0.06%)</title><rect x="25.1150%" y="1013" width="0.0575%" height="15" fill="rgb(231,100,17)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.06%)</title><rect x="25.1150%" y="997" width="0.0575%" height="15" fill="rgb(245,23,12)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.06%)</title><rect x="25.1150%" y="981" width="0.0575%" height="15" fill="rgb(249,55,22)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="965" width="0.0575%" height="15" fill="rgb(207,134,9)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="975.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="949" width="0.0575%" height="15" fill="rgb(218,134,0)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="933" width="0.0575%" height="15" fill="rgb(213,212,33)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="943.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="917" width="0.0575%" height="15" fill="rgb(252,106,18)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="901" width="0.0575%" height="15" fill="rgb(208,126,42)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="911.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="885" width="0.0575%" height="15" fill="rgb(246,175,29)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="25.1150%" y="869" width="0.0575%" height="15" fill="rgb(215,13,50)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="879.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (16 samples, 0.06%)</title><rect x="25.1150%" y="853" width="0.0575%" height="15" fill="rgb(216,172,15)" fg:x="6989" fg:w="16"/><text x="25.3650%" y="863.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (8 samples, 0.03%)</title><rect x="25.1437%" y="837" width="0.0287%" height="15" fill="rgb(212,103,13)" fg:x="6997" fg:w="8"/><text x="25.3937%" y="847.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (8 samples, 0.03%)</title><rect x="25.1437%" y="821" width="0.0287%" height="15" fill="rgb(231,171,36)" fg:x="6997" fg:w="8"/><text x="25.3937%" y="831.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (8 samples, 0.03%)</title><rect x="25.1437%" y="805" width="0.0287%" height="15" fill="rgb(250,123,20)" fg:x="6997" fg:w="8"/><text x="25.3937%" y="815.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (8 samples, 0.03%)</title><rect x="25.1437%" y="789" width="0.0287%" height="15" fill="rgb(212,53,50)" fg:x="6997" fg:w="8"/><text x="25.3937%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (9 samples, 0.03%)</title><rect x="25.2480%" y="517" width="0.0323%" height="15" fill="rgb(243,54,12)" fg:x="7026" fg:w="9"/><text x="25.4980%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.03%)</title><rect x="25.2480%" y="501" width="0.0323%" height="15" fill="rgb(234,101,34)" fg:x="7026" fg:w="9"/><text x="25.4980%" y="511.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="25.2480%" y="485" width="0.0323%" height="15" fill="rgb(254,67,22)" fg:x="7026" fg:w="9"/><text x="25.4980%" y="495.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::copy_bytes (39 samples, 0.14%)</title><rect x="25.1869%" y="533" width="0.1401%" height="15" fill="rgb(250,35,47)" fg:x="7009" fg:w="39"/><text x="25.4369%" y="543.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::as_slice (10 samples, 0.04%)</title><rect x="25.2911%" y="517" width="0.0359%" height="15" fill="rgb(226,126,38)" fg:x="7038" fg:w="10"/><text x="25.5411%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (10 samples, 0.04%)</title><rect x="25.2911%" y="501" width="0.0359%" height="15" fill="rgb(216,138,53)" fg:x="7038" fg:w="10"/><text x="25.5411%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_exact (46 samples, 0.17%)</title><rect x="25.1725%" y="549" width="0.1653%" height="15" fill="rgb(246,199,43)" fg:x="7005" fg:w="46"/><text x="25.4225%" y="559.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::skip_bytes_no_check (3 samples, 0.01%)</title><rect x="25.3270%" y="533" width="0.0108%" height="15" fill="rgb(232,125,11)" fg:x="7048" fg:w="3"/><text x="25.5770%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (11 samples, 0.04%)</title><rect x="25.3486%" y="517" width="0.0395%" height="15" fill="rgb(218,219,45)" fg:x="7054" fg:w="11"/><text x="25.5986%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (11 samples, 0.04%)</title><rect x="25.3486%" y="501" width="0.0395%" height="15" fill="rgb(216,102,54)" fg:x="7054" fg:w="11"/><text x="25.5986%" y="511.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;usize,R&gt;&gt;::read (15 samples, 0.05%)</title><rect x="25.3378%" y="549" width="0.0539%" height="15" fill="rgb(250,228,7)" fg:x="7051" fg:w="15"/><text x="25.5878%" y="559.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (15 samples, 0.05%)</title><rect x="25.3378%" y="533" width="0.0539%" height="15" fill="rgb(226,125,25)" fg:x="7051" fg:w="15"/><text x="25.5878%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (89 samples, 0.32%)</title><rect x="25.1725%" y="677" width="0.3198%" height="15" fill="rgb(224,165,27)" fg:x="7005" fg:w="89"/><text x="25.4225%" y="687.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declare (89 samples, 0.32%)</title><rect x="25.1725%" y="661" width="0.3198%" height="15" fill="rgb(233,86,3)" fg:x="7005" fg:w="89"/><text x="25.4225%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declarations (89 samples, 0.32%)</title><rect x="25.1725%" y="645" width="0.3198%" height="15" fill="rgb(228,116,20)" fg:x="7005" fg:w="89"/><text x="25.4225%" y="655.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declaration (89 samples, 0.32%)</title><rect x="25.1725%" y="629" width="0.3198%" height="15" fill="rgb(209,192,17)" fg:x="7005" fg:w="89"/><text x="25.4225%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_key_expr (89 samples, 0.32%)</title><rect x="25.1725%" y="613" width="0.3198%" height="15" fill="rgb(224,88,34)" fg:x="7005" fg:w="89"/><text x="25.4225%" y="623.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_string (89 samples, 0.32%)</title><rect x="25.1725%" y="597" width="0.3198%" height="15" fill="rgb(233,38,6)" fg:x="7005" fg:w="89"/><text x="25.4225%" y="607.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (89 samples, 0.32%)</title><rect x="25.1725%" y="581" width="0.3198%" height="15" fill="rgb(212,59,30)" fg:x="7005" fg:w="89"/><text x="25.4225%" y="591.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;u8&gt;,R&gt;&gt;::read (89 samples, 0.32%)</title><rect x="25.1725%" y="565" width="0.3198%" height="15" fill="rgb(213,80,3)" fg:x="7005" fg:w="89"/><text x="25.4225%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (28 samples, 0.10%)</title><rect x="25.3917%" y="549" width="0.1006%" height="15" fill="rgb(251,178,7)" fg:x="7066" fg:w="28"/><text x="25.6417%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.10%)</title><rect x="25.3917%" y="533" width="0.1006%" height="15" fill="rgb(213,154,26)" fg:x="7066" fg:w="28"/><text x="25.6417%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.10%)</title><rect x="25.3917%" y="517" width="0.1006%" height="15" fill="rgb(238,165,49)" fg:x="7066" fg:w="28"/><text x="25.6417%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.10%)</title><rect x="25.3917%" y="501" width="0.1006%" height="15" fill="rgb(248,91,46)" fg:x="7066" fg:w="28"/><text x="25.6417%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.10%)</title><rect x="25.3917%" y="485" width="0.1006%" height="15" fill="rgb(244,21,52)" fg:x="7066" fg:w="28"/><text x="25.6417%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.10%)</title><rect x="25.3917%" y="469" width="0.1006%" height="15" fill="rgb(247,122,20)" fg:x="7066" fg:w="28"/><text x="25.6417%" y="479.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.10%)</title><rect x="25.3917%" y="453" width="0.1006%" height="15" fill="rgb(218,27,9)" fg:x="7066" fg:w="28"/><text x="25.6417%" y="463.50"></text></g><g><title>malloc (28 samples, 0.10%)</title><rect x="25.3917%" y="437" width="0.1006%" height="15" fill="rgb(246,7,6)" fg:x="7066" fg:w="28"/><text x="25.6417%" y="447.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="25.4420%" y="421" width="0.0503%" height="15" fill="rgb(227,135,54)" fg:x="7080" fg:w="14"/><text x="25.6920%" y="431.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (90 samples, 0.32%)</title><rect x="25.1725%" y="1237" width="0.3234%" height="15" fill="rgb(247,14,11)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (90 samples, 0.32%)</title><rect x="25.1725%" y="1221" width="0.3234%" height="15" fill="rgb(206,149,34)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1231.50"></text></g><g><title>std::panicking::try (90 samples, 0.32%)</title><rect x="25.1725%" y="1205" width="0.3234%" height="15" fill="rgb(227,228,4)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (90 samples, 0.32%)</title><rect x="25.1725%" y="1189" width="0.3234%" height="15" fill="rgb(238,218,28)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1199.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="1173" width="0.3234%" height="15" fill="rgb(252,86,40)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (90 samples, 0.32%)</title><rect x="25.1725%" y="1157" width="0.3234%" height="15" fill="rgb(251,225,11)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (90 samples, 0.32%)</title><rect x="25.1725%" y="1141" width="0.3234%" height="15" fill="rgb(206,46,49)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1151.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="1125" width="0.3234%" height="15" fill="rgb(245,128,24)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1135.50"></text></g><g><title>async_global_executor::reactor::block_on (90 samples, 0.32%)</title><rect x="25.1725%" y="1109" width="0.3234%" height="15" fill="rgb(219,177,34)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1119.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="1093" width="0.3234%" height="15" fill="rgb(218,60,48)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1103.50"></text></g><g><title>async_io::driver::block_on (90 samples, 0.32%)</title><rect x="25.1725%" y="1077" width="0.3234%" height="15" fill="rgb(221,11,5)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1087.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="1061" width="0.3234%" height="15" fill="rgb(220,148,13)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="1045" width="0.3234%" height="15" fill="rgb(210,16,3)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1055.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="1029" width="0.3234%" height="15" fill="rgb(236,80,2)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1039.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="1013" width="0.3234%" height="15" fill="rgb(239,129,19)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="997" width="0.3234%" height="15" fill="rgb(220,106,35)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="981" width="0.3234%" height="15" fill="rgb(252,139,45)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (90 samples, 0.32%)</title><rect x="25.1725%" y="965" width="0.3234%" height="15" fill="rgb(229,8,36)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="949" width="0.3234%" height="15" fill="rgb(230,126,33)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="933" width="0.3234%" height="15" fill="rgb(239,140,21)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="917" width="0.3234%" height="15" fill="rgb(254,104,9)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="901" width="0.3234%" height="15" fill="rgb(239,52,14)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (90 samples, 0.32%)</title><rect x="25.1725%" y="885" width="0.3234%" height="15" fill="rgb(208,227,44)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (90 samples, 0.32%)</title><rect x="25.1725%" y="869" width="0.3234%" height="15" fill="rgb(246,18,19)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (90 samples, 0.32%)</title><rect x="25.1725%" y="853" width="0.3234%" height="15" fill="rgb(235,228,25)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="837" width="0.3234%" height="15" fill="rgb(240,156,20)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="847.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="821" width="0.3234%" height="15" fill="rgb(224,8,20)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="805" width="0.3234%" height="15" fill="rgb(214,12,52)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="815.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="789" width="0.3234%" height="15" fill="rgb(211,220,47)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="773" width="0.3234%" height="15" fill="rgb(250,173,5)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="783.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="757" width="0.3234%" height="15" fill="rgb(250,125,52)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="25.1725%" y="741" width="0.3234%" height="15" fill="rgb(209,133,18)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="751.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (90 samples, 0.32%)</title><rect x="25.1725%" y="725" width="0.3234%" height="15" fill="rgb(216,173,22)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="735.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (90 samples, 0.32%)</title><rect x="25.1725%" y="709" width="0.3234%" height="15" fill="rgb(205,3,22)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="719.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (90 samples, 0.32%)</title><rect x="25.1725%" y="693" width="0.3234%" height="15" fill="rgb(248,22,20)" fg:x="7005" fg:w="90"/><text x="25.4225%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="25.5211%" y="469" width="0.0180%" height="15" fill="rgb(233,6,29)" fg:x="7102" fg:w="5"/><text x="25.7711%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="25.5211%" y="453" width="0.0180%" height="15" fill="rgb(240,22,54)" fg:x="7102" fg:w="5"/><text x="25.7711%" y="463.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5 samples, 0.02%)</title><rect x="25.5211%" y="437" width="0.0180%" height="15" fill="rgb(231,133,32)" fg:x="7102" fg:w="5"/><text x="25.7711%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="25.5211%" y="421" width="0.0180%" height="15" fill="rgb(248,193,4)" fg:x="7102" fg:w="5"/><text x="25.7711%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.02%)</title><rect x="25.5211%" y="405" width="0.0180%" height="15" fill="rgb(211,178,46)" fg:x="7102" fg:w="5"/><text x="25.7711%" y="415.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (5 samples, 0.02%)</title><rect x="25.5211%" y="389" width="0.0180%" height="15" fill="rgb(224,5,42)" fg:x="7102" fg:w="5"/><text x="25.7711%" y="399.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.01%)</title><rect x="25.5282%" y="373" width="0.0108%" height="15" fill="rgb(239,176,25)" fg:x="7104" fg:w="3"/><text x="25.7782%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="25.5642%" y="437" width="0.0108%" height="15" fill="rgb(245,187,50)" fg:x="7114" fg:w="3"/><text x="25.8142%" y="447.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="25.5642%" y="421" width="0.0108%" height="15" fill="rgb(248,24,15)" fg:x="7114" fg:w="3"/><text x="25.8142%" y="431.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="25.5570%" y="453" width="0.0216%" height="15" fill="rgb(205,166,13)" fg:x="7112" fg:w="6"/><text x="25.8070%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (13 samples, 0.05%)</title><rect x="25.5570%" y="469" width="0.0467%" height="15" fill="rgb(208,114,23)" fg:x="7112" fg:w="13"/><text x="25.8070%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (7 samples, 0.03%)</title><rect x="25.5786%" y="453" width="0.0252%" height="15" fill="rgb(239,127,18)" fg:x="7118" fg:w="7"/><text x="25.8286%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="25.5786%" y="437" width="0.0252%" height="15" fill="rgb(219,154,28)" fg:x="7118" fg:w="7"/><text x="25.8286%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.03%)</title><rect x="25.5786%" y="421" width="0.0252%" height="15" fill="rgb(225,157,23)" fg:x="7118" fg:w="7"/><text x="25.8286%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (6 samples, 0.02%)</title><rect x="25.5821%" y="405" width="0.0216%" height="15" fill="rgb(219,8,6)" fg:x="7119" fg:w="6"/><text x="25.8321%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (4 samples, 0.01%)</title><rect x="25.5893%" y="389" width="0.0144%" height="15" fill="rgb(212,47,6)" fg:x="7121" fg:w="4"/><text x="25.8393%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="25.5893%" y="373" width="0.0144%" height="15" fill="rgb(224,190,4)" fg:x="7121" fg:w="4"/><text x="25.8393%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (4 samples, 0.01%)</title><rect x="25.5893%" y="357" width="0.0144%" height="15" fill="rgb(239,183,29)" fg:x="7121" fg:w="4"/><text x="25.8393%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.11%)</title><rect x="25.4995%" y="501" width="0.1150%" height="15" fill="rgb(213,57,7)" fg:x="7096" fg:w="32"/><text x="25.7495%" y="511.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (32 samples, 0.11%)</title><rect x="25.4995%" y="485" width="0.1150%" height="15" fill="rgb(216,148,1)" fg:x="7096" fg:w="32"/><text x="25.7495%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::Or&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="25.6037%" y="469" width="0.0108%" height="15" fill="rgb(236,182,29)" fg:x="7125" fg:w="3"/><text x="25.8537%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="25.6037%" y="453" width="0.0108%" height="15" fill="rgb(244,120,48)" fg:x="7125" fg:w="3"/><text x="25.8537%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.12%)</title><rect x="25.4995%" y="533" width="0.1222%" height="15" fill="rgb(206,71,34)" fg:x="7096" fg:w="34"/><text x="25.7495%" y="543.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (34 samples, 0.12%)</title><rect x="25.4995%" y="517" width="0.1222%" height="15" fill="rgb(242,32,6)" fg:x="7096" fg:w="34"/><text x="25.7495%" y="527.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="25.6289%" y="485" width="0.0180%" height="15" fill="rgb(241,35,3)" fg:x="7132" fg:w="5"/><text x="25.8789%" y="495.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (5 samples, 0.02%)</title><rect x="25.6289%" y="469" width="0.0180%" height="15" fill="rgb(222,62,19)" fg:x="7132" fg:w="5"/><text x="25.8789%" y="479.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5 samples, 0.02%)</title><rect x="25.6289%" y="453" width="0.0180%" height="15" fill="rgb(223,110,41)" fg:x="7132" fg:w="5"/><text x="25.8789%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5 samples, 0.02%)</title><rect x="25.6289%" y="437" width="0.0180%" height="15" fill="rgb(208,224,4)" fg:x="7132" fg:w="5"/><text x="25.8789%" y="447.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (5 samples, 0.02%)</title><rect x="25.6289%" y="421" width="0.0180%" height="15" fill="rgb(241,137,19)" fg:x="7132" fg:w="5"/><text x="25.8789%" y="431.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (5 samples, 0.02%)</title><rect x="25.6289%" y="405" width="0.0180%" height="15" fill="rgb(244,24,17)" fg:x="7132" fg:w="5"/><text x="25.8789%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (6 samples, 0.02%)</title><rect x="25.6540%" y="453" width="0.0216%" height="15" fill="rgb(245,178,49)" fg:x="7139" fg:w="6"/><text x="25.9040%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.02%)</title><rect x="25.6540%" y="437" width="0.0216%" height="15" fill="rgb(219,160,38)" fg:x="7139" fg:w="6"/><text x="25.9040%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (32 samples, 0.11%)</title><rect x="25.6289%" y="533" width="0.1150%" height="15" fill="rgb(228,137,14)" fg:x="7132" fg:w="32"/><text x="25.8789%" y="543.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.11%)</title><rect x="25.6289%" y="517" width="0.1150%" height="15" fill="rgb(237,134,11)" fg:x="7132" fg:w="32"/><text x="25.8789%" y="527.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (32 samples, 0.11%)</title><rect x="25.6289%" y="501" width="0.1150%" height="15" fill="rgb(211,126,44)" fg:x="7132" fg:w="32"/><text x="25.8789%" y="511.50"></text></g><g><title>parking::Unparker::unpark (26 samples, 0.09%)</title><rect x="25.6504%" y="485" width="0.0934%" height="15" fill="rgb(226,171,33)" fg:x="7138" fg:w="26"/><text x="25.9004%" y="495.50"></text></g><g><title>parking::Inner::unpark (26 samples, 0.09%)</title><rect x="25.6504%" y="469" width="0.0934%" height="15" fill="rgb(253,99,13)" fg:x="7138" fg:w="26"/><text x="25.9004%" y="479.50"></text></g><g><title>syscall (19 samples, 0.07%)</title><rect x="25.6756%" y="453" width="0.0683%" height="15" fill="rgb(244,48,7)" fg:x="7145" fg:w="19"/><text x="25.9256%" y="463.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="25.6756%" y="437" width="0.0683%" height="15" fill="rgb(244,217,54)" fg:x="7145" fg:w="19"/><text x="25.9256%" y="447.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="25.6756%" y="421" width="0.0683%" height="15" fill="rgb(224,15,18)" fg:x="7145" fg:w="19"/><text x="25.9256%" y="431.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="25.6756%" y="405" width="0.0683%" height="15" fill="rgb(244,99,12)" fg:x="7145" fg:w="19"/><text x="25.9256%" y="415.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="25.6828%" y="389" width="0.0611%" height="15" fill="rgb(233,226,8)" fg:x="7147" fg:w="17"/><text x="25.9328%" y="399.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="25.6864%" y="373" width="0.0575%" height="15" fill="rgb(229,211,3)" fg:x="7148" fg:w="16"/><text x="25.9364%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="25.7079%" y="357" width="0.0359%" height="15" fill="rgb(216,140,21)" fg:x="7154" fg:w="10"/><text x="25.9579%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="25.7223%" y="341" width="0.0216%" height="15" fill="rgb(234,122,30)" fg:x="7158" fg:w="6"/><text x="25.9723%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="25.7223%" y="325" width="0.0216%" height="15" fill="rgb(236,25,46)" fg:x="7158" fg:w="6"/><text x="25.9723%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="25.7295%" y="309" width="0.0144%" height="15" fill="rgb(217,52,54)" fg:x="7160" fg:w="4"/><text x="25.9795%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="25.7331%" y="293" width="0.0108%" height="15" fill="rgb(222,29,26)" fg:x="7161" fg:w="3"/><text x="25.9831%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="25.7331%" y="277" width="0.0108%" height="15" fill="rgb(216,177,29)" fg:x="7161" fg:w="3"/><text x="25.9831%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (8 samples, 0.03%)</title><rect x="25.7439%" y="533" width="0.0287%" height="15" fill="rgb(247,136,51)" fg:x="7164" fg:w="8"/><text x="25.9939%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="25.7439%" y="517" width="0.0287%" height="15" fill="rgb(231,47,47)" fg:x="7164" fg:w="8"/><text x="25.9939%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (8 samples, 0.03%)</title><rect x="25.7439%" y="501" width="0.0287%" height="15" fill="rgb(211,192,36)" fg:x="7164" fg:w="8"/><text x="25.9939%" y="511.50"></text></g><g><title>core::mem::drop (5 samples, 0.02%)</title><rect x="25.7546%" y="485" width="0.0180%" height="15" fill="rgb(229,156,32)" fg:x="7167" fg:w="5"/><text x="26.0046%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (5 samples, 0.02%)</title><rect x="25.7546%" y="469" width="0.0180%" height="15" fill="rgb(248,213,20)" fg:x="7167" fg:w="5"/><text x="26.0046%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="25.7546%" y="453" width="0.0180%" height="15" fill="rgb(217,64,7)" fg:x="7167" fg:w="5"/><text x="26.0046%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.01%)</title><rect x="25.7582%" y="437" width="0.0144%" height="15" fill="rgb(232,142,8)" fg:x="7168" fg:w="4"/><text x="26.0082%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::block_on&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt; (4 samples, 0.01%)</title><rect x="25.7582%" y="421" width="0.0144%" height="15" fill="rgb(224,92,44)" fg:x="7168" fg:w="4"/><text x="26.0082%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4 samples, 0.01%)</title><rect x="25.7762%" y="469" width="0.0144%" height="15" fill="rgb(214,169,17)" fg:x="7173" fg:w="4"/><text x="26.0262%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Parker&gt; (8 samples, 0.03%)</title><rect x="25.7726%" y="533" width="0.0287%" height="15" fill="rgb(210,59,37)" fg:x="7172" fg:w="8"/><text x="26.0226%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (8 samples, 0.03%)</title><rect x="25.7726%" y="517" width="0.0287%" height="15" fill="rgb(214,116,48)" fg:x="7172" fg:w="8"/><text x="26.0226%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (8 samples, 0.03%)</title><rect x="25.7726%" y="501" width="0.0287%" height="15" fill="rgb(244,191,6)" fg:x="7172" fg:w="8"/><text x="26.0226%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="25.7726%" y="485" width="0.0287%" height="15" fill="rgb(241,50,52)" fg:x="7172" fg:w="8"/><text x="26.0226%" y="495.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="25.7906%" y="469" width="0.0108%" height="15" fill="rgb(236,75,39)" fg:x="7177" fg:w="3"/><text x="26.0406%" y="479.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (88 samples, 0.32%)</title><rect x="25.4959%" y="869" width="0.3162%" height="15" fill="rgb(236,99,0)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (88 samples, 0.32%)</title><rect x="25.4959%" y="853" width="0.3162%" height="15" fill="rgb(207,202,15)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (88 samples, 0.32%)</title><rect x="25.4959%" y="837" width="0.3162%" height="15" fill="rgb(233,207,14)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="847.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.32%)</title><rect x="25.4959%" y="821" width="0.3162%" height="15" fill="rgb(226,27,51)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="831.50"></text></g><g><title>async_std::task::block_on::block_on (88 samples, 0.32%)</title><rect x="25.4959%" y="805" width="0.3162%" height="15" fill="rgb(206,104,42)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="815.50"></text></g><g><title>async_std::task::builder::Builder::blocking (88 samples, 0.32%)</title><rect x="25.4959%" y="789" width="0.3162%" height="15" fill="rgb(212,225,4)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (88 samples, 0.32%)</title><rect x="25.4959%" y="773" width="0.3162%" height="15" fill="rgb(233,96,42)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (88 samples, 0.32%)</title><rect x="25.4959%" y="757" width="0.3162%" height="15" fill="rgb(229,21,32)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="767.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (88 samples, 0.32%)</title><rect x="25.4959%" y="741" width="0.3162%" height="15" fill="rgb(226,216,24)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="751.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (88 samples, 0.32%)</title><rect x="25.4959%" y="725" width="0.3162%" height="15" fill="rgb(221,163,17)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (88 samples, 0.32%)</title><rect x="25.4959%" y="709" width="0.3162%" height="15" fill="rgb(216,216,42)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (88 samples, 0.32%)</title><rect x="25.4959%" y="693" width="0.3162%" height="15" fill="rgb(240,118,7)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (88 samples, 0.32%)</title><rect x="25.4959%" y="677" width="0.3162%" height="15" fill="rgb(221,67,37)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="687.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (88 samples, 0.32%)</title><rect x="25.4959%" y="661" width="0.3162%" height="15" fill="rgb(241,32,44)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="671.50"></text></g><g><title>async_global_executor::executor::block_on (88 samples, 0.32%)</title><rect x="25.4959%" y="645" width="0.3162%" height="15" fill="rgb(235,204,43)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (88 samples, 0.32%)</title><rect x="25.4959%" y="629" width="0.3162%" height="15" fill="rgb(213,116,10)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (88 samples, 0.32%)</title><rect x="25.4959%" y="613" width="0.3162%" height="15" fill="rgb(239,15,48)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="623.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (88 samples, 0.32%)</title><rect x="25.4959%" y="597" width="0.3162%" height="15" fill="rgb(207,123,36)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="607.50"></text></g><g><title>async_global_executor::reactor::block_on (88 samples, 0.32%)</title><rect x="25.4959%" y="581" width="0.3162%" height="15" fill="rgb(209,103,30)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="591.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (88 samples, 0.32%)</title><rect x="25.4959%" y="565" width="0.3162%" height="15" fill="rgb(238,100,19)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="575.50"></text></g><g><title>async_io::driver::block_on (88 samples, 0.32%)</title><rect x="25.4959%" y="549" width="0.3162%" height="15" fill="rgb(244,30,14)" fg:x="7095" fg:w="88"/><text x="25.7459%" y="559.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (3 samples, 0.01%)</title><rect x="25.8229%" y="789" width="0.0108%" height="15" fill="rgb(249,174,6)" fg:x="7186" fg:w="3"/><text x="26.0729%" y="799.50"></text></g><g><title>async_io::driver::block_on (95 samples, 0.34%)</title><rect x="25.4959%" y="1237" width="0.3414%" height="15" fill="rgb(235,213,41)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1247.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="1221" width="0.3414%" height="15" fill="rgb(213,118,6)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="1205" width="0.3414%" height="15" fill="rgb(235,44,51)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1215.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (95 samples, 0.34%)</title><rect x="25.4959%" y="1189" width="0.3414%" height="15" fill="rgb(217,9,53)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1199.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="1173" width="0.3414%" height="15" fill="rgb(237,172,34)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="1157" width="0.3414%" height="15" fill="rgb(206,206,11)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (95 samples, 0.34%)</title><rect x="25.4959%" y="1141" width="0.3414%" height="15" fill="rgb(214,149,29)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1151.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (95 samples, 0.34%)</title><rect x="25.4959%" y="1125" width="0.3414%" height="15" fill="rgb(208,123,3)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="1109" width="0.3414%" height="15" fill="rgb(229,126,4)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="1093" width="0.3414%" height="15" fill="rgb(222,92,36)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1103.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (95 samples, 0.34%)</title><rect x="25.4959%" y="1077" width="0.3414%" height="15" fill="rgb(216,39,41)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1087.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="1061" width="0.3414%" height="15" fill="rgb(253,127,28)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1071.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (95 samples, 0.34%)</title><rect x="25.4959%" y="1045" width="0.3414%" height="15" fill="rgb(249,152,51)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (95 samples, 0.34%)</title><rect x="25.4959%" y="1029" width="0.3414%" height="15" fill="rgb(209,123,42)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (95 samples, 0.34%)</title><rect x="25.4959%" y="1013" width="0.3414%" height="15" fill="rgb(241,118,22)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (95 samples, 0.34%)</title><rect x="25.4959%" y="997" width="0.3414%" height="15" fill="rgb(208,25,7)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (95 samples, 0.34%)</title><rect x="25.4959%" y="981" width="0.3414%" height="15" fill="rgb(243,144,39)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="965" width="0.3414%" height="15" fill="rgb(250,50,5)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="975.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (95 samples, 0.34%)</title><rect x="25.4959%" y="949" width="0.3414%" height="15" fill="rgb(207,67,11)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="933" width="0.3414%" height="15" fill="rgb(245,204,40)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="943.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (95 samples, 0.34%)</title><rect x="25.4959%" y="917" width="0.3414%" height="15" fill="rgb(238,228,24)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="25.4959%" y="901" width="0.3414%" height="15" fill="rgb(217,116,22)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="911.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (95 samples, 0.34%)</title><rect x="25.4959%" y="885" width="0.3414%" height="15" fill="rgb(234,98,12)" fg:x="7095" fg:w="95"/><text x="25.7459%" y="895.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (7 samples, 0.03%)</title><rect x="25.8121%" y="869" width="0.0252%" height="15" fill="rgb(242,170,50)" fg:x="7183" fg:w="7"/><text x="26.0621%" y="879.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (7 samples, 0.03%)</title><rect x="25.8121%" y="853" width="0.0252%" height="15" fill="rgb(235,7,5)" fg:x="7183" fg:w="7"/><text x="26.0621%" y="863.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (7 samples, 0.03%)</title><rect x="25.8121%" y="837" width="0.0252%" height="15" fill="rgb(241,114,28)" fg:x="7183" fg:w="7"/><text x="26.0621%" y="847.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (7 samples, 0.03%)</title><rect x="25.8121%" y="821" width="0.0252%" height="15" fill="rgb(246,112,42)" fg:x="7183" fg:w="7"/><text x="26.0621%" y="831.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (7 samples, 0.03%)</title><rect x="25.8121%" y="805" width="0.0252%" height="15" fill="rgb(248,228,14)" fg:x="7183" fg:w="7"/><text x="26.0621%" y="815.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="25.8624%" y="437" width="0.0647%" height="15" fill="rgb(208,133,18)" fg:x="7197" fg:w="18"/><text x="26.1124%" y="447.50"></text></g><g><title>[libc.so.6] (16 samples, 0.06%)</title><rect x="25.8696%" y="421" width="0.0575%" height="15" fill="rgb(207,35,49)" fg:x="7199" fg:w="16"/><text x="26.1196%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="25.9127%" y="405" width="0.0144%" height="15" fill="rgb(205,68,36)" fg:x="7211" fg:w="4"/><text x="26.1627%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="25.9163%" y="389" width="0.0108%" height="15" fill="rgb(245,62,40)" fg:x="7212" fg:w="3"/><text x="26.1663%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="25.9163%" y="373" width="0.0108%" height="15" fill="rgb(228,27,24)" fg:x="7212" fg:w="3"/><text x="26.1663%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="25.9163%" y="357" width="0.0108%" height="15" fill="rgb(253,19,12)" fg:x="7212" fg:w="3"/><text x="26.1663%" y="367.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (26 samples, 0.09%)</title><rect x="25.8373%" y="613" width="0.0934%" height="15" fill="rgb(232,28,20)" fg:x="7190" fg:w="26"/><text x="26.0873%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.09%)</title><rect x="25.8373%" y="597" width="0.0934%" height="15" fill="rgb(218,35,51)" fg:x="7190" fg:w="26"/><text x="26.0873%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.09%)</title><rect x="25.8373%" y="581" width="0.0934%" height="15" fill="rgb(212,90,40)" fg:x="7190" fg:w="26"/><text x="26.0873%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.09%)</title><rect x="25.8373%" y="565" width="0.0934%" height="15" fill="rgb(220,172,12)" fg:x="7190" fg:w="26"/><text x="26.0873%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.09%)</title><rect x="25.8373%" y="549" width="0.0934%" height="15" fill="rgb(226,159,20)" fg:x="7190" fg:w="26"/><text x="26.0873%" y="559.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.09%)</title><rect x="25.8373%" y="533" width="0.0934%" height="15" fill="rgb(234,205,16)" fg:x="7190" fg:w="26"/><text x="26.0873%" y="543.50"></text></g><g><title>__rdl_alloc (26 samples, 0.09%)</title><rect x="25.8373%" y="517" width="0.0934%" height="15" fill="rgb(207,9,39)" fg:x="7190" fg:w="26"/><text x="26.0873%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (25 samples, 0.09%)</title><rect x="25.8409%" y="501" width="0.0898%" height="15" fill="rgb(249,143,15)" fg:x="7191" fg:w="25"/><text x="26.0909%" y="511.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (25 samples, 0.09%)</title><rect x="25.8409%" y="485" width="0.0898%" height="15" fill="rgb(253,133,29)" fg:x="7191" fg:w="25"/><text x="26.0909%" y="495.50"></text></g><g><title>posix_memalign (25 samples, 0.09%)</title><rect x="25.8409%" y="469" width="0.0898%" height="15" fill="rgb(221,187,0)" fg:x="7191" fg:w="25"/><text x="26.0909%" y="479.50"></text></g><g><title>[libc.so.6] (23 samples, 0.08%)</title><rect x="25.8481%" y="453" width="0.0827%" height="15" fill="rgb(205,204,26)" fg:x="7193" fg:w="23"/><text x="26.0981%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="25.9307%" y="613" width="0.0108%" height="15" fill="rgb(224,68,54)" fg:x="7216" fg:w="3"/><text x="26.1807%" y="623.50"></text></g><g><title>async_executor::Executor::state (30 samples, 0.11%)</title><rect x="25.8373%" y="773" width="0.1078%" height="15" fill="rgb(209,67,4)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (30 samples, 0.11%)</title><rect x="25.8373%" y="757" width="0.1078%" height="15" fill="rgb(228,229,18)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (30 samples, 0.11%)</title><rect x="25.8373%" y="741" width="0.1078%" height="15" fill="rgb(231,89,13)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="751.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (30 samples, 0.11%)</title><rect x="25.8373%" y="725" width="0.1078%" height="15" fill="rgb(210,182,18)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="735.50"></text></g><g><title>once_cell::imp::initialize_or_wait (30 samples, 0.11%)</title><rect x="25.8373%" y="709" width="0.1078%" height="15" fill="rgb(240,105,2)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.11%)</title><rect x="25.8373%" y="693" width="0.1078%" height="15" fill="rgb(207,170,50)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="703.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (30 samples, 0.11%)</title><rect x="25.8373%" y="677" width="0.1078%" height="15" fill="rgb(232,133,24)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (30 samples, 0.11%)</title><rect x="25.8373%" y="661" width="0.1078%" height="15" fill="rgb(235,166,27)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="671.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (30 samples, 0.11%)</title><rect x="25.8373%" y="645" width="0.1078%" height="15" fill="rgb(209,19,13)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="655.50"></text></g><g><title>async_executor::State::new (30 samples, 0.11%)</title><rect x="25.8373%" y="629" width="0.1078%" height="15" fill="rgb(226,79,39)" fg:x="7190" fg:w="30"/><text x="26.0873%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.03%)</title><rect x="25.9451%" y="757" width="0.0287%" height="15" fill="rgb(222,163,10)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.03%)</title><rect x="25.9451%" y="741" width="0.0287%" height="15" fill="rgb(214,44,19)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.03%)</title><rect x="25.9451%" y="725" width="0.0287%" height="15" fill="rgb(210,217,13)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.03%)</title><rect x="25.9451%" y="709" width="0.0287%" height="15" fill="rgb(237,61,54)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.03%)</title><rect x="25.9451%" y="693" width="0.0287%" height="15" fill="rgb(226,184,24)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.03%)</title><rect x="25.9451%" y="677" width="0.0287%" height="15" fill="rgb(223,226,4)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="687.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.03%)</title><rect x="25.9451%" y="661" width="0.0287%" height="15" fill="rgb(210,26,41)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="671.50"></text></g><g><title>realloc (8 samples, 0.03%)</title><rect x="25.9451%" y="645" width="0.0287%" height="15" fill="rgb(220,221,6)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="655.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="25.9451%" y="629" width="0.0287%" height="15" fill="rgb(225,89,49)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="639.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="25.9451%" y="613" width="0.0287%" height="15" fill="rgb(218,70,45)" fg:x="7220" fg:w="8"/><text x="26.1951%" y="623.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="25.9918%" y="565" width="0.0323%" height="15" fill="rgb(238,166,21)" fg:x="7233" fg:w="9"/><text x="26.2418%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="25.9990%" y="549" width="0.0252%" height="15" fill="rgb(224,141,44)" fg:x="7235" fg:w="7"/><text x="26.2490%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="25.9990%" y="533" width="0.0252%" height="15" fill="rgb(230,12,49)" fg:x="7235" fg:w="7"/><text x="26.2490%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="25.9990%" y="517" width="0.0252%" height="15" fill="rgb(212,174,12)" fg:x="7235" fg:w="7"/><text x="26.2490%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="25.9990%" y="501" width="0.0252%" height="15" fill="rgb(246,67,9)" fg:x="7235" fg:w="7"/><text x="26.2490%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="26.0062%" y="485" width="0.0180%" height="15" fill="rgb(239,35,23)" fg:x="7237" fg:w="5"/><text x="26.2562%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="26.0134%" y="469" width="0.0108%" height="15" fill="rgb(211,167,0)" fg:x="7239" fg:w="3"/><text x="26.2634%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="26.0134%" y="453" width="0.0108%" height="15" fill="rgb(225,119,45)" fg:x="7239" fg:w="3"/><text x="26.2634%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="26.0134%" y="437" width="0.0108%" height="15" fill="rgb(210,162,6)" fg:x="7239" fg:w="3"/><text x="26.2634%" y="447.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (62 samples, 0.22%)</title><rect x="25.8373%" y="917" width="0.2228%" height="15" fill="rgb(208,118,35)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (62 samples, 0.22%)</title><rect x="25.8373%" y="901" width="0.2228%" height="15" fill="rgb(239,4,53)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (62 samples, 0.22%)</title><rect x="25.8373%" y="885" width="0.2228%" height="15" fill="rgb(213,130,21)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (62 samples, 0.22%)</title><rect x="25.8373%" y="869" width="0.2228%" height="15" fill="rgb(235,148,0)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (62 samples, 0.22%)</title><rect x="25.8373%" y="853" width="0.2228%" height="15" fill="rgb(244,224,18)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (62 samples, 0.22%)</title><rect x="25.8373%" y="837" width="0.2228%" height="15" fill="rgb(211,214,4)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="847.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (62 samples, 0.22%)</title><rect x="25.8373%" y="821" width="0.2228%" height="15" fill="rgb(206,119,25)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 0.22%)</title><rect x="25.8373%" y="805" width="0.2228%" height="15" fill="rgb(243,93,47)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (62 samples, 0.22%)</title><rect x="25.8373%" y="789" width="0.2228%" height="15" fill="rgb(224,194,6)" fg:x="7190" fg:w="62"/><text x="26.0873%" y="799.50"></text></g><g><title>async_executor::Runner::new (32 samples, 0.11%)</title><rect x="25.9451%" y="773" width="0.1150%" height="15" fill="rgb(243,229,6)" fg:x="7220" fg:w="32"/><text x="26.1951%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (24 samples, 0.09%)</title><rect x="25.9738%" y="757" width="0.0862%" height="15" fill="rgb(207,23,50)" fg:x="7228" fg:w="24"/><text x="26.2238%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (22 samples, 0.08%)</title><rect x="25.9810%" y="741" width="0.0791%" height="15" fill="rgb(253,192,32)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (22 samples, 0.08%)</title><rect x="25.9810%" y="725" width="0.0791%" height="15" fill="rgb(213,21,6)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.08%)</title><rect x="25.9810%" y="709" width="0.0791%" height="15" fill="rgb(243,151,13)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.08%)</title><rect x="25.9810%" y="693" width="0.0791%" height="15" fill="rgb(233,165,41)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.08%)</title><rect x="25.9810%" y="677" width="0.0791%" height="15" fill="rgb(246,176,45)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.08%)</title><rect x="25.9810%" y="661" width="0.0791%" height="15" fill="rgb(217,170,52)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.08%)</title><rect x="25.9810%" y="645" width="0.0791%" height="15" fill="rgb(214,203,54)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="655.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.08%)</title><rect x="25.9810%" y="629" width="0.0791%" height="15" fill="rgb(248,215,49)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="639.50"></text></g><g><title>malloc (22 samples, 0.08%)</title><rect x="25.9810%" y="613" width="0.0791%" height="15" fill="rgb(208,46,10)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="623.50"></text></g><g><title>[libc.so.6] (22 samples, 0.08%)</title><rect x="25.9810%" y="597" width="0.0791%" height="15" fill="rgb(254,5,31)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="607.50"></text></g><g><title>[libc.so.6] (22 samples, 0.08%)</title><rect x="25.9810%" y="581" width="0.0791%" height="15" fill="rgb(222,104,33)" fg:x="7230" fg:w="22"/><text x="26.2310%" y="591.50"></text></g><g><title>__mprotect (10 samples, 0.04%)</title><rect x="26.0241%" y="565" width="0.0359%" height="15" fill="rgb(248,49,16)" fg:x="7242" fg:w="10"/><text x="26.2741%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="26.0241%" y="549" width="0.0359%" height="15" fill="rgb(232,198,41)" fg:x="7242" fg:w="10"/><text x="26.2741%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="26.0277%" y="533" width="0.0323%" height="15" fill="rgb(214,125,3)" fg:x="7243" fg:w="9"/><text x="26.2777%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="26.0277%" y="517" width="0.0323%" height="15" fill="rgb(229,220,28)" fg:x="7243" fg:w="9"/><text x="26.2777%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="26.0313%" y="501" width="0.0287%" height="15" fill="rgb(222,64,37)" fg:x="7244" fg:w="8"/><text x="26.2813%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="26.0385%" y="485" width="0.0216%" height="15" fill="rgb(249,184,13)" fg:x="7246" fg:w="6"/><text x="26.2885%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="26.0493%" y="469" width="0.0108%" height="15" fill="rgb(252,176,6)" fg:x="7249" fg:w="3"/><text x="26.2993%" y="479.50"></text></g><g><title>[libc.so.6] (89 samples, 0.32%)</title><rect x="26.2326%" y="565" width="0.3198%" height="15" fill="rgb(228,153,7)" fg:x="7300" fg:w="89"/><text x="26.4826%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="26.5165%" y="549" width="0.0359%" height="15" fill="rgb(242,193,5)" fg:x="7379" fg:w="10"/><text x="26.7665%" y="559.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="26.5165%" y="533" width="0.0359%" height="15" fill="rgb(232,140,9)" fg:x="7379" fg:w="10"/><text x="26.7665%" y="543.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="26.5165%" y="517" width="0.0359%" height="15" fill="rgb(213,222,16)" fg:x="7379" fg:w="10"/><text x="26.7665%" y="527.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="26.5165%" y="501" width="0.0359%" height="15" fill="rgb(222,75,50)" fg:x="7379" fg:w="10"/><text x="26.7665%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="26.5416%" y="485" width="0.0108%" height="15" fill="rgb(205,180,2)" fg:x="7386" fg:w="3"/><text x="26.7916%" y="495.50"></text></g><g><title>[libc.so.6] (122 samples, 0.44%)</title><rect x="26.1176%" y="581" width="0.4384%" height="15" fill="rgb(216,34,7)" fg:x="7268" fg:w="122"/><text x="26.3676%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (205 samples, 0.74%)</title><rect x="25.8373%" y="981" width="0.7367%" height="15" fill="rgb(253,16,32)" fg:x="7190" fg:w="205"/><text x="26.0873%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (205 samples, 0.74%)</title><rect x="25.8373%" y="965" width="0.7367%" height="15" fill="rgb(208,97,28)" fg:x="7190" fg:w="205"/><text x="26.0873%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (205 samples, 0.74%)</title><rect x="25.8373%" y="949" width="0.7367%" height="15" fill="rgb(225,92,11)" fg:x="7190" fg:w="205"/><text x="26.0873%" y="959.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (205 samples, 0.74%)</title><rect x="25.8373%" y="933" width="0.7367%" height="15" fill="rgb(243,38,12)" fg:x="7190" fg:w="205"/><text x="26.0873%" y="943.50"></text></g><g><title>async_executor::Executor::state (143 samples, 0.51%)</title><rect x="26.0601%" y="917" width="0.5139%" height="15" fill="rgb(208,139,16)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (143 samples, 0.51%)</title><rect x="26.0601%" y="901" width="0.5139%" height="15" fill="rgb(227,24,9)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="911.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (143 samples, 0.51%)</title><rect x="26.0601%" y="885" width="0.5139%" height="15" fill="rgb(206,62,11)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="895.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (143 samples, 0.51%)</title><rect x="26.0601%" y="869" width="0.5139%" height="15" fill="rgb(228,134,27)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="879.50"></text></g><g><title>once_cell::imp::initialize_or_wait (143 samples, 0.51%)</title><rect x="26.0601%" y="853" width="0.5139%" height="15" fill="rgb(205,55,33)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (143 samples, 0.51%)</title><rect x="26.0601%" y="837" width="0.5139%" height="15" fill="rgb(243,75,43)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="847.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (143 samples, 0.51%)</title><rect x="26.0601%" y="821" width="0.5139%" height="15" fill="rgb(223,27,42)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="831.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (143 samples, 0.51%)</title><rect x="26.0601%" y="805" width="0.5139%" height="15" fill="rgb(232,189,33)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="815.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (143 samples, 0.51%)</title><rect x="26.0601%" y="789" width="0.5139%" height="15" fill="rgb(210,9,39)" fg:x="7252" fg:w="143"/><text x="26.3101%" y="799.50"></text></g><g><title>async_executor::State::new (141 samples, 0.51%)</title><rect x="26.0673%" y="773" width="0.5067%" height="15" fill="rgb(242,85,26)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (141 samples, 0.51%)</title><rect x="26.0673%" y="757" width="0.5067%" height="15" fill="rgb(248,44,4)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (141 samples, 0.51%)</title><rect x="26.0673%" y="741" width="0.5067%" height="15" fill="rgb(250,96,46)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (141 samples, 0.51%)</title><rect x="26.0673%" y="725" width="0.5067%" height="15" fill="rgb(229,116,26)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (141 samples, 0.51%)</title><rect x="26.0673%" y="709" width="0.5067%" height="15" fill="rgb(246,94,34)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (141 samples, 0.51%)</title><rect x="26.0673%" y="693" width="0.5067%" height="15" fill="rgb(251,73,21)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="703.50"></text></g><g><title>alloc::alloc::alloc (141 samples, 0.51%)</title><rect x="26.0673%" y="677" width="0.5067%" height="15" fill="rgb(254,121,25)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="687.50"></text></g><g><title>__rdl_alloc (141 samples, 0.51%)</title><rect x="26.0673%" y="661" width="0.5067%" height="15" fill="rgb(215,161,49)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (141 samples, 0.51%)</title><rect x="26.0673%" y="645" width="0.5067%" height="15" fill="rgb(221,43,13)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="655.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (141 samples, 0.51%)</title><rect x="26.0673%" y="629" width="0.5067%" height="15" fill="rgb(249,5,37)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="639.50"></text></g><g><title>posix_memalign (141 samples, 0.51%)</title><rect x="26.0673%" y="613" width="0.5067%" height="15" fill="rgb(226,25,44)" fg:x="7254" fg:w="141"/><text x="26.3173%" y="623.50"></text></g><g><title>[libc.so.6] (140 samples, 0.50%)</title><rect x="26.0709%" y="597" width="0.5031%" height="15" fill="rgb(238,189,16)" fg:x="7255" fg:w="140"/><text x="26.3209%" y="607.50"></text></g><g><title>__lll_lock_wake_private (4 samples, 0.01%)</title><rect x="26.5596%" y="581" width="0.0144%" height="15" fill="rgb(251,186,8)" fg:x="7391" fg:w="4"/><text x="26.8096%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="26.5596%" y="565" width="0.0144%" height="15" fill="rgb(254,34,31)" fg:x="7391" fg:w="4"/><text x="26.8096%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="26.5596%" y="549" width="0.0144%" height="15" fill="rgb(225,215,27)" fg:x="7391" fg:w="4"/><text x="26.8096%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="26.5596%" y="533" width="0.0144%" height="15" fill="rgb(221,192,48)" fg:x="7391" fg:w="4"/><text x="26.8096%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="26.5596%" y="517" width="0.0144%" height="15" fill="rgb(219,137,20)" fg:x="7391" fg:w="4"/><text x="26.8096%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="26.5596%" y="501" width="0.0144%" height="15" fill="rgb(219,84,11)" fg:x="7391" fg:w="4"/><text x="26.8096%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (5 samples, 0.02%)</title><rect x="26.5991%" y="869" width="0.0180%" height="15" fill="rgb(224,10,23)" fg:x="7402" fg:w="5"/><text x="26.8491%" y="879.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (5 samples, 0.02%)</title><rect x="26.5991%" y="853" width="0.0180%" height="15" fill="rgb(248,22,39)" fg:x="7402" fg:w="5"/><text x="26.8491%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (5 samples, 0.02%)</title><rect x="26.5991%" y="837" width="0.0180%" height="15" fill="rgb(212,154,20)" fg:x="7402" fg:w="5"/><text x="26.8491%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.02%)</title><rect x="26.5991%" y="821" width="0.0180%" height="15" fill="rgb(236,199,50)" fg:x="7402" fg:w="5"/><text x="26.8491%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.02%)</title><rect x="26.5991%" y="805" width="0.0180%" height="15" fill="rgb(211,9,17)" fg:x="7402" fg:w="5"/><text x="26.8491%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="26.5991%" y="789" width="0.0180%" height="15" fill="rgb(243,216,36)" fg:x="7402" fg:w="5"/><text x="26.8491%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="26.5991%" y="773" width="0.0180%" height="15" fill="rgb(250,2,10)" fg:x="7402" fg:w="5"/><text x="26.8491%" y="783.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="26.5991%" y="757" width="0.0180%" height="15" fill="rgb(226,50,48)" fg:x="7402" fg:w="5"/><text x="26.8491%" y="767.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="26.6027%" y="741" width="0.0144%" height="15" fill="rgb(243,81,16)" fg:x="7403" fg:w="4"/><text x="26.8527%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (15 samples, 0.05%)</title><rect x="26.5740%" y="933" width="0.0539%" height="15" fill="rgb(250,14,2)" fg:x="7395" fg:w="15"/><text x="26.8240%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (15 samples, 0.05%)</title><rect x="26.5740%" y="917" width="0.0539%" height="15" fill="rgb(233,135,29)" fg:x="7395" fg:w="15"/><text x="26.8240%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (12 samples, 0.04%)</title><rect x="26.5847%" y="901" width="0.0431%" height="15" fill="rgb(224,64,43)" fg:x="7398" fg:w="12"/><text x="26.8347%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (10 samples, 0.04%)</title><rect x="26.5919%" y="885" width="0.0359%" height="15" fill="rgb(238,84,13)" fg:x="7400" fg:w="10"/><text x="26.8419%" y="895.50"></text></g><g><title>alloc::collections::btree::node::splitpoint (3 samples, 0.01%)</title><rect x="26.6171%" y="869" width="0.0108%" height="15" fill="rgb(253,48,26)" fg:x="7407" fg:w="3"/><text x="26.8671%" y="879.50"></text></g><g><title>async_std::task::builder::Builder::blocking (231 samples, 0.83%)</title><rect x="25.8373%" y="1237" width="0.8301%" height="15" fill="rgb(205,223,31)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (231 samples, 0.83%)</title><rect x="25.8373%" y="1221" width="0.8301%" height="15" fill="rgb(221,41,32)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (231 samples, 0.83%)</title><rect x="25.8373%" y="1205" width="0.8301%" height="15" fill="rgb(213,158,31)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (231 samples, 0.83%)</title><rect x="25.8373%" y="1189" width="0.8301%" height="15" fill="rgb(245,126,43)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1199.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (231 samples, 0.83%)</title><rect x="25.8373%" y="1173" width="0.8301%" height="15" fill="rgb(227,7,22)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (231 samples, 0.83%)</title><rect x="25.8373%" y="1157" width="0.8301%" height="15" fill="rgb(252,90,44)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (231 samples, 0.83%)</title><rect x="25.8373%" y="1141" width="0.8301%" height="15" fill="rgb(253,91,0)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (231 samples, 0.83%)</title><rect x="25.8373%" y="1125" width="0.8301%" height="15" fill="rgb(252,175,49)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (231 samples, 0.83%)</title><rect x="25.8373%" y="1109" width="0.8301%" height="15" fill="rgb(246,150,1)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1119.50"></text></g><g><title>async_global_executor::executor::block_on (231 samples, 0.83%)</title><rect x="25.8373%" y="1093" width="0.8301%" height="15" fill="rgb(241,192,25)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (231 samples, 0.83%)</title><rect x="25.8373%" y="1077" width="0.8301%" height="15" fill="rgb(239,187,11)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (231 samples, 0.83%)</title><rect x="25.8373%" y="1061" width="0.8301%" height="15" fill="rgb(218,202,51)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (231 samples, 0.83%)</title><rect x="25.8373%" y="1045" width="0.8301%" height="15" fill="rgb(225,176,8)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1055.50"></text></g><g><title>async_global_executor::reactor::block_on (231 samples, 0.83%)</title><rect x="25.8373%" y="1029" width="0.8301%" height="15" fill="rgb(219,122,41)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1039.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (231 samples, 0.83%)</title><rect x="25.8373%" y="1013" width="0.8301%" height="15" fill="rgb(248,140,20)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1023.50"></text></g><g><title>async_io::driver::block_on (231 samples, 0.83%)</title><rect x="25.8373%" y="997" width="0.8301%" height="15" fill="rgb(245,41,37)" fg:x="7190" fg:w="231"/><text x="26.0873%" y="1007.50"></text></g><g><title>async_io::reactor::ReactorLock::react (26 samples, 0.09%)</title><rect x="26.5740%" y="981" width="0.0934%" height="15" fill="rgb(235,82,39)" fg:x="7395" fg:w="26"/><text x="26.8240%" y="991.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (26 samples, 0.09%)</title><rect x="26.5740%" y="965" width="0.0934%" height="15" fill="rgb(230,108,42)" fg:x="7395" fg:w="26"/><text x="26.8240%" y="975.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (26 samples, 0.09%)</title><rect x="26.5740%" y="949" width="0.0934%" height="15" fill="rgb(215,150,50)" fg:x="7395" fg:w="26"/><text x="26.8240%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (11 samples, 0.04%)</title><rect x="26.6279%" y="933" width="0.0395%" height="15" fill="rgb(233,212,5)" fg:x="7410" fg:w="11"/><text x="26.8779%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (11 samples, 0.04%)</title><rect x="26.6279%" y="917" width="0.0395%" height="15" fill="rgb(245,80,22)" fg:x="7410" fg:w="11"/><text x="26.8779%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (11 samples, 0.04%)</title><rect x="26.6279%" y="901" width="0.0395%" height="15" fill="rgb(238,129,16)" fg:x="7410" fg:w="11"/><text x="26.8779%" y="911.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (11 samples, 0.04%)</title><rect x="26.6279%" y="885" width="0.0395%" height="15" fill="rgb(240,19,0)" fg:x="7410" fg:w="11"/><text x="26.8779%" y="895.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (11 samples, 0.04%)</title><rect x="26.6279%" y="869" width="0.0395%" height="15" fill="rgb(232,42,35)" fg:x="7410" fg:w="11"/><text x="26.8779%" y="879.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (9 samples, 0.03%)</title><rect x="26.6350%" y="853" width="0.0323%" height="15" fill="rgb(223,130,24)" fg:x="7412" fg:w="9"/><text x="26.8850%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (4 samples, 0.01%)</title><rect x="26.6530%" y="837" width="0.0144%" height="15" fill="rgb(237,16,22)" fg:x="7417" fg:w="4"/><text x="26.9030%" y="847.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (4 samples, 0.01%)</title><rect x="26.6530%" y="821" width="0.0144%" height="15" fill="rgb(248,192,20)" fg:x="7417" fg:w="4"/><text x="26.9030%" y="831.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="26.6674%" y="1189" width="0.0395%" height="15" fill="rgb(233,167,2)" fg:x="7421" fg:w="11"/><text x="26.9174%" y="1199.50"></text></g><g><title>async_executor::State::notify (10 samples, 0.04%)</title><rect x="26.7177%" y="1157" width="0.0359%" height="15" fill="rgb(252,71,44)" fg:x="7435" fg:w="10"/><text x="26.9677%" y="1167.50"></text></g><g><title>core::task::wake::Waker::wake (9 samples, 0.03%)</title><rect x="26.7213%" y="1141" width="0.0323%" height="15" fill="rgb(238,37,47)" fg:x="7436" fg:w="9"/><text x="26.9713%" y="1151.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (9 samples, 0.03%)</title><rect x="26.7213%" y="1125" width="0.0323%" height="15" fill="rgb(214,202,54)" fg:x="7436" fg:w="9"/><text x="26.9713%" y="1135.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (9 samples, 0.03%)</title><rect x="26.7213%" y="1109" width="0.0323%" height="15" fill="rgb(254,165,40)" fg:x="7436" fg:w="9"/><text x="26.9713%" y="1119.50"></text></g><g><title>parking::Unparker::unpark (9 samples, 0.03%)</title><rect x="26.7213%" y="1093" width="0.0323%" height="15" fill="rgb(246,173,38)" fg:x="7436" fg:w="9"/><text x="26.9713%" y="1103.50"></text></g><g><title>parking::Inner::unpark (8 samples, 0.03%)</title><rect x="26.7249%" y="1077" width="0.0287%" height="15" fill="rgb(215,3,27)" fg:x="7437" fg:w="8"/><text x="26.9749%" y="1087.50"></text></g><g><title>syscall (8 samples, 0.03%)</title><rect x="26.7249%" y="1061" width="0.0287%" height="15" fill="rgb(239,169,51)" fg:x="7437" fg:w="8"/><text x="26.9749%" y="1071.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="26.7249%" y="1045" width="0.0287%" height="15" fill="rgb(212,5,25)" fg:x="7437" fg:w="8"/><text x="26.9749%" y="1055.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="26.7249%" y="1029" width="0.0287%" height="15" fill="rgb(243,45,17)" fg:x="7437" fg:w="8"/><text x="26.9749%" y="1039.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="26.7249%" y="1013" width="0.0287%" height="15" fill="rgb(242,97,9)" fg:x="7437" fg:w="8"/><text x="26.9749%" y="1023.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="26.7249%" y="997" width="0.0287%" height="15" fill="rgb(228,71,31)" fg:x="7437" fg:w="8"/><text x="26.9749%" y="1007.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="26.7249%" y="981" width="0.0287%" height="15" fill="rgb(252,184,16)" fg:x="7437" fg:w="8"/><text x="26.9749%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="26.7357%" y="965" width="0.0180%" height="15" fill="rgb(236,169,46)" fg:x="7440" fg:w="5"/><text x="26.9857%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="26.7428%" y="949" width="0.0108%" height="15" fill="rgb(207,17,47)" fg:x="7442" fg:w="3"/><text x="26.9928%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="26.7428%" y="933" width="0.0108%" height="15" fill="rgb(206,201,28)" fg:x="7442" fg:w="3"/><text x="26.9928%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="26.7428%" y="917" width="0.0108%" height="15" fill="rgb(224,184,23)" fg:x="7442" fg:w="3"/><text x="26.9928%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (17 samples, 0.06%)</title><rect x="26.7177%" y="1189" width="0.0611%" height="15" fill="rgb(208,139,48)" fg:x="7435" fg:w="17"/><text x="26.9677%" y="1199.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (17 samples, 0.06%)</title><rect x="26.7177%" y="1173" width="0.0611%" height="15" fill="rgb(208,130,10)" fg:x="7435" fg:w="17"/><text x="26.9677%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (7 samples, 0.03%)</title><rect x="26.7536%" y="1157" width="0.0252%" height="15" fill="rgb(211,213,45)" fg:x="7445" fg:w="7"/><text x="27.0036%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (7 samples, 0.03%)</title><rect x="26.7536%" y="1141" width="0.0252%" height="15" fill="rgb(235,100,30)" fg:x="7445" fg:w="7"/><text x="27.0036%" y="1151.50"></text></g><g><title>[libc.so.6] (19 samples, 0.07%)</title><rect x="26.7788%" y="1173" width="0.0683%" height="15" fill="rgb(206,144,31)" fg:x="7452" fg:w="19"/><text x="27.0288%" y="1183.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="26.8507%" y="1157" width="0.0503%" height="15" fill="rgb(224,200,26)" fg:x="7472" fg:w="14"/><text x="27.1007%" y="1167.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="26.9908%" y="1045" width="0.0683%" height="15" fill="rgb(247,104,53)" fg:x="7511" fg:w="19"/><text x="27.2408%" y="1055.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="26.9908%" y="1029" width="0.0683%" height="15" fill="rgb(220,14,17)" fg:x="7511" fg:w="19"/><text x="27.2408%" y="1039.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="26.9908%" y="1013" width="0.0683%" height="15" fill="rgb(230,140,40)" fg:x="7511" fg:w="19"/><text x="27.2408%" y="1023.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="26.9908%" y="997" width="0.0683%" height="15" fill="rgb(229,2,41)" fg:x="7511" fg:w="19"/><text x="27.2408%" y="1007.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="26.9908%" y="981" width="0.0683%" height="15" fill="rgb(232,89,16)" fg:x="7511" fg:w="19"/><text x="27.2408%" y="991.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="26.9980%" y="965" width="0.0611%" height="15" fill="rgb(247,59,52)" fg:x="7513" fg:w="17"/><text x="27.2480%" y="975.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="27.0160%" y="949" width="0.0431%" height="15" fill="rgb(226,110,21)" fg:x="7518" fg:w="12"/><text x="27.2660%" y="959.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="27.0195%" y="933" width="0.0395%" height="15" fill="rgb(224,176,43)" fg:x="7519" fg:w="11"/><text x="27.2695%" y="943.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="27.0303%" y="917" width="0.0287%" height="15" fill="rgb(221,73,6)" fg:x="7522" fg:w="8"/><text x="27.2803%" y="927.50"></text></g><g><title>[libc.so.6] (47 samples, 0.17%)</title><rect x="26.9764%" y="1061" width="0.1689%" height="15" fill="rgb(232,78,19)" fg:x="7507" fg:w="47"/><text x="27.2264%" y="1071.50"></text></g><g><title>__mprotect (24 samples, 0.09%)</title><rect x="27.0591%" y="1045" width="0.0862%" height="15" fill="rgb(233,112,48)" fg:x="7530" fg:w="24"/><text x="27.3091%" y="1055.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="27.0591%" y="1029" width="0.0862%" height="15" fill="rgb(243,131,47)" fg:x="7530" fg:w="24"/><text x="27.3091%" y="1039.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="27.0627%" y="1013" width="0.0827%" height="15" fill="rgb(226,51,1)" fg:x="7531" fg:w="23"/><text x="27.3127%" y="1023.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="27.0627%" y="997" width="0.0827%" height="15" fill="rgb(247,58,7)" fg:x="7531" fg:w="23"/><text x="27.3127%" y="1007.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="27.0699%" y="981" width="0.0755%" height="15" fill="rgb(209,7,32)" fg:x="7533" fg:w="21"/><text x="27.3199%" y="991.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="27.0806%" y="965" width="0.0647%" height="15" fill="rgb(209,39,41)" fg:x="7536" fg:w="18"/><text x="27.3306%" y="975.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="27.0986%" y="949" width="0.0467%" height="15" fill="rgb(226,182,46)" fg:x="7541" fg:w="13"/><text x="27.3486%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="27.1238%" y="933" width="0.0216%" height="15" fill="rgb(230,219,10)" fg:x="7548" fg:w="6"/><text x="27.3738%" y="943.50"></text></g><g><title>[libc.so.6] (61 samples, 0.22%)</title><rect x="26.9369%" y="1077" width="0.2192%" height="15" fill="rgb(227,175,30)" fg:x="7496" fg:w="61"/><text x="27.1869%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1453%" y="1061" width="0.0108%" height="15" fill="rgb(217,2,50)" fg:x="7554" fg:w="3"/><text x="27.3953%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1453%" y="1045" width="0.0108%" height="15" fill="rgb(229,160,0)" fg:x="7554" fg:w="3"/><text x="27.3953%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1453%" y="1029" width="0.0108%" height="15" fill="rgb(207,78,37)" fg:x="7554" fg:w="3"/><text x="27.3953%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (76 samples, 0.27%)</title><rect x="26.9010%" y="1157" width="0.2731%" height="15" fill="rgb(225,57,0)" fg:x="7486" fg:w="76"/><text x="27.1510%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.27%)</title><rect x="26.9010%" y="1141" width="0.2731%" height="15" fill="rgb(232,154,2)" fg:x="7486" fg:w="76"/><text x="27.1510%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.27%)</title><rect x="26.9010%" y="1125" width="0.2731%" height="15" fill="rgb(241,212,25)" fg:x="7486" fg:w="76"/><text x="27.1510%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.27%)</title><rect x="26.9010%" y="1109" width="0.2731%" height="15" fill="rgb(226,69,20)" fg:x="7486" fg:w="76"/><text x="27.1510%" y="1119.50"></text></g><g><title>malloc (76 samples, 0.27%)</title><rect x="26.9010%" y="1093" width="0.2731%" height="15" fill="rgb(247,184,54)" fg:x="7486" fg:w="76"/><text x="27.1510%" y="1103.50"></text></g><g><title>__lll_lock_wake_private (3 samples, 0.01%)</title><rect x="27.1633%" y="1077" width="0.0108%" height="15" fill="rgb(210,145,0)" fg:x="7559" fg:w="3"/><text x="27.4133%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1633%" y="1061" width="0.0108%" height="15" fill="rgb(253,82,12)" fg:x="7559" fg:w="3"/><text x="27.4133%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1633%" y="1045" width="0.0108%" height="15" fill="rgb(245,42,11)" fg:x="7559" fg:w="3"/><text x="27.4133%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1633%" y="1029" width="0.0108%" height="15" fill="rgb(219,147,32)" fg:x="7559" fg:w="3"/><text x="27.4133%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1633%" y="1013" width="0.0108%" height="15" fill="rgb(246,12,7)" fg:x="7559" fg:w="3"/><text x="27.4133%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1633%" y="997" width="0.0108%" height="15" fill="rgb(243,50,9)" fg:x="7559" fg:w="3"/><text x="27.4133%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.1633%" y="981" width="0.0108%" height="15" fill="rgb(219,149,6)" fg:x="7559" fg:w="3"/><text x="27.4133%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (91 samples, 0.33%)</title><rect x="26.8507%" y="1173" width="0.3270%" height="15" fill="rgb(241,51,42)" fg:x="7472" fg:w="91"/><text x="27.1007%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="27.1848%" y="1157" width="0.0287%" height="15" fill="rgb(226,128,27)" fg:x="7565" fg:w="8"/><text x="27.4348%" y="1167.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="27.1848%" y="1141" width="0.0287%" height="15" fill="rgb(244,144,4)" fg:x="7565" fg:w="8"/><text x="27.4348%" y="1151.50"></text></g><g><title>async_task::runnable::spawn_unchecked (122 samples, 0.44%)</title><rect x="26.7788%" y="1189" width="0.4384%" height="15" fill="rgb(221,4,13)" fg:x="7452" fg:w="122"/><text x="27.0288%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (11 samples, 0.04%)</title><rect x="27.1777%" y="1173" width="0.0395%" height="15" fill="rgb(208,170,28)" fg:x="7563" fg:w="11"/><text x="27.4277%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (15 samples, 0.05%)</title><rect x="27.2172%" y="1189" width="0.0539%" height="15" fill="rgb(226,131,13)" fg:x="7574" fg:w="15"/><text x="27.4672%" y="1199.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="27.2172%" y="1173" width="0.0539%" height="15" fill="rgb(215,72,41)" fg:x="7574" fg:w="15"/><text x="27.4672%" y="1183.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (15 samples, 0.05%)</title><rect x="27.2172%" y="1157" width="0.0539%" height="15" fill="rgb(243,108,20)" fg:x="7574" fg:w="15"/><text x="27.4672%" y="1167.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (15 samples, 0.05%)</title><rect x="27.2172%" y="1141" width="0.0539%" height="15" fill="rgb(230,189,17)" fg:x="7574" fg:w="15"/><text x="27.4672%" y="1151.50"></text></g><g><title>syscall (14 samples, 0.05%)</title><rect x="27.2208%" y="1125" width="0.0503%" height="15" fill="rgb(220,50,17)" fg:x="7575" fg:w="14"/><text x="27.4708%" y="1135.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="27.2208%" y="1109" width="0.0503%" height="15" fill="rgb(248,152,48)" fg:x="7575" fg:w="14"/><text x="27.4708%" y="1119.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="27.2244%" y="1093" width="0.0467%" height="15" fill="rgb(244,91,11)" fg:x="7576" fg:w="13"/><text x="27.4744%" y="1103.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="27.2244%" y="1077" width="0.0467%" height="15" fill="rgb(220,157,5)" fg:x="7576" fg:w="13"/><text x="27.4744%" y="1087.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="27.2244%" y="1061" width="0.0467%" height="15" fill="rgb(253,137,8)" fg:x="7576" fg:w="13"/><text x="27.4744%" y="1071.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="27.2244%" y="1045" width="0.0467%" height="15" fill="rgb(217,137,51)" fg:x="7576" fg:w="13"/><text x="27.4744%" y="1055.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="27.2280%" y="1029" width="0.0431%" height="15" fill="rgb(218,209,53)" fg:x="7577" fg:w="12"/><text x="27.4780%" y="1039.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="27.2423%" y="1013" width="0.0287%" height="15" fill="rgb(249,137,25)" fg:x="7581" fg:w="8"/><text x="27.4923%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="27.2531%" y="997" width="0.0180%" height="15" fill="rgb(239,155,26)" fg:x="7584" fg:w="5"/><text x="27.5031%" y="1007.50"></text></g><g><title>std::sys::unix::futex::futex_wait (7 samples, 0.03%)</title><rect x="27.2747%" y="1125" width="0.0252%" height="15" fill="rgb(227,85,46)" fg:x="7590" fg:w="7"/><text x="27.5247%" y="1135.50"></text></g><g><title>syscall (7 samples, 0.03%)</title><rect x="27.2747%" y="1109" width="0.0252%" height="15" fill="rgb(251,107,43)" fg:x="7590" fg:w="7"/><text x="27.5247%" y="1119.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="27.2747%" y="1093" width="0.0252%" height="15" fill="rgb(234,170,33)" fg:x="7590" fg:w="7"/><text x="27.5247%" y="1103.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="27.2747%" y="1077" width="0.0252%" height="15" fill="rgb(206,29,35)" fg:x="7590" fg:w="7"/><text x="27.5247%" y="1087.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="27.2747%" y="1061" width="0.0252%" height="15" fill="rgb(227,138,25)" fg:x="7590" fg:w="7"/><text x="27.5247%" y="1071.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="27.2783%" y="1045" width="0.0216%" height="15" fill="rgb(249,131,35)" fg:x="7591" fg:w="6"/><text x="27.5283%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="27.2819%" y="1029" width="0.0180%" height="15" fill="rgb(239,6,40)" fg:x="7592" fg:w="5"/><text x="27.5319%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="27.2819%" y="1013" width="0.0180%" height="15" fill="rgb(246,136,47)" fg:x="7592" fg:w="5"/><text x="27.5319%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="27.2819%" y="997" width="0.0180%" height="15" fill="rgb(253,58,26)" fg:x="7592" fg:w="5"/><text x="27.5319%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="27.2819%" y="981" width="0.0180%" height="15" fill="rgb(237,141,10)" fg:x="7592" fg:w="5"/><text x="27.5319%" y="991.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="27.2855%" y="965" width="0.0144%" height="15" fill="rgb(234,156,12)" fg:x="7593" fg:w="4"/><text x="27.5355%" y="975.50"></text></g><g><title>async_std::task::builder::Builder::spawn (180 samples, 0.65%)</title><rect x="26.6674%" y="1237" width="0.6468%" height="15" fill="rgb(243,224,36)" fg:x="7421" fg:w="180"/><text x="26.9174%" y="1247.50"></text></g><g><title>async_global_executor::executor::spawn (180 samples, 0.65%)</title><rect x="26.6674%" y="1221" width="0.6468%" height="15" fill="rgb(205,229,51)" fg:x="7421" fg:w="180"/><text x="26.9174%" y="1231.50"></text></g><g><title>async_executor::Executor::spawn (180 samples, 0.65%)</title><rect x="26.6674%" y="1205" width="0.6468%" height="15" fill="rgb(223,189,4)" fg:x="7421" fg:w="180"/><text x="26.9174%" y="1215.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.04%)</title><rect x="27.2747%" y="1189" width="0.0395%" height="15" fill="rgb(249,167,54)" fg:x="7590" fg:w="11"/><text x="27.5247%" y="1199.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.04%)</title><rect x="27.2747%" y="1173" width="0.0395%" height="15" fill="rgb(218,34,28)" fg:x="7590" fg:w="11"/><text x="27.5247%" y="1183.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (11 samples, 0.04%)</title><rect x="27.2747%" y="1157" width="0.0395%" height="15" fill="rgb(232,109,42)" fg:x="7590" fg:w="11"/><text x="27.5247%" y="1167.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (11 samples, 0.04%)</title><rect x="27.2747%" y="1141" width="0.0395%" height="15" fill="rgb(248,214,46)" fg:x="7590" fg:w="11"/><text x="27.5247%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (4 samples, 0.01%)</title><rect x="27.2998%" y="1125" width="0.0144%" height="15" fill="rgb(244,216,40)" fg:x="7597" fg:w="4"/><text x="27.5498%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.01%)</title><rect x="27.3034%" y="1109" width="0.0108%" height="15" fill="rgb(231,226,31)" fg:x="7598" fg:w="3"/><text x="27.5534%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="27.3034%" y="1093" width="0.0108%" height="15" fill="rgb(238,38,43)" fg:x="7598" fg:w="3"/><text x="27.5534%" y="1103.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="27.3178%" y="1237" width="0.0252%" height="15" fill="rgb(208,88,43)" fg:x="7602" fg:w="7"/><text x="27.5678%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.03%)</title><rect x="27.3178%" y="1221" width="0.0252%" height="15" fill="rgb(205,136,37)" fg:x="7602" fg:w="7"/><text x="27.5678%" y="1231.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="27.3214%" y="1205" width="0.0216%" height="15" fill="rgb(237,34,14)" fg:x="7603" fg:w="6"/><text x="27.5714%" y="1215.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="27.3214%" y="1189" width="0.0216%" height="15" fill="rgb(236,193,44)" fg:x="7603" fg:w="6"/><text x="27.5714%" y="1199.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;u8&gt;,R&gt;&gt;::read (9 samples, 0.03%)</title><rect x="27.3466%" y="421" width="0.0323%" height="15" fill="rgb(231,48,10)" fg:x="7610" fg:w="9"/><text x="27.5966%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="27.3681%" y="405" width="0.0108%" height="15" fill="rgb(213,141,34)" fg:x="7616" fg:w="3"/><text x="27.6181%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="27.3681%" y="389" width="0.0108%" height="15" fill="rgb(249,130,34)" fg:x="7616" fg:w="3"/><text x="27.6181%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="27.3681%" y="373" width="0.0108%" height="15" fill="rgb(219,42,41)" fg:x="7616" fg:w="3"/><text x="27.6181%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="27.3681%" y="357" width="0.0108%" height="15" fill="rgb(224,100,54)" fg:x="7616" fg:w="3"/><text x="27.6181%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="27.3681%" y="341" width="0.0108%" height="15" fill="rgb(229,200,27)" fg:x="7616" fg:w="3"/><text x="27.6181%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="27.3681%" y="325" width="0.0108%" height="15" fill="rgb(217,118,10)" fg:x="7616" fg:w="3"/><text x="27.6181%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="27.3681%" y="309" width="0.0108%" height="15" fill="rgb(206,22,3)" fg:x="7616" fg:w="3"/><text x="27.6181%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (24 samples, 0.09%)</title><rect x="27.3466%" y="1109" width="0.0862%" height="15" fill="rgb(232,163,46)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="1119.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (24 samples, 0.09%)</title><rect x="27.3466%" y="1093" width="0.0862%" height="15" fill="rgb(206,95,13)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.09%)</title><rect x="27.3466%" y="1077" width="0.0862%" height="15" fill="rgb(253,154,18)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="1087.50"></text></g><g><title>std::panicking::try (24 samples, 0.09%)</title><rect x="27.3466%" y="1061" width="0.0862%" height="15" fill="rgb(219,32,23)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.09%)</title><rect x="27.3466%" y="1045" width="0.0862%" height="15" fill="rgb(230,191,45)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="1055.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="1029" width="0.0862%" height="15" fill="rgb(229,64,36)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.09%)</title><rect x="27.3466%" y="1013" width="0.0862%" height="15" fill="rgb(205,129,25)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.09%)</title><rect x="27.3466%" y="997" width="0.0862%" height="15" fill="rgb(254,112,7)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="1007.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="981" width="0.0862%" height="15" fill="rgb(226,53,48)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="991.50"></text></g><g><title>async_global_executor::reactor::block_on (24 samples, 0.09%)</title><rect x="27.3466%" y="965" width="0.0862%" height="15" fill="rgb(214,153,38)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="975.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="949" width="0.0862%" height="15" fill="rgb(243,101,7)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="959.50"></text></g><g><title>async_io::driver::block_on (24 samples, 0.09%)</title><rect x="27.3466%" y="933" width="0.0862%" height="15" fill="rgb(240,140,22)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="943.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="917" width="0.0862%" height="15" fill="rgb(235,114,2)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="901" width="0.0862%" height="15" fill="rgb(242,59,12)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="885" width="0.0862%" height="15" fill="rgb(252,134,9)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="895.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="869" width="0.0862%" height="15" fill="rgb(236,4,44)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="853" width="0.0862%" height="15" fill="rgb(254,172,41)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="863.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="837" width="0.0862%" height="15" fill="rgb(244,63,20)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (24 samples, 0.09%)</title><rect x="27.3466%" y="821" width="0.0862%" height="15" fill="rgb(250,73,31)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="805" width="0.0862%" height="15" fill="rgb(241,38,36)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="789" width="0.0862%" height="15" fill="rgb(245,211,2)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="773" width="0.0862%" height="15" fill="rgb(206,120,28)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="783.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="757" width="0.0862%" height="15" fill="rgb(211,59,34)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="767.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (24 samples, 0.09%)</title><rect x="27.3466%" y="741" width="0.0862%" height="15" fill="rgb(233,168,5)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.09%)</title><rect x="27.3466%" y="725" width="0.0862%" height="15" fill="rgb(234,33,13)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.09%)</title><rect x="27.3466%" y="709" width="0.0862%" height="15" fill="rgb(231,150,26)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="693" width="0.0862%" height="15" fill="rgb(217,191,4)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="703.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="677" width="0.0862%" height="15" fill="rgb(246,198,38)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="661" width="0.0862%" height="15" fill="rgb(245,64,37)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="671.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="645" width="0.0862%" height="15" fill="rgb(250,30,36)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="629" width="0.0862%" height="15" fill="rgb(217,86,53)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="639.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="613" width="0.0862%" height="15" fill="rgb(228,157,16)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.09%)</title><rect x="27.3466%" y="597" width="0.0862%" height="15" fill="rgb(217,59,31)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="607.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (24 samples, 0.09%)</title><rect x="27.3466%" y="581" width="0.0862%" height="15" fill="rgb(237,138,41)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="591.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (24 samples, 0.09%)</title><rect x="27.3466%" y="565" width="0.0862%" height="15" fill="rgb(227,91,49)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="575.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (24 samples, 0.09%)</title><rect x="27.3466%" y="549" width="0.0862%" height="15" fill="rgb(247,21,44)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="559.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (24 samples, 0.09%)</title><rect x="27.3466%" y="533" width="0.0862%" height="15" fill="rgb(219,210,51)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declare (24 samples, 0.09%)</title><rect x="27.3466%" y="517" width="0.0862%" height="15" fill="rgb(209,140,6)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declarations (24 samples, 0.09%)</title><rect x="27.3466%" y="501" width="0.0862%" height="15" fill="rgb(221,188,24)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declaration (24 samples, 0.09%)</title><rect x="27.3466%" y="485" width="0.0862%" height="15" fill="rgb(232,154,20)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_key_expr (24 samples, 0.09%)</title><rect x="27.3466%" y="469" width="0.0862%" height="15" fill="rgb(244,137,50)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_string (24 samples, 0.09%)</title><rect x="27.3466%" y="453" width="0.0862%" height="15" fill="rgb(225,185,43)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="463.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (24 samples, 0.09%)</title><rect x="27.3466%" y="437" width="0.0862%" height="15" fill="rgb(213,205,38)" fg:x="7610" fg:w="24"/><text x="27.5966%" y="447.50"></text></g><g><title>alloc::string::String::from_utf8 (15 samples, 0.05%)</title><rect x="27.3789%" y="421" width="0.0539%" height="15" fill="rgb(236,73,12)" fg:x="7619" fg:w="15"/><text x="27.6289%" y="431.50"></text></g><g><title>core::str::converts::from_utf8 (15 samples, 0.05%)</title><rect x="27.3789%" y="405" width="0.0539%" height="15" fill="rgb(235,219,13)" fg:x="7619" fg:w="15"/><text x="27.6289%" y="415.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (17 samples, 0.06%)</title><rect x="27.4328%" y="293" width="0.0611%" height="15" fill="rgb(218,59,36)" fg:x="7634" fg:w="17"/><text x="27.6828%" y="303.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (17 samples, 0.06%)</title><rect x="27.4939%" y="277" width="0.0611%" height="15" fill="rgb(205,110,39)" fg:x="7651" fg:w="17"/><text x="27.7439%" y="287.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (17 samples, 0.06%)</title><rect x="27.4939%" y="261" width="0.0611%" height="15" fill="rgb(218,206,42)" fg:x="7651" fg:w="17"/><text x="27.7439%" y="271.50"></text></g><g><title>core::cell::BorrowRefMut::new (17 samples, 0.06%)</title><rect x="27.4939%" y="245" width="0.0611%" height="15" fill="rgb(248,125,24)" fg:x="7651" fg:w="17"/><text x="27.7439%" y="255.50"></text></g><g><title>std::thread::current (50 samples, 0.18%)</title><rect x="27.4328%" y="357" width="0.1797%" height="15" fill="rgb(242,28,27)" fg:x="7634" fg:w="50"/><text x="27.6828%" y="367.50"></text></g><g><title>std::sys_common::thread_info::current_thread (50 samples, 0.18%)</title><rect x="27.4328%" y="341" width="0.1797%" height="15" fill="rgb(216,228,15)" fg:x="7634" fg:w="50"/><text x="27.6828%" y="351.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (50 samples, 0.18%)</title><rect x="27.4328%" y="325" width="0.1797%" height="15" fill="rgb(235,116,46)" fg:x="7634" fg:w="50"/><text x="27.6828%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (50 samples, 0.18%)</title><rect x="27.4328%" y="309" width="0.1797%" height="15" fill="rgb(224,18,32)" fg:x="7634" fg:w="50"/><text x="27.6828%" y="319.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with::{{closure}} (33 samples, 0.12%)</title><rect x="27.4939%" y="293" width="0.1186%" height="15" fill="rgb(252,5,12)" fg:x="7651" fg:w="33"/><text x="27.7439%" y="303.50"></text></g><g><title>std::sys_common::thread_info::current_thread::{{closure}} (16 samples, 0.06%)</title><rect x="27.5550%" y="277" width="0.0575%" height="15" fill="rgb(251,36,5)" fg:x="7668" fg:w="16"/><text x="27.8050%" y="287.50"></text></g><g><title>&lt;std::thread::Thread as core::clone::Clone&gt;::clone (16 samples, 0.06%)</title><rect x="27.5550%" y="261" width="0.0575%" height="15" fill="rgb(217,53,14)" fg:x="7668" fg:w="16"/><text x="27.8050%" y="271.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::clone::Clone&gt;::clone (16 samples, 0.06%)</title><rect x="27.5550%" y="245" width="0.0575%" height="15" fill="rgb(215,86,45)" fg:x="7668" fg:w="16"/><text x="27.8050%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.06%)</title><rect x="27.5550%" y="229" width="0.0575%" height="15" fill="rgb(242,169,11)" fg:x="7668" fg:w="16"/><text x="27.8050%" y="239.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (63 samples, 0.23%)</title><rect x="27.4328%" y="469" width="0.2264%" height="15" fill="rgb(211,213,45)" fg:x="7634" fg:w="63"/><text x="27.6828%" y="479.50"></text></g><g><title>fastrand::usize (63 samples, 0.23%)</title><rect x="27.4328%" y="453" width="0.2264%" height="15" fill="rgb(205,88,11)" fg:x="7634" fg:w="63"/><text x="27.6828%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 samples, 0.23%)</title><rect x="27.4328%" y="437" width="0.2264%" height="15" fill="rgb(252,69,26)" fg:x="7634" fg:w="63"/><text x="27.6828%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (63 samples, 0.23%)</title><rect x="27.4328%" y="421" width="0.2264%" height="15" fill="rgb(246,123,37)" fg:x="7634" fg:w="63"/><text x="27.6828%" y="431.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (63 samples, 0.23%)</title><rect x="27.4328%" y="405" width="0.2264%" height="15" fill="rgb(212,205,5)" fg:x="7634" fg:w="63"/><text x="27.6828%" y="415.50"></text></g><g><title>fastrand::RNG::__getit::{{closure}} (63 samples, 0.23%)</title><rect x="27.4328%" y="389" width="0.2264%" height="15" fill="rgb(253,148,0)" fg:x="7634" fg:w="63"/><text x="27.6828%" y="399.50"></text></g><g><title>fastrand::RNG::__init (63 samples, 0.23%)</title><rect x="27.4328%" y="373" width="0.2264%" height="15" fill="rgb(239,22,4)" fg:x="7634" fg:w="63"/><text x="27.6828%" y="383.50"></text></g><g><title>std::time::Instant::now (13 samples, 0.05%)</title><rect x="27.6125%" y="357" width="0.0467%" height="15" fill="rgb(226,26,53)" fg:x="7684" fg:w="13"/><text x="27.8625%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (13 samples, 0.05%)</title><rect x="27.6125%" y="341" width="0.0467%" height="15" fill="rgb(225,229,45)" fg:x="7684" fg:w="13"/><text x="27.8625%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (13 samples, 0.05%)</title><rect x="27.6125%" y="325" width="0.0467%" height="15" fill="rgb(220,60,37)" fg:x="7684" fg:w="13"/><text x="27.8625%" y="335.50"></text></g><g><title>clock_gettime (13 samples, 0.05%)</title><rect x="27.6125%" y="309" width="0.0467%" height="15" fill="rgb(217,180,35)" fg:x="7684" fg:w="13"/><text x="27.8625%" y="319.50"></text></g><g><title>__vdso_clock_gettime (6 samples, 0.02%)</title><rect x="27.6376%" y="293" width="0.0216%" height="15" fill="rgb(229,7,53)" fg:x="7691" fg:w="6"/><text x="27.8876%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.01%)</title><rect x="27.6592%" y="373" width="0.0108%" height="15" fill="rgb(254,137,3)" fg:x="7697" fg:w="3"/><text x="27.9092%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="27.6592%" y="357" width="0.0108%" height="15" fill="rgb(215,140,41)" fg:x="7697" fg:w="3"/><text x="27.9092%" y="367.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.01%)</title><rect x="27.6592%" y="341" width="0.0108%" height="15" fill="rgb(250,80,15)" fg:x="7697" fg:w="3"/><text x="27.9092%" y="351.50"></text></g><g><title>realloc (3 samples, 0.01%)</title><rect x="27.6592%" y="325" width="0.0108%" height="15" fill="rgb(252,191,6)" fg:x="7697" fg:w="3"/><text x="27.9092%" y="335.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="27.6592%" y="309" width="0.0108%" height="15" fill="rgb(246,217,18)" fg:x="7697" fg:w="3"/><text x="27.9092%" y="319.50"></text></g><g><title>async_executor::Ticker::sleep (4 samples, 0.01%)</title><rect x="27.6592%" y="469" width="0.0144%" height="15" fill="rgb(223,93,7)" fg:x="7697" fg:w="4"/><text x="27.9092%" y="479.50"></text></g><g><title>async_executor::Sleepers::insert (4 samples, 0.01%)</title><rect x="27.6592%" y="453" width="0.0144%" height="15" fill="rgb(225,55,52)" fg:x="7697" fg:w="4"/><text x="27.9092%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="27.6592%" y="437" width="0.0144%" height="15" fill="rgb(240,31,24)" fg:x="7697" fg:w="4"/><text x="27.9092%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="27.6592%" y="421" width="0.0144%" height="15" fill="rgb(205,56,52)" fg:x="7697" fg:w="4"/><text x="27.9092%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="27.6592%" y="405" width="0.0144%" height="15" fill="rgb(246,146,12)" fg:x="7697" fg:w="4"/><text x="27.9092%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="27.6592%" y="389" width="0.0144%" height="15" fill="rgb(239,84,36)" fg:x="7697" fg:w="4"/><text x="27.9092%" y="399.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (77 samples, 0.28%)</title><rect x="27.4328%" y="741" width="0.2767%" height="15" fill="rgb(207,41,40)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="751.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (77 samples, 0.28%)</title><rect x="27.4328%" y="725" width="0.2767%" height="15" fill="rgb(241,179,25)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (77 samples, 0.28%)</title><rect x="27.4328%" y="709" width="0.2767%" height="15" fill="rgb(210,0,34)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (77 samples, 0.28%)</title><rect x="27.4328%" y="693" width="0.2767%" height="15" fill="rgb(225,217,29)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (77 samples, 0.28%)</title><rect x="27.4328%" y="677" width="0.2767%" height="15" fill="rgb(216,191,38)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="687.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (77 samples, 0.28%)</title><rect x="27.4328%" y="661" width="0.2767%" height="15" fill="rgb(232,140,52)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 0.28%)</title><rect x="27.4328%" y="645" width="0.2767%" height="15" fill="rgb(223,158,51)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="655.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (77 samples, 0.28%)</title><rect x="27.4328%" y="629" width="0.2767%" height="15" fill="rgb(235,29,51)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (77 samples, 0.28%)</title><rect x="27.4328%" y="613" width="0.2767%" height="15" fill="rgb(215,181,18)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 0.28%)</title><rect x="27.4328%" y="597" width="0.2767%" height="15" fill="rgb(227,125,34)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="607.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (77 samples, 0.28%)</title><rect x="27.4328%" y="581" width="0.2767%" height="15" fill="rgb(230,197,49)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 0.28%)</title><rect x="27.4328%" y="565" width="0.2767%" height="15" fill="rgb(239,141,16)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="575.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (77 samples, 0.28%)</title><rect x="27.4328%" y="549" width="0.2767%" height="15" fill="rgb(225,105,43)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 0.28%)</title><rect x="27.4328%" y="533" width="0.2767%" height="15" fill="rgb(214,131,14)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="543.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (77 samples, 0.28%)</title><rect x="27.4328%" y="517" width="0.2767%" height="15" fill="rgb(229,177,11)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="527.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (77 samples, 0.28%)</title><rect x="27.4328%" y="501" width="0.2767%" height="15" fill="rgb(231,180,14)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="511.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (77 samples, 0.28%)</title><rect x="27.4328%" y="485" width="0.2767%" height="15" fill="rgb(232,88,2)" fg:x="7634" fg:w="77"/><text x="27.6828%" y="495.50"></text></g><g><title>async_executor::Ticker::wake (10 samples, 0.04%)</title><rect x="27.6736%" y="469" width="0.0359%" height="15" fill="rgb(205,220,8)" fg:x="7701" fg:w="10"/><text x="27.9236%" y="479.50"></text></g><g><title>async_executor::Sleepers::remove (10 samples, 0.04%)</title><rect x="27.6736%" y="453" width="0.0359%" height="15" fill="rgb(225,23,53)" fg:x="7701" fg:w="10"/><text x="27.9236%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.04%)</title><rect x="27.6736%" y="437" width="0.0359%" height="15" fill="rgb(213,62,29)" fg:x="7701" fg:w="10"/><text x="27.9236%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.04%)</title><rect x="27.6736%" y="421" width="0.0359%" height="15" fill="rgb(227,75,7)" fg:x="7701" fg:w="10"/><text x="27.9236%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.04%)</title><rect x="27.6736%" y="405" width="0.0359%" height="15" fill="rgb(207,105,14)" fg:x="7701" fg:w="10"/><text x="27.9236%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.04%)</title><rect x="27.6736%" y="389" width="0.0359%" height="15" fill="rgb(245,62,29)" fg:x="7701" fg:w="10"/><text x="27.9236%" y="399.50"></text></g><g><title>malloc (10 samples, 0.04%)</title><rect x="27.6736%" y="373" width="0.0359%" height="15" fill="rgb(236,202,4)" fg:x="7701" fg:w="10"/><text x="27.9236%" y="383.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="27.6736%" y="357" width="0.0359%" height="15" fill="rgb(250,67,1)" fg:x="7701" fg:w="10"/><text x="27.9236%" y="367.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (78 samples, 0.28%)</title><rect x="27.4328%" y="757" width="0.2803%" height="15" fill="rgb(253,115,44)" fg:x="7634" fg:w="78"/><text x="27.6828%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="27.7131%" y="741" width="0.0359%" height="15" fill="rgb(251,139,18)" fg:x="7712" fg:w="10"/><text x="27.9631%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.04%)</title><rect x="27.7131%" y="725" width="0.0359%" height="15" fill="rgb(218,22,32)" fg:x="7712" fg:w="10"/><text x="27.9631%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.04%)</title><rect x="27.7131%" y="709" width="0.0359%" height="15" fill="rgb(243,53,5)" fg:x="7712" fg:w="10"/><text x="27.9631%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.04%)</title><rect x="27.7131%" y="693" width="0.0359%" height="15" fill="rgb(227,56,16)" fg:x="7712" fg:w="10"/><text x="27.9631%" y="703.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.04%)</title><rect x="27.7131%" y="677" width="0.0359%" height="15" fill="rgb(245,53,0)" fg:x="7712" fg:w="10"/><text x="27.9631%" y="687.50"></text></g><g><title>malloc (9 samples, 0.03%)</title><rect x="27.7167%" y="661" width="0.0323%" height="15" fill="rgb(216,170,35)" fg:x="7713" fg:w="9"/><text x="27.9667%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="27.7490%" y="741" width="0.0180%" height="15" fill="rgb(211,200,8)" fg:x="7722" fg:w="5"/><text x="27.9990%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="27.7490%" y="725" width="0.0180%" height="15" fill="rgb(228,204,44)" fg:x="7722" fg:w="5"/><text x="27.9990%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.02%)</title><rect x="27.7490%" y="709" width="0.0180%" height="15" fill="rgb(214,121,17)" fg:x="7722" fg:w="5"/><text x="27.9990%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="27.7526%" y="693" width="0.0144%" height="15" fill="rgb(233,64,38)" fg:x="7723" fg:w="4"/><text x="28.0026%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.9862%" y="565" width="0.0108%" height="15" fill="rgb(253,54,19)" fg:x="7788" fg:w="3"/><text x="28.2362%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.9862%" y="549" width="0.0108%" height="15" fill="rgb(253,94,18)" fg:x="7788" fg:w="3"/><text x="28.2362%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.9862%" y="533" width="0.0108%" height="15" fill="rgb(227,57,52)" fg:x="7788" fg:w="3"/><text x="28.2362%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.9862%" y="517" width="0.0108%" height="15" fill="rgb(230,228,50)" fg:x="7788" fg:w="3"/><text x="28.2362%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="27.9862%" y="501" width="0.0108%" height="15" fill="rgb(217,205,27)" fg:x="7788" fg:w="3"/><text x="28.2362%" y="511.50"></text></g><g><title>__lll_lock_wait_private (17 samples, 0.06%)</title><rect x="27.9970%" y="565" width="0.0611%" height="15" fill="rgb(252,71,50)" fg:x="7791" fg:w="17"/><text x="28.2470%" y="575.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="27.9970%" y="549" width="0.0611%" height="15" fill="rgb(209,86,4)" fg:x="7791" fg:w="17"/><text x="28.2470%" y="559.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="27.9970%" y="533" width="0.0611%" height="15" fill="rgb(229,94,0)" fg:x="7791" fg:w="17"/><text x="28.2470%" y="543.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="27.9970%" y="517" width="0.0611%" height="15" fill="rgb(252,223,21)" fg:x="7791" fg:w="17"/><text x="28.2470%" y="527.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="28.0006%" y="501" width="0.0575%" height="15" fill="rgb(230,210,4)" fg:x="7792" fg:w="16"/><text x="28.2506%" y="511.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="28.0006%" y="485" width="0.0575%" height="15" fill="rgb(240,149,38)" fg:x="7792" fg:w="16"/><text x="28.2506%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="28.0149%" y="469" width="0.0431%" height="15" fill="rgb(254,105,20)" fg:x="7796" fg:w="12"/><text x="28.2649%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="28.0185%" y="453" width="0.0395%" height="15" fill="rgb(253,87,46)" fg:x="7797" fg:w="11"/><text x="28.2685%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="28.0185%" y="437" width="0.0395%" height="15" fill="rgb(253,116,33)" fg:x="7797" fg:w="11"/><text x="28.2685%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="28.0221%" y="421" width="0.0359%" height="15" fill="rgb(229,198,5)" fg:x="7798" fg:w="10"/><text x="28.2721%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="28.0293%" y="405" width="0.0287%" height="15" fill="rgb(242,38,37)" fg:x="7800" fg:w="8"/><text x="28.2793%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="28.0365%" y="389" width="0.0216%" height="15" fill="rgb(242,69,53)" fg:x="7802" fg:w="6"/><text x="28.2865%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="28.0473%" y="373" width="0.0108%" height="15" fill="rgb(249,80,16)" fg:x="7805" fg:w="3"/><text x="28.2973%" y="383.50"></text></g><g><title>__rdl_alloc (91 samples, 0.33%)</title><rect x="27.7670%" y="645" width="0.3270%" height="15" fill="rgb(206,128,11)" fg:x="7727" fg:w="91"/><text x="28.0170%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (91 samples, 0.33%)</title><rect x="27.7670%" y="629" width="0.3270%" height="15" fill="rgb(212,35,20)" fg:x="7727" fg:w="91"/><text x="28.0170%" y="639.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (91 samples, 0.33%)</title><rect x="27.7670%" y="613" width="0.3270%" height="15" fill="rgb(236,79,13)" fg:x="7727" fg:w="91"/><text x="28.0170%" y="623.50"></text></g><g><title>posix_memalign (91 samples, 0.33%)</title><rect x="27.7670%" y="597" width="0.3270%" height="15" fill="rgb(233,123,3)" fg:x="7727" fg:w="91"/><text x="28.0170%" y="607.50"></text></g><g><title>[libc.so.6] (89 samples, 0.32%)</title><rect x="27.7742%" y="581" width="0.3198%" height="15" fill="rgb(214,93,52)" fg:x="7729" fg:w="89"/><text x="28.0242%" y="591.50"></text></g><g><title>__lll_lock_wake_private (10 samples, 0.04%)</title><rect x="28.0581%" y="565" width="0.0359%" height="15" fill="rgb(251,37,40)" fg:x="7808" fg:w="10"/><text x="28.3081%" y="575.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="28.0617%" y="549" width="0.0323%" height="15" fill="rgb(227,80,54)" fg:x="7809" fg:w="9"/><text x="28.3117%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="28.0617%" y="533" width="0.0323%" height="15" fill="rgb(254,48,11)" fg:x="7809" fg:w="9"/><text x="28.3117%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="28.0617%" y="517" width="0.0323%" height="15" fill="rgb(235,193,26)" fg:x="7809" fg:w="9"/><text x="28.3117%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="28.0653%" y="501" width="0.0287%" height="15" fill="rgb(229,99,21)" fg:x="7810" fg:w="8"/><text x="28.3153%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="28.0653%" y="485" width="0.0287%" height="15" fill="rgb(211,140,41)" fg:x="7810" fg:w="8"/><text x="28.3153%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="28.0832%" y="469" width="0.0108%" height="15" fill="rgb(240,227,30)" fg:x="7815" fg:w="3"/><text x="28.3332%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="28.0832%" y="453" width="0.0108%" height="15" fill="rgb(215,224,45)" fg:x="7815" fg:w="3"/><text x="28.3332%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.03%)</title><rect x="28.0940%" y="629" width="0.0323%" height="15" fill="rgb(206,123,31)" fg:x="7818" fg:w="9"/><text x="28.3440%" y="639.50"></text></g><g><title>core::ptr::write (7 samples, 0.03%)</title><rect x="28.1012%" y="613" width="0.0252%" height="15" fill="rgb(210,138,16)" fg:x="7820" fg:w="7"/><text x="28.3512%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="28.1012%" y="597" width="0.0252%" height="15" fill="rgb(228,57,28)" fg:x="7820" fg:w="7"/><text x="28.3512%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (101 samples, 0.36%)</title><rect x="27.7670%" y="725" width="0.3629%" height="15" fill="rgb(242,170,10)" fg:x="7727" fg:w="101"/><text x="28.0170%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (101 samples, 0.36%)</title><rect x="27.7670%" y="709" width="0.3629%" height="15" fill="rgb(228,214,39)" fg:x="7727" fg:w="101"/><text x="28.0170%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.36%)</title><rect x="27.7670%" y="693" width="0.3629%" height="15" fill="rgb(218,179,33)" fg:x="7727" fg:w="101"/><text x="28.0170%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 0.36%)</title><rect x="27.7670%" y="677" width="0.3629%" height="15" fill="rgb(235,193,39)" fg:x="7727" fg:w="101"/><text x="28.0170%" y="687.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.36%)</title><rect x="27.7670%" y="661" width="0.3629%" height="15" fill="rgb(219,221,36)" fg:x="7727" fg:w="101"/><text x="28.0170%" y="671.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="28.0940%" y="645" width="0.0359%" height="15" fill="rgb(248,218,19)" fg:x="7818" fg:w="10"/><text x="28.3440%" y="655.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="29.2008%" y="693" width="0.0827%" height="15" fill="rgb(205,50,9)" fg:x="8126" fg:w="23"/><text x="29.4508%" y="703.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="29.2475%" y="677" width="0.0359%" height="15" fill="rgb(238,81,28)" fg:x="8139" fg:w="10"/><text x="29.4975%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="29.2547%" y="661" width="0.0287%" height="15" fill="rgb(235,110,19)" fg:x="8141" fg:w="8"/><text x="29.5047%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="29.2547%" y="645" width="0.0287%" height="15" fill="rgb(214,7,14)" fg:x="8141" fg:w="8"/><text x="29.5047%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="29.2583%" y="629" width="0.0252%" height="15" fill="rgb(211,77,3)" fg:x="8142" fg:w="7"/><text x="29.5083%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.02%)</title><rect x="29.2835%" y="693" width="0.0180%" height="15" fill="rgb(229,5,9)" fg:x="8149" fg:w="5"/><text x="29.5335%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (462 samples, 1.66%)</title><rect x="28.1551%" y="709" width="1.6602%" height="15" fill="rgb(225,90,11)" fg:x="7835" fg:w="462"/><text x="28.4051%" y="719.50"></text></g><g><title>core::ptr::write (143 samples, 0.51%)</title><rect x="29.3014%" y="693" width="0.5139%" height="15" fill="rgb(242,56,8)" fg:x="8154" fg:w="143"/><text x="29.5514%" y="703.50"></text></g><g><title>[unknown] (138 samples, 0.50%)</title><rect x="29.3194%" y="677" width="0.4959%" height="15" fill="rgb(249,212,39)" fg:x="8159" fg:w="138"/><text x="29.5694%" y="687.50"></text></g><g><title>[unknown] (137 samples, 0.49%)</title><rect x="29.3230%" y="661" width="0.4923%" height="15" fill="rgb(236,90,9)" fg:x="8160" fg:w="137"/><text x="29.5730%" y="671.50"></text></g><g><title>[unknown] (135 samples, 0.49%)</title><rect x="29.3302%" y="645" width="0.4851%" height="15" fill="rgb(206,88,35)" fg:x="8162" fg:w="135"/><text x="29.5802%" y="655.50"></text></g><g><title>[unknown] (134 samples, 0.48%)</title><rect x="29.3338%" y="629" width="0.4815%" height="15" fill="rgb(205,126,30)" fg:x="8163" fg:w="134"/><text x="29.5838%" y="639.50"></text></g><g><title>[unknown] (105 samples, 0.38%)</title><rect x="29.4380%" y="613" width="0.3773%" height="15" fill="rgb(230,176,12)" fg:x="8192" fg:w="105"/><text x="29.6880%" y="623.50"></text></g><g><title>[unknown] (82 samples, 0.29%)</title><rect x="29.5206%" y="597" width="0.2947%" height="15" fill="rgb(243,19,9)" fg:x="8215" fg:w="82"/><text x="29.7706%" y="607.50"></text></g><g><title>[unknown] (58 samples, 0.21%)</title><rect x="29.6069%" y="581" width="0.2084%" height="15" fill="rgb(245,171,17)" fg:x="8239" fg:w="58"/><text x="29.8569%" y="591.50"></text></g><g><title>[unknown] (46 samples, 0.17%)</title><rect x="29.6500%" y="565" width="0.1653%" height="15" fill="rgb(227,52,21)" fg:x="8251" fg:w="46"/><text x="29.9000%" y="575.50"></text></g><g><title>[unknown] (33 samples, 0.12%)</title><rect x="29.6967%" y="549" width="0.1186%" height="15" fill="rgb(238,69,14)" fg:x="8264" fg:w="33"/><text x="29.9467%" y="559.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="29.7614%" y="533" width="0.0539%" height="15" fill="rgb(241,156,39)" fg:x="8282" fg:w="15"/><text x="30.0114%" y="543.50"></text></g><g><title>__rdl_alloc (4 samples, 0.01%)</title><rect x="29.8189%" y="597" width="0.0144%" height="15" fill="rgb(212,227,28)" fg:x="8298" fg:w="4"/><text x="30.0689%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.02%)</title><rect x="29.8153%" y="709" width="0.0216%" height="15" fill="rgb(209,118,27)" fg:x="8297" fg:w="6"/><text x="30.0653%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="29.8153%" y="693" width="0.0216%" height="15" fill="rgb(226,102,5)" fg:x="8297" fg:w="6"/><text x="30.0653%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="29.8153%" y="677" width="0.0216%" height="15" fill="rgb(223,34,3)" fg:x="8297" fg:w="6"/><text x="30.0653%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.02%)</title><rect x="29.8153%" y="661" width="0.0216%" height="15" fill="rgb(221,81,38)" fg:x="8297" fg:w="6"/><text x="30.0653%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="29.8153%" y="645" width="0.0216%" height="15" fill="rgb(236,219,28)" fg:x="8297" fg:w="6"/><text x="30.0653%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="29.8153%" y="629" width="0.0216%" height="15" fill="rgb(213,200,14)" fg:x="8297" fg:w="6"/><text x="30.0653%" y="639.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="29.8189%" y="613" width="0.0180%" height="15" fill="rgb(240,33,19)" fg:x="8298" fg:w="5"/><text x="30.0689%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (698 samples, 2.51%)</title><rect x="27.4328%" y="821" width="2.5083%" height="15" fill="rgb(233,113,27)" fg:x="7634" fg:w="698"/><text x="27.6828%" y="831.50">&lt;c..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (698 samples, 2.51%)</title><rect x="27.4328%" y="805" width="2.5083%" height="15" fill="rgb(220,221,18)" fg:x="7634" fg:w="698"/><text x="27.6828%" y="815.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (698 samples, 2.51%)</title><rect x="27.4328%" y="789" width="2.5083%" height="15" fill="rgb(238,92,8)" fg:x="7634" fg:w="698"/><text x="27.6828%" y="799.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (698 samples, 2.51%)</title><rect x="27.4328%" y="773" width="2.5083%" height="15" fill="rgb(222,164,16)" fg:x="7634" fg:w="698"/><text x="27.6828%" y="783.50">as..</text></g><g><title>async_executor::Runner::new (620 samples, 2.23%)</title><rect x="27.7131%" y="757" width="2.2280%" height="15" fill="rgb(241,119,3)" fg:x="7712" fg:w="620"/><text x="27.9631%" y="767.50">a..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (605 samples, 2.17%)</title><rect x="27.7670%" y="741" width="2.1741%" height="15" fill="rgb(241,44,8)" fg:x="7727" fg:w="605"/><text x="28.0170%" y="751.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (504 samples, 1.81%)</title><rect x="28.1299%" y="725" width="1.8111%" height="15" fill="rgb(230,36,40)" fg:x="7828" fg:w="504"/><text x="28.3799%" y="735.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (29 samples, 0.10%)</title><rect x="29.8369%" y="709" width="0.1042%" height="15" fill="rgb(243,16,36)" fg:x="8303" fg:w="29"/><text x="30.0869%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (29 samples, 0.10%)</title><rect x="29.8369%" y="693" width="0.1042%" height="15" fill="rgb(231,4,26)" fg:x="8303" fg:w="29"/><text x="30.0869%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (27 samples, 0.10%)</title><rect x="29.8440%" y="677" width="0.0970%" height="15" fill="rgb(240,9,31)" fg:x="8305" fg:w="27"/><text x="30.0940%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="29.9267%" y="661" width="0.0144%" height="15" fill="rgb(207,173,15)" fg:x="8328" fg:w="4"/><text x="30.1767%" y="671.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_right_border (8 samples, 0.03%)</title><rect x="29.9447%" y="757" width="0.0287%" height="15" fill="rgb(224,192,53)" fg:x="8333" fg:w="8"/><text x="30.1947%" y="767.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_top (8 samples, 0.03%)</title><rect x="29.9447%" y="741" width="0.0287%" height="15" fill="rgb(223,67,28)" fg:x="8333" fg:w="8"/><text x="30.1947%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::pop_internal_level (8 samples, 0.03%)</title><rect x="29.9447%" y="725" width="0.0287%" height="15" fill="rgb(211,20,47)" fg:x="8333" fg:w="8"/><text x="30.1947%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.03%)</title><rect x="29.9447%" y="709" width="0.0287%" height="15" fill="rgb(240,228,2)" fg:x="8333" fg:w="8"/><text x="30.1947%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.03%)</title><rect x="29.9447%" y="693" width="0.0287%" height="15" fill="rgb(248,151,12)" fg:x="8333" fg:w="8"/><text x="30.1947%" y="703.50"></text></g><g><title>cfree (8 samples, 0.03%)</title><rect x="29.9447%" y="677" width="0.0287%" height="15" fill="rgb(244,8,39)" fg:x="8333" fg:w="8"/><text x="30.1947%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (7 samples, 0.03%)</title><rect x="29.9734%" y="741" width="0.0252%" height="15" fill="rgb(222,26,8)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (7 samples, 0.03%)</title><rect x="29.9734%" y="725" width="0.0252%" height="15" fill="rgb(213,106,44)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="735.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (7 samples, 0.03%)</title><rect x="29.9734%" y="709" width="0.0252%" height="15" fill="rgb(214,129,20)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (7 samples, 0.03%)</title><rect x="29.9734%" y="693" width="0.0252%" height="15" fill="rgb(212,32,13)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (7 samples, 0.03%)</title><rect x="29.9734%" y="677" width="0.0252%" height="15" fill="rgb(208,168,33)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.03%)</title><rect x="29.9734%" y="661" width="0.0252%" height="15" fill="rgb(231,207,8)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="29.9734%" y="645" width="0.0252%" height="15" fill="rgb(235,219,23)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="29.9734%" y="629" width="0.0252%" height="15" fill="rgb(226,216,26)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="639.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="29.9734%" y="613" width="0.0252%" height="15" fill="rgb(239,137,16)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="623.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="29.9734%" y="597" width="0.0252%" height="15" fill="rgb(207,12,36)" fg:x="8341" fg:w="7"/><text x="30.2234%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (19 samples, 0.07%)</title><rect x="29.9447%" y="789" width="0.0683%" height="15" fill="rgb(210,214,24)" fg:x="8333" fg:w="19"/><text x="30.1947%" y="799.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (19 samples, 0.07%)</title><rect x="29.9447%" y="773" width="0.0683%" height="15" fill="rgb(206,56,30)" fg:x="8333" fg:w="19"/><text x="30.1947%" y="783.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (11 samples, 0.04%)</title><rect x="29.9734%" y="757" width="0.0395%" height="15" fill="rgb(228,143,26)" fg:x="8341" fg:w="11"/><text x="30.2234%" y="767.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (4 samples, 0.01%)</title><rect x="29.9986%" y="741" width="0.0144%" height="15" fill="rgb(216,218,46)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="751.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (4 samples, 0.01%)</title><rect x="29.9986%" y="725" width="0.0144%" height="15" fill="rgb(206,6,19)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="735.50"></text></g><g><title>alloc::collections::btree::mem::replace (4 samples, 0.01%)</title><rect x="29.9986%" y="709" width="0.0144%" height="15" fill="rgb(239,177,51)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::{{closure}} (4 samples, 0.01%)</title><rect x="29.9986%" y="693" width="0.0144%" height="15" fill="rgb(216,55,25)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}} (4 samples, 0.01%)</title><rect x="29.9986%" y="677" width="0.0144%" height="15" fill="rgb(231,163,29)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (4 samples, 0.01%)</title><rect x="29.9986%" y="661" width="0.0144%" height="15" fill="rgb(232,149,50)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="671.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (4 samples, 0.01%)</title><rect x="29.9986%" y="645" width="0.0144%" height="15" fill="rgb(223,142,48)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (4 samples, 0.01%)</title><rect x="29.9986%" y="629" width="0.0144%" height="15" fill="rgb(245,83,23)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.01%)</title><rect x="29.9986%" y="613" width="0.0144%" height="15" fill="rgb(224,63,2)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.01%)</title><rect x="29.9986%" y="597" width="0.0144%" height="15" fill="rgb(218,65,53)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="29.9986%" y="581" width="0.0144%" height="15" fill="rgb(221,84,29)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="29.9986%" y="565" width="0.0144%" height="15" fill="rgb(234,0,32)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="575.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="29.9986%" y="549" width="0.0144%" height="15" fill="rgb(206,20,16)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="559.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="29.9986%" y="533" width="0.0144%" height="15" fill="rgb(244,172,18)" fg:x="8348" fg:w="4"/><text x="30.2486%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.01%)</title><rect x="30.0273%" y="773" width="0.0108%" height="15" fill="rgb(254,133,1)" fg:x="8356" fg:w="3"/><text x="30.2773%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.01%)</title><rect x="30.0273%" y="757" width="0.0108%" height="15" fill="rgb(222,206,41)" fg:x="8356" fg:w="3"/><text x="30.2773%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.01%)</title><rect x="30.0273%" y="741" width="0.0108%" height="15" fill="rgb(212,3,42)" fg:x="8356" fg:w="3"/><text x="30.2773%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (44 samples, 0.16%)</title><rect x="29.9411%" y="805" width="0.1581%" height="15" fill="rgb(241,11,4)" fg:x="8332" fg:w="44"/><text x="30.1911%" y="815.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (24 samples, 0.09%)</title><rect x="30.0129%" y="789" width="0.0862%" height="15" fill="rgb(205,19,26)" fg:x="8352" fg:w="24"/><text x="30.2629%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (17 samples, 0.06%)</title><rect x="30.0381%" y="773" width="0.0611%" height="15" fill="rgb(210,179,32)" fg:x="8359" fg:w="17"/><text x="30.2881%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (17 samples, 0.06%)</title><rect x="30.0381%" y="757" width="0.0611%" height="15" fill="rgb(227,116,49)" fg:x="8359" fg:w="17"/><text x="30.2881%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (17 samples, 0.06%)</title><rect x="30.0381%" y="741" width="0.0611%" height="15" fill="rgb(211,146,6)" fg:x="8359" fg:w="17"/><text x="30.2881%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (17 samples, 0.06%)</title><rect x="30.0381%" y="725" width="0.0611%" height="15" fill="rgb(219,44,39)" fg:x="8359" fg:w="17"/><text x="30.2881%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (811 samples, 2.91%)</title><rect x="27.3466%" y="1237" width="2.9143%" height="15" fill="rgb(234,128,11)" fg:x="7610" fg:w="811"/><text x="27.5966%" y="1247.50">co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (811 samples, 2.91%)</title><rect x="27.3466%" y="1221" width="2.9143%" height="15" fill="rgb(220,183,53)" fg:x="7610" fg:w="811"/><text x="27.5966%" y="1231.50">st..</text></g><g><title>std::panic::catch_unwind (811 samples, 2.91%)</title><rect x="27.3466%" y="1205" width="2.9143%" height="15" fill="rgb(213,219,32)" fg:x="7610" fg:w="811"/><text x="27.5966%" y="1215.50">st..</text></g><g><title>std::panicking::try (811 samples, 2.91%)</title><rect x="27.3466%" y="1189" width="2.9143%" height="15" fill="rgb(232,156,16)" fg:x="7610" fg:w="811"/><text x="27.5966%" y="1199.50">st..</text></g><g><title>std::panicking::try::do_call (811 samples, 2.91%)</title><rect x="27.3466%" y="1173" width="2.9143%" height="15" fill="rgb(246,135,34)" fg:x="7610" fg:w="811"/><text x="27.5966%" y="1183.50">st..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (811 samples, 2.91%)</title><rect x="27.3466%" y="1157" width="2.9143%" height="15" fill="rgb(241,99,0)" fg:x="7610" fg:w="811"/><text x="27.5966%" y="1167.50">&lt;c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (811 samples, 2.91%)</title><rect x="27.3466%" y="1141" width="2.9143%" height="15" fill="rgb(222,103,45)" fg:x="7610" fg:w="811"/><text x="27.5966%" y="1151.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (811 samples, 2.91%)</title><rect x="27.3466%" y="1125" width="2.9143%" height="15" fill="rgb(212,57,4)" fg:x="7610" fg:w="811"/><text x="27.5966%" y="1135.50">st..</text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (787 samples, 2.83%)</title><rect x="27.4328%" y="1109" width="2.8281%" height="15" fill="rgb(215,68,47)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="1119.50">ze..</text></g><g><title>async_std::task::block_on::block_on (787 samples, 2.83%)</title><rect x="27.4328%" y="1093" width="2.8281%" height="15" fill="rgb(230,84,2)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="1103.50">as..</text></g><g><title>async_std::task::builder::Builder::blocking (787 samples, 2.83%)</title><rect x="27.4328%" y="1077" width="2.8281%" height="15" fill="rgb(220,102,14)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="1087.50">as..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (787 samples, 2.83%)</title><rect x="27.4328%" y="1061" width="2.8281%" height="15" fill="rgb(240,10,32)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="1071.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (787 samples, 2.83%)</title><rect x="27.4328%" y="1045" width="2.8281%" height="15" fill="rgb(215,47,27)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="1055.50">st..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (787 samples, 2.83%)</title><rect x="27.4328%" y="1029" width="2.8281%" height="15" fill="rgb(233,188,43)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="1039.50">as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (787 samples, 2.83%)</title><rect x="27.4328%" y="1013" width="2.8281%" height="15" fill="rgb(253,190,1)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="1023.50">as..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (787 samples, 2.83%)</title><rect x="27.4328%" y="997" width="2.8281%" height="15" fill="rgb(206,114,52)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="1007.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (787 samples, 2.83%)</title><rect x="27.4328%" y="981" width="2.8281%" height="15" fill="rgb(233,120,37)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="991.50">st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (787 samples, 2.83%)</title><rect x="27.4328%" y="965" width="2.8281%" height="15" fill="rgb(214,52,39)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="975.50">as..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (787 samples, 2.83%)</title><rect x="27.4328%" y="949" width="2.8281%" height="15" fill="rgb(223,80,29)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="959.50">as..</text></g><g><title>async_global_executor::executor::block_on (787 samples, 2.83%)</title><rect x="27.4328%" y="933" width="2.8281%" height="15" fill="rgb(230,101,40)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="943.50">as..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (787 samples, 2.83%)</title><rect x="27.4328%" y="917" width="2.8281%" height="15" fill="rgb(219,211,8)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="927.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (787 samples, 2.83%)</title><rect x="27.4328%" y="901" width="2.8281%" height="15" fill="rgb(252,126,28)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="911.50">st..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (787 samples, 2.83%)</title><rect x="27.4328%" y="885" width="2.8281%" height="15" fill="rgb(215,56,38)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="895.50">as..</text></g><g><title>async_global_executor::reactor::block_on (787 samples, 2.83%)</title><rect x="27.4328%" y="869" width="2.8281%" height="15" fill="rgb(249,55,44)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="879.50">as..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (787 samples, 2.83%)</title><rect x="27.4328%" y="853" width="2.8281%" height="15" fill="rgb(220,221,32)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="863.50">as..</text></g><g><title>async_io::driver::block_on (787 samples, 2.83%)</title><rect x="27.4328%" y="837" width="2.8281%" height="15" fill="rgb(212,216,41)" fg:x="7634" fg:w="787"/><text x="27.6828%" y="847.50">as..</text></g><g><title>async_io::reactor::ReactorLock::react (89 samples, 0.32%)</title><rect x="29.9411%" y="821" width="0.3198%" height="15" fill="rgb(228,213,43)" fg:x="8332" fg:w="89"/><text x="30.1911%" y="831.50"></text></g><g><title>polling::Poller::wait (45 samples, 0.16%)</title><rect x="30.0992%" y="805" width="0.1617%" height="15" fill="rgb(211,31,26)" fg:x="8376" fg:w="45"/><text x="30.3492%" y="815.50"></text></g><g><title>polling::epoll::Poller::wait (45 samples, 0.16%)</title><rect x="30.0992%" y="789" width="0.1617%" height="15" fill="rgb(229,202,19)" fg:x="8376" fg:w="45"/><text x="30.3492%" y="799.50"></text></g><g><title>polling::epoll::Poller::modify (45 samples, 0.16%)</title><rect x="30.0992%" y="773" width="0.1617%" height="15" fill="rgb(229,105,46)" fg:x="8376" fg:w="45"/><text x="30.3492%" y="783.50"></text></g><g><title>polling::epoll::Poller::ctl (44 samples, 0.16%)</title><rect x="30.1028%" y="757" width="0.1581%" height="15" fill="rgb(235,108,1)" fg:x="8377" fg:w="44"/><text x="30.3528%" y="767.50"></text></g><g><title>epoll_ctl (44 samples, 0.16%)</title><rect x="30.1028%" y="741" width="0.1581%" height="15" fill="rgb(245,111,35)" fg:x="8377" fg:w="44"/><text x="30.3528%" y="751.50"></text></g><g><title>[unknown] (40 samples, 0.14%)</title><rect x="30.1171%" y="725" width="0.1437%" height="15" fill="rgb(219,185,31)" fg:x="8381" fg:w="40"/><text x="30.3671%" y="735.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="30.1207%" y="709" width="0.1401%" height="15" fill="rgb(214,4,43)" fg:x="8382" fg:w="39"/><text x="30.3707%" y="719.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="30.1207%" y="693" width="0.1401%" height="15" fill="rgb(235,227,40)" fg:x="8382" fg:w="39"/><text x="30.3707%" y="703.50"></text></g><g><title>[unknown] (37 samples, 0.13%)</title><rect x="30.1279%" y="677" width="0.1330%" height="15" fill="rgb(230,88,30)" fg:x="8384" fg:w="37"/><text x="30.3779%" y="687.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="30.1926%" y="661" width="0.0683%" height="15" fill="rgb(216,217,1)" fg:x="8402" fg:w="19"/><text x="30.4426%" y="671.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="30.2214%" y="645" width="0.0395%" height="15" fill="rgb(248,139,50)" fg:x="8410" fg:w="11"/><text x="30.4714%" y="655.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="30.2645%" y="1221" width="0.0144%" height="15" fill="rgb(233,1,21)" fg:x="8422" fg:w="4"/><text x="30.5145%" y="1231.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="30.2645%" y="1205" width="0.0144%" height="15" fill="rgb(215,183,12)" fg:x="8422" fg:w="4"/><text x="30.5145%" y="1215.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="30.2645%" y="1237" width="0.0180%" height="15" fill="rgb(229,104,42)" fg:x="8422" fg:w="5"/><text x="30.5145%" y="1247.50"></text></g><g><title>pthread_getaffinity_np (3 samples, 0.01%)</title><rect x="30.2824%" y="1237" width="0.0108%" height="15" fill="rgb(243,34,48)" fg:x="8427" fg:w="3"/><text x="30.5324%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="30.2824%" y="1221" width="0.0108%" height="15" fill="rgb(239,11,44)" fg:x="8427" fg:w="3"/><text x="30.5324%" y="1231.50"></text></g><g><title>sigaltstack (4 samples, 0.01%)</title><rect x="30.3076%" y="1237" width="0.0144%" height="15" fill="rgb(231,98,35)" fg:x="8434" fg:w="4"/><text x="30.5576%" y="1247.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="30.3076%" y="1221" width="0.0144%" height="15" fill="rgb(233,28,25)" fg:x="8434" fg:w="4"/><text x="30.5576%" y="1231.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (3 samples, 0.01%)</title><rect x="30.3292%" y="421" width="0.0108%" height="15" fill="rgb(234,123,11)" fg:x="8440" fg:w="3"/><text x="30.5792%" y="431.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="30.3292%" y="405" width="0.0108%" height="15" fill="rgb(220,69,3)" fg:x="8440" fg:w="3"/><text x="30.5792%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (3 samples, 0.01%)</title><rect x="30.3292%" y="389" width="0.0108%" height="15" fill="rgb(214,64,36)" fg:x="8440" fg:w="3"/><text x="30.5792%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (3 samples, 0.01%)</title><rect x="30.3292%" y="373" width="0.0108%" height="15" fill="rgb(211,138,32)" fg:x="8440" fg:w="3"/><text x="30.5792%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (3 samples, 0.01%)</title><rect x="30.3292%" y="357" width="0.0108%" height="15" fill="rgb(213,118,47)" fg:x="8440" fg:w="3"/><text x="30.5792%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.03%)</title><rect x="30.3399%" y="373" width="0.0252%" height="15" fill="rgb(243,124,49)" fg:x="8443" fg:w="7"/><text x="30.5899%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (18 samples, 0.06%)</title><rect x="30.3292%" y="485" width="0.0647%" height="15" fill="rgb(221,30,28)" fg:x="8440" fg:w="18"/><text x="30.5792%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declare (18 samples, 0.06%)</title><rect x="30.3292%" y="469" width="0.0647%" height="15" fill="rgb(246,37,13)" fg:x="8440" fg:w="18"/><text x="30.5792%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declarations (18 samples, 0.06%)</title><rect x="30.3292%" y="453" width="0.0647%" height="15" fill="rgb(249,66,14)" fg:x="8440" fg:w="18"/><text x="30.5792%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declaration (18 samples, 0.06%)</title><rect x="30.3292%" y="437" width="0.0647%" height="15" fill="rgb(213,166,5)" fg:x="8440" fg:w="18"/><text x="30.5792%" y="447.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_key_expr (15 samples, 0.05%)</title><rect x="30.3399%" y="421" width="0.0539%" height="15" fill="rgb(221,66,24)" fg:x="8443" fg:w="15"/><text x="30.5899%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_string (15 samples, 0.05%)</title><rect x="30.3399%" y="405" width="0.0539%" height="15" fill="rgb(210,132,17)" fg:x="8443" fg:w="15"/><text x="30.5899%" y="415.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (15 samples, 0.05%)</title><rect x="30.3399%" y="389" width="0.0539%" height="15" fill="rgb(243,202,5)" fg:x="8443" fg:w="15"/><text x="30.5899%" y="399.50"></text></g><g><title>alloc::string::String::from_utf8 (8 samples, 0.03%)</title><rect x="30.3651%" y="373" width="0.0287%" height="15" fill="rgb(233,70,48)" fg:x="8450" fg:w="8"/><text x="30.6151%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.07%)</title><rect x="30.3292%" y="1061" width="0.0683%" height="15" fill="rgb(238,41,26)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="1071.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (19 samples, 0.07%)</title><rect x="30.3292%" y="1045" width="0.0683%" height="15" fill="rgb(241,19,31)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.07%)</title><rect x="30.3292%" y="1029" width="0.0683%" height="15" fill="rgb(214,76,10)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="1039.50"></text></g><g><title>std::panicking::try (19 samples, 0.07%)</title><rect x="30.3292%" y="1013" width="0.0683%" height="15" fill="rgb(254,202,22)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.07%)</title><rect x="30.3292%" y="997" width="0.0683%" height="15" fill="rgb(214,72,24)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="1007.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="981" width="0.0683%" height="15" fill="rgb(221,92,46)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.07%)</title><rect x="30.3292%" y="965" width="0.0683%" height="15" fill="rgb(246,13,50)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.07%)</title><rect x="30.3292%" y="949" width="0.0683%" height="15" fill="rgb(240,165,38)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="959.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="933" width="0.0683%" height="15" fill="rgb(241,24,51)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="943.50"></text></g><g><title>async_global_executor::reactor::block_on (19 samples, 0.07%)</title><rect x="30.3292%" y="917" width="0.0683%" height="15" fill="rgb(227,51,44)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="901" width="0.0683%" height="15" fill="rgb(231,121,3)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="911.50"></text></g><g><title>async_io::driver::block_on (19 samples, 0.07%)</title><rect x="30.3292%" y="885" width="0.0683%" height="15" fill="rgb(245,3,41)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="895.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="869" width="0.0683%" height="15" fill="rgb(214,13,26)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="853" width="0.0683%" height="15" fill="rgb(252,75,11)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="863.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="837" width="0.0683%" height="15" fill="rgb(218,226,17)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="847.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="821" width="0.0683%" height="15" fill="rgb(248,89,38)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="805" width="0.0683%" height="15" fill="rgb(237,73,46)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="789" width="0.0683%" height="15" fill="rgb(242,78,33)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (19 samples, 0.07%)</title><rect x="30.3292%" y="773" width="0.0683%" height="15" fill="rgb(235,60,3)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="757" width="0.0683%" height="15" fill="rgb(216,172,19)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="741" width="0.0683%" height="15" fill="rgb(227,6,42)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="725" width="0.0683%" height="15" fill="rgb(223,207,42)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="735.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="709" width="0.0683%" height="15" fill="rgb(246,138,30)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (19 samples, 0.07%)</title><rect x="30.3292%" y="693" width="0.0683%" height="15" fill="rgb(251,199,47)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.07%)</title><rect x="30.3292%" y="677" width="0.0683%" height="15" fill="rgb(228,218,44)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.07%)</title><rect x="30.3292%" y="661" width="0.0683%" height="15" fill="rgb(220,68,6)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="645" width="0.0683%" height="15" fill="rgb(240,60,26)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="655.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="629" width="0.0683%" height="15" fill="rgb(211,200,19)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="613" width="0.0683%" height="15" fill="rgb(242,145,30)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="623.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="597" width="0.0683%" height="15" fill="rgb(225,64,13)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="581" width="0.0683%" height="15" fill="rgb(218,103,35)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="591.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="565" width="0.0683%" height="15" fill="rgb(216,93,46)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.07%)</title><rect x="30.3292%" y="549" width="0.0683%" height="15" fill="rgb(225,159,27)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="559.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (19 samples, 0.07%)</title><rect x="30.3292%" y="533" width="0.0683%" height="15" fill="rgb(225,204,11)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (19 samples, 0.07%)</title><rect x="30.3292%" y="517" width="0.0683%" height="15" fill="rgb(205,56,4)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (19 samples, 0.07%)</title><rect x="30.3292%" y="501" width="0.0683%" height="15" fill="rgb(206,6,35)" fg:x="8440" fg:w="19"/><text x="30.5792%" y="511.50"></text></g><g><title>async_executor::Runner::new (8 samples, 0.03%)</title><rect x="30.3974%" y="661" width="0.0287%" height="15" fill="rgb(247,73,52)" fg:x="8459" fg:w="8"/><text x="30.6474%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (5 samples, 0.02%)</title><rect x="30.4082%" y="645" width="0.0180%" height="15" fill="rgb(246,97,4)" fg:x="8462" fg:w="5"/><text x="30.6582%" y="655.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (4 samples, 0.01%)</title><rect x="30.4118%" y="629" width="0.0144%" height="15" fill="rgb(212,37,15)" fg:x="8463" fg:w="4"/><text x="30.6618%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (4 samples, 0.01%)</title><rect x="30.4118%" y="613" width="0.0144%" height="15" fill="rgb(208,130,40)" fg:x="8463" fg:w="4"/><text x="30.6618%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="30.4118%" y="597" width="0.0144%" height="15" fill="rgb(236,55,29)" fg:x="8463" fg:w="4"/><text x="30.6618%" y="607.50"></text></g><g><title>std::collections::hash::map::DefaultHasher::new (3 samples, 0.01%)</title><rect x="30.4298%" y="309" width="0.0108%" height="15" fill="rgb(209,156,45)" fg:x="8468" fg:w="3"/><text x="30.6798%" y="319.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (10 samples, 0.04%)</title><rect x="30.4262%" y="421" width="0.0359%" height="15" fill="rgb(249,107,4)" fg:x="8467" fg:w="10"/><text x="30.6762%" y="431.50"></text></g><g><title>fastrand::usize (10 samples, 0.04%)</title><rect x="30.4262%" y="405" width="0.0359%" height="15" fill="rgb(227,7,13)" fg:x="8467" fg:w="10"/><text x="30.6762%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.04%)</title><rect x="30.4262%" y="389" width="0.0359%" height="15" fill="rgb(250,129,14)" fg:x="8467" fg:w="10"/><text x="30.6762%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.04%)</title><rect x="30.4262%" y="373" width="0.0359%" height="15" fill="rgb(229,92,13)" fg:x="8467" fg:w="10"/><text x="30.6762%" y="383.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (10 samples, 0.04%)</title><rect x="30.4262%" y="357" width="0.0359%" height="15" fill="rgb(245,98,39)" fg:x="8467" fg:w="10"/><text x="30.6762%" y="367.50"></text></g><g><title>fastrand::RNG::__getit::{{closure}} (10 samples, 0.04%)</title><rect x="30.4262%" y="341" width="0.0359%" height="15" fill="rgb(234,135,48)" fg:x="8467" fg:w="10"/><text x="30.6762%" y="351.50"></text></g><g><title>fastrand::RNG::__init (10 samples, 0.04%)</title><rect x="30.4262%" y="325" width="0.0359%" height="15" fill="rgb(230,98,28)" fg:x="8467" fg:w="10"/><text x="30.6762%" y="335.50"></text></g><g><title>std::thread::current (5 samples, 0.02%)</title><rect x="30.4442%" y="309" width="0.0180%" height="15" fill="rgb(223,121,0)" fg:x="8472" fg:w="5"/><text x="30.6942%" y="319.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="30.4262%" y="565" width="0.0395%" height="15" fill="rgb(234,173,33)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="30.4262%" y="549" width="0.0395%" height="15" fill="rgb(245,47,8)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="559.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11 samples, 0.04%)</title><rect x="30.4262%" y="533" width="0.0395%" height="15" fill="rgb(205,17,20)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="30.4262%" y="517" width="0.0395%" height="15" fill="rgb(232,151,16)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (11 samples, 0.04%)</title><rect x="30.4262%" y="501" width="0.0395%" height="15" fill="rgb(208,30,32)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="30.4262%" y="485" width="0.0395%" height="15" fill="rgb(254,26,3)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="495.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (11 samples, 0.04%)</title><rect x="30.4262%" y="469" width="0.0395%" height="15" fill="rgb(240,177,30)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="479.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="30.4262%" y="453" width="0.0395%" height="15" fill="rgb(248,76,44)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (11 samples, 0.04%)</title><rect x="30.4262%" y="437" width="0.0395%" height="15" fill="rgb(241,186,54)" fg:x="8467" fg:w="11"/><text x="30.6762%" y="447.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (20 samples, 0.07%)</title><rect x="30.3974%" y="709" width="0.0719%" height="15" fill="rgb(249,171,29)" fg:x="8459" fg:w="20"/><text x="30.6474%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.07%)</title><rect x="30.3974%" y="693" width="0.0719%" height="15" fill="rgb(237,151,44)" fg:x="8459" fg:w="20"/><text x="30.6474%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (20 samples, 0.07%)</title><rect x="30.3974%" y="677" width="0.0719%" height="15" fill="rgb(228,174,30)" fg:x="8459" fg:w="20"/><text x="30.6474%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.04%)</title><rect x="30.4262%" y="661" width="0.0431%" height="15" fill="rgb(252,14,37)" fg:x="8467" fg:w="12"/><text x="30.6762%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.04%)</title><rect x="30.4262%" y="645" width="0.0431%" height="15" fill="rgb(207,111,40)" fg:x="8467" fg:w="12"/><text x="30.6762%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (12 samples, 0.04%)</title><rect x="30.4262%" y="629" width="0.0431%" height="15" fill="rgb(248,171,54)" fg:x="8467" fg:w="12"/><text x="30.6762%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (12 samples, 0.04%)</title><rect x="30.4262%" y="613" width="0.0431%" height="15" fill="rgb(211,127,2)" fg:x="8467" fg:w="12"/><text x="30.6762%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.04%)</title><rect x="30.4262%" y="597" width="0.0431%" height="15" fill="rgb(236,87,47)" fg:x="8467" fg:w="12"/><text x="30.6762%" y="607.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (12 samples, 0.04%)</title><rect x="30.4262%" y="581" width="0.0431%" height="15" fill="rgb(223,190,45)" fg:x="8467" fg:w="12"/><text x="30.6762%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="30.4837%" y="693" width="0.0144%" height="15" fill="rgb(215,5,16)" fg:x="8483" fg:w="4"/><text x="30.7337%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="30.4981%" y="693" width="0.0180%" height="15" fill="rgb(252,82,33)" fg:x="8487" fg:w="5"/><text x="30.7481%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="30.5160%" y="693" width="0.0144%" height="15" fill="rgb(247,213,44)" fg:x="8492" fg:w="4"/><text x="30.7660%" y="703.50"></text></g><g><title>async_executor::Ticker::new (4 samples, 0.01%)</title><rect x="30.5304%" y="693" width="0.0144%" height="15" fill="rgb(205,196,44)" fg:x="8496" fg:w="4"/><text x="30.7804%" y="703.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="30.5448%" y="661" width="0.0323%" height="15" fill="rgb(237,96,54)" fg:x="8500" fg:w="9"/><text x="30.7948%" y="671.50"></text></g><g><title>__rdl_alloc (20 samples, 0.07%)</title><rect x="30.5879%" y="597" width="0.0719%" height="15" fill="rgb(230,113,34)" fg:x="8512" fg:w="20"/><text x="30.8379%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (13 samples, 0.05%)</title><rect x="30.6131%" y="581" width="0.0467%" height="15" fill="rgb(221,224,12)" fg:x="8519" fg:w="13"/><text x="30.8631%" y="591.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (13 samples, 0.05%)</title><rect x="30.6131%" y="565" width="0.0467%" height="15" fill="rgb(219,112,44)" fg:x="8519" fg:w="13"/><text x="30.8631%" y="575.50"></text></g><g><title>posix_memalign (11 samples, 0.04%)</title><rect x="30.6202%" y="549" width="0.0395%" height="15" fill="rgb(210,31,13)" fg:x="8521" fg:w="11"/><text x="30.8702%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (36 samples, 0.13%)</title><rect x="30.5448%" y="677" width="0.1294%" height="15" fill="rgb(230,25,16)" fg:x="8500" fg:w="36"/><text x="30.7948%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.10%)</title><rect x="30.5771%" y="661" width="0.0970%" height="15" fill="rgb(246,108,53)" fg:x="8509" fg:w="27"/><text x="30.8271%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.10%)</title><rect x="30.5771%" y="645" width="0.0970%" height="15" fill="rgb(241,172,50)" fg:x="8509" fg:w="27"/><text x="30.8271%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.10%)</title><rect x="30.5771%" y="629" width="0.0970%" height="15" fill="rgb(235,141,10)" fg:x="8509" fg:w="27"/><text x="30.8271%" y="639.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.10%)</title><rect x="30.5771%" y="613" width="0.0970%" height="15" fill="rgb(220,174,43)" fg:x="8509" fg:w="27"/><text x="30.8271%" y="623.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="30.6598%" y="597" width="0.0144%" height="15" fill="rgb(215,181,40)" fg:x="8532" fg:w="4"/><text x="30.9098%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (37 samples, 0.13%)</title><rect x="30.5448%" y="693" width="0.1330%" height="15" fill="rgb(230,97,2)" fg:x="8500" fg:w="37"/><text x="30.7948%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::has_readers_waiting (3 samples, 0.01%)</title><rect x="30.6885%" y="629" width="0.0108%" height="15" fill="rgb(211,25,27)" fg:x="8540" fg:w="3"/><text x="30.9385%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (11 samples, 0.04%)</title><rect x="30.6777%" y="693" width="0.0395%" height="15" fill="rgb(230,87,26)" fg:x="8537" fg:w="11"/><text x="30.9277%" y="703.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="30.6777%" y="677" width="0.0395%" height="15" fill="rgb(227,160,17)" fg:x="8537" fg:w="11"/><text x="30.9277%" y="687.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (11 samples, 0.04%)</title><rect x="30.6777%" y="661" width="0.0395%" height="15" fill="rgb(244,85,34)" fg:x="8537" fg:w="11"/><text x="30.9277%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (11 samples, 0.04%)</title><rect x="30.6777%" y="645" width="0.0395%" height="15" fill="rgb(207,70,0)" fg:x="8537" fg:w="11"/><text x="30.9277%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::has_writers_waiting (5 samples, 0.02%)</title><rect x="30.6993%" y="629" width="0.0180%" height="15" fill="rgb(223,129,7)" fg:x="8543" fg:w="5"/><text x="30.9493%" y="639.50"></text></g><g><title>std::sync::poison::Flag::get (4 samples, 0.01%)</title><rect x="30.7173%" y="645" width="0.0144%" height="15" fill="rgb(246,105,7)" fg:x="8548" fg:w="4"/><text x="30.9673%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.01%)</title><rect x="30.7173%" y="629" width="0.0144%" height="15" fill="rgb(215,154,42)" fg:x="8548" fg:w="4"/><text x="30.9673%" y="639.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="30.7173%" y="677" width="0.0216%" height="15" fill="rgb(220,215,30)" fg:x="8548" fg:w="6"/><text x="30.9673%" y="687.50"></text></g><g><title>std::sync::poison::Flag::borrow (6 samples, 0.02%)</title><rect x="30.7173%" y="661" width="0.0216%" height="15" fill="rgb(228,81,51)" fg:x="8548" fg:w="6"/><text x="30.9673%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (117 samples, 0.42%)</title><rect x="30.3974%" y="773" width="0.4204%" height="15" fill="rgb(247,71,54)" fg:x="8459" fg:w="117"/><text x="30.6474%" y="783.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (117 samples, 0.42%)</title><rect x="30.3974%" y="757" width="0.4204%" height="15" fill="rgb(234,176,34)" fg:x="8459" fg:w="117"/><text x="30.6474%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (117 samples, 0.42%)</title><rect x="30.3974%" y="741" width="0.4204%" height="15" fill="rgb(241,103,54)" fg:x="8459" fg:w="117"/><text x="30.6474%" y="751.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (117 samples, 0.42%)</title><rect x="30.3974%" y="725" width="0.4204%" height="15" fill="rgb(228,22,34)" fg:x="8459" fg:w="117"/><text x="30.6474%" y="735.50"></text></g><g><title>async_executor::Runner::new (97 samples, 0.35%)</title><rect x="30.4693%" y="709" width="0.3486%" height="15" fill="rgb(241,179,48)" fg:x="8479" fg:w="97"/><text x="30.7193%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (28 samples, 0.10%)</title><rect x="30.7173%" y="693" width="0.1006%" height="15" fill="rgb(235,167,37)" fg:x="8548" fg:w="28"/><text x="30.9673%" y="703.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (22 samples, 0.08%)</title><rect x="30.7388%" y="677" width="0.0791%" height="15" fill="rgb(213,109,30)" fg:x="8554" fg:w="22"/><text x="30.9888%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (22 samples, 0.08%)</title><rect x="30.7388%" y="661" width="0.0791%" height="15" fill="rgb(222,172,16)" fg:x="8554" fg:w="22"/><text x="30.9888%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (7 samples, 0.03%)</title><rect x="30.8358%" y="693" width="0.0252%" height="15" fill="rgb(233,192,5)" fg:x="8581" fg:w="7"/><text x="31.0858%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (7 samples, 0.03%)</title><rect x="30.8358%" y="677" width="0.0252%" height="15" fill="rgb(247,189,41)" fg:x="8581" fg:w="7"/><text x="31.0858%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::set_parent_link (7 samples, 0.03%)</title><rect x="30.8358%" y="661" width="0.0252%" height="15" fill="rgb(218,134,47)" fg:x="8581" fg:w="7"/><text x="31.0858%" y="671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.02%)</title><rect x="30.8430%" y="645" width="0.0180%" height="15" fill="rgb(216,29,3)" fg:x="8583" fg:w="5"/><text x="31.0930%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (15 samples, 0.05%)</title><rect x="30.8358%" y="709" width="0.0539%" height="15" fill="rgb(246,140,12)" fg:x="8581" fg:w="15"/><text x="31.0858%" y="719.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (8 samples, 0.03%)</title><rect x="30.8610%" y="693" width="0.0287%" height="15" fill="rgb(230,136,11)" fg:x="8588" fg:w="8"/><text x="31.1110%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.03%)</title><rect x="30.8610%" y="677" width="0.0287%" height="15" fill="rgb(247,22,47)" fg:x="8588" fg:w="8"/><text x="31.1110%" y="687.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="30.8610%" y="661" width="0.0287%" height="15" fill="rgb(218,84,22)" fg:x="8588" fg:w="8"/><text x="31.1110%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (4 samples, 0.01%)</title><rect x="30.8969%" y="693" width="0.0144%" height="15" fill="rgb(216,87,39)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (4 samples, 0.01%)</title><rect x="30.8969%" y="677" width="0.0144%" height="15" fill="rgb(221,178,8)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (4 samples, 0.01%)</title><rect x="30.8969%" y="661" width="0.0144%" height="15" fill="rgb(230,42,11)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (4 samples, 0.01%)</title><rect x="30.8969%" y="645" width="0.0144%" height="15" fill="rgb(237,229,4)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.01%)</title><rect x="30.8969%" y="629" width="0.0144%" height="15" fill="rgb(222,31,33)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.01%)</title><rect x="30.8969%" y="613" width="0.0144%" height="15" fill="rgb(210,17,39)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="30.8969%" y="597" width="0.0144%" height="15" fill="rgb(244,93,20)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="30.8969%" y="581" width="0.0144%" height="15" fill="rgb(210,40,47)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="591.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="30.8969%" y="565" width="0.0144%" height="15" fill="rgb(239,211,47)" fg:x="8598" fg:w="4"/><text x="31.1469%" y="575.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (163 samples, 0.59%)</title><rect x="30.3292%" y="1237" width="0.5857%" height="15" fill="rgb(251,223,49)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (163 samples, 0.59%)</title><rect x="30.3292%" y="1221" width="0.5857%" height="15" fill="rgb(221,149,5)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (163 samples, 0.59%)</title><rect x="30.3292%" y="1205" width="0.5857%" height="15" fill="rgb(219,224,51)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (163 samples, 0.59%)</title><rect x="30.3292%" y="1189" width="0.5857%" height="15" fill="rgb(223,7,8)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (163 samples, 0.59%)</title><rect x="30.3292%" y="1173" width="0.5857%" height="15" fill="rgb(241,217,22)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (163 samples, 0.59%)</title><rect x="30.3292%" y="1157" width="0.5857%" height="15" fill="rgb(248,209,0)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1167.50"></text></g><g><title>std::panicking::try (163 samples, 0.59%)</title><rect x="30.3292%" y="1141" width="0.5857%" height="15" fill="rgb(217,205,4)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (163 samples, 0.59%)</title><rect x="30.3292%" y="1125" width="0.5857%" height="15" fill="rgb(228,124,39)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (163 samples, 0.59%)</title><rect x="30.3292%" y="1109" width="0.5857%" height="15" fill="rgb(250,116,42)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (163 samples, 0.59%)</title><rect x="30.3292%" y="1093" width="0.5857%" height="15" fill="rgb(223,202,9)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (163 samples, 0.59%)</title><rect x="30.3292%" y="1077" width="0.5857%" height="15" fill="rgb(242,222,40)" fg:x="8440" fg:w="163"/><text x="30.5792%" y="1087.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (144 samples, 0.52%)</title><rect x="30.3974%" y="1061" width="0.5175%" height="15" fill="rgb(229,99,46)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="1071.50"></text></g><g><title>async_std::task::block_on::block_on (144 samples, 0.52%)</title><rect x="30.3974%" y="1045" width="0.5175%" height="15" fill="rgb(225,56,46)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="1055.50"></text></g><g><title>async_std::task::builder::Builder::blocking (144 samples, 0.52%)</title><rect x="30.3974%" y="1029" width="0.5175%" height="15" fill="rgb(227,94,5)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (144 samples, 0.52%)</title><rect x="30.3974%" y="1013" width="0.5175%" height="15" fill="rgb(205,112,38)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (144 samples, 0.52%)</title><rect x="30.3974%" y="997" width="0.5175%" height="15" fill="rgb(231,133,46)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (144 samples, 0.52%)</title><rect x="30.3974%" y="981" width="0.5175%" height="15" fill="rgb(217,16,9)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (144 samples, 0.52%)</title><rect x="30.3974%" y="965" width="0.5175%" height="15" fill="rgb(249,173,9)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (144 samples, 0.52%)</title><rect x="30.3974%" y="949" width="0.5175%" height="15" fill="rgb(205,163,53)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (144 samples, 0.52%)</title><rect x="30.3974%" y="933" width="0.5175%" height="15" fill="rgb(217,54,41)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (144 samples, 0.52%)</title><rect x="30.3974%" y="917" width="0.5175%" height="15" fill="rgb(228,216,12)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="927.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (144 samples, 0.52%)</title><rect x="30.3974%" y="901" width="0.5175%" height="15" fill="rgb(244,228,15)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="911.50"></text></g><g><title>async_global_executor::executor::block_on (144 samples, 0.52%)</title><rect x="30.3974%" y="885" width="0.5175%" height="15" fill="rgb(221,176,53)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (144 samples, 0.52%)</title><rect x="30.3974%" y="869" width="0.5175%" height="15" fill="rgb(205,94,34)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (144 samples, 0.52%)</title><rect x="30.3974%" y="853" width="0.5175%" height="15" fill="rgb(213,110,48)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="863.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (144 samples, 0.52%)</title><rect x="30.3974%" y="837" width="0.5175%" height="15" fill="rgb(236,142,28)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="847.50"></text></g><g><title>async_global_executor::reactor::block_on (144 samples, 0.52%)</title><rect x="30.3974%" y="821" width="0.5175%" height="15" fill="rgb(225,135,29)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (144 samples, 0.52%)</title><rect x="30.3974%" y="805" width="0.5175%" height="15" fill="rgb(252,45,31)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="815.50"></text></g><g><title>async_io::driver::block_on (144 samples, 0.52%)</title><rect x="30.3974%" y="789" width="0.5175%" height="15" fill="rgb(211,187,50)" fg:x="8459" fg:w="144"/><text x="30.6474%" y="799.50"></text></g><g><title>async_io::reactor::ReactorLock::react (27 samples, 0.10%)</title><rect x="30.8179%" y="773" width="0.0970%" height="15" fill="rgb(229,109,7)" fg:x="8576" fg:w="27"/><text x="31.0679%" y="783.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (27 samples, 0.10%)</title><rect x="30.8179%" y="757" width="0.0970%" height="15" fill="rgb(251,131,51)" fg:x="8576" fg:w="27"/><text x="31.0679%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (27 samples, 0.10%)</title><rect x="30.8179%" y="741" width="0.0970%" height="15" fill="rgb(251,180,35)" fg:x="8576" fg:w="27"/><text x="31.0679%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (27 samples, 0.10%)</title><rect x="30.8179%" y="725" width="0.0970%" height="15" fill="rgb(211,46,32)" fg:x="8576" fg:w="27"/><text x="31.0679%" y="735.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (5 samples, 0.02%)</title><rect x="30.8969%" y="709" width="0.0180%" height="15" fill="rgb(248,123,17)" fg:x="8598" fg:w="5"/><text x="31.1469%" y="719.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;usize,R&gt;&gt;::read (3 samples, 0.01%)</title><rect x="30.9221%" y="517" width="0.0108%" height="15" fill="rgb(227,141,18)" fg:x="8605" fg:w="3"/><text x="31.1721%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (3 samples, 0.01%)</title><rect x="30.9221%" y="501" width="0.0108%" height="15" fill="rgb(216,102,9)" fg:x="8605" fg:w="3"/><text x="31.1721%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="30.9185%" y="1221" width="0.0180%" height="15" fill="rgb(253,47,13)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1231.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (5 samples, 0.02%)</title><rect x="30.9185%" y="1205" width="0.0180%" height="15" fill="rgb(226,93,23)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.02%)</title><rect x="30.9185%" y="1189" width="0.0180%" height="15" fill="rgb(247,104,17)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1199.50"></text></g><g><title>std::panicking::try (5 samples, 0.02%)</title><rect x="30.9185%" y="1173" width="0.0180%" height="15" fill="rgb(233,203,26)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.02%)</title><rect x="30.9185%" y="1157" width="0.0180%" height="15" fill="rgb(244,98,49)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1167.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="1141" width="0.0180%" height="15" fill="rgb(235,134,22)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="30.9185%" y="1125" width="0.0180%" height="15" fill="rgb(221,70,32)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.02%)</title><rect x="30.9185%" y="1109" width="0.0180%" height="15" fill="rgb(238,15,50)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1119.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="1093" width="0.0180%" height="15" fill="rgb(215,221,48)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1103.50"></text></g><g><title>async_global_executor::reactor::block_on (5 samples, 0.02%)</title><rect x="30.9185%" y="1077" width="0.0180%" height="15" fill="rgb(236,73,3)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1087.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="1061" width="0.0180%" height="15" fill="rgb(250,107,11)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1071.50"></text></g><g><title>async_io::driver::block_on (5 samples, 0.02%)</title><rect x="30.9185%" y="1045" width="0.0180%" height="15" fill="rgb(242,39,14)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1055.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="1029" width="0.0180%" height="15" fill="rgb(248,164,37)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="1013" width="0.0180%" height="15" fill="rgb(217,60,12)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1023.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="997" width="0.0180%" height="15" fill="rgb(240,125,29)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="1007.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="981" width="0.0180%" height="15" fill="rgb(208,207,28)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="965" width="0.0180%" height="15" fill="rgb(209,159,27)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="949" width="0.0180%" height="15" fill="rgb(251,176,53)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5 samples, 0.02%)</title><rect x="30.9185%" y="933" width="0.0180%" height="15" fill="rgb(211,85,7)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="917" width="0.0180%" height="15" fill="rgb(216,64,54)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="901" width="0.0180%" height="15" fill="rgb(217,54,24)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="911.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="885" width="0.0180%" height="15" fill="rgb(208,206,53)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="895.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="869" width="0.0180%" height="15" fill="rgb(251,74,39)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="879.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5 samples, 0.02%)</title><rect x="30.9185%" y="853" width="0.0180%" height="15" fill="rgb(226,47,5)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="30.9185%" y="837" width="0.0180%" height="15" fill="rgb(234,111,33)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.02%)</title><rect x="30.9185%" y="821" width="0.0180%" height="15" fill="rgb(251,14,10)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="831.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="805" width="0.0180%" height="15" fill="rgb(232,43,0)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="815.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="789" width="0.0180%" height="15" fill="rgb(222,68,43)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="773" width="0.0180%" height="15" fill="rgb(217,24,23)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="783.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="757" width="0.0180%" height="15" fill="rgb(229,209,14)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="741" width="0.0180%" height="15" fill="rgb(250,149,48)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="751.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="725" width="0.0180%" height="15" fill="rgb(210,120,37)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="30.9185%" y="709" width="0.0180%" height="15" fill="rgb(210,21,8)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="719.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (5 samples, 0.02%)</title><rect x="30.9185%" y="693" width="0.0180%" height="15" fill="rgb(243,145,7)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="703.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (5 samples, 0.02%)</title><rect x="30.9185%" y="677" width="0.0180%" height="15" fill="rgb(238,178,32)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="687.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (5 samples, 0.02%)</title><rect x="30.9185%" y="661" width="0.0180%" height="15" fill="rgb(222,4,10)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (5 samples, 0.02%)</title><rect x="30.9185%" y="645" width="0.0180%" height="15" fill="rgb(239,7,37)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="655.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declare (5 samples, 0.02%)</title><rect x="30.9185%" y="629" width="0.0180%" height="15" fill="rgb(215,31,37)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declarations (5 samples, 0.02%)</title><rect x="30.9185%" y="613" width="0.0180%" height="15" fill="rgb(224,83,33)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="623.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declaration (5 samples, 0.02%)</title><rect x="30.9185%" y="597" width="0.0180%" height="15" fill="rgb(239,55,3)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="607.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_key_expr (5 samples, 0.02%)</title><rect x="30.9185%" y="581" width="0.0180%" height="15" fill="rgb(247,92,11)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="591.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_string (5 samples, 0.02%)</title><rect x="30.9185%" y="565" width="0.0180%" height="15" fill="rgb(239,200,7)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="575.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (5 samples, 0.02%)</title><rect x="30.9185%" y="549" width="0.0180%" height="15" fill="rgb(227,115,8)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="559.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;u8&gt;,R&gt;&gt;::read (5 samples, 0.02%)</title><rect x="30.9185%" y="533" width="0.0180%" height="15" fill="rgb(215,189,27)" fg:x="8604" fg:w="5"/><text x="31.1685%" y="543.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="30.9365%" y="725" width="0.0108%" height="15" fill="rgb(251,216,39)" fg:x="8609" fg:w="3"/><text x="31.1865%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="30.9508%" y="709" width="0.0252%" height="15" fill="rgb(207,29,47)" fg:x="8613" fg:w="7"/><text x="31.2008%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.01%)</title><rect x="30.9652%" y="693" width="0.0108%" height="15" fill="rgb(210,71,34)" fg:x="8617" fg:w="3"/><text x="31.2152%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.01%)</title><rect x="30.9652%" y="677" width="0.0108%" height="15" fill="rgb(253,217,51)" fg:x="8617" fg:w="3"/><text x="31.2152%" y="687.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="30.9904%" y="629" width="0.0108%" height="15" fill="rgb(222,117,46)" fg:x="8624" fg:w="3"/><text x="31.2404%" y="639.50"></text></g><g><title>[libc.so.6] (21 samples, 0.08%)</title><rect x="31.0335%" y="613" width="0.0755%" height="15" fill="rgb(226,132,6)" fg:x="8636" fg:w="21"/><text x="31.2835%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (39 samples, 0.14%)</title><rect x="30.9760%" y="709" width="0.1401%" height="15" fill="rgb(254,145,51)" fg:x="8620" fg:w="39"/><text x="31.2260%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (35 samples, 0.13%)</title><rect x="30.9904%" y="693" width="0.1258%" height="15" fill="rgb(231,199,27)" fg:x="8624" fg:w="35"/><text x="31.2404%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.13%)</title><rect x="30.9904%" y="677" width="0.1258%" height="15" fill="rgb(245,158,14)" fg:x="8624" fg:w="35"/><text x="31.2404%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.13%)</title><rect x="30.9904%" y="661" width="0.1258%" height="15" fill="rgb(240,113,14)" fg:x="8624" fg:w="35"/><text x="31.2404%" y="671.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.13%)</title><rect x="30.9904%" y="645" width="0.1258%" height="15" fill="rgb(210,20,13)" fg:x="8624" fg:w="35"/><text x="31.2404%" y="655.50"></text></g><g><title>malloc (31 samples, 0.11%)</title><rect x="31.0047%" y="629" width="0.1114%" height="15" fill="rgb(241,144,13)" fg:x="8628" fg:w="31"/><text x="31.2547%" y="639.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="31.1880%" y="581" width="0.0287%" height="15" fill="rgb(235,43,34)" fg:x="8679" fg:w="8"/><text x="31.4380%" y="591.50"></text></g><g><title>__lll_lock_wait_private (6 samples, 0.02%)</title><rect x="31.2204%" y="581" width="0.0216%" height="15" fill="rgb(208,36,20)" fg:x="8688" fg:w="6"/><text x="31.4704%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="31.2204%" y="565" width="0.0216%" height="15" fill="rgb(239,204,10)" fg:x="8688" fg:w="6"/><text x="31.4704%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="31.2204%" y="549" width="0.0216%" height="15" fill="rgb(217,84,43)" fg:x="8688" fg:w="6"/><text x="31.4704%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="31.2204%" y="533" width="0.0216%" height="15" fill="rgb(241,170,50)" fg:x="8688" fg:w="6"/><text x="31.4704%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="31.2204%" y="517" width="0.0216%" height="15" fill="rgb(226,205,29)" fg:x="8688" fg:w="6"/><text x="31.4704%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="31.2239%" y="501" width="0.0180%" height="15" fill="rgb(233,113,1)" fg:x="8689" fg:w="5"/><text x="31.4739%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="31.2239%" y="485" width="0.0180%" height="15" fill="rgb(253,98,13)" fg:x="8689" fg:w="5"/><text x="31.4739%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="31.2239%" y="469" width="0.0180%" height="15" fill="rgb(211,115,12)" fg:x="8689" fg:w="5"/><text x="31.4739%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="31.2275%" y="453" width="0.0144%" height="15" fill="rgb(208,12,16)" fg:x="8690" fg:w="4"/><text x="31.4775%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.10%)</title><rect x="31.1449%" y="645" width="0.1006%" height="15" fill="rgb(237,193,54)" fg:x="8667" fg:w="28"/><text x="31.3949%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.10%)</title><rect x="31.1449%" y="629" width="0.1006%" height="15" fill="rgb(243,22,42)" fg:x="8667" fg:w="28"/><text x="31.3949%" y="639.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.10%)</title><rect x="31.1449%" y="613" width="0.1006%" height="15" fill="rgb(233,151,36)" fg:x="8667" fg:w="28"/><text x="31.3949%" y="623.50"></text></g><g><title>realloc (27 samples, 0.10%)</title><rect x="31.1485%" y="597" width="0.0970%" height="15" fill="rgb(237,57,45)" fg:x="8668" fg:w="27"/><text x="31.3985%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (40 samples, 0.14%)</title><rect x="31.1449%" y="693" width="0.1437%" height="15" fill="rgb(221,88,17)" fg:x="8667" fg:w="40"/><text x="31.3949%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.14%)</title><rect x="31.1449%" y="677" width="0.1437%" height="15" fill="rgb(230,79,15)" fg:x="8667" fg:w="40"/><text x="31.3949%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (40 samples, 0.14%)</title><rect x="31.1449%" y="661" width="0.1437%" height="15" fill="rgb(213,57,13)" fg:x="8667" fg:w="40"/><text x="31.3949%" y="671.50"></text></g><g><title>malloc (11 samples, 0.04%)</title><rect x="31.2491%" y="645" width="0.0395%" height="15" fill="rgb(222,116,39)" fg:x="8696" fg:w="11"/><text x="31.4991%" y="655.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="31.2527%" y="629" width="0.0359%" height="15" fill="rgb(245,107,2)" fg:x="8697" fg:w="10"/><text x="31.5027%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.18%)</title><rect x="31.1161%" y="709" width="0.1761%" height="15" fill="rgb(238,1,10)" fg:x="8659" fg:w="49"/><text x="31.3661%" y="719.50"></text></g><g><title>[libc.so.6] (19 samples, 0.07%)</title><rect x="31.2922%" y="677" width="0.0683%" height="15" fill="rgb(249,4,48)" fg:x="8708" fg:w="19"/><text x="31.5422%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="31.3497%" y="661" width="0.0108%" height="15" fill="rgb(223,151,18)" fg:x="8724" fg:w="3"/><text x="31.5997%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="31.3497%" y="645" width="0.0108%" height="15" fill="rgb(227,65,43)" fg:x="8724" fg:w="3"/><text x="31.5997%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="31.3497%" y="629" width="0.0108%" height="15" fill="rgb(218,40,45)" fg:x="8724" fg:w="3"/><text x="31.5997%" y="639.50"></text></g><g><title>[libc.so.6] (117 samples, 0.42%)</title><rect x="31.6947%" y="517" width="0.4204%" height="15" fill="rgb(252,121,31)" fg:x="8820" fg:w="117"/><text x="31.9447%" y="527.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="32.0397%" y="501" width="0.0755%" height="15" fill="rgb(219,158,43)" fg:x="8916" fg:w="21"/><text x="32.2897%" y="511.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="32.0433%" y="485" width="0.0719%" height="15" fill="rgb(231,162,42)" fg:x="8917" fg:w="20"/><text x="32.2933%" y="495.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="32.0469%" y="469" width="0.0683%" height="15" fill="rgb(217,179,25)" fg:x="8918" fg:w="19"/><text x="32.2969%" y="479.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="32.0505%" y="453" width="0.0647%" height="15" fill="rgb(206,212,31)" fg:x="8919" fg:w="18"/><text x="32.3005%" y="463.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="32.0540%" y="437" width="0.0611%" height="15" fill="rgb(235,144,12)" fg:x="8920" fg:w="17"/><text x="32.3040%" y="447.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="32.0684%" y="421" width="0.0467%" height="15" fill="rgb(213,51,10)" fg:x="8924" fg:w="13"/><text x="32.3184%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="32.0756%" y="405" width="0.0395%" height="15" fill="rgb(231,145,14)" fg:x="8926" fg:w="11"/><text x="32.3256%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="32.0756%" y="389" width="0.0395%" height="15" fill="rgb(235,15,28)" fg:x="8926" fg:w="11"/><text x="32.3256%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="32.0936%" y="373" width="0.0216%" height="15" fill="rgb(237,206,10)" fg:x="8931" fg:w="6"/><text x="32.3436%" y="383.50"></text></g><g><title>[libc.so.6] (129 samples, 0.46%)</title><rect x="31.6588%" y="533" width="0.4636%" height="15" fill="rgb(236,227,27)" fg:x="8810" fg:w="129"/><text x="31.9088%" y="543.50"></text></g><g><title>__lll_lock_wait_private (21 samples, 0.08%)</title><rect x="32.1295%" y="533" width="0.0755%" height="15" fill="rgb(246,83,35)" fg:x="8941" fg:w="21"/><text x="32.3795%" y="543.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="32.1367%" y="517" width="0.0683%" height="15" fill="rgb(220,136,24)" fg:x="8943" fg:w="19"/><text x="32.3867%" y="527.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="32.1403%" y="501" width="0.0647%" height="15" fill="rgb(217,3,25)" fg:x="8944" fg:w="18"/><text x="32.3903%" y="511.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="32.1403%" y="485" width="0.0647%" height="15" fill="rgb(239,24,14)" fg:x="8944" fg:w="18"/><text x="32.3903%" y="495.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="32.1403%" y="469" width="0.0647%" height="15" fill="rgb(244,16,53)" fg:x="8944" fg:w="18"/><text x="32.3903%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="32.1619%" y="453" width="0.0431%" height="15" fill="rgb(208,175,44)" fg:x="8950" fg:w="12"/><text x="32.4119%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="32.1726%" y="437" width="0.0323%" height="15" fill="rgb(252,18,48)" fg:x="8953" fg:w="9"/><text x="32.4226%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="32.1762%" y="421" width="0.0287%" height="15" fill="rgb(234,199,32)" fg:x="8954" fg:w="8"/><text x="32.4262%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="32.1870%" y="405" width="0.0180%" height="15" fill="rgb(225,77,54)" fg:x="8957" fg:w="5"/><text x="32.4370%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="32.1906%" y="389" width="0.0144%" height="15" fill="rgb(225,42,25)" fg:x="8958" fg:w="4"/><text x="32.4406%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="32.1906%" y="373" width="0.0144%" height="15" fill="rgb(242,227,46)" fg:x="8958" fg:w="4"/><text x="32.4406%" y="383.50"></text></g><g><title>__rdl_alloc (260 samples, 0.93%)</title><rect x="31.3892%" y="613" width="0.9343%" height="15" fill="rgb(246,197,35)" fg:x="8735" fg:w="260"/><text x="31.6392%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (254 samples, 0.91%)</title><rect x="31.4108%" y="597" width="0.9127%" height="15" fill="rgb(215,159,26)" fg:x="8741" fg:w="254"/><text x="31.6608%" y="607.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (254 samples, 0.91%)</title><rect x="31.4108%" y="581" width="0.9127%" height="15" fill="rgb(212,194,50)" fg:x="8741" fg:w="254"/><text x="31.6608%" y="591.50"></text></g><g><title>posix_memalign (254 samples, 0.91%)</title><rect x="31.4108%" y="565" width="0.9127%" height="15" fill="rgb(246,132,1)" fg:x="8741" fg:w="254"/><text x="31.6608%" y="575.50"></text></g><g><title>[libc.so.6] (246 samples, 0.88%)</title><rect x="31.4396%" y="549" width="0.8840%" height="15" fill="rgb(217,71,7)" fg:x="8749" fg:w="246"/><text x="31.6896%" y="559.50"></text></g><g><title>__lll_lock_wake_private (33 samples, 0.12%)</title><rect x="32.2050%" y="533" width="0.1186%" height="15" fill="rgb(252,59,32)" fg:x="8962" fg:w="33"/><text x="32.4550%" y="543.50"></text></g><g><title>[unknown] (31 samples, 0.11%)</title><rect x="32.2122%" y="517" width="0.1114%" height="15" fill="rgb(253,204,25)" fg:x="8964" fg:w="31"/><text x="32.4622%" y="527.50"></text></g><g><title>[unknown] (31 samples, 0.11%)</title><rect x="32.2122%" y="501" width="0.1114%" height="15" fill="rgb(232,21,16)" fg:x="8964" fg:w="31"/><text x="32.4622%" y="511.50"></text></g><g><title>[unknown] (31 samples, 0.11%)</title><rect x="32.2122%" y="485" width="0.1114%" height="15" fill="rgb(248,90,29)" fg:x="8964" fg:w="31"/><text x="32.4622%" y="495.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="32.2193%" y="469" width="0.1042%" height="15" fill="rgb(249,223,7)" fg:x="8966" fg:w="29"/><text x="32.4693%" y="479.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="32.2661%" y="453" width="0.0575%" height="15" fill="rgb(231,119,42)" fg:x="8979" fg:w="16"/><text x="32.5161%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="32.2984%" y="437" width="0.0252%" height="15" fill="rgb(215,41,35)" fg:x="8988" fg:w="7"/><text x="32.5484%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="32.3092%" y="421" width="0.0144%" height="15" fill="rgb(220,44,45)" fg:x="8991" fg:w="4"/><text x="32.5592%" y="431.50"></text></g><g><title>__rust_alloc (8 samples, 0.03%)</title><rect x="32.3236%" y="613" width="0.0287%" height="15" fill="rgb(253,197,36)" fg:x="8995" fg:w="8"/><text x="32.5736%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="32.3559%" y="581" width="0.0144%" height="15" fill="rgb(245,225,54)" fg:x="9004" fg:w="4"/><text x="32.6059%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (304 samples, 1.09%)</title><rect x="31.2922%" y="693" width="1.0924%" height="15" fill="rgb(239,94,37)" fg:x="8708" fg:w="304"/><text x="31.5422%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (285 samples, 1.02%)</title><rect x="31.3605%" y="677" width="1.0241%" height="15" fill="rgb(242,217,10)" fg:x="8727" fg:w="285"/><text x="31.6105%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (285 samples, 1.02%)</title><rect x="31.3605%" y="661" width="1.0241%" height="15" fill="rgb(250,193,7)" fg:x="8727" fg:w="285"/><text x="31.6105%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (285 samples, 1.02%)</title><rect x="31.3605%" y="645" width="1.0241%" height="15" fill="rgb(230,104,19)" fg:x="8727" fg:w="285"/><text x="31.6105%" y="655.50"></text></g><g><title>alloc::alloc::alloc (285 samples, 1.02%)</title><rect x="31.3605%" y="629" width="1.0241%" height="15" fill="rgb(230,181,4)" fg:x="8727" fg:w="285"/><text x="31.6105%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="32.3523%" y="613" width="0.0323%" height="15" fill="rgb(216,219,49)" fg:x="9003" fg:w="9"/><text x="32.6023%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.03%)</title><rect x="32.3559%" y="597" width="0.0287%" height="15" fill="rgb(254,144,0)" fg:x="9004" fg:w="8"/><text x="32.6059%" y="607.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="32.3703%" y="581" width="0.0144%" height="15" fill="rgb(205,209,38)" fg:x="9008" fg:w="4"/><text x="32.6203%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="32.3703%" y="565" width="0.0144%" height="15" fill="rgb(240,21,42)" fg:x="9008" fg:w="4"/><text x="32.6203%" y="575.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="33.3836%" y="661" width="0.0827%" height="15" fill="rgb(241,132,3)" fg:x="9290" fg:w="23"/><text x="33.6336%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="33.4375%" y="645" width="0.0287%" height="15" fill="rgb(225,14,2)" fg:x="9305" fg:w="8"/><text x="33.6875%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="33.4411%" y="629" width="0.0252%" height="15" fill="rgb(210,141,35)" fg:x="9306" fg:w="7"/><text x="33.6911%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="33.4411%" y="613" width="0.0252%" height="15" fill="rgb(251,14,44)" fg:x="9306" fg:w="7"/><text x="33.6911%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="33.4411%" y="597" width="0.0252%" height="15" fill="rgb(247,48,18)" fg:x="9306" fg:w="7"/><text x="33.6911%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="33.4483%" y="581" width="0.0180%" height="15" fill="rgb(225,0,40)" fg:x="9308" fg:w="5"/><text x="33.6983%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="33.4555%" y="565" width="0.0108%" height="15" fill="rgb(221,31,33)" fg:x="9310" fg:w="3"/><text x="33.7055%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.02%)</title><rect x="33.4663%" y="661" width="0.0180%" height="15" fill="rgb(237,42,40)" fg:x="9313" fg:w="5"/><text x="33.7163%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (452 samples, 1.62%)</title><rect x="32.4278%" y="677" width="1.6243%" height="15" fill="rgb(233,51,29)" fg:x="9024" fg:w="452"/><text x="32.6778%" y="687.50"></text></g><g><title>core::ptr::write (158 samples, 0.57%)</title><rect x="33.4843%" y="661" width="0.5678%" height="15" fill="rgb(226,58,20)" fg:x="9318" fg:w="158"/><text x="33.7343%" y="671.50"></text></g><g><title>[unknown] (153 samples, 0.55%)</title><rect x="33.5022%" y="645" width="0.5498%" height="15" fill="rgb(208,98,7)" fg:x="9323" fg:w="153"/><text x="33.7522%" y="655.50"></text></g><g><title>[unknown] (153 samples, 0.55%)</title><rect x="33.5022%" y="629" width="0.5498%" height="15" fill="rgb(228,143,44)" fg:x="9323" fg:w="153"/><text x="33.7522%" y="639.50"></text></g><g><title>[unknown] (150 samples, 0.54%)</title><rect x="33.5130%" y="613" width="0.5390%" height="15" fill="rgb(246,55,38)" fg:x="9326" fg:w="150"/><text x="33.7630%" y="623.50"></text></g><g><title>[unknown] (147 samples, 0.53%)</title><rect x="33.5238%" y="597" width="0.5282%" height="15" fill="rgb(247,87,16)" fg:x="9329" fg:w="147"/><text x="33.7738%" y="607.50"></text></g><g><title>[unknown] (96 samples, 0.34%)</title><rect x="33.7071%" y="581" width="0.3450%" height="15" fill="rgb(234,129,42)" fg:x="9380" fg:w="96"/><text x="33.9571%" y="591.50"></text></g><g><title>[unknown] (64 samples, 0.23%)</title><rect x="33.8220%" y="565" width="0.2300%" height="15" fill="rgb(220,82,16)" fg:x="9412" fg:w="64"/><text x="34.0720%" y="575.50"></text></g><g><title>[unknown] (50 samples, 0.18%)</title><rect x="33.8724%" y="549" width="0.1797%" height="15" fill="rgb(211,88,4)" fg:x="9426" fg:w="50"/><text x="34.1224%" y="559.50"></text></g><g><title>[unknown] (38 samples, 0.14%)</title><rect x="33.9155%" y="533" width="0.1366%" height="15" fill="rgb(248,151,21)" fg:x="9438" fg:w="38"/><text x="34.1655%" y="543.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="33.9802%" y="517" width="0.0719%" height="15" fill="rgb(238,163,6)" fg:x="9456" fg:w="20"/><text x="34.2302%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="34.0305%" y="501" width="0.0216%" height="15" fill="rgb(209,183,11)" fg:x="9470" fg:w="6"/><text x="34.2805%" y="511.50"></text></g><g><title>[libc.so.6] (132 samples, 0.47%)</title><rect x="34.1491%" y="549" width="0.4743%" height="15" fill="rgb(219,37,20)" fg:x="9503" fg:w="132"/><text x="34.3991%" y="559.50"></text></g><g><title>[unknown] (99 samples, 0.36%)</title><rect x="34.2676%" y="533" width="0.3558%" height="15" fill="rgb(210,158,4)" fg:x="9536" fg:w="99"/><text x="34.5176%" y="543.50"></text></g><g><title>[unknown] (88 samples, 0.32%)</title><rect x="34.3072%" y="517" width="0.3162%" height="15" fill="rgb(221,167,53)" fg:x="9547" fg:w="88"/><text x="34.5572%" y="527.50"></text></g><g><title>[unknown] (81 samples, 0.29%)</title><rect x="34.3323%" y="501" width="0.2911%" height="15" fill="rgb(237,151,45)" fg:x="9554" fg:w="81"/><text x="34.5823%" y="511.50"></text></g><g><title>[unknown] (80 samples, 0.29%)</title><rect x="34.3359%" y="485" width="0.2875%" height="15" fill="rgb(231,39,3)" fg:x="9555" fg:w="80"/><text x="34.5859%" y="495.50"></text></g><g><title>[unknown] (58 samples, 0.21%)</title><rect x="34.4150%" y="469" width="0.2084%" height="15" fill="rgb(212,167,28)" fg:x="9577" fg:w="58"/><text x="34.6650%" y="479.50"></text></g><g><title>[unknown] (40 samples, 0.14%)</title><rect x="34.4797%" y="453" width="0.1437%" height="15" fill="rgb(232,178,8)" fg:x="9595" fg:w="40"/><text x="34.7297%" y="463.50"></text></g><g><title>[unknown] (31 samples, 0.11%)</title><rect x="34.5120%" y="437" width="0.1114%" height="15" fill="rgb(225,151,20)" fg:x="9604" fg:w="31"/><text x="34.7620%" y="447.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="34.5408%" y="421" width="0.0827%" height="15" fill="rgb(238,3,37)" fg:x="9612" fg:w="23"/><text x="34.7908%" y="431.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="34.5623%" y="405" width="0.0611%" height="15" fill="rgb(251,147,42)" fg:x="9618" fg:w="17"/><text x="34.8123%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="34.5982%" y="389" width="0.0252%" height="15" fill="rgb(208,173,10)" fg:x="9628" fg:w="7"/><text x="34.8482%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="34.6234%" y="549" width="0.0180%" height="15" fill="rgb(246,225,4)" fg:x="9635" fg:w="5"/><text x="34.8734%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (213 samples, 0.77%)</title><rect x="34.0520%" y="677" width="0.7654%" height="15" fill="rgb(248,102,6)" fg:x="9476" fg:w="213"/><text x="34.3020%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (213 samples, 0.77%)</title><rect x="34.0520%" y="661" width="0.7654%" height="15" fill="rgb(232,6,21)" fg:x="9476" fg:w="213"/><text x="34.3020%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (213 samples, 0.77%)</title><rect x="34.0520%" y="645" width="0.7654%" height="15" fill="rgb(221,179,22)" fg:x="9476" fg:w="213"/><text x="34.3020%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (213 samples, 0.77%)</title><rect x="34.0520%" y="629" width="0.7654%" height="15" fill="rgb(252,50,20)" fg:x="9476" fg:w="213"/><text x="34.3020%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (213 samples, 0.77%)</title><rect x="34.0520%" y="613" width="0.7654%" height="15" fill="rgb(222,56,38)" fg:x="9476" fg:w="213"/><text x="34.3020%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (213 samples, 0.77%)</title><rect x="34.0520%" y="597" width="0.7654%" height="15" fill="rgb(206,193,29)" fg:x="9476" fg:w="213"/><text x="34.3020%" y="607.50"></text></g><g><title>alloc::alloc::alloc (213 samples, 0.77%)</title><rect x="34.0520%" y="581" width="0.7654%" height="15" fill="rgb(239,192,45)" fg:x="9476" fg:w="213"/><text x="34.3020%" y="591.50"></text></g><g><title>malloc (212 samples, 0.76%)</title><rect x="34.0556%" y="565" width="0.7618%" height="15" fill="rgb(254,18,36)" fg:x="9477" fg:w="212"/><text x="34.3056%" y="575.50"></text></g><g><title>__lll_lock_wake_private (49 samples, 0.18%)</title><rect x="34.6414%" y="549" width="0.1761%" height="15" fill="rgb(221,127,11)" fg:x="9640" fg:w="49"/><text x="34.8914%" y="559.50"></text></g><g><title>[unknown] (49 samples, 0.18%)</title><rect x="34.6414%" y="533" width="0.1761%" height="15" fill="rgb(234,146,35)" fg:x="9640" fg:w="49"/><text x="34.8914%" y="543.50"></text></g><g><title>[unknown] (45 samples, 0.16%)</title><rect x="34.6557%" y="517" width="0.1617%" height="15" fill="rgb(254,201,37)" fg:x="9644" fg:w="45"/><text x="34.9057%" y="527.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="34.6593%" y="501" width="0.1581%" height="15" fill="rgb(211,202,23)" fg:x="9645" fg:w="44"/><text x="34.9093%" y="511.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="34.6773%" y="485" width="0.1401%" height="15" fill="rgb(237,91,2)" fg:x="9650" fg:w="39"/><text x="34.9273%" y="495.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="34.7132%" y="469" width="0.1042%" height="15" fill="rgb(226,228,36)" fg:x="9660" fg:w="29"/><text x="34.9632%" y="479.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="34.7528%" y="453" width="0.0647%" height="15" fill="rgb(213,63,50)" fg:x="9671" fg:w="18"/><text x="35.0028%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="34.7779%" y="437" width="0.0395%" height="15" fill="rgb(235,194,19)" fg:x="9678" fg:w="11"/><text x="35.0279%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="34.7815%" y="421" width="0.0359%" height="15" fill="rgb(207,204,18)" fg:x="9679" fg:w="10"/><text x="35.0315%" y="431.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="34.7851%" y="405" width="0.0323%" height="15" fill="rgb(248,8,7)" fg:x="9680" fg:w="9"/><text x="35.0351%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.01%)</title><rect x="34.8175%" y="645" width="0.0108%" height="15" fill="rgb(223,145,47)" fg:x="9689" fg:w="3"/><text x="35.0675%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.01%)</title><rect x="34.8175%" y="629" width="0.0108%" height="15" fill="rgb(228,84,11)" fg:x="9689" fg:w="3"/><text x="35.0675%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.06%)</title><rect x="34.8175%" y="677" width="0.0575%" height="15" fill="rgb(218,76,45)" fg:x="9689" fg:w="16"/><text x="35.0675%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.06%)</title><rect x="34.8175%" y="661" width="0.0575%" height="15" fill="rgb(223,80,15)" fg:x="9689" fg:w="16"/><text x="35.0675%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (13 samples, 0.05%)</title><rect x="34.8282%" y="645" width="0.0467%" height="15" fill="rgb(219,218,33)" fg:x="9692" fg:w="13"/><text x="35.0782%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (998 samples, 3.59%)</title><rect x="31.2922%" y="709" width="3.5863%" height="15" fill="rgb(208,51,11)" fg:x="8708" fg:w="998"/><text x="31.5422%" y="719.50">conc..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (694 samples, 2.49%)</title><rect x="32.3846%" y="693" width="2.4939%" height="15" fill="rgb(229,165,39)" fg:x="9012" fg:w="694"/><text x="32.6346%" y="703.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (7 samples, 0.03%)</title><rect x="34.8785%" y="709" width="0.0252%" height="15" fill="rgb(241,100,24)" fg:x="9706" fg:w="7"/><text x="35.1285%" y="719.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="34.8785%" y="693" width="0.0252%" height="15" fill="rgb(228,14,23)" fg:x="9706" fg:w="7"/><text x="35.1285%" y="703.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (7 samples, 0.03%)</title><rect x="34.8785%" y="677" width="0.0252%" height="15" fill="rgb(247,116,52)" fg:x="9706" fg:w="7"/><text x="35.1285%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (7 samples, 0.03%)</title><rect x="34.8785%" y="661" width="0.0252%" height="15" fill="rgb(216,149,33)" fg:x="9706" fg:w="7"/><text x="35.1285%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="34.9037%" y="693" width="0.0108%" height="15" fill="rgb(238,142,29)" fg:x="9713" fg:w="3"/><text x="35.1537%" y="703.50"></text></g><g><title>std::sync::poison::Flag::borrow (3 samples, 0.01%)</title><rect x="34.9037%" y="677" width="0.0108%" height="15" fill="rgb(224,83,40)" fg:x="9713" fg:w="3"/><text x="35.1537%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="35.0546%" y="661" width="0.0108%" height="15" fill="rgb(234,165,11)" fg:x="9755" fg:w="3"/><text x="35.3046%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="35.0546%" y="645" width="0.0108%" height="15" fill="rgb(215,96,23)" fg:x="9755" fg:w="3"/><text x="35.3046%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="35.0546%" y="629" width="0.0108%" height="15" fill="rgb(233,179,26)" fg:x="9755" fg:w="3"/><text x="35.3046%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="35.0546%" y="613" width="0.0108%" height="15" fill="rgb(225,129,33)" fg:x="9755" fg:w="3"/><text x="35.3046%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,151 samples, 4.14%)</title><rect x="30.9365%" y="869" width="4.1361%" height="15" fill="rgb(237,49,13)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="879.50">&lt;futu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,151 samples, 4.14%)</title><rect x="30.9365%" y="853" width="4.1361%" height="15" fill="rgb(211,3,31)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="863.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,151 samples, 4.14%)</title><rect x="30.9365%" y="837" width="4.1361%" height="15" fill="rgb(216,152,19)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="847.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,151 samples, 4.14%)</title><rect x="30.9365%" y="821" width="4.1361%" height="15" fill="rgb(251,121,35)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="831.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,151 samples, 4.14%)</title><rect x="30.9365%" y="805" width="4.1361%" height="15" fill="rgb(210,217,47)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="815.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,151 samples, 4.14%)</title><rect x="30.9365%" y="789" width="4.1361%" height="15" fill="rgb(244,116,22)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="799.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,151 samples, 4.14%)</title><rect x="30.9365%" y="773" width="4.1361%" height="15" fill="rgb(228,17,21)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="783.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,151 samples, 4.14%)</title><rect x="30.9365%" y="757" width="4.1361%" height="15" fill="rgb(240,149,34)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="767.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (1,151 samples, 4.14%)</title><rect x="30.9365%" y="741" width="4.1361%" height="15" fill="rgb(208,125,47)" fg:x="8609" fg:w="1151"/><text x="31.1865%" y="751.50">async..</text></g><g><title>async_executor::Runner::new (1,148 samples, 4.13%)</title><rect x="30.9472%" y="725" width="4.1253%" height="15" fill="rgb(249,186,39)" fg:x="8612" fg:w="1148"/><text x="31.1972%" y="735.50">asyn..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (47 samples, 0.17%)</title><rect x="34.9037%" y="709" width="0.1689%" height="15" fill="rgb(240,220,33)" fg:x="9713" fg:w="47"/><text x="35.1537%" y="719.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (44 samples, 0.16%)</title><rect x="34.9145%" y="693" width="0.1581%" height="15" fill="rgb(243,110,23)" fg:x="9716" fg:w="44"/><text x="35.1645%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (44 samples, 0.16%)</title><rect x="34.9145%" y="677" width="0.1581%" height="15" fill="rgb(219,163,46)" fg:x="9716" fg:w="44"/><text x="35.1645%" y="687.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="35.0870%" y="677" width="0.0252%" height="15" fill="rgb(216,126,30)" fg:x="9764" fg:w="7"/><text x="35.3370%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (22 samples, 0.08%)</title><rect x="35.0870%" y="693" width="0.0791%" height="15" fill="rgb(208,139,11)" fg:x="9764" fg:w="22"/><text x="35.3370%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.05%)</title><rect x="35.1121%" y="677" width="0.0539%" height="15" fill="rgb(213,118,36)" fg:x="9771" fg:w="15"/><text x="35.3621%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.05%)</title><rect x="35.1121%" y="661" width="0.0539%" height="15" fill="rgb(226,43,17)" fg:x="9771" fg:w="15"/><text x="35.3621%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.05%)</title><rect x="35.1121%" y="645" width="0.0539%" height="15" fill="rgb(254,217,4)" fg:x="9771" fg:w="15"/><text x="35.3621%" y="655.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.05%)</title><rect x="35.1157%" y="629" width="0.0503%" height="15" fill="rgb(210,134,47)" fg:x="9772" fg:w="14"/><text x="35.3657%" y="639.50"></text></g><g><title>__rdl_alloc (14 samples, 0.05%)</title><rect x="35.1157%" y="613" width="0.0503%" height="15" fill="rgb(237,24,49)" fg:x="9772" fg:w="14"/><text x="35.3657%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (14 samples, 0.05%)</title><rect x="35.1157%" y="597" width="0.0503%" height="15" fill="rgb(251,39,46)" fg:x="9772" fg:w="14"/><text x="35.3657%" y="607.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (14 samples, 0.05%)</title><rect x="35.1157%" y="581" width="0.0503%" height="15" fill="rgb(251,220,3)" fg:x="9772" fg:w="14"/><text x="35.3657%" y="591.50"></text></g><g><title>posix_memalign (14 samples, 0.05%)</title><rect x="35.1157%" y="565" width="0.0503%" height="15" fill="rgb(228,105,12)" fg:x="9772" fg:w="14"/><text x="35.3657%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (23 samples, 0.08%)</title><rect x="35.0870%" y="709" width="0.0827%" height="15" fill="rgb(215,196,1)" fg:x="9764" fg:w="23"/><text x="35.3370%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (18 samples, 0.06%)</title><rect x="35.1696%" y="709" width="0.0647%" height="15" fill="rgb(214,33,39)" fg:x="9787" fg:w="18"/><text x="35.4196%" y="719.50"></text></g><g><title>async_executor::Executor::state (75 samples, 0.27%)</title><rect x="35.0726%" y="869" width="0.2695%" height="15" fill="rgb(220,19,52)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (75 samples, 0.27%)</title><rect x="35.0726%" y="853" width="0.2695%" height="15" fill="rgb(221,78,38)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (75 samples, 0.27%)</title><rect x="35.0726%" y="837" width="0.2695%" height="15" fill="rgb(253,30,16)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="847.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (75 samples, 0.27%)</title><rect x="35.0726%" y="821" width="0.2695%" height="15" fill="rgb(242,65,0)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="831.50"></text></g><g><title>once_cell::imp::initialize_or_wait (75 samples, 0.27%)</title><rect x="35.0726%" y="805" width="0.2695%" height="15" fill="rgb(235,201,12)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (75 samples, 0.27%)</title><rect x="35.0726%" y="789" width="0.2695%" height="15" fill="rgb(233,161,9)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="799.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (75 samples, 0.27%)</title><rect x="35.0726%" y="773" width="0.2695%" height="15" fill="rgb(241,207,41)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (75 samples, 0.27%)</title><rect x="35.0726%" y="757" width="0.2695%" height="15" fill="rgb(212,69,46)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="767.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (75 samples, 0.27%)</title><rect x="35.0726%" y="741" width="0.2695%" height="15" fill="rgb(239,69,45)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="751.50"></text></g><g><title>async_executor::State::new (75 samples, 0.27%)</title><rect x="35.0726%" y="725" width="0.2695%" height="15" fill="rgb(242,117,48)" fg:x="9760" fg:w="75"/><text x="35.3226%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::new (30 samples, 0.11%)</title><rect x="35.2343%" y="709" width="0.1078%" height="15" fill="rgb(228,41,36)" fg:x="9805" fg:w="30"/><text x="35.4843%" y="719.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::new (3 samples, 0.01%)</title><rect x="35.3313%" y="693" width="0.0108%" height="15" fill="rgb(212,3,32)" fg:x="9832" fg:w="3"/><text x="35.5813%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.05%)</title><rect x="35.3421%" y="853" width="0.0539%" height="15" fill="rgb(233,41,49)" fg:x="9835" fg:w="15"/><text x="35.5921%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.05%)</title><rect x="35.3421%" y="837" width="0.0539%" height="15" fill="rgb(252,170,49)" fg:x="9835" fg:w="15"/><text x="35.5921%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.05%)</title><rect x="35.3421%" y="821" width="0.0539%" height="15" fill="rgb(229,53,26)" fg:x="9835" fg:w="15"/><text x="35.5921%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.05%)</title><rect x="35.3421%" y="805" width="0.0539%" height="15" fill="rgb(217,157,12)" fg:x="9835" fg:w="15"/><text x="35.5921%" y="815.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.05%)</title><rect x="35.3421%" y="789" width="0.0539%" height="15" fill="rgb(227,17,9)" fg:x="9835" fg:w="15"/><text x="35.5921%" y="799.50"></text></g><g><title>malloc (15 samples, 0.05%)</title><rect x="35.3421%" y="773" width="0.0539%" height="15" fill="rgb(218,84,12)" fg:x="9835" fg:w="15"/><text x="35.5921%" y="783.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="35.3421%" y="757" width="0.0539%" height="15" fill="rgb(212,79,24)" fg:x="9835" fg:w="15"/><text x="35.5921%" y="767.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="35.4068%" y="773" width="0.0180%" height="15" fill="rgb(217,222,37)" fg:x="9853" fg:w="5"/><text x="35.6568%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (9 samples, 0.03%)</title><rect x="35.3960%" y="853" width="0.0323%" height="15" fill="rgb(246,208,8)" fg:x="9850" fg:w="9"/><text x="35.6460%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (9 samples, 0.03%)</title><rect x="35.3960%" y="837" width="0.0323%" height="15" fill="rgb(244,133,10)" fg:x="9850" fg:w="9"/><text x="35.6460%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.03%)</title><rect x="35.3960%" y="821" width="0.0323%" height="15" fill="rgb(209,219,41)" fg:x="9850" fg:w="9"/><text x="35.6460%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.03%)</title><rect x="35.3960%" y="805" width="0.0323%" height="15" fill="rgb(253,175,45)" fg:x="9850" fg:w="9"/><text x="35.6460%" y="815.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="35.3996%" y="789" width="0.0287%" height="15" fill="rgb(235,100,37)" fg:x="9851" fg:w="8"/><text x="35.6496%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="35.8488%" y="629" width="0.0180%" height="15" fill="rgb(225,87,19)" fg:x="9976" fg:w="5"/><text x="36.0988%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="35.8488%" y="613" width="0.0180%" height="15" fill="rgb(217,152,17)" fg:x="9976" fg:w="5"/><text x="36.0988%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="35.8524%" y="597" width="0.0144%" height="15" fill="rgb(235,72,13)" fg:x="9977" fg:w="4"/><text x="36.1024%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="35.8524%" y="581" width="0.0144%" height="15" fill="rgb(233,140,18)" fg:x="9977" fg:w="4"/><text x="36.1024%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="35.8560%" y="565" width="0.0108%" height="15" fill="rgb(207,212,28)" fg:x="9978" fg:w="3"/><text x="36.1060%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="35.8560%" y="549" width="0.0108%" height="15" fill="rgb(220,130,25)" fg:x="9978" fg:w="3"/><text x="36.1060%" y="559.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="35.8452%" y="645" width="0.0287%" height="15" fill="rgb(205,55,34)" fg:x="9975" fg:w="8"/><text x="36.0952%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (161 samples, 0.58%)</title><rect x="35.4283%" y="837" width="0.5786%" height="15" fill="rgb(237,54,35)" fg:x="9859" fg:w="161"/><text x="35.6783%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (160 samples, 0.57%)</title><rect x="35.4319%" y="821" width="0.5750%" height="15" fill="rgb(208,67,23)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (160 samples, 0.57%)</title><rect x="35.4319%" y="805" width="0.5750%" height="15" fill="rgb(206,207,50)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (160 samples, 0.57%)</title><rect x="35.4319%" y="789" width="0.5750%" height="15" fill="rgb(213,211,42)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="799.50"></text></g><g><title>alloc::alloc::alloc (160 samples, 0.57%)</title><rect x="35.4319%" y="773" width="0.5750%" height="15" fill="rgb(252,197,50)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="783.50"></text></g><g><title>__rdl_alloc (160 samples, 0.57%)</title><rect x="35.4319%" y="757" width="0.5750%" height="15" fill="rgb(251,211,41)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (160 samples, 0.57%)</title><rect x="35.4319%" y="741" width="0.5750%" height="15" fill="rgb(229,211,5)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="751.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (160 samples, 0.57%)</title><rect x="35.4319%" y="725" width="0.5750%" height="15" fill="rgb(239,36,31)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="735.50"></text></g><g><title>posix_memalign (160 samples, 0.57%)</title><rect x="35.4319%" y="709" width="0.5750%" height="15" fill="rgb(248,67,31)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="719.50"></text></g><g><title>[libc.so.6] (160 samples, 0.57%)</title><rect x="35.4319%" y="693" width="0.5750%" height="15" fill="rgb(249,55,44)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="703.50"></text></g><g><title>[libc.so.6] (160 samples, 0.57%)</title><rect x="35.4319%" y="677" width="0.5750%" height="15" fill="rgb(216,82,12)" fg:x="9860" fg:w="160"/><text x="35.6819%" y="687.50"></text></g><g><title>[libc.so.6] (147 samples, 0.53%)</title><rect x="35.4787%" y="661" width="0.5282%" height="15" fill="rgb(242,174,1)" fg:x="9873" fg:w="147"/><text x="35.7287%" y="671.50"></text></g><g><title>[unknown] (37 samples, 0.13%)</title><rect x="35.8739%" y="645" width="0.1330%" height="15" fill="rgb(208,120,29)" fg:x="9983" fg:w="37"/><text x="36.1239%" y="655.50"></text></g><g><title>[unknown] (34 samples, 0.12%)</title><rect x="35.8847%" y="629" width="0.1222%" height="15" fill="rgb(221,105,43)" fg:x="9986" fg:w="34"/><text x="36.1347%" y="639.50"></text></g><g><title>[unknown] (34 samples, 0.12%)</title><rect x="35.8847%" y="613" width="0.1222%" height="15" fill="rgb(234,124,22)" fg:x="9986" fg:w="34"/><text x="36.1347%" y="623.50"></text></g><g><title>[unknown] (33 samples, 0.12%)</title><rect x="35.8883%" y="597" width="0.1186%" height="15" fill="rgb(212,23,30)" fg:x="9987" fg:w="33"/><text x="36.1383%" y="607.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="35.9386%" y="581" width="0.0683%" height="15" fill="rgb(219,122,53)" fg:x="10001" fg:w="19"/><text x="36.1886%" y="591.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="35.9422%" y="565" width="0.0647%" height="15" fill="rgb(248,84,24)" fg:x="10002" fg:w="18"/><text x="36.1922%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="35.9674%" y="549" width="0.0395%" height="15" fill="rgb(245,115,18)" fg:x="10009" fg:w="11"/><text x="36.2174%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="35.9817%" y="533" width="0.0252%" height="15" fill="rgb(227,176,51)" fg:x="10013" fg:w="7"/><text x="36.2317%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="35.9853%" y="517" width="0.0216%" height="15" fill="rgb(229,63,42)" fg:x="10014" fg:w="6"/><text x="36.2353%" y="527.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="36.4417%" y="661" width="0.0539%" height="15" fill="rgb(247,202,24)" fg:x="10141" fg:w="15"/><text x="36.6917%" y="671.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="36.4561%" y="645" width="0.0395%" height="15" fill="rgb(244,173,20)" fg:x="10145" fg:w="11"/><text x="36.7061%" y="655.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="36.4597%" y="629" width="0.0359%" height="15" fill="rgb(242,81,47)" fg:x="10146" fg:w="10"/><text x="36.7097%" y="639.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="36.4633%" y="613" width="0.0323%" height="15" fill="rgb(231,185,54)" fg:x="10147" fg:w="9"/><text x="36.7133%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="36.4705%" y="597" width="0.0252%" height="15" fill="rgb(243,55,32)" fg:x="10149" fg:w="7"/><text x="36.7205%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="36.4812%" y="581" width="0.0144%" height="15" fill="rgb(208,167,19)" fg:x="10152" fg:w="4"/><text x="36.7312%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="36.4812%" y="565" width="0.0144%" height="15" fill="rgb(231,72,35)" fg:x="10152" fg:w="4"/><text x="36.7312%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="36.4812%" y="549" width="0.0144%" height="15" fill="rgb(250,173,51)" fg:x="10152" fg:w="4"/><text x="36.7312%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="36.4848%" y="533" width="0.0108%" height="15" fill="rgb(209,5,22)" fg:x="10153" fg:w="3"/><text x="36.7348%" y="543.50"></text></g><g><title>[libc.so.6] (63 samples, 0.23%)</title><rect x="36.3052%" y="677" width="0.2264%" height="15" fill="rgb(250,174,19)" fg:x="10103" fg:w="63"/><text x="36.5552%" y="687.50"></text></g><g><title>__mprotect (10 samples, 0.04%)</title><rect x="36.4956%" y="661" width="0.0359%" height="15" fill="rgb(217,3,49)" fg:x="10156" fg:w="10"/><text x="36.7456%" y="671.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="36.4956%" y="645" width="0.0359%" height="15" fill="rgb(218,225,5)" fg:x="10156" fg:w="10"/><text x="36.7456%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="36.5064%" y="629" width="0.0252%" height="15" fill="rgb(236,89,11)" fg:x="10159" fg:w="7"/><text x="36.7564%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="36.5064%" y="613" width="0.0252%" height="15" fill="rgb(206,33,28)" fg:x="10159" fg:w="7"/><text x="36.7564%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="36.5100%" y="597" width="0.0216%" height="15" fill="rgb(241,56,42)" fg:x="10160" fg:w="6"/><text x="36.7600%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="36.5100%" y="581" width="0.0216%" height="15" fill="rgb(222,44,11)" fg:x="10160" fg:w="6"/><text x="36.7600%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="36.5136%" y="565" width="0.0180%" height="15" fill="rgb(234,111,20)" fg:x="10161" fg:w="5"/><text x="36.7636%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="36.5208%" y="549" width="0.0108%" height="15" fill="rgb(237,77,6)" fg:x="10163" fg:w="3"/><text x="36.7708%" y="559.50"></text></g><g><title>[libc.so.6] (230 samples, 0.83%)</title><rect x="36.1363%" y="693" width="0.8265%" height="15" fill="rgb(235,111,23)" fg:x="10056" fg:w="230"/><text x="36.3863%" y="703.50"></text></g><g><title>[unknown] (120 samples, 0.43%)</title><rect x="36.5316%" y="677" width="0.4312%" height="15" fill="rgb(251,135,29)" fg:x="10166" fg:w="120"/><text x="36.7816%" y="687.50"></text></g><g><title>[unknown] (108 samples, 0.39%)</title><rect x="36.5747%" y="661" width="0.3881%" height="15" fill="rgb(217,57,1)" fg:x="10178" fg:w="108"/><text x="36.8247%" y="671.50"></text></g><g><title>[unknown] (105 samples, 0.38%)</title><rect x="36.5855%" y="645" width="0.3773%" height="15" fill="rgb(249,119,31)" fg:x="10181" fg:w="105"/><text x="36.8355%" y="655.50"></text></g><g><title>[unknown] (102 samples, 0.37%)</title><rect x="36.5962%" y="629" width="0.3665%" height="15" fill="rgb(233,164,33)" fg:x="10184" fg:w="102"/><text x="36.8462%" y="639.50"></text></g><g><title>[unknown] (66 samples, 0.24%)</title><rect x="36.7256%" y="613" width="0.2372%" height="15" fill="rgb(250,217,43)" fg:x="10220" fg:w="66"/><text x="36.9756%" y="623.50"></text></g><g><title>[unknown] (48 samples, 0.17%)</title><rect x="36.7903%" y="597" width="0.1725%" height="15" fill="rgb(232,154,50)" fg:x="10238" fg:w="48"/><text x="37.0403%" y="607.50"></text></g><g><title>[unknown] (36 samples, 0.13%)</title><rect x="36.8334%" y="581" width="0.1294%" height="15" fill="rgb(227,190,8)" fg:x="10250" fg:w="36"/><text x="37.0834%" y="591.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="36.8693%" y="565" width="0.0934%" height="15" fill="rgb(209,217,32)" fg:x="10260" fg:w="26"/><text x="37.1193%" y="575.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="36.9089%" y="549" width="0.0539%" height="15" fill="rgb(243,203,50)" fg:x="10271" fg:w="15"/><text x="37.1589%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="36.9376%" y="533" width="0.0252%" height="15" fill="rgb(232,152,27)" fg:x="10279" fg:w="7"/><text x="37.1876%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,721 samples, 6.18%)</title><rect x="30.9365%" y="933" width="6.1844%" height="15" fill="rgb(240,34,29)" fg:x="8609" fg:w="1721"/><text x="31.1865%" y="943.50">&lt;core::f..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,721 samples, 6.18%)</title><rect x="30.9365%" y="917" width="6.1844%" height="15" fill="rgb(215,185,52)" fg:x="8609" fg:w="1721"/><text x="31.1865%" y="927.50">async_ex..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,721 samples, 6.18%)</title><rect x="30.9365%" y="901" width="6.1844%" height="15" fill="rgb(240,89,49)" fg:x="8609" fg:w="1721"/><text x="31.1865%" y="911.50">&lt;core::f..</text></g><g><title>async_executor::Executor::run::{{closure}} (1,721 samples, 6.18%)</title><rect x="30.9365%" y="885" width="6.1844%" height="15" fill="rgb(225,12,52)" fg:x="8609" fg:w="1721"/><text x="31.1865%" y="895.50">async_ex..</text></g><g><title>async_executor::Runner::new (495 samples, 1.78%)</title><rect x="35.3421%" y="869" width="1.7788%" height="15" fill="rgb(239,128,45)" fg:x="9835" fg:w="495"/><text x="35.5921%" y="879.50">a..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (471 samples, 1.69%)</title><rect x="35.4283%" y="853" width="1.6925%" height="15" fill="rgb(211,78,47)" fg:x="9859" fg:w="471"/><text x="35.6783%" y="863.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (310 samples, 1.11%)</title><rect x="36.0069%" y="837" width="1.1140%" height="15" fill="rgb(232,31,21)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (310 samples, 1.11%)</title><rect x="36.0069%" y="821" width="1.1140%" height="15" fill="rgb(222,168,14)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (310 samples, 1.11%)</title><rect x="36.0069%" y="805" width="1.1140%" height="15" fill="rgb(209,128,24)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (310 samples, 1.11%)</title><rect x="36.0069%" y="789" width="1.1140%" height="15" fill="rgb(249,35,13)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (310 samples, 1.11%)</title><rect x="36.0069%" y="773" width="1.1140%" height="15" fill="rgb(218,7,2)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (310 samples, 1.11%)</title><rect x="36.0069%" y="757" width="1.1140%" height="15" fill="rgb(238,107,27)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (310 samples, 1.11%)</title><rect x="36.0069%" y="741" width="1.1140%" height="15" fill="rgb(217,88,38)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="751.50"></text></g><g><title>alloc::alloc::alloc (310 samples, 1.11%)</title><rect x="36.0069%" y="725" width="1.1140%" height="15" fill="rgb(230,207,0)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="735.50"></text></g><g><title>malloc (310 samples, 1.11%)</title><rect x="36.0069%" y="709" width="1.1140%" height="15" fill="rgb(249,64,54)" fg:x="10020" fg:w="310"/><text x="36.2569%" y="719.50"></text></g><g><title>__lll_lock_wake_private (40 samples, 0.14%)</title><rect x="36.9771%" y="693" width="0.1437%" height="15" fill="rgb(231,7,11)" fg:x="10290" fg:w="40"/><text x="37.2271%" y="703.50"></text></g><g><title>[unknown] (40 samples, 0.14%)</title><rect x="36.9771%" y="677" width="0.1437%" height="15" fill="rgb(205,149,21)" fg:x="10290" fg:w="40"/><text x="37.2271%" y="687.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="36.9807%" y="661" width="0.1401%" height="15" fill="rgb(215,126,34)" fg:x="10291" fg:w="39"/><text x="37.2307%" y="671.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="36.9807%" y="645" width="0.1401%" height="15" fill="rgb(241,132,45)" fg:x="10291" fg:w="39"/><text x="37.2307%" y="655.50"></text></g><g><title>[unknown] (34 samples, 0.12%)</title><rect x="36.9987%" y="629" width="0.1222%" height="15" fill="rgb(252,69,32)" fg:x="10296" fg:w="34"/><text x="37.2487%" y="639.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="37.0275%" y="613" width="0.0934%" height="15" fill="rgb(232,204,19)" fg:x="10304" fg:w="26"/><text x="37.2775%" y="623.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="37.0670%" y="597" width="0.0539%" height="15" fill="rgb(249,15,47)" fg:x="10315" fg:w="15"/><text x="37.3170%" y="607.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="37.0742%" y="581" width="0.0467%" height="15" fill="rgb(209,227,23)" fg:x="10317" fg:w="13"/><text x="37.3242%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="37.0957%" y="565" width="0.0252%" height="15" fill="rgb(248,92,24)" fg:x="10323" fg:w="7"/><text x="37.3457%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="37.1101%" y="549" width="0.0108%" height="15" fill="rgb(247,59,2)" fg:x="10327" fg:w="3"/><text x="37.3601%" y="559.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (4 samples, 0.01%)</title><rect x="37.1353%" y="853" width="0.0144%" height="15" fill="rgb(221,30,5)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (4 samples, 0.01%)</title><rect x="37.1353%" y="837" width="0.0144%" height="15" fill="rgb(208,108,53)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="847.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (4 samples, 0.01%)</title><rect x="37.1353%" y="821" width="0.0144%" height="15" fill="rgb(211,183,26)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (4 samples, 0.01%)</title><rect x="37.1353%" y="805" width="0.0144%" height="15" fill="rgb(232,132,4)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.01%)</title><rect x="37.1353%" y="789" width="0.0144%" height="15" fill="rgb(253,128,37)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.01%)</title><rect x="37.1353%" y="773" width="0.0144%" height="15" fill="rgb(221,58,24)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="37.1353%" y="757" width="0.0144%" height="15" fill="rgb(230,54,45)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="37.1353%" y="741" width="0.0144%" height="15" fill="rgb(254,21,18)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="751.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="37.1353%" y="725" width="0.0144%" height="15" fill="rgb(221,108,0)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="735.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="37.1353%" y="709" width="0.0144%" height="15" fill="rgb(206,95,1)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="719.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="37.1353%" y="693" width="0.0144%" height="15" fill="rgb(237,52,5)" fg:x="10334" fg:w="4"/><text x="37.3853%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (9 samples, 0.03%)</title><rect x="37.1209%" y="901" width="0.0323%" height="15" fill="rgb(218,150,34)" fg:x="10330" fg:w="9"/><text x="37.3709%" y="911.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (9 samples, 0.03%)</title><rect x="37.1209%" y="885" width="0.0323%" height="15" fill="rgb(235,194,28)" fg:x="10330" fg:w="9"/><text x="37.3709%" y="895.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (5 samples, 0.02%)</title><rect x="37.1353%" y="869" width="0.0180%" height="15" fill="rgb(245,92,18)" fg:x="10334" fg:w="5"/><text x="37.3853%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (23 samples, 0.08%)</title><rect x="37.1532%" y="885" width="0.0827%" height="15" fill="rgb(253,203,53)" fg:x="10339" fg:w="23"/><text x="37.4032%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (20 samples, 0.07%)</title><rect x="37.1640%" y="869" width="0.0719%" height="15" fill="rgb(249,185,47)" fg:x="10342" fg:w="20"/><text x="37.4140%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (20 samples, 0.07%)</title><rect x="37.1640%" y="853" width="0.0719%" height="15" fill="rgb(252,194,52)" fg:x="10342" fg:w="20"/><text x="37.4140%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (19 samples, 0.07%)</title><rect x="37.1676%" y="837" width="0.0683%" height="15" fill="rgb(210,53,36)" fg:x="10343" fg:w="19"/><text x="37.4176%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (19 samples, 0.07%)</title><rect x="37.1676%" y="821" width="0.0683%" height="15" fill="rgb(237,37,25)" fg:x="10343" fg:w="19"/><text x="37.4176%" y="831.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (9 samples, 0.03%)</title><rect x="37.2035%" y="805" width="0.0323%" height="15" fill="rgb(242,116,27)" fg:x="10353" fg:w="9"/><text x="37.4535%" y="815.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (9 samples, 0.03%)</title><rect x="37.2035%" y="789" width="0.0323%" height="15" fill="rgb(213,185,26)" fg:x="10353" fg:w="9"/><text x="37.4535%" y="799.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (9 samples, 0.03%)</title><rect x="37.2035%" y="773" width="0.0323%" height="15" fill="rgb(225,204,8)" fg:x="10353" fg:w="9"/><text x="37.4535%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (9 samples, 0.03%)</title><rect x="37.2035%" y="757" width="0.0323%" height="15" fill="rgb(254,111,37)" fg:x="10353" fg:w="9"/><text x="37.4535%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (9 samples, 0.03%)</title><rect x="37.2035%" y="741" width="0.0323%" height="15" fill="rgb(242,35,9)" fg:x="10353" fg:w="9"/><text x="37.4535%" y="751.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (4 samples, 0.01%)</title><rect x="37.2359%" y="853" width="0.0144%" height="15" fill="rgb(232,138,49)" fg:x="10362" fg:w="4"/><text x="37.4859%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (4 samples, 0.01%)</title><rect x="37.2359%" y="837" width="0.0144%" height="15" fill="rgb(247,56,4)" fg:x="10362" fg:w="4"/><text x="37.4859%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (30 samples, 0.11%)</title><rect x="37.2359%" y="885" width="0.1078%" height="15" fill="rgb(226,179,17)" fg:x="10362" fg:w="30"/><text x="37.4859%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (30 samples, 0.11%)</title><rect x="37.2359%" y="869" width="0.1078%" height="15" fill="rgb(216,163,45)" fg:x="10362" fg:w="30"/><text x="37.4859%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (26 samples, 0.09%)</title><rect x="37.2503%" y="853" width="0.0934%" height="15" fill="rgb(211,157,3)" fg:x="10366" fg:w="26"/><text x="37.5003%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (25 samples, 0.09%)</title><rect x="37.2538%" y="837" width="0.0898%" height="15" fill="rgb(234,44,20)" fg:x="10367" fg:w="25"/><text x="37.5038%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (25 samples, 0.09%)</title><rect x="37.2538%" y="821" width="0.0898%" height="15" fill="rgb(254,138,23)" fg:x="10367" fg:w="25"/><text x="37.5038%" y="831.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (14 samples, 0.05%)</title><rect x="37.2934%" y="805" width="0.0503%" height="15" fill="rgb(206,119,39)" fg:x="10378" fg:w="14"/><text x="37.5434%" y="815.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (12 samples, 0.04%)</title><rect x="37.3006%" y="789" width="0.0431%" height="15" fill="rgb(231,105,52)" fg:x="10380" fg:w="12"/><text x="37.5506%" y="799.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (12 samples, 0.04%)</title><rect x="37.3006%" y="773" width="0.0431%" height="15" fill="rgb(250,20,5)" fg:x="10380" fg:w="12"/><text x="37.5506%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (12 samples, 0.04%)</title><rect x="37.3006%" y="757" width="0.0431%" height="15" fill="rgb(215,198,30)" fg:x="10380" fg:w="12"/><text x="37.5506%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (7 samples, 0.03%)</title><rect x="37.3185%" y="741" width="0.0252%" height="15" fill="rgb(246,142,8)" fg:x="10385" fg:w="7"/><text x="37.5685%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (7 samples, 0.03%)</title><rect x="37.4012%" y="853" width="0.0252%" height="15" fill="rgb(243,26,38)" fg:x="10408" fg:w="7"/><text x="37.6512%" y="863.50"></text></g><g><title>core::ptr::read (7 samples, 0.03%)</title><rect x="37.4012%" y="837" width="0.0252%" height="15" fill="rgb(205,133,28)" fg:x="10408" fg:w="7"/><text x="37.6512%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,814 samples, 6.52%)</title><rect x="30.9185%" y="1237" width="6.5186%" height="15" fill="rgb(212,34,0)" fg:x="8604" fg:w="1814"/><text x="31.1685%" y="1247.50">std::sys_..</text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1221" width="6.5006%" height="15" fill="rgb(251,226,22)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1231.50">zenoh_tra..</text></g><g><title>async_std::task::block_on::block_on (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1205" width="6.5006%" height="15" fill="rgb(252,119,9)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1215.50">async_std..</text></g><g><title>async_std::task::builder::Builder::blocking (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1189" width="6.5006%" height="15" fill="rgb(213,150,50)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1199.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1173" width="6.5006%" height="15" fill="rgb(212,24,39)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1183.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1157" width="6.5006%" height="15" fill="rgb(213,46,39)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1167.50">std::thre..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1141" width="6.5006%" height="15" fill="rgb(239,106,12)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1151.50">async_std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1125" width="6.5006%" height="15" fill="rgb(249,229,21)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1135.50">async_std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1109" width="6.5006%" height="15" fill="rgb(212,158,3)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1119.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1093" width="6.5006%" height="15" fill="rgb(253,26,48)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1103.50">std::thre..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1077" width="6.5006%" height="15" fill="rgb(238,178,20)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1087.50">async_std..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1061" width="6.5006%" height="15" fill="rgb(208,86,15)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1071.50">async_std..</text></g><g><title>async_global_executor::executor::block_on (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1045" width="6.5006%" height="15" fill="rgb(239,42,53)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1055.50">async_glo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1029" width="6.5006%" height="15" fill="rgb(245,226,8)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1039.50">std::thre..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,809 samples, 6.50%)</title><rect x="30.9365%" y="1013" width="6.5006%" height="15" fill="rgb(216,176,32)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1023.50">std::thre..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (1,809 samples, 6.50%)</title><rect x="30.9365%" y="997" width="6.5006%" height="15" fill="rgb(231,186,21)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="1007.50">async_glo..</text></g><g><title>async_global_executor::reactor::block_on (1,809 samples, 6.50%)</title><rect x="30.9365%" y="981" width="6.5006%" height="15" fill="rgb(205,95,49)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="991.50">async_glo..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,809 samples, 6.50%)</title><rect x="30.9365%" y="965" width="6.5006%" height="15" fill="rgb(217,145,8)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="975.50">async_glo..</text></g><g><title>async_io::driver::block_on (1,809 samples, 6.50%)</title><rect x="30.9365%" y="949" width="6.5006%" height="15" fill="rgb(239,144,48)" fg:x="8609" fg:w="1809"/><text x="31.1865%" y="959.50">async_io:..</text></g><g><title>async_io::reactor::ReactorLock::react (88 samples, 0.32%)</title><rect x="37.1209%" y="933" width="0.3162%" height="15" fill="rgb(214,189,23)" fg:x="10330" fg:w="88"/><text x="37.3709%" y="943.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (88 samples, 0.32%)</title><rect x="37.1209%" y="917" width="0.3162%" height="15" fill="rgb(229,157,17)" fg:x="10330" fg:w="88"/><text x="37.3709%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (79 samples, 0.28%)</title><rect x="37.1532%" y="901" width="0.2839%" height="15" fill="rgb(230,5,48)" fg:x="10339" fg:w="79"/><text x="37.4032%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (26 samples, 0.09%)</title><rect x="37.3437%" y="885" width="0.0934%" height="15" fill="rgb(224,156,48)" fg:x="10392" fg:w="26"/><text x="37.5937%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (26 samples, 0.09%)</title><rect x="37.3437%" y="869" width="0.0934%" height="15" fill="rgb(223,14,29)" fg:x="10392" fg:w="26"/><text x="37.5937%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.01%)</title><rect x="37.4263%" y="853" width="0.0108%" height="15" fill="rgb(229,96,36)" fg:x="10415" fg:w="3"/><text x="37.6763%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="37.4263%" y="837" width="0.0108%" height="15" fill="rgb(231,102,53)" fg:x="10415" fg:w="3"/><text x="37.6763%" y="847.50"></text></g><g><title>async_io::reactor::Reactor::get (5 samples, 0.02%)</title><rect x="37.5090%" y="581" width="0.0180%" height="15" fill="rgb(210,77,38)" fg:x="10438" fg:w="5"/><text x="37.7590%" y="591.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="37.5090%" y="565" width="0.0180%" height="15" fill="rgb(235,131,6)" fg:x="10438" fg:w="5"/><text x="37.7590%" y="575.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (5 samples, 0.02%)</title><rect x="37.5090%" y="549" width="0.0180%" height="15" fill="rgb(252,55,38)" fg:x="10438" fg:w="5"/><text x="37.7590%" y="559.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5 samples, 0.02%)</title><rect x="37.5090%" y="533" width="0.0180%" height="15" fill="rgb(246,38,14)" fg:x="10438" fg:w="5"/><text x="37.7590%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5 samples, 0.02%)</title><rect x="37.5090%" y="517" width="0.0180%" height="15" fill="rgb(242,27,5)" fg:x="10438" fg:w="5"/><text x="37.7590%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (5 samples, 0.02%)</title><rect x="37.5090%" y="501" width="0.0180%" height="15" fill="rgb(228,65,35)" fg:x="10438" fg:w="5"/><text x="37.7590%" y="511.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (5 samples, 0.02%)</title><rect x="37.5090%" y="485" width="0.0180%" height="15" fill="rgb(245,93,11)" fg:x="10438" fg:w="5"/><text x="37.7590%" y="495.50"></text></g><g><title>async_io::reactor::Reactor::notify (7 samples, 0.03%)</title><rect x="37.5305%" y="565" width="0.0252%" height="15" fill="rgb(213,1,31)" fg:x="10444" fg:w="7"/><text x="37.7805%" y="575.50"></text></g><g><title>polling::Poller::notify (7 samples, 0.03%)</title><rect x="37.5305%" y="549" width="0.0252%" height="15" fill="rgb(237,205,14)" fg:x="10444" fg:w="7"/><text x="37.7805%" y="559.50"></text></g><g><title>polling::epoll::Poller::notify (7 samples, 0.03%)</title><rect x="37.5305%" y="533" width="0.0252%" height="15" fill="rgb(232,118,45)" fg:x="10444" fg:w="7"/><text x="37.7805%" y="543.50"></text></g><g><title>write (7 samples, 0.03%)</title><rect x="37.5305%" y="517" width="0.0252%" height="15" fill="rgb(218,5,6)" fg:x="10444" fg:w="7"/><text x="37.7805%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="37.5341%" y="501" width="0.0216%" height="15" fill="rgb(251,87,51)" fg:x="10445" fg:w="6"/><text x="37.7841%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="37.5341%" y="485" width="0.0216%" height="15" fill="rgb(207,225,20)" fg:x="10445" fg:w="6"/><text x="37.7841%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="37.5341%" y="469" width="0.0216%" height="15" fill="rgb(222,78,54)" fg:x="10445" fg:w="6"/><text x="37.7841%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="37.5341%" y="453" width="0.0216%" height="15" fill="rgb(232,85,16)" fg:x="10445" fg:w="6"/><text x="37.7841%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="37.5377%" y="437" width="0.0180%" height="15" fill="rgb(244,25,33)" fg:x="10446" fg:w="5"/><text x="37.7877%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="37.5449%" y="421" width="0.0108%" height="15" fill="rgb(233,24,36)" fg:x="10448" fg:w="3"/><text x="37.7949%" y="431.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (12 samples, 0.04%)</title><rect x="37.5270%" y="581" width="0.0431%" height="15" fill="rgb(253,49,54)" fg:x="10443" fg:w="12"/><text x="37.7770%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.01%)</title><rect x="37.5593%" y="565" width="0.0108%" height="15" fill="rgb(245,12,22)" fg:x="10452" fg:w="3"/><text x="37.8093%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.01%)</title><rect x="37.5593%" y="549" width="0.0108%" height="15" fill="rgb(253,141,28)" fg:x="10452" fg:w="3"/><text x="37.8093%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (9 samples, 0.03%)</title><rect x="37.5701%" y="581" width="0.0323%" height="15" fill="rgb(225,207,27)" fg:x="10455" fg:w="9"/><text x="37.8201%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (8 samples, 0.03%)</title><rect x="37.5737%" y="565" width="0.0287%" height="15" fill="rgb(220,84,2)" fg:x="10456" fg:w="8"/><text x="37.8237%" y="575.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (6 samples, 0.02%)</title><rect x="37.5809%" y="549" width="0.0216%" height="15" fill="rgb(224,37,37)" fg:x="10458" fg:w="6"/><text x="37.8309%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.01%)</title><rect x="37.6060%" y="581" width="0.0144%" height="15" fill="rgb(220,143,18)" fg:x="10465" fg:w="4"/><text x="37.8560%" y="591.50"></text></g><g><title>core::mem::replace (4 samples, 0.01%)</title><rect x="37.6060%" y="565" width="0.0144%" height="15" fill="rgb(210,88,33)" fg:x="10465" fg:w="4"/><text x="37.8560%" y="575.50"></text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="37.6060%" y="549" width="0.0144%" height="15" fill="rgb(219,87,51)" fg:x="10465" fg:w="4"/><text x="37.8560%" y="559.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (60 samples, 0.22%)</title><rect x="37.4766%" y="613" width="0.2156%" height="15" fill="rgb(211,7,35)" fg:x="10429" fg:w="60"/><text x="37.7266%" y="623.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (56 samples, 0.20%)</title><rect x="37.4910%" y="597" width="0.2012%" height="15" fill="rgb(232,77,2)" fg:x="10433" fg:w="56"/><text x="37.7410%" y="607.50"></text></g><g><title>std::time::Instant::now (20 samples, 0.07%)</title><rect x="37.6204%" y="581" width="0.0719%" height="15" fill="rgb(249,94,25)" fg:x="10469" fg:w="20"/><text x="37.8704%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (18 samples, 0.06%)</title><rect x="37.6276%" y="565" width="0.0647%" height="15" fill="rgb(215,112,2)" fg:x="10471" fg:w="18"/><text x="37.8776%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (18 samples, 0.06%)</title><rect x="37.6276%" y="549" width="0.0647%" height="15" fill="rgb(226,115,48)" fg:x="10471" fg:w="18"/><text x="37.8776%" y="559.50"></text></g><g><title>clock_gettime (17 samples, 0.06%)</title><rect x="37.6312%" y="533" width="0.0611%" height="15" fill="rgb(249,196,10)" fg:x="10472" fg:w="17"/><text x="37.8812%" y="543.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.05%)</title><rect x="37.6419%" y="517" width="0.0503%" height="15" fill="rgb(237,109,14)" fg:x="10475" fg:w="14"/><text x="37.8919%" y="527.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="37.7138%" y="357" width="0.0108%" height="15" fill="rgb(217,103,53)" fg:x="10495" fg:w="3"/><text x="37.9638%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.10%)</title><rect x="37.7138%" y="453" width="0.1042%" height="15" fill="rgb(244,137,9)" fg:x="10495" fg:w="29"/><text x="37.9638%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.10%)</title><rect x="37.7138%" y="437" width="0.1042%" height="15" fill="rgb(227,201,3)" fg:x="10495" fg:w="29"/><text x="37.9638%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.10%)</title><rect x="37.7138%" y="421" width="0.1042%" height="15" fill="rgb(243,94,6)" fg:x="10495" fg:w="29"/><text x="37.9638%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.10%)</title><rect x="37.7138%" y="405" width="0.1042%" height="15" fill="rgb(235,118,5)" fg:x="10495" fg:w="29"/><text x="37.9638%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.10%)</title><rect x="37.7138%" y="389" width="0.1042%" height="15" fill="rgb(247,10,30)" fg:x="10495" fg:w="29"/><text x="37.9638%" y="399.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.10%)</title><rect x="37.7138%" y="373" width="0.1042%" height="15" fill="rgb(205,26,28)" fg:x="10495" fg:w="29"/><text x="37.9638%" y="383.50"></text></g><g><title>malloc (25 samples, 0.09%)</title><rect x="37.7282%" y="357" width="0.0898%" height="15" fill="rgb(206,99,35)" fg:x="10499" fg:w="25"/><text x="37.9782%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (30 samples, 0.11%)</title><rect x="37.7138%" y="565" width="0.1078%" height="15" fill="rgb(238,130,40)" fg:x="10495" fg:w="30"/><text x="37.9638%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (30 samples, 0.11%)</title><rect x="37.7138%" y="549" width="0.1078%" height="15" fill="rgb(224,126,31)" fg:x="10495" fg:w="30"/><text x="37.9638%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (30 samples, 0.11%)</title><rect x="37.7138%" y="533" width="0.1078%" height="15" fill="rgb(254,105,17)" fg:x="10495" fg:w="30"/><text x="37.9638%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (30 samples, 0.11%)</title><rect x="37.7138%" y="517" width="0.1078%" height="15" fill="rgb(216,87,36)" fg:x="10495" fg:w="30"/><text x="37.9638%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.11%)</title><rect x="37.7138%" y="501" width="0.1078%" height="15" fill="rgb(240,21,12)" fg:x="10495" fg:w="30"/><text x="37.9638%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.11%)</title><rect x="37.7138%" y="485" width="0.1078%" height="15" fill="rgb(245,192,34)" fg:x="10495" fg:w="30"/><text x="37.9638%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.11%)</title><rect x="37.7138%" y="469" width="0.1078%" height="15" fill="rgb(226,100,49)" fg:x="10495" fg:w="30"/><text x="37.9638%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (35 samples, 0.13%)</title><rect x="37.6994%" y="597" width="0.1258%" height="15" fill="rgb(245,188,27)" fg:x="10491" fg:w="35"/><text x="37.9494%" y="607.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (31 samples, 0.11%)</title><rect x="37.7138%" y="581" width="0.1114%" height="15" fill="rgb(212,170,8)" fg:x="10495" fg:w="31"/><text x="37.9638%" y="591.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.38%)</title><rect x="37.4766%" y="629" width="0.3845%" height="15" fill="rgb(217,113,29)" fg:x="10429" fg:w="107"/><text x="37.7266%" y="639.50"></text></g><g><title>std::io::error::Error::new (46 samples, 0.17%)</title><rect x="37.6958%" y="613" width="0.1653%" height="15" fill="rgb(237,30,3)" fg:x="10490" fg:w="46"/><text x="37.9458%" y="623.50"></text></g><g><title>std::io::error::Error::_new (10 samples, 0.04%)</title><rect x="37.8252%" y="597" width="0.0359%" height="15" fill="rgb(227,19,28)" fg:x="10526" fg:w="10"/><text x="38.0752%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="37.8468%" y="581" width="0.0144%" height="15" fill="rgb(239,172,45)" fg:x="10532" fg:w="4"/><text x="38.0968%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="37.8468%" y="565" width="0.0144%" height="15" fill="rgb(254,55,39)" fg:x="10532" fg:w="4"/><text x="38.0968%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="37.8468%" y="549" width="0.0144%" height="15" fill="rgb(249,208,12)" fg:x="10532" fg:w="4"/><text x="38.0968%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="37.8468%" y="533" width="0.0144%" height="15" fill="rgb(240,52,13)" fg:x="10532" fg:w="4"/><text x="38.0968%" y="543.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="37.8468%" y="517" width="0.0144%" height="15" fill="rgb(252,149,13)" fg:x="10532" fg:w="4"/><text x="38.0968%" y="527.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="37.8468%" y="501" width="0.0144%" height="15" fill="rgb(232,81,48)" fg:x="10532" fg:w="4"/><text x="38.0968%" y="511.50"></text></g><g><title>async_std::utils::timer_after (19 samples, 0.07%)</title><rect x="37.8611%" y="629" width="0.0683%" height="15" fill="rgb(222,144,2)" fg:x="10536" fg:w="19"/><text x="38.1111%" y="639.50"></text></g><g><title>async_io::Timer::after (11 samples, 0.04%)</title><rect x="37.8899%" y="613" width="0.0395%" height="15" fill="rgb(216,81,32)" fg:x="10544" fg:w="11"/><text x="38.1399%" y="623.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.03%)</title><rect x="37.8971%" y="597" width="0.0323%" height="15" fill="rgb(244,78,51)" fg:x="10546" fg:w="9"/><text x="38.1471%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (9 samples, 0.03%)</title><rect x="37.8971%" y="581" width="0.0323%" height="15" fill="rgb(217,66,21)" fg:x="10546" fg:w="9"/><text x="38.1471%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (9 samples, 0.03%)</title><rect x="37.8971%" y="565" width="0.0323%" height="15" fill="rgb(247,101,42)" fg:x="10546" fg:w="9"/><text x="38.1471%" y="575.50"></text></g><g><title>clock_gettime (9 samples, 0.03%)</title><rect x="37.8971%" y="549" width="0.0323%" height="15" fill="rgb(227,81,39)" fg:x="10546" fg:w="9"/><text x="38.1471%" y="559.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.01%)</title><rect x="37.9186%" y="533" width="0.0108%" height="15" fill="rgb(220,223,44)" fg:x="10552" fg:w="3"/><text x="38.1686%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (133 samples, 0.48%)</title><rect x="37.4623%" y="661" width="0.4779%" height="15" fill="rgb(205,218,2)" fg:x="10425" fg:w="133"/><text x="37.7123%" y="671.50"></text></g><g><title>async_std::io::timeout::timeout::{{closure}} (133 samples, 0.48%)</title><rect x="37.4623%" y="645" width="0.4779%" height="15" fill="rgb(212,207,28)" fg:x="10425" fg:w="133"/><text x="37.7123%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::io::timeout::Timeout&lt;core::future::from_generator::GenFuture&lt;async_std::future::pending::pending&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;::{{closure}}&gt;,()&gt;&gt; (3 samples, 0.01%)</title><rect x="37.9294%" y="629" width="0.0108%" height="15" fill="rgb(224,12,41)" fg:x="10555" fg:w="3"/><text x="38.1794%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (3 samples, 0.01%)</title><rect x="37.9294%" y="613" width="0.0108%" height="15" fill="rgb(216,118,12)" fg:x="10555" fg:w="3"/><text x="38.1794%" y="623.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="37.9294%" y="597" width="0.0108%" height="15" fill="rgb(252,97,46)" fg:x="10555" fg:w="3"/><text x="38.1794%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.01%)</title><rect x="37.9294%" y="581" width="0.0108%" height="15" fill="rgb(244,206,19)" fg:x="10555" fg:w="3"/><text x="38.1794%" y="591.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="37.9294%" y="565" width="0.0108%" height="15" fill="rgb(231,84,31)" fg:x="10555" fg:w="3"/><text x="38.1794%" y="575.50"></text></g><g><title>core::ptr::read (3 samples, 0.01%)</title><rect x="37.9294%" y="549" width="0.0108%" height="15" fill="rgb(244,133,0)" fg:x="10555" fg:w="3"/><text x="38.1794%" y="559.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.01%)</title><rect x="37.9438%" y="533" width="0.0108%" height="15" fill="rgb(223,15,50)" fg:x="10559" fg:w="3"/><text x="38.1938%" y="543.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="37.9546%" y="533" width="0.0216%" height="15" fill="rgb(250,118,49)" fg:x="10562" fg:w="6"/><text x="38.2046%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (156 samples, 0.56%)</title><rect x="37.4371%" y="693" width="0.5606%" height="15" fill="rgb(248,25,38)" fg:x="10418" fg:w="156"/><text x="37.6871%" y="703.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (156 samples, 0.56%)</title><rect x="37.4371%" y="677" width="0.5606%" height="15" fill="rgb(215,70,14)" fg:x="10418" fg:w="156"/><text x="37.6871%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (16 samples, 0.06%)</title><rect x="37.9402%" y="661" width="0.0575%" height="15" fill="rgb(215,28,15)" fg:x="10558" fg:w="16"/><text x="38.1902%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (16 samples, 0.06%)</title><rect x="37.9402%" y="645" width="0.0575%" height="15" fill="rgb(243,6,28)" fg:x="10558" fg:w="16"/><text x="38.1902%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (16 samples, 0.06%)</title><rect x="37.9402%" y="629" width="0.0575%" height="15" fill="rgb(222,130,1)" fg:x="10558" fg:w="16"/><text x="38.1902%" y="639.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (16 samples, 0.06%)</title><rect x="37.9402%" y="613" width="0.0575%" height="15" fill="rgb(236,166,44)" fg:x="10558" fg:w="16"/><text x="38.1902%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::ErrorData&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt;&gt; (16 samples, 0.06%)</title><rect x="37.9402%" y="597" width="0.0575%" height="15" fill="rgb(221,108,14)" fg:x="10558" fg:w="16"/><text x="38.1902%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt; (16 samples, 0.06%)</title><rect x="37.9402%" y="581" width="0.0575%" height="15" fill="rgb(252,3,45)" fg:x="10558" fg:w="16"/><text x="38.1902%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Custom&gt; (16 samples, 0.06%)</title><rect x="37.9402%" y="565" width="0.0575%" height="15" fill="rgb(237,68,30)" fg:x="10558" fg:w="16"/><text x="38.1902%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt; (16 samples, 0.06%)</title><rect x="37.9402%" y="549" width="0.0575%" height="15" fill="rgb(211,79,22)" fg:x="10558" fg:w="16"/><text x="38.1902%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::error::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from::StringError&gt; (6 samples, 0.02%)</title><rect x="37.9761%" y="533" width="0.0216%" height="15" fill="rgb(252,185,21)" fg:x="10568" fg:w="6"/><text x="38.2261%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.02%)</title><rect x="37.9761%" y="517" width="0.0216%" height="15" fill="rgb(225,189,26)" fg:x="10568" fg:w="6"/><text x="38.2261%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="37.9761%" y="501" width="0.0216%" height="15" fill="rgb(241,30,40)" fg:x="10568" fg:w="6"/><text x="38.2261%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="37.9761%" y="485" width="0.0216%" height="15" fill="rgb(235,215,44)" fg:x="10568" fg:w="6"/><text x="38.2261%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="37.9761%" y="469" width="0.0216%" height="15" fill="rgb(205,8,29)" fg:x="10568" fg:w="6"/><text x="38.2261%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.01%)</title><rect x="37.9833%" y="453" width="0.0144%" height="15" fill="rgb(241,137,42)" fg:x="10570" fg:w="4"/><text x="38.2333%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="38.0085%" y="613" width="0.0144%" height="15" fill="rgb(237,155,2)" fg:x="10577" fg:w="4"/><text x="38.2585%" y="623.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::is_empty (12 samples, 0.04%)</title><rect x="37.9977%" y="677" width="0.0431%" height="15" fill="rgb(245,29,42)" fg:x="10574" fg:w="12"/><text x="38.2477%" y="687.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (12 samples, 0.04%)</title><rect x="37.9977%" y="661" width="0.0431%" height="15" fill="rgb(234,101,35)" fg:x="10574" fg:w="12"/><text x="38.2477%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (9 samples, 0.03%)</title><rect x="38.0085%" y="645" width="0.0323%" height="15" fill="rgb(228,64,37)" fg:x="10577" fg:w="9"/><text x="38.2585%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.03%)</title><rect x="38.0085%" y="629" width="0.0323%" height="15" fill="rgb(217,214,36)" fg:x="10577" fg:w="9"/><text x="38.2585%" y="639.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (5 samples, 0.02%)</title><rect x="38.0229%" y="613" width="0.0180%" height="15" fill="rgb(243,70,3)" fg:x="10581" fg:w="5"/><text x="38.2729%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (5 samples, 0.02%)</title><rect x="38.0229%" y="597" width="0.0180%" height="15" fill="rgb(253,158,52)" fg:x="10581" fg:w="5"/><text x="38.2729%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (171 samples, 0.61%)</title><rect x="37.4371%" y="725" width="0.6145%" height="15" fill="rgb(234,111,54)" fg:x="10418" fg:w="171"/><text x="37.6871%" y="735.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (171 samples, 0.61%)</title><rect x="37.4371%" y="709" width="0.6145%" height="15" fill="rgb(217,70,32)" fg:x="10418" fg:w="171"/><text x="37.6871%" y="719.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (15 samples, 0.05%)</title><rect x="37.9977%" y="693" width="0.0539%" height="15" fill="rgb(234,18,33)" fg:x="10574" fg:w="15"/><text x="38.2477%" y="703.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::write_len (3 samples, 0.01%)</title><rect x="38.0408%" y="677" width="0.0108%" height="15" fill="rgb(234,12,49)" fg:x="10586" fg:w="3"/><text x="38.2908%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.01%)</title><rect x="38.0408%" y="661" width="0.0108%" height="15" fill="rgb(236,10,21)" fg:x="10586" fg:w="3"/><text x="38.2908%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.01%)</title><rect x="38.0408%" y="645" width="0.0108%" height="15" fill="rgb(248,182,45)" fg:x="10586" fg:w="3"/><text x="38.2908%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.04%)</title><rect x="38.1019%" y="709" width="0.0395%" height="15" fill="rgb(217,95,36)" fg:x="10603" fg:w="11"/><text x="38.3519%" y="719.50"></text></g><g><title>core::mem::replace (11 samples, 0.04%)</title><rect x="38.1019%" y="693" width="0.0395%" height="15" fill="rgb(212,110,31)" fg:x="10603" fg:w="11"/><text x="38.3519%" y="703.50"></text></g><g><title>core::ptr::read (11 samples, 0.04%)</title><rect x="38.1019%" y="677" width="0.0395%" height="15" fill="rgb(206,32,53)" fg:x="10603" fg:w="11"/><text x="38.3519%" y="687.50"></text></g><g><title>core::mem::drop (4 samples, 0.01%)</title><rect x="38.1414%" y="709" width="0.0144%" height="15" fill="rgb(246,141,37)" fg:x="10614" fg:w="4"/><text x="38.3914%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (4 samples, 0.01%)</title><rect x="38.1414%" y="693" width="0.0144%" height="15" fill="rgb(219,16,7)" fg:x="10614" fg:w="4"/><text x="38.3914%" y="703.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="38.1414%" y="677" width="0.0144%" height="15" fill="rgb(230,205,45)" fg:x="10614" fg:w="4"/><text x="38.3914%" y="687.50"></text></g><g><title>event_listener::Inner::lock (7 samples, 0.03%)</title><rect x="38.1630%" y="709" width="0.0252%" height="15" fill="rgb(231,43,49)" fg:x="10620" fg:w="7"/><text x="38.4130%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.03%)</title><rect x="38.1630%" y="693" width="0.0252%" height="15" fill="rgb(212,106,34)" fg:x="10620" fg:w="7"/><text x="38.4130%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (7 samples, 0.03%)</title><rect x="38.1630%" y="677" width="0.0252%" height="15" fill="rgb(206,83,17)" fg:x="10620" fg:w="7"/><text x="38.4130%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (7 samples, 0.03%)</title><rect x="38.1630%" y="661" width="0.0252%" height="15" fill="rgb(244,154,49)" fg:x="10620" fg:w="7"/><text x="38.4130%" y="671.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (48 samples, 0.17%)</title><rect x="38.0516%" y="725" width="0.1725%" height="15" fill="rgb(244,149,49)" fg:x="10589" fg:w="48"/><text x="38.3016%" y="735.50"></text></g><g><title>event_listener::List::remove (10 samples, 0.04%)</title><rect x="38.1882%" y="709" width="0.0359%" height="15" fill="rgb(227,134,18)" fg:x="10627" fg:w="10"/><text x="38.4382%" y="719.50"></text></g><g><title>event_listener::State::is_notified (4 samples, 0.01%)</title><rect x="38.2097%" y="693" width="0.0144%" height="15" fill="rgb(237,116,36)" fg:x="10633" fg:w="4"/><text x="38.4597%" y="703.50"></text></g><g><title>zenoh_sync::condition::Condition::waiter (3 samples, 0.01%)</title><rect x="38.2241%" y="725" width="0.0108%" height="15" fill="rgb(205,129,40)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="735.50"></text></g><g><title>event_listener::Event::listen (3 samples, 0.01%)</title><rect x="38.2241%" y="709" width="0.0108%" height="15" fill="rgb(236,178,4)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="719.50"></text></g><g><title>event_listener::Event::inner (3 samples, 0.01%)</title><rect x="38.2241%" y="693" width="0.0108%" height="15" fill="rgb(251,76,53)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="38.2241%" y="677" width="0.0108%" height="15" fill="rgb(242,92,40)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="38.2241%" y="661" width="0.0108%" height="15" fill="rgb(209,45,30)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="38.2241%" y="645" width="0.0108%" height="15" fill="rgb(218,157,36)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="38.2241%" y="629" width="0.0108%" height="15" fill="rgb(222,186,16)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="38.2241%" y="613" width="0.0108%" height="15" fill="rgb(254,72,35)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="623.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="38.2241%" y="597" width="0.0108%" height="15" fill="rgb(224,25,35)" fg:x="10637" fg:w="3"/><text x="38.4741%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front_mut (3 samples, 0.01%)</title><rect x="38.2349%" y="709" width="0.0108%" height="15" fill="rgb(206,135,52)" fg:x="10640" fg:w="3"/><text x="38.4849%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get_mut (3 samples, 0.01%)</title><rect x="38.2349%" y="693" width="0.0108%" height="15" fill="rgb(229,174,47)" fg:x="10640" fg:w="3"/><text x="38.4849%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (3 samples, 0.01%)</title><rect x="38.2349%" y="677" width="0.0108%" height="15" fill="rgb(242,184,21)" fg:x="10640" fg:w="3"/><text x="38.4849%" y="687.50"></text></g><g><title>alloc::collections::vec_deque::count (3 samples, 0.01%)</title><rect x="38.2349%" y="661" width="0.0108%" height="15" fill="rgb(213,22,45)" fg:x="10640" fg:w="3"/><text x="38.4849%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (3 samples, 0.01%)</title><rect x="38.2349%" y="645" width="0.0108%" height="15" fill="rgb(237,81,54)" fg:x="10640" fg:w="3"/><text x="38.4849%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.10%)</title><rect x="38.2492%" y="645" width="0.0970%" height="15" fill="rgb(248,177,18)" fg:x="10644" fg:w="27"/><text x="38.4992%" y="655.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="1205" width="0.9846%" height="15" fill="rgb(254,31,16)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1215.50"></text></g><g><title>async_global_executor::reactor::block_on (274 samples, 0.98%)</title><rect x="37.4371%" y="1189" width="0.9846%" height="15" fill="rgb(235,20,31)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1199.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="1173" width="0.9846%" height="15" fill="rgb(240,56,43)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1183.50"></text></g><g><title>async_io::driver::block_on (274 samples, 0.98%)</title><rect x="37.4371%" y="1157" width="0.9846%" height="15" fill="rgb(237,197,51)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="1141" width="0.9846%" height="15" fill="rgb(241,162,44)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1151.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="1125" width="0.9846%" height="15" fill="rgb(224,23,20)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="1109" width="0.9846%" height="15" fill="rgb(250,109,34)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="1093" width="0.9846%" height="15" fill="rgb(214,175,50)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1103.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="1077" width="0.9846%" height="15" fill="rgb(213,182,5)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1087.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="1061" width="0.9846%" height="15" fill="rgb(209,199,19)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1071.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (274 samples, 0.98%)</title><rect x="37.4371%" y="1045" width="0.9846%" height="15" fill="rgb(236,224,42)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (274 samples, 0.98%)</title><rect x="37.4371%" y="1029" width="0.9846%" height="15" fill="rgb(246,226,29)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (274 samples, 0.98%)</title><rect x="37.4371%" y="1013" width="0.9846%" height="15" fill="rgb(227,223,11)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="997" width="0.9846%" height="15" fill="rgb(219,7,51)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="981" width="0.9846%" height="15" fill="rgb(245,167,10)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="965" width="0.9846%" height="15" fill="rgb(237,224,16)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="949" width="0.9846%" height="15" fill="rgb(226,132,13)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="959.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="933" width="0.9846%" height="15" fill="rgb(214,140,3)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="917" width="0.9846%" height="15" fill="rgb(221,177,4)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="927.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="901" width="0.9846%" height="15" fill="rgb(238,139,3)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (274 samples, 0.98%)</title><rect x="37.4371%" y="885" width="0.9846%" height="15" fill="rgb(216,17,39)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="869" width="0.9846%" height="15" fill="rgb(238,120,9)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="853" width="0.9846%" height="15" fill="rgb(244,92,53)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="837" width="0.9846%" height="15" fill="rgb(224,148,33)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="847.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="821" width="0.9846%" height="15" fill="rgb(243,6,36)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="805" width="0.9846%" height="15" fill="rgb(230,102,11)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="815.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="789" width="0.9846%" height="15" fill="rgb(234,148,36)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="799.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="773" width="0.9846%" height="15" fill="rgb(251,153,25)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (274 samples, 0.98%)</title><rect x="37.4371%" y="757" width="0.9846%" height="15" fill="rgb(215,129,8)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="767.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (274 samples, 0.98%)</title><rect x="37.4371%" y="741" width="0.9846%" height="15" fill="rgb(224,128,35)" fg:x="10418" fg:w="274"/><text x="37.6871%" y="751.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (52 samples, 0.19%)</title><rect x="38.2349%" y="725" width="0.1869%" height="15" fill="rgb(237,56,52)" fg:x="10640" fg:w="52"/><text x="38.4849%" y="735.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::is_empty (49 samples, 0.18%)</title><rect x="38.2457%" y="709" width="0.1761%" height="15" fill="rgb(234,213,19)" fg:x="10643" fg:w="49"/><text x="38.4957%" y="719.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (49 samples, 0.18%)</title><rect x="38.2457%" y="693" width="0.1761%" height="15" fill="rgb(252,82,23)" fg:x="10643" fg:w="49"/><text x="38.4957%" y="703.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (48 samples, 0.17%)</title><rect x="38.2492%" y="677" width="0.1725%" height="15" fill="rgb(254,201,21)" fg:x="10644" fg:w="48"/><text x="38.4992%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (48 samples, 0.17%)</title><rect x="38.2492%" y="661" width="0.1725%" height="15" fill="rgb(250,186,11)" fg:x="10644" fg:w="48"/><text x="38.4992%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (21 samples, 0.08%)</title><rect x="38.3463%" y="645" width="0.0755%" height="15" fill="rgb(211,174,5)" fg:x="10671" fg:w="21"/><text x="38.5963%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (21 samples, 0.08%)</title><rect x="38.3463%" y="629" width="0.0755%" height="15" fill="rgb(214,121,10)" fg:x="10671" fg:w="21"/><text x="38.5963%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="38.4217%" y="565" width="0.0108%" height="15" fill="rgb(241,66,2)" fg:x="10692" fg:w="3"/><text x="38.6717%" y="575.50"></text></g><g><title>zenoh_buffers::zslice::ZSliceBuffer::as_slice (3 samples, 0.01%)</title><rect x="38.4217%" y="549" width="0.0108%" height="15" fill="rgb(220,167,19)" fg:x="10692" fg:w="3"/><text x="38.6717%" y="559.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="1205" width="0.0144%" height="15" fill="rgb(231,54,50)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1215.50"></text></g><g><title>async_global_executor::reactor::block_on (4 samples, 0.01%)</title><rect x="38.4217%" y="1189" width="0.0144%" height="15" fill="rgb(239,217,53)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1199.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="1173" width="0.0144%" height="15" fill="rgb(248,8,0)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1183.50"></text></g><g><title>async_io::driver::block_on (4 samples, 0.01%)</title><rect x="38.4217%" y="1157" width="0.0144%" height="15" fill="rgb(229,118,37)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="1141" width="0.0144%" height="15" fill="rgb(253,223,43)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="1125" width="0.0144%" height="15" fill="rgb(211,77,36)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="1109" width="0.0144%" height="15" fill="rgb(219,3,53)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="1093" width="0.0144%" height="15" fill="rgb(244,45,42)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="1077" width="0.0144%" height="15" fill="rgb(225,95,27)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="1061" width="0.0144%" height="15" fill="rgb(207,74,8)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1071.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4 samples, 0.01%)</title><rect x="38.4217%" y="1045" width="0.0144%" height="15" fill="rgb(243,63,36)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="1029" width="0.0144%" height="15" fill="rgb(211,180,12)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="1013" width="0.0144%" height="15" fill="rgb(254,166,49)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1023.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="997" width="0.0144%" height="15" fill="rgb(205,19,0)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="981" width="0.0144%" height="15" fill="rgb(224,172,32)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4 samples, 0.01%)</title><rect x="38.4217%" y="965" width="0.0144%" height="15" fill="rgb(254,136,30)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="38.4217%" y="949" width="0.0144%" height="15" fill="rgb(246,19,35)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="38.4217%" y="933" width="0.0144%" height="15" fill="rgb(219,24,36)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="917" width="0.0144%" height="15" fill="rgb(251,55,1)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="901" width="0.0144%" height="15" fill="rgb(218,117,39)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="885" width="0.0144%" height="15" fill="rgb(248,169,11)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="895.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="869" width="0.0144%" height="15" fill="rgb(244,40,44)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="853" width="0.0144%" height="15" fill="rgb(234,62,37)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="837" width="0.0144%" height="15" fill="rgb(207,117,42)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4217%" y="821" width="0.0144%" height="15" fill="rgb(213,43,2)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="831.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (4 samples, 0.01%)</title><rect x="38.4217%" y="805" width="0.0144%" height="15" fill="rgb(244,202,51)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="815.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (4 samples, 0.01%)</title><rect x="38.4217%" y="789" width="0.0144%" height="15" fill="rgb(253,174,46)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="799.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (4 samples, 0.01%)</title><rect x="38.4217%" y="773" width="0.0144%" height="15" fill="rgb(251,23,1)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="783.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (4 samples, 0.01%)</title><rect x="38.4217%" y="757" width="0.0144%" height="15" fill="rgb(253,26,1)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="767.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declare (4 samples, 0.01%)</title><rect x="38.4217%" y="741" width="0.0144%" height="15" fill="rgb(216,89,31)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="751.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declarations (4 samples, 0.01%)</title><rect x="38.4217%" y="725" width="0.0144%" height="15" fill="rgb(209,109,5)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="735.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declaration (4 samples, 0.01%)</title><rect x="38.4217%" y="709" width="0.0144%" height="15" fill="rgb(229,63,13)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="719.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_key_expr (4 samples, 0.01%)</title><rect x="38.4217%" y="693" width="0.0144%" height="15" fill="rgb(238,137,54)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="703.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_string (4 samples, 0.01%)</title><rect x="38.4217%" y="677" width="0.0144%" height="15" fill="rgb(228,1,9)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="687.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (4 samples, 0.01%)</title><rect x="38.4217%" y="661" width="0.0144%" height="15" fill="rgb(249,120,48)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="671.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;u8&gt;,R&gt;&gt;::read (4 samples, 0.01%)</title><rect x="38.4217%" y="645" width="0.0144%" height="15" fill="rgb(209,72,36)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="655.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_exact (4 samples, 0.01%)</title><rect x="38.4217%" y="629" width="0.0144%" height="15" fill="rgb(247,98,49)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="639.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::copy_bytes (4 samples, 0.01%)</title><rect x="38.4217%" y="613" width="0.0144%" height="15" fill="rgb(233,75,36)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="623.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::as_slice (4 samples, 0.01%)</title><rect x="38.4217%" y="597" width="0.0144%" height="15" fill="rgb(225,14,24)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="607.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (4 samples, 0.01%)</title><rect x="38.4217%" y="581" width="0.0144%" height="15" fill="rgb(237,193,20)" fg:x="10692" fg:w="4"/><text x="38.6717%" y="591.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="38.4936%" y="629" width="0.0144%" height="15" fill="rgb(239,122,19)" fg:x="10712" fg:w="4"/><text x="38.7436%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="38.5080%" y="629" width="0.0108%" height="15" fill="rgb(231,220,10)" fg:x="10716" fg:w="3"/><text x="38.7580%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="38.5080%" y="613" width="0.0108%" height="15" fill="rgb(220,66,15)" fg:x="10716" fg:w="3"/><text x="38.7580%" y="623.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="38.5188%" y="597" width="0.0287%" height="15" fill="rgb(215,171,52)" fg:x="10719" fg:w="8"/><text x="38.7688%" y="607.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (10 samples, 0.04%)</title><rect x="38.5188%" y="629" width="0.0359%" height="15" fill="rgb(241,169,50)" fg:x="10719" fg:w="10"/><text x="38.7688%" y="639.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (10 samples, 0.04%)</title><rect x="38.5188%" y="613" width="0.0359%" height="15" fill="rgb(236,189,0)" fg:x="10719" fg:w="10"/><text x="38.7688%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.13%)</title><rect x="38.4397%" y="693" width="0.1258%" height="15" fill="rgb(217,147,20)" fg:x="10697" fg:w="35"/><text x="38.6897%" y="703.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (35 samples, 0.13%)</title><rect x="38.4397%" y="677" width="0.1258%" height="15" fill="rgb(206,188,39)" fg:x="10697" fg:w="35"/><text x="38.6897%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.11%)</title><rect x="38.4577%" y="661" width="0.1078%" height="15" fill="rgb(227,118,25)" fg:x="10702" fg:w="30"/><text x="38.7077%" y="671.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (30 samples, 0.11%)</title><rect x="38.4577%" y="645" width="0.1078%" height="15" fill="rgb(248,171,40)" fg:x="10702" fg:w="30"/><text x="38.7077%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}}&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="38.5547%" y="629" width="0.0108%" height="15" fill="rgb(251,90,54)" fg:x="10729" fg:w="3"/><text x="38.8047%" y="639.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="1205" width="0.1401%" height="15" fill="rgb(234,11,46)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1215.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (39 samples, 0.14%)</title><rect x="38.4361%" y="1189" width="0.1401%" height="15" fill="rgb(229,134,13)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.14%)</title><rect x="38.4361%" y="1173" width="0.1401%" height="15" fill="rgb(223,129,3)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.14%)</title><rect x="38.4361%" y="1157" width="0.1401%" height="15" fill="rgb(221,124,13)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1167.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="1141" width="0.1401%" height="15" fill="rgb(234,3,18)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="1125" width="0.1401%" height="15" fill="rgb(249,199,20)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1135.50"></text></g><g><title>async_global_executor::executor::block_on (39 samples, 0.14%)</title><rect x="38.4361%" y="1109" width="0.1401%" height="15" fill="rgb(224,134,6)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.14%)</title><rect x="38.4361%" y="1093" width="0.1401%" height="15" fill="rgb(254,83,26)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.14%)</title><rect x="38.4361%" y="1077" width="0.1401%" height="15" fill="rgb(217,88,9)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1087.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="1061" width="0.1401%" height="15" fill="rgb(225,73,2)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1071.50"></text></g><g><title>async_global_executor::reactor::block_on (39 samples, 0.14%)</title><rect x="38.4361%" y="1045" width="0.1401%" height="15" fill="rgb(226,44,39)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1055.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="1029" width="0.1401%" height="15" fill="rgb(228,53,17)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1039.50"></text></g><g><title>async_io::driver::block_on (39 samples, 0.14%)</title><rect x="38.4361%" y="1013" width="0.1401%" height="15" fill="rgb(212,27,27)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="38.4361%" y="997" width="0.1401%" height="15" fill="rgb(241,50,6)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="1007.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="981" width="0.1401%" height="15" fill="rgb(225,28,51)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="38.4361%" y="965" width="0.1401%" height="15" fill="rgb(215,33,16)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="949" width="0.1401%" height="15" fill="rgb(243,40,39)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="959.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="38.4361%" y="933" width="0.1401%" height="15" fill="rgb(225,11,42)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="38.4361%" y="917" width="0.1401%" height="15" fill="rgb(241,220,38)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (39 samples, 0.14%)</title><rect x="38.4361%" y="901" width="0.1401%" height="15" fill="rgb(244,52,35)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.14%)</title><rect x="38.4361%" y="885" width="0.1401%" height="15" fill="rgb(246,42,46)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.14%)</title><rect x="38.4361%" y="869" width="0.1401%" height="15" fill="rgb(205,184,13)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="879.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="853" width="0.1401%" height="15" fill="rgb(209,48,36)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="863.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="837" width="0.1401%" height="15" fill="rgb(244,34,51)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="38.4361%" y="821" width="0.1401%" height="15" fill="rgb(221,107,33)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="831.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="805" width="0.1401%" height="15" fill="rgb(224,203,12)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="815.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="38.4361%" y="789" width="0.1401%" height="15" fill="rgb(230,215,18)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="38.4361%" y="773" width="0.1401%" height="15" fill="rgb(206,185,35)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="757" width="0.1401%" height="15" fill="rgb(228,140,34)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (39 samples, 0.14%)</title><rect x="38.4361%" y="741" width="0.1401%" height="15" fill="rgb(208,93,13)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="38.4361%" y="725" width="0.1401%" height="15" fill="rgb(221,193,39)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (39 samples, 0.14%)</title><rect x="38.4361%" y="709" width="0.1401%" height="15" fill="rgb(241,132,34)" fg:x="10696" fg:w="39"/><text x="38.6861%" y="719.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="38.5655%" y="693" width="0.0108%" height="15" fill="rgb(221,141,10)" fg:x="10732" fg:w="3"/><text x="38.8155%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::notify (24 samples, 0.09%)</title><rect x="38.5870%" y="629" width="0.0862%" height="15" fill="rgb(226,90,31)" fg:x="10738" fg:w="24"/><text x="38.8370%" y="639.50"></text></g><g><title>polling::Poller::notify (24 samples, 0.09%)</title><rect x="38.5870%" y="613" width="0.0862%" height="15" fill="rgb(243,75,5)" fg:x="10738" fg:w="24"/><text x="38.8370%" y="623.50"></text></g><g><title>polling::epoll::Poller::notify (23 samples, 0.08%)</title><rect x="38.5906%" y="597" width="0.0827%" height="15" fill="rgb(227,156,21)" fg:x="10739" fg:w="23"/><text x="38.8406%" y="607.50"></text></g><g><title>write (23 samples, 0.08%)</title><rect x="38.5906%" y="581" width="0.0827%" height="15" fill="rgb(250,195,8)" fg:x="10739" fg:w="23"/><text x="38.8406%" y="591.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="38.5978%" y="565" width="0.0755%" height="15" fill="rgb(220,134,5)" fg:x="10741" fg:w="21"/><text x="38.8478%" y="575.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="38.6014%" y="549" width="0.0719%" height="15" fill="rgb(246,106,34)" fg:x="10742" fg:w="20"/><text x="38.8514%" y="559.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="38.6014%" y="533" width="0.0719%" height="15" fill="rgb(205,1,4)" fg:x="10742" fg:w="20"/><text x="38.8514%" y="543.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="38.6014%" y="517" width="0.0719%" height="15" fill="rgb(224,151,29)" fg:x="10742" fg:w="20"/><text x="38.8514%" y="527.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="38.6086%" y="501" width="0.0647%" height="15" fill="rgb(251,196,0)" fg:x="10744" fg:w="18"/><text x="38.8586%" y="511.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="38.6230%" y="485" width="0.0503%" height="15" fill="rgb(212,127,0)" fg:x="10748" fg:w="14"/><text x="38.8730%" y="495.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="38.6409%" y="469" width="0.0323%" height="15" fill="rgb(236,71,53)" fg:x="10753" fg:w="9"/><text x="38.8909%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="38.6589%" y="453" width="0.0144%" height="15" fill="rgb(227,99,0)" fg:x="10758" fg:w="4"/><text x="38.9089%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="38.6733%" y="629" width="0.0180%" height="15" fill="rgb(239,89,21)" fg:x="10762" fg:w="5"/><text x="38.9233%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (5 samples, 0.02%)</title><rect x="38.6733%" y="613" width="0.0180%" height="15" fill="rgb(243,122,19)" fg:x="10762" fg:w="5"/><text x="38.9233%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (33 samples, 0.12%)</title><rect x="38.5870%" y="645" width="0.1186%" height="15" fill="rgb(229,192,45)" fg:x="10738" fg:w="33"/><text x="38.8370%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.01%)</title><rect x="38.6912%" y="629" width="0.0144%" height="15" fill="rgb(235,165,35)" fg:x="10767" fg:w="4"/><text x="38.9412%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.01%)</title><rect x="38.6912%" y="613" width="0.0144%" height="15" fill="rgb(253,202,0)" fg:x="10767" fg:w="4"/><text x="38.9412%" y="623.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (41 samples, 0.15%)</title><rect x="38.5763%" y="677" width="0.1473%" height="15" fill="rgb(235,51,20)" fg:x="10735" fg:w="41"/><text x="38.8263%" y="687.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (41 samples, 0.15%)</title><rect x="38.5763%" y="661" width="0.1473%" height="15" fill="rgb(218,95,46)" fg:x="10735" fg:w="41"/><text x="38.8263%" y="671.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.01%)</title><rect x="38.7092%" y="645" width="0.0144%" height="15" fill="rgb(212,81,10)" fg:x="10772" fg:w="4"/><text x="38.9592%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="39.0578%" y="613" width="0.0108%" height="15" fill="rgb(240,59,0)" fg:x="10869" fg:w="3"/><text x="39.3078%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="39.0686%" y="613" width="0.0108%" height="15" fill="rgb(212,191,42)" fg:x="10872" fg:w="3"/><text x="39.3186%" y="623.50"></text></g><g><title>async_std::task::sleep::sleep (10 samples, 0.04%)</title><rect x="39.0793%" y="613" width="0.0359%" height="15" fill="rgb(233,140,3)" fg:x="10875" fg:w="10"/><text x="39.3293%" y="623.50"></text></g><g><title>core::future::from_generator (8 samples, 0.03%)</title><rect x="39.0865%" y="597" width="0.0287%" height="15" fill="rgb(215,69,23)" fg:x="10877" fg:w="8"/><text x="39.3365%" y="607.50"></text></g><g><title>core::time::&lt;impl core::ops::arith::Mul&lt;core::time::Duration&gt; for u32&gt;::mul (3 samples, 0.01%)</title><rect x="39.1297%" y="613" width="0.0108%" height="15" fill="rgb(240,202,20)" fg:x="10889" fg:w="3"/><text x="39.3797%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (5 samples, 0.02%)</title><rect x="39.1404%" y="613" width="0.0180%" height="15" fill="rgb(209,146,50)" fg:x="10892" fg:w="5"/><text x="39.3904%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.32%)</title><rect x="38.8458%" y="645" width="0.3234%" height="15" fill="rgb(253,102,54)" fg:x="10810" fg:w="90"/><text x="39.0958%" y="655.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (82 samples, 0.29%)</title><rect x="38.8745%" y="629" width="0.2947%" height="15" fill="rgb(250,173,47)" fg:x="10818" fg:w="82"/><text x="39.1245%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="39.1836%" y="629" width="0.0180%" height="15" fill="rgb(232,142,7)" fg:x="10904" fg:w="5"/><text x="39.4336%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (7 samples, 0.03%)</title><rect x="39.1836%" y="645" width="0.0252%" height="15" fill="rgb(230,157,47)" fg:x="10904" fg:w="7"/><text x="39.4336%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (8 samples, 0.03%)</title><rect x="39.2123%" y="645" width="0.0287%" height="15" fill="rgb(214,177,35)" fg:x="10912" fg:w="8"/><text x="39.4623%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (6 samples, 0.02%)</title><rect x="39.2411%" y="645" width="0.0216%" height="15" fill="rgb(234,119,46)" fg:x="10920" fg:w="6"/><text x="39.4911%" y="655.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (196 samples, 0.70%)</title><rect x="38.5763%" y="693" width="0.7043%" height="15" fill="rgb(241,180,50)" fg:x="10735" fg:w="196"/><text x="38.8263%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.56%)</title><rect x="38.7236%" y="677" width="0.5570%" height="15" fill="rgb(221,54,25)" fg:x="10776" fg:w="155"/><text x="38.9736%" y="687.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (152 samples, 0.55%)</title><rect x="38.7344%" y="661" width="0.5462%" height="15" fill="rgb(209,157,44)" fg:x="10779" fg:w="152"/><text x="38.9844%" y="671.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::try_pull (4 samples, 0.01%)</title><rect x="39.2662%" y="645" width="0.0144%" height="15" fill="rgb(246,115,41)" fg:x="10927" fg:w="4"/><text x="39.5162%" y="655.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (4 samples, 0.01%)</title><rect x="39.2662%" y="629" width="0.0144%" height="15" fill="rgb(229,86,1)" fg:x="10927" fg:w="4"/><text x="39.5162%" y="639.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (4 samples, 0.01%)</title><rect x="39.2662%" y="613" width="0.0144%" height="15" fill="rgb(240,108,53)" fg:x="10927" fg:w="4"/><text x="39.5162%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.03%)</title><rect x="39.2806%" y="693" width="0.0287%" height="15" fill="rgb(227,134,2)" fg:x="10931" fg:w="8"/><text x="39.5306%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (8 samples, 0.03%)</title><rect x="39.2806%" y="677" width="0.0287%" height="15" fill="rgb(213,129,25)" fg:x="10931" fg:w="8"/><text x="39.5306%" y="687.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (5 samples, 0.02%)</title><rect x="39.2914%" y="661" width="0.0180%" height="15" fill="rgb(226,35,21)" fg:x="10934" fg:w="5"/><text x="39.5414%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="39.2985%" y="645" width="0.0108%" height="15" fill="rgb(208,129,26)" fg:x="10936" fg:w="3"/><text x="39.5485%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="39.2985%" y="629" width="0.0108%" height="15" fill="rgb(224,83,6)" fg:x="10936" fg:w="3"/><text x="39.5485%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="39.2985%" y="613" width="0.0108%" height="15" fill="rgb(227,52,39)" fg:x="10936" fg:w="3"/><text x="39.5485%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="39.2985%" y="597" width="0.0108%" height="15" fill="rgb(241,30,17)" fg:x="10936" fg:w="3"/><text x="39.5485%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="39.2985%" y="581" width="0.0108%" height="15" fill="rgb(246,186,42)" fg:x="10936" fg:w="3"/><text x="39.5485%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="39.2985%" y="565" width="0.0108%" height="15" fill="rgb(221,169,15)" fg:x="10936" fg:w="3"/><text x="39.5485%" y="575.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="39.2985%" y="549" width="0.0108%" height="15" fill="rgb(235,108,21)" fg:x="10936" fg:w="3"/><text x="39.5485%" y="559.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="39.3309%" y="549" width="0.0108%" height="15" fill="rgb(219,148,30)" fg:x="10945" fg:w="3"/><text x="39.5809%" y="559.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (32 samples, 0.11%)</title><rect x="39.3201%" y="597" width="0.1150%" height="15" fill="rgb(220,109,5)" fg:x="10942" fg:w="32"/><text x="39.5701%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (32 samples, 0.11%)</title><rect x="39.3201%" y="581" width="0.1150%" height="15" fill="rgb(213,203,48)" fg:x="10942" fg:w="32"/><text x="39.5701%" y="591.50"></text></g><g><title>__send (32 samples, 0.11%)</title><rect x="39.3201%" y="565" width="0.1150%" height="15" fill="rgb(244,71,33)" fg:x="10942" fg:w="32"/><text x="39.5701%" y="575.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="39.3417%" y="549" width="0.0934%" height="15" fill="rgb(209,23,2)" fg:x="10948" fg:w="26"/><text x="39.5917%" y="559.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="39.3417%" y="533" width="0.0934%" height="15" fill="rgb(219,97,7)" fg:x="10948" fg:w="26"/><text x="39.5917%" y="543.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="39.3417%" y="517" width="0.0934%" height="15" fill="rgb(216,161,23)" fg:x="10948" fg:w="26"/><text x="39.5917%" y="527.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="39.3525%" y="501" width="0.0827%" height="15" fill="rgb(207,45,42)" fg:x="10951" fg:w="23"/><text x="39.6025%" y="511.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="39.3596%" y="485" width="0.0755%" height="15" fill="rgb(241,61,4)" fg:x="10953" fg:w="21"/><text x="39.6096%" y="495.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="39.3596%" y="469" width="0.0755%" height="15" fill="rgb(236,170,1)" fg:x="10953" fg:w="21"/><text x="39.6096%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="39.3956%" y="453" width="0.0395%" height="15" fill="rgb(239,72,5)" fg:x="10963" fg:w="11"/><text x="39.6456%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="39.4064%" y="437" width="0.0287%" height="15" fill="rgb(214,13,50)" fg:x="10966" fg:w="8"/><text x="39.6564%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="39.4171%" y="421" width="0.0180%" height="15" fill="rgb(224,88,9)" fg:x="10969" fg:w="5"/><text x="39.6671%" y="431.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (35 samples, 0.13%)</title><rect x="39.3201%" y="613" width="0.1258%" height="15" fill="rgb(238,192,34)" fg:x="10942" fg:w="35"/><text x="39.5701%" y="623.50"></text></g><g><title>async_io::Async&lt;T&gt;::get_ref (3 samples, 0.01%)</title><rect x="39.4351%" y="597" width="0.0108%" height="15" fill="rgb(217,203,50)" fg:x="10974" fg:w="3"/><text x="39.6851%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.01%)</title><rect x="39.4351%" y="581" width="0.0108%" height="15" fill="rgb(241,123,32)" fg:x="10974" fg:w="3"/><text x="39.6851%" y="591.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all::{{closure}} (42 samples, 0.15%)</title><rect x="39.3093%" y="661" width="0.1509%" height="15" fill="rgb(248,151,39)" fg:x="10939" fg:w="42"/><text x="39.5593%" y="671.50"></text></g><g><title>&lt;async_std::io::write::write_all::WriteAllFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.14%)</title><rect x="39.3201%" y="645" width="0.1401%" height="15" fill="rgb(208,89,6)" fg:x="10942" fg:w="39"/><text x="39.5701%" y="655.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (39 samples, 0.14%)</title><rect x="39.3201%" y="629" width="0.1401%" height="15" fill="rgb(254,43,26)" fg:x="10942" fg:w="39"/><text x="39.5701%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="39.4459%" y="613" width="0.0144%" height="15" fill="rgb(216,158,13)" fg:x="10977" fg:w="4"/><text x="39.6959%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (43 samples, 0.15%)</title><rect x="39.3093%" y="693" width="0.1545%" height="15" fill="rgb(212,47,37)" fg:x="10939" fg:w="43"/><text x="39.5593%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.15%)</title><rect x="39.3093%" y="677" width="0.1545%" height="15" fill="rgb(254,16,10)" fg:x="10939" fg:w="43"/><text x="39.5593%" y="687.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all (3 samples, 0.01%)</title><rect x="39.4638%" y="693" width="0.0108%" height="15" fill="rgb(223,228,16)" fg:x="10982" fg:w="3"/><text x="39.7138%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (3 samples, 0.01%)</title><rect x="39.4638%" y="677" width="0.0108%" height="15" fill="rgb(249,108,50)" fg:x="10982" fg:w="3"/><text x="39.7138%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="39.4638%" y="661" width="0.0108%" height="15" fill="rgb(208,220,5)" fg:x="10982" fg:w="3"/><text x="39.7138%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="39.4638%" y="645" width="0.0108%" height="15" fill="rgb(217,89,48)" fg:x="10982" fg:w="3"/><text x="39.7138%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="39.4638%" y="629" width="0.0108%" height="15" fill="rgb(212,113,41)" fg:x="10982" fg:w="3"/><text x="39.7138%" y="639.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="39.4638%" y="613" width="0.0108%" height="15" fill="rgb(231,127,5)" fg:x="10982" fg:w="3"/><text x="39.7138%" y="623.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="39.4638%" y="597" width="0.0108%" height="15" fill="rgb(217,141,17)" fg:x="10982" fg:w="3"/><text x="39.7138%" y="607.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (3 samples, 0.01%)</title><rect x="39.4746%" y="693" width="0.0108%" height="15" fill="rgb(245,125,54)" fg:x="10985" fg:w="3"/><text x="39.7246%" y="703.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (3 samples, 0.01%)</title><rect x="39.4746%" y="677" width="0.0108%" height="15" fill="rgb(248,125,3)" fg:x="10985" fg:w="3"/><text x="39.7246%" y="687.50"></text></g><g><title>async_std::utils::timer_after (3 samples, 0.01%)</title><rect x="39.4746%" y="661" width="0.0108%" height="15" fill="rgb(236,119,51)" fg:x="10985" fg:w="3"/><text x="39.7246%" y="671.50"></text></g><g><title>async_io::Timer::after (3 samples, 0.01%)</title><rect x="39.4746%" y="645" width="0.0108%" height="15" fill="rgb(239,99,8)" fg:x="10985" fg:w="3"/><text x="39.7246%" y="655.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.01%)</title><rect x="39.4746%" y="629" width="0.0108%" height="15" fill="rgb(224,228,4)" fg:x="10985" fg:w="3"/><text x="39.7246%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="39.4746%" y="613" width="0.0108%" height="15" fill="rgb(220,131,45)" fg:x="10985" fg:w="3"/><text x="39.7246%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.01%)</title><rect x="39.4746%" y="597" width="0.0108%" height="15" fill="rgb(215,62,5)" fg:x="10985" fg:w="3"/><text x="39.7246%" y="607.50"></text></g><g><title>async_io::reactor::Reactor::get (4 samples, 0.01%)</title><rect x="39.4854%" y="645" width="0.0144%" height="15" fill="rgb(253,12,24)" fg:x="10988" fg:w="4"/><text x="39.7354%" y="655.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="39.4854%" y="629" width="0.0144%" height="15" fill="rgb(248,120,50)" fg:x="10988" fg:w="4"/><text x="39.7354%" y="639.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (4 samples, 0.01%)</title><rect x="39.4854%" y="613" width="0.0144%" height="15" fill="rgb(245,194,10)" fg:x="10988" fg:w="4"/><text x="39.7354%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (4 samples, 0.01%)</title><rect x="39.4854%" y="597" width="0.0144%" height="15" fill="rgb(241,149,38)" fg:x="10988" fg:w="4"/><text x="39.7354%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (4 samples, 0.01%)</title><rect x="39.4854%" y="581" width="0.0144%" height="15" fill="rgb(219,215,7)" fg:x="10988" fg:w="4"/><text x="39.7354%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="39.4854%" y="565" width="0.0144%" height="15" fill="rgb(208,120,31)" fg:x="10988" fg:w="4"/><text x="39.7354%" y="575.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (4 samples, 0.01%)</title><rect x="39.4854%" y="549" width="0.0144%" height="15" fill="rgb(244,30,8)" fg:x="10988" fg:w="4"/><text x="39.7354%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (10 samples, 0.04%)</title><rect x="39.4998%" y="645" width="0.0359%" height="15" fill="rgb(238,35,44)" fg:x="10992" fg:w="10"/><text x="39.7498%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (10 samples, 0.04%)</title><rect x="39.4998%" y="629" width="0.0359%" height="15" fill="rgb(243,218,37)" fg:x="10992" fg:w="10"/><text x="39.7498%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (8 samples, 0.03%)</title><rect x="39.5070%" y="613" width="0.0287%" height="15" fill="rgb(218,169,10)" fg:x="10994" fg:w="8"/><text x="39.7570%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}}&gt;&gt;&gt; (16 samples, 0.06%)</title><rect x="39.4854%" y="693" width="0.0575%" height="15" fill="rgb(221,144,10)" fg:x="10988" fg:w="16"/><text x="39.7354%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (16 samples, 0.06%)</title><rect x="39.4854%" y="677" width="0.0575%" height="15" fill="rgb(226,41,38)" fg:x="10988" fg:w="16"/><text x="39.7354%" y="687.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (16 samples, 0.06%)</title><rect x="39.4854%" y="661" width="0.0575%" height="15" fill="rgb(228,3,1)" fg:x="10988" fg:w="16"/><text x="39.7354%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (595 samples, 2.14%)</title><rect x="37.4371%" y="1237" width="2.1381%" height="15" fill="rgb(209,129,12)" fg:x="10418" fg:w="595"/><text x="37.6871%" y="1247.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (595 samples, 2.14%)</title><rect x="37.4371%" y="1221" width="2.1381%" height="15" fill="rgb(213,136,33)" fg:x="10418" fg:w="595"/><text x="37.6871%" y="1231.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="1205" width="0.9990%" height="15" fill="rgb(209,181,29)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="1189" width="0.9990%" height="15" fill="rgb(234,173,18)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1199.50"></text></g><g><title>async_global_executor::executor::block_on (278 samples, 1.00%)</title><rect x="38.5763%" y="1173" width="0.9990%" height="15" fill="rgb(227,73,47)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (278 samples, 1.00%)</title><rect x="38.5763%" y="1157" width="0.9990%" height="15" fill="rgb(234,9,34)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (278 samples, 1.00%)</title><rect x="38.5763%" y="1141" width="0.9990%" height="15" fill="rgb(235,172,15)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1151.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="1125" width="0.9990%" height="15" fill="rgb(245,61,2)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1135.50"></text></g><g><title>async_global_executor::reactor::block_on (278 samples, 1.00%)</title><rect x="38.5763%" y="1109" width="0.9990%" height="15" fill="rgb(238,39,47)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1119.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="1093" width="0.9990%" height="15" fill="rgb(234,37,24)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1103.50"></text></g><g><title>async_io::driver::block_on (278 samples, 1.00%)</title><rect x="38.5763%" y="1077" width="0.9990%" height="15" fill="rgb(248,223,24)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="1061" width="0.9990%" height="15" fill="rgb(223,12,15)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1071.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="1045" width="0.9990%" height="15" fill="rgb(249,6,3)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="1029" width="0.9990%" height="15" fill="rgb(237,105,33)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1039.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="1013" width="0.9990%" height="15" fill="rgb(252,208,35)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1023.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="997" width="0.9990%" height="15" fill="rgb(215,181,35)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="981" width="0.9990%" height="15" fill="rgb(246,212,3)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (278 samples, 1.00%)</title><rect x="38.5763%" y="965" width="0.9990%" height="15" fill="rgb(247,156,24)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (278 samples, 1.00%)</title><rect x="38.5763%" y="949" width="0.9990%" height="15" fill="rgb(248,9,31)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (278 samples, 1.00%)</title><rect x="38.5763%" y="933" width="0.9990%" height="15" fill="rgb(234,26,45)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="917" width="0.9990%" height="15" fill="rgb(249,11,32)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="901" width="0.9990%" height="15" fill="rgb(249,162,33)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="885" width="0.9990%" height="15" fill="rgb(232,4,32)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="869" width="0.9990%" height="15" fill="rgb(212,5,45)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="853" width="0.9990%" height="15" fill="rgb(227,95,13)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="837" width="0.9990%" height="15" fill="rgb(223,205,10)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="821" width="0.9990%" height="15" fill="rgb(222,178,8)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (278 samples, 1.00%)</title><rect x="38.5763%" y="805" width="0.9990%" height="15" fill="rgb(216,13,22)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="789" width="0.9990%" height="15" fill="rgb(240,167,12)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="773" width="0.9990%" height="15" fill="rgb(235,68,35)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="757" width="0.9990%" height="15" fill="rgb(253,40,27)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="767.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="741" width="0.9990%" height="15" fill="rgb(214,19,28)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (278 samples, 1.00%)</title><rect x="38.5763%" y="725" width="0.9990%" height="15" fill="rgb(210,167,45)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="735.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (278 samples, 1.00%)</title><rect x="38.5763%" y="709" width="0.9990%" height="15" fill="rgb(232,97,40)" fg:x="10735" fg:w="278"/><text x="38.8263%" y="719.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::refill (9 samples, 0.03%)</title><rect x="39.5429%" y="693" width="0.0323%" height="15" fill="rgb(250,35,23)" fg:x="11004" fg:w="9"/><text x="39.7929%" y="703.50"></text></g><g><title>syscall (7 samples, 0.03%)</title><rect x="39.5501%" y="677" width="0.0252%" height="15" fill="rgb(248,47,53)" fg:x="11006" fg:w="7"/><text x="39.8001%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="39.5501%" y="661" width="0.0252%" height="15" fill="rgb(226,58,50)" fg:x="11006" fg:w="7"/><text x="39.8001%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="39.5501%" y="645" width="0.0252%" height="15" fill="rgb(217,105,26)" fg:x="11006" fg:w="7"/><text x="39.8001%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="39.5501%" y="629" width="0.0252%" height="15" fill="rgb(208,64,1)" fg:x="11006" fg:w="7"/><text x="39.8001%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="39.5573%" y="613" width="0.0180%" height="15" fill="rgb(214,80,1)" fg:x="11008" fg:w="5"/><text x="39.8073%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="39.5609%" y="597" width="0.0144%" height="15" fill="rgb(206,175,26)" fg:x="11009" fg:w="4"/><text x="39.8109%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="39.6112%" y="1061" width="0.0108%" height="15" fill="rgb(235,156,37)" fg:x="11023" fg:w="3"/><text x="39.8612%" y="1071.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (13 samples, 0.05%)</title><rect x="39.6292%" y="917" width="0.0467%" height="15" fill="rgb(213,100,9)" fg:x="11028" fg:w="13"/><text x="39.8792%" y="927.50"></text></g><g><title>std::sys_common::net::TcpStream::read (13 samples, 0.05%)</title><rect x="39.6292%" y="901" width="0.0467%" height="15" fill="rgb(241,15,13)" fg:x="11028" fg:w="13"/><text x="39.8792%" y="911.50"></text></g><g><title>std::sys::unix::net::Socket::read (13 samples, 0.05%)</title><rect x="39.6292%" y="885" width="0.0467%" height="15" fill="rgb(205,97,43)" fg:x="11028" fg:w="13"/><text x="39.8792%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (13 samples, 0.05%)</title><rect x="39.6292%" y="869" width="0.0467%" height="15" fill="rgb(216,106,32)" fg:x="11028" fg:w="13"/><text x="39.8792%" y="879.50"></text></g><g><title>recv (13 samples, 0.05%)</title><rect x="39.6292%" y="853" width="0.0467%" height="15" fill="rgb(226,200,8)" fg:x="11028" fg:w="13"/><text x="39.8792%" y="863.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="39.6363%" y="837" width="0.0395%" height="15" fill="rgb(244,54,29)" fg:x="11030" fg:w="11"/><text x="39.8863%" y="847.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="39.6363%" y="821" width="0.0395%" height="15" fill="rgb(252,169,12)" fg:x="11030" fg:w="11"/><text x="39.8863%" y="831.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="39.6399%" y="805" width="0.0359%" height="15" fill="rgb(231,199,11)" fg:x="11031" fg:w="10"/><text x="39.8899%" y="815.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="39.6507%" y="789" width="0.0252%" height="15" fill="rgb(233,191,18)" fg:x="11034" fg:w="7"/><text x="39.9007%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="39.6543%" y="773" width="0.0216%" height="15" fill="rgb(215,83,47)" fg:x="11035" fg:w="6"/><text x="39.9043%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="39.6543%" y="757" width="0.0216%" height="15" fill="rgb(251,67,19)" fg:x="11035" fg:w="6"/><text x="39.9043%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="39.6579%" y="741" width="0.0180%" height="15" fill="rgb(240,7,20)" fg:x="11036" fg:w="5"/><text x="39.9079%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="39.6651%" y="725" width="0.0108%" height="15" fill="rgb(210,150,26)" fg:x="11038" fg:w="3"/><text x="39.9151%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="39.6651%" y="709" width="0.0108%" height="15" fill="rgb(228,75,42)" fg:x="11038" fg:w="3"/><text x="39.9151%" y="719.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (14 samples, 0.05%)</title><rect x="39.6292%" y="933" width="0.0503%" height="15" fill="rgb(237,134,48)" fg:x="11028" fg:w="14"/><text x="39.8792%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17 samples, 0.06%)</title><rect x="39.6220%" y="1029" width="0.0611%" height="15" fill="rgb(205,80,50)" fg:x="11026" fg:w="17"/><text x="39.8720%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.06%)</title><rect x="39.6220%" y="1013" width="0.0611%" height="15" fill="rgb(217,74,48)" fg:x="11026" fg:w="17"/><text x="39.8720%" y="1023.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (17 samples, 0.06%)</title><rect x="39.6220%" y="997" width="0.0611%" height="15" fill="rgb(205,82,50)" fg:x="11026" fg:w="17"/><text x="39.8720%" y="1007.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="39.6256%" y="981" width="0.0575%" height="15" fill="rgb(228,1,33)" fg:x="11027" fg:w="16"/><text x="39.8756%" y="991.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (16 samples, 0.06%)</title><rect x="39.6256%" y="965" width="0.0575%" height="15" fill="rgb(214,50,23)" fg:x="11027" fg:w="16"/><text x="39.8756%" y="975.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (16 samples, 0.06%)</title><rect x="39.6256%" y="949" width="0.0575%" height="15" fill="rgb(210,62,9)" fg:x="11027" fg:w="16"/><text x="39.8756%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (5 samples, 0.02%)</title><rect x="39.6831%" y="1029" width="0.0180%" height="15" fill="rgb(210,104,37)" fg:x="11043" fg:w="5"/><text x="39.9331%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.10%)</title><rect x="39.6220%" y="1061" width="0.1006%" height="15" fill="rgb(232,104,43)" fg:x="11026" fg:w="28"/><text x="39.8720%" y="1071.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (28 samples, 0.10%)</title><rect x="39.6220%" y="1045" width="0.1006%" height="15" fill="rgb(244,52,6)" fg:x="11026" fg:w="28"/><text x="39.8720%" y="1055.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.01%)</title><rect x="39.7118%" y="1029" width="0.0108%" height="15" fill="rgb(211,174,52)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="1039.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.01%)</title><rect x="39.7118%" y="1013" width="0.0108%" height="15" fill="rgb(229,48,4)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (3 samples, 0.01%)</title><rect x="39.7118%" y="997" width="0.0108%" height="15" fill="rgb(205,155,16)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="39.7118%" y="981" width="0.0108%" height="15" fill="rgb(211,141,53)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (3 samples, 0.01%)</title><rect x="39.7118%" y="965" width="0.0108%" height="15" fill="rgb(240,148,11)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="39.7118%" y="949" width="0.0108%" height="15" fill="rgb(214,45,23)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="959.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3 samples, 0.01%)</title><rect x="39.7118%" y="933" width="0.0108%" height="15" fill="rgb(248,74,26)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="943.50"></text></g><g><title>__libc_calloc (3 samples, 0.01%)</title><rect x="39.7118%" y="917" width="0.0108%" height="15" fill="rgb(218,121,16)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="927.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="39.7118%" y="901" width="0.0108%" height="15" fill="rgb(218,10,47)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="39.7118%" y="885" width="0.0108%" height="15" fill="rgb(227,99,14)" fg:x="11051" fg:w="3"/><text x="39.9618%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.03%)</title><rect x="39.7226%" y="1029" width="0.0252%" height="15" fill="rgb(229,83,46)" fg:x="11054" fg:w="7"/><text x="39.9726%" y="1039.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="39.7226%" y="1013" width="0.0252%" height="15" fill="rgb(228,25,1)" fg:x="11054" fg:w="7"/><text x="39.9726%" y="1023.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="39.7226%" y="997" width="0.0252%" height="15" fill="rgb(252,190,15)" fg:x="11054" fg:w="7"/><text x="39.9726%" y="1007.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="39.7226%" y="981" width="0.0252%" height="15" fill="rgb(213,103,51)" fg:x="11054" fg:w="7"/><text x="39.9726%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="39.7226%" y="965" width="0.0252%" height="15" fill="rgb(220,38,44)" fg:x="11054" fg:w="7"/><text x="39.9726%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="39.7262%" y="949" width="0.0216%" height="15" fill="rgb(210,45,26)" fg:x="11055" fg:w="6"/><text x="39.9762%" y="959.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="39.7334%" y="933" width="0.0144%" height="15" fill="rgb(205,95,48)" fg:x="11057" fg:w="4"/><text x="39.9834%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="39.7370%" y="917" width="0.0108%" height="15" fill="rgb(225,179,37)" fg:x="11058" fg:w="3"/><text x="39.9870%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="39.7370%" y="901" width="0.0108%" height="15" fill="rgb(230,209,3)" fg:x="11058" fg:w="3"/><text x="39.9870%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="39.7370%" y="885" width="0.0108%" height="15" fill="rgb(248,12,46)" fg:x="11058" fg:w="3"/><text x="39.9870%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="39.7370%" y="869" width="0.0108%" height="15" fill="rgb(234,18,0)" fg:x="11058" fg:w="3"/><text x="39.9870%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (3 samples, 0.01%)</title><rect x="39.7873%" y="885" width="0.0108%" height="15" fill="rgb(238,197,14)" fg:x="11072" fg:w="3"/><text x="40.0373%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.01%)</title><rect x="39.7873%" y="869" width="0.0108%" height="15" fill="rgb(251,162,48)" fg:x="11072" fg:w="3"/><text x="40.0373%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (12 samples, 0.04%)</title><rect x="39.7729%" y="901" width="0.0431%" height="15" fill="rgb(237,73,42)" fg:x="11068" fg:w="12"/><text x="40.0229%" y="911.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (5 samples, 0.02%)</title><rect x="39.7980%" y="885" width="0.0180%" height="15" fill="rgb(211,108,8)" fg:x="11075" fg:w="5"/><text x="40.0480%" y="895.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (20 samples, 0.07%)</title><rect x="39.7513%" y="1013" width="0.0719%" height="15" fill="rgb(213,45,22)" fg:x="11062" fg:w="20"/><text x="40.0013%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::encrypt (20 samples, 0.07%)</title><rect x="39.7513%" y="997" width="0.0719%" height="15" fill="rgb(252,154,5)" fg:x="11062" fg:w="20"/><text x="40.0013%" y="1007.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::raw::EncryptionPrimitive&gt;::raw_encryption_primitive (20 samples, 0.07%)</title><rect x="39.7513%" y="981" width="0.0719%" height="15" fill="rgb(221,79,52)" fg:x="11062" fg:w="20"/><text x="40.0013%" y="991.50"></text></g><g><title>rsa::internals::encrypt (19 samples, 0.07%)</title><rect x="39.7549%" y="965" width="0.0683%" height="15" fill="rgb(229,220,36)" fg:x="11063" fg:w="19"/><text x="40.0049%" y="975.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (19 samples, 0.07%)</title><rect x="39.7549%" y="949" width="0.0683%" height="15" fill="rgb(211,17,16)" fg:x="11063" fg:w="19"/><text x="40.0049%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (19 samples, 0.07%)</title><rect x="39.7549%" y="933" width="0.0683%" height="15" fill="rgb(222,55,31)" fg:x="11063" fg:w="19"/><text x="40.0049%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (17 samples, 0.06%)</title><rect x="39.7621%" y="917" width="0.0611%" height="15" fill="rgb(221,221,31)" fg:x="11065" fg:w="17"/><text x="40.0121%" y="927.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;u8&gt;,R&gt;&gt;::read (5 samples, 0.02%)</title><rect x="39.8268%" y="965" width="0.0180%" height="15" fill="rgb(227,168,26)" fg:x="11083" fg:w="5"/><text x="40.0768%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="39.8340%" y="949" width="0.0108%" height="15" fill="rgb(224,139,9)" fg:x="11085" fg:w="3"/><text x="40.0840%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="39.8340%" y="933" width="0.0108%" height="15" fill="rgb(254,172,0)" fg:x="11085" fg:w="3"/><text x="40.0840%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="39.8340%" y="917" width="0.0108%" height="15" fill="rgb(235,203,1)" fg:x="11085" fg:w="3"/><text x="40.0840%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="39.8340%" y="901" width="0.0108%" height="15" fill="rgb(216,205,24)" fg:x="11085" fg:w="3"/><text x="40.0840%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="39.8340%" y="885" width="0.0108%" height="15" fill="rgb(233,24,6)" fg:x="11085" fg:w="3"/><text x="40.0840%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="39.8340%" y="869" width="0.0108%" height="15" fill="rgb(244,110,9)" fg:x="11085" fg:w="3"/><text x="40.0840%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="39.8340%" y="853" width="0.0108%" height="15" fill="rgb(239,222,42)" fg:x="11085" fg:w="3"/><text x="40.0840%" y="863.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="39.8340%" y="837" width="0.0108%" height="15" fill="rgb(218,145,13)" fg:x="11085" fg:w="3"/><text x="40.0840%" y="847.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_bytes_array (6 samples, 0.02%)</title><rect x="39.8268%" y="981" width="0.0216%" height="15" fill="rgb(207,69,11)" fg:x="11083" fg:w="6"/><text x="40.0768%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::from_bytes_le (3 samples, 0.01%)</title><rect x="39.8519%" y="981" width="0.0108%" height="15" fill="rgb(220,223,22)" fg:x="11090" fg:w="3"/><text x="40.1019%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::from_bitwise_digits_le (3 samples, 0.01%)</title><rect x="39.8519%" y="965" width="0.0108%" height="15" fill="rgb(245,102,5)" fg:x="11090" fg:w="3"/><text x="40.1019%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.01%)</title><rect x="39.8519%" y="949" width="0.0108%" height="15" fill="rgb(211,148,2)" fg:x="11090" fg:w="3"/><text x="40.1019%" y="959.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="39.8519%" y="933" width="0.0108%" height="15" fill="rgb(241,13,44)" fg:x="11090" fg:w="3"/><text x="40.1019%" y="943.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.01%)</title><rect x="39.8519%" y="917" width="0.0108%" height="15" fill="rgb(219,137,21)" fg:x="11090" fg:w="3"/><text x="40.1019%" y="927.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (3 samples, 0.01%)</title><rect x="39.8519%" y="901" width="0.0108%" height="15" fill="rgb(242,206,5)" fg:x="11090" fg:w="3"/><text x="40.1019%" y="911.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (3 samples, 0.01%)</title><rect x="39.8519%" y="885" width="0.0108%" height="15" fill="rgb(217,114,22)" fg:x="11090" fg:w="3"/><text x="40.1019%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_transport::unicast::establishment::authenticator::pubkey::ZPubKey&gt;::read_init_ack_property_multilink (12 samples, 0.04%)</title><rect x="39.8232%" y="1013" width="0.0431%" height="15" fill="rgb(253,206,42)" fg:x="11082" fg:w="12"/><text x="40.0732%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_transport::unicast::establishment::authenticator::pubkey::ZPubKey&gt;::read_rsa_pub_key (11 samples, 0.04%)</title><rect x="39.8268%" y="997" width="0.0395%" height="15" fill="rgb(236,102,18)" fg:x="11083" fg:w="11"/><text x="40.0768%" y="1007.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::from_bytes_be (3 samples, 0.01%)</title><rect x="39.8699%" y="949" width="0.0108%" height="15" fill="rgb(208,59,49)" fg:x="11095" fg:w="3"/><text x="40.1199%" y="959.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (6 samples, 0.02%)</title><rect x="39.9202%" y="885" width="0.0216%" height="15" fill="rgb(215,194,28)" fg:x="11109" fg:w="6"/><text x="40.1702%" y="895.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (6 samples, 0.02%)</title><rect x="39.9202%" y="869" width="0.0216%" height="15" fill="rgb(243,207,11)" fg:x="11109" fg:w="6"/><text x="40.1702%" y="879.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (6 samples, 0.02%)</title><rect x="39.9202%" y="853" width="0.0216%" height="15" fill="rgb(254,179,35)" fg:x="11109" fg:w="6"/><text x="40.1702%" y="863.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (6 samples, 0.02%)</title><rect x="39.9202%" y="837" width="0.0216%" height="15" fill="rgb(235,97,3)" fg:x="11109" fg:w="6"/><text x="40.1702%" y="847.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Mul&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::mul (3 samples, 0.01%)</title><rect x="39.9418%" y="821" width="0.0108%" height="15" fill="rgb(215,155,33)" fg:x="11115" fg:w="3"/><text x="40.1918%" y="831.50"></text></g><g><title>num_bigint_dig::algorithms::mul::mul3 (3 samples, 0.01%)</title><rect x="39.9418%" y="805" width="0.0108%" height="15" fill="rgb(223,128,12)" fg:x="11115" fg:w="3"/><text x="40.1918%" y="815.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::RemAssign&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem_assign (14 samples, 0.05%)</title><rect x="39.9418%" y="885" width="0.0503%" height="15" fill="rgb(208,157,18)" fg:x="11115" fg:w="14"/><text x="40.1918%" y="895.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (14 samples, 0.05%)</title><rect x="39.9418%" y="869" width="0.0503%" height="15" fill="rgb(249,70,54)" fg:x="11115" fg:w="14"/><text x="40.1918%" y="879.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (14 samples, 0.05%)</title><rect x="39.9418%" y="853" width="0.0503%" height="15" fill="rgb(244,118,24)" fg:x="11115" fg:w="14"/><text x="40.1918%" y="863.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (14 samples, 0.05%)</title><rect x="39.9418%" y="837" width="0.0503%" height="15" fill="rgb(211,54,0)" fg:x="11115" fg:w="14"/><text x="40.1918%" y="847.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="40.0244%" y="869" width="0.0108%" height="15" fill="rgb(245,137,45)" fg:x="11138" fg:w="3"/><text x="40.2744%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (3 samples, 0.01%)</title><rect x="40.0244%" y="853" width="0.0108%" height="15" fill="rgb(232,154,31)" fg:x="11138" fg:w="3"/><text x="40.2744%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap_with_slice (3 samples, 0.01%)</title><rect x="40.0568%" y="869" width="0.0108%" height="15" fill="rgb(253,6,39)" fg:x="11147" fg:w="3"/><text x="40.3068%" y="879.50"></text></g><g><title>core::ptr::swap_nonoverlapping (3 samples, 0.01%)</title><rect x="40.0568%" y="853" width="0.0108%" height="15" fill="rgb(234,183,24)" fg:x="11147" fg:w="3"/><text x="40.3068%" y="863.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple (3 samples, 0.01%)</title><rect x="40.0568%" y="837" width="0.0108%" height="15" fill="rgb(252,84,40)" fg:x="11147" fg:w="3"/><text x="40.3068%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="40.1071%" y="853" width="0.0252%" height="15" fill="rgb(224,65,2)" fg:x="11161" fg:w="7"/><text x="40.3571%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7 samples, 0.03%)</title><rect x="40.1071%" y="837" width="0.0252%" height="15" fill="rgb(229,38,24)" fg:x="11161" fg:w="7"/><text x="40.3571%" y="847.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (8 samples, 0.03%)</title><rect x="40.1358%" y="853" width="0.0287%" height="15" fill="rgb(218,131,50)" fg:x="11169" fg:w="8"/><text x="40.3858%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (8 samples, 0.03%)</title><rect x="40.1358%" y="837" width="0.0287%" height="15" fill="rgb(233,106,18)" fg:x="11169" fg:w="8"/><text x="40.3858%" y="847.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (41 samples, 0.15%)</title><rect x="40.0676%" y="869" width="0.1473%" height="15" fill="rgb(220,216,11)" fg:x="11150" fg:w="41"/><text x="40.3176%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (14 samples, 0.05%)</title><rect x="40.1646%" y="853" width="0.0503%" height="15" fill="rgb(251,100,45)" fg:x="11177" fg:w="14"/><text x="40.4146%" y="863.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (15 samples, 0.05%)</title><rect x="40.2293%" y="853" width="0.0539%" height="15" fill="rgb(235,143,32)" fg:x="11195" fg:w="15"/><text x="40.4793%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (11 samples, 0.04%)</title><rect x="40.2436%" y="837" width="0.0395%" height="15" fill="rgb(248,124,34)" fg:x="11199" fg:w="11"/><text x="40.4936%" y="847.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (11 samples, 0.04%)</title><rect x="40.2436%" y="821" width="0.0395%" height="15" fill="rgb(225,221,4)" fg:x="11199" fg:w="11"/><text x="40.4936%" y="831.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (11 samples, 0.04%)</title><rect x="40.2436%" y="805" width="0.0395%" height="15" fill="rgb(242,27,43)" fg:x="11199" fg:w="11"/><text x="40.4936%" y="815.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.04%)</title><rect x="40.2472%" y="789" width="0.0359%" height="15" fill="rgb(227,54,8)" fg:x="11200" fg:w="10"/><text x="40.4972%" y="799.50"></text></g><g><title>malloc (10 samples, 0.04%)</title><rect x="40.2472%" y="773" width="0.0359%" height="15" fill="rgb(253,139,49)" fg:x="11200" fg:w="10"/><text x="40.4972%" y="783.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="40.2616%" y="757" width="0.0216%" height="15" fill="rgb(231,26,43)" fg:x="11204" fg:w="6"/><text x="40.5116%" y="767.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="40.2688%" y="741" width="0.0144%" height="15" fill="rgb(207,121,39)" fg:x="11206" fg:w="4"/><text x="40.5188%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="40.2688%" y="725" width="0.0144%" height="15" fill="rgb(223,101,35)" fg:x="11206" fg:w="4"/><text x="40.5188%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="40.2688%" y="709" width="0.0144%" height="15" fill="rgb(232,87,23)" fg:x="11206" fg:w="4"/><text x="40.5188%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="40.2688%" y="693" width="0.0144%" height="15" fill="rgb(225,180,29)" fg:x="11206" fg:w="4"/><text x="40.5188%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="40.2688%" y="677" width="0.0144%" height="15" fill="rgb(225,25,17)" fg:x="11206" fg:w="4"/><text x="40.5188%" y="687.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (17 samples, 0.06%)</title><rect x="40.2257%" y="869" width="0.0611%" height="15" fill="rgb(223,8,52)" fg:x="11194" fg:w="17"/><text x="40.4757%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (77 samples, 0.28%)</title><rect x="40.0137%" y="885" width="0.2767%" height="15" fill="rgb(246,42,21)" fg:x="11135" fg:w="77"/><text x="40.2637%" y="895.50"></text></g><g><title>rsa::internals::decrypt (115 samples, 0.41%)</title><rect x="39.8807%" y="933" width="0.4133%" height="15" fill="rgb(205,64,43)" fg:x="11098" fg:w="115"/><text x="40.1307%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (107 samples, 0.38%)</title><rect x="39.9094%" y="917" width="0.3845%" height="15" fill="rgb(221,160,13)" fg:x="11106" fg:w="107"/><text x="40.1594%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (106 samples, 0.38%)</title><rect x="39.9130%" y="901" width="0.3809%" height="15" fill="rgb(239,58,35)" fg:x="11107" fg:w="106"/><text x="40.1630%" y="911.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (12 samples, 0.04%)</title><rect x="40.2975%" y="885" width="0.0431%" height="15" fill="rgb(251,26,40)" fg:x="11214" fg:w="12"/><text x="40.5475%" y="895.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (12 samples, 0.04%)</title><rect x="40.2975%" y="869" width="0.0431%" height="15" fill="rgb(247,0,4)" fg:x="11214" fg:w="12"/><text x="40.5475%" y="879.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (12 samples, 0.04%)</title><rect x="40.2975%" y="853" width="0.0431%" height="15" fill="rgb(218,130,10)" fg:x="11214" fg:w="12"/><text x="40.5475%" y="863.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (12 samples, 0.04%)</title><rect x="40.2975%" y="837" width="0.0431%" height="15" fill="rgb(239,32,7)" fg:x="11214" fg:w="12"/><text x="40.5475%" y="847.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.01%)</title><rect x="40.3443%" y="789" width="0.0108%" height="15" fill="rgb(210,192,24)" fg:x="11227" fg:w="3"/><text x="40.5943%" y="799.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_traits::identities::Zero&gt;::zero (5 samples, 0.02%)</title><rect x="40.3407%" y="885" width="0.0180%" height="15" fill="rgb(226,212,17)" fg:x="11226" fg:w="5"/><text x="40.5907%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::new (5 samples, 0.02%)</title><rect x="40.3407%" y="869" width="0.0180%" height="15" fill="rgb(219,201,28)" fg:x="11226" fg:w="5"/><text x="40.5907%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::ensure_big_digit (5 samples, 0.02%)</title><rect x="40.3407%" y="853" width="0.0180%" height="15" fill="rgb(235,207,41)" fg:x="11226" fg:w="5"/><text x="40.5907%" y="863.50"></text></g><g><title>num_bigint_dig::biguint::ensure_big_digit_slice (4 samples, 0.01%)</title><rect x="40.3443%" y="837" width="0.0144%" height="15" fill="rgb(241,95,54)" fg:x="11227" fg:w="4"/><text x="40.5943%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="40.3443%" y="821" width="0.0144%" height="15" fill="rgb(248,12,23)" fg:x="11227" fg:w="4"/><text x="40.5943%" y="831.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="40.3443%" y="805" width="0.0144%" height="15" fill="rgb(228,173,4)" fg:x="11227" fg:w="4"/><text x="40.5943%" y="815.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="40.3874%" y="869" width="0.0108%" height="15" fill="rgb(254,99,5)" fg:x="11239" fg:w="3"/><text x="40.6374%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (3 samples, 0.01%)</title><rect x="40.3874%" y="853" width="0.0108%" height="15" fill="rgb(212,184,17)" fg:x="11239" fg:w="3"/><text x="40.6374%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (3 samples, 0.01%)</title><rect x="40.3874%" y="837" width="0.0108%" height="15" fill="rgb(252,174,1)" fg:x="11239" fg:w="3"/><text x="40.6374%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="40.4377%" y="853" width="0.0108%" height="15" fill="rgb(241,118,51)" fg:x="11253" fg:w="3"/><text x="40.6877%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.01%)</title><rect x="40.4377%" y="837" width="0.0108%" height="15" fill="rgb(227,94,47)" fg:x="11253" fg:w="3"/><text x="40.6877%" y="847.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (9 samples, 0.03%)</title><rect x="40.4485%" y="853" width="0.0323%" height="15" fill="rgb(229,104,2)" fg:x="11256" fg:w="9"/><text x="40.6985%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.03%)</title><rect x="40.4485%" y="837" width="0.0323%" height="15" fill="rgb(219,28,31)" fg:x="11256" fg:w="9"/><text x="40.6985%" y="847.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (33 samples, 0.12%)</title><rect x="40.4125%" y="869" width="0.1186%" height="15" fill="rgb(233,109,36)" fg:x="11246" fg:w="33"/><text x="40.6625%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (14 samples, 0.05%)</title><rect x="40.4808%" y="853" width="0.0503%" height="15" fill="rgb(246,88,11)" fg:x="11265" fg:w="14"/><text x="40.7308%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (6 samples, 0.02%)</title><rect x="40.5311%" y="869" width="0.0216%" height="15" fill="rgb(209,212,17)" fg:x="11279" fg:w="6"/><text x="40.7811%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="40.5311%" y="853" width="0.0216%" height="15" fill="rgb(243,59,29)" fg:x="11279" fg:w="6"/><text x="40.7811%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (6 samples, 0.02%)</title><rect x="40.5311%" y="837" width="0.0216%" height="15" fill="rgb(244,205,48)" fg:x="11279" fg:w="6"/><text x="40.7811%" y="847.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (6 samples, 0.02%)</title><rect x="40.5311%" y="821" width="0.0216%" height="15" fill="rgb(227,30,6)" fg:x="11279" fg:w="6"/><text x="40.7811%" y="831.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (6 samples, 0.02%)</title><rect x="40.5311%" y="805" width="0.0216%" height="15" fill="rgb(220,205,48)" fg:x="11279" fg:w="6"/><text x="40.7811%" y="815.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.01%)</title><rect x="40.5419%" y="789" width="0.0108%" height="15" fill="rgb(250,94,14)" fg:x="11282" fg:w="3"/><text x="40.7919%" y="799.50"></text></g><g><title>realloc (3 samples, 0.01%)</title><rect x="40.5419%" y="773" width="0.0108%" height="15" fill="rgb(216,119,42)" fg:x="11282" fg:w="3"/><text x="40.7919%" y="783.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (191 samples, 0.69%)</title><rect x="39.8699%" y="965" width="0.6864%" height="15" fill="rgb(232,155,0)" fg:x="11095" fg:w="191"/><text x="40.1199%" y="975.50"></text></g><g><title>rsa::internals::decrypt_and_check (188 samples, 0.68%)</title><rect x="39.8807%" y="949" width="0.6756%" height="15" fill="rgb(212,24,32)" fg:x="11098" fg:w="188"/><text x="40.1307%" y="959.50"></text></g><g><title>rsa::internals::encrypt (73 samples, 0.26%)</title><rect x="40.2939%" y="933" width="0.2623%" height="15" fill="rgb(216,69,20)" fg:x="11213" fg:w="73"/><text x="40.5439%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (73 samples, 0.26%)</title><rect x="40.2939%" y="917" width="0.2623%" height="15" fill="rgb(229,73,31)" fg:x="11213" fg:w="73"/><text x="40.5439%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (73 samples, 0.26%)</title><rect x="40.2939%" y="901" width="0.2623%" height="15" fill="rgb(224,219,20)" fg:x="11213" fg:w="73"/><text x="40.5439%" y="911.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (53 samples, 0.19%)</title><rect x="40.3658%" y="885" width="0.1905%" height="15" fill="rgb(215,146,41)" fg:x="11233" fg:w="53"/><text x="40.6158%" y="895.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (226 samples, 0.81%)</title><rect x="39.7477%" y="1029" width="0.8121%" height="15" fill="rgb(244,71,31)" fg:x="11061" fg:w="226"/><text x="39.9977%" y="1039.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (193 samples, 0.69%)</title><rect x="39.8663%" y="1013" width="0.6935%" height="15" fill="rgb(224,24,11)" fg:x="11094" fg:w="193"/><text x="40.1163%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::decrypt (193 samples, 0.69%)</title><rect x="39.8663%" y="997" width="0.6935%" height="15" fill="rgb(229,76,15)" fg:x="11094" fg:w="193"/><text x="40.1163%" y="1007.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (192 samples, 0.69%)</title><rect x="39.8699%" y="981" width="0.6900%" height="15" fill="rgb(209,93,2)" fg:x="11095" fg:w="192"/><text x="40.1199%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::wbuf::WBuf&gt; (4 samples, 0.01%)</title><rect x="40.5994%" y="1013" width="0.0144%" height="15" fill="rgb(216,200,50)" fg:x="11298" fg:w="4"/><text x="40.8494%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="40.6138%" y="997" width="0.0108%" height="15" fill="rgb(211,67,34)" fg:x="11302" fg:w="3"/><text x="40.8638%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.01%)</title><rect x="40.6138%" y="981" width="0.0108%" height="15" fill="rgb(225,87,47)" fg:x="11302" fg:w="3"/><text x="40.8638%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="40.6138%" y="965" width="0.0108%" height="15" fill="rgb(217,185,16)" fg:x="11302" fg:w="3"/><text x="40.8638%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="40.6138%" y="949" width="0.0108%" height="15" fill="rgb(205,0,0)" fg:x="11302" fg:w="3"/><text x="40.8638%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="40.6138%" y="933" width="0.0108%" height="15" fill="rgb(207,116,45)" fg:x="11302" fg:w="3"/><text x="40.8638%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="40.6138%" y="917" width="0.0108%" height="15" fill="rgb(221,156,26)" fg:x="11302" fg:w="3"/><text x="40.8638%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="40.6138%" y="901" width="0.0108%" height="15" fill="rgb(213,140,4)" fg:x="11302" fg:w="3"/><text x="40.8638%" y="911.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="40.6138%" y="885" width="0.0108%" height="15" fill="rgb(231,224,15)" fg:x="11302" fg:w="3"/><text x="40.8638%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::zbuf::ZBuf&gt; (5 samples, 0.02%)</title><rect x="40.6138%" y="1013" width="0.0180%" height="15" fill="rgb(244,76,20)" fg:x="11302" fg:w="5"/><text x="40.8638%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="40.6353%" y="933" width="0.0108%" height="15" fill="rgb(238,117,7)" fg:x="11308" fg:w="3"/><text x="40.8853%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::shm::SharedMemoryBuf&gt; (3 samples, 0.01%)</title><rect x="40.6353%" y="917" width="0.0108%" height="15" fill="rgb(235,1,10)" fg:x="11308" fg:w="3"/><text x="40.8853%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_transport::unicast::establishment::authenticator::shm::InitAckProperty&gt; (6 samples, 0.02%)</title><rect x="40.6317%" y="1013" width="0.0216%" height="15" fill="rgb(216,165,6)" fg:x="11307" fg:w="6"/><text x="40.8817%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::zslice::ZSlice&gt; (6 samples, 0.02%)</title><rect x="40.6317%" y="997" width="0.0216%" height="15" fill="rgb(246,91,35)" fg:x="11307" fg:w="6"/><text x="40.8817%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::zslice::ZSliceBuffer&gt; (6 samples, 0.02%)</title><rect x="40.6317%" y="981" width="0.0216%" height="15" fill="rgb(228,96,24)" fg:x="11307" fg:w="6"/><text x="40.8817%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zenoh_buffers::shm::SharedMemoryBuf&gt;&gt; (6 samples, 0.02%)</title><rect x="40.6317%" y="965" width="0.0216%" height="15" fill="rgb(254,217,53)" fg:x="11307" fg:w="6"/><text x="40.8817%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="40.6317%" y="949" width="0.0216%" height="15" fill="rgb(209,60,0)" fg:x="11307" fg:w="6"/><text x="40.8817%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::SplitBuffer&gt;::slices (4 samples, 0.01%)</title><rect x="40.6569%" y="997" width="0.0144%" height="15" fill="rgb(250,93,26)" fg:x="11314" fg:w="4"/><text x="40.9069%" y="1007.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (9 samples, 0.03%)</title><rect x="40.6533%" y="1013" width="0.0323%" height="15" fill="rgb(211,9,40)" fg:x="11313" fg:w="9"/><text x="40.9033%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn zenoh_buffers::wbuf::ByteSliceExactIter+Item = &amp;[u8]&gt;&gt; (4 samples, 0.01%)</title><rect x="40.6713%" y="997" width="0.0144%" height="15" fill="rgb(242,57,20)" fg:x="11318" fg:w="4"/><text x="40.9213%" y="1007.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.01%)</title><rect x="40.6713%" y="981" width="0.0144%" height="15" fill="rgb(248,85,48)" fg:x="11318" fg:w="4"/><text x="40.9213%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="40.6713%" y="965" width="0.0144%" height="15" fill="rgb(212,117,2)" fg:x="11318" fg:w="4"/><text x="40.9213%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="40.6713%" y="949" width="0.0144%" height="15" fill="rgb(243,19,3)" fg:x="11318" fg:w="4"/><text x="40.9213%" y="959.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="40.6713%" y="933" width="0.0144%" height="15" fill="rgb(232,217,24)" fg:x="11318" fg:w="4"/><text x="40.9213%" y="943.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::as_slice (3 samples, 0.01%)</title><rect x="40.6928%" y="1013" width="0.0108%" height="15" fill="rgb(224,175,40)" fg:x="11324" fg:w="3"/><text x="40.9428%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::zslice::ZSliceBuffer&gt; (3 samples, 0.01%)</title><rect x="40.7072%" y="997" width="0.0108%" height="15" fill="rgb(212,162,32)" fg:x="11328" fg:w="3"/><text x="40.9572%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="40.7072%" y="981" width="0.0108%" height="15" fill="rgb(215,9,4)" fg:x="11328" fg:w="3"/><text x="40.9572%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="40.7072%" y="965" width="0.0108%" height="15" fill="rgb(242,42,7)" fg:x="11328" fg:w="3"/><text x="40.9572%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="40.7072%" y="949" width="0.0108%" height="15" fill="rgb(242,184,45)" fg:x="11328" fg:w="3"/><text x="40.9572%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.01%)</title><rect x="40.7072%" y="933" width="0.0108%" height="15" fill="rgb(228,111,51)" fg:x="11328" fg:w="3"/><text x="40.9572%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="40.7072%" y="917" width="0.0108%" height="15" fill="rgb(236,147,17)" fg:x="11328" fg:w="3"/><text x="40.9572%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.01%)</title><rect x="40.7072%" y="901" width="0.0108%" height="15" fill="rgb(210,75,22)" fg:x="11328" fg:w="3"/><text x="40.9572%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="40.7072%" y="885" width="0.0108%" height="15" fill="rgb(217,159,45)" fg:x="11328" fg:w="3"/><text x="40.9572%" y="895.50"></text></g><g><title>anyhow::error::&lt;impl core::ops::drop::Drop for anyhow::Error&gt;::drop (4 samples, 0.01%)</title><rect x="40.7180%" y="917" width="0.0144%" height="15" fill="rgb(245,165,53)" fg:x="11331" fg:w="4"/><text x="40.9680%" y="927.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="40.7324%" y="869" width="0.0108%" height="15" fill="rgb(251,190,50)" fg:x="11335" fg:w="3"/><text x="40.9824%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt; (8 samples, 0.03%)</title><rect x="40.7180%" y="965" width="0.0287%" height="15" fill="rgb(208,203,29)" fg:x="11331" fg:w="8"/><text x="40.9680%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_core::zresult::ZError&gt; (8 samples, 0.03%)</title><rect x="40.7180%" y="949" width="0.0287%" height="15" fill="rgb(207,209,35)" fg:x="11331" fg:w="8"/><text x="40.9680%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;anyhow::Error&gt; (8 samples, 0.03%)</title><rect x="40.7180%" y="933" width="0.0287%" height="15" fill="rgb(230,144,49)" fg:x="11331" fg:w="8"/><text x="40.9680%" y="943.50"></text></g><g><title>anyhow::error::object_drop (4 samples, 0.01%)</title><rect x="40.7324%" y="917" width="0.0144%" height="15" fill="rgb(229,31,6)" fg:x="11335" fg:w="4"/><text x="40.9824%" y="927.50"></text></g><g><title>core::mem::drop (4 samples, 0.01%)</title><rect x="40.7324%" y="901" width="0.0144%" height="15" fill="rgb(251,129,24)" fg:x="11335" fg:w="4"/><text x="40.9824%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;anyhow::error::ErrorImpl&lt;anyhow::wrapper::MessageError&lt;alloc::string::String&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="40.7324%" y="885" width="0.0144%" height="15" fill="rgb(235,105,15)" fg:x="11335" fg:w="4"/><text x="40.9824%" y="895.50"></text></g><g><title>anyhow::error::&lt;impl core::ops::drop::Drop for anyhow::Error&gt;::drop (7 samples, 0.03%)</title><rect x="40.7575%" y="869" width="0.0252%" height="15" fill="rgb(216,52,43)" fg:x="11342" fg:w="7"/><text x="41.0075%" y="879.50"></text></g><g><title>anyhow::error::vtable (4 samples, 0.01%)</title><rect x="40.7683%" y="853" width="0.0144%" height="15" fill="rgb(238,144,41)" fg:x="11345" fg:w="4"/><text x="41.0183%" y="863.50"></text></g><g><title>anyhow::error::object_drop (3 samples, 0.01%)</title><rect x="40.7827%" y="869" width="0.0108%" height="15" fill="rgb(243,63,9)" fg:x="11349" fg:w="3"/><text x="41.0327%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt; (14 samples, 0.05%)</title><rect x="40.7467%" y="917" width="0.0503%" height="15" fill="rgb(246,208,1)" fg:x="11339" fg:w="14"/><text x="40.9967%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_core::zresult::ZError&gt; (13 samples, 0.05%)</title><rect x="40.7503%" y="901" width="0.0467%" height="15" fill="rgb(233,182,18)" fg:x="11340" fg:w="13"/><text x="41.0003%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;anyhow::Error&gt; (11 samples, 0.04%)</title><rect x="40.7575%" y="885" width="0.0395%" height="15" fill="rgb(242,224,8)" fg:x="11342" fg:w="11"/><text x="41.0075%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="40.8006%" y="901" width="0.0108%" height="15" fill="rgb(243,54,37)" fg:x="11354" fg:w="3"/><text x="41.0506%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="40.8006%" y="885" width="0.0108%" height="15" fill="rgb(233,192,12)" fg:x="11354" fg:w="3"/><text x="41.0506%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.01%)</title><rect x="40.8006%" y="869" width="0.0108%" height="15" fill="rgb(251,192,53)" fg:x="11354" fg:w="3"/><text x="41.0506%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.01%)</title><rect x="40.8006%" y="853" width="0.0108%" height="15" fill="rgb(246,141,26)" fg:x="11354" fg:w="3"/><text x="41.0506%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.01%)</title><rect x="40.8006%" y="837" width="0.0108%" height="15" fill="rgb(239,195,19)" fg:x="11354" fg:w="3"/><text x="41.0506%" y="847.50"></text></g><g><title>std::fs::buffer_capacity_required (3 samples, 0.01%)</title><rect x="40.8222%" y="869" width="0.0108%" height="15" fill="rgb(241,16,39)" fg:x="11360" fg:w="3"/><text x="41.0722%" y="879.50"></text></g><g><title>std::fs::File::metadata (3 samples, 0.01%)</title><rect x="40.8222%" y="853" width="0.0108%" height="15" fill="rgb(223,13,53)" fg:x="11360" fg:w="3"/><text x="41.0722%" y="863.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (5 samples, 0.02%)</title><rect x="40.8186%" y="885" width="0.0180%" height="15" fill="rgb(214,227,0)" fg:x="11359" fg:w="5"/><text x="41.0686%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8 samples, 0.03%)</title><rect x="40.8402%" y="885" width="0.0287%" height="15" fill="rgb(228,103,26)" fg:x="11365" fg:w="8"/><text x="41.0902%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.03%)</title><rect x="40.8402%" y="869" width="0.0287%" height="15" fill="rgb(254,177,53)" fg:x="11365" fg:w="8"/><text x="41.0902%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.03%)</title><rect x="40.8402%" y="853" width="0.0287%" height="15" fill="rgb(208,201,34)" fg:x="11365" fg:w="8"/><text x="41.0902%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="40.8402%" y="837" width="0.0287%" height="15" fill="rgb(212,39,5)" fg:x="11365" fg:w="8"/><text x="41.0902%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.03%)</title><rect x="40.8402%" y="821" width="0.0287%" height="15" fill="rgb(246,117,3)" fg:x="11365" fg:w="8"/><text x="41.0902%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.03%)</title><rect x="40.8402%" y="805" width="0.0287%" height="15" fill="rgb(244,118,39)" fg:x="11365" fg:w="8"/><text x="41.0902%" y="815.50"></text></g><g><title>cfree (8 samples, 0.03%)</title><rect x="40.8402%" y="789" width="0.0287%" height="15" fill="rgb(241,64,10)" fg:x="11365" fg:w="8"/><text x="41.0902%" y="799.50"></text></g><g><title>shared_memory::ShmemConf::open (20 samples, 0.07%)</title><rect x="40.8150%" y="901" width="0.0719%" height="15" fill="rgb(229,39,44)" fg:x="11358" fg:w="20"/><text x="41.0650%" y="911.50"></text></g><g><title>std::fs::File::open (4 samples, 0.01%)</title><rect x="40.8725%" y="885" width="0.0144%" height="15" fill="rgb(230,226,3)" fg:x="11374" fg:w="4"/><text x="41.1225%" y="895.50"></text></g><g><title>std::fs::OpenOptions::open (4 samples, 0.01%)</title><rect x="40.8725%" y="869" width="0.0144%" height="15" fill="rgb(222,13,42)" fg:x="11374" fg:w="4"/><text x="41.1225%" y="879.50"></text></g><g><title>std::fs::OpenOptions::_open (4 samples, 0.01%)</title><rect x="40.8725%" y="853" width="0.0144%" height="15" fill="rgb(247,180,54)" fg:x="11374" fg:w="4"/><text x="41.1225%" y="863.50"></text></g><g><title>std::sys::unix::fs::File::open (3 samples, 0.01%)</title><rect x="40.8761%" y="837" width="0.0108%" height="15" fill="rgb(205,96,16)" fg:x="11375" fg:w="3"/><text x="41.1261%" y="847.50"></text></g><g><title>std::sys::unix::fs::File::open_c (3 samples, 0.01%)</title><rect x="40.8761%" y="821" width="0.0108%" height="15" fill="rgb(205,100,21)" fg:x="11375" fg:w="3"/><text x="41.1261%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.01%)</title><rect x="40.9013%" y="869" width="0.0108%" height="15" fill="rgb(248,51,4)" fg:x="11382" fg:w="3"/><text x="41.1513%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="40.9013%" y="853" width="0.0108%" height="15" fill="rgb(217,197,30)" fg:x="11382" fg:w="3"/><text x="41.1513%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.01%)</title><rect x="40.9013%" y="837" width="0.0108%" height="15" fill="rgb(240,179,40)" fg:x="11382" fg:w="3"/><text x="41.1513%" y="847.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="40.9552%" y="645" width="0.0180%" height="15" fill="rgb(212,185,35)" fg:x="11397" fg:w="5"/><text x="41.2052%" y="655.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::connect_map_to_shm (50 samples, 0.18%)</title><rect x="40.7970%" y="917" width="0.1797%" height="15" fill="rgb(251,222,31)" fg:x="11353" fg:w="50"/><text x="41.0470%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (25 samples, 0.09%)</title><rect x="40.8869%" y="901" width="0.0898%" height="15" fill="rgb(208,140,36)" fg:x="11378" fg:w="25"/><text x="41.1369%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.09%)</title><rect x="40.8869%" y="885" width="0.0898%" height="15" fill="rgb(220,148,1)" fg:x="11378" fg:w="25"/><text x="41.1369%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (18 samples, 0.06%)</title><rect x="40.9120%" y="869" width="0.0647%" height="15" fill="rgb(254,4,28)" fg:x="11385" fg:w="18"/><text x="41.1620%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (17 samples, 0.06%)</title><rect x="40.9156%" y="853" width="0.0611%" height="15" fill="rgb(222,185,44)" fg:x="11386" fg:w="17"/><text x="41.1656%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.06%)</title><rect x="40.9156%" y="837" width="0.0611%" height="15" fill="rgb(215,74,39)" fg:x="11386" fg:w="17"/><text x="41.1656%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (17 samples, 0.06%)</title><rect x="40.9156%" y="821" width="0.0611%" height="15" fill="rgb(247,86,4)" fg:x="11386" fg:w="17"/><text x="41.1656%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (16 samples, 0.06%)</title><rect x="40.9192%" y="805" width="0.0575%" height="15" fill="rgb(231,105,32)" fg:x="11387" fg:w="16"/><text x="41.1692%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (16 samples, 0.06%)</title><rect x="40.9192%" y="789" width="0.0575%" height="15" fill="rgb(222,65,35)" fg:x="11387" fg:w="16"/><text x="41.1692%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (15 samples, 0.05%)</title><rect x="40.9228%" y="773" width="0.0539%" height="15" fill="rgb(218,145,35)" fg:x="11388" fg:w="15"/><text x="41.1728%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (14 samples, 0.05%)</title><rect x="40.9264%" y="757" width="0.0503%" height="15" fill="rgb(208,7,15)" fg:x="11389" fg:w="14"/><text x="41.1764%" y="767.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (14 samples, 0.05%)</title><rect x="40.9264%" y="741" width="0.0503%" height="15" fill="rgb(209,83,13)" fg:x="11389" fg:w="14"/><text x="41.1764%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.05%)</title><rect x="40.9264%" y="725" width="0.0503%" height="15" fill="rgb(218,3,10)" fg:x="11389" fg:w="14"/><text x="41.1764%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.05%)</title><rect x="40.9264%" y="709" width="0.0503%" height="15" fill="rgb(211,219,4)" fg:x="11389" fg:w="14"/><text x="41.1764%" y="719.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.05%)</title><rect x="40.9264%" y="693" width="0.0503%" height="15" fill="rgb(228,194,12)" fg:x="11389" fg:w="14"/><text x="41.1764%" y="703.50"></text></g><g><title>malloc (13 samples, 0.05%)</title><rect x="40.9300%" y="677" width="0.0467%" height="15" fill="rgb(210,175,7)" fg:x="11390" fg:w="13"/><text x="41.1800%" y="687.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="40.9372%" y="661" width="0.0395%" height="15" fill="rgb(243,132,6)" fg:x="11392" fg:w="11"/><text x="41.1872%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::shm::SharedMemoryBufInfo as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="40.9839%" y="901" width="0.0180%" height="15" fill="rgb(207,72,18)" fg:x="11405" fg:w="5"/><text x="41.2339%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="40.9839%" y="885" width="0.0180%" height="15" fill="rgb(236,1,18)" fg:x="11405" fg:w="5"/><text x="41.2339%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (74 samples, 0.27%)</title><rect x="40.7467%" y="949" width="0.2659%" height="15" fill="rgb(227,0,18)" fg:x="11339" fg:w="74"/><text x="40.9967%" y="959.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (74 samples, 0.27%)</title><rect x="40.7467%" y="933" width="0.2659%" height="15" fill="rgb(247,37,5)" fg:x="11339" fg:w="74"/><text x="40.9967%" y="943.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::try_read_shmbuf (10 samples, 0.04%)</title><rect x="40.9767%" y="917" width="0.0359%" height="15" fill="rgb(237,179,24)" fg:x="11403" fg:w="10"/><text x="41.2267%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.01%)</title><rect x="41.0019%" y="901" width="0.0108%" height="15" fill="rgb(226,53,20)" fg:x="11410" fg:w="3"/><text x="41.2519%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.01%)</title><rect x="41.0019%" y="885" width="0.0108%" height="15" fill="rgb(247,75,7)" fg:x="11410" fg:w="3"/><text x="41.2519%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.01%)</title><rect x="41.0019%" y="869" width="0.0108%" height="15" fill="rgb(233,96,12)" fg:x="11410" fg:w="3"/><text x="41.2519%" y="879.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (84 samples, 0.30%)</title><rect x="40.7180%" y="997" width="0.3019%" height="15" fill="rgb(224,125,0)" fg:x="11331" fg:w="84"/><text x="40.9680%" y="1007.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (84 samples, 0.30%)</title><rect x="40.7180%" y="981" width="0.3019%" height="15" fill="rgb(224,92,25)" fg:x="11331" fg:w="84"/><text x="40.9680%" y="991.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (76 samples, 0.27%)</title><rect x="40.7467%" y="965" width="0.2731%" height="15" fill="rgb(224,42,24)" fg:x="11339" fg:w="76"/><text x="40.9967%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (365 samples, 1.31%)</title><rect x="39.7226%" y="1061" width="1.3116%" height="15" fill="rgb(234,132,49)" fg:x="11054" fg:w="365"/><text x="39.9726%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (365 samples, 1.31%)</title><rect x="39.7226%" y="1045" width="1.3116%" height="15" fill="rgb(248,100,35)" fg:x="11054" fg:w="365"/><text x="39.9726%" y="1055.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (132 samples, 0.47%)</title><rect x="40.5599%" y="1029" width="0.4743%" height="15" fill="rgb(239,94,40)" fg:x="11287" fg:w="132"/><text x="40.8099%" y="1039.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (92 samples, 0.33%)</title><rect x="40.7036%" y="1013" width="0.3306%" height="15" fill="rgb(235,139,28)" fg:x="11327" fg:w="92"/><text x="40.9536%" y="1023.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::try_read_shmbuf (3 samples, 0.01%)</title><rect x="41.0234%" y="997" width="0.0108%" height="15" fill="rgb(217,144,7)" fg:x="11416" fg:w="3"/><text x="41.2734%" y="1007.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack (4 samples, 0.01%)</title><rect x="41.0378%" y="1061" width="0.0144%" height="15" fill="rgb(227,55,4)" fg:x="11420" fg:w="4"/><text x="41.2878%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.01%)</title><rect x="41.0378%" y="1045" width="0.0144%" height="15" fill="rgb(252,82,54)" fg:x="11420" fg:w="4"/><text x="41.2878%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="41.0378%" y="1029" width="0.0144%" height="15" fill="rgb(245,172,4)" fg:x="11420" fg:w="4"/><text x="41.2878%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="41.0378%" y="1013" width="0.0144%" height="15" fill="rgb(207,26,27)" fg:x="11420" fg:w="4"/><text x="41.2878%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="41.0378%" y="997" width="0.0144%" height="15" fill="rgb(252,98,18)" fg:x="11420" fg:w="4"/><text x="41.2878%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="41.0378%" y="981" width="0.0144%" height="15" fill="rgb(244,8,26)" fg:x="11420" fg:w="4"/><text x="41.2878%" y="991.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="41.0378%" y="965" width="0.0144%" height="15" fill="rgb(237,173,45)" fg:x="11420" fg:w="4"/><text x="41.2878%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::rwlock::RwLockReadGuard&lt;std::collections::hash::set::HashSet&lt;zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="41.0630%" y="1061" width="0.0108%" height="15" fill="rgb(208,213,49)" fg:x="11427" fg:w="3"/><text x="41.3130%" y="1071.50"></text></g><g><title>&lt;async_lock::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="41.0630%" y="1045" width="0.0108%" height="15" fill="rgb(212,122,37)" fg:x="11427" fg:w="3"/><text x="41.3130%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.01%)</title><rect x="41.0917%" y="1029" width="0.0144%" height="15" fill="rgb(213,80,17)" fg:x="11435" fg:w="4"/><text x="41.3417%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="41.0917%" y="1013" width="0.0144%" height="15" fill="rgb(206,210,43)" fg:x="11435" fg:w="4"/><text x="41.3417%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="41.0917%" y="997" width="0.0144%" height="15" fill="rgb(229,214,3)" fg:x="11435" fg:w="4"/><text x="41.3417%" y="1007.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="41.0917%" y="981" width="0.0144%" height="15" fill="rgb(235,213,29)" fg:x="11435" fg:w="4"/><text x="41.3417%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Send&gt;&gt;&gt; (10 samples, 0.04%)</title><rect x="41.0737%" y="1061" width="0.0359%" height="15" fill="rgb(248,135,26)" fg:x="11430" fg:w="10"/><text x="41.3237%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Send&gt;&gt; (10 samples, 0.04%)</title><rect x="41.0737%" y="1045" width="0.0359%" height="15" fill="rgb(242,188,12)" fg:x="11430" fg:w="10"/><text x="41.3237%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::establishment::EstablishmentProperties::insert (5 samples, 0.02%)</title><rect x="41.1133%" y="1061" width="0.0180%" height="15" fill="rgb(245,38,12)" fg:x="11441" fg:w="5"/><text x="41.3633%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::establishment::EstablishmentProperties::remove (3 samples, 0.01%)</title><rect x="41.1312%" y="1061" width="0.0108%" height="15" fill="rgb(218,42,13)" fg:x="11446" fg:w="3"/><text x="41.3812%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.02%)</title><rect x="41.1456%" y="997" width="0.0180%" height="15" fill="rgb(238,132,49)" fg:x="11450" fg:w="5"/><text x="41.3956%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="41.1456%" y="981" width="0.0180%" height="15" fill="rgb(209,196,19)" fg:x="11450" fg:w="5"/><text x="41.3956%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.02%)</title><rect x="41.1456%" y="965" width="0.0180%" height="15" fill="rgb(244,131,22)" fg:x="11450" fg:w="5"/><text x="41.3956%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.01%)</title><rect x="41.1528%" y="949" width="0.0108%" height="15" fill="rgb(223,18,34)" fg:x="11452" fg:w="3"/><text x="41.4028%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="41.1528%" y="933" width="0.0108%" height="15" fill="rgb(252,124,54)" fg:x="11452" fg:w="3"/><text x="41.4028%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.01%)</title><rect x="41.1528%" y="917" width="0.0108%" height="15" fill="rgb(229,106,42)" fg:x="11452" fg:w="3"/><text x="41.4028%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.03%)</title><rect x="41.1420%" y="1045" width="0.0287%" height="15" fill="rgb(221,129,1)" fg:x="11449" fg:w="8"/><text x="41.3920%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBuf as core::convert::From&lt;zenoh_buffers::wbuf::WBuf&gt;&gt;::from (8 samples, 0.03%)</title><rect x="41.1420%" y="1029" width="0.0287%" height="15" fill="rgb(229,74,15)" fg:x="11449" fg:w="8"/><text x="41.3920%" y="1039.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::to_zslices (7 samples, 0.03%)</title><rect x="41.1456%" y="1013" width="0.0252%" height="15" fill="rgb(210,206,50)" fg:x="11450" fg:w="7"/><text x="41.3956%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::establishment::attachment_from_properties (11 samples, 0.04%)</title><rect x="41.1420%" y="1061" width="0.0395%" height="15" fill="rgb(251,114,31)" fg:x="11449" fg:w="11"/><text x="41.3920%" y="1071.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_properties (3 samples, 0.01%)</title><rect x="41.1708%" y="1045" width="0.0108%" height="15" fill="rgb(215,225,28)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_property (3 samples, 0.01%)</title><rect x="41.1708%" y="1029" width="0.0108%" height="15" fill="rgb(237,109,14)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="1039.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_bytes_array (3 samples, 0.01%)</title><rect x="41.1708%" y="1013" width="0.0108%" height="15" fill="rgb(230,13,37)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="1023.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;[u8]&gt;&gt;::write (3 samples, 0.01%)</title><rect x="41.1708%" y="997" width="0.0108%" height="15" fill="rgb(231,40,28)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (3 samples, 0.01%)</title><rect x="41.1708%" y="981" width="0.0108%" height="15" fill="rgb(231,202,18)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="991.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (3 samples, 0.01%)</title><rect x="41.1708%" y="965" width="0.0108%" height="15" fill="rgb(225,33,18)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.01%)</title><rect x="41.1708%" y="949" width="0.0108%" height="15" fill="rgb(223,64,47)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="41.1708%" y="933" width="0.0108%" height="15" fill="rgb(234,114,13)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.01%)</title><rect x="41.1708%" y="917" width="0.0108%" height="15" fill="rgb(248,56,40)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="41.1708%" y="901" width="0.0108%" height="15" fill="rgb(221,194,21)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.01%)</title><rect x="41.1708%" y="885" width="0.0108%" height="15" fill="rgb(242,108,46)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.01%)</title><rect x="41.1708%" y="869" width="0.0108%" height="15" fill="rgb(220,106,10)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="41.1708%" y="853" width="0.0108%" height="15" fill="rgb(211,88,4)" fg:x="11457" fg:w="3"/><text x="41.4208%" y="863.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (439 samples, 1.58%)</title><rect x="39.6076%" y="1077" width="1.5775%" height="15" fill="rgb(214,95,34)" fg:x="11022" fg:w="439"/><text x="39.8576%" y="1087.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::get_init_syn_properties::{{closure}} (4 samples, 0.01%)</title><rect x="41.1923%" y="1029" width="0.0144%" height="15" fill="rgb(250,160,33)" fg:x="11463" fg:w="4"/><text x="41.4423%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.03%)</title><rect x="41.1923%" y="1061" width="0.0252%" height="15" fill="rgb(225,29,10)" fg:x="11463" fg:w="7"/><text x="41.4423%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.03%)</title><rect x="41.1923%" y="1045" width="0.0252%" height="15" fill="rgb(224,28,30)" fg:x="11463" fg:w="7"/><text x="41.4423%" y="1055.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::get_init_syn_properties::{{closure}} (3 samples, 0.01%)</title><rect x="41.2067%" y="1029" width="0.0108%" height="15" fill="rgb(231,77,4)" fg:x="11467" fg:w="3"/><text x="41.4567%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_syn::send::{{closure}} (12 samples, 0.04%)</title><rect x="41.1851%" y="1077" width="0.0431%" height="15" fill="rgb(209,63,21)" fg:x="11461" fg:w="12"/><text x="41.4351%" y="1087.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (9 samples, 0.03%)</title><rect x="41.2426%" y="917" width="0.0323%" height="15" fill="rgb(226,22,11)" fg:x="11477" fg:w="9"/><text x="41.4926%" y="927.50"></text></g><g><title>std::sys_common::net::TcpStream::read (9 samples, 0.03%)</title><rect x="41.2426%" y="901" width="0.0323%" height="15" fill="rgb(216,82,30)" fg:x="11477" fg:w="9"/><text x="41.4926%" y="911.50"></text></g><g><title>std::sys::unix::net::Socket::read (9 samples, 0.03%)</title><rect x="41.2426%" y="885" width="0.0323%" height="15" fill="rgb(246,227,38)" fg:x="11477" fg:w="9"/><text x="41.4926%" y="895.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (9 samples, 0.03%)</title><rect x="41.2426%" y="869" width="0.0323%" height="15" fill="rgb(251,203,53)" fg:x="11477" fg:w="9"/><text x="41.4926%" y="879.50"></text></g><g><title>recv (9 samples, 0.03%)</title><rect x="41.2426%" y="853" width="0.0323%" height="15" fill="rgb(254,101,1)" fg:x="11477" fg:w="9"/><text x="41.4926%" y="863.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="41.2462%" y="837" width="0.0287%" height="15" fill="rgb(241,180,5)" fg:x="11478" fg:w="8"/><text x="41.4962%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="41.2462%" y="821" width="0.0287%" height="15" fill="rgb(218,168,4)" fg:x="11478" fg:w="8"/><text x="41.4962%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="41.2462%" y="805" width="0.0287%" height="15" fill="rgb(224,223,32)" fg:x="11478" fg:w="8"/><text x="41.4962%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="41.2462%" y="789" width="0.0287%" height="15" fill="rgb(236,106,22)" fg:x="11478" fg:w="8"/><text x="41.4962%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="41.2534%" y="773" width="0.0216%" height="15" fill="rgb(206,121,5)" fg:x="11480" fg:w="6"/><text x="41.5034%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="41.2570%" y="757" width="0.0180%" height="15" fill="rgb(233,87,28)" fg:x="11481" fg:w="5"/><text x="41.5070%" y="767.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (14 samples, 0.05%)</title><rect x="41.2390%" y="933" width="0.0503%" height="15" fill="rgb(236,137,17)" fg:x="11476" fg:w="14"/><text x="41.4890%" y="943.50"></text></g><g><title>async_io::Async&lt;T&gt;::poll_readable (4 samples, 0.01%)</title><rect x="41.2750%" y="917" width="0.0144%" height="15" fill="rgb(209,183,38)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="927.50"></text></g><g><title>async_io::reactor::Source::poll_ready (4 samples, 0.01%)</title><rect x="41.2750%" y="901" width="0.0144%" height="15" fill="rgb(206,162,44)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="911.50"></text></g><g><title>polling::Poller::modify (4 samples, 0.01%)</title><rect x="41.2750%" y="885" width="0.0144%" height="15" fill="rgb(237,70,39)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="895.50"></text></g><g><title>polling::epoll::Poller::modify (4 samples, 0.01%)</title><rect x="41.2750%" y="869" width="0.0144%" height="15" fill="rgb(212,176,5)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="879.50"></text></g><g><title>polling::epoll::Poller::ctl (4 samples, 0.01%)</title><rect x="41.2750%" y="853" width="0.0144%" height="15" fill="rgb(232,95,16)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="863.50"></text></g><g><title>epoll_ctl (4 samples, 0.01%)</title><rect x="41.2750%" y="837" width="0.0144%" height="15" fill="rgb(219,115,35)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="41.2750%" y="821" width="0.0144%" height="15" fill="rgb(251,67,27)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="41.2750%" y="805" width="0.0144%" height="15" fill="rgb(222,95,40)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="41.2750%" y="789" width="0.0144%" height="15" fill="rgb(250,35,16)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="41.2750%" y="773" width="0.0144%" height="15" fill="rgb(224,86,44)" fg:x="11486" fg:w="4"/><text x="41.5250%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 0.05%)</title><rect x="41.2390%" y="1029" width="0.0539%" height="15" fill="rgb(237,53,53)" fg:x="11476" fg:w="15"/><text x="41.4890%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.05%)</title><rect x="41.2390%" y="1013" width="0.0539%" height="15" fill="rgb(208,171,33)" fg:x="11476" fg:w="15"/><text x="41.4890%" y="1023.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (15 samples, 0.05%)</title><rect x="41.2390%" y="997" width="0.0539%" height="15" fill="rgb(222,64,27)" fg:x="11476" fg:w="15"/><text x="41.4890%" y="1007.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.05%)</title><rect x="41.2390%" y="981" width="0.0539%" height="15" fill="rgb(221,121,35)" fg:x="11476" fg:w="15"/><text x="41.4890%" y="991.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (15 samples, 0.05%)</title><rect x="41.2390%" y="965" width="0.0539%" height="15" fill="rgb(228,137,42)" fg:x="11476" fg:w="15"/><text x="41.4890%" y="975.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (15 samples, 0.05%)</title><rect x="41.2390%" y="949" width="0.0539%" height="15" fill="rgb(227,54,21)" fg:x="11476" fg:w="15"/><text x="41.4890%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.07%)</title><rect x="41.2390%" y="1061" width="0.0719%" height="15" fill="rgb(240,168,33)" fg:x="11476" fg:w="20"/><text x="41.4890%" y="1071.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (20 samples, 0.07%)</title><rect x="41.2390%" y="1045" width="0.0719%" height="15" fill="rgb(243,159,6)" fg:x="11476" fg:w="20"/><text x="41.4890%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_ack::recv::{{closure}} (25 samples, 0.09%)</title><rect x="41.2283%" y="1077" width="0.0898%" height="15" fill="rgb(205,211,41)" fg:x="11473" fg:w="25"/><text x="41.4783%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="41.3397%" y="1029" width="0.0323%" height="15" fill="rgb(253,30,1)" fg:x="11504" fg:w="9"/><text x="41.5897%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="41.3397%" y="1013" width="0.0323%" height="15" fill="rgb(226,80,18)" fg:x="11504" fg:w="9"/><text x="41.5897%" y="1023.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all::{{closure}} (9 samples, 0.03%)</title><rect x="41.3397%" y="997" width="0.0323%" height="15" fill="rgb(253,156,46)" fg:x="11504" fg:w="9"/><text x="41.5897%" y="1007.50"></text></g><g><title>&lt;async_std::io::write::write_all::WriteAllFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="41.3397%" y="981" width="0.0323%" height="15" fill="rgb(248,87,27)" fg:x="11504" fg:w="9"/><text x="41.5897%" y="991.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (8 samples, 0.03%)</title><rect x="41.3433%" y="965" width="0.0287%" height="15" fill="rgb(227,122,2)" fg:x="11505" fg:w="8"/><text x="41.5933%" y="975.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (8 samples, 0.03%)</title><rect x="41.3433%" y="949" width="0.0287%" height="15" fill="rgb(229,94,39)" fg:x="11505" fg:w="8"/><text x="41.5933%" y="959.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (8 samples, 0.03%)</title><rect x="41.3433%" y="933" width="0.0287%" height="15" fill="rgb(225,173,31)" fg:x="11505" fg:w="8"/><text x="41.5933%" y="943.50"></text></g><g><title>std::sys_common::net::TcpStream::write (8 samples, 0.03%)</title><rect x="41.3433%" y="917" width="0.0287%" height="15" fill="rgb(239,176,30)" fg:x="11505" fg:w="8"/><text x="41.5933%" y="927.50"></text></g><g><title>__send (8 samples, 0.03%)</title><rect x="41.3433%" y="901" width="0.0287%" height="15" fill="rgb(212,104,21)" fg:x="11505" fg:w="8"/><text x="41.5933%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="41.3540%" y="885" width="0.0180%" height="15" fill="rgb(240,209,40)" fg:x="11508" fg:w="5"/><text x="41.6040%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="41.3540%" y="869" width="0.0180%" height="15" fill="rgb(234,195,5)" fg:x="11508" fg:w="5"/><text x="41.6040%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="41.3540%" y="853" width="0.0180%" height="15" fill="rgb(238,213,1)" fg:x="11508" fg:w="5"/><text x="41.6040%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="41.3576%" y="837" width="0.0144%" height="15" fill="rgb(235,182,54)" fg:x="11509" fg:w="4"/><text x="41.6076%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="41.3756%" y="949" width="0.0108%" height="15" fill="rgb(229,50,46)" fg:x="11514" fg:w="3"/><text x="41.6256%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="41.3756%" y="933" width="0.0108%" height="15" fill="rgb(219,145,13)" fg:x="11514" fg:w="3"/><text x="41.6256%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zslice_array (4 samples, 0.01%)</title><rect x="41.3756%" y="1013" width="0.0144%" height="15" fill="rgb(220,226,10)" fg:x="11514" fg:w="4"/><text x="41.6256%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::InsertBuffer&lt;T&gt;&gt;::append (4 samples, 0.01%)</title><rect x="41.3756%" y="997" width="0.0144%" height="15" fill="rgb(248,47,30)" fg:x="11514" fg:w="4"/><text x="41.6256%" y="1007.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_zslice (4 samples, 0.01%)</title><rect x="41.3756%" y="981" width="0.0144%" height="15" fill="rgb(231,209,44)" fg:x="11514" fg:w="4"/><text x="41.6256%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="41.3756%" y="965" width="0.0144%" height="15" fill="rgb(209,80,30)" fg:x="11514" fg:w="4"/><text x="41.6256%" y="975.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_open_syn (6 samples, 0.02%)</title><rect x="41.3756%" y="1029" width="0.0216%" height="15" fill="rgb(232,9,14)" fg:x="11514" fg:w="6"/><text x="41.6256%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.01%)</title><rect x="41.4043%" y="901" width="0.0144%" height="15" fill="rgb(243,91,43)" fg:x="11522" fg:w="4"/><text x="41.6543%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="41.4043%" y="885" width="0.0144%" height="15" fill="rgb(231,90,52)" fg:x="11522" fg:w="4"/><text x="41.6543%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="41.4043%" y="869" width="0.0144%" height="15" fill="rgb(253,192,44)" fg:x="11522" fg:w="4"/><text x="41.6543%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.01%)</title><rect x="41.4043%" y="853" width="0.0144%" height="15" fill="rgb(241,66,31)" fg:x="11522" fg:w="4"/><text x="41.6543%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.01%)</title><rect x="41.4043%" y="837" width="0.0144%" height="15" fill="rgb(235,81,37)" fg:x="11522" fg:w="4"/><text x="41.6543%" y="847.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.01%)</title><rect x="41.4043%" y="821" width="0.0144%" height="15" fill="rgb(223,221,9)" fg:x="11522" fg:w="4"/><text x="41.6543%" y="831.50"></text></g><g><title>realloc (4 samples, 0.01%)</title><rect x="41.4043%" y="805" width="0.0144%" height="15" fill="rgb(242,180,7)" fg:x="11522" fg:w="4"/><text x="41.6543%" y="815.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="41.4043%" y="789" width="0.0144%" height="15" fill="rgb(243,78,19)" fg:x="11522" fg:w="4"/><text x="41.6543%" y="799.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_transport_message (8 samples, 0.03%)</title><rect x="41.3972%" y="1029" width="0.0287%" height="15" fill="rgb(233,23,17)" fg:x="11520" fg:w="8"/><text x="41.6472%" y="1039.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_deco_attachment (6 samples, 0.02%)</title><rect x="41.4043%" y="1013" width="0.0216%" height="15" fill="rgb(252,122,45)" fg:x="11522" fg:w="6"/><text x="41.6543%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zbuf (6 samples, 0.02%)</title><rect x="41.4043%" y="997" width="0.0216%" height="15" fill="rgb(247,108,20)" fg:x="11522" fg:w="6"/><text x="41.6543%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zbuf_flat (6 samples, 0.02%)</title><rect x="41.4043%" y="981" width="0.0216%" height="15" fill="rgb(235,84,21)" fg:x="11522" fg:w="6"/><text x="41.6543%" y="991.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zbuf_slices (6 samples, 0.02%)</title><rect x="41.4043%" y="965" width="0.0216%" height="15" fill="rgb(247,129,10)" fg:x="11522" fg:w="6"/><text x="41.6543%" y="975.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::InsertBuffer&lt;T&gt;&gt;::append (6 samples, 0.02%)</title><rect x="41.4043%" y="949" width="0.0216%" height="15" fill="rgb(208,173,14)" fg:x="11522" fg:w="6"/><text x="41.6543%" y="959.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_zslice (6 samples, 0.02%)</title><rect x="41.4043%" y="933" width="0.0216%" height="15" fill="rgb(236,31,38)" fg:x="11522" fg:w="6"/><text x="41.6543%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.02%)</title><rect x="41.4043%" y="917" width="0.0216%" height="15" fill="rgb(232,65,17)" fg:x="11522" fg:w="6"/><text x="41.6543%" y="927.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (3 samples, 0.01%)</title><rect x="41.4582%" y="853" width="0.0108%" height="15" fill="rgb(224,45,49)" fg:x="11537" fg:w="3"/><text x="41.7082%" y="863.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::SplitBuffer&gt;::slices (10 samples, 0.04%)</title><rect x="41.4403%" y="1013" width="0.0359%" height="15" fill="rgb(225,2,53)" fg:x="11532" fg:w="10"/><text x="41.6903%" y="1023.50"></text></g><g><title>zenoh_buffers::wbuf::SizedIter&lt;I&gt;::new (7 samples, 0.03%)</title><rect x="41.4511%" y="997" width="0.0252%" height="15" fill="rgb(248,210,53)" fg:x="11535" fg:w="7"/><text x="41.7011%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (7 samples, 0.03%)</title><rect x="41.4511%" y="981" width="0.0252%" height="15" fill="rgb(211,1,30)" fg:x="11535" fg:w="7"/><text x="41.7011%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.03%)</title><rect x="41.4511%" y="965" width="0.0252%" height="15" fill="rgb(224,96,15)" fg:x="11535" fg:w="7"/><text x="41.7011%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.03%)</title><rect x="41.4511%" y="949" width="0.0252%" height="15" fill="rgb(252,45,11)" fg:x="11535" fg:w="7"/><text x="41.7011%" y="959.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (7 samples, 0.03%)</title><rect x="41.4511%" y="933" width="0.0252%" height="15" fill="rgb(220,125,38)" fg:x="11535" fg:w="7"/><text x="41.7011%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::SplitBuffer&gt;::slices::{{closure}} (6 samples, 0.02%)</title><rect x="41.4546%" y="917" width="0.0216%" height="15" fill="rgb(243,161,33)" fg:x="11536" fg:w="6"/><text x="41.7046%" y="927.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::as_slice (6 samples, 0.02%)</title><rect x="41.4546%" y="901" width="0.0216%" height="15" fill="rgb(248,197,34)" fg:x="11536" fg:w="6"/><text x="41.7046%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (6 samples, 0.02%)</title><rect x="41.4546%" y="885" width="0.0216%" height="15" fill="rgb(228,165,23)" fg:x="11536" fg:w="6"/><text x="41.7046%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="41.4582%" y="869" width="0.0180%" height="15" fill="rgb(236,94,38)" fg:x="11537" fg:w="5"/><text x="41.7082%" y="879.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (16 samples, 0.06%)</title><rect x="41.4403%" y="1029" width="0.0575%" height="15" fill="rgb(220,13,23)" fg:x="11532" fg:w="16"/><text x="41.6903%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.02%)</title><rect x="41.4762%" y="1013" width="0.0216%" height="15" fill="rgb(234,26,39)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="1023.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous::{{closure}} (6 samples, 0.02%)</title><rect x="41.4762%" y="997" width="0.0216%" height="15" fill="rgb(205,117,44)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (6 samples, 0.02%)</title><rect x="41.4762%" y="981" width="0.0216%" height="15" fill="rgb(250,42,2)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="41.4762%" y="965" width="0.0216%" height="15" fill="rgb(223,83,14)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.02%)</title><rect x="41.4762%" y="949" width="0.0216%" height="15" fill="rgb(241,147,50)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="41.4762%" y="933" width="0.0216%" height="15" fill="rgb(218,90,6)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="41.4762%" y="917" width="0.0216%" height="15" fill="rgb(210,191,5)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="41.4762%" y="901" width="0.0216%" height="15" fill="rgb(225,139,19)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="41.4762%" y="885" width="0.0216%" height="15" fill="rgb(210,1,33)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="41.4762%" y="869" width="0.0216%" height="15" fill="rgb(213,50,3)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.02%)</title><rect x="41.4762%" y="853" width="0.0216%" height="15" fill="rgb(234,227,4)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.02%)</title><rect x="41.4762%" y="837" width="0.0216%" height="15" fill="rgb(246,63,5)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="847.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.02%)</title><rect x="41.4762%" y="821" width="0.0216%" height="15" fill="rgb(245,136,27)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="831.50"></text></g><g><title>realloc (6 samples, 0.02%)</title><rect x="41.4762%" y="805" width="0.0216%" height="15" fill="rgb(247,199,27)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="815.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="41.4762%" y="789" width="0.0216%" height="15" fill="rgb(252,158,49)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="799.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="41.4762%" y="773" width="0.0216%" height="15" fill="rgb(254,73,1)" fg:x="11542" fg:w="6"/><text x="41.7262%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.17%)</title><rect x="41.3361%" y="1061" width="0.1689%" height="15" fill="rgb(248,93,19)" fg:x="11503" fg:w="47"/><text x="41.5861%" y="1071.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (47 samples, 0.17%)</title><rect x="41.3361%" y="1045" width="0.1689%" height="15" fill="rgb(206,67,5)" fg:x="11503" fg:w="47"/><text x="41.5861%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_syn::send::{{closure}} (52 samples, 0.19%)</title><rect x="41.3253%" y="1077" width="0.1869%" height="15" fill="rgb(209,210,4)" fg:x="11500" fg:w="52"/><text x="41.5753%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="41.5265%" y="1061" width="0.0108%" height="15" fill="rgb(214,185,36)" fg:x="11556" fg:w="3"/><text x="41.7765%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::get_alive::{{closure}} (3 samples, 0.01%)</title><rect x="41.5265%" y="1045" width="0.0108%" height="15" fill="rgb(233,191,26)" fg:x="11556" fg:w="3"/><text x="41.7765%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_transport::TransportPeer&gt; (3 samples, 0.01%)</title><rect x="41.5409%" y="1045" width="0.0108%" height="15" fill="rgb(248,94,17)" fg:x="11560" fg:w="3"/><text x="41.7909%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_link_commons::Link&gt;&gt; (3 samples, 0.01%)</title><rect x="41.5409%" y="1029" width="0.0108%" height="15" fill="rgb(250,64,4)" fg:x="11560" fg:w="3"/><text x="41.7909%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="41.5409%" y="1013" width="0.0108%" height="15" fill="rgb(218,41,53)" fg:x="11560" fg:w="3"/><text x="41.7909%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_link_commons::Link]&gt; (3 samples, 0.01%)</title><rect x="41.5409%" y="997" width="0.0108%" height="15" fill="rgb(251,176,28)" fg:x="11560" fg:w="3"/><text x="41.7909%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_commons::Link&gt; (3 samples, 0.01%)</title><rect x="41.5409%" y="981" width="0.0108%" height="15" fill="rgb(247,22,9)" fg:x="11560" fg:w="3"/><text x="41.7909%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="41.5589%" y="1029" width="0.0108%" height="15" fill="rgb(218,201,14)" fg:x="11565" fg:w="3"/><text x="41.8089%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="41.5589%" y="1013" width="0.0108%" height="15" fill="rgb(218,94,10)" fg:x="11565" fg:w="3"/><text x="41.8089%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="41.5589%" y="997" width="0.0108%" height="15" fill="rgb(222,183,52)" fg:x="11565" fg:w="3"/><text x="41.8089%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="41.5589%" y="981" width="0.0108%" height="15" fill="rgb(242,140,25)" fg:x="11565" fg:w="3"/><text x="41.8089%" y="991.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="41.5589%" y="965" width="0.0108%" height="15" fill="rgb(235,197,38)" fg:x="11565" fg:w="3"/><text x="41.8089%" y="975.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (3 samples, 0.01%)</title><rect x="41.5732%" y="1013" width="0.0108%" height="15" fill="rgb(237,136,15)" fg:x="11569" fg:w="3"/><text x="41.8232%" y="1023.50"></text></g><g><title>zenoh::net::routing::pubsub::pubsub_new_face (6 samples, 0.02%)</title><rect x="41.5912%" y="1013" width="0.0216%" height="15" fill="rgb(223,44,49)" fg:x="11574" fg:w="6"/><text x="41.8412%" y="1023.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (22 samples, 0.08%)</title><rect x="41.5373%" y="1061" width="0.0791%" height="15" fill="rgb(227,71,15)" fg:x="11559" fg:w="22"/><text x="41.7873%" y="1071.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (17 samples, 0.06%)</title><rect x="41.5553%" y="1045" width="0.0611%" height="15" fill="rgb(225,153,20)" fg:x="11564" fg:w="17"/><text x="41.8053%" y="1055.50"></text></g><g><title>zenoh::net::routing::router::Tables::open_net_face (13 samples, 0.05%)</title><rect x="41.5696%" y="1029" width="0.0467%" height="15" fill="rgb(210,190,26)" fg:x="11568" fg:w="13"/><text x="41.8196%" y="1039.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (3 samples, 0.01%)</title><rect x="41.6235%" y="1045" width="0.0108%" height="15" fill="rgb(223,147,5)" fg:x="11583" fg:w="3"/><text x="41.8735%" y="1055.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="41.6235%" y="1029" width="0.0108%" height="15" fill="rgb(207,14,23)" fg:x="11583" fg:w="3"/><text x="41.8735%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="41.6235%" y="1013" width="0.0108%" height="15" fill="rgb(211,195,53)" fg:x="11583" fg:w="3"/><text x="41.8735%" y="1023.50"></text></g><g><title>&lt;zenoh_link_commons::Link as core::convert::From&lt;&amp;zenoh_link_commons::LinkUnicast&gt;&gt;::from (8 samples, 0.03%)</title><rect x="41.6164%" y="1061" width="0.0287%" height="15" fill="rgb(237,75,46)" fg:x="11581" fg:w="8"/><text x="41.8664%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (3 samples, 0.01%)</title><rect x="41.6667%" y="1045" width="0.0108%" height="15" fill="rgb(254,55,14)" fg:x="11595" fg:w="3"/><text x="41.9167%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_rx::{{closure}} (3 samples, 0.01%)</title><rect x="41.6667%" y="1029" width="0.0108%" height="15" fill="rgb(230,185,30)" fg:x="11595" fg:w="3"/><text x="41.9167%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.01%)</title><rect x="41.6667%" y="1013" width="0.0108%" height="15" fill="rgb(220,14,11)" fg:x="11595" fg:w="3"/><text x="41.9167%" y="1023.50"></text></g><g><title>&lt;zenoh_link_commons::LinkUnicast as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="41.6667%" y="997" width="0.0108%" height="15" fill="rgb(215,169,44)" fg:x="11595" fg:w="3"/><text x="41.9167%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_rx (7 samples, 0.03%)</title><rect x="41.6667%" y="1061" width="0.0252%" height="15" fill="rgb(253,203,20)" fg:x="11595" fg:w="7"/><text x="41.9167%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx (4 samples, 0.01%)</title><rect x="41.6774%" y="1045" width="0.0144%" height="15" fill="rgb(229,225,17)" fg:x="11598" fg:w="4"/><text x="41.9274%" y="1055.50"></text></g><g><title>&lt;zenoh_transport::unicast::transport::TransportUnicastInner as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="41.6810%" y="1029" width="0.0108%" height="15" fill="rgb(236,76,26)" fg:x="11599" fg:w="3"/><text x="41.9310%" y="1039.50"></text></g><g><title>&lt;zenoh_transport::unicast::transport::TransportUnicastConfig as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="41.6810%" y="1013" width="0.0108%" height="15" fill="rgb(234,15,30)" fg:x="11599" fg:w="3"/><text x="41.9310%" y="1023.50"></text></g><g><title>&lt;zenoh_transport::manager::TransportManager as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="41.6810%" y="997" width="0.0108%" height="15" fill="rgb(211,113,48)" fg:x="11599" fg:w="3"/><text x="41.9310%" y="1007.50"></text></g><g><title>&lt;zenoh_link_commons::LinkUnicast as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="41.6990%" y="1029" width="0.0287%" height="15" fill="rgb(221,31,36)" fg:x="11604" fg:w="8"/><text x="41.9490%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.03%)</title><rect x="41.6990%" y="1013" width="0.0287%" height="15" fill="rgb(215,118,52)" fg:x="11604" fg:w="8"/><text x="41.9490%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="41.7278%" y="1013" width="0.0144%" height="15" fill="rgb(241,151,27)" fg:x="11612" fg:w="4"/><text x="41.9778%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="41.7421%" y="981" width="0.0252%" height="15" fill="rgb(253,51,3)" fg:x="11616" fg:w="7"/><text x="41.9921%" y="991.50"></text></g><g><title>&lt;zenoh_transport::unicast::transport::TransportUnicastInner as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="41.7278%" y="1029" width="0.0539%" height="15" fill="rgb(216,201,24)" fg:x="11612" fg:w="15"/><text x="41.9778%" y="1039.50"></text></g><g><title>&lt;zenoh_transport::unicast::transport::TransportUnicastConfig as core::clone::Clone&gt;::clone (11 samples, 0.04%)</title><rect x="41.7421%" y="1013" width="0.0395%" height="15" fill="rgb(231,107,4)" fg:x="11616" fg:w="11"/><text x="41.9921%" y="1023.50"></text></g><g><title>&lt;zenoh_transport::manager::TransportManager as core::clone::Clone&gt;::clone (11 samples, 0.04%)</title><rect x="41.7421%" y="997" width="0.0395%" height="15" fill="rgb(243,97,54)" fg:x="11616" fg:w="11"/><text x="41.9921%" y="1007.50"></text></g><g><title>__rdl_alloc (4 samples, 0.01%)</title><rect x="41.7817%" y="949" width="0.0144%" height="15" fill="rgb(221,32,51)" fg:x="11627" fg:w="4"/><text x="42.0317%" y="959.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.01%)</title><rect x="41.7853%" y="933" width="0.0108%" height="15" fill="rgb(218,171,35)" fg:x="11628" fg:w="3"/><text x="42.0353%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="41.7817%" y="1029" width="0.0252%" height="15" fill="rgb(214,20,53)" fg:x="11627" fg:w="7"/><text x="42.0317%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.03%)</title><rect x="41.7817%" y="1013" width="0.0252%" height="15" fill="rgb(239,9,52)" fg:x="11627" fg:w="7"/><text x="42.0317%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="41.7817%" y="997" width="0.0252%" height="15" fill="rgb(215,114,45)" fg:x="11627" fg:w="7"/><text x="42.0317%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="41.7817%" y="981" width="0.0252%" height="15" fill="rgb(208,118,9)" fg:x="11627" fg:w="7"/><text x="42.0317%" y="991.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="41.7817%" y="965" width="0.0252%" height="15" fill="rgb(235,7,39)" fg:x="11627" fg:w="7"/><text x="42.0317%" y="975.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="41.7960%" y="949" width="0.0108%" height="15" fill="rgb(243,225,15)" fg:x="11631" fg:w="3"/><text x="42.0460%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_ptr (18 samples, 0.06%)</title><rect x="41.8427%" y="965" width="0.0647%" height="15" fill="rgb(225,216,18)" fg:x="11644" fg:w="18"/><text x="42.0927%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (18 samples, 0.06%)</title><rect x="41.8427%" y="949" width="0.0647%" height="15" fill="rgb(233,36,38)" fg:x="11644" fg:w="18"/><text x="42.0927%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (18 samples, 0.06%)</title><rect x="41.8427%" y="933" width="0.0647%" height="15" fill="rgb(239,88,23)" fg:x="11644" fg:w="18"/><text x="42.0927%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_ptr::{{closure}} (18 samples, 0.06%)</title><rect x="41.8427%" y="917" width="0.0647%" height="15" fill="rgb(219,181,35)" fg:x="11644" fg:w="18"/><text x="42.0927%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.06%)</title><rect x="41.8427%" y="901" width="0.0647%" height="15" fill="rgb(215,18,46)" fg:x="11644" fg:w="18"/><text x="42.0927%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.06%)</title><rect x="41.8427%" y="885" width="0.0647%" height="15" fill="rgb(241,38,11)" fg:x="11644" fg:w="18"/><text x="42.0927%" y="895.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.06%)</title><rect x="41.8427%" y="869" width="0.0647%" height="15" fill="rgb(248,169,45)" fg:x="11644" fg:w="18"/><text x="42.0927%" y="879.50"></text></g><g><title>malloc (16 samples, 0.06%)</title><rect x="41.8499%" y="853" width="0.0575%" height="15" fill="rgb(239,50,49)" fg:x="11646" fg:w="16"/><text x="42.0999%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.09%)</title><rect x="41.8356%" y="1013" width="0.0934%" height="15" fill="rgb(231,96,31)" fg:x="11642" fg:w="26"/><text x="42.0856%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::convert::From&lt;alloc::boxed::Box&lt;T&gt;&gt;&gt;::from (26 samples, 0.09%)</title><rect x="41.8356%" y="997" width="0.0934%" height="15" fill="rgb(224,193,37)" fg:x="11642" fg:w="26"/><text x="42.0856%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_box (25 samples, 0.09%)</title><rect x="41.8392%" y="981" width="0.0898%" height="15" fill="rgb(227,153,50)" fg:x="11643" fg:w="25"/><text x="42.0892%" y="991.50"></text></g><g><title>core::mem::size_of_val (4 samples, 0.01%)</title><rect x="41.9146%" y="965" width="0.0144%" height="15" fill="rgb(249,228,3)" fg:x="11664" fg:w="4"/><text x="42.1646%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (3 samples, 0.01%)</title><rect x="41.9362%" y="1013" width="0.0108%" height="15" fill="rgb(219,164,43)" fg:x="11670" fg:w="3"/><text x="42.1862%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.06%)</title><rect x="41.9470%" y="917" width="0.0611%" height="15" fill="rgb(216,45,41)" fg:x="11673" fg:w="17"/><text x="42.1970%" y="927.50"></text></g><g><title>malloc (15 samples, 0.05%)</title><rect x="41.9541%" y="901" width="0.0539%" height="15" fill="rgb(210,226,51)" fg:x="11675" fg:w="15"/><text x="42.2041%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (22 samples, 0.08%)</title><rect x="41.9470%" y="1013" width="0.0791%" height="15" fill="rgb(209,117,49)" fg:x="11673" fg:w="22"/><text x="42.1970%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (22 samples, 0.08%)</title><rect x="41.9470%" y="997" width="0.0791%" height="15" fill="rgb(206,196,24)" fg:x="11673" fg:w="22"/><text x="42.1970%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.08%)</title><rect x="41.9470%" y="981" width="0.0791%" height="15" fill="rgb(253,218,3)" fg:x="11673" fg:w="22"/><text x="42.1970%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.08%)</title><rect x="41.9470%" y="965" width="0.0791%" height="15" fill="rgb(252,166,2)" fg:x="11673" fg:w="22"/><text x="42.1970%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.08%)</title><rect x="41.9470%" y="949" width="0.0791%" height="15" fill="rgb(236,218,26)" fg:x="11673" fg:w="22"/><text x="42.1970%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.08%)</title><rect x="41.9470%" y="933" width="0.0791%" height="15" fill="rgb(254,84,19)" fg:x="11673" fg:w="22"/><text x="42.1970%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.02%)</title><rect x="42.0080%" y="917" width="0.0180%" height="15" fill="rgb(219,137,29)" fg:x="11690" fg:w="5"/><text x="42.2580%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.02%)</title><rect x="42.0080%" y="901" width="0.0180%" height="15" fill="rgb(227,47,52)" fg:x="11690" fg:w="5"/><text x="42.2580%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.02%)</title><rect x="42.0368%" y="885" width="0.0180%" height="15" fill="rgb(229,167,24)" fg:x="11698" fg:w="5"/><text x="42.2868%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.03%)</title><rect x="42.0548%" y="837" width="0.0287%" height="15" fill="rgb(233,164,1)" fg:x="11703" fg:w="8"/><text x="42.3048%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (8 samples, 0.03%)</title><rect x="42.0548%" y="821" width="0.0287%" height="15" fill="rgb(218,88,48)" fg:x="11703" fg:w="8"/><text x="42.3048%" y="831.50"></text></g><g><title>core::ptr::write (8 samples, 0.03%)</title><rect x="42.0548%" y="805" width="0.0287%" height="15" fill="rgb(226,214,24)" fg:x="11703" fg:w="8"/><text x="42.3048%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="42.0871%" y="821" width="0.0539%" height="15" fill="rgb(233,29,12)" fg:x="11712" fg:w="15"/><text x="42.3371%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="42.1482%" y="821" width="0.0144%" height="15" fill="rgb(219,120,34)" fg:x="11729" fg:w="4"/><text x="42.3982%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (15 samples, 0.05%)</title><rect x="42.2308%" y="789" width="0.0539%" height="15" fill="rgb(226,78,44)" fg:x="11752" fg:w="15"/><text x="42.4808%" y="799.50"></text></g><g><title>core::ptr::write (15 samples, 0.05%)</title><rect x="42.2308%" y="773" width="0.0539%" height="15" fill="rgb(240,15,48)" fg:x="11752" fg:w="15"/><text x="42.4808%" y="783.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (24 samples, 0.09%)</title><rect x="42.2021%" y="805" width="0.0862%" height="15" fill="rgb(253,176,7)" fg:x="11744" fg:w="24"/><text x="42.4521%" y="815.50"></text></g><g><title>__rdl_alloc (6 samples, 0.02%)</title><rect x="42.2883%" y="693" width="0.0216%" height="15" fill="rgb(206,166,28)" fg:x="11768" fg:w="6"/><text x="42.5383%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.02%)</title><rect x="42.2919%" y="677" width="0.0180%" height="15" fill="rgb(241,53,51)" fg:x="11769" fg:w="5"/><text x="42.5419%" y="687.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="42.4177%" y="645" width="0.0611%" height="15" fill="rgb(249,112,30)" fg:x="11804" fg:w="17"/><text x="42.6677%" y="655.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="42.4177%" y="629" width="0.0611%" height="15" fill="rgb(217,85,30)" fg:x="11804" fg:w="17"/><text x="42.6677%" y="639.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="42.4177%" y="613" width="0.0611%" height="15" fill="rgb(233,49,7)" fg:x="11804" fg:w="17"/><text x="42.6677%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="42.4213%" y="597" width="0.0575%" height="15" fill="rgb(234,109,9)" fg:x="11805" fg:w="16"/><text x="42.6713%" y="607.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="42.4213%" y="581" width="0.0575%" height="15" fill="rgb(253,95,22)" fg:x="11805" fg:w="16"/><text x="42.6713%" y="591.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="42.4321%" y="565" width="0.0467%" height="15" fill="rgb(233,176,25)" fg:x="11808" fg:w="13"/><text x="42.6821%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="42.4393%" y="549" width="0.0395%" height="15" fill="rgb(236,33,39)" fg:x="11810" fg:w="11"/><text x="42.6893%" y="559.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="42.4429%" y="533" width="0.0359%" height="15" fill="rgb(223,226,42)" fg:x="11811" fg:w="10"/><text x="42.6929%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="42.4465%" y="517" width="0.0323%" height="15" fill="rgb(216,99,33)" fg:x="11812" fg:w="9"/><text x="42.6965%" y="527.50"></text></g><g><title>[libc.so.6] (45 samples, 0.16%)</title><rect x="42.4069%" y="661" width="0.1617%" height="15" fill="rgb(235,84,23)" fg:x="11801" fg:w="45"/><text x="42.6569%" y="671.50"></text></g><g><title>__mprotect (25 samples, 0.09%)</title><rect x="42.4788%" y="645" width="0.0898%" height="15" fill="rgb(232,2,27)" fg:x="11821" fg:w="25"/><text x="42.7288%" y="655.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="42.4788%" y="629" width="0.0898%" height="15" fill="rgb(241,23,22)" fg:x="11821" fg:w="25"/><text x="42.7288%" y="639.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="42.4824%" y="613" width="0.0862%" height="15" fill="rgb(211,73,27)" fg:x="11822" fg:w="24"/><text x="42.7324%" y="623.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="42.4824%" y="597" width="0.0862%" height="15" fill="rgb(235,109,49)" fg:x="11822" fg:w="24"/><text x="42.7324%" y="607.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="42.4824%" y="581" width="0.0862%" height="15" fill="rgb(230,99,29)" fg:x="11822" fg:w="24"/><text x="42.7324%" y="591.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="42.4896%" y="565" width="0.0791%" height="15" fill="rgb(245,199,7)" fg:x="11824" fg:w="22"/><text x="42.7396%" y="575.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="42.5040%" y="549" width="0.0647%" height="15" fill="rgb(217,179,10)" fg:x="11828" fg:w="18"/><text x="42.7540%" y="559.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="42.5147%" y="533" width="0.0539%" height="15" fill="rgb(254,99,47)" fg:x="11831" fg:w="15"/><text x="42.7647%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="42.5363%" y="517" width="0.0323%" height="15" fill="rgb(251,121,7)" fg:x="11837" fg:w="9"/><text x="42.7863%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="42.5507%" y="501" width="0.0180%" height="15" fill="rgb(250,177,26)" fg:x="11841" fg:w="5"/><text x="42.8007%" y="511.50"></text></g><g><title>[libc.so.6] (63 samples, 0.23%)</title><rect x="42.3566%" y="677" width="0.2264%" height="15" fill="rgb(232,88,15)" fg:x="11787" fg:w="63"/><text x="42.6066%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="42.5686%" y="661" width="0.0144%" height="15" fill="rgb(251,54,54)" fg:x="11846" fg:w="4"/><text x="42.8186%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="42.5686%" y="645" width="0.0144%" height="15" fill="rgb(208,177,15)" fg:x="11846" fg:w="4"/><text x="42.8186%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="42.5686%" y="629" width="0.0144%" height="15" fill="rgb(205,97,32)" fg:x="11846" fg:w="4"/><text x="42.8186%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="42.5686%" y="613" width="0.0144%" height="15" fill="rgb(217,192,13)" fg:x="11846" fg:w="4"/><text x="42.8186%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="42.5722%" y="597" width="0.0108%" height="15" fill="rgb(215,163,41)" fg:x="11847" fg:w="3"/><text x="42.8222%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (84 samples, 0.30%)</title><rect x="42.2883%" y="805" width="0.3019%" height="15" fill="rgb(246,83,29)" fg:x="11768" fg:w="84"/><text x="42.5383%" y="815.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (84 samples, 0.30%)</title><rect x="42.2883%" y="789" width="0.3019%" height="15" fill="rgb(219,2,45)" fg:x="11768" fg:w="84"/><text x="42.5383%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (84 samples, 0.30%)</title><rect x="42.2883%" y="773" width="0.3019%" height="15" fill="rgb(242,215,33)" fg:x="11768" fg:w="84"/><text x="42.5383%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (84 samples, 0.30%)</title><rect x="42.2883%" y="757" width="0.3019%" height="15" fill="rgb(217,1,6)" fg:x="11768" fg:w="84"/><text x="42.5383%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84 samples, 0.30%)</title><rect x="42.2883%" y="741" width="0.3019%" height="15" fill="rgb(207,85,52)" fg:x="11768" fg:w="84"/><text x="42.5383%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84 samples, 0.30%)</title><rect x="42.2883%" y="725" width="0.3019%" height="15" fill="rgb(231,171,19)" fg:x="11768" fg:w="84"/><text x="42.5383%" y="735.50"></text></g><g><title>alloc::alloc::alloc (84 samples, 0.30%)</title><rect x="42.2883%" y="709" width="0.3019%" height="15" fill="rgb(207,128,4)" fg:x="11768" fg:w="84"/><text x="42.5383%" y="719.50"></text></g><g><title>malloc (77 samples, 0.28%)</title><rect x="42.3135%" y="693" width="0.2767%" height="15" fill="rgb(219,208,4)" fg:x="11775" fg:w="77"/><text x="42.5635%" y="703.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="42.5902%" y="805" width="0.0108%" height="15" fill="rgb(235,161,42)" fg:x="11852" fg:w="3"/><text x="42.8402%" y="815.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="42.5902%" y="789" width="0.0108%" height="15" fill="rgb(247,218,18)" fg:x="11852" fg:w="3"/><text x="42.8402%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="42.5902%" y="773" width="0.0108%" height="15" fill="rgb(232,114,51)" fg:x="11852" fg:w="3"/><text x="42.8402%" y="783.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="42.6728%" y="693" width="0.0180%" height="15" fill="rgb(222,95,3)" fg:x="11875" fg:w="5"/><text x="42.9228%" y="703.50"></text></g><g><title>[libc.so.6] (16 samples, 0.06%)</title><rect x="42.6405%" y="709" width="0.0575%" height="15" fill="rgb(240,65,29)" fg:x="11866" fg:w="16"/><text x="42.8905%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (25 samples, 0.09%)</title><rect x="42.6118%" y="789" width="0.0898%" height="15" fill="rgb(249,209,20)" fg:x="11858" fg:w="25"/><text x="42.8618%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.09%)</title><rect x="42.6118%" y="773" width="0.0898%" height="15" fill="rgb(241,48,37)" fg:x="11858" fg:w="25"/><text x="42.8618%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.09%)</title><rect x="42.6118%" y="757" width="0.0898%" height="15" fill="rgb(230,140,42)" fg:x="11858" fg:w="25"/><text x="42.8618%" y="767.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.09%)</title><rect x="42.6118%" y="741" width="0.0898%" height="15" fill="rgb(230,176,45)" fg:x="11858" fg:w="25"/><text x="42.8618%" y="751.50"></text></g><g><title>malloc (24 samples, 0.09%)</title><rect x="42.6154%" y="725" width="0.0862%" height="15" fill="rgb(245,112,21)" fg:x="11859" fg:w="24"/><text x="42.8654%" y="735.50"></text></g><g><title>[unknown] (138 samples, 0.50%)</title><rect x="42.8956%" y="629" width="0.4959%" height="15" fill="rgb(207,183,35)" fg:x="11937" fg:w="138"/><text x="43.1456%" y="639.50"></text></g><g><title>[unknown] (138 samples, 0.50%)</title><rect x="42.8956%" y="613" width="0.4959%" height="15" fill="rgb(227,44,33)" fg:x="11937" fg:w="138"/><text x="43.1456%" y="623.50"></text></g><g><title>[unknown] (137 samples, 0.49%)</title><rect x="42.8992%" y="597" width="0.4923%" height="15" fill="rgb(246,120,21)" fg:x="11938" fg:w="137"/><text x="43.1492%" y="607.50"></text></g><g><title>[unknown] (136 samples, 0.49%)</title><rect x="42.9028%" y="581" width="0.4887%" height="15" fill="rgb(235,57,52)" fg:x="11939" fg:w="136"/><text x="43.1528%" y="591.50"></text></g><g><title>[unknown] (119 samples, 0.43%)</title><rect x="42.9639%" y="565" width="0.4276%" height="15" fill="rgb(238,84,10)" fg:x="11956" fg:w="119"/><text x="43.2139%" y="575.50"></text></g><g><title>[unknown] (110 samples, 0.40%)</title><rect x="42.9963%" y="549" width="0.3953%" height="15" fill="rgb(251,200,32)" fg:x="11965" fg:w="110"/><text x="43.2463%" y="559.50"></text></g><g><title>[unknown] (100 samples, 0.36%)</title><rect x="43.0322%" y="533" width="0.3594%" height="15" fill="rgb(247,159,13)" fg:x="11975" fg:w="100"/><text x="43.2822%" y="543.50"></text></g><g><title>[unknown] (89 samples, 0.32%)</title><rect x="43.0717%" y="517" width="0.3198%" height="15" fill="rgb(238,64,4)" fg:x="11986" fg:w="89"/><text x="43.3217%" y="527.50"></text></g><g><title>[unknown] (73 samples, 0.26%)</title><rect x="43.1292%" y="501" width="0.2623%" height="15" fill="rgb(221,131,51)" fg:x="12002" fg:w="73"/><text x="43.3792%" y="511.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="43.3556%" y="485" width="0.0359%" height="15" fill="rgb(242,5,29)" fg:x="12065" fg:w="10"/><text x="43.6056%" y="495.50"></text></g><g><title>[libc.so.6] (339 samples, 1.22%)</title><rect x="42.8417%" y="645" width="1.2182%" height="15" fill="rgb(214,130,32)" fg:x="11922" fg:w="339"/><text x="43.0917%" y="655.50"></text></g><g><title>__mprotect (184 samples, 0.66%)</title><rect x="43.3987%" y="629" width="0.6612%" height="15" fill="rgb(244,210,16)" fg:x="12077" fg:w="184"/><text x="43.6487%" y="639.50"></text></g><g><title>[unknown] (183 samples, 0.66%)</title><rect x="43.4023%" y="613" width="0.6576%" height="15" fill="rgb(234,48,26)" fg:x="12078" fg:w="183"/><text x="43.6523%" y="623.50"></text></g><g><title>[unknown] (178 samples, 0.64%)</title><rect x="43.4203%" y="597" width="0.6396%" height="15" fill="rgb(231,82,38)" fg:x="12083" fg:w="178"/><text x="43.6703%" y="607.50"></text></g><g><title>[unknown] (178 samples, 0.64%)</title><rect x="43.4203%" y="581" width="0.6396%" height="15" fill="rgb(254,128,41)" fg:x="12083" fg:w="178"/><text x="43.6703%" y="591.50"></text></g><g><title>[unknown] (176 samples, 0.63%)</title><rect x="43.4275%" y="565" width="0.6325%" height="15" fill="rgb(212,73,49)" fg:x="12085" fg:w="176"/><text x="43.6775%" y="575.50"></text></g><g><title>[unknown] (168 samples, 0.60%)</title><rect x="43.4562%" y="549" width="0.6037%" height="15" fill="rgb(205,62,54)" fg:x="12093" fg:w="168"/><text x="43.7062%" y="559.50"></text></g><g><title>[unknown] (143 samples, 0.51%)</title><rect x="43.5461%" y="533" width="0.5139%" height="15" fill="rgb(228,0,8)" fg:x="12118" fg:w="143"/><text x="43.7961%" y="543.50"></text></g><g><title>[unknown] (101 samples, 0.36%)</title><rect x="43.6970%" y="517" width="0.3629%" height="15" fill="rgb(251,28,17)" fg:x="12160" fg:w="101"/><text x="43.9470%" y="527.50"></text></g><g><title>[unknown] (50 samples, 0.18%)</title><rect x="43.8803%" y="501" width="0.1797%" height="15" fill="rgb(238,105,27)" fg:x="12211" fg:w="50"/><text x="44.1303%" y="511.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="43.9449%" y="485" width="0.1150%" height="15" fill="rgb(237,216,33)" fg:x="12229" fg:w="32"/><text x="44.1949%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="43.9773%" y="469" width="0.0827%" height="15" fill="rgb(229,228,25)" fg:x="12238" fg:w="23"/><text x="44.2273%" y="479.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="44.0096%" y="453" width="0.0503%" height="15" fill="rgb(233,75,23)" fg:x="12247" fg:w="14"/><text x="44.2596%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="44.0420%" y="437" width="0.0180%" height="15" fill="rgb(231,207,16)" fg:x="12256" fg:w="5"/><text x="44.2920%" y="447.50"></text></g><g><title>[libc.so.6] (359 samples, 1.29%)</title><rect x="42.7771%" y="661" width="1.2901%" height="15" fill="rgb(231,191,45)" fg:x="11904" fg:w="359"/><text x="43.0271%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (419 samples, 1.51%)</title><rect x="42.6010%" y="805" width="1.5057%" height="15" fill="rgb(224,133,17)" fg:x="11855" fg:w="419"/><text x="42.8510%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (391 samples, 1.41%)</title><rect x="42.7016%" y="789" width="1.4051%" height="15" fill="rgb(209,178,27)" fg:x="11883" fg:w="391"/><text x="42.9516%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (391 samples, 1.41%)</title><rect x="42.7016%" y="773" width="1.4051%" height="15" fill="rgb(218,37,11)" fg:x="11883" fg:w="391"/><text x="42.9516%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (391 samples, 1.41%)</title><rect x="42.7016%" y="757" width="1.4051%" height="15" fill="rgb(251,226,25)" fg:x="11883" fg:w="391"/><text x="42.9516%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (391 samples, 1.41%)</title><rect x="42.7016%" y="741" width="1.4051%" height="15" fill="rgb(209,222,27)" fg:x="11883" fg:w="391"/><text x="42.9516%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (391 samples, 1.41%)</title><rect x="42.7016%" y="725" width="1.4051%" height="15" fill="rgb(238,22,21)" fg:x="11883" fg:w="391"/><text x="42.9516%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (391 samples, 1.41%)</title><rect x="42.7016%" y="709" width="1.4051%" height="15" fill="rgb(233,161,25)" fg:x="11883" fg:w="391"/><text x="42.9516%" y="719.50"></text></g><g><title>alloc::alloc::alloc (389 samples, 1.40%)</title><rect x="42.7088%" y="693" width="1.3979%" height="15" fill="rgb(226,122,53)" fg:x="11885" fg:w="389"/><text x="42.9588%" y="703.50"></text></g><g><title>malloc (386 samples, 1.39%)</title><rect x="42.7196%" y="677" width="1.3871%" height="15" fill="rgb(220,123,17)" fg:x="11888" fg:w="386"/><text x="42.9696%" y="687.50"></text></g><g><title>__lll_lock_wake_private (9 samples, 0.03%)</title><rect x="44.0743%" y="661" width="0.0323%" height="15" fill="rgb(230,224,35)" fg:x="12265" fg:w="9"/><text x="44.3243%" y="671.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="44.0743%" y="645" width="0.0323%" height="15" fill="rgb(246,83,8)" fg:x="12265" fg:w="9"/><text x="44.3243%" y="655.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="44.0743%" y="629" width="0.0323%" height="15" fill="rgb(230,214,17)" fg:x="12265" fg:w="9"/><text x="44.3243%" y="639.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="44.0743%" y="613" width="0.0323%" height="15" fill="rgb(222,97,18)" fg:x="12265" fg:w="9"/><text x="44.3243%" y="623.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="44.0743%" y="597" width="0.0323%" height="15" fill="rgb(206,79,1)" fg:x="12265" fg:w="9"/><text x="44.3243%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="44.0779%" y="581" width="0.0287%" height="15" fill="rgb(214,121,34)" fg:x="12266" fg:w="8"/><text x="44.3279%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="44.0815%" y="565" width="0.0252%" height="15" fill="rgb(249,199,46)" fg:x="12267" fg:w="7"/><text x="44.3315%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="44.0815%" y="549" width="0.0252%" height="15" fill="rgb(214,222,46)" fg:x="12267" fg:w="7"/><text x="44.3315%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="44.0815%" y="533" width="0.0252%" height="15" fill="rgb(248,168,30)" fg:x="12267" fg:w="7"/><text x="44.3315%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="44.0815%" y="517" width="0.0252%" height="15" fill="rgb(226,14,28)" fg:x="12267" fg:w="7"/><text x="44.3315%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="44.0815%" y="501" width="0.0252%" height="15" fill="rgb(253,123,1)" fg:x="12267" fg:w="7"/><text x="44.3315%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="44.0851%" y="485" width="0.0216%" height="15" fill="rgb(225,24,42)" fg:x="12268" fg:w="6"/><text x="44.3351%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="44.0959%" y="469" width="0.0108%" height="15" fill="rgb(216,161,37)" fg:x="12271" fg:w="3"/><text x="44.3459%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.02%)</title><rect x="44.1246%" y="789" width="0.0180%" height="15" fill="rgb(251,164,26)" fg:x="12279" fg:w="5"/><text x="44.3746%" y="799.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="44.1570%" y="709" width="0.0108%" height="15" fill="rgb(219,177,3)" fg:x="12288" fg:w="3"/><text x="44.4070%" y="719.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="44.2648%" y="677" width="0.0144%" height="15" fill="rgb(222,65,0)" fg:x="12318" fg:w="4"/><text x="44.5148%" y="687.50"></text></g><g><title>[libc.so.6] (20 samples, 0.07%)</title><rect x="44.2145%" y="693" width="0.0719%" height="15" fill="rgb(223,69,54)" fg:x="12304" fg:w="20"/><text x="44.4645%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (38 samples, 0.14%)</title><rect x="44.1570%" y="773" width="0.1366%" height="15" fill="rgb(235,30,27)" fg:x="12288" fg:w="38"/><text x="44.4070%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.14%)</title><rect x="44.1570%" y="757" width="0.1366%" height="15" fill="rgb(220,183,50)" fg:x="12288" fg:w="38"/><text x="44.4070%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.14%)</title><rect x="44.1570%" y="741" width="0.1366%" height="15" fill="rgb(248,198,15)" fg:x="12288" fg:w="38"/><text x="44.4070%" y="751.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.14%)</title><rect x="44.1570%" y="725" width="0.1366%" height="15" fill="rgb(222,211,4)" fg:x="12288" fg:w="38"/><text x="44.4070%" y="735.50"></text></g><g><title>malloc (35 samples, 0.13%)</title><rect x="44.1677%" y="709" width="0.1258%" height="15" fill="rgb(214,102,34)" fg:x="12291" fg:w="35"/><text x="44.4177%" y="719.50"></text></g><g><title>__rdl_alloc (8 samples, 0.03%)</title><rect x="44.3043%" y="661" width="0.0287%" height="15" fill="rgb(245,92,5)" fg:x="12329" fg:w="8"/><text x="44.5543%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.02%)</title><rect x="44.3151%" y="645" width="0.0180%" height="15" fill="rgb(252,72,51)" fg:x="12332" fg:w="5"/><text x="44.5651%" y="655.50"></text></g><g><title>[unknown] (306 samples, 1.10%)</title><rect x="44.6097%" y="613" width="1.0996%" height="15" fill="rgb(252,208,19)" fg:x="12414" fg:w="306"/><text x="44.8597%" y="623.50"></text></g><g><title>[unknown] (297 samples, 1.07%)</title><rect x="44.6421%" y="597" width="1.0673%" height="15" fill="rgb(211,69,7)" fg:x="12423" fg:w="297"/><text x="44.8921%" y="607.50"></text></g><g><title>[unknown] (296 samples, 1.06%)</title><rect x="44.6457%" y="581" width="1.0637%" height="15" fill="rgb(211,27,16)" fg:x="12424" fg:w="296"/><text x="44.8957%" y="591.50"></text></g><g><title>[unknown] (293 samples, 1.05%)</title><rect x="44.6565%" y="565" width="1.0529%" height="15" fill="rgb(219,216,14)" fg:x="12427" fg:w="293"/><text x="44.9065%" y="575.50"></text></g><g><title>[unknown] (269 samples, 0.97%)</title><rect x="44.7427%" y="549" width="0.9667%" height="15" fill="rgb(219,71,8)" fg:x="12451" fg:w="269"/><text x="44.9927%" y="559.50"></text></g><g><title>[unknown] (248 samples, 0.89%)</title><rect x="44.8182%" y="533" width="0.8912%" height="15" fill="rgb(223,170,53)" fg:x="12472" fg:w="248"/><text x="45.0682%" y="543.50"></text></g><g><title>[unknown] (223 samples, 0.80%)</title><rect x="44.9080%" y="517" width="0.8014%" height="15" fill="rgb(246,21,26)" fg:x="12497" fg:w="223"/><text x="45.1580%" y="527.50"></text></g><g><title>[unknown] (199 samples, 0.72%)</title><rect x="44.9943%" y="501" width="0.7151%" height="15" fill="rgb(248,20,46)" fg:x="12521" fg:w="199"/><text x="45.2443%" y="511.50"></text></g><g><title>[unknown] (156 samples, 0.56%)</title><rect x="45.1488%" y="485" width="0.5606%" height="15" fill="rgb(252,94,11)" fg:x="12564" fg:w="156"/><text x="45.3988%" y="495.50"></text></g><g><title>[unknown] (34 samples, 0.12%)</title><rect x="45.5872%" y="469" width="0.1222%" height="15" fill="rgb(236,163,8)" fg:x="12686" fg:w="34"/><text x="45.8372%" y="479.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="45.6770%" y="453" width="0.0323%" height="15" fill="rgb(217,221,45)" fg:x="12711" fg:w="9"/><text x="45.9270%" y="463.50"></text></g><g><title>[libc.so.6] (695 samples, 2.50%)</title><rect x="44.4660%" y="629" width="2.4975%" height="15" fill="rgb(238,38,17)" fg:x="12374" fg:w="695"/><text x="44.7160%" y="639.50">[l..</text></g><g><title>__mprotect (349 samples, 1.25%)</title><rect x="45.7094%" y="613" width="1.2541%" height="15" fill="rgb(242,210,23)" fg:x="12720" fg:w="349"/><text x="45.9594%" y="623.50"></text></g><g><title>[unknown] (347 samples, 1.25%)</title><rect x="45.7165%" y="597" width="1.2469%" height="15" fill="rgb(250,86,53)" fg:x="12722" fg:w="347"/><text x="45.9665%" y="607.50"></text></g><g><title>[unknown] (336 samples, 1.21%)</title><rect x="45.7561%" y="581" width="1.2074%" height="15" fill="rgb(223,168,25)" fg:x="12733" fg:w="336"/><text x="46.0061%" y="591.50"></text></g><g><title>[unknown] (329 samples, 1.18%)</title><rect x="45.7812%" y="565" width="1.1823%" height="15" fill="rgb(251,189,4)" fg:x="12740" fg:w="329"/><text x="46.0312%" y="575.50"></text></g><g><title>[unknown] (325 samples, 1.17%)</title><rect x="45.7956%" y="549" width="1.1679%" height="15" fill="rgb(245,19,28)" fg:x="12744" fg:w="325"/><text x="46.0456%" y="559.50"></text></g><g><title>[unknown] (297 samples, 1.07%)</title><rect x="45.8962%" y="533" width="1.0673%" height="15" fill="rgb(207,10,34)" fg:x="12772" fg:w="297"/><text x="46.1462%" y="543.50"></text></g><g><title>[unknown] (252 samples, 0.91%)</title><rect x="46.0579%" y="517" width="0.9056%" height="15" fill="rgb(235,153,31)" fg:x="12817" fg:w="252"/><text x="46.3079%" y="527.50"></text></g><g><title>[unknown] (180 samples, 0.65%)</title><rect x="46.3167%" y="501" width="0.6468%" height="15" fill="rgb(228,72,37)" fg:x="12889" fg:w="180"/><text x="46.5667%" y="511.50"></text></g><g><title>[unknown] (82 samples, 0.29%)</title><rect x="46.6688%" y="485" width="0.2947%" height="15" fill="rgb(215,15,16)" fg:x="12987" fg:w="82"/><text x="46.9188%" y="495.50"></text></g><g><title>[unknown] (46 samples, 0.17%)</title><rect x="46.7982%" y="469" width="0.1653%" height="15" fill="rgb(250,119,29)" fg:x="13023" fg:w="46"/><text x="47.0482%" y="479.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="46.8485%" y="453" width="0.1150%" height="15" fill="rgb(214,59,1)" fg:x="13037" fg:w="32"/><text x="47.0985%" y="463.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="46.9024%" y="437" width="0.0611%" height="15" fill="rgb(223,109,25)" fg:x="13052" fg:w="17"/><text x="47.1524%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="46.9347%" y="421" width="0.0287%" height="15" fill="rgb(230,198,22)" fg:x="13061" fg:w="8"/><text x="47.1847%" y="431.50"></text></g><g><title>[libc.so.6] (727 samples, 2.61%)</title><rect x="44.3798%" y="645" width="2.6125%" height="15" fill="rgb(245,184,46)" fg:x="12350" fg:w="727"/><text x="44.6298%" y="655.50">[l..</text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="46.9635%" y="629" width="0.0287%" height="15" fill="rgb(253,73,16)" fg:x="13069" fg:w="8"/><text x="47.2135%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="46.9635%" y="613" width="0.0287%" height="15" fill="rgb(206,94,45)" fg:x="13069" fg:w="8"/><text x="47.2135%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="46.9671%" y="597" width="0.0252%" height="15" fill="rgb(236,83,27)" fg:x="13070" fg:w="7"/><text x="47.2171%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="46.9671%" y="581" width="0.0252%" height="15" fill="rgb(220,196,8)" fg:x="13070" fg:w="7"/><text x="47.2171%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="46.9779%" y="565" width="0.0144%" height="15" fill="rgb(254,185,14)" fg:x="13073" fg:w="4"/><text x="47.2279%" y="575.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (818 samples, 2.94%)</title><rect x="44.1498%" y="789" width="2.9395%" height="15" fill="rgb(226,50,22)" fg:x="12286" fg:w="818"/><text x="44.3998%" y="799.50">ze..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (778 samples, 2.80%)</title><rect x="44.2935%" y="773" width="2.7957%" height="15" fill="rgb(253,147,0)" fg:x="12326" fg:w="778"/><text x="44.5435%" y="783.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (778 samples, 2.80%)</title><rect x="44.2935%" y="757" width="2.7957%" height="15" fill="rgb(252,46,33)" fg:x="12326" fg:w="778"/><text x="44.5435%" y="767.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (776 samples, 2.79%)</title><rect x="44.3007%" y="741" width="2.7886%" height="15" fill="rgb(242,22,54)" fg:x="12328" fg:w="776"/><text x="44.5507%" y="751.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (776 samples, 2.79%)</title><rect x="44.3007%" y="725" width="2.7886%" height="15" fill="rgb(223,178,32)" fg:x="12328" fg:w="776"/><text x="44.5507%" y="735.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (775 samples, 2.78%)</title><rect x="44.3043%" y="709" width="2.7850%" height="15" fill="rgb(214,106,53)" fg:x="12329" fg:w="775"/><text x="44.5543%" y="719.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (775 samples, 2.78%)</title><rect x="44.3043%" y="693" width="2.7850%" height="15" fill="rgb(232,65,50)" fg:x="12329" fg:w="775"/><text x="44.5543%" y="703.50">al..</text></g><g><title>alloc::alloc::alloc (775 samples, 2.78%)</title><rect x="44.3043%" y="677" width="2.7850%" height="15" fill="rgb(231,110,28)" fg:x="12329" fg:w="775"/><text x="44.5543%" y="687.50">al..</text></g><g><title>malloc (766 samples, 2.75%)</title><rect x="44.3366%" y="661" width="2.7526%" height="15" fill="rgb(216,71,40)" fg:x="12338" fg:w="766"/><text x="44.5866%" y="671.50">ma..</text></g><g><title>__lll_lock_wake_private (26 samples, 0.09%)</title><rect x="46.9958%" y="645" width="0.0934%" height="15" fill="rgb(229,89,53)" fg:x="13078" fg:w="26"/><text x="47.2458%" y="655.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="46.9958%" y="629" width="0.0934%" height="15" fill="rgb(210,124,14)" fg:x="13078" fg:w="26"/><text x="47.2458%" y="639.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="46.9958%" y="613" width="0.0934%" height="15" fill="rgb(236,213,6)" fg:x="13078" fg:w="26"/><text x="47.2458%" y="623.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="46.9958%" y="597" width="0.0934%" height="15" fill="rgb(228,41,5)" fg:x="13078" fg:w="26"/><text x="47.2458%" y="607.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="46.9958%" y="581" width="0.0934%" height="15" fill="rgb(221,167,25)" fg:x="13078" fg:w="26"/><text x="47.2458%" y="591.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="47.0030%" y="565" width="0.0862%" height="15" fill="rgb(228,144,37)" fg:x="13080" fg:w="24"/><text x="47.2530%" y="575.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="47.0102%" y="549" width="0.0791%" height="15" fill="rgb(227,189,38)" fg:x="13082" fg:w="22"/><text x="47.2602%" y="559.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="47.0246%" y="533" width="0.0647%" height="15" fill="rgb(218,8,2)" fg:x="13086" fg:w="18"/><text x="47.2746%" y="543.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="47.0354%" y="517" width="0.0539%" height="15" fill="rgb(209,61,28)" fg:x="13089" fg:w="15"/><text x="47.2854%" y="527.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="47.0390%" y="501" width="0.0503%" height="15" fill="rgb(233,140,39)" fg:x="13090" fg:w="14"/><text x="47.2890%" y="511.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="47.0569%" y="485" width="0.0323%" height="15" fill="rgb(251,66,48)" fg:x="13095" fg:w="9"/><text x="47.3069%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="47.0713%" y="469" width="0.0180%" height="15" fill="rgb(210,44,45)" fg:x="13099" fg:w="5"/><text x="47.3213%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.0749%" y="453" width="0.0144%" height="15" fill="rgb(214,136,46)" fg:x="13100" fg:w="4"/><text x="47.3249%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (16 samples, 0.06%)</title><rect x="47.0893%" y="773" width="0.0575%" height="15" fill="rgb(207,130,50)" fg:x="13104" fg:w="16"/><text x="47.3393%" y="783.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (13 samples, 0.05%)</title><rect x="47.1000%" y="757" width="0.0467%" height="15" fill="rgb(228,102,49)" fg:x="13107" fg:w="13"/><text x="47.3500%" y="767.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (13 samples, 0.05%)</title><rect x="47.1000%" y="741" width="0.0467%" height="15" fill="rgb(253,55,1)" fg:x="13107" fg:w="13"/><text x="47.3500%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.05%)</title><rect x="47.1000%" y="725" width="0.0467%" height="15" fill="rgb(238,222,9)" fg:x="13107" fg:w="13"/><text x="47.3500%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.05%)</title><rect x="47.1000%" y="709" width="0.0467%" height="15" fill="rgb(246,99,6)" fg:x="13107" fg:w="13"/><text x="47.3500%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.05%)</title><rect x="47.1000%" y="693" width="0.0467%" height="15" fill="rgb(219,110,26)" fg:x="13107" fg:w="13"/><text x="47.3500%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.05%)</title><rect x="47.1000%" y="677" width="0.0467%" height="15" fill="rgb(239,160,33)" fg:x="13107" fg:w="13"/><text x="47.3500%" y="687.50"></text></g><g><title>[libc.so.6] (13 samples, 0.05%)</title><rect x="47.1000%" y="661" width="0.0467%" height="15" fill="rgb(220,202,23)" fg:x="13107" fg:w="13"/><text x="47.3500%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (3 samples, 0.01%)</title><rect x="47.1683%" y="741" width="0.0108%" height="15" fill="rgb(208,80,26)" fg:x="13126" fg:w="3"/><text x="47.4183%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (3 samples, 0.01%)</title><rect x="47.1683%" y="725" width="0.0108%" height="15" fill="rgb(243,85,7)" fg:x="13126" fg:w="3"/><text x="47.4183%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.01%)</title><rect x="47.1683%" y="709" width="0.0108%" height="15" fill="rgb(228,77,47)" fg:x="13126" fg:w="3"/><text x="47.4183%" y="719.50"></text></g><g><title>zenoh_buffers::wbuf::WBufWriter::clear (9 samples, 0.03%)</title><rect x="47.1504%" y="773" width="0.0323%" height="15" fill="rgb(212,226,8)" fg:x="13121" fg:w="9"/><text x="47.4004%" y="783.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::clear (8 samples, 0.03%)</title><rect x="47.1539%" y="757" width="0.0287%" height="15" fill="rgb(241,120,54)" fg:x="13122" fg:w="8"/><text x="47.4039%" y="767.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (1,397 samples, 5.02%)</title><rect x="42.1662%" y="821" width="5.0201%" height="15" fill="rgb(226,80,16)" fg:x="11734" fg:w="1397"/><text x="42.4162%" y="831.50">zenoh_..</text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (857 samples, 3.08%)</title><rect x="44.1067%" y="805" width="3.0796%" height="15" fill="rgb(240,76,13)" fg:x="12274" fg:w="857"/><text x="44.3567%" y="815.50">zen..</text></g><g><title>zenoh_transport::common::batch::SerializationBatch::clear (27 samples, 0.10%)</title><rect x="47.0893%" y="789" width="0.0970%" height="15" fill="rgb(252,74,8)" fg:x="13104" fg:w="27"/><text x="47.3393%" y="799.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="47.2797%" y="645" width="0.0611%" height="15" fill="rgb(244,155,2)" fg:x="13157" fg:w="17"/><text x="47.5297%" y="655.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="47.2797%" y="629" width="0.0611%" height="15" fill="rgb(215,81,35)" fg:x="13157" fg:w="17"/><text x="47.5297%" y="639.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="47.2797%" y="613" width="0.0611%" height="15" fill="rgb(206,55,2)" fg:x="13157" fg:w="17"/><text x="47.5297%" y="623.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="47.2797%" y="597" width="0.0611%" height="15" fill="rgb(231,2,34)" fg:x="13157" fg:w="17"/><text x="47.5297%" y="607.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="47.2869%" y="581" width="0.0539%" height="15" fill="rgb(242,176,48)" fg:x="13159" fg:w="15"/><text x="47.5369%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="47.3013%" y="565" width="0.0395%" height="15" fill="rgb(249,31,36)" fg:x="13163" fg:w="11"/><text x="47.5513%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="47.3049%" y="549" width="0.0359%" height="15" fill="rgb(205,18,17)" fg:x="13164" fg:w="10"/><text x="47.5549%" y="559.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="47.3049%" y="533" width="0.0359%" height="15" fill="rgb(254,130,5)" fg:x="13164" fg:w="10"/><text x="47.5549%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="47.3085%" y="517" width="0.0323%" height="15" fill="rgb(229,42,45)" fg:x="13165" fg:w="9"/><text x="47.5585%" y="527.50"></text></g><g><title>[libc.so.6] (32 samples, 0.11%)</title><rect x="47.2761%" y="661" width="0.1150%" height="15" fill="rgb(245,95,25)" fg:x="13156" fg:w="32"/><text x="47.5261%" y="671.50"></text></g><g><title>__mprotect (14 samples, 0.05%)</title><rect x="47.3408%" y="645" width="0.0503%" height="15" fill="rgb(249,193,38)" fg:x="13174" fg:w="14"/><text x="47.5908%" y="655.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="47.3408%" y="629" width="0.0503%" height="15" fill="rgb(241,140,43)" fg:x="13174" fg:w="14"/><text x="47.5908%" y="639.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="47.3444%" y="613" width="0.0467%" height="15" fill="rgb(245,78,48)" fg:x="13175" fg:w="13"/><text x="47.5944%" y="623.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="47.3444%" y="597" width="0.0467%" height="15" fill="rgb(214,92,39)" fg:x="13175" fg:w="13"/><text x="47.5944%" y="607.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="47.3480%" y="581" width="0.0431%" height="15" fill="rgb(211,189,14)" fg:x="13176" fg:w="12"/><text x="47.5980%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="47.3588%" y="565" width="0.0323%" height="15" fill="rgb(218,7,24)" fg:x="13179" fg:w="9"/><text x="47.6088%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="47.3660%" y="549" width="0.0252%" height="15" fill="rgb(224,200,49)" fg:x="13181" fg:w="7"/><text x="47.6160%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="47.3660%" y="533" width="0.0252%" height="15" fill="rgb(218,210,14)" fg:x="13181" fg:w="7"/><text x="47.6160%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="47.3696%" y="517" width="0.0216%" height="15" fill="rgb(234,142,31)" fg:x="13182" fg:w="6"/><text x="47.6196%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.3803%" y="501" width="0.0108%" height="15" fill="rgb(227,165,2)" fg:x="13185" fg:w="3"/><text x="47.6303%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.3803%" y="485" width="0.0108%" height="15" fill="rgb(232,44,46)" fg:x="13185" fg:w="3"/><text x="47.6303%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.3803%" y="469" width="0.0108%" height="15" fill="rgb(236,149,47)" fg:x="13185" fg:w="3"/><text x="47.6303%" y="479.50"></text></g><g><title>[libc.so.6] (58 samples, 0.21%)</title><rect x="47.2330%" y="677" width="0.2084%" height="15" fill="rgb(227,45,31)" fg:x="13144" fg:w="58"/><text x="47.4830%" y="687.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="47.3911%" y="661" width="0.0503%" height="15" fill="rgb(240,176,51)" fg:x="13188" fg:w="14"/><text x="47.6411%" y="671.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="47.3911%" y="645" width="0.0503%" height="15" fill="rgb(249,146,41)" fg:x="13188" fg:w="14"/><text x="47.6411%" y="655.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="47.3911%" y="629" width="0.0503%" height="15" fill="rgb(213,208,4)" fg:x="13188" fg:w="14"/><text x="47.6411%" y="639.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="47.3983%" y="613" width="0.0431%" height="15" fill="rgb(245,84,36)" fg:x="13190" fg:w="12"/><text x="47.6483%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="47.4199%" y="597" width="0.0216%" height="15" fill="rgb(254,84,18)" fg:x="13196" fg:w="6"/><text x="47.6699%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4306%" y="581" width="0.0108%" height="15" fill="rgb(225,38,54)" fg:x="13199" fg:w="3"/><text x="47.6806%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4306%" y="565" width="0.0108%" height="15" fill="rgb(246,50,30)" fg:x="13199" fg:w="3"/><text x="47.6806%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4306%" y="549" width="0.0108%" height="15" fill="rgb(246,148,9)" fg:x="13199" fg:w="3"/><text x="47.6806%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (72 samples, 0.26%)</title><rect x="47.1935%" y="789" width="0.2587%" height="15" fill="rgb(223,75,4)" fg:x="13133" fg:w="72"/><text x="47.4435%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (72 samples, 0.26%)</title><rect x="47.1935%" y="773" width="0.2587%" height="15" fill="rgb(239,148,41)" fg:x="13133" fg:w="72"/><text x="47.4435%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (72 samples, 0.26%)</title><rect x="47.1935%" y="757" width="0.2587%" height="15" fill="rgb(205,195,3)" fg:x="13133" fg:w="72"/><text x="47.4435%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 0.26%)</title><rect x="47.1935%" y="741" width="0.2587%" height="15" fill="rgb(254,161,1)" fg:x="13133" fg:w="72"/><text x="47.4435%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 0.26%)</title><rect x="47.1935%" y="725" width="0.2587%" height="15" fill="rgb(211,229,8)" fg:x="13133" fg:w="72"/><text x="47.4435%" y="735.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.26%)</title><rect x="47.1971%" y="709" width="0.2551%" height="15" fill="rgb(220,97,9)" fg:x="13134" fg:w="71"/><text x="47.4471%" y="719.50"></text></g><g><title>malloc (71 samples, 0.26%)</title><rect x="47.1971%" y="693" width="0.2551%" height="15" fill="rgb(240,218,8)" fg:x="13134" fg:w="71"/><text x="47.4471%" y="703.50"></text></g><g><title>__lll_lock_wake_private (3 samples, 0.01%)</title><rect x="47.4414%" y="677" width="0.0108%" height="15" fill="rgb(250,44,0)" fg:x="13202" fg:w="3"/><text x="47.6914%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4414%" y="661" width="0.0108%" height="15" fill="rgb(236,41,53)" fg:x="13202" fg:w="3"/><text x="47.6914%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4414%" y="645" width="0.0108%" height="15" fill="rgb(218,227,13)" fg:x="13202" fg:w="3"/><text x="47.6914%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4414%" y="629" width="0.0108%" height="15" fill="rgb(217,94,32)" fg:x="13202" fg:w="3"/><text x="47.6914%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4414%" y="613" width="0.0108%" height="15" fill="rgb(213,217,12)" fg:x="13202" fg:w="3"/><text x="47.6914%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4414%" y="597" width="0.0108%" height="15" fill="rgb(229,13,46)" fg:x="13202" fg:w="3"/><text x="47.6914%" y="607.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::new (75 samples, 0.27%)</title><rect x="47.1863%" y="821" width="0.2695%" height="15" fill="rgb(243,139,5)" fg:x="13131" fg:w="75"/><text x="47.4363%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (73 samples, 0.26%)</title><rect x="47.1935%" y="805" width="0.2623%" height="15" fill="rgb(249,38,45)" fg:x="13133" fg:w="73"/><text x="47.4435%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4989%" y="645" width="0.0108%" height="15" fill="rgb(216,70,11)" fg:x="13218" fg:w="3"/><text x="47.7489%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4989%" y="629" width="0.0108%" height="15" fill="rgb(253,101,25)" fg:x="13218" fg:w="3"/><text x="47.7489%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4989%" y="613" width="0.0108%" height="15" fill="rgb(207,197,30)" fg:x="13218" fg:w="3"/><text x="47.7489%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.4989%" y="597" width="0.0108%" height="15" fill="rgb(238,87,13)" fg:x="13218" fg:w="3"/><text x="47.7489%" y="607.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="47.4953%" y="661" width="0.0216%" height="15" fill="rgb(215,155,8)" fg:x="13217" fg:w="6"/><text x="47.7453%" y="671.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="47.4845%" y="677" width="0.0359%" height="15" fill="rgb(239,166,38)" fg:x="13214" fg:w="10"/><text x="47.7345%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,531 samples, 5.50%)</title><rect x="42.0260%" y="949" width="5.5017%" height="15" fill="rgb(240,194,35)" fg:x="11695" fg:w="1531"/><text x="42.2760%" y="959.50">&lt;alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,531 samples, 5.50%)</title><rect x="42.0260%" y="933" width="5.5017%" height="15" fill="rgb(219,10,44)" fg:x="11695" fg:w="1531"/><text x="42.2760%" y="943.50">core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,531 samples, 5.50%)</title><rect x="42.0260%" y="917" width="5.5017%" height="15" fill="rgb(251,220,35)" fg:x="11695" fg:w="1531"/><text x="42.2760%" y="927.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,529 samples, 5.49%)</title><rect x="42.0332%" y="901" width="5.4945%" height="15" fill="rgb(218,117,13)" fg:x="11697" fg:w="1529"/><text x="42.2832%" y="911.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,523 samples, 5.47%)</title><rect x="42.0548%" y="885" width="5.4729%" height="15" fill="rgb(221,213,40)" fg:x="11703" fg:w="1523"/><text x="42.3048%" y="895.50">core::i..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1,523 samples, 5.47%)</title><rect x="42.0548%" y="869" width="5.4729%" height="15" fill="rgb(251,224,35)" fg:x="11703" fg:w="1523"/><text x="42.3048%" y="879.50">&lt;core::..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,523 samples, 5.47%)</title><rect x="42.0548%" y="853" width="5.4729%" height="15" fill="rgb(241,33,39)" fg:x="11703" fg:w="1523"/><text x="42.3048%" y="863.50">core::i..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (1,515 samples, 5.44%)</title><rect x="42.0835%" y="837" width="5.4442%" height="15" fill="rgb(222,74,17)" fg:x="11711" fg:w="1515"/><text x="42.3335%" y="847.50">zenoh_t..</text></g><g><title>zenoh_transport::common::pipeline::StageRefill::new (20 samples, 0.07%)</title><rect x="47.4558%" y="821" width="0.0719%" height="15" fill="rgb(225,103,0)" fg:x="13206" fg:w="20"/><text x="47.7058%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (20 samples, 0.07%)</title><rect x="47.4558%" y="805" width="0.0719%" height="15" fill="rgb(240,0,12)" fg:x="13206" fg:w="20"/><text x="47.7058%" y="815.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (20 samples, 0.07%)</title><rect x="47.4558%" y="789" width="0.0719%" height="15" fill="rgb(233,213,37)" fg:x="13206" fg:w="20"/><text x="47.7058%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.06%)</title><rect x="47.4666%" y="773" width="0.0611%" height="15" fill="rgb(225,84,52)" fg:x="13209" fg:w="17"/><text x="47.7166%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.06%)</title><rect x="47.4666%" y="757" width="0.0611%" height="15" fill="rgb(247,160,51)" fg:x="13209" fg:w="17"/><text x="47.7166%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.06%)</title><rect x="47.4666%" y="741" width="0.0611%" height="15" fill="rgb(244,60,51)" fg:x="13209" fg:w="17"/><text x="47.7166%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.06%)</title><rect x="47.4666%" y="725" width="0.0611%" height="15" fill="rgb(233,114,7)" fg:x="13209" fg:w="17"/><text x="47.7166%" y="735.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.06%)</title><rect x="47.4666%" y="709" width="0.0611%" height="15" fill="rgb(246,136,16)" fg:x="13209" fg:w="17"/><text x="47.7166%" y="719.50"></text></g><g><title>malloc (17 samples, 0.06%)</title><rect x="47.4666%" y="693" width="0.0611%" height="15" fill="rgb(243,114,45)" fg:x="13209" fg:w="17"/><text x="47.7166%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5852%" y="789" width="0.0144%" height="15" fill="rgb(247,183,43)" fg:x="13242" fg:w="4"/><text x="47.8352%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5852%" y="773" width="0.0144%" height="15" fill="rgb(251,210,42)" fg:x="13242" fg:w="4"/><text x="47.8352%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5852%" y="757" width="0.0144%" height="15" fill="rgb(221,88,35)" fg:x="13242" fg:w="4"/><text x="47.8352%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5852%" y="741" width="0.0144%" height="15" fill="rgb(242,21,20)" fg:x="13242" fg:w="4"/><text x="47.8352%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5852%" y="725" width="0.0144%" height="15" fill="rgb(233,226,36)" fg:x="13242" fg:w="4"/><text x="47.8352%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5852%" y="709" width="0.0144%" height="15" fill="rgb(243,189,34)" fg:x="13242" fg:w="4"/><text x="47.8352%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5852%" y="693" width="0.0144%" height="15" fill="rgb(207,145,50)" fg:x="13242" fg:w="4"/><text x="47.8352%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5852%" y="677" width="0.0144%" height="15" fill="rgb(242,1,50)" fg:x="13242" fg:w="4"/><text x="47.8352%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.5888%" y="661" width="0.0108%" height="15" fill="rgb(231,65,32)" fg:x="13243" fg:w="3"/><text x="47.8388%" y="671.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="47.5852%" y="805" width="0.0287%" height="15" fill="rgb(208,68,49)" fg:x="13242" fg:w="8"/><text x="47.8352%" y="815.50"></text></g><g><title>__mprotect (4 samples, 0.01%)</title><rect x="47.5995%" y="789" width="0.0144%" height="15" fill="rgb(253,54,49)" fg:x="13246" fg:w="4"/><text x="47.8495%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.5995%" y="773" width="0.0144%" height="15" fill="rgb(245,186,24)" fg:x="13246" fg:w="4"/><text x="47.8495%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.6031%" y="757" width="0.0108%" height="15" fill="rgb(209,2,41)" fg:x="13247" fg:w="3"/><text x="47.8531%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.6031%" y="741" width="0.0108%" height="15" fill="rgb(242,208,54)" fg:x="13247" fg:w="3"/><text x="47.8531%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.6031%" y="725" width="0.0108%" height="15" fill="rgb(225,9,51)" fg:x="13247" fg:w="3"/><text x="47.8531%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.6031%" y="709" width="0.0108%" height="15" fill="rgb(207,207,25)" fg:x="13247" fg:w="3"/><text x="47.8531%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.6031%" y="693" width="0.0108%" height="15" fill="rgb(253,96,18)" fg:x="13247" fg:w="3"/><text x="47.8531%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="47.6031%" y="677" width="0.0108%" height="15" fill="rgb(252,215,20)" fg:x="13247" fg:w="3"/><text x="47.8531%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,561 samples, 5.61%)</title><rect x="42.0260%" y="981" width="5.6095%" height="15" fill="rgb(245,227,26)" fg:x="11695" fg:w="1561"/><text x="42.2760%" y="991.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,561 samples, 5.61%)</title><rect x="42.0260%" y="965" width="5.6095%" height="15" fill="rgb(241,208,0)" fg:x="11695" fg:w="1561"/><text x="42.2760%" y="975.50">&lt;alloc:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (30 samples, 0.11%)</title><rect x="47.5277%" y="949" width="0.1078%" height="15" fill="rgb(224,130,10)" fg:x="13226" fg:w="30"/><text x="47.7777%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.11%)</title><rect x="47.5277%" y="933" width="0.1078%" height="15" fill="rgb(237,29,0)" fg:x="13226" fg:w="30"/><text x="47.7777%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.11%)</title><rect x="47.5277%" y="917" width="0.1078%" height="15" fill="rgb(219,27,41)" fg:x="13226" fg:w="30"/><text x="47.7777%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.11%)</title><rect x="47.5277%" y="901" width="0.1078%" height="15" fill="rgb(245,101,19)" fg:x="13226" fg:w="30"/><text x="47.7777%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.11%)</title><rect x="47.5277%" y="885" width="0.1078%" height="15" fill="rgb(243,44,37)" fg:x="13226" fg:w="30"/><text x="47.7777%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.11%)</title><rect x="47.5277%" y="869" width="0.1078%" height="15" fill="rgb(228,213,43)" fg:x="13226" fg:w="30"/><text x="47.7777%" y="879.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.11%)</title><rect x="47.5277%" y="853" width="0.1078%" height="15" fill="rgb(219,163,21)" fg:x="13226" fg:w="30"/><text x="47.7777%" y="863.50"></text></g><g><title>malloc (30 samples, 0.11%)</title><rect x="47.5277%" y="837" width="0.1078%" height="15" fill="rgb(234,86,24)" fg:x="13226" fg:w="30"/><text x="47.7777%" y="847.50"></text></g><g><title>[libc.so.6] (25 samples, 0.09%)</title><rect x="47.5456%" y="821" width="0.0898%" height="15" fill="rgb(225,10,24)" fg:x="13231" fg:w="25"/><text x="47.7956%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="47.6139%" y="805" width="0.0216%" height="15" fill="rgb(218,109,7)" fg:x="13250" fg:w="6"/><text x="47.8639%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="47.6139%" y="789" width="0.0216%" height="15" fill="rgb(210,20,26)" fg:x="13250" fg:w="6"/><text x="47.8639%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="47.6139%" y="773" width="0.0216%" height="15" fill="rgb(216,18,1)" fg:x="13250" fg:w="6"/><text x="47.8639%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="47.6139%" y="757" width="0.0216%" height="15" fill="rgb(206,163,23)" fg:x="13250" fg:w="6"/><text x="47.8639%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="47.6211%" y="741" width="0.0144%" height="15" fill="rgb(229,150,31)" fg:x="13252" fg:w="4"/><text x="47.8711%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,562 samples, 5.61%)</title><rect x="42.0260%" y="1013" width="5.6131%" height="15" fill="rgb(231,10,5)" fg:x="11695" fg:w="1562"/><text x="42.2760%" y="1023.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,562 samples, 5.61%)</title><rect x="42.0260%" y="997" width="5.6131%" height="15" fill="rgb(250,40,50)" fg:x="11695" fg:w="1562"/><text x="42.2760%" y="1007.50">&lt;alloc:..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (1,621 samples, 5.83%)</title><rect x="41.8176%" y="1029" width="5.8251%" height="15" fill="rgb(217,119,7)" fg:x="11637" fg:w="1621"/><text x="42.0676%" y="1039.50">zenoh_t..</text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (1,707 samples, 6.13%)</title><rect x="41.5121%" y="1077" width="6.1341%" height="15" fill="rgb(245,214,40)" fg:x="11552" fg:w="1707"/><text x="41.7621%" y="1087.50">zenoh_tr..</text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (1,657 samples, 5.95%)</title><rect x="41.6918%" y="1061" width="5.9544%" height="15" fill="rgb(216,187,1)" fg:x="11602" fg:w="1657"/><text x="41.9418%" y="1071.50">zenoh_tr..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (1,656 samples, 5.95%)</title><rect x="41.6954%" y="1045" width="5.9508%" height="15" fill="rgb(237,146,21)" fg:x="11603" fg:w="1656"/><text x="41.9454%" y="1055.50">zenoh_tr..</text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.01%)</title><rect x="47.6570%" y="1013" width="0.0108%" height="15" fill="rgb(210,174,47)" fg:x="13262" fg:w="3"/><text x="47.9070%" y="1023.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="47.6570%" y="997" width="0.0108%" height="15" fill="rgb(218,111,39)" fg:x="13262" fg:w="3"/><text x="47.9070%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (5 samples, 0.02%)</title><rect x="47.6570%" y="1045" width="0.0180%" height="15" fill="rgb(224,95,19)" fg:x="13262" fg:w="5"/><text x="47.9070%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.02%)</title><rect x="47.6570%" y="1029" width="0.0180%" height="15" fill="rgb(234,15,38)" fg:x="13262" fg:w="5"/><text x="47.9070%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.02%)</title><rect x="47.6822%" y="981" width="0.0180%" height="15" fill="rgb(246,56,12)" fg:x="13269" fg:w="5"/><text x="47.9322%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="47.6822%" y="965" width="0.0180%" height="15" fill="rgb(247,16,17)" fg:x="13269" fg:w="5"/><text x="47.9322%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="47.6822%" y="949" width="0.0180%" height="15" fill="rgb(215,151,11)" fg:x="13269" fg:w="5"/><text x="47.9322%" y="959.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="47.6822%" y="933" width="0.0180%" height="15" fill="rgb(225,16,24)" fg:x="13269" fg:w="5"/><text x="47.9322%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.03%)</title><rect x="47.6822%" y="1029" width="0.0252%" height="15" fill="rgb(217,117,5)" fg:x="13269" fg:w="7"/><text x="47.9322%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::convert::From&lt;alloc::boxed::Box&lt;T&gt;&gt;&gt;::from (7 samples, 0.03%)</title><rect x="47.6822%" y="1013" width="0.0252%" height="15" fill="rgb(246,187,53)" fg:x="13269" fg:w="7"/><text x="47.9322%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_box (7 samples, 0.03%)</title><rect x="47.6822%" y="997" width="0.0252%" height="15" fill="rgb(241,71,40)" fg:x="13269" fg:w="7"/><text x="47.9322%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="47.7073%" y="1029" width="0.0216%" height="15" fill="rgb(231,67,39)" fg:x="13276" fg:w="6"/><text x="47.9573%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.02%)</title><rect x="47.7073%" y="1013" width="0.0216%" height="15" fill="rgb(222,120,24)" fg:x="13276" fg:w="6"/><text x="47.9573%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="47.7073%" y="997" width="0.0216%" height="15" fill="rgb(248,3,3)" fg:x="13276" fg:w="6"/><text x="47.9573%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="47.7073%" y="981" width="0.0216%" height="15" fill="rgb(228,218,5)" fg:x="13276" fg:w="6"/><text x="47.9573%" y="991.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="47.7073%" y="965" width="0.0216%" height="15" fill="rgb(212,202,43)" fg:x="13276" fg:w="6"/><text x="47.9573%" y="975.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="47.7073%" y="949" width="0.0216%" height="15" fill="rgb(235,183,2)" fg:x="13276" fg:w="6"/><text x="47.9573%" y="959.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="47.7181%" y="933" width="0.0108%" height="15" fill="rgb(230,165,10)" fg:x="13279" fg:w="3"/><text x="47.9681%" y="943.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="47.7684%" y="901" width="0.0108%" height="15" fill="rgb(219,54,40)" fg:x="13293" fg:w="3"/><text x="48.0184%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="47.7397%" y="1013" width="0.0431%" height="15" fill="rgb(244,73,9)" fg:x="13285" fg:w="12"/><text x="47.9897%" y="1023.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.04%)</title><rect x="47.7397%" y="997" width="0.0431%" height="15" fill="rgb(212,32,45)" fg:x="13285" fg:w="12"/><text x="47.9897%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.04%)</title><rect x="47.7397%" y="981" width="0.0431%" height="15" fill="rgb(205,58,31)" fg:x="13285" fg:w="12"/><text x="47.9897%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.04%)</title><rect x="47.7397%" y="965" width="0.0431%" height="15" fill="rgb(250,120,43)" fg:x="13285" fg:w="12"/><text x="47.9897%" y="975.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.04%)</title><rect x="47.7397%" y="949" width="0.0431%" height="15" fill="rgb(235,13,10)" fg:x="13285" fg:w="12"/><text x="47.9897%" y="959.50"></text></g><g><title>malloc (10 samples, 0.04%)</title><rect x="47.7469%" y="933" width="0.0359%" height="15" fill="rgb(232,219,31)" fg:x="13287" fg:w="10"/><text x="47.9969%" y="943.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="47.7541%" y="917" width="0.0287%" height="15" fill="rgb(218,157,51)" fg:x="13289" fg:w="8"/><text x="48.0041%" y="927.50"></text></g><g><title>zenoh_transport::common::conduit::TransportConduitRx::make (17 samples, 0.06%)</title><rect x="47.7361%" y="1029" width="0.0611%" height="15" fill="rgb(211,91,52)" fg:x="13284" fg:w="17"/><text x="47.9861%" y="1039.50"></text></g><g><title>zenoh_transport::common::conduit::TransportChannelRx::make (3 samples, 0.01%)</title><rect x="47.7864%" y="1013" width="0.0108%" height="15" fill="rgb(240,173,1)" fg:x="13298" fg:w="3"/><text x="48.0364%" y="1023.50"></text></g><g><title>zenoh_transport::common::defragmentation::DefragBuffer::make (3 samples, 0.01%)</title><rect x="47.7864%" y="997" width="0.0108%" height="15" fill="rgb(248,20,47)" fg:x="13298" fg:w="3"/><text x="48.0364%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="47.8044%" y="1013" width="0.0108%" height="15" fill="rgb(217,221,40)" fg:x="13303" fg:w="3"/><text x="48.0544%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::conduit::TransportChannelTx&gt;&gt; (3 samples, 0.01%)</title><rect x="47.8152%" y="1013" width="0.0108%" height="15" fill="rgb(226,149,51)" fg:x="13306" fg:w="3"/><text x="48.0652%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="47.8152%" y="997" width="0.0108%" height="15" fill="rgb(252,193,7)" fg:x="13306" fg:w="3"/><text x="48.0652%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_init::{{closure}} (55 samples, 0.20%)</title><rect x="47.6463%" y="1077" width="0.1976%" height="15" fill="rgb(205,123,0)" fg:x="13259" fg:w="55"/><text x="47.8963%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::init_transport_unicast (54 samples, 0.19%)</title><rect x="47.6498%" y="1061" width="0.1940%" height="15" fill="rgb(233,173,25)" fg:x="13260" fg:w="54"/><text x="47.8998%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::make (47 samples, 0.17%)</title><rect x="47.6750%" y="1045" width="0.1689%" height="15" fill="rgb(216,63,32)" fg:x="13267" fg:w="47"/><text x="47.9250%" y="1055.50"></text></g><g><title>zenoh_transport::common::conduit::TransportConduitTx::sync (11 samples, 0.04%)</title><rect x="47.8044%" y="1029" width="0.0395%" height="15" fill="rgb(209,56,45)" fg:x="13303" fg:w="11"/><text x="48.0544%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (5 samples, 0.02%)</title><rect x="47.8259%" y="1013" width="0.0180%" height="15" fill="rgb(226,111,49)" fg:x="13309" fg:w="5"/><text x="48.0759%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,297 samples, 8.25%)</title><rect x="39.6076%" y="1093" width="8.2543%" height="15" fill="rgb(244,181,21)" fg:x="11022" fg:w="2297"/><text x="39.8576%" y="1103.50">&lt;core::futu..</text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::sync::{{closure}} (5 samples, 0.02%)</title><rect x="47.8439%" y="1077" width="0.0180%" height="15" fill="rgb(222,126,15)" fg:x="13314" fg:w="5"/><text x="48.0939%" y="1087.50"></text></g><g><title>zenoh_transport::common::conduit::TransportConduitRx::sync (4 samples, 0.01%)</title><rect x="47.8475%" y="1061" width="0.0144%" height="15" fill="rgb(222,95,17)" fg:x="13315" fg:w="4"/><text x="48.0975%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (4 samples, 0.01%)</title><rect x="47.8475%" y="1045" width="0.0144%" height="15" fill="rgb(254,46,5)" fg:x="13315" fg:w="4"/><text x="48.0975%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (4 samples, 0.01%)</title><rect x="47.8655%" y="1093" width="0.0144%" height="15" fill="rgb(236,216,35)" fg:x="13320" fg:w="4"/><text x="48.1155%" y="1103.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (4 samples, 0.01%)</title><rect x="47.8655%" y="1077" width="0.0144%" height="15" fill="rgb(217,187,26)" fg:x="13320" fg:w="4"/><text x="48.1155%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,313 samples, 8.31%)</title><rect x="39.5788%" y="1125" width="8.3118%" height="15" fill="rgb(207,192,25)" fg:x="11014" fg:w="2313"/><text x="39.8288%" y="1135.50">&lt;core::futur..</text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (2,313 samples, 8.31%)</title><rect x="39.5788%" y="1109" width="8.3118%" height="15" fill="rgb(253,135,27)" fg:x="11014" fg:w="2313"/><text x="39.8288%" y="1119.50">zenoh_transp..</text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::add_link (3 samples, 0.01%)</title><rect x="47.8798%" y="1093" width="0.0108%" height="15" fill="rgb(211,122,29)" fg:x="13324" fg:w="3"/><text x="48.1298%" y="1103.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="47.8978%" y="965" width="0.0108%" height="15" fill="rgb(233,162,40)" fg:x="13329" fg:w="3"/><text x="48.1478%" y="975.50"></text></g><g><title>malloc (19 samples, 0.07%)</title><rect x="47.9158%" y="901" width="0.0683%" height="15" fill="rgb(222,184,47)" fg:x="13334" fg:w="19"/><text x="48.1658%" y="911.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="47.9409%" y="885" width="0.0431%" height="15" fill="rgb(249,99,23)" fg:x="13341" fg:w="12"/><text x="48.1909%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (25 samples, 0.09%)</title><rect x="47.8978%" y="981" width="0.0898%" height="15" fill="rgb(214,60,12)" fg:x="13329" fg:w="25"/><text x="48.1478%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.08%)</title><rect x="47.9086%" y="965" width="0.0791%" height="15" fill="rgb(250,229,36)" fg:x="13332" fg:w="22"/><text x="48.1586%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.08%)</title><rect x="47.9086%" y="949" width="0.0791%" height="15" fill="rgb(232,195,10)" fg:x="13332" fg:w="22"/><text x="48.1586%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.08%)</title><rect x="47.9086%" y="933" width="0.0791%" height="15" fill="rgb(205,213,31)" fg:x="13332" fg:w="22"/><text x="48.1586%" y="943.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.08%)</title><rect x="47.9086%" y="917" width="0.0791%" height="15" fill="rgb(237,43,8)" fg:x="13332" fg:w="22"/><text x="48.1586%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;alloc::sync::Arc&lt;async_io::reactor::Source&gt;&gt;&gt;&gt; (28 samples, 0.10%)</title><rect x="47.9876%" y="981" width="0.1006%" height="15" fill="rgb(216,208,3)" fg:x="13354" fg:w="28"/><text x="48.2376%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.10%)</title><rect x="47.9876%" y="965" width="0.1006%" height="15" fill="rgb(228,179,44)" fg:x="13354" fg:w="28"/><text x="48.2376%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.10%)</title><rect x="47.9876%" y="949" width="0.1006%" height="15" fill="rgb(230,192,27)" fg:x="13354" fg:w="28"/><text x="48.2376%" y="959.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (28 samples, 0.10%)</title><rect x="47.9876%" y="933" width="0.1006%" height="15" fill="rgb(251,30,38)" fg:x="13354" fg:w="28"/><text x="48.2376%" y="943.50"></text></g><g><title>syscall (25 samples, 0.09%)</title><rect x="47.9984%" y="917" width="0.0898%" height="15" fill="rgb(246,55,52)" fg:x="13357" fg:w="25"/><text x="48.2484%" y="927.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="47.9984%" y="901" width="0.0898%" height="15" fill="rgb(249,79,26)" fg:x="13357" fg:w="25"/><text x="48.2484%" y="911.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="47.9984%" y="885" width="0.0898%" height="15" fill="rgb(220,202,16)" fg:x="13357" fg:w="25"/><text x="48.2484%" y="895.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="47.9984%" y="869" width="0.0898%" height="15" fill="rgb(250,170,23)" fg:x="13357" fg:w="25"/><text x="48.2484%" y="879.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="47.9984%" y="853" width="0.0898%" height="15" fill="rgb(230,7,37)" fg:x="13357" fg:w="25"/><text x="48.2484%" y="863.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="48.0020%" y="837" width="0.0862%" height="15" fill="rgb(213,71,1)" fg:x="13358" fg:w="24"/><text x="48.2520%" y="847.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="48.0415%" y="821" width="0.0467%" height="15" fill="rgb(227,87,39)" fg:x="13369" fg:w="13"/><text x="48.2915%" y="831.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="48.0487%" y="805" width="0.0395%" height="15" fill="rgb(210,41,29)" fg:x="13371" fg:w="11"/><text x="48.2987%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="48.0595%" y="789" width="0.0287%" height="15" fill="rgb(206,191,31)" fg:x="13374" fg:w="8"/><text x="48.3095%" y="799.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="48.0631%" y="773" width="0.0252%" height="15" fill="rgb(247,75,54)" fg:x="13375" fg:w="7"/><text x="48.3131%" y="783.50"></text></g><g><title>polling::Poller::add (19 samples, 0.07%)</title><rect x="48.0883%" y="981" width="0.0683%" height="15" fill="rgb(208,54,50)" fg:x="13382" fg:w="19"/><text x="48.3383%" y="991.50"></text></g><g><title>polling::epoll::Poller::add (19 samples, 0.07%)</title><rect x="48.0883%" y="965" width="0.0683%" height="15" fill="rgb(214,90,37)" fg:x="13382" fg:w="19"/><text x="48.3383%" y="975.50"></text></g><g><title>polling::epoll::Poller::ctl (19 samples, 0.07%)</title><rect x="48.0883%" y="949" width="0.0683%" height="15" fill="rgb(220,132,6)" fg:x="13382" fg:w="19"/><text x="48.3383%" y="959.50"></text></g><g><title>epoll_ctl (19 samples, 0.07%)</title><rect x="48.0883%" y="933" width="0.0683%" height="15" fill="rgb(213,167,7)" fg:x="13382" fg:w="19"/><text x="48.3383%" y="943.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="48.0883%" y="917" width="0.0683%" height="15" fill="rgb(243,36,27)" fg:x="13382" fg:w="19"/><text x="48.3383%" y="927.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="48.0883%" y="901" width="0.0683%" height="15" fill="rgb(235,147,12)" fg:x="13382" fg:w="19"/><text x="48.3383%" y="911.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="48.0883%" y="885" width="0.0683%" height="15" fill="rgb(212,198,44)" fg:x="13382" fg:w="19"/><text x="48.3383%" y="895.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="48.0883%" y="869" width="0.0683%" height="15" fill="rgb(218,68,50)" fg:x="13382" fg:w="19"/><text x="48.3383%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="48.1350%" y="853" width="0.0216%" height="15" fill="rgb(224,79,48)" fg:x="13395" fg:w="6"/><text x="48.3850%" y="863.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (3 samples, 0.01%)</title><rect x="48.1565%" y="981" width="0.0108%" height="15" fill="rgb(213,191,50)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="991.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (3 samples, 0.01%)</title><rect x="48.1565%" y="965" width="0.0108%" height="15" fill="rgb(254,146,10)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="48.1565%" y="949" width="0.0108%" height="15" fill="rgb(215,175,11)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="48.1565%" y="933" width="0.0108%" height="15" fill="rgb(207,49,7)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="48.1565%" y="917" width="0.0108%" height="15" fill="rgb(234,144,29)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="48.1565%" y="901" width="0.0108%" height="15" fill="rgb(213,222,48)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.01%)</title><rect x="48.1565%" y="885" width="0.0108%" height="15" fill="rgb(222,8,6)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="48.1565%" y="869" width="0.0108%" height="15" fill="rgb(221,114,49)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="879.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.01%)</title><rect x="48.1565%" y="853" width="0.0108%" height="15" fill="rgb(250,140,42)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="863.50"></text></g><g><title>realloc (3 samples, 0.01%)</title><rect x="48.1565%" y="837" width="0.0108%" height="15" fill="rgb(250,150,27)" fg:x="13401" fg:w="3"/><text x="48.4065%" y="847.50"></text></g><g><title>std::sys::unix::futex::futex_wait (20 samples, 0.07%)</title><rect x="48.1817%" y="917" width="0.0719%" height="15" fill="rgb(252,159,3)" fg:x="13408" fg:w="20"/><text x="48.4317%" y="927.50"></text></g><g><title>syscall (15 samples, 0.05%)</title><rect x="48.1997%" y="901" width="0.0539%" height="15" fill="rgb(241,182,3)" fg:x="13413" fg:w="15"/><text x="48.4497%" y="911.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="48.2032%" y="885" width="0.0503%" height="15" fill="rgb(236,3,9)" fg:x="13414" fg:w="14"/><text x="48.4532%" y="895.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="48.2104%" y="869" width="0.0431%" height="15" fill="rgb(223,227,51)" fg:x="13416" fg:w="12"/><text x="48.4604%" y="879.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="48.2104%" y="853" width="0.0431%" height="15" fill="rgb(232,133,30)" fg:x="13416" fg:w="12"/><text x="48.4604%" y="863.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="48.2104%" y="837" width="0.0431%" height="15" fill="rgb(209,93,27)" fg:x="13416" fg:w="12"/><text x="48.4604%" y="847.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="48.2104%" y="821" width="0.0431%" height="15" fill="rgb(208,108,34)" fg:x="13416" fg:w="12"/><text x="48.4604%" y="831.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="48.2140%" y="805" width="0.0395%" height="15" fill="rgb(215,189,13)" fg:x="13417" fg:w="11"/><text x="48.4640%" y="815.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="48.2176%" y="789" width="0.0359%" height="15" fill="rgb(206,88,23)" fg:x="13418" fg:w="10"/><text x="48.4676%" y="799.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="48.2284%" y="773" width="0.0252%" height="15" fill="rgb(240,173,0)" fg:x="13421" fg:w="7"/><text x="48.4784%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="48.2428%" y="757" width="0.0108%" height="15" fill="rgb(223,106,52)" fg:x="13425" fg:w="3"/><text x="48.4928%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="48.2428%" y="741" width="0.0108%" height="15" fill="rgb(206,130,16)" fg:x="13425" fg:w="3"/><text x="48.4928%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (114 samples, 0.41%)</title><rect x="47.8906%" y="1077" width="0.4097%" height="15" fill="rgb(220,54,25)" fg:x="13327" fg:w="114"/><text x="48.1406%" y="1087.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (114 samples, 0.41%)</title><rect x="47.8906%" y="1061" width="0.4097%" height="15" fill="rgb(210,4,38)" fg:x="13327" fg:w="114"/><text x="48.1406%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (114 samples, 0.41%)</title><rect x="47.8906%" y="1045" width="0.4097%" height="15" fill="rgb(238,94,39)" fg:x="13327" fg:w="114"/><text x="48.1406%" y="1055.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (114 samples, 0.41%)</title><rect x="47.8906%" y="1029" width="0.4097%" height="15" fill="rgb(234,124,34)" fg:x="13327" fg:w="114"/><text x="48.1406%" y="1039.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (114 samples, 0.41%)</title><rect x="47.8906%" y="1013" width="0.4097%" height="15" fill="rgb(221,91,40)" fg:x="13327" fg:w="114"/><text x="48.1406%" y="1023.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (114 samples, 0.41%)</title><rect x="47.8906%" y="997" width="0.4097%" height="15" fill="rgb(246,53,28)" fg:x="13327" fg:w="114"/><text x="48.1406%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.13%)</title><rect x="48.1673%" y="981" width="0.1330%" height="15" fill="rgb(229,109,7)" fg:x="13404" fg:w="37"/><text x="48.4173%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.13%)</title><rect x="48.1673%" y="965" width="0.1330%" height="15" fill="rgb(249,117,8)" fg:x="13404" fg:w="37"/><text x="48.4173%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (37 samples, 0.13%)</title><rect x="48.1673%" y="949" width="0.1330%" height="15" fill="rgb(210,181,1)" fg:x="13404" fg:w="37"/><text x="48.4173%" y="959.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (33 samples, 0.12%)</title><rect x="48.1817%" y="933" width="0.1186%" height="15" fill="rgb(211,66,1)" fg:x="13408" fg:w="33"/><text x="48.4317%" y="943.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (13 samples, 0.05%)</title><rect x="48.2536%" y="917" width="0.0467%" height="15" fill="rgb(221,90,14)" fg:x="13428" fg:w="13"/><text x="48.5036%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.01%)</title><rect x="48.2895%" y="901" width="0.0108%" height="15" fill="rgb(219,222,44)" fg:x="13438" fg:w="3"/><text x="48.5395%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="48.2895%" y="885" width="0.0108%" height="15" fill="rgb(246,34,33)" fg:x="13438" fg:w="3"/><text x="48.5395%" y="895.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (2,432 samples, 8.74%)</title><rect x="39.5788%" y="1237" width="8.7394%" height="15" fill="rgb(227,135,41)" fg:x="11014" fg:w="2432"/><text x="39.8288%" y="1247.50">zenoh::net::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,432 samples, 8.74%)</title><rect x="39.5788%" y="1221" width="8.7394%" height="15" fill="rgb(226,15,14)" fg:x="11014" fg:w="2432"/><text x="39.8288%" y="1231.50">&lt;core::futur..</text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_client::{{closure}} (2,432 samples, 8.74%)</title><rect x="39.5788%" y="1205" width="8.7394%" height="15" fill="rgb(236,148,47)" fg:x="11014" fg:w="2432"/><text x="39.8288%" y="1215.50">zenoh::net::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,432 samples, 8.74%)</title><rect x="39.5788%" y="1189" width="8.7394%" height="15" fill="rgb(233,162,52)" fg:x="11014" fg:w="2432"/><text x="39.8288%" y="1199.50">&lt;core::futur..</text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (2,432 samples, 8.74%)</title><rect x="39.5788%" y="1173" width="8.7394%" height="15" fill="rgb(244,35,28)" fg:x="11014" fg:w="2432"/><text x="39.8288%" y="1183.50">zenoh_transp..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,432 samples, 8.74%)</title><rect x="39.5788%" y="1157" width="8.7394%" height="15" fill="rgb(205,121,10)" fg:x="11014" fg:w="2432"/><text x="39.8288%" y="1167.50">&lt;core::futur..</text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (2,432 samples, 8.74%)</title><rect x="39.5788%" y="1141" width="8.7394%" height="15" fill="rgb(250,58,18)" fg:x="11014" fg:w="2432"/><text x="39.8288%" y="1151.50">zenoh_transp..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (119 samples, 0.43%)</title><rect x="47.8906%" y="1125" width="0.4276%" height="15" fill="rgb(216,37,13)" fg:x="13327" fg:w="119"/><text x="48.1406%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (119 samples, 0.43%)</title><rect x="47.8906%" y="1109" width="0.4276%" height="15" fill="rgb(221,215,42)" fg:x="13327" fg:w="119"/><text x="48.1406%" y="1119.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (119 samples, 0.43%)</title><rect x="47.8906%" y="1093" width="0.4276%" height="15" fill="rgb(217,214,19)" fg:x="13327" fg:w="119"/><text x="48.1406%" y="1103.50"></text></g><g><title>zenoh_link_tcp::unicast::LinkUnicastTcp::new (5 samples, 0.02%)</title><rect x="48.3003%" y="1077" width="0.0180%" height="15" fill="rgb(233,139,13)" fg:x="13441" fg:w="5"/><text x="48.5503%" y="1087.50"></text></g><g><title>zenoh_protocol_core::locators::Locator::new (5 samples, 0.02%)</title><rect x="48.3003%" y="1061" width="0.0180%" height="15" fill="rgb(247,168,23)" fg:x="13441" fg:w="5"/><text x="48.5503%" y="1071.50"></text></g><g><title>alloc::fmt::format (4 samples, 0.01%)</title><rect x="48.3039%" y="1045" width="0.0144%" height="15" fill="rgb(207,202,1)" fg:x="13442" fg:w="4"/><text x="48.5539%" y="1055.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.01%)</title><rect x="48.3039%" y="1029" width="0.0144%" height="15" fill="rgb(220,155,48)" fg:x="13442" fg:w="4"/><text x="48.5539%" y="1039.50"></text></g><g><title>core::fmt::write (4 samples, 0.01%)</title><rect x="48.3039%" y="1013" width="0.0144%" height="15" fill="rgb(250,43,26)" fg:x="13442" fg:w="4"/><text x="48.5539%" y="1023.50"></text></g><g><title>&lt;std::net::addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="48.3039%" y="997" width="0.0144%" height="15" fill="rgb(212,190,23)" fg:x="13442" fg:w="4"/><text x="48.5539%" y="1007.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.01%)</title><rect x="48.3039%" y="981" width="0.0144%" height="15" fill="rgb(216,39,24)" fg:x="13442" fg:w="4"/><text x="48.5539%" y="991.50"></text></g><g><title>core::fmt::write (4 samples, 0.01%)</title><rect x="48.3039%" y="965" width="0.0144%" height="15" fill="rgb(252,113,16)" fg:x="13442" fg:w="4"/><text x="48.5539%" y="975.50"></text></g><g><title>&lt;std::net::ip::Ipv4Addr as core::fmt::Display&gt;::fmt (4 samples, 0.01%)</title><rect x="48.3039%" y="949" width="0.0144%" height="15" fill="rgb(208,113,19)" fg:x="13442" fg:w="4"/><text x="48.5539%" y="959.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.01%)</title><rect x="48.3075%" y="933" width="0.0108%" height="15" fill="rgb(234,107,25)" fg:x="13443" fg:w="3"/><text x="48.5575%" y="943.50"></text></g><g><title>core::fmt::write (3 samples, 0.01%)</title><rect x="48.3075%" y="917" width="0.0108%" height="15" fill="rgb(234,217,51)" fg:x="13443" fg:w="3"/><text x="48.5575%" y="927.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (3 samples, 0.01%)</title><rect x="48.3075%" y="901" width="0.0108%" height="15" fill="rgb(251,29,42)" fg:x="13443" fg:w="3"/><text x="48.5575%" y="911.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 0.01%)</title><rect x="48.3075%" y="885" width="0.0108%" height="15" fill="rgb(221,62,51)" fg:x="13443" fg:w="3"/><text x="48.5575%" y="895.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (8 samples, 0.03%)</title><rect x="48.3398%" y="1061" width="0.0287%" height="15" fill="rgb(240,192,43)" fg:x="13452" fg:w="8"/><text x="48.5898%" y="1071.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (8 samples, 0.03%)</title><rect x="48.3398%" y="1045" width="0.0287%" height="15" fill="rgb(224,157,47)" fg:x="13452" fg:w="8"/><text x="48.5898%" y="1055.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (8 samples, 0.03%)</title><rect x="48.3398%" y="1029" width="0.0287%" height="15" fill="rgb(226,84,45)" fg:x="13452" fg:w="8"/><text x="48.5898%" y="1039.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (8 samples, 0.03%)</title><rect x="48.3398%" y="1013" width="0.0287%" height="15" fill="rgb(208,207,23)" fg:x="13452" fg:w="8"/><text x="48.5898%" y="1023.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::new_native (4 samples, 0.01%)</title><rect x="48.3757%" y="1029" width="0.0144%" height="15" fill="rgb(253,34,51)" fg:x="13462" fg:w="4"/><text x="48.6257%" y="1039.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_traits::identities::Zero&gt;::zero (5 samples, 0.02%)</title><rect x="48.3757%" y="1061" width="0.0180%" height="15" fill="rgb(227,26,34)" fg:x="13462" fg:w="5"/><text x="48.6257%" y="1071.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::new (5 samples, 0.02%)</title><rect x="48.3757%" y="1045" width="0.0180%" height="15" fill="rgb(245,75,19)" fg:x="13462" fg:w="5"/><text x="48.6257%" y="1055.50"></text></g><g><title>core::mem::swap (9 samples, 0.03%)</title><rect x="48.3937%" y="1061" width="0.0323%" height="15" fill="rgb(250,191,31)" fg:x="13467" fg:w="9"/><text x="48.6437%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping (9 samples, 0.03%)</title><rect x="48.3937%" y="1045" width="0.0323%" height="15" fill="rgb(224,11,50)" fg:x="13467" fg:w="9"/><text x="48.6437%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple (9 samples, 0.03%)</title><rect x="48.3937%" y="1029" width="0.0323%" height="15" fill="rgb(231,171,7)" fg:x="13467" fg:w="9"/><text x="48.6437%" y="1039.50"></text></g><g><title>core::mem::swap_simple (9 samples, 0.03%)</title><rect x="48.3937%" y="1013" width="0.0323%" height="15" fill="rgb(252,214,10)" fg:x="13467" fg:w="9"/><text x="48.6437%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (6 samples, 0.02%)</title><rect x="48.4260%" y="965" width="0.0216%" height="15" fill="rgb(249,45,46)" fg:x="13476" fg:w="6"/><text x="48.6760%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (6 samples, 0.02%)</title><rect x="48.4260%" y="949" width="0.0216%" height="15" fill="rgb(240,173,7)" fg:x="13476" fg:w="6"/><text x="48.6760%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="48.4260%" y="933" width="0.0216%" height="15" fill="rgb(235,214,13)" fg:x="13476" fg:w="6"/><text x="48.6760%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="48.4260%" y="917" width="0.0216%" height="15" fill="rgb(245,156,8)" fg:x="13476" fg:w="6"/><text x="48.6760%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="48.4260%" y="901" width="0.0216%" height="15" fill="rgb(235,46,12)" fg:x="13476" fg:w="6"/><text x="48.6760%" y="911.50"></text></g><g><title>cfree (6 samples, 0.02%)</title><rect x="48.4260%" y="885" width="0.0216%" height="15" fill="rgb(221,81,14)" fg:x="13476" fg:w="6"/><text x="48.6760%" y="895.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="48.4260%" y="869" width="0.0216%" height="15" fill="rgb(238,207,9)" fg:x="13476" fg:w="6"/><text x="48.6760%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="48.4260%" y="1045" width="0.0252%" height="15" fill="rgb(224,129,35)" fg:x="13476" fg:w="7"/><text x="48.6760%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[num_bigint_dig::biguint::BigUint]&gt; (7 samples, 0.03%)</title><rect x="48.4260%" y="1029" width="0.0252%" height="15" fill="rgb(243,218,34)" fg:x="13476" fg:w="7"/><text x="48.6760%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;num_bigint_dig::biguint::BigUint&gt; (7 samples, 0.03%)</title><rect x="48.4260%" y="1013" width="0.0252%" height="15" fill="rgb(220,166,13)" fg:x="13476" fg:w="7"/><text x="48.6760%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[u64: 4]&gt;&gt; (7 samples, 0.03%)</title><rect x="48.4260%" y="997" width="0.0252%" height="15" fill="rgb(227,167,49)" fg:x="13476" fg:w="7"/><text x="48.6760%" y="1007.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="48.4260%" y="981" width="0.0252%" height="15" fill="rgb(234,142,12)" fg:x="13476" fg:w="7"/><text x="48.6760%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;num_bigint_dig::biguint::BigUint&gt;&gt; (8 samples, 0.03%)</title><rect x="48.4260%" y="1061" width="0.0287%" height="15" fill="rgb(207,100,48)" fg:x="13476" fg:w="8"/><text x="48.6760%" y="1071.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (5 samples, 0.02%)</title><rect x="48.5662%" y="1013" width="0.0180%" height="15" fill="rgb(210,25,14)" fg:x="13515" fg:w="5"/><text x="48.8162%" y="1023.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.04%)</title><rect x="48.5554%" y="1045" width="0.0359%" height="15" fill="rgb(246,116,27)" fg:x="13512" fg:w="10"/><text x="48.8054%" y="1055.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (10 samples, 0.04%)</title><rect x="48.5554%" y="1029" width="0.0359%" height="15" fill="rgb(214,193,42)" fg:x="13512" fg:w="10"/><text x="48.8054%" y="1039.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.01%)</title><rect x="48.5913%" y="1045" width="0.0108%" height="15" fill="rgb(214,122,8)" fg:x="13522" fg:w="3"/><text x="48.8413%" y="1055.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (3 samples, 0.01%)</title><rect x="48.5913%" y="1029" width="0.0108%" height="15" fill="rgb(244,173,18)" fg:x="13522" fg:w="3"/><text x="48.8413%" y="1039.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (3 samples, 0.01%)</title><rect x="48.5913%" y="1013" width="0.0108%" height="15" fill="rgb(232,68,19)" fg:x="13522" fg:w="3"/><text x="48.8413%" y="1023.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="48.6021%" y="1029" width="0.0216%" height="15" fill="rgb(236,224,1)" fg:x="13525" fg:w="6"/><text x="48.8521%" y="1039.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (6 samples, 0.02%)</title><rect x="48.6021%" y="1013" width="0.0216%" height="15" fill="rgb(240,11,8)" fg:x="13525" fg:w="6"/><text x="48.8521%" y="1023.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (5 samples, 0.02%)</title><rect x="48.6057%" y="997" width="0.0180%" height="15" fill="rgb(244,159,20)" fg:x="13526" fg:w="5"/><text x="48.8557%" y="1007.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (13 samples, 0.05%)</title><rect x="48.6021%" y="1045" width="0.0467%" height="15" fill="rgb(240,223,54)" fg:x="13525" fg:w="13"/><text x="48.8521%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.03%)</title><rect x="48.6237%" y="1029" width="0.0252%" height="15" fill="rgb(237,146,5)" fg:x="13531" fg:w="7"/><text x="48.8737%" y="1039.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.03%)</title><rect x="48.6237%" y="1013" width="0.0252%" height="15" fill="rgb(218,221,32)" fg:x="13531" fg:w="7"/><text x="48.8737%" y="1023.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.04%)</title><rect x="48.6488%" y="1029" width="0.0431%" height="15" fill="rgb(244,96,26)" fg:x="13538" fg:w="12"/><text x="48.8988%" y="1039.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (6 samples, 0.02%)</title><rect x="48.6704%" y="1013" width="0.0216%" height="15" fill="rgb(245,184,37)" fg:x="13544" fg:w="6"/><text x="48.9204%" y="1023.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (3 samples, 0.01%)</title><rect x="48.6812%" y="997" width="0.0108%" height="15" fill="rgb(248,91,47)" fg:x="13547" fg:w="3"/><text x="48.9312%" y="1007.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (5 samples, 0.02%)</title><rect x="48.6920%" y="1013" width="0.0180%" height="15" fill="rgb(243,199,8)" fg:x="13550" fg:w="5"/><text x="48.9420%" y="1023.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (18 samples, 0.06%)</title><rect x="48.6488%" y="1045" width="0.0647%" height="15" fill="rgb(249,12,15)" fg:x="13538" fg:w="18"/><text x="48.8988%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (6 samples, 0.02%)</title><rect x="48.6920%" y="1029" width="0.0216%" height="15" fill="rgb(245,97,12)" fg:x="13550" fg:w="6"/><text x="48.9420%" y="1039.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.02%)</title><rect x="48.7135%" y="1045" width="0.0216%" height="15" fill="rgb(244,61,1)" fg:x="13556" fg:w="6"/><text x="48.9635%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.02%)</title><rect x="48.7135%" y="1029" width="0.0216%" height="15" fill="rgb(222,194,10)" fg:x="13556" fg:w="6"/><text x="48.9635%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.02%)</title><rect x="48.7171%" y="1013" width="0.0180%" height="15" fill="rgb(226,178,8)" fg:x="13557" fg:w="5"/><text x="48.9671%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (3 samples, 0.01%)</title><rect x="48.7351%" y="1045" width="0.0108%" height="15" fill="rgb(241,32,34)" fg:x="13562" fg:w="3"/><text x="48.9851%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap_with_slice (12 samples, 0.04%)</title><rect x="48.7459%" y="1045" width="0.0431%" height="15" fill="rgb(254,26,6)" fg:x="13565" fg:w="12"/><text x="48.9959%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping (12 samples, 0.04%)</title><rect x="48.7459%" y="1029" width="0.0431%" height="15" fill="rgb(249,71,11)" fg:x="13565" fg:w="12"/><text x="48.9959%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple (12 samples, 0.04%)</title><rect x="48.7459%" y="1013" width="0.0431%" height="15" fill="rgb(232,170,27)" fg:x="13565" fg:w="12"/><text x="48.9959%" y="1023.50"></text></g><g><title>core::mem::swap_simple (8 samples, 0.03%)</title><rect x="48.7602%" y="997" width="0.0287%" height="15" fill="rgb(214,223,17)" fg:x="13569" fg:w="8"/><text x="49.0102%" y="1007.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="48.7674%" y="981" width="0.0216%" height="15" fill="rgb(250,18,15)" fg:x="13571" fg:w="6"/><text x="49.0174%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.08%)</title><rect x="48.9148%" y="1029" width="0.0827%" height="15" fill="rgb(212,153,51)" fg:x="13612" fg:w="23"/><text x="49.1648%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (23 samples, 0.08%)</title><rect x="48.9148%" y="1013" width="0.0827%" height="15" fill="rgb(219,194,12)" fg:x="13612" fg:w="23"/><text x="49.1648%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (3 samples, 0.01%)</title><rect x="48.9974%" y="1029" width="0.0108%" height="15" fill="rgb(212,58,17)" fg:x="13635" fg:w="3"/><text x="49.2474%" y="1039.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3 samples, 0.01%)</title><rect x="48.9974%" y="1013" width="0.0108%" height="15" fill="rgb(254,5,10)" fg:x="13635" fg:w="3"/><text x="49.2474%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (3 samples, 0.01%)</title><rect x="48.9974%" y="997" width="0.0108%" height="15" fill="rgb(246,91,7)" fg:x="13635" fg:w="3"/><text x="49.2474%" y="1007.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (25 samples, 0.09%)</title><rect x="49.0082%" y="1029" width="0.0898%" height="15" fill="rgb(218,108,49)" fg:x="13638" fg:w="25"/><text x="49.2582%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25 samples, 0.09%)</title><rect x="49.0082%" y="1013" width="0.0898%" height="15" fill="rgb(238,123,20)" fg:x="13638" fg:w="25"/><text x="49.2582%" y="1023.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (165 samples, 0.59%)</title><rect x="48.7890%" y="1045" width="0.5929%" height="15" fill="rgb(231,69,23)" fg:x="13577" fg:w="165"/><text x="49.0390%" y="1055.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (79 samples, 0.28%)</title><rect x="49.0980%" y="1029" width="0.2839%" height="15" fill="rgb(230,209,3)" fg:x="13663" fg:w="79"/><text x="49.3480%" y="1039.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (3 samples, 0.01%)</title><rect x="49.3819%" y="1045" width="0.0108%" height="15" fill="rgb(231,19,0)" fg:x="13742" fg:w="3"/><text x="49.6319%" y="1055.50"></text></g><g><title>num_bigint_dig::biguint::monty::sub_vv (8 samples, 0.03%)</title><rect x="49.3927%" y="1045" width="0.0287%" height="15" fill="rgb(226,192,25)" fg:x="13745" fg:w="8"/><text x="49.6427%" y="1055.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (3 samples, 0.01%)</title><rect x="49.4250%" y="1045" width="0.0108%" height="15" fill="rgb(223,175,53)" fg:x="13754" fg:w="3"/><text x="49.6750%" y="1055.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (3 samples, 0.01%)</title><rect x="49.4250%" y="1029" width="0.0108%" height="15" fill="rgb(248,35,51)" fg:x="13754" fg:w="3"/><text x="49.6750%" y="1039.50"></text></g><g><title>smallvec::SetLenOnDrop::increment_len (5 samples, 0.02%)</title><rect x="49.4646%" y="1013" width="0.0180%" height="15" fill="rgb(230,37,26)" fg:x="13765" fg:w="5"/><text x="49.7146%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="49.4861%" y="965" width="0.0216%" height="15" fill="rgb(206,120,22)" fg:x="13771" fg:w="6"/><text x="49.7361%" y="975.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="49.4933%" y="949" width="0.0144%" height="15" fill="rgb(207,165,28)" fg:x="13773" fg:w="4"/><text x="49.7433%" y="959.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (21 samples, 0.08%)</title><rect x="49.4358%" y="1045" width="0.0755%" height="15" fill="rgb(226,23,46)" fg:x="13757" fg:w="21"/><text x="49.6858%" y="1055.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (20 samples, 0.07%)</title><rect x="49.4394%" y="1029" width="0.0719%" height="15" fill="rgb(208,130,44)" fg:x="13758" fg:w="20"/><text x="49.6894%" y="1039.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (8 samples, 0.03%)</title><rect x="49.4825%" y="1013" width="0.0287%" height="15" fill="rgb(231,67,8)" fg:x="13770" fg:w="8"/><text x="49.7325%" y="1023.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (8 samples, 0.03%)</title><rect x="49.4825%" y="997" width="0.0287%" height="15" fill="rgb(205,183,22)" fg:x="13770" fg:w="8"/><text x="49.7325%" y="1007.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (8 samples, 0.03%)</title><rect x="49.4825%" y="981" width="0.0287%" height="15" fill="rgb(224,47,9)" fg:x="13770" fg:w="8"/><text x="49.7325%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (297 samples, 1.07%)</title><rect x="48.4548%" y="1061" width="1.0673%" height="15" fill="rgb(250,183,49)" fg:x="13484" fg:w="297"/><text x="48.7048%" y="1071.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::truncate (3 samples, 0.01%)</title><rect x="49.5113%" y="1045" width="0.0108%" height="15" fill="rgb(220,151,39)" fg:x="13778" fg:w="3"/><text x="49.7613%" y="1055.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::build (334 samples, 1.20%)</title><rect x="48.3254%" y="1237" width="1.2002%" height="15" fill="rgb(220,118,20)" fg:x="13448" fg:w="334"/><text x="48.5754%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (334 samples, 1.20%)</title><rect x="48.3254%" y="1221" width="1.2002%" height="15" fill="rgb(231,65,51)" fg:x="13448" fg:w="334"/><text x="48.5754%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (334 samples, 1.20%)</title><rect x="48.3254%" y="1205" width="1.2002%" height="15" fill="rgb(253,125,37)" fg:x="13448" fg:w="334"/><text x="48.5754%" y="1215.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (334 samples, 1.20%)</title><rect x="48.3254%" y="1189" width="1.2002%" height="15" fill="rgb(232,102,6)" fg:x="13448" fg:w="334"/><text x="48.5754%" y="1199.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (334 samples, 1.20%)</title><rect x="48.3254%" y="1173" width="1.2002%" height="15" fill="rgb(251,105,13)" fg:x="13448" fg:w="334"/><text x="48.5754%" y="1183.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (334 samples, 1.20%)</title><rect x="48.3254%" y="1157" width="1.2002%" height="15" fill="rgb(222,179,29)" fg:x="13448" fg:w="334"/><text x="48.5754%" y="1167.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (334 samples, 1.20%)</title><rect x="48.3254%" y="1141" width="1.2002%" height="15" fill="rgb(229,180,53)" fg:x="13448" fg:w="334"/><text x="48.5754%" y="1151.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (334 samples, 1.20%)</title><rect x="48.3254%" y="1125" width="1.2002%" height="15" fill="rgb(238,104,13)" fg:x="13448" fg:w="334"/><text x="48.5754%" y="1135.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (332 samples, 1.19%)</title><rect x="48.3326%" y="1109" width="1.1930%" height="15" fill="rgb(210,130,5)" fg:x="13450" fg:w="332"/><text x="48.5826%" y="1119.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (332 samples, 1.19%)</title><rect x="48.3326%" y="1093" width="1.1930%" height="15" fill="rgb(233,87,49)" fg:x="13450" fg:w="332"/><text x="48.5826%" y="1103.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (332 samples, 1.19%)</title><rect x="48.3326%" y="1077" width="1.1930%" height="15" fill="rgb(243,34,9)" fg:x="13450" fg:w="332"/><text x="48.5826%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.03%)</title><rect x="49.5257%" y="1221" width="0.0287%" height="15" fill="rgb(235,225,10)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::from_config::{{closure}} (8 samples, 0.03%)</title><rect x="49.5257%" y="1205" width="0.0287%" height="15" fill="rgb(212,0,30)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.03%)</title><rect x="49.5257%" y="1189" width="0.0287%" height="15" fill="rgb(211,177,0)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1199.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator::from_config::{{closure}} (8 samples, 0.03%)</title><rect x="49.5257%" y="1173" width="0.0287%" height="15" fill="rgb(225,220,11)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.03%)</title><rect x="49.5257%" y="1157" width="0.0287%" height="15" fill="rgb(215,10,13)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator::from_config::{{closure}} (8 samples, 0.03%)</title><rect x="49.5257%" y="1141" width="0.0287%" height="15" fill="rgb(240,177,14)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1151.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryManager::make (8 samples, 0.03%)</title><rect x="49.5257%" y="1125" width="0.0287%" height="15" fill="rgb(243,7,39)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1135.50"></text></g><g><title>shared_memory::ShmemConf::create (8 samples, 0.03%)</title><rect x="49.5257%" y="1109" width="0.0287%" height="15" fill="rgb(212,99,0)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1119.50"></text></g><g><title>shared_memory::unix::create_mapping (8 samples, 0.03%)</title><rect x="49.5257%" y="1093" width="0.0287%" height="15" fill="rgb(225,162,48)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1103.50"></text></g><g><title>nix::sys::mman::shm_open (8 samples, 0.03%)</title><rect x="49.5257%" y="1077" width="0.0287%" height="15" fill="rgb(246,16,25)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1087.50"></text></g><g><title>&lt;str as nix::NixPath&gt;::with_nix_path (8 samples, 0.03%)</title><rect x="49.5257%" y="1061" width="0.0287%" height="15" fill="rgb(220,150,2)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1071.50"></text></g><g><title>&lt;std::ffi::os_str::OsStr as nix::NixPath&gt;::with_nix_path (8 samples, 0.03%)</title><rect x="49.5257%" y="1045" width="0.0287%" height="15" fill="rgb(237,113,11)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1055.50"></text></g><g><title>&lt;[u8] as nix::NixPath&gt;::with_nix_path (8 samples, 0.03%)</title><rect x="49.5257%" y="1029" width="0.0287%" height="15" fill="rgb(236,70,20)" fg:x="13782" fg:w="8"/><text x="49.7757%" y="1039.50"></text></g><g><title>nix::sys::mman::shm_open::{{closure}} (5 samples, 0.02%)</title><rect x="49.5364%" y="1013" width="0.0180%" height="15" fill="rgb(234,94,7)" fg:x="13785" fg:w="5"/><text x="49.7864%" y="1023.50"></text></g><g><title>shm_open (5 samples, 0.02%)</title><rect x="49.5364%" y="997" width="0.0180%" height="15" fill="rgb(250,221,0)" fg:x="13785" fg:w="5"/><text x="49.7864%" y="1007.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.01%)</title><rect x="49.5652%" y="1093" width="0.0108%" height="15" fill="rgb(245,149,46)" fg:x="13793" fg:w="3"/><text x="49.8152%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.01%)</title><rect x="49.5652%" y="1077" width="0.0108%" height="15" fill="rgb(215,37,27)" fg:x="13793" fg:w="3"/><text x="49.8152%" y="1087.50"></text></g><g><title>&lt;zenoh_config::TransportLinkConf as core::default::Default&gt;::default (16 samples, 0.06%)</title><rect x="49.5580%" y="1173" width="0.0575%" height="15" fill="rgb(232,65,3)" fg:x="13791" fg:w="16"/><text x="49.8080%" y="1183.50"></text></g><g><title>zenoh_config::defaults::&lt;impl core::default::Default for zenoh_config::LinkTxConf&gt;::default (16 samples, 0.06%)</title><rect x="49.5580%" y="1157" width="0.0575%" height="15" fill="rgb(214,2,16)" fg:x="13791" fg:w="16"/><text x="49.8080%" y="1167.50"></text></g><g><title>num_cpus::get (16 samples, 0.06%)</title><rect x="49.5580%" y="1141" width="0.0575%" height="15" fill="rgb(227,131,50)" fg:x="13791" fg:w="16"/><text x="49.8080%" y="1151.50"></text></g><g><title>num_cpus::linux::get_num_cpus (16 samples, 0.06%)</title><rect x="49.5580%" y="1125" width="0.0575%" height="15" fill="rgb(247,131,45)" fg:x="13791" fg:w="16"/><text x="49.8080%" y="1135.50"></text></g><g><title>num_cpus::linux::logical_cpus (15 samples, 0.05%)</title><rect x="49.5616%" y="1109" width="0.0539%" height="15" fill="rgb(215,97,47)" fg:x="13792" fg:w="15"/><text x="49.8116%" y="1119.50"></text></g><g><title>sched_getaffinity (8 samples, 0.03%)</title><rect x="49.5867%" y="1093" width="0.0287%" height="15" fill="rgb(233,143,12)" fg:x="13799" fg:w="8"/><text x="49.8367%" y="1103.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="49.5903%" y="1077" width="0.0252%" height="15" fill="rgb(222,57,17)" fg:x="13800" fg:w="7"/><text x="49.8403%" y="1087.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="49.5903%" y="1061" width="0.0252%" height="15" fill="rgb(214,119,38)" fg:x="13800" fg:w="7"/><text x="49.8403%" y="1071.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="49.5903%" y="1045" width="0.0252%" height="15" fill="rgb(217,28,47)" fg:x="13800" fg:w="7"/><text x="49.8403%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="49.5975%" y="1029" width="0.0180%" height="15" fill="rgb(231,14,52)" fg:x="13802" fg:w="5"/><text x="49.8475%" y="1039.50"></text></g><g><title>&lt;zenoh_config::Config as core::default::Default&gt;::default (18 samples, 0.06%)</title><rect x="49.5544%" y="1205" width="0.0647%" height="15" fill="rgb(220,158,18)" fg:x="13790" fg:w="18"/><text x="49.8044%" y="1215.50"></text></g><g><title>&lt;zenoh_config::TransportConf as core::default::Default&gt;::default (17 samples, 0.06%)</title><rect x="49.5580%" y="1189" width="0.0611%" height="15" fill="rgb(222,143,46)" fg:x="13791" fg:w="17"/><text x="49.8080%" y="1199.50"></text></g><g><title>async_std::task::builder::Builder::build (3 samples, 0.01%)</title><rect x="49.6227%" y="1173" width="0.0108%" height="15" fill="rgb(227,165,5)" fg:x="13809" fg:w="3"/><text x="49.8727%" y="1183.50"></text></g><g><title>async_std::task::task::Task::new (3 samples, 0.01%)</title><rect x="49.6227%" y="1157" width="0.0108%" height="15" fill="rgb(216,222,49)" fg:x="13809" fg:w="3"/><text x="49.8727%" y="1167.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (3 samples, 0.01%)</title><rect x="49.6227%" y="1141" width="0.0108%" height="15" fill="rgb(238,73,39)" fg:x="13809" fg:w="3"/><text x="49.8727%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="49.7089%" y="869" width="0.0575%" height="15" fill="rgb(252,115,9)" fg:x="13833" fg:w="16"/><text x="49.9589%" y="879.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.06%)</title><rect x="49.7089%" y="853" width="0.0575%" height="15" fill="rgb(238,202,4)" fg:x="13833" fg:w="16"/><text x="49.9589%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (16 samples, 0.06%)</title><rect x="49.7089%" y="837" width="0.0575%" height="15" fill="rgb(252,153,44)" fg:x="13833" fg:w="16"/><text x="49.9589%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.06%)</title><rect x="49.7089%" y="821" width="0.0575%" height="15" fill="rgb(235,128,27)" fg:x="13833" fg:w="16"/><text x="49.9589%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.05%)</title><rect x="49.7161%" y="805" width="0.0503%" height="15" fill="rgb(221,121,47)" fg:x="13835" fg:w="14"/><text x="49.9661%" y="815.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (14 samples, 0.05%)</title><rect x="49.7161%" y="789" width="0.0503%" height="15" fill="rgb(247,211,47)" fg:x="13835" fg:w="14"/><text x="49.9661%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (10 samples, 0.04%)</title><rect x="49.7305%" y="773" width="0.0359%" height="15" fill="rgb(252,47,49)" fg:x="13839" fg:w="10"/><text x="49.9805%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (13 samples, 0.05%)</title><rect x="49.7700%" y="853" width="0.0467%" height="15" fill="rgb(219,119,53)" fg:x="13850" fg:w="13"/><text x="50.0200%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.04%)</title><rect x="49.7772%" y="837" width="0.0395%" height="15" fill="rgb(243,165,53)" fg:x="13852" fg:w="11"/><text x="50.0272%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.04%)</title><rect x="49.7772%" y="821" width="0.0395%" height="15" fill="rgb(230,12,35)" fg:x="13852" fg:w="11"/><text x="50.0272%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.04%)</title><rect x="49.7772%" y="805" width="0.0395%" height="15" fill="rgb(239,57,49)" fg:x="13852" fg:w="11"/><text x="50.0272%" y="815.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.04%)</title><rect x="49.7772%" y="789" width="0.0395%" height="15" fill="rgb(231,154,7)" fg:x="13852" fg:w="11"/><text x="50.0272%" y="799.50"></text></g><g><title>malloc (11 samples, 0.04%)</title><rect x="49.7772%" y="773" width="0.0395%" height="15" fill="rgb(248,81,34)" fg:x="13852" fg:w="11"/><text x="50.0272%" y="783.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="49.8203%" y="821" width="0.0180%" height="15" fill="rgb(247,9,5)" fg:x="13864" fg:w="5"/><text x="50.0703%" y="831.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="50.1150%" y="645" width="0.0287%" height="15" fill="rgb(228,172,27)" fg:x="13946" fg:w="8"/><text x="50.3650%" y="655.50"></text></g><g><title>[libc.so.6] (58 samples, 0.21%)</title><rect x="49.9461%" y="661" width="0.2084%" height="15" fill="rgb(230,57,44)" fg:x="13899" fg:w="58"/><text x="50.1961%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="50.1437%" y="645" width="0.0108%" height="15" fill="rgb(249,35,22)" fg:x="13954" fg:w="3"/><text x="50.3937%" y="655.50"></text></g><g><title>[libc.so.6] (60 samples, 0.22%)</title><rect x="49.9425%" y="677" width="0.2156%" height="15" fill="rgb(250,137,27)" fg:x="13898" fg:w="60"/><text x="50.1925%" y="687.50"></text></g><g><title>[libc.so.6] (81 samples, 0.29%)</title><rect x="49.8742%" y="693" width="0.2911%" height="15" fill="rgb(251,57,31)" fg:x="13879" fg:w="81"/><text x="50.1242%" y="703.50"></text></g><g><title>__rdl_alloc (90 samples, 0.32%)</title><rect x="49.8455%" y="757" width="0.3234%" height="15" fill="rgb(238,60,0)" fg:x="13871" fg:w="90"/><text x="50.0955%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (85 samples, 0.31%)</title><rect x="49.8634%" y="741" width="0.3054%" height="15" fill="rgb(242,185,39)" fg:x="13876" fg:w="85"/><text x="50.1134%" y="751.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (85 samples, 0.31%)</title><rect x="49.8634%" y="725" width="0.3054%" height="15" fill="rgb(240,63,43)" fg:x="13876" fg:w="85"/><text x="50.1134%" y="735.50"></text></g><g><title>posix_memalign (85 samples, 0.31%)</title><rect x="49.8634%" y="709" width="0.3054%" height="15" fill="rgb(236,155,6)" fg:x="13876" fg:w="85"/><text x="50.1134%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (99 samples, 0.36%)</title><rect x="49.8203%" y="837" width="0.3558%" height="15" fill="rgb(215,11,29)" fg:x="13864" fg:w="99"/><text x="50.0703%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (94 samples, 0.34%)</title><rect x="49.8383%" y="821" width="0.3378%" height="15" fill="rgb(228,180,48)" fg:x="13869" fg:w="94"/><text x="50.0883%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.34%)</title><rect x="49.8383%" y="805" width="0.3378%" height="15" fill="rgb(241,102,12)" fg:x="13869" fg:w="94"/><text x="50.0883%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.34%)</title><rect x="49.8383%" y="789" width="0.3378%" height="15" fill="rgb(246,213,4)" fg:x="13869" fg:w="94"/><text x="50.0883%" y="799.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.34%)</title><rect x="49.8383%" y="773" width="0.3378%" height="15" fill="rgb(218,134,35)" fg:x="13869" fg:w="94"/><text x="50.0883%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="50.3737%" y="805" width="0.0108%" height="15" fill="rgb(251,117,35)" fg:x="14018" fg:w="3"/><text x="50.6237%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="50.3737%" y="789" width="0.0108%" height="15" fill="rgb(206,156,45)" fg:x="14018" fg:w="3"/><text x="50.6237%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="50.3737%" y="773" width="0.0108%" height="15" fill="rgb(218,52,27)" fg:x="14018" fg:w="3"/><text x="50.6237%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="50.3737%" y="757" width="0.0108%" height="15" fill="rgb(238,83,36)" fg:x="14018" fg:w="3"/><text x="50.6237%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (87 samples, 0.31%)</title><rect x="50.1797%" y="821" width="0.3126%" height="15" fill="rgb(218,53,43)" fg:x="13964" fg:w="87"/><text x="50.4297%" y="831.50"></text></g><g><title>core::ptr::write (28 samples, 0.10%)</title><rect x="50.3917%" y="805" width="0.1006%" height="15" fill="rgb(239,54,39)" fg:x="14023" fg:w="28"/><text x="50.6417%" y="815.50"></text></g><g><title>[unknown] (25 samples, 0.09%)</title><rect x="50.4025%" y="789" width="0.0898%" height="15" fill="rgb(212,198,13)" fg:x="14026" fg:w="25"/><text x="50.6525%" y="799.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="50.4061%" y="773" width="0.0862%" height="15" fill="rgb(234,54,46)" fg:x="14027" fg:w="24"/><text x="50.6561%" y="783.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="50.4133%" y="757" width="0.0791%" height="15" fill="rgb(217,120,7)" fg:x="14029" fg:w="22"/><text x="50.6633%" y="767.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="50.4133%" y="741" width="0.0791%" height="15" fill="rgb(246,39,15)" fg:x="14029" fg:w="22"/><text x="50.6633%" y="751.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="50.4204%" y="725" width="0.0719%" height="15" fill="rgb(242,143,31)" fg:x="14031" fg:w="20"/><text x="50.6704%" y="735.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="50.4420%" y="709" width="0.0503%" height="15" fill="rgb(252,60,24)" fg:x="14037" fg:w="14"/><text x="50.6920%" y="719.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="50.4456%" y="693" width="0.0467%" height="15" fill="rgb(249,220,7)" fg:x="14038" fg:w="13"/><text x="50.6956%" y="703.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="50.4600%" y="677" width="0.0323%" height="15" fill="rgb(236,67,13)" fg:x="14042" fg:w="9"/><text x="50.7100%" y="687.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="50.5067%" y="677" width="0.0252%" height="15" fill="rgb(210,62,39)" fg:x="14055" fg:w="7"/><text x="50.7567%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="50.5103%" y="661" width="0.0216%" height="15" fill="rgb(219,122,53)" fg:x="14056" fg:w="6"/><text x="50.7603%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="50.5139%" y="645" width="0.0180%" height="15" fill="rgb(218,87,25)" fg:x="14057" fg:w="5"/><text x="50.7639%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="50.5139%" y="629" width="0.0180%" height="15" fill="rgb(234,179,48)" fg:x="14057" fg:w="5"/><text x="50.7639%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="50.5175%" y="613" width="0.0144%" height="15" fill="rgb(248,90,0)" fg:x="14058" fg:w="4"/><text x="50.7675%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="50.5211%" y="597" width="0.0108%" height="15" fill="rgb(207,228,37)" fg:x="14059" fg:w="3"/><text x="50.7711%" y="607.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="50.5031%" y="693" width="0.0647%" height="15" fill="rgb(235,214,15)" fg:x="14054" fg:w="18"/><text x="50.7531%" y="703.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="50.5318%" y="677" width="0.0359%" height="15" fill="rgb(210,144,39)" fg:x="14062" fg:w="10"/><text x="50.7818%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="50.5570%" y="661" width="0.0108%" height="15" fill="rgb(222,67,41)" fg:x="14069" fg:w="3"/><text x="50.8070%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (22 samples, 0.08%)</title><rect x="50.4923%" y="821" width="0.0791%" height="15" fill="rgb(205,35,37)" fg:x="14051" fg:w="22"/><text x="50.7423%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.08%)</title><rect x="50.4923%" y="805" width="0.0791%" height="15" fill="rgb(216,125,40)" fg:x="14051" fg:w="22"/><text x="50.7423%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.08%)</title><rect x="50.4923%" y="789" width="0.0791%" height="15" fill="rgb(228,227,20)" fg:x="14051" fg:w="22"/><text x="50.7423%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.08%)</title><rect x="50.4923%" y="773" width="0.0791%" height="15" fill="rgb(242,173,45)" fg:x="14051" fg:w="22"/><text x="50.7423%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.08%)</title><rect x="50.4923%" y="757" width="0.0791%" height="15" fill="rgb(215,79,24)" fg:x="14051" fg:w="22"/><text x="50.7423%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.08%)</title><rect x="50.4923%" y="741" width="0.0791%" height="15" fill="rgb(238,164,38)" fg:x="14051" fg:w="22"/><text x="50.7423%" y="751.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.08%)</title><rect x="50.4959%" y="725" width="0.0755%" height="15" fill="rgb(245,196,38)" fg:x="14052" fg:w="21"/><text x="50.7459%" y="735.50"></text></g><g><title>malloc (21 samples, 0.08%)</title><rect x="50.4959%" y="709" width="0.0755%" height="15" fill="rgb(231,217,29)" fg:x="14052" fg:w="21"/><text x="50.7459%" y="719.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.01%)</title><rect x="50.5714%" y="789" width="0.0108%" height="15" fill="rgb(245,6,4)" fg:x="14073" fg:w="3"/><text x="50.8214%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.01%)</title><rect x="50.5714%" y="773" width="0.0108%" height="15" fill="rgb(214,76,49)" fg:x="14073" fg:w="3"/><text x="50.8214%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (217 samples, 0.78%)</title><rect x="49.8203%" y="853" width="0.7798%" height="15" fill="rgb(205,96,12)" fg:x="13864" fg:w="217"/><text x="50.0703%" y="863.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (118 samples, 0.42%)</title><rect x="50.1761%" y="837" width="0.4240%" height="15" fill="rgb(243,131,4)" fg:x="13963" fg:w="118"/><text x="50.4261%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.03%)</title><rect x="50.5714%" y="821" width="0.0287%" height="15" fill="rgb(214,114,4)" fg:x="14073" fg:w="8"/><text x="50.8214%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.03%)</title><rect x="50.5714%" y="805" width="0.0287%" height="15" fill="rgb(234,215,15)" fg:x="14073" fg:w="8"/><text x="50.8214%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.02%)</title><rect x="50.5821%" y="789" width="0.0180%" height="15" fill="rgb(250,216,45)" fg:x="14076" fg:w="5"/><text x="50.8321%" y="799.50"></text></g><g><title>async_executor::Runner::new (236 samples, 0.85%)</title><rect x="49.7664%" y="869" width="0.8481%" height="15" fill="rgb(236,128,4)" fg:x="13849" fg:w="236"/><text x="50.0164%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="50.6001%" y="853" width="0.0144%" height="15" fill="rgb(234,50,33)" fg:x="14081" fg:w="4"/><text x="50.8501%" y="863.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="50.6001%" y="837" width="0.0144%" height="15" fill="rgb(253,131,37)" fg:x="14081" fg:w="4"/><text x="50.8501%" y="847.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (4 samples, 0.01%)</title><rect x="50.6001%" y="821" width="0.0144%" height="15" fill="rgb(218,55,27)" fg:x="14081" fg:w="4"/><text x="50.8501%" y="831.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (4 samples, 0.01%)</title><rect x="50.6001%" y="805" width="0.0144%" height="15" fill="rgb(241,220,28)" fg:x="14081" fg:w="4"/><text x="50.8501%" y="815.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.01%)</title><rect x="50.6253%" y="837" width="0.0108%" height="15" fill="rgb(241,90,48)" fg:x="14088" fg:w="3"/><text x="50.8753%" y="847.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (3 samples, 0.01%)</title><rect x="50.6253%" y="821" width="0.0108%" height="15" fill="rgb(216,43,37)" fg:x="14088" fg:w="3"/><text x="50.8753%" y="831.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="50.6181%" y="853" width="0.0216%" height="15" fill="rgb(207,173,9)" fg:x="14086" fg:w="6"/><text x="50.8681%" y="863.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="50.6396%" y="805" width="0.0108%" height="15" fill="rgb(240,126,30)" fg:x="14092" fg:w="3"/><text x="50.8896%" y="815.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="50.6396%" y="789" width="0.0108%" height="15" fill="rgb(228,178,53)" fg:x="14092" fg:w="3"/><text x="50.8896%" y="799.50"></text></g><g><title>&lt;concurrent_queue::bounded::Bounded&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="50.6504%" y="741" width="0.0180%" height="15" fill="rgb(217,33,4)" fg:x="14095" fg:w="5"/><text x="50.9004%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.06%)</title><rect x="50.6396%" y="821" width="0.0611%" height="15" fill="rgb(206,124,34)" fg:x="14092" fg:w="17"/><text x="50.8896%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (14 samples, 0.05%)</title><rect x="50.6504%" y="805" width="0.0503%" height="15" fill="rgb(208,122,53)" fg:x="14095" fg:w="14"/><text x="50.9004%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (14 samples, 0.05%)</title><rect x="50.6504%" y="789" width="0.0503%" height="15" fill="rgb(215,202,26)" fg:x="14095" fg:w="14"/><text x="50.9004%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (14 samples, 0.05%)</title><rect x="50.6504%" y="773" width="0.0503%" height="15" fill="rgb(232,198,31)" fg:x="14095" fg:w="14"/><text x="50.9004%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (14 samples, 0.05%)</title><rect x="50.6504%" y="757" width="0.0503%" height="15" fill="rgb(222,23,35)" fg:x="14095" fg:w="14"/><text x="50.9004%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (9 samples, 0.03%)</title><rect x="50.6684%" y="741" width="0.0323%" height="15" fill="rgb(242,27,53)" fg:x="14100" fg:w="9"/><text x="50.9184%" y="751.50"></text></g><g><title>alloc::alloc::box_free (9 samples, 0.03%)</title><rect x="50.6684%" y="725" width="0.0323%" height="15" fill="rgb(210,216,42)" fg:x="14100" fg:w="9"/><text x="50.9184%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="50.6684%" y="709" width="0.0323%" height="15" fill="rgb(234,39,38)" fg:x="14100" fg:w="9"/><text x="50.9184%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="50.6684%" y="693" width="0.0323%" height="15" fill="rgb(235,126,54)" fg:x="14100" fg:w="9"/><text x="50.9184%" y="703.50"></text></g><g><title>cfree (8 samples, 0.03%)</title><rect x="50.6720%" y="677" width="0.0287%" height="15" fill="rgb(235,150,33)" fg:x="14101" fg:w="8"/><text x="50.9220%" y="687.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="50.6792%" y="661" width="0.0216%" height="15" fill="rgb(249,49,53)" fg:x="14103" fg:w="6"/><text x="50.9292%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (20 samples, 0.07%)</title><rect x="50.6396%" y="853" width="0.0719%" height="15" fill="rgb(238,60,50)" fg:x="14092" fg:w="20"/><text x="50.8896%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.07%)</title><rect x="50.6396%" y="837" width="0.0719%" height="15" fill="rgb(210,5,2)" fg:x="14092" fg:w="20"/><text x="50.8896%" y="847.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="50.7007%" y="821" width="0.0108%" height="15" fill="rgb(214,207,24)" fg:x="14109" fg:w="3"/><text x="50.9507%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (27 samples, 0.10%)</title><rect x="50.6181%" y="869" width="0.0970%" height="15" fill="rgb(228,173,2)" fg:x="14086" fg:w="27"/><text x="50.8681%" y="879.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="50.7151%" y="821" width="0.0216%" height="15" fill="rgb(244,26,8)" fg:x="14113" fg:w="6"/><text x="50.9651%" y="831.50"></text></g><g><title>async_std::utils::abort_on_panic (5 samples, 0.02%)</title><rect x="50.7187%" y="805" width="0.0180%" height="15" fill="rgb(249,153,35)" fg:x="14114" fg:w="5"/><text x="50.9687%" y="815.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop::{{closure}} (5 samples, 0.02%)</title><rect x="50.7187%" y="789" width="0.0180%" height="15" fill="rgb(221,215,40)" fg:x="14114" fg:w="5"/><text x="50.9687%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (296 samples, 1.06%)</title><rect x="49.6766%" y="933" width="1.0637%" height="15" fill="rgb(238,106,35)" fg:x="13824" fg:w="296"/><text x="49.9266%" y="943.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (296 samples, 1.06%)</title><rect x="49.6766%" y="917" width="1.0637%" height="15" fill="rgb(207,195,21)" fg:x="13824" fg:w="296"/><text x="49.9266%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (295 samples, 1.06%)</title><rect x="49.6802%" y="901" width="1.0601%" height="15" fill="rgb(205,43,29)" fg:x="13825" fg:w="295"/><text x="49.9302%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (295 samples, 1.06%)</title><rect x="49.6802%" y="885" width="1.0601%" height="15" fill="rgb(236,35,21)" fg:x="13825" fg:w="295"/><text x="49.9302%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::Or&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast::from_config::{{closure}}&gt;&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast::from_config::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (7 samples, 0.03%)</title><rect x="50.7151%" y="869" width="0.0252%" height="15" fill="rgb(244,74,8)" fg:x="14113" fg:w="7"/><text x="50.9651%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast::from_config::{{closure}}&gt;&gt;&gt; (7 samples, 0.03%)</title><rect x="50.7151%" y="853" width="0.0252%" height="15" fill="rgb(241,229,7)" fg:x="14113" fg:w="7"/><text x="50.9651%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (7 samples, 0.03%)</title><rect x="50.7151%" y="837" width="0.0252%" height="15" fill="rgb(212,223,25)" fg:x="14113" fg:w="7"/><text x="50.9651%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (3 samples, 0.01%)</title><rect x="50.7654%" y="853" width="0.0108%" height="15" fill="rgb(234,58,53)" fg:x="14127" fg:w="3"/><text x="51.0154%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="50.7654%" y="837" width="0.0108%" height="15" fill="rgb(244,36,1)" fg:x="14127" fg:w="3"/><text x="51.0154%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;core::result::Result&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast::from_config::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (7 samples, 0.03%)</title><rect x="50.7582%" y="933" width="0.0252%" height="15" fill="rgb(222,40,54)" fg:x="14125" fg:w="7"/><text x="51.0082%" y="943.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="50.7582%" y="917" width="0.0252%" height="15" fill="rgb(210,207,39)" fg:x="14125" fg:w="7"/><text x="51.0082%" y="927.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (7 samples, 0.03%)</title><rect x="50.7582%" y="901" width="0.0252%" height="15" fill="rgb(234,52,14)" fg:x="14125" fg:w="7"/><text x="51.0082%" y="911.50"></text></g><g><title>parking::Unparker::unpark (5 samples, 0.02%)</title><rect x="50.7654%" y="885" width="0.0180%" height="15" fill="rgb(239,108,46)" fg:x="14127" fg:w="5"/><text x="51.0154%" y="895.50"></text></g><g><title>parking::Inner::unpark (5 samples, 0.02%)</title><rect x="50.7654%" y="869" width="0.0180%" height="15" fill="rgb(252,223,5)" fg:x="14127" fg:w="5"/><text x="51.0154%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="50.7978%" y="837" width="0.0108%" height="15" fill="rgb(227,181,11)" fg:x="14136" fg:w="3"/><text x="51.0478%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::block_on&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt; (3 samples, 0.01%)</title><rect x="50.7978%" y="821" width="0.0108%" height="15" fill="rgb(248,126,40)" fg:x="14136" fg:w="3"/><text x="51.0478%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (8 samples, 0.03%)</title><rect x="50.7834%" y="933" width="0.0287%" height="15" fill="rgb(243,1,18)" fg:x="14132" fg:w="8"/><text x="51.0334%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="50.7834%" y="917" width="0.0287%" height="15" fill="rgb(214,145,23)" fg:x="14132" fg:w="8"/><text x="51.0334%" y="927.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (8 samples, 0.03%)</title><rect x="50.7834%" y="901" width="0.0287%" height="15" fill="rgb(241,218,11)" fg:x="14132" fg:w="8"/><text x="51.0334%" y="911.50"></text></g><g><title>core::mem::drop (7 samples, 0.03%)</title><rect x="50.7870%" y="885" width="0.0252%" height="15" fill="rgb(214,219,24)" fg:x="14133" fg:w="7"/><text x="51.0370%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;core::result::Result&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast::from_config::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (7 samples, 0.03%)</title><rect x="50.7870%" y="869" width="0.0252%" height="15" fill="rgb(235,32,7)" fg:x="14133" fg:w="7"/><text x="51.0370%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="50.7870%" y="853" width="0.0252%" height="15" fill="rgb(227,121,28)" fg:x="14133" fg:w="7"/><text x="51.0370%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Parker&gt; (3 samples, 0.01%)</title><rect x="50.8121%" y="933" width="0.0108%" height="15" fill="rgb(216,129,49)" fg:x="14140" fg:w="3"/><text x="51.0621%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (3 samples, 0.01%)</title><rect x="50.8121%" y="917" width="0.0108%" height="15" fill="rgb(207,194,50)" fg:x="14140" fg:w="3"/><text x="51.0621%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (3 samples, 0.01%)</title><rect x="50.8121%" y="901" width="0.0108%" height="15" fill="rgb(207,4,18)" fg:x="14140" fg:w="3"/><text x="51.0621%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="50.8121%" y="885" width="0.0108%" height="15" fill="rgb(213,50,30)" fg:x="14140" fg:w="3"/><text x="51.0621%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.01%)</title><rect x="50.8121%" y="869" width="0.0108%" height="15" fill="rgb(208,77,22)" fg:x="14140" fg:w="3"/><text x="51.0621%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (321 samples, 1.15%)</title><rect x="49.6766%" y="965" width="1.1535%" height="15" fill="rgb(244,204,34)" fg:x="13824" fg:w="321"/><text x="49.9266%" y="975.50"></text></g><g><title>async_io::driver::block_on (321 samples, 1.15%)</title><rect x="49.6766%" y="949" width="1.1535%" height="15" fill="rgb(230,20,17)" fg:x="13824" fg:w="321"/><text x="49.9266%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::EnterGuard&gt; (8 samples, 0.03%)</title><rect x="50.8301%" y="965" width="0.0287%" height="15" fill="rgb(237,83,15)" fg:x="14145" fg:w="8"/><text x="51.0801%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::EnterGuard&gt; (8 samples, 0.03%)</title><rect x="50.8301%" y="949" width="0.0287%" height="15" fill="rgb(221,109,25)" fg:x="14145" fg:w="8"/><text x="51.0801%" y="959.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="50.8301%" y="933" width="0.0287%" height="15" fill="rgb(205,194,52)" fg:x="14145" fg:w="8"/><text x="51.0801%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="50.8373%" y="917" width="0.0216%" height="15" fill="rgb(244,173,54)" fg:x="14147" fg:w="6"/><text x="51.0873%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="50.8373%" y="901" width="0.0216%" height="15" fill="rgb(227,181,18)" fg:x="14147" fg:w="6"/><text x="51.0873%" y="911.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (5 samples, 0.02%)</title><rect x="50.8409%" y="885" width="0.0180%" height="15" fill="rgb(238,36,30)" fg:x="14148" fg:w="5"/><text x="51.0909%" y="895.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (5 samples, 0.02%)</title><rect x="50.8409%" y="869" width="0.0180%" height="15" fill="rgb(254,85,0)" fg:x="14148" fg:w="5"/><text x="51.0909%" y="879.50"></text></g><g><title>async_std::task::block_on::block_on (346 samples, 1.24%)</title><rect x="49.6191%" y="1205" width="1.2434%" height="15" fill="rgb(247,63,33)" fg:x="13808" fg:w="346"/><text x="49.8691%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking (346 samples, 1.24%)</title><rect x="49.6191%" y="1189" width="1.2434%" height="15" fill="rgb(220,7,54)" fg:x="13808" fg:w="346"/><text x="49.8691%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (341 samples, 1.23%)</title><rect x="49.6371%" y="1173" width="1.2254%" height="15" fill="rgb(238,227,21)" fg:x="13813" fg:w="341"/><text x="49.8871%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (338 samples, 1.21%)</title><rect x="49.6478%" y="1157" width="1.2146%" height="15" fill="rgb(237,29,31)" fg:x="13816" fg:w="338"/><text x="49.8978%" y="1167.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (333 samples, 1.20%)</title><rect x="49.6658%" y="1141" width="1.1966%" height="15" fill="rgb(211,21,50)" fg:x="13821" fg:w="333"/><text x="49.9158%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (333 samples, 1.20%)</title><rect x="49.6658%" y="1125" width="1.1966%" height="15" fill="rgb(239,119,2)" fg:x="13821" fg:w="333"/><text x="49.9158%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (333 samples, 1.20%)</title><rect x="49.6658%" y="1109" width="1.1966%" height="15" fill="rgb(250,2,39)" fg:x="13821" fg:w="333"/><text x="49.9158%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (332 samples, 1.19%)</title><rect x="49.6694%" y="1093" width="1.1930%" height="15" fill="rgb(244,46,53)" fg:x="13822" fg:w="332"/><text x="49.9194%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (331 samples, 1.19%)</title><rect x="49.6730%" y="1077" width="1.1894%" height="15" fill="rgb(209,21,19)" fg:x="13823" fg:w="331"/><text x="49.9230%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (331 samples, 1.19%)</title><rect x="49.6730%" y="1061" width="1.1894%" height="15" fill="rgb(236,145,4)" fg:x="13823" fg:w="331"/><text x="49.9230%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on (331 samples, 1.19%)</title><rect x="49.6730%" y="1045" width="1.1894%" height="15" fill="rgb(220,133,36)" fg:x="13823" fg:w="331"/><text x="49.9230%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (331 samples, 1.19%)</title><rect x="49.6730%" y="1029" width="1.1894%" height="15" fill="rgb(244,18,3)" fg:x="13823" fg:w="331"/><text x="49.9230%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (331 samples, 1.19%)</title><rect x="49.6730%" y="1013" width="1.1894%" height="15" fill="rgb(232,171,48)" fg:x="13823" fg:w="331"/><text x="49.9230%" y="1023.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (330 samples, 1.19%)</title><rect x="49.6766%" y="997" width="1.1859%" height="15" fill="rgb(223,223,53)" fg:x="13824" fg:w="330"/><text x="49.9266%" y="1007.50"></text></g><g><title>async_global_executor::reactor::block_on (330 samples, 1.19%)</title><rect x="49.6766%" y="981" width="1.1859%" height="15" fill="rgb(246,92,13)" fg:x="13824" fg:w="330"/><text x="49.9266%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_config::PluginsConfig&gt; (5 samples, 0.02%)</title><rect x="50.8624%" y="1205" width="0.0180%" height="15" fill="rgb(229,171,10)" fg:x="14154" fg:w="5"/><text x="51.1124%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.02%)</title><rect x="50.8624%" y="1189" width="0.0180%" height="15" fill="rgb(213,131,26)" fg:x="14154" fg:w="5"/><text x="51.1124%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.02%)</title><rect x="50.8624%" y="1173" width="0.0180%" height="15" fill="rgb(242,87,54)" fg:x="14154" fg:w="5"/><text x="51.1124%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.02%)</title><rect x="50.8624%" y="1157" width="0.0180%" height="15" fill="rgb(237,21,35)" fg:x="14154" fg:w="5"/><text x="51.1124%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="50.8624%" y="1141" width="0.0180%" height="15" fill="rgb(253,13,47)" fg:x="14154" fg:w="5"/><text x="51.1124%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (13 samples, 0.05%)</title><rect x="50.8804%" y="1205" width="0.0467%" height="15" fill="rgb(215,122,49)" fg:x="14159" fg:w="13"/><text x="51.1304%" y="1215.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::from_config::{{closure}} (392 samples, 1.41%)</title><rect x="49.5257%" y="1237" width="1.4087%" height="15" fill="rgb(209,179,30)" fg:x="13782" fg:w="392"/><text x="49.7757%" y="1247.50"></text></g><g><title>&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast as core::default::Default&gt;::default (384 samples, 1.38%)</title><rect x="49.5544%" y="1221" width="1.3799%" height="15" fill="rgb(235,100,24)" fg:x="13790" fg:w="384"/><text x="49.8044%" y="1231.50"></text></g><g><title>[libc.so.6] (13 samples, 0.05%)</title><rect x="50.9415%" y="1157" width="0.0467%" height="15" fill="rgb(209,67,24)" fg:x="14176" fg:w="13"/><text x="51.1915%" y="1167.50"></text></g><g><title>async_executor::Executor::state (3 samples, 0.01%)</title><rect x="50.9954%" y="1157" width="0.0108%" height="15" fill="rgb(206,74,32)" fg:x="14191" fg:w="3"/><text x="51.2454%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (6 samples, 0.02%)</title><rect x="51.0062%" y="1157" width="0.0216%" height="15" fill="rgb(212,45,25)" fg:x="14194" fg:w="6"/><text x="51.2562%" y="1167.50"></text></g><g><title>async_io::reactor::Reactor::notify (3 samples, 0.01%)</title><rect x="51.0493%" y="1061" width="0.0108%" height="15" fill="rgb(239,26,3)" fg:x="14206" fg:w="3"/><text x="51.2993%" y="1071.50"></text></g><g><title>polling::Poller::notify (3 samples, 0.01%)</title><rect x="51.0493%" y="1045" width="0.0108%" height="15" fill="rgb(218,36,15)" fg:x="14206" fg:w="3"/><text x="51.2993%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (3 samples, 0.01%)</title><rect x="51.0745%" y="1029" width="0.0108%" height="15" fill="rgb(206,108,24)" fg:x="14213" fg:w="3"/><text x="51.3245%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="51.0745%" y="1013" width="0.0108%" height="15" fill="rgb(234,204,42)" fg:x="14213" fg:w="3"/><text x="51.3245%" y="1023.50"></text></g><g><title>parking::Unparker::unpark (18 samples, 0.06%)</title><rect x="51.0601%" y="1061" width="0.0647%" height="15" fill="rgb(229,2,11)" fg:x="14209" fg:w="18"/><text x="51.3101%" y="1071.50"></text></g><g><title>parking::Inner::unpark (14 samples, 0.05%)</title><rect x="51.0745%" y="1045" width="0.0503%" height="15" fill="rgb(221,20,48)" fg:x="14213" fg:w="14"/><text x="51.3245%" y="1055.50"></text></g><g><title>syscall (10 samples, 0.04%)</title><rect x="51.0888%" y="1029" width="0.0359%" height="15" fill="rgb(244,164,10)" fg:x="14217" fg:w="10"/><text x="51.3388%" y="1039.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="51.0888%" y="1013" width="0.0359%" height="15" fill="rgb(243,229,2)" fg:x="14217" fg:w="10"/><text x="51.3388%" y="1023.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="51.0888%" y="997" width="0.0359%" height="15" fill="rgb(232,131,37)" fg:x="14217" fg:w="10"/><text x="51.3388%" y="1007.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="51.0888%" y="981" width="0.0359%" height="15" fill="rgb(217,156,11)" fg:x="14217" fg:w="10"/><text x="51.3388%" y="991.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="51.0888%" y="965" width="0.0359%" height="15" fill="rgb(239,99,48)" fg:x="14217" fg:w="10"/><text x="51.3388%" y="975.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="51.0924%" y="949" width="0.0323%" height="15" fill="rgb(231,209,9)" fg:x="14218" fg:w="9"/><text x="51.3424%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="51.1032%" y="933" width="0.0216%" height="15" fill="rgb(254,97,27)" fg:x="14221" fg:w="6"/><text x="51.3532%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="51.1068%" y="917" width="0.0180%" height="15" fill="rgb(223,151,38)" fg:x="14222" fg:w="5"/><text x="51.3568%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="51.1068%" y="901" width="0.0180%" height="15" fill="rgb(219,206,35)" fg:x="14222" fg:w="5"/><text x="51.3568%" y="911.50"></text></g><g><title>async_executor::State::notify (27 samples, 0.10%)</title><rect x="51.0313%" y="1125" width="0.0970%" height="15" fill="rgb(216,130,31)" fg:x="14201" fg:w="27"/><text x="51.2813%" y="1135.50"></text></g><g><title>core::task::wake::Waker::wake (25 samples, 0.09%)</title><rect x="51.0385%" y="1109" width="0.0898%" height="15" fill="rgb(251,97,34)" fg:x="14203" fg:w="25"/><text x="51.2885%" y="1119.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.09%)</title><rect x="51.0421%" y="1093" width="0.0862%" height="15" fill="rgb(246,159,47)" fg:x="14204" fg:w="24"/><text x="51.2921%" y="1103.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (22 samples, 0.08%)</title><rect x="51.0493%" y="1077" width="0.0791%" height="15" fill="rgb(232,87,10)" fg:x="14206" fg:w="22"/><text x="51.2993%" y="1087.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (41 samples, 0.15%)</title><rect x="51.0313%" y="1141" width="0.1473%" height="15" fill="rgb(249,1,37)" fg:x="14201" fg:w="41"/><text x="51.2813%" y="1151.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.05%)</title><rect x="51.1284%" y="1125" width="0.0503%" height="15" fill="rgb(239,135,14)" fg:x="14228" fg:w="14"/><text x="51.3784%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (13 samples, 0.05%)</title><rect x="51.1320%" y="1109" width="0.0467%" height="15" fill="rgb(253,116,46)" fg:x="14229" fg:w="13"/><text x="51.3820%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 0.02%)</title><rect x="51.1607%" y="1093" width="0.0180%" height="15" fill="rgb(222,217,37)" fg:x="14237" fg:w="5"/><text x="51.4107%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 0.02%)</title><rect x="51.1607%" y="1077" width="0.0180%" height="15" fill="rgb(252,96,8)" fg:x="14237" fg:w="5"/><text x="51.4107%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (43 samples, 0.15%)</title><rect x="51.0277%" y="1157" width="0.1545%" height="15" fill="rgb(254,103,41)" fg:x="14200" fg:w="43"/><text x="51.2777%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (8 samples, 0.03%)</title><rect x="51.1823%" y="1157" width="0.0287%" height="15" fill="rgb(218,213,19)" fg:x="14243" fg:w="8"/><text x="51.4323%" y="1167.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="51.1823%" y="1141" width="0.0287%" height="15" fill="rgb(253,95,21)" fg:x="14243" fg:w="8"/><text x="51.4323%" y="1151.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (8 samples, 0.03%)</title><rect x="51.1823%" y="1125" width="0.0287%" height="15" fill="rgb(229,26,28)" fg:x="14243" fg:w="8"/><text x="51.4323%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (8 samples, 0.03%)</title><rect x="51.1823%" y="1109" width="0.0287%" height="15" fill="rgb(230,129,16)" fg:x="14243" fg:w="8"/><text x="51.4323%" y="1119.50"></text></g><g><title>syscall (8 samples, 0.03%)</title><rect x="51.1823%" y="1093" width="0.0287%" height="15" fill="rgb(236,126,17)" fg:x="14243" fg:w="8"/><text x="51.4323%" y="1103.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="51.1823%" y="1077" width="0.0287%" height="15" fill="rgb(209,33,33)" fg:x="14243" fg:w="8"/><text x="51.4323%" y="1087.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="51.1859%" y="1061" width="0.0252%" height="15" fill="rgb(227,85,29)" fg:x="14244" fg:w="7"/><text x="51.4359%" y="1071.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="51.1859%" y="1045" width="0.0252%" height="15" fill="rgb(241,53,46)" fg:x="14244" fg:w="7"/><text x="51.4359%" y="1055.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="51.1859%" y="1029" width="0.0252%" height="15" fill="rgb(228,167,53)" fg:x="14244" fg:w="7"/><text x="51.4359%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="51.1894%" y="1013" width="0.0216%" height="15" fill="rgb(238,195,45)" fg:x="14245" fg:w="6"/><text x="51.4394%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="51.1894%" y="997" width="0.0216%" height="15" fill="rgb(252,124,45)" fg:x="14245" fg:w="6"/><text x="51.4394%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="51.1894%" y="981" width="0.0216%" height="15" fill="rgb(251,38,35)" fg:x="14245" fg:w="6"/><text x="51.4394%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="51.1930%" y="965" width="0.0180%" height="15" fill="rgb(227,33,2)" fg:x="14246" fg:w="5"/><text x="51.4430%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="51.1930%" y="949" width="0.0180%" height="15" fill="rgb(223,157,46)" fg:x="14246" fg:w="5"/><text x="51.4430%" y="959.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (3 samples, 0.01%)</title><rect x="51.2110%" y="1157" width="0.0108%" height="15" fill="rgb(222,78,41)" fg:x="14251" fg:w="3"/><text x="51.4610%" y="1167.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (3 samples, 0.01%)</title><rect x="51.2110%" y="1141" width="0.0108%" height="15" fill="rgb(248,176,11)" fg:x="14251" fg:w="3"/><text x="51.4610%" y="1151.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="51.2218%" y="1141" width="0.0108%" height="15" fill="rgb(241,221,18)" fg:x="14254" fg:w="3"/><text x="51.4718%" y="1151.50"></text></g><g><title>std::sync::poison::Flag::borrow (3 samples, 0.01%)</title><rect x="51.2218%" y="1125" width="0.0108%" height="15" fill="rgb(218,85,22)" fg:x="14254" fg:w="3"/><text x="51.4718%" y="1135.50"></text></g><g><title>std::thread::panicking (3 samples, 0.01%)</title><rect x="51.2218%" y="1109" width="0.0108%" height="15" fill="rgb(222,223,7)" fg:x="14254" fg:w="3"/><text x="51.4718%" y="1119.50"></text></g><g><title>std::panicking::panicking (3 samples, 0.01%)</title><rect x="51.2218%" y="1093" width="0.0108%" height="15" fill="rgb(254,59,39)" fg:x="14254" fg:w="3"/><text x="51.4718%" y="1103.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (3 samples, 0.01%)</title><rect x="51.2218%" y="1077" width="0.0108%" height="15" fill="rgb(247,100,27)" fg:x="14254" fg:w="3"/><text x="51.4718%" y="1087.50"></text></g><g><title>std::sys::unix::futex::futex_wait (25 samples, 0.09%)</title><rect x="51.2685%" y="1093" width="0.0898%" height="15" fill="rgb(237,207,10)" fg:x="14267" fg:w="25"/><text x="51.5185%" y="1103.50"></text></g><g><title>syscall (20 samples, 0.07%)</title><rect x="51.2865%" y="1077" width="0.0719%" height="15" fill="rgb(220,121,28)" fg:x="14272" fg:w="20"/><text x="51.5365%" y="1087.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="51.2865%" y="1061" width="0.0719%" height="15" fill="rgb(213,223,20)" fg:x="14272" fg:w="20"/><text x="51.5365%" y="1071.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="51.2865%" y="1045" width="0.0719%" height="15" fill="rgb(205,121,27)" fg:x="14272" fg:w="20"/><text x="51.5365%" y="1055.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="51.2865%" y="1029" width="0.0719%" height="15" fill="rgb(253,24,53)" fg:x="14272" fg:w="20"/><text x="51.5365%" y="1039.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="51.2865%" y="1013" width="0.0719%" height="15" fill="rgb(224,224,47)" fg:x="14272" fg:w="20"/><text x="51.5365%" y="1023.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="51.2865%" y="997" width="0.0719%" height="15" fill="rgb(250,125,36)" fg:x="14272" fg:w="20"/><text x="51.5365%" y="1007.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="51.2865%" y="981" width="0.0719%" height="15" fill="rgb(240,144,38)" fg:x="14272" fg:w="20"/><text x="51.5365%" y="991.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="51.2937%" y="965" width="0.0647%" height="15" fill="rgb(250,15,50)" fg:x="14274" fg:w="18"/><text x="51.5437%" y="975.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="51.3152%" y="949" width="0.0431%" height="15" fill="rgb(210,24,26)" fg:x="14280" fg:w="12"/><text x="51.5652%" y="959.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="51.3224%" y="933" width="0.0359%" height="15" fill="rgb(234,53,53)" fg:x="14282" fg:w="10"/><text x="51.5724%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="51.3404%" y="917" width="0.0180%" height="15" fill="rgb(208,108,28)" fg:x="14287" fg:w="5"/><text x="51.5904%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="51.3440%" y="901" width="0.0144%" height="15" fill="rgb(227,143,7)" fg:x="14288" fg:w="4"/><text x="51.5940%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="51.3440%" y="885" width="0.0144%" height="15" fill="rgb(238,189,38)" fg:x="14288" fg:w="4"/><text x="51.5940%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (47 samples, 0.17%)</title><rect x="51.2218%" y="1157" width="0.1689%" height="15" fill="rgb(222,69,15)" fg:x="14254" fg:w="47"/><text x="51.4718%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (44 samples, 0.16%)</title><rect x="51.2326%" y="1141" width="0.1581%" height="15" fill="rgb(213,169,7)" fg:x="14257" fg:w="44"/><text x="51.4826%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (44 samples, 0.16%)</title><rect x="51.2326%" y="1125" width="0.1581%" height="15" fill="rgb(251,219,4)" fg:x="14257" fg:w="44"/><text x="51.4826%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (43 samples, 0.15%)</title><rect x="51.2362%" y="1109" width="0.1545%" height="15" fill="rgb(241,55,40)" fg:x="14258" fg:w="43"/><text x="51.4862%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (9 samples, 0.03%)</title><rect x="51.3583%" y="1093" width="0.0323%" height="15" fill="rgb(243,57,30)" fg:x="14292" fg:w="9"/><text x="51.6083%" y="1103.50"></text></g><g><title>std::sys::unix::futex::futex_wait (3 samples, 0.01%)</title><rect x="51.3943%" y="1141" width="0.0108%" height="15" fill="rgb(234,50,30)" fg:x="14302" fg:w="3"/><text x="51.6443%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx (132 samples, 0.47%)</title><rect x="50.9343%" y="1237" width="0.4743%" height="15" fill="rgb(239,23,42)" fg:x="14174" fg:w="132"/><text x="51.1843%" y="1247.50"></text></g><g><title>async_std::task::spawn::spawn (132 samples, 0.47%)</title><rect x="50.9343%" y="1221" width="0.4743%" height="15" fill="rgb(217,38,19)" fg:x="14174" fg:w="132"/><text x="51.1843%" y="1231.50"></text></g><g><title>async_std::task::builder::Builder::spawn (132 samples, 0.47%)</title><rect x="50.9343%" y="1205" width="0.4743%" height="15" fill="rgb(215,179,16)" fg:x="14174" fg:w="132"/><text x="51.1843%" y="1215.50"></text></g><g><title>async_global_executor::executor::spawn (132 samples, 0.47%)</title><rect x="50.9343%" y="1189" width="0.4743%" height="15" fill="rgb(254,21,37)" fg:x="14174" fg:w="132"/><text x="51.1843%" y="1199.50"></text></g><g><title>async_executor::Executor::spawn (132 samples, 0.47%)</title><rect x="50.9343%" y="1173" width="0.4743%" height="15" fill="rgb(219,207,48)" fg:x="14174" fg:w="132"/><text x="51.1843%" y="1183.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (5 samples, 0.02%)</title><rect x="51.3907%" y="1157" width="0.0180%" height="15" fill="rgb(227,225,41)" fg:x="14301" fg:w="5"/><text x="51.6407%" y="1167.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::normalized (5 samples, 0.02%)</title><rect x="51.4122%" y="981" width="0.0180%" height="15" fill="rgb(223,130,1)" fg:x="14307" fg:w="5"/><text x="51.6622%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::normalize (4 samples, 0.01%)</title><rect x="51.4158%" y="965" width="0.0144%" height="15" fill="rgb(249,54,42)" fg:x="14308" fg:w="4"/><text x="51.6658%" y="975.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="51.4410%" y="837" width="0.0108%" height="15" fill="rgb(248,69,25)" fg:x="14315" fg:w="3"/><text x="51.6910%" y="847.50"></text></g><g><title>__libc_calloc (6 samples, 0.02%)</title><rect x="51.4338%" y="853" width="0.0216%" height="15" fill="rgb(234,21,32)" fg:x="14313" fg:w="6"/><text x="51.6838%" y="863.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Mul&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::mul (13 samples, 0.05%)</title><rect x="51.4122%" y="1013" width="0.0467%" height="15" fill="rgb(252,136,6)" fg:x="14307" fg:w="13"/><text x="51.6622%" y="1023.50"></text></g><g><title>num_bigint_dig::algorithms::mul::mul3 (13 samples, 0.05%)</title><rect x="51.4122%" y="997" width="0.0467%" height="15" fill="rgb(245,87,12)" fg:x="14307" fg:w="13"/><text x="51.6622%" y="1007.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::from_elem (8 samples, 0.03%)</title><rect x="51.4302%" y="981" width="0.0287%" height="15" fill="rgb(208,12,15)" fg:x="14312" fg:w="8"/><text x="51.6802%" y="991.50"></text></g><g><title>alloc::vec::from_elem (8 samples, 0.03%)</title><rect x="51.4302%" y="965" width="0.0287%" height="15" fill="rgb(250,98,2)" fg:x="14312" fg:w="8"/><text x="51.6802%" y="975.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (8 samples, 0.03%)</title><rect x="51.4302%" y="949" width="0.0287%" height="15" fill="rgb(205,213,15)" fg:x="14312" fg:w="8"/><text x="51.6802%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (8 samples, 0.03%)</title><rect x="51.4302%" y="933" width="0.0287%" height="15" fill="rgb(248,192,44)" fg:x="14312" fg:w="8"/><text x="51.6802%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.03%)</title><rect x="51.4302%" y="917" width="0.0287%" height="15" fill="rgb(221,89,17)" fg:x="14312" fg:w="8"/><text x="51.6802%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (8 samples, 0.03%)</title><rect x="51.4302%" y="901" width="0.0287%" height="15" fill="rgb(209,55,3)" fg:x="14312" fg:w="8"/><text x="51.6802%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="51.4302%" y="885" width="0.0287%" height="15" fill="rgb(247,23,45)" fg:x="14312" fg:w="8"/><text x="51.6802%" y="895.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7 samples, 0.03%)</title><rect x="51.4338%" y="869" width="0.0252%" height="15" fill="rgb(235,152,23)" fg:x="14313" fg:w="7"/><text x="51.6838%" y="879.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (4 samples, 0.01%)</title><rect x="51.4590%" y="981" width="0.0144%" height="15" fill="rgb(244,63,13)" fg:x="14320" fg:w="4"/><text x="51.7090%" y="991.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (4 samples, 0.01%)</title><rect x="51.4590%" y="965" width="0.0144%" height="15" fill="rgb(227,30,37)" fg:x="14320" fg:w="4"/><text x="51.7090%" y="975.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="51.4590%" y="949" width="0.0144%" height="15" fill="rgb(224,49,42)" fg:x="14320" fg:w="4"/><text x="51.7090%" y="959.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (5 samples, 0.02%)</title><rect x="51.4590%" y="1013" width="0.0180%" height="15" fill="rgb(218,129,5)" fg:x="14320" fg:w="5"/><text x="51.7090%" y="1023.50"></text></g><g><title>num_bigint_dig::algorithms::shl::biguint_shl (5 samples, 0.02%)</title><rect x="51.4590%" y="997" width="0.0180%" height="15" fill="rgb(240,199,54)" fg:x="14320" fg:w="5"/><text x="51.7090%" y="1007.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem_digit (3 samples, 0.01%)</title><rect x="51.4877%" y="1013" width="0.0108%" height="15" fill="rgb(234,31,13)" fg:x="14328" fg:w="3"/><text x="51.7377%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (30 samples, 0.11%)</title><rect x="51.4087%" y="1237" width="0.1078%" height="15" fill="rgb(219,73,54)" fg:x="14306" fg:w="30"/><text x="51.6587%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (30 samples, 0.11%)</title><rect x="51.4087%" y="1221" width="0.1078%" height="15" fill="rgb(251,162,10)" fg:x="14306" fg:w="30"/><text x="51.6587%" y="1231.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (30 samples, 0.11%)</title><rect x="51.4087%" y="1205" width="0.1078%" height="15" fill="rgb(240,138,47)" fg:x="14306" fg:w="30"/><text x="51.6587%" y="1215.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (30 samples, 0.11%)</title><rect x="51.4087%" y="1189" width="0.1078%" height="15" fill="rgb(216,138,26)" fg:x="14306" fg:w="30"/><text x="51.6587%" y="1199.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (30 samples, 0.11%)</title><rect x="51.4087%" y="1173" width="0.1078%" height="15" fill="rgb(243,17,35)" fg:x="14306" fg:w="30"/><text x="51.6587%" y="1183.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (30 samples, 0.11%)</title><rect x="51.4087%" y="1157" width="0.1078%" height="15" fill="rgb(241,60,18)" fg:x="14306" fg:w="30"/><text x="51.6587%" y="1167.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (30 samples, 0.11%)</title><rect x="51.4087%" y="1141" width="0.1078%" height="15" fill="rgb(234,2,44)" fg:x="14306" fg:w="30"/><text x="51.6587%" y="1151.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (29 samples, 0.10%)</title><rect x="51.4122%" y="1125" width="0.1042%" height="15" fill="rgb(225,225,33)" fg:x="14307" fg:w="29"/><text x="51.6622%" y="1135.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (29 samples, 0.10%)</title><rect x="51.4122%" y="1109" width="0.1042%" height="15" fill="rgb(234,50,31)" fg:x="14307" fg:w="29"/><text x="51.6622%" y="1119.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (29 samples, 0.10%)</title><rect x="51.4122%" y="1093" width="0.1042%" height="15" fill="rgb(249,6,25)" fg:x="14307" fg:w="29"/><text x="51.6622%" y="1103.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (29 samples, 0.10%)</title><rect x="51.4122%" y="1077" width="0.1042%" height="15" fill="rgb(241,5,17)" fg:x="14307" fg:w="29"/><text x="51.6622%" y="1087.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (29 samples, 0.10%)</title><rect x="51.4122%" y="1061" width="0.1042%" height="15" fill="rgb(207,116,10)" fg:x="14307" fg:w="29"/><text x="51.6622%" y="1071.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (29 samples, 0.10%)</title><rect x="51.4122%" y="1045" width="0.1042%" height="15" fill="rgb(222,128,18)" fg:x="14307" fg:w="29"/><text x="51.6622%" y="1055.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (29 samples, 0.10%)</title><rect x="51.4122%" y="1029" width="0.1042%" height="15" fill="rgb(229,109,25)" fg:x="14307" fg:w="29"/><text x="51.6622%" y="1039.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::from_elem (5 samples, 0.02%)</title><rect x="51.4985%" y="1013" width="0.0180%" height="15" fill="rgb(222,102,25)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="1023.50"></text></g><g><title>alloc::vec::from_elem (5 samples, 0.02%)</title><rect x="51.4985%" y="997" width="0.0180%" height="15" fill="rgb(239,211,5)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="1007.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (5 samples, 0.02%)</title><rect x="51.4985%" y="981" width="0.0180%" height="15" fill="rgb(223,136,26)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (5 samples, 0.02%)</title><rect x="51.4985%" y="965" width="0.0180%" height="15" fill="rgb(227,30,15)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="51.4985%" y="949" width="0.0180%" height="15" fill="rgb(247,76,4)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (5 samples, 0.02%)</title><rect x="51.4985%" y="933" width="0.0180%" height="15" fill="rgb(245,38,48)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="51.4985%" y="917" width="0.0180%" height="15" fill="rgb(210,220,14)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="927.50"></text></g><g><title>alloc::alloc::alloc_zeroed (5 samples, 0.02%)</title><rect x="51.4985%" y="901" width="0.0180%" height="15" fill="rgb(224,60,51)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="911.50"></text></g><g><title>__libc_calloc (5 samples, 0.02%)</title><rect x="51.4985%" y="885" width="0.0180%" height="15" fill="rgb(212,133,49)" fg:x="14331" fg:w="5"/><text x="51.7485%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (10 samples, 0.04%)</title><rect x="51.5452%" y="1061" width="0.0359%" height="15" fill="rgb(231,39,22)" fg:x="14344" fg:w="10"/><text x="51.7952%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.04%)</title><rect x="51.5452%" y="1045" width="0.0359%" height="15" fill="rgb(236,173,22)" fg:x="14344" fg:w="10"/><text x="51.7952%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.04%)</title><rect x="51.5452%" y="1029" width="0.0359%" height="15" fill="rgb(210,70,0)" fg:x="14344" fg:w="10"/><text x="51.7952%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.04%)</title><rect x="51.5452%" y="1013" width="0.0359%" height="15" fill="rgb(215,170,11)" fg:x="14344" fg:w="10"/><text x="51.7952%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.04%)</title><rect x="51.5452%" y="997" width="0.0359%" height="15" fill="rgb(220,154,28)" fg:x="14344" fg:w="10"/><text x="51.7952%" y="1007.50"></text></g><g><title>malloc (10 samples, 0.04%)</title><rect x="51.5452%" y="981" width="0.0359%" height="15" fill="rgb(240,160,41)" fg:x="14344" fg:w="10"/><text x="51.7952%" y="991.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (3 samples, 0.01%)</title><rect x="51.5883%" y="933" width="0.0108%" height="15" fill="rgb(243,215,41)" fg:x="14356" fg:w="3"/><text x="51.8383%" y="943.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (23 samples, 0.08%)</title><rect x="51.5201%" y="1157" width="0.0827%" height="15" fill="rgb(214,208,31)" fg:x="14337" fg:w="23"/><text x="51.7701%" y="1167.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (23 samples, 0.08%)</title><rect x="51.5201%" y="1141" width="0.0827%" height="15" fill="rgb(247,57,22)" fg:x="14337" fg:w="23"/><text x="51.7701%" y="1151.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (22 samples, 0.08%)</title><rect x="51.5236%" y="1125" width="0.0791%" height="15" fill="rgb(228,73,52)" fg:x="14338" fg:w="22"/><text x="51.7736%" y="1135.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (22 samples, 0.08%)</title><rect x="51.5236%" y="1109" width="0.0791%" height="15" fill="rgb(252,60,9)" fg:x="14338" fg:w="22"/><text x="51.7736%" y="1119.50"></text></g><g><title>zenoh::net::routing::resource::Resource::upgrade_resource (17 samples, 0.06%)</title><rect x="51.5416%" y="1093" width="0.0611%" height="15" fill="rgb(233,9,51)" fg:x="14343" fg:w="17"/><text x="51.7916%" y="1103.50"></text></g><g><title>zenoh::net::routing::resource::ResourceContext::new (16 samples, 0.06%)</title><rect x="51.5452%" y="1077" width="0.0575%" height="15" fill="rgb(223,67,14)" fg:x="14344" fg:w="16"/><text x="51.7952%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="51.5883%" y="1061" width="0.0144%" height="15" fill="rgb(222,86,2)" fg:x="14356" fg:w="4"/><text x="51.8383%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="51.5883%" y="1045" width="0.0144%" height="15" fill="rgb(243,58,54)" fg:x="14356" fg:w="4"/><text x="51.8383%" y="1055.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="51.5883%" y="1029" width="0.0144%" height="15" fill="rgb(210,200,39)" fg:x="14356" fg:w="4"/><text x="51.8383%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="51.5883%" y="1013" width="0.0144%" height="15" fill="rgb(238,135,9)" fg:x="14356" fg:w="4"/><text x="51.8383%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="51.5883%" y="997" width="0.0144%" height="15" fill="rgb(232,179,7)" fg:x="14356" fg:w="4"/><text x="51.8383%" y="1007.50"></text></g><g><title>std::collections::hash::map::RandomState::new (4 samples, 0.01%)</title><rect x="51.5883%" y="981" width="0.0144%" height="15" fill="rgb(245,65,41)" fg:x="14356" fg:w="4"/><text x="51.8383%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="51.5883%" y="965" width="0.0144%" height="15" fill="rgb(227,43,8)" fg:x="14356" fg:w="4"/><text x="51.8383%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="51.5883%" y="949" width="0.0144%" height="15" fill="rgb(235,91,14)" fg:x="14356" fg:w="4"/><text x="51.8383%" y="959.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (25 samples, 0.09%)</title><rect x="51.5165%" y="1237" width="0.0898%" height="15" fill="rgb(235,219,31)" fg:x="14336" fg:w="25"/><text x="51.7665%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (25 samples, 0.09%)</title><rect x="51.5165%" y="1221" width="0.0898%" height="15" fill="rgb(227,121,25)" fg:x="14336" fg:w="25"/><text x="51.7665%" y="1231.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (25 samples, 0.09%)</title><rect x="51.5165%" y="1205" width="0.0898%" height="15" fill="rgb(254,129,24)" fg:x="14336" fg:w="25"/><text x="51.7665%" y="1215.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (25 samples, 0.09%)</title><rect x="51.5165%" y="1189" width="0.0898%" height="15" fill="rgb(226,144,49)" fg:x="14336" fg:w="25"/><text x="51.7665%" y="1199.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (25 samples, 0.09%)</title><rect x="51.5165%" y="1173" width="0.0898%" height="15" fill="rgb(214,187,32)" fg:x="14336" fg:w="25"/><text x="51.7665%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.08%)</title><rect x="51.6099%" y="1061" width="0.0791%" height="15" fill="rgb(243,129,46)" fg:x="14362" fg:w="22"/><text x="51.8599%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.08%)</title><rect x="51.6099%" y="1045" width="0.0791%" height="15" fill="rgb(221,185,35)" fg:x="14362" fg:w="22"/><text x="51.8599%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.08%)</title><rect x="51.6099%" y="1029" width="0.0791%" height="15" fill="rgb(205,0,32)" fg:x="14362" fg:w="22"/><text x="51.8599%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.08%)</title><rect x="51.6099%" y="1013" width="0.0791%" height="15" fill="rgb(229,179,12)" fg:x="14362" fg:w="22"/><text x="51.8599%" y="1023.50"></text></g><g><title>malloc (20 samples, 0.07%)</title><rect x="51.6171%" y="997" width="0.0719%" height="15" fill="rgb(252,107,19)" fg:x="14364" fg:w="20"/><text x="51.8671%" y="1007.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="51.6243%" y="981" width="0.0647%" height="15" fill="rgb(220,95,27)" fg:x="14366" fg:w="18"/><text x="51.8743%" y="991.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="51.6602%" y="965" width="0.0287%" height="15" fill="rgb(240,113,40)" fg:x="14376" fg:w="8"/><text x="51.9102%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="51.6674%" y="949" width="0.0216%" height="15" fill="rgb(208,4,43)" fg:x="14378" fg:w="6"/><text x="51.9174%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="51.6674%" y="933" width="0.0216%" height="15" fill="rgb(247,189,30)" fg:x="14378" fg:w="6"/><text x="51.9174%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="51.6674%" y="917" width="0.0216%" height="15" fill="rgb(231,157,17)" fg:x="14378" fg:w="6"/><text x="51.9174%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="51.6710%" y="901" width="0.0180%" height="15" fill="rgb(224,139,6)" fg:x="14379" fg:w="5"/><text x="51.9210%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="51.6746%" y="885" width="0.0144%" height="15" fill="rgb(223,83,16)" fg:x="14380" fg:w="4"/><text x="51.9246%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="51.6782%" y="869" width="0.0108%" height="15" fill="rgb(232,211,20)" fg:x="14381" fg:w="3"/><text x="51.9282%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="51.6782%" y="853" width="0.0108%" height="15" fill="rgb(225,203,35)" fg:x="14381" fg:w="3"/><text x="51.9282%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="51.7105%" y="981" width="0.0144%" height="15" fill="rgb(215,211,44)" fg:x="14390" fg:w="4"/><text x="51.9605%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="51.7105%" y="965" width="0.0144%" height="15" fill="rgb(248,213,26)" fg:x="14390" fg:w="4"/><text x="51.9605%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="51.7105%" y="949" width="0.0144%" height="15" fill="rgb(214,23,52)" fg:x="14390" fg:w="4"/><text x="51.9605%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="51.7105%" y="933" width="0.0144%" height="15" fill="rgb(225,173,50)" fg:x="14390" fg:w="4"/><text x="51.9605%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="51.7105%" y="917" width="0.0144%" height="15" fill="rgb(206,150,22)" fg:x="14390" fg:w="4"/><text x="51.9605%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="51.7105%" y="901" width="0.0144%" height="15" fill="rgb(239,64,23)" fg:x="14390" fg:w="4"/><text x="51.9605%" y="911.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="51.7105%" y="885" width="0.0144%" height="15" fill="rgb(242,50,38)" fg:x="14390" fg:w="4"/><text x="51.9605%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 samples, 0.04%)</title><rect x="51.6961%" y="1045" width="0.0359%" height="15" fill="rgb(217,91,15)" fg:x="14386" fg:w="10"/><text x="51.9461%" y="1055.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (9 samples, 0.03%)</title><rect x="51.6997%" y="1029" width="0.0323%" height="15" fill="rgb(230,172,6)" fg:x="14387" fg:w="9"/><text x="51.9497%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (8 samples, 0.03%)</title><rect x="51.7033%" y="1013" width="0.0287%" height="15" fill="rgb(221,98,26)" fg:x="14388" fg:w="8"/><text x="51.9533%" y="1023.50"></text></g><g><title>alloc::str::join_generic_copy (8 samples, 0.03%)</title><rect x="51.7033%" y="997" width="0.0287%" height="15" fill="rgb(227,210,45)" fg:x="14388" fg:w="8"/><text x="51.9533%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (4 samples, 0.01%)</title><rect x="51.7393%" y="1029" width="0.0144%" height="15" fill="rgb(206,8,30)" fg:x="14398" fg:w="4"/><text x="51.9893%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (4 samples, 0.01%)</title><rect x="51.7393%" y="1013" width="0.0144%" height="15" fill="rgb(241,219,17)" fg:x="14398" fg:w="4"/><text x="51.9893%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (4 samples, 0.01%)</title><rect x="51.7393%" y="997" width="0.0144%" height="15" fill="rgb(247,121,29)" fg:x="14398" fg:w="4"/><text x="51.9893%" y="1007.50"></text></g><g><title>alloc::str::join_generic_copy (4 samples, 0.01%)</title><rect x="51.7393%" y="981" width="0.0144%" height="15" fill="rgb(219,169,49)" fg:x="14398" fg:w="4"/><text x="51.9893%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="51.7428%" y="965" width="0.0108%" height="15" fill="rgb(253,49,49)" fg:x="14399" fg:w="3"/><text x="51.9928%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="51.7428%" y="949" width="0.0108%" height="15" fill="rgb(217,178,3)" fg:x="14399" fg:w="3"/><text x="51.9928%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="51.7428%" y="933" width="0.0108%" height="15" fill="rgb(234,73,37)" fg:x="14399" fg:w="3"/><text x="51.9928%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="51.7428%" y="917" width="0.0108%" height="15" fill="rgb(250,98,22)" fg:x="14399" fg:w="3"/><text x="51.9928%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="51.7428%" y="901" width="0.0108%" height="15" fill="rgb(220,108,37)" fg:x="14399" fg:w="3"/><text x="51.9928%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="51.7428%" y="885" width="0.0108%" height="15" fill="rgb(225,168,10)" fg:x="14399" fg:w="3"/><text x="51.9928%" y="895.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="51.7428%" y="869" width="0.0108%" height="15" fill="rgb(247,215,21)" fg:x="14399" fg:w="3"/><text x="51.9928%" y="879.50"></text></g><g><title>alloc::str::join_generic_copy (4 samples, 0.01%)</title><rect x="51.7572%" y="965" width="0.0144%" height="15" fill="rgb(253,189,31)" fg:x="14403" fg:w="4"/><text x="52.0072%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (5 samples, 0.02%)</title><rect x="51.7572%" y="1013" width="0.0180%" height="15" fill="rgb(241,54,22)" fg:x="14403" fg:w="5"/><text x="52.0072%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (5 samples, 0.02%)</title><rect x="51.7572%" y="997" width="0.0180%" height="15" fill="rgb(211,87,4)" fg:x="14403" fg:w="5"/><text x="52.0072%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5 samples, 0.02%)</title><rect x="51.7572%" y="981" width="0.0180%" height="15" fill="rgb(245,112,24)" fg:x="14403" fg:w="5"/><text x="52.0072%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (25 samples, 0.09%)</title><rect x="51.6925%" y="1061" width="0.0898%" height="15" fill="rgb(235,190,41)" fg:x="14385" fg:w="25"/><text x="51.9425%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (13 samples, 0.05%)</title><rect x="51.7357%" y="1045" width="0.0467%" height="15" fill="rgb(214,89,8)" fg:x="14397" fg:w="13"/><text x="51.9857%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (8 samples, 0.03%)</title><rect x="51.7536%" y="1029" width="0.0287%" height="15" fill="rgb(249,155,35)" fg:x="14402" fg:w="8"/><text x="52.0036%" y="1039.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (14 samples, 0.05%)</title><rect x="51.7824%" y="1061" width="0.0503%" height="15" fill="rgb(249,88,26)" fg:x="14410" fg:w="14"/><text x="52.0324%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (14 samples, 0.05%)</title><rect x="51.7824%" y="1045" width="0.0503%" height="15" fill="rgb(232,56,8)" fg:x="14410" fg:w="14"/><text x="52.0324%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="51.8147%" y="1029" width="0.0180%" height="15" fill="rgb(240,95,3)" fg:x="14419" fg:w="5"/><text x="52.0647%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.02%)</title><rect x="51.8147%" y="1013" width="0.0180%" height="15" fill="rgb(222,44,28)" fg:x="14419" fg:w="5"/><text x="52.0647%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.02%)</title><rect x="51.8147%" y="997" width="0.0180%" height="15" fill="rgb(234,16,30)" fg:x="14419" fg:w="5"/><text x="52.0647%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.01%)</title><rect x="51.8219%" y="981" width="0.0108%" height="15" fill="rgb(223,26,17)" fg:x="14421" fg:w="3"/><text x="52.0719%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.01%)</title><rect x="51.8219%" y="965" width="0.0108%" height="15" fill="rgb(239,187,47)" fg:x="14421" fg:w="3"/><text x="52.0719%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.01%)</title><rect x="51.8219%" y="949" width="0.0108%" height="15" fill="rgb(247,102,50)" fg:x="14421" fg:w="3"/><text x="52.0719%" y="959.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (77 samples, 0.28%)</title><rect x="51.6063%" y="1109" width="0.2767%" height="15" fill="rgb(231,216,22)" fg:x="14361" fg:w="77"/><text x="51.8563%" y="1119.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (77 samples, 0.28%)</title><rect x="51.6063%" y="1093" width="0.2767%" height="15" fill="rgb(216,201,26)" fg:x="14361" fg:w="77"/><text x="51.8563%" y="1103.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (77 samples, 0.28%)</title><rect x="51.6063%" y="1077" width="0.2767%" height="15" fill="rgb(214,186,23)" fg:x="14361" fg:w="77"/><text x="51.8563%" y="1087.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (14 samples, 0.05%)</title><rect x="51.8327%" y="1061" width="0.0503%" height="15" fill="rgb(235,184,4)" fg:x="14424" fg:w="14"/><text x="52.0827%" y="1071.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (14 samples, 0.05%)</title><rect x="51.8327%" y="1045" width="0.0503%" height="15" fill="rgb(244,46,17)" fg:x="14424" fg:w="14"/><text x="52.0827%" y="1055.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (14 samples, 0.05%)</title><rect x="51.8327%" y="1029" width="0.0503%" height="15" fill="rgb(248,74,46)" fg:x="14424" fg:w="14"/><text x="52.0827%" y="1039.50"></text></g><g><title>zenoh_protocol_core::key_expr::cwild (3 samples, 0.01%)</title><rect x="51.8722%" y="1013" width="0.0108%" height="15" fill="rgb(243,79,5)" fg:x="14435" fg:w="3"/><text x="52.1222%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="51.8722%" y="997" width="0.0108%" height="15" fill="rgb(213,148,1)" fg:x="14435" fg:w="3"/><text x="52.1222%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.02%)</title><rect x="51.8830%" y="1093" width="0.0180%" height="15" fill="rgb(221,30,0)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.02%)</title><rect x="51.8830%" y="1077" width="0.0180%" height="15" fill="rgb(207,85,29)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.02%)</title><rect x="51.8830%" y="1061" width="0.0180%" height="15" fill="rgb(239,31,46)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="1071.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="51.8830%" y="1045" width="0.0180%" height="15" fill="rgb(219,6,1)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="51.8830%" y="1029" width="0.0180%" height="15" fill="rgb(229,90,29)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.02%)</title><rect x="51.8830%" y="1013" width="0.0180%" height="15" fill="rgb(242,201,42)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (5 samples, 0.02%)</title><rect x="51.8830%" y="997" width="0.0180%" height="15" fill="rgb(243,80,54)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="51.8830%" y="981" width="0.0180%" height="15" fill="rgb(223,166,15)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="991.50"></text></g><g><title>&lt;zenoh::net::routing::resource::Resource as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="51.8830%" y="965" width="0.0180%" height="15" fill="rgb(238,78,27)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (5 samples, 0.02%)</title><rect x="51.8830%" y="949" width="0.0180%" height="15" fill="rgb(235,28,43)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (5 samples, 0.02%)</title><rect x="51.8830%" y="933" width="0.0180%" height="15" fill="rgb(240,210,28)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (5 samples, 0.02%)</title><rect x="51.8830%" y="917" width="0.0180%" height="15" fill="rgb(253,6,46)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="927.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (5 samples, 0.02%)</title><rect x="51.8830%" y="901" width="0.0180%" height="15" fill="rgb(250,159,47)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="911.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5 samples, 0.02%)</title><rect x="51.8830%" y="885" width="0.0180%" height="15" fill="rgb(216,139,2)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="895.50"></text></g><g><title>alloc::str::join_generic_copy (5 samples, 0.02%)</title><rect x="51.8830%" y="869" width="0.0180%" height="15" fill="rgb(221,124,44)" fg:x="14438" fg:w="5"/><text x="52.1330%" y="879.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.01%)</title><rect x="51.9010%" y="1061" width="0.0108%" height="15" fill="rgb(205,37,22)" fg:x="14443" fg:w="3"/><text x="52.1510%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="51.9010%" y="1045" width="0.0108%" height="15" fill="rgb(250,55,8)" fg:x="14443" fg:w="3"/><text x="52.1510%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.01%)</title><rect x="51.9010%" y="1029" width="0.0108%" height="15" fill="rgb(215,83,48)" fg:x="14443" fg:w="3"/><text x="52.1510%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (3 samples, 0.01%)</title><rect x="51.9010%" y="1013" width="0.0108%" height="15" fill="rgb(253,2,32)" fg:x="14443" fg:w="3"/><text x="52.1510%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (3 samples, 0.01%)</title><rect x="51.9010%" y="997" width="0.0108%" height="15" fill="rgb(236,67,28)" fg:x="14443" fg:w="3"/><text x="52.1510%" y="1007.50"></text></g><g><title>&lt;zenoh::net::routing::resource::Resource as core::hash::Hash&gt;::hash (3 samples, 0.01%)</title><rect x="51.9010%" y="981" width="0.0108%" height="15" fill="rgb(252,55,15)" fg:x="14443" fg:w="3"/><text x="52.1510%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (3 samples, 0.01%)</title><rect x="51.9010%" y="965" width="0.0108%" height="15" fill="rgb(243,173,17)" fg:x="14443" fg:w="3"/><text x="52.1510%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="51.9261%" y="917" width="0.0216%" height="15" fill="rgb(215,212,13)" fg:x="14450" fg:w="6"/><text x="52.1761%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="51.9261%" y="901" width="0.0216%" height="15" fill="rgb(253,176,6)" fg:x="14450" fg:w="6"/><text x="52.1761%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="51.9261%" y="885" width="0.0216%" height="15" fill="rgb(236,105,26)" fg:x="14450" fg:w="6"/><text x="52.1761%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.01%)</title><rect x="51.9369%" y="869" width="0.0108%" height="15" fill="rgb(239,226,32)" fg:x="14453" fg:w="3"/><text x="52.1869%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="51.9477%" y="869" width="0.0180%" height="15" fill="rgb(236,104,51)" fg:x="14456" fg:w="5"/><text x="52.1977%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="51.9656%" y="773" width="0.0108%" height="15" fill="rgb(220,172,33)" fg:x="14461" fg:w="3"/><text x="52.2156%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (10 samples, 0.04%)</title><rect x="51.9656%" y="853" width="0.0359%" height="15" fill="rgb(224,182,25)" fg:x="14461" fg:w="10"/><text x="52.2156%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (10 samples, 0.04%)</title><rect x="51.9656%" y="837" width="0.0359%" height="15" fill="rgb(236,184,24)" fg:x="14461" fg:w="10"/><text x="52.2156%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (10 samples, 0.04%)</title><rect x="51.9656%" y="821" width="0.0359%" height="15" fill="rgb(241,221,14)" fg:x="14461" fg:w="10"/><text x="52.2156%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (10 samples, 0.04%)</title><rect x="51.9656%" y="805" width="0.0359%" height="15" fill="rgb(227,146,5)" fg:x="14461" fg:w="10"/><text x="52.2156%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (10 samples, 0.04%)</title><rect x="51.9656%" y="789" width="0.0359%" height="15" fill="rgb(214,15,23)" fg:x="14461" fg:w="10"/><text x="52.2156%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u8 (7 samples, 0.03%)</title><rect x="51.9764%" y="773" width="0.0252%" height="15" fill="rgb(233,157,31)" fg:x="14464" fg:w="7"/><text x="52.2264%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="51.9800%" y="757" width="0.0216%" height="15" fill="rgb(211,27,52)" fg:x="14465" fg:w="6"/><text x="52.2300%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.02%)</title><rect x="52.0016%" y="853" width="0.0216%" height="15" fill="rgb(212,223,15)" fg:x="14471" fg:w="6"/><text x="52.2516%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="52.0016%" y="837" width="0.0216%" height="15" fill="rgb(254,211,0)" fg:x="14471" fg:w="6"/><text x="52.2516%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="52.0016%" y="821" width="0.0216%" height="15" fill="rgb(205,43,38)" fg:x="14471" fg:w="6"/><text x="52.2516%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="52.0016%" y="805" width="0.0216%" height="15" fill="rgb(242,206,46)" fg:x="14471" fg:w="6"/><text x="52.2516%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="52.0016%" y="789" width="0.0216%" height="15" fill="rgb(220,221,12)" fg:x="14471" fg:w="6"/><text x="52.2516%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="52.0016%" y="773" width="0.0216%" height="15" fill="rgb(217,156,35)" fg:x="14471" fg:w="6"/><text x="52.2516%" y="783.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="52.0088%" y="757" width="0.0144%" height="15" fill="rgb(207,181,49)" fg:x="14473" fg:w="4"/><text x="52.2588%" y="767.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="52.0124%" y="741" width="0.0108%" height="15" fill="rgb(235,103,47)" fg:x="14474" fg:w="3"/><text x="52.2624%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="52.1274%" y="773" width="0.0323%" height="15" fill="rgb(222,63,28)" fg:x="14506" fg:w="9"/><text x="52.3774%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.03%)</title><rect x="52.1274%" y="757" width="0.0323%" height="15" fill="rgb(244,137,21)" fg:x="14506" fg:w="9"/><text x="52.3774%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.03%)</title><rect x="52.1274%" y="741" width="0.0323%" height="15" fill="rgb(228,35,27)" fg:x="14506" fg:w="9"/><text x="52.3774%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.03%)</title><rect x="52.1274%" y="725" width="0.0323%" height="15" fill="rgb(226,191,41)" fg:x="14506" fg:w="9"/><text x="52.3774%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.03%)</title><rect x="52.1309%" y="709" width="0.0287%" height="15" fill="rgb(210,154,3)" fg:x="14507" fg:w="8"/><text x="52.3809%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="52.1309%" y="693" width="0.0287%" height="15" fill="rgb(216,60,49)" fg:x="14507" fg:w="8"/><text x="52.3809%" y="703.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="52.1309%" y="677" width="0.0287%" height="15" fill="rgb(226,17,20)" fg:x="14507" fg:w="8"/><text x="52.3809%" y="687.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="52.1345%" y="661" width="0.0252%" height="15" fill="rgb(206,115,35)" fg:x="14508" fg:w="7"/><text x="52.3845%" y="671.50"></text></g><g><title>alloc::str::join_generic_copy (37 samples, 0.13%)</title><rect x="52.1022%" y="789" width="0.1330%" height="15" fill="rgb(227,88,1)" fg:x="14499" fg:w="37"/><text x="52.3522%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (20 samples, 0.07%)</title><rect x="52.1633%" y="773" width="0.0719%" height="15" fill="rgb(230,222,24)" fg:x="14516" fg:w="20"/><text x="52.4133%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.07%)</title><rect x="52.1633%" y="757" width="0.0719%" height="15" fill="rgb(214,124,32)" fg:x="14516" fg:w="20"/><text x="52.4133%" y="767.50"></text></g><g><title>[libc.so.6] (20 samples, 0.07%)</title><rect x="52.1633%" y="741" width="0.0719%" height="15" fill="rgb(240,41,36)" fg:x="14516" fg:w="20"/><text x="52.4133%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (39 samples, 0.14%)</title><rect x="52.1022%" y="837" width="0.1401%" height="15" fill="rgb(221,17,52)" fg:x="14499" fg:w="39"/><text x="52.3522%" y="847.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (39 samples, 0.14%)</title><rect x="52.1022%" y="821" width="0.1401%" height="15" fill="rgb(252,70,16)" fg:x="14499" fg:w="39"/><text x="52.3522%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (39 samples, 0.14%)</title><rect x="52.1022%" y="805" width="0.1401%" height="15" fill="rgb(250,177,4)" fg:x="14499" fg:w="39"/><text x="52.3522%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.03%)</title><rect x="52.2423%" y="837" width="0.0252%" height="15" fill="rgb(240,188,47)" fg:x="14538" fg:w="7"/><text x="52.4923%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.03%)</title><rect x="52.2423%" y="821" width="0.0252%" height="15" fill="rgb(215,92,12)" fg:x="14538" fg:w="7"/><text x="52.4923%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.03%)</title><rect x="52.2423%" y="805" width="0.0252%" height="15" fill="rgb(242,110,29)" fg:x="14538" fg:w="7"/><text x="52.4923%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="52.2423%" y="789" width="0.0252%" height="15" fill="rgb(208,211,26)" fg:x="14538" fg:w="7"/><text x="52.4923%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.03%)</title><rect x="52.2423%" y="773" width="0.0252%" height="15" fill="rgb(244,147,6)" fg:x="14538" fg:w="7"/><text x="52.4923%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.03%)</title><rect x="52.2423%" y="757" width="0.0252%" height="15" fill="rgb(211,130,42)" fg:x="14538" fg:w="7"/><text x="52.4923%" y="767.50"></text></g><g><title>cfree (7 samples, 0.03%)</title><rect x="52.2423%" y="741" width="0.0252%" height="15" fill="rgb(220,63,1)" fg:x="14538" fg:w="7"/><text x="52.4923%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="52.3430%" y="757" width="0.0216%" height="15" fill="rgb(241,212,30)" fg:x="14566" fg:w="6"/><text x="52.5930%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.02%)</title><rect x="52.3466%" y="741" width="0.0180%" height="15" fill="rgb(233,153,17)" fg:x="14567" fg:w="5"/><text x="52.5966%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.02%)</title><rect x="52.3466%" y="725" width="0.0180%" height="15" fill="rgb(236,3,10)" fg:x="14567" fg:w="5"/><text x="52.5966%" y="735.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (5 samples, 0.02%)</title><rect x="52.3466%" y="709" width="0.0180%" height="15" fill="rgb(232,41,21)" fg:x="14567" fg:w="5"/><text x="52.5966%" y="719.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (5 samples, 0.02%)</title><rect x="52.3466%" y="693" width="0.0180%" height="15" fill="rgb(206,63,51)" fg:x="14567" fg:w="5"/><text x="52.5966%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.04%)</title><rect x="52.3753%" y="757" width="0.0359%" height="15" fill="rgb(250,214,3)" fg:x="14575" fg:w="10"/><text x="52.6253%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.04%)</title><rect x="52.3753%" y="741" width="0.0359%" height="15" fill="rgb(254,89,27)" fg:x="14575" fg:w="10"/><text x="52.6253%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.04%)</title><rect x="52.3753%" y="725" width="0.0359%" height="15" fill="rgb(249,41,14)" fg:x="14575" fg:w="10"/><text x="52.6253%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.04%)</title><rect x="52.3753%" y="709" width="0.0359%" height="15" fill="rgb(221,196,51)" fg:x="14575" fg:w="10"/><text x="52.6253%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.04%)</title><rect x="52.3753%" y="693" width="0.0359%" height="15" fill="rgb(214,116,26)" fg:x="14575" fg:w="10"/><text x="52.6253%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.04%)</title><rect x="52.3753%" y="677" width="0.0359%" height="15" fill="rgb(236,67,7)" fg:x="14575" fg:w="10"/><text x="52.6253%" y="687.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.04%)</title><rect x="52.3753%" y="661" width="0.0359%" height="15" fill="rgb(253,179,32)" fg:x="14575" fg:w="10"/><text x="52.6253%" y="671.50"></text></g><g><title>malloc (9 samples, 0.03%)</title><rect x="52.3789%" y="645" width="0.0323%" height="15" fill="rgb(218,33,15)" fg:x="14576" fg:w="9"/><text x="52.6289%" y="655.50"></text></g><g><title>alloc::str::join_generic_copy (24 samples, 0.09%)</title><rect x="52.3286%" y="773" width="0.0862%" height="15" fill="rgb(217,202,41)" fg:x="14562" fg:w="24"/><text x="52.5786%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (28 samples, 0.10%)</title><rect x="52.3250%" y="821" width="0.1006%" height="15" fill="rgb(234,133,5)" fg:x="14561" fg:w="28"/><text x="52.5750%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (28 samples, 0.10%)</title><rect x="52.3250%" y="805" width="0.1006%" height="15" fill="rgb(240,47,40)" fg:x="14561" fg:w="28"/><text x="52.5750%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (27 samples, 0.10%)</title><rect x="52.3286%" y="789" width="0.0970%" height="15" fill="rgb(234,166,26)" fg:x="14562" fg:w="27"/><text x="52.5786%" y="799.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (3 samples, 0.01%)</title><rect x="52.4148%" y="773" width="0.0108%" height="15" fill="rgb(244,125,51)" fg:x="14586" fg:w="3"/><text x="52.6648%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (136 samples, 0.49%)</title><rect x="51.9477%" y="885" width="0.4887%" height="15" fill="rgb(229,171,11)" fg:x="14456" fg:w="136"/><text x="52.1977%" y="895.50"></text></g><g><title>&lt;zenoh::net::routing::resource::Resource as core::hash::Hash&gt;::hash (131 samples, 0.47%)</title><rect x="51.9656%" y="869" width="0.4707%" height="15" fill="rgb(224,38,45)" fg:x="14461" fg:w="131"/><text x="52.2156%" y="879.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (115 samples, 0.41%)</title><rect x="52.0231%" y="853" width="0.4133%" height="15" fill="rgb(237,27,7)" fg:x="14477" fg:w="115"/><text x="52.2731%" y="863.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (47 samples, 0.17%)</title><rect x="52.2675%" y="837" width="0.1689%" height="15" fill="rgb(216,52,7)" fg:x="14545" fg:w="47"/><text x="52.5175%" y="847.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (3 samples, 0.01%)</title><rect x="52.4256%" y="821" width="0.0108%" height="15" fill="rgb(243,11,11)" fg:x="14589" fg:w="3"/><text x="52.6756%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="52.4400%" y="805" width="0.0180%" height="15" fill="rgb(253,167,20)" fg:x="14593" fg:w="5"/><text x="52.6900%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (151 samples, 0.54%)</title><rect x="51.9261%" y="981" width="0.5426%" height="15" fill="rgb(215,207,5)" fg:x="14450" fg:w="151"/><text x="52.1761%" y="991.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (151 samples, 0.54%)</title><rect x="51.9261%" y="965" width="0.5426%" height="15" fill="rgb(252,127,31)" fg:x="14450" fg:w="151"/><text x="52.1761%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (151 samples, 0.54%)</title><rect x="51.9261%" y="949" width="0.5426%" height="15" fill="rgb(209,106,27)" fg:x="14450" fg:w="151"/><text x="52.1761%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (151 samples, 0.54%)</title><rect x="51.9261%" y="933" width="0.5426%" height="15" fill="rgb(214,220,18)" fg:x="14450" fg:w="151"/><text x="52.1761%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (145 samples, 0.52%)</title><rect x="51.9477%" y="917" width="0.5211%" height="15" fill="rgb(237,89,12)" fg:x="14456" fg:w="145"/><text x="52.1977%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (145 samples, 0.52%)</title><rect x="51.9477%" y="901" width="0.5211%" height="15" fill="rgb(209,167,36)" fg:x="14456" fg:w="145"/><text x="52.1977%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (9 samples, 0.03%)</title><rect x="52.4364%" y="885" width="0.0323%" height="15" fill="rgb(243,45,22)" fg:x="14592" fg:w="9"/><text x="52.6864%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u64 (9 samples, 0.03%)</title><rect x="52.4364%" y="869" width="0.0323%" height="15" fill="rgb(239,2,46)" fg:x="14592" fg:w="9"/><text x="52.6864%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="52.4364%" y="853" width="0.0323%" height="15" fill="rgb(241,101,0)" fg:x="14592" fg:w="9"/><text x="52.6864%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="52.4364%" y="837" width="0.0323%" height="15" fill="rgb(244,34,31)" fg:x="14592" fg:w="9"/><text x="52.6864%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="52.4364%" y="821" width="0.0323%" height="15" fill="rgb(248,23,22)" fg:x="14592" fg:w="9"/><text x="52.6864%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.01%)</title><rect x="52.4580%" y="805" width="0.0108%" height="15" fill="rgb(218,27,48)" fg:x="14598" fg:w="3"/><text x="52.7080%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="52.4723%" y="821" width="0.0144%" height="15" fill="rgb(232,78,1)" fg:x="14602" fg:w="4"/><text x="52.7223%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="52.4723%" y="805" width="0.0144%" height="15" fill="rgb(233,169,12)" fg:x="14602" fg:w="4"/><text x="52.7223%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="52.4759%" y="789" width="0.0108%" height="15" fill="rgb(225,222,54)" fg:x="14603" fg:w="3"/><text x="52.7259%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="52.4759%" y="773" width="0.0108%" height="15" fill="rgb(245,126,29)" fg:x="14603" fg:w="3"/><text x="52.7259%" y="783.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="52.4723%" y="853" width="0.0180%" height="15" fill="rgb(241,63,48)" fg:x="14602" fg:w="5"/><text x="52.7223%" y="863.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="52.4723%" y="837" width="0.0180%" height="15" fill="rgb(235,126,38)" fg:x="14602" fg:w="5"/><text x="52.7223%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (168 samples, 0.60%)</title><rect x="51.9010%" y="1093" width="0.6037%" height="15" fill="rgb(232,96,49)" fg:x="14443" fg:w="168"/><text x="52.1510%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (168 samples, 0.60%)</title><rect x="51.9010%" y="1077" width="0.6037%" height="15" fill="rgb(211,146,40)" fg:x="14443" fg:w="168"/><text x="52.1510%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (163 samples, 0.59%)</title><rect x="51.9189%" y="1061" width="0.5857%" height="15" fill="rgb(247,93,44)" fg:x="14448" fg:w="163"/><text x="52.1689%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (163 samples, 0.59%)</title><rect x="51.9189%" y="1045" width="0.5857%" height="15" fill="rgb(251,41,49)" fg:x="14448" fg:w="163"/><text x="52.1689%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (163 samples, 0.59%)</title><rect x="51.9189%" y="1029" width="0.5857%" height="15" fill="rgb(218,155,12)" fg:x="14448" fg:w="163"/><text x="52.1689%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (163 samples, 0.59%)</title><rect x="51.9189%" y="1013" width="0.5857%" height="15" fill="rgb(221,161,30)" fg:x="14448" fg:w="163"/><text x="52.1689%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (163 samples, 0.59%)</title><rect x="51.9189%" y="997" width="0.5857%" height="15" fill="rgb(221,179,11)" fg:x="14448" fg:w="163"/><text x="52.1689%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (10 samples, 0.04%)</title><rect x="52.4687%" y="981" width="0.0359%" height="15" fill="rgb(224,170,48)" fg:x="14601" fg:w="10"/><text x="52.7187%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (10 samples, 0.04%)</title><rect x="52.4687%" y="965" width="0.0359%" height="15" fill="rgb(223,117,5)" fg:x="14601" fg:w="10"/><text x="52.7187%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (10 samples, 0.04%)</title><rect x="52.4687%" y="949" width="0.0359%" height="15" fill="rgb(209,52,20)" fg:x="14601" fg:w="10"/><text x="52.7187%" y="959.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10 samples, 0.04%)</title><rect x="52.4687%" y="933" width="0.0359%" height="15" fill="rgb(209,19,41)" fg:x="14601" fg:w="10"/><text x="52.7187%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.04%)</title><rect x="52.4687%" y="917" width="0.0359%" height="15" fill="rgb(210,177,12)" fg:x="14601" fg:w="10"/><text x="52.7187%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.04%)</title><rect x="52.4687%" y="901" width="0.0359%" height="15" fill="rgb(211,159,37)" fg:x="14601" fg:w="10"/><text x="52.7187%" y="911.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.04%)</title><rect x="52.4687%" y="885" width="0.0359%" height="15" fill="rgb(209,20,2)" fg:x="14601" fg:w="10"/><text x="52.7187%" y="895.50"></text></g><g><title>malloc (10 samples, 0.04%)</title><rect x="52.4687%" y="869" width="0.0359%" height="15" fill="rgb(244,3,46)" fg:x="14601" fg:w="10"/><text x="52.7187%" y="879.50"></text></g><g><title>__lll_lock_wake_private (4 samples, 0.01%)</title><rect x="52.4903%" y="853" width="0.0144%" height="15" fill="rgb(220,94,38)" fg:x="14607" fg:w="4"/><text x="52.7403%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="52.4903%" y="837" width="0.0144%" height="15" fill="rgb(253,14,31)" fg:x="14607" fg:w="4"/><text x="52.7403%" y="847.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="52.4903%" y="821" width="0.0144%" height="15" fill="rgb(234,176,13)" fg:x="14607" fg:w="4"/><text x="52.7403%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="52.4903%" y="805" width="0.0144%" height="15" fill="rgb(218,62,25)" fg:x="14607" fg:w="4"/><text x="52.7403%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="52.4903%" y="789" width="0.0144%" height="15" fill="rgb(216,124,40)" fg:x="14607" fg:w="4"/><text x="52.7403%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="52.4939%" y="773" width="0.0108%" height="15" fill="rgb(228,170,12)" fg:x="14608" fg:w="3"/><text x="52.7439%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="52.5155%" y="1061" width="0.0108%" height="15" fill="rgb(231,226,5)" fg:x="14614" fg:w="3"/><text x="52.7655%" y="1071.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (3 samples, 0.01%)</title><rect x="52.5298%" y="1061" width="0.0108%" height="15" fill="rgb(237,122,22)" fg:x="14618" fg:w="3"/><text x="52.7798%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.02%)</title><rect x="52.5406%" y="1061" width="0.0180%" height="15" fill="rgb(209,185,25)" fg:x="14621" fg:w="5"/><text x="52.7906%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="52.5406%" y="1045" width="0.0180%" height="15" fill="rgb(228,200,32)" fg:x="14621" fg:w="5"/><text x="52.7906%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="52.5406%" y="1029" width="0.0180%" height="15" fill="rgb(217,140,10)" fg:x="14621" fg:w="5"/><text x="52.7906%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="52.5406%" y="1013" width="0.0180%" height="15" fill="rgb(253,17,24)" fg:x="14621" fg:w="5"/><text x="52.7906%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="52.5406%" y="997" width="0.0180%" height="15" fill="rgb(212,61,6)" fg:x="14621" fg:w="5"/><text x="52.7906%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="52.5406%" y="981" width="0.0180%" height="15" fill="rgb(205,14,25)" fg:x="14621" fg:w="5"/><text x="52.7906%" y="991.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="52.5406%" y="965" width="0.0180%" height="15" fill="rgb(232,69,41)" fg:x="14621" fg:w="5"/><text x="52.7906%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;zenoh::session::SessionState&gt;&gt; (8 samples, 0.03%)</title><rect x="52.5622%" y="1061" width="0.0287%" height="15" fill="rgb(241,106,47)" fg:x="14627" fg:w="8"/><text x="52.8122%" y="1071.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="52.5622%" y="1045" width="0.0287%" height="15" fill="rgb(210,213,53)" fg:x="14627" fg:w="8"/><text x="52.8122%" y="1055.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (8 samples, 0.03%)</title><rect x="52.5622%" y="1029" width="0.0287%" height="15" fill="rgb(253,175,27)" fg:x="14627" fg:w="8"/><text x="52.8122%" y="1039.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (8 samples, 0.03%)</title><rect x="52.5622%" y="1013" width="0.0287%" height="15" fill="rgb(211,171,24)" fg:x="14627" fg:w="8"/><text x="52.8122%" y="1023.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.01%)</title><rect x="52.6089%" y="1029" width="0.0108%" height="15" fill="rgb(229,80,7)" fg:x="14640" fg:w="3"/><text x="52.8589%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.01%)</title><rect x="52.6089%" y="1013" width="0.0108%" height="15" fill="rgb(212,46,39)" fg:x="14640" fg:w="3"/><text x="52.8589%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.01%)</title><rect x="52.6089%" y="997" width="0.0108%" height="15" fill="rgb(240,80,45)" fg:x="14640" fg:w="3"/><text x="52.8589%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.01%)</title><rect x="52.6197%" y="1029" width="0.0144%" height="15" fill="rgb(253,177,40)" fg:x="14643" fg:w="4"/><text x="52.8697%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="52.6197%" y="1013" width="0.0144%" height="15" fill="rgb(249,200,15)" fg:x="14643" fg:w="4"/><text x="52.8697%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.01%)</title><rect x="52.6197%" y="997" width="0.0144%" height="15" fill="rgb(217,78,26)" fg:x="14643" fg:w="4"/><text x="52.8697%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (120 samples, 0.43%)</title><rect x="52.6664%" y="949" width="0.4312%" height="15" fill="rgb(254,151,32)" fg:x="14656" fg:w="120"/><text x="52.9164%" y="959.50"></text></g><g><title>[unknown] (65 samples, 0.23%)</title><rect x="52.8640%" y="933" width="0.2336%" height="15" fill="rgb(226,165,27)" fg:x="14711" fg:w="65"/><text x="53.1140%" y="943.50"></text></g><g><title>[unknown] (58 samples, 0.21%)</title><rect x="52.8892%" y="917" width="0.2084%" height="15" fill="rgb(250,206,4)" fg:x="14718" fg:w="58"/><text x="53.1392%" y="927.50"></text></g><g><title>[unknown] (57 samples, 0.20%)</title><rect x="52.8928%" y="901" width="0.2048%" height="15" fill="rgb(231,229,27)" fg:x="14719" fg:w="57"/><text x="53.1428%" y="911.50"></text></g><g><title>[unknown] (56 samples, 0.20%)</title><rect x="52.8964%" y="885" width="0.2012%" height="15" fill="rgb(239,217,8)" fg:x="14720" fg:w="56"/><text x="53.1464%" y="895.50"></text></g><g><title>[unknown] (34 samples, 0.12%)</title><rect x="52.9754%" y="869" width="0.1222%" height="15" fill="rgb(225,204,27)" fg:x="14742" fg:w="34"/><text x="53.2254%" y="879.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="53.0006%" y="853" width="0.0970%" height="15" fill="rgb(230,56,32)" fg:x="14749" fg:w="27"/><text x="53.2506%" y="863.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="53.0365%" y="837" width="0.0611%" height="15" fill="rgb(222,56,27)" fg:x="14759" fg:w="17"/><text x="53.2865%" y="847.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="53.0509%" y="821" width="0.0467%" height="15" fill="rgb(253,108,27)" fg:x="14763" fg:w="13"/><text x="53.3009%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="53.0760%" y="805" width="0.0216%" height="15" fill="rgb(212,87,36)" fg:x="14770" fg:w="6"/><text x="53.3260%" y="815.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="53.1407%" y="837" width="0.0252%" height="15" fill="rgb(247,82,36)" fg:x="14788" fg:w="7"/><text x="53.3907%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (20 samples, 0.07%)</title><rect x="53.1048%" y="949" width="0.0719%" height="15" fill="rgb(222,143,9)" fg:x="14778" fg:w="20"/><text x="53.3548%" y="959.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.07%)</title><rect x="53.1048%" y="933" width="0.0719%" height="15" fill="rgb(238,162,48)" fg:x="14778" fg:w="20"/><text x="53.3548%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (20 samples, 0.07%)</title><rect x="53.1048%" y="917" width="0.0719%" height="15" fill="rgb(221,59,43)" fg:x="14778" fg:w="20"/><text x="53.3548%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (20 samples, 0.07%)</title><rect x="53.1048%" y="901" width="0.0719%" height="15" fill="rgb(205,166,41)" fg:x="14778" fg:w="20"/><text x="53.3548%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.07%)</title><rect x="53.1048%" y="885" width="0.0719%" height="15" fill="rgb(241,186,40)" fg:x="14778" fg:w="20"/><text x="53.3548%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.07%)</title><rect x="53.1048%" y="869" width="0.0719%" height="15" fill="rgb(216,119,35)" fg:x="14778" fg:w="20"/><text x="53.3548%" y="879.50"></text></g><g><title>cfree (18 samples, 0.06%)</title><rect x="53.1120%" y="853" width="0.0647%" height="15" fill="rgb(208,68,38)" fg:x="14780" fg:w="18"/><text x="53.3620%" y="863.50"></text></g><g><title>__lll_lock_wake_private (3 samples, 0.01%)</title><rect x="53.1659%" y="837" width="0.0108%" height="15" fill="rgb(217,113,1)" fg:x="14795" fg:w="3"/><text x="53.4159%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="53.1659%" y="821" width="0.0108%" height="15" fill="rgb(242,153,3)" fg:x="14795" fg:w="3"/><text x="53.4159%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="53.1659%" y="805" width="0.0108%" height="15" fill="rgb(229,76,35)" fg:x="14795" fg:w="3"/><text x="53.4159%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="53.1659%" y="789" width="0.0108%" height="15" fill="rgb(229,125,34)" fg:x="14795" fg:w="3"/><text x="53.4159%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="53.1659%" y="773" width="0.0108%" height="15" fill="rgb(238,179,36)" fg:x="14795" fg:w="3"/><text x="53.4159%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.02%)</title><rect x="53.3420%" y="821" width="0.0180%" height="15" fill="rgb(244,183,19)" fg:x="14844" fg:w="5"/><text x="53.5920%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.03%)</title><rect x="53.3384%" y="837" width="0.0252%" height="15" fill="rgb(216,85,49)" fg:x="14843" fg:w="7"/><text x="53.5884%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.03%)</title><rect x="53.3815%" y="821" width="0.0287%" height="15" fill="rgb(208,161,47)" fg:x="14855" fg:w="8"/><text x="53.6315%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (25 samples, 0.09%)</title><rect x="53.3240%" y="885" width="0.0898%" height="15" fill="rgb(233,210,18)" fg:x="14839" fg:w="25"/><text x="53.5740%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (25 samples, 0.09%)</title><rect x="53.3240%" y="869" width="0.0898%" height="15" fill="rgb(205,104,42)" fg:x="14839" fg:w="25"/><text x="53.5740%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (25 samples, 0.09%)</title><rect x="53.3240%" y="853" width="0.0898%" height="15" fill="rgb(248,90,43)" fg:x="14839" fg:w="25"/><text x="53.5740%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14 samples, 0.05%)</title><rect x="53.3635%" y="837" width="0.0503%" height="15" fill="rgb(206,198,11)" fg:x="14850" fg:w="14"/><text x="53.6135%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="53.5180%" y="869" width="0.0108%" height="15" fill="rgb(239,165,27)" fg:x="14893" fg:w="3"/><text x="53.7680%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (35 samples, 0.13%)</title><rect x="53.4138%" y="885" width="0.1258%" height="15" fill="rgb(246,44,32)" fg:x="14864" fg:w="35"/><text x="53.6638%" y="895.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (3 samples, 0.01%)</title><rect x="53.5288%" y="869" width="0.0108%" height="15" fill="rgb(252,65,42)" fg:x="14896" fg:w="3"/><text x="53.7788%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="53.5396%" y="885" width="0.0144%" height="15" fill="rgb(246,197,18)" fg:x="14899" fg:w="4"/><text x="53.7896%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.01%)</title><rect x="53.9169%" y="789" width="0.0144%" height="15" fill="rgb(216,192,4)" fg:x="15004" fg:w="4"/><text x="54.1669%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="53.9313%" y="789" width="0.0108%" height="15" fill="rgb(208,117,10)" fg:x="15008" fg:w="3"/><text x="54.1813%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.08%)</title><rect x="53.8738%" y="837" width="0.0827%" height="15" fill="rgb(240,61,47)" fg:x="14992" fg:w="23"/><text x="54.1238%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (23 samples, 0.08%)</title><rect x="53.8738%" y="821" width="0.0827%" height="15" fill="rgb(228,178,21)" fg:x="14992" fg:w="23"/><text x="54.1238%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.08%)</title><rect x="53.8738%" y="805" width="0.0827%" height="15" fill="rgb(219,96,54)" fg:x="14992" fg:w="23"/><text x="54.1238%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="53.9421%" y="789" width="0.0144%" height="15" fill="rgb(250,177,24)" fg:x="15011" fg:w="4"/><text x="54.1921%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (226 samples, 0.81%)</title><rect x="53.1767%" y="949" width="0.8121%" height="15" fill="rgb(242,154,46)" fg:x="14798" fg:w="226"/><text x="53.4267%" y="959.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (226 samples, 0.81%)</title><rect x="53.1767%" y="933" width="0.8121%" height="15" fill="rgb(226,176,29)" fg:x="14798" fg:w="226"/><text x="53.4267%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (226 samples, 0.81%)</title><rect x="53.1767%" y="917" width="0.8121%" height="15" fill="rgb(226,29,2)" fg:x="14798" fg:w="226"/><text x="53.4267%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (225 samples, 0.81%)</title><rect x="53.1803%" y="901" width="0.8085%" height="15" fill="rgb(237,104,14)" fg:x="14799" fg:w="225"/><text x="53.4303%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (121 samples, 0.43%)</title><rect x="53.5540%" y="885" width="0.4348%" height="15" fill="rgb(245,207,31)" fg:x="14903" fg:w="121"/><text x="53.8040%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (121 samples, 0.43%)</title><rect x="53.5540%" y="869" width="0.4348%" height="15" fill="rgb(229,211,45)" fg:x="14903" fg:w="121"/><text x="53.8040%" y="879.50"></text></g><g><title>core::hash::Hasher::write_usize (121 samples, 0.43%)</title><rect x="53.5540%" y="853" width="0.4348%" height="15" fill="rgb(229,113,15)" fg:x="14903" fg:w="121"/><text x="53.8040%" y="863.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="53.9564%" y="837" width="0.0323%" height="15" fill="rgb(237,147,15)" fg:x="15015" fg:w="9"/><text x="54.2064%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (6 samples, 0.02%)</title><rect x="53.9888%" y="949" width="0.0216%" height="15" fill="rgb(244,120,12)" fg:x="15024" fg:w="6"/><text x="54.2388%" y="959.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="54.0750%" y="917" width="0.0144%" height="15" fill="rgb(205,120,12)" fg:x="15048" fg:w="4"/><text x="54.3250%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (41 samples, 0.15%)</title><rect x="54.0103%" y="933" width="0.1473%" height="15" fill="rgb(231,26,45)" fg:x="15030" fg:w="41"/><text x="54.2603%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (17 samples, 0.06%)</title><rect x="54.0966%" y="917" width="0.0611%" height="15" fill="rgb(246,98,1)" fg:x="15054" fg:w="17"/><text x="54.3466%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (17 samples, 0.06%)</title><rect x="54.0966%" y="901" width="0.0611%" height="15" fill="rgb(207,68,45)" fg:x="15054" fg:w="17"/><text x="54.3466%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (43 samples, 0.15%)</title><rect x="54.0103%" y="949" width="0.1545%" height="15" fill="rgb(231,27,38)" fg:x="15030" fg:w="43"/><text x="54.2603%" y="959.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="54.1972%" y="789" width="0.0503%" height="15" fill="rgb(214,223,3)" fg:x="15082" fg:w="14"/><text x="54.4472%" y="799.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="54.1972%" y="773" width="0.0503%" height="15" fill="rgb(228,195,46)" fg:x="15082" fg:w="14"/><text x="54.4472%" y="783.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="54.1972%" y="757" width="0.0503%" height="15" fill="rgb(231,100,42)" fg:x="15082" fg:w="14"/><text x="54.4472%" y="767.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="54.1972%" y="741" width="0.0503%" height="15" fill="rgb(236,53,4)" fg:x="15082" fg:w="14"/><text x="54.4472%" y="751.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="54.1972%" y="725" width="0.0503%" height="15" fill="rgb(230,152,12)" fg:x="15082" fg:w="14"/><text x="54.4472%" y="735.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="54.2044%" y="709" width="0.0431%" height="15" fill="rgb(226,101,19)" fg:x="15084" fg:w="12"/><text x="54.4544%" y="719.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="54.2188%" y="693" width="0.0287%" height="15" fill="rgb(250,149,32)" fg:x="15088" fg:w="8"/><text x="54.4688%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="54.2260%" y="677" width="0.0216%" height="15" fill="rgb(232,178,12)" fg:x="15090" fg:w="6"/><text x="54.4760%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="54.2296%" y="661" width="0.0180%" height="15" fill="rgb(246,151,17)" fg:x="15091" fg:w="5"/><text x="54.4796%" y="671.50"></text></g><g><title>[libc.so.6] (26 samples, 0.09%)</title><rect x="54.1792%" y="821" width="0.0934%" height="15" fill="rgb(252,17,51)" fg:x="15077" fg:w="26"/><text x="54.4292%" y="831.50"></text></g><g><title>[libc.so.6] (25 samples, 0.09%)</title><rect x="54.1828%" y="805" width="0.0898%" height="15" fill="rgb(250,207,23)" fg:x="15078" fg:w="25"/><text x="54.4328%" y="815.50"></text></g><g><title>__mprotect (7 samples, 0.03%)</title><rect x="54.2475%" y="789" width="0.0252%" height="15" fill="rgb(205,27,5)" fg:x="15096" fg:w="7"/><text x="54.4975%" y="799.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="54.2475%" y="773" width="0.0252%" height="15" fill="rgb(224,32,19)" fg:x="15096" fg:w="7"/><text x="54.4975%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="54.2547%" y="757" width="0.0180%" height="15" fill="rgb(247,214,40)" fg:x="15098" fg:w="5"/><text x="54.5047%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="54.2547%" y="741" width="0.0180%" height="15" fill="rgb(239,199,17)" fg:x="15098" fg:w="5"/><text x="54.5047%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="54.2547%" y="725" width="0.0180%" height="15" fill="rgb(251,159,9)" fg:x="15098" fg:w="5"/><text x="54.5047%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.2619%" y="709" width="0.0108%" height="15" fill="rgb(225,78,32)" fg:x="15100" fg:w="3"/><text x="54.5119%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (458 samples, 1.65%)</title><rect x="52.6376%" y="1013" width="1.6458%" height="15" fill="rgb(206,97,47)" fg:x="14648" fg:w="458"/><text x="52.8876%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (458 samples, 1.65%)</title><rect x="52.6376%" y="997" width="1.6458%" height="15" fill="rgb(227,107,4)" fg:x="14648" fg:w="458"/><text x="52.8876%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (458 samples, 1.65%)</title><rect x="52.6376%" y="981" width="1.6458%" height="15" fill="rgb(241,146,50)" fg:x="14648" fg:w="458"/><text x="52.8876%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (458 samples, 1.65%)</title><rect x="52.6376%" y="965" width="1.6458%" height="15" fill="rgb(232,92,30)" fg:x="14648" fg:w="458"/><text x="52.8876%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (33 samples, 0.12%)</title><rect x="54.1649%" y="949" width="0.1186%" height="15" fill="rgb(222,0,40)" fg:x="15073" fg:w="33"/><text x="54.4149%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (33 samples, 0.12%)</title><rect x="54.1649%" y="933" width="0.1186%" height="15" fill="rgb(219,54,33)" fg:x="15073" fg:w="33"/><text x="54.4149%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (32 samples, 0.11%)</title><rect x="54.1685%" y="917" width="0.1150%" height="15" fill="rgb(226,209,28)" fg:x="15074" fg:w="32"/><text x="54.4185%" y="927.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (32 samples, 0.11%)</title><rect x="54.1685%" y="901" width="0.1150%" height="15" fill="rgb(254,205,35)" fg:x="15074" fg:w="32"/><text x="54.4185%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.11%)</title><rect x="54.1685%" y="885" width="0.1150%" height="15" fill="rgb(230,159,3)" fg:x="15074" fg:w="32"/><text x="54.4185%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.11%)</title><rect x="54.1685%" y="869" width="0.1150%" height="15" fill="rgb(232,190,24)" fg:x="15074" fg:w="32"/><text x="54.4185%" y="879.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.11%)</title><rect x="54.1685%" y="853" width="0.1150%" height="15" fill="rgb(217,227,44)" fg:x="15074" fg:w="32"/><text x="54.4185%" y="863.50"></text></g><g><title>malloc (32 samples, 0.11%)</title><rect x="54.1685%" y="837" width="0.1150%" height="15" fill="rgb(236,211,1)" fg:x="15074" fg:w="32"/><text x="54.4185%" y="847.50"></text></g><g><title>__lll_lock_wake_private (3 samples, 0.01%)</title><rect x="54.2727%" y="821" width="0.0108%" height="15" fill="rgb(250,127,46)" fg:x="15103" fg:w="3"/><text x="54.5227%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.2727%" y="805" width="0.0108%" height="15" fill="rgb(229,213,6)" fg:x="15103" fg:w="3"/><text x="54.5227%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.2727%" y="789" width="0.0108%" height="15" fill="rgb(237,15,36)" fg:x="15103" fg:w="3"/><text x="54.5227%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.2727%" y="773" width="0.0108%" height="15" fill="rgb(213,131,41)" fg:x="15103" fg:w="3"/><text x="54.5227%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.2727%" y="757" width="0.0108%" height="15" fill="rgb(225,82,44)" fg:x="15103" fg:w="3"/><text x="54.5227%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.2727%" y="741" width="0.0108%" height="15" fill="rgb(249,42,11)" fg:x="15103" fg:w="3"/><text x="54.5227%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (472 samples, 1.70%)</title><rect x="52.5909%" y="1061" width="1.6961%" height="15" fill="rgb(253,11,29)" fg:x="14635" fg:w="472"/><text x="52.8409%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (471 samples, 1.69%)</title><rect x="52.5945%" y="1045" width="1.6925%" height="15" fill="rgb(206,8,54)" fg:x="14636" fg:w="471"/><text x="52.8445%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (460 samples, 1.65%)</title><rect x="52.6340%" y="1029" width="1.6530%" height="15" fill="rgb(222,186,2)" fg:x="14647" fg:w="460"/><text x="52.8840%" y="1039.50"></text></g><g><title>&lt;zenoh::session::Session as zenoh_transport::primitives::Primitives&gt;::decl_resource (502 samples, 1.80%)</title><rect x="52.5047%" y="1077" width="1.8039%" height="15" fill="rgb(221,206,53)" fg:x="14611" fg:w="502"/><text x="52.7547%" y="1087.50">&lt;..</text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.3230%" y="917" width="0.0108%" height="15" fill="rgb(230,150,21)" fg:x="15117" fg:w="3"/><text x="54.5730%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.3230%" y="901" width="0.0108%" height="15" fill="rgb(253,202,10)" fg:x="15117" fg:w="3"/><text x="54.5730%" y="911.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (9 samples, 0.03%)</title><rect x="54.3086%" y="1077" width="0.0323%" height="15" fill="rgb(238,109,40)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="1087.50"></text></g><g><title>zenoh::net::routing::resource::Resource::decl_key::{{closure}} (9 samples, 0.03%)</title><rect x="54.3086%" y="1061" width="0.0323%" height="15" fill="rgb(247,120,22)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="54.3086%" y="1045" width="0.0323%" height="15" fill="rgb(207,43,30)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.03%)</title><rect x="54.3086%" y="1029" width="0.0323%" height="15" fill="rgb(213,211,24)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.03%)</title><rect x="54.3086%" y="1013" width="0.0323%" height="15" fill="rgb(239,73,39)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.03%)</title><rect x="54.3086%" y="997" width="0.0323%" height="15" fill="rgb(245,182,19)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.03%)</title><rect x="54.3086%" y="981" width="0.0323%" height="15" fill="rgb(247,143,26)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="991.50"></text></g><g><title>malloc (9 samples, 0.03%)</title><rect x="54.3086%" y="965" width="0.0323%" height="15" fill="rgb(228,191,23)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="975.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="54.3086%" y="949" width="0.0323%" height="15" fill="rgb(253,165,31)" fg:x="15113" fg:w="9"/><text x="54.5586%" y="959.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="54.3194%" y="933" width="0.0216%" height="15" fill="rgb(234,138,20)" fg:x="15116" fg:w="6"/><text x="54.5694%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="54.3553%" y="965" width="0.0144%" height="15" fill="rgb(218,191,29)" fg:x="15126" fg:w="4"/><text x="54.6053%" y="975.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="54.3553%" y="949" width="0.0144%" height="15" fill="rgb(221,157,19)" fg:x="15126" fg:w="4"/><text x="54.6053%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (4 samples, 0.01%)</title><rect x="54.3553%" y="933" width="0.0144%" height="15" fill="rgb(237,26,42)" fg:x="15126" fg:w="4"/><text x="54.6053%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 0.01%)</title><rect x="54.3553%" y="917" width="0.0144%" height="15" fill="rgb(220,163,24)" fg:x="15126" fg:w="4"/><text x="54.6053%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="54.3553%" y="901" width="0.0144%" height="15" fill="rgb(242,115,20)" fg:x="15126" fg:w="4"/><text x="54.6053%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="54.3553%" y="885" width="0.0144%" height="15" fill="rgb(210,206,9)" fg:x="15126" fg:w="4"/><text x="54.6053%" y="895.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="54.3553%" y="869" width="0.0144%" height="15" fill="rgb(208,71,17)" fg:x="15126" fg:w="4"/><text x="54.6053%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="54.3697%" y="901" width="0.0180%" height="15" fill="rgb(233,7,5)" fg:x="15130" fg:w="5"/><text x="54.6197%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="54.3697%" y="885" width="0.0180%" height="15" fill="rgb(207,92,33)" fg:x="15130" fg:w="5"/><text x="54.6197%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="54.3697%" y="869" width="0.0180%" height="15" fill="rgb(218,87,9)" fg:x="15130" fg:w="5"/><text x="54.6197%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.01%)</title><rect x="54.3769%" y="853" width="0.0108%" height="15" fill="rgb(219,47,37)" fg:x="15132" fg:w="3"/><text x="54.6269%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.01%)</title><rect x="54.3769%" y="837" width="0.0108%" height="15" fill="rgb(221,152,34)" fg:x="15132" fg:w="3"/><text x="54.6269%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (29 samples, 0.10%)</title><rect x="54.3697%" y="965" width="0.1042%" height="15" fill="rgb(235,176,21)" fg:x="15130" fg:w="29"/><text x="54.6197%" y="975.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (29 samples, 0.10%)</title><rect x="54.3697%" y="949" width="0.1042%" height="15" fill="rgb(232,212,21)" fg:x="15130" fg:w="29"/><text x="54.6197%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.10%)</title><rect x="54.3697%" y="933" width="0.1042%" height="15" fill="rgb(245,82,39)" fg:x="15130" fg:w="29"/><text x="54.6197%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29 samples, 0.10%)</title><rect x="54.3697%" y="917" width="0.1042%" height="15" fill="rgb(241,52,51)" fg:x="15130" fg:w="29"/><text x="54.6197%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (24 samples, 0.09%)</title><rect x="54.3877%" y="901" width="0.0862%" height="15" fill="rgb(219,91,24)" fg:x="15135" fg:w="24"/><text x="54.6377%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (24 samples, 0.09%)</title><rect x="54.3877%" y="885" width="0.0862%" height="15" fill="rgb(241,142,12)" fg:x="15135" fg:w="24"/><text x="54.6377%" y="895.50"></text></g><g><title>core::hash::Hasher::write_usize (24 samples, 0.09%)</title><rect x="54.3877%" y="869" width="0.0862%" height="15" fill="rgb(230,27,9)" fg:x="15135" fg:w="24"/><text x="54.6377%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.06%)</title><rect x="54.4092%" y="853" width="0.0647%" height="15" fill="rgb(249,181,32)" fg:x="15141" fg:w="18"/><text x="54.6592%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 0.06%)</title><rect x="54.4092%" y="837" width="0.0647%" height="15" fill="rgb(230,107,3)" fg:x="15141" fg:w="18"/><text x="54.6592%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.06%)</title><rect x="54.4128%" y="821" width="0.0611%" height="15" fill="rgb(246,204,14)" fg:x="15142" fg:w="17"/><text x="54.6628%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (5 samples, 0.02%)</title><rect x="54.4775%" y="965" width="0.0180%" height="15" fill="rgb(213,192,47)" fg:x="15160" fg:w="5"/><text x="54.7275%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (5 samples, 0.02%)</title><rect x="54.4775%" y="949" width="0.0180%" height="15" fill="rgb(240,44,36)" fg:x="15160" fg:w="5"/><text x="54.7275%" y="959.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="54.4955%" y="837" width="0.0144%" height="15" fill="rgb(244,209,38)" fg:x="15165" fg:w="4"/><text x="54.7455%" y="847.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="54.4991%" y="821" width="0.0108%" height="15" fill="rgb(219,34,37)" fg:x="15166" fg:w="3"/><text x="54.7491%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (48 samples, 0.17%)</title><rect x="54.3410%" y="1077" width="0.1725%" height="15" fill="rgb(210,28,6)" fg:x="15122" fg:w="48"/><text x="54.5910%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (48 samples, 0.17%)</title><rect x="54.3410%" y="1061" width="0.1725%" height="15" fill="rgb(244,110,52)" fg:x="15122" fg:w="48"/><text x="54.5910%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (47 samples, 0.17%)</title><rect x="54.3445%" y="1045" width="0.1689%" height="15" fill="rgb(254,124,47)" fg:x="15123" fg:w="47"/><text x="54.5945%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (47 samples, 0.17%)</title><rect x="54.3445%" y="1029" width="0.1689%" height="15" fill="rgb(254,110,13)" fg:x="15123" fg:w="47"/><text x="54.5945%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (47 samples, 0.17%)</title><rect x="54.3445%" y="1013" width="0.1689%" height="15" fill="rgb(252,57,21)" fg:x="15123" fg:w="47"/><text x="54.5945%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (47 samples, 0.17%)</title><rect x="54.3445%" y="997" width="0.1689%" height="15" fill="rgb(242,60,45)" fg:x="15123" fg:w="47"/><text x="54.5945%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (47 samples, 0.17%)</title><rect x="54.3445%" y="981" width="0.1689%" height="15" fill="rgb(234,49,30)" fg:x="15123" fg:w="47"/><text x="54.5945%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (5 samples, 0.02%)</title><rect x="54.4955%" y="965" width="0.0180%" height="15" fill="rgb(218,98,6)" fg:x="15165" fg:w="5"/><text x="54.7455%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (5 samples, 0.02%)</title><rect x="54.4955%" y="949" width="0.0180%" height="15" fill="rgb(220,174,29)" fg:x="15165" fg:w="5"/><text x="54.7455%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (5 samples, 0.02%)</title><rect x="54.4955%" y="933" width="0.0180%" height="15" fill="rgb(236,163,23)" fg:x="15165" fg:w="5"/><text x="54.7455%" y="943.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (5 samples, 0.02%)</title><rect x="54.4955%" y="917" width="0.0180%" height="15" fill="rgb(242,114,45)" fg:x="15165" fg:w="5"/><text x="54.7455%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="54.4955%" y="901" width="0.0180%" height="15" fill="rgb(232,10,53)" fg:x="15165" fg:w="5"/><text x="54.7455%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="54.4955%" y="885" width="0.0180%" height="15" fill="rgb(245,108,29)" fg:x="15165" fg:w="5"/><text x="54.7455%" y="895.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="54.4955%" y="869" width="0.0180%" height="15" fill="rgb(240,89,53)" fg:x="15165" fg:w="5"/><text x="54.7455%" y="879.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="54.4955%" y="853" width="0.0180%" height="15" fill="rgb(226,60,45)" fg:x="15165" fg:w="5"/><text x="54.7455%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="54.5350%" y="917" width="0.0144%" height="15" fill="rgb(230,41,44)" fg:x="15176" fg:w="4"/><text x="54.7850%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.05%)</title><rect x="54.5170%" y="981" width="0.0467%" height="15" fill="rgb(230,26,20)" fg:x="15171" fg:w="13"/><text x="54.7670%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.05%)</title><rect x="54.5170%" y="965" width="0.0467%" height="15" fill="rgb(237,170,32)" fg:x="15171" fg:w="13"/><text x="54.7670%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.05%)</title><rect x="54.5170%" y="949" width="0.0467%" height="15" fill="rgb(212,35,42)" fg:x="15171" fg:w="13"/><text x="54.7670%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.03%)</title><rect x="54.5314%" y="933" width="0.0323%" height="15" fill="rgb(227,31,34)" fg:x="15175" fg:w="9"/><text x="54.7814%" y="943.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.01%)</title><rect x="54.5494%" y="917" width="0.0144%" height="15" fill="rgb(216,19,18)" fg:x="15180" fg:w="4"/><text x="54.7994%" y="927.50"></text></g><g><title>zenoh::net::routing::face::FaceState::get_next_local_id (33 samples, 0.12%)</title><rect x="54.5134%" y="1077" width="0.1186%" height="15" fill="rgb(211,133,42)" fg:x="15170" fg:w="33"/><text x="54.7634%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 0.12%)</title><rect x="54.5134%" y="1061" width="0.1186%" height="15" fill="rgb(244,66,13)" fg:x="15170" fg:w="33"/><text x="54.7634%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (33 samples, 0.12%)</title><rect x="54.5134%" y="1045" width="0.1186%" height="15" fill="rgb(218,185,50)" fg:x="15170" fg:w="33"/><text x="54.7634%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 0.12%)</title><rect x="54.5134%" y="1029" width="0.1186%" height="15" fill="rgb(219,149,13)" fg:x="15170" fg:w="33"/><text x="54.7634%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (33 samples, 0.12%)</title><rect x="54.5134%" y="1013" width="0.1186%" height="15" fill="rgb(221,125,0)" fg:x="15170" fg:w="33"/><text x="54.7634%" y="1023.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33 samples, 0.12%)</title><rect x="54.5134%" y="997" width="0.1186%" height="15" fill="rgb(247,126,27)" fg:x="15170" fg:w="33"/><text x="54.7634%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.07%)</title><rect x="54.5637%" y="981" width="0.0683%" height="15" fill="rgb(250,138,30)" fg:x="15184" fg:w="19"/><text x="54.8137%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (19 samples, 0.07%)</title><rect x="54.5637%" y="965" width="0.0683%" height="15" fill="rgb(230,151,9)" fg:x="15184" fg:w="19"/><text x="54.8137%" y="975.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.07%)</title><rect x="54.5637%" y="949" width="0.0683%" height="15" fill="rgb(233,80,38)" fg:x="15184" fg:w="19"/><text x="54.8137%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.07%)</title><rect x="54.5637%" y="933" width="0.0683%" height="15" fill="rgb(232,68,43)" fg:x="15184" fg:w="19"/><text x="54.8137%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.07%)</title><rect x="54.5637%" y="917" width="0.0683%" height="15" fill="rgb(254,5,50)" fg:x="15184" fg:w="19"/><text x="54.8137%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.07%)</title><rect x="54.5637%" y="901" width="0.0683%" height="15" fill="rgb(225,45,5)" fg:x="15184" fg:w="19"/><text x="54.8137%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.01%)</title><rect x="54.6212%" y="885" width="0.0108%" height="15" fill="rgb(239,22,3)" fg:x="15200" fg:w="3"/><text x="54.8712%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (4 samples, 0.01%)</title><rect x="54.6320%" y="1061" width="0.0144%" height="15" fill="rgb(243,129,0)" fg:x="15203" fg:w="4"/><text x="54.8820%" y="1071.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (4 samples, 0.01%)</title><rect x="54.6320%" y="1045" width="0.0144%" height="15" fill="rgb(223,164,0)" fg:x="15203" fg:w="4"/><text x="54.8820%" y="1055.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (4 samples, 0.01%)</title><rect x="54.6320%" y="1029" width="0.0144%" height="15" fill="rgb(221,46,29)" fg:x="15203" fg:w="4"/><text x="54.8820%" y="1039.50"></text></g><g><title>alloc::str::join_generic_copy (4 samples, 0.01%)</title><rect x="54.6320%" y="1013" width="0.0144%" height="15" fill="rgb(205,97,47)" fg:x="15203" fg:w="4"/><text x="54.8820%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (5 samples, 0.02%)</title><rect x="54.6608%" y="1045" width="0.0180%" height="15" fill="rgb(249,14,8)" fg:x="15211" fg:w="5"/><text x="54.9108%" y="1055.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (5 samples, 0.02%)</title><rect x="54.6608%" y="1029" width="0.0180%" height="15" fill="rgb(216,77,3)" fg:x="15211" fg:w="5"/><text x="54.9108%" y="1039.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (5 samples, 0.02%)</title><rect x="54.6608%" y="1013" width="0.0180%" height="15" fill="rgb(206,168,54)" fg:x="15211" fg:w="5"/><text x="54.9108%" y="1023.50"></text></g><g><title>alloc::str::join_generic_copy (5 samples, 0.02%)</title><rect x="54.6608%" y="997" width="0.0180%" height="15" fill="rgb(236,3,41)" fg:x="15211" fg:w="5"/><text x="54.9108%" y="1007.50"></text></g><g><title>zenoh::net::routing::queries::propagate_simple_queryable (782 samples, 2.81%)</title><rect x="51.8830%" y="1109" width="2.8101%" height="15" fill="rgb(231,132,24)" fg:x="14438" fg:w="782"/><text x="52.1330%" y="1119.50">ze..</text></g><g><title>zenoh::net::routing::resource::Resource::decl_key (609 samples, 2.19%)</title><rect x="52.5047%" y="1093" width="2.1884%" height="15" fill="rgb(227,221,40)" fg:x="14611" fg:w="609"/><text x="52.7547%" y="1103.50">z..</text></g><g><title>zenoh::net::routing::resource::Resource::expr (17 samples, 0.06%)</title><rect x="54.6320%" y="1077" width="0.0611%" height="15" fill="rgb(233,151,11)" fg:x="15203" fg:w="17"/><text x="54.8820%" y="1087.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (11 samples, 0.04%)</title><rect x="54.6536%" y="1061" width="0.0395%" height="15" fill="rgb(247,81,35)" fg:x="15209" fg:w="11"/><text x="54.9036%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (4 samples, 0.01%)</title><rect x="54.6787%" y="1045" width="0.0144%" height="15" fill="rgb(243,128,48)" fg:x="15216" fg:w="4"/><text x="54.9287%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="54.7075%" y="741" width="0.0144%" height="15" fill="rgb(253,16,10)" fg:x="15224" fg:w="4"/><text x="54.9575%" y="751.50"></text></g><g><title>alloc::str::join_generic_copy (11 samples, 0.04%)</title><rect x="54.6931%" y="757" width="0.0395%" height="15" fill="rgb(228,67,27)" fg:x="15220" fg:w="11"/><text x="54.9431%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (12 samples, 0.04%)</title><rect x="54.6931%" y="805" width="0.0431%" height="15" fill="rgb(231,105,25)" fg:x="15220" fg:w="12"/><text x="54.9431%" y="815.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (12 samples, 0.04%)</title><rect x="54.6931%" y="789" width="0.0431%" height="15" fill="rgb(213,166,47)" fg:x="15220" fg:w="12"/><text x="54.9431%" y="799.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (12 samples, 0.04%)</title><rect x="54.6931%" y="773" width="0.0431%" height="15" fill="rgb(209,27,10)" fg:x="15220" fg:w="12"/><text x="54.9431%" y="783.50"></text></g><g><title>zenoh::net::routing::queries::register_client_queryable (13 samples, 0.05%)</title><rect x="54.6931%" y="1109" width="0.0467%" height="15" fill="rgb(241,44,30)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="1119.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (13 samples, 0.05%)</title><rect x="54.6931%" y="1093" width="0.0467%" height="15" fill="rgb(223,216,15)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="1103.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (13 samples, 0.05%)</title><rect x="54.6931%" y="1077" width="0.0467%" height="15" fill="rgb(227,14,7)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.05%)</title><rect x="54.6931%" y="1061" width="0.0467%" height="15" fill="rgb(237,14,5)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 0.05%)</title><rect x="54.6931%" y="1045" width="0.0467%" height="15" fill="rgb(232,14,36)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.05%)</title><rect x="54.6931%" y="1029" width="0.0467%" height="15" fill="rgb(234,0,38)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.05%)</title><rect x="54.6931%" y="1013" width="0.0467%" height="15" fill="rgb(207,170,14)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (13 samples, 0.05%)</title><rect x="54.6931%" y="997" width="0.0467%" height="15" fill="rgb(252,45,13)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (13 samples, 0.05%)</title><rect x="54.6931%" y="981" width="0.0467%" height="15" fill="rgb(213,142,7)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (13 samples, 0.05%)</title><rect x="54.6931%" y="965" width="0.0467%" height="15" fill="rgb(216,157,23)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="975.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (13 samples, 0.05%)</title><rect x="54.6931%" y="949" width="0.0467%" height="15" fill="rgb(212,145,33)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.05%)</title><rect x="54.6931%" y="933" width="0.0467%" height="15" fill="rgb(233,26,13)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.05%)</title><rect x="54.6931%" y="917" width="0.0467%" height="15" fill="rgb(219,196,19)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.05%)</title><rect x="54.6931%" y="901" width="0.0467%" height="15" fill="rgb(246,56,21)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (13 samples, 0.05%)</title><rect x="54.6931%" y="885" width="0.0467%" height="15" fill="rgb(222,28,53)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::hash::Hash&gt;::hash (13 samples, 0.05%)</title><rect x="54.6931%" y="869" width="0.0467%" height="15" fill="rgb(224,5,27)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="879.50"></text></g><g><title>&lt;zenoh::net::routing::resource::Resource as core::hash::Hash&gt;::hash (13 samples, 0.05%)</title><rect x="54.6931%" y="853" width="0.0467%" height="15" fill="rgb(220,153,33)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="863.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (13 samples, 0.05%)</title><rect x="54.6931%" y="837" width="0.0467%" height="15" fill="rgb(226,58,19)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="847.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (13 samples, 0.05%)</title><rect x="54.6931%" y="821" width="0.0467%" height="15" fill="rgb(239,112,23)" fg:x="15220" fg:w="13"/><text x="54.9431%" y="831.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (4 samples, 0.01%)</title><rect x="54.7398%" y="1109" width="0.0144%" height="15" fill="rgb(251,213,20)" fg:x="15233" fg:w="4"/><text x="54.9898%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.01%)</title><rect x="54.7542%" y="1029" width="0.0108%" height="15" fill="rgb(215,181,21)" fg:x="15237" fg:w="3"/><text x="55.0042%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.01%)</title><rect x="54.7542%" y="1013" width="0.0108%" height="15" fill="rgb(240,8,35)" fg:x="15237" fg:w="3"/><text x="55.0042%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.01%)</title><rect x="54.7542%" y="997" width="0.0108%" height="15" fill="rgb(232,203,3)" fg:x="15237" fg:w="3"/><text x="55.0042%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.01%)</title><rect x="54.7542%" y="981" width="0.0108%" height="15" fill="rgb(214,202,43)" fg:x="15237" fg:w="3"/><text x="55.0042%" y="991.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="54.7542%" y="965" width="0.0108%" height="15" fill="rgb(254,35,11)" fg:x="15237" fg:w="3"/><text x="55.0042%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (6 samples, 0.02%)</title><rect x="54.7650%" y="1029" width="0.0216%" height="15" fill="rgb(239,173,13)" fg:x="15240" fg:w="6"/><text x="55.0150%" y="1039.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (3 samples, 0.01%)</title><rect x="54.7758%" y="1013" width="0.0108%" height="15" fill="rgb(220,141,0)" fg:x="15243" fg:w="3"/><text x="55.0258%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (3 samples, 0.01%)</title><rect x="54.7758%" y="997" width="0.0108%" height="15" fill="rgb(210,98,12)" fg:x="15243" fg:w="3"/><text x="55.0258%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (3 samples, 0.01%)</title><rect x="54.7758%" y="981" width="0.0108%" height="15" fill="rgb(254,153,22)" fg:x="15243" fg:w="3"/><text x="55.0258%" y="991.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (888 samples, 3.19%)</title><rect x="51.6063%" y="1141" width="3.1910%" height="15" fill="rgb(247,223,17)" fg:x="14361" fg:w="888"/><text x="51.8563%" y="1151.50">&lt;ze..</text></g><g><title>zenoh::net::routing::queries::declare_client_queryable (888 samples, 3.19%)</title><rect x="51.6063%" y="1125" width="3.1910%" height="15" fill="rgb(246,56,7)" fg:x="14361" fg:w="888"/><text x="51.8563%" y="1135.50">zen..</text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (12 samples, 0.04%)</title><rect x="54.7542%" y="1109" width="0.0431%" height="15" fill="rgb(240,226,12)" fg:x="15237" fg:w="12"/><text x="55.0042%" y="1119.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches (12 samples, 0.04%)</title><rect x="54.7542%" y="1093" width="0.0431%" height="15" fill="rgb(205,87,46)" fg:x="15237" fg:w="12"/><text x="55.0042%" y="1103.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (12 samples, 0.04%)</title><rect x="54.7542%" y="1077" width="0.0431%" height="15" fill="rgb(245,214,51)" fg:x="15237" fg:w="12"/><text x="55.0042%" y="1087.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (12 samples, 0.04%)</title><rect x="54.7542%" y="1061" width="0.0431%" height="15" fill="rgb(223,172,33)" fg:x="15237" fg:w="12"/><text x="55.0042%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (12 samples, 0.04%)</title><rect x="54.7542%" y="1045" width="0.0431%" height="15" fill="rgb(227,203,34)" fg:x="15237" fg:w="12"/><text x="55.0042%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (3 samples, 0.01%)</title><rect x="54.7865%" y="1029" width="0.0108%" height="15" fill="rgb(248,143,44)" fg:x="15246" fg:w="3"/><text x="55.0365%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.01%)</title><rect x="54.8045%" y="1093" width="0.0144%" height="15" fill="rgb(226,162,5)" fg:x="15251" fg:w="4"/><text x="55.0545%" y="1103.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.01%)</title><rect x="54.8045%" y="1077" width="0.0144%" height="15" fill="rgb(211,143,1)" fg:x="15251" fg:w="4"/><text x="55.0545%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.01%)</title><rect x="54.8045%" y="1061" width="0.0144%" height="15" fill="rgb(224,96,15)" fg:x="15251" fg:w="4"/><text x="55.0545%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.01%)</title><rect x="54.8045%" y="1045" width="0.0144%" height="15" fill="rgb(222,4,38)" fg:x="15251" fg:w="4"/><text x="55.0545%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="54.8045%" y="1029" width="0.0144%" height="15" fill="rgb(253,228,15)" fg:x="15251" fg:w="4"/><text x="55.0545%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="54.8045%" y="1013" width="0.0144%" height="15" fill="rgb(242,194,12)" fg:x="15251" fg:w="4"/><text x="55.0545%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="54.8045%" y="997" width="0.0144%" height="15" fill="rgb(214,177,31)" fg:x="15251" fg:w="4"/><text x="55.0545%" y="1007.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="54.8620%" y="965" width="0.0144%" height="15" fill="rgb(226,58,51)" fg:x="15267" fg:w="4"/><text x="55.1120%" y="975.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="54.8620%" y="949" width="0.0144%" height="15" fill="rgb(250,119,16)" fg:x="15267" fg:w="4"/><text x="55.1120%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.8656%" y="933" width="0.0108%" height="15" fill="rgb(223,128,53)" fg:x="15268" fg:w="3"/><text x="55.1156%" y="943.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.8656%" y="917" width="0.0108%" height="15" fill="rgb(251,199,15)" fg:x="15268" fg:w="3"/><text x="55.1156%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.8656%" y="901" width="0.0108%" height="15" fill="rgb(235,168,42)" fg:x="15268" fg:w="3"/><text x="55.1156%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.8656%" y="885" width="0.0108%" height="15" fill="rgb(250,210,17)" fg:x="15268" fg:w="3"/><text x="55.1156%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.8656%" y="869" width="0.0108%" height="15" fill="rgb(226,36,41)" fg:x="15268" fg:w="3"/><text x="55.1156%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.8656%" y="853" width="0.0108%" height="15" fill="rgb(225,87,10)" fg:x="15268" fg:w="3"/><text x="55.1156%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="54.8656%" y="837" width="0.0108%" height="15" fill="rgb(228,83,9)" fg:x="15268" fg:w="3"/><text x="55.1156%" y="847.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="54.8512%" y="981" width="0.0287%" height="15" fill="rgb(225,16,36)" fg:x="15264" fg:w="8"/><text x="55.1012%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (19 samples, 0.07%)</title><rect x="54.8189%" y="1093" width="0.0683%" height="15" fill="rgb(242,198,13)" fg:x="15255" fg:w="19"/><text x="55.0689%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.06%)</title><rect x="54.8261%" y="1077" width="0.0611%" height="15" fill="rgb(239,25,51)" fg:x="15257" fg:w="17"/><text x="55.0761%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.06%)</title><rect x="54.8261%" y="1061" width="0.0611%" height="15" fill="rgb(239,28,37)" fg:x="15257" fg:w="17"/><text x="55.0761%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.06%)</title><rect x="54.8261%" y="1045" width="0.0611%" height="15" fill="rgb(234,70,17)" fg:x="15257" fg:w="17"/><text x="55.0761%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.06%)</title><rect x="54.8261%" y="1029" width="0.0611%" height="15" fill="rgb(231,215,53)" fg:x="15257" fg:w="17"/><text x="55.0761%" y="1039.50"></text></g><g><title>malloc (16 samples, 0.06%)</title><rect x="54.8297%" y="1013" width="0.0575%" height="15" fill="rgb(218,140,42)" fg:x="15258" fg:w="16"/><text x="55.0797%" y="1023.50"></text></g><g><title>[libc.so.6] (14 samples, 0.05%)</title><rect x="54.8369%" y="997" width="0.0503%" height="15" fill="rgb(233,227,45)" fg:x="15260" fg:w="14"/><text x="55.0869%" y="1007.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (4 samples, 0.01%)</title><rect x="54.8908%" y="1093" width="0.0144%" height="15" fill="rgb(225,189,21)" fg:x="15275" fg:w="4"/><text x="55.1408%" y="1103.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.01%)</title><rect x="54.8908%" y="1077" width="0.0144%" height="15" fill="rgb(237,176,54)" fg:x="15275" fg:w="4"/><text x="55.1408%" y="1087.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_prefix (4 samples, 0.01%)</title><rect x="54.9051%" y="1093" width="0.0144%" height="15" fill="rgb(215,131,46)" fg:x="15279" fg:w="4"/><text x="55.1551%" y="1103.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::strip_prefix_of (4 samples, 0.01%)</title><rect x="54.9051%" y="1077" width="0.0144%" height="15" fill="rgb(218,95,20)" fg:x="15279" fg:w="4"/><text x="55.1551%" y="1087.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_prefix_of (4 samples, 0.01%)</title><rect x="54.9051%" y="1061" width="0.0144%" height="15" fill="rgb(208,198,12)" fg:x="15279" fg:w="4"/><text x="55.1551%" y="1071.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (4 samples, 0.01%)</title><rect x="54.9051%" y="1045" width="0.0144%" height="15" fill="rgb(239,107,50)" fg:x="15279" fg:w="4"/><text x="55.1551%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (4 samples, 0.01%)</title><rect x="54.9051%" y="1029" width="0.0144%" height="15" fill="rgb(240,217,37)" fg:x="15279" fg:w="4"/><text x="55.1551%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="54.9051%" y="1013" width="0.0144%" height="15" fill="rgb(242,197,49)" fg:x="15279" fg:w="4"/><text x="55.1551%" y="1023.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.01%)</title><rect x="54.9051%" y="997" width="0.0144%" height="15" fill="rgb(219,171,17)" fg:x="15279" fg:w="4"/><text x="55.1551%" y="1007.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.01%)</title><rect x="54.9051%" y="981" width="0.0144%" height="15" fill="rgb(209,81,40)" fg:x="15279" fg:w="4"/><text x="55.1551%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="54.9303%" y="1013" width="0.0108%" height="15" fill="rgb(237,156,30)" fg:x="15286" fg:w="3"/><text x="55.1803%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="54.9303%" y="997" width="0.0108%" height="15" fill="rgb(212,127,16)" fg:x="15286" fg:w="3"/><text x="55.1803%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3 samples, 0.01%)</title><rect x="54.9303%" y="981" width="0.0108%" height="15" fill="rgb(226,66,32)" fg:x="15286" fg:w="3"/><text x="55.1803%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.01%)</title><rect x="54.9303%" y="965" width="0.0108%" height="15" fill="rgb(245,22,46)" fg:x="15286" fg:w="3"/><text x="55.1803%" y="975.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.01%)</title><rect x="54.9303%" y="949" width="0.0108%" height="15" fill="rgb(210,112,21)" fg:x="15286" fg:w="3"/><text x="55.1803%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="54.9303%" y="1045" width="0.0180%" height="15" fill="rgb(207,118,39)" fg:x="15286" fg:w="5"/><text x="55.1803%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="54.9303%" y="1029" width="0.0180%" height="15" fill="rgb(205,206,35)" fg:x="15286" fg:w="5"/><text x="55.1803%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.04%)</title><rect x="54.9483%" y="997" width="0.0431%" height="15" fill="rgb(222,120,2)" fg:x="15291" fg:w="12"/><text x="55.1983%" y="1007.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.04%)</title><rect x="54.9483%" y="981" width="0.0431%" height="15" fill="rgb(205,38,18)" fg:x="15291" fg:w="12"/><text x="55.1983%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (12 samples, 0.04%)</title><rect x="54.9483%" y="965" width="0.0431%" height="15" fill="rgb(226,61,2)" fg:x="15291" fg:w="12"/><text x="55.1983%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.04%)</title><rect x="54.9483%" y="949" width="0.0431%" height="15" fill="rgb(242,161,23)" fg:x="15291" fg:w="12"/><text x="55.1983%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.04%)</title><rect x="54.9483%" y="933" width="0.0431%" height="15" fill="rgb(213,13,52)" fg:x="15291" fg:w="12"/><text x="55.1983%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.04%)</title><rect x="54.9483%" y="917" width="0.0431%" height="15" fill="rgb(246,209,47)" fg:x="15291" fg:w="12"/><text x="55.1983%" y="927.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="54.9518%" y="901" width="0.0395%" height="15" fill="rgb(214,41,3)" fg:x="15292" fg:w="11"/><text x="55.2018%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (11 samples, 0.04%)</title><rect x="54.9914%" y="997" width="0.0395%" height="15" fill="rgb(236,119,38)" fg:x="15303" fg:w="11"/><text x="55.2414%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (11 samples, 0.04%)</title><rect x="54.9914%" y="981" width="0.0395%" height="15" fill="rgb(218,50,11)" fg:x="15303" fg:w="11"/><text x="55.2414%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.04%)</title><rect x="54.9914%" y="965" width="0.0395%" height="15" fill="rgb(228,38,11)" fg:x="15303" fg:w="11"/><text x="55.2414%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (33 samples, 0.12%)</title><rect x="54.9195%" y="1093" width="0.1186%" height="15" fill="rgb(212,13,9)" fg:x="15283" fg:w="33"/><text x="55.1695%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (33 samples, 0.12%)</title><rect x="54.9195%" y="1077" width="0.1186%" height="15" fill="rgb(208,211,9)" fg:x="15283" fg:w="33"/><text x="55.1695%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (33 samples, 0.12%)</title><rect x="54.9195%" y="1061" width="0.1186%" height="15" fill="rgb(239,39,32)" fg:x="15283" fg:w="33"/><text x="55.1695%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (25 samples, 0.09%)</title><rect x="54.9483%" y="1045" width="0.0898%" height="15" fill="rgb(254,179,26)" fg:x="15291" fg:w="25"/><text x="55.1983%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (25 samples, 0.09%)</title><rect x="54.9483%" y="1029" width="0.0898%" height="15" fill="rgb(249,165,28)" fg:x="15291" fg:w="25"/><text x="55.1983%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (25 samples, 0.09%)</title><rect x="54.9483%" y="1013" width="0.0898%" height="15" fill="rgb(225,59,50)" fg:x="15291" fg:w="25"/><text x="55.1983%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.01%)</title><rect x="55.0632%" y="1029" width="0.0108%" height="15" fill="rgb(209,122,5)" fg:x="15323" fg:w="3"/><text x="55.3132%" y="1039.50"></text></g><g><title>hashbrown::map::make_insert_hash (11 samples, 0.04%)</title><rect x="55.0489%" y="1061" width="0.0395%" height="15" fill="rgb(214,65,34)" fg:x="15319" fg:w="11"/><text x="55.2989%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.04%)</title><rect x="55.0489%" y="1045" width="0.0395%" height="15" fill="rgb(249,183,32)" fg:x="15319" fg:w="11"/><text x="55.2989%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="55.0740%" y="1029" width="0.0144%" height="15" fill="rgb(218,122,24)" fg:x="15326" fg:w="4"/><text x="55.3240%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="55.0740%" y="1013" width="0.0144%" height="15" fill="rgb(224,109,18)" fg:x="15326" fg:w="4"/><text x="55.3240%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="55.0740%" y="997" width="0.0144%" height="15" fill="rgb(210,68,50)" fg:x="15326" fg:w="4"/><text x="55.3240%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="55.0740%" y="981" width="0.0144%" height="15" fill="rgb(212,184,34)" fg:x="15326" fg:w="4"/><text x="55.3240%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="55.0740%" y="965" width="0.0144%" height="15" fill="rgb(238,105,48)" fg:x="15326" fg:w="4"/><text x="55.3240%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="55.0740%" y="949" width="0.0144%" height="15" fill="rgb(222,134,54)" fg:x="15326" fg:w="4"/><text x="55.3240%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="55.1028%" y="981" width="0.0144%" height="15" fill="rgb(246,24,43)" fg:x="15334" fg:w="4"/><text x="55.3528%" y="991.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="55.1028%" y="965" width="0.0144%" height="15" fill="rgb(227,169,22)" fg:x="15334" fg:w="4"/><text x="55.3528%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (4 samples, 0.01%)</title><rect x="55.1028%" y="949" width="0.0144%" height="15" fill="rgb(253,152,4)" fg:x="15334" fg:w="4"/><text x="55.3528%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (4 samples, 0.01%)</title><rect x="55.1028%" y="933" width="0.0144%" height="15" fill="rgb(219,158,36)" fg:x="15334" fg:w="4"/><text x="55.3528%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="55.1028%" y="917" width="0.0144%" height="15" fill="rgb(251,128,40)" fg:x="15334" fg:w="4"/><text x="55.3528%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="55.1028%" y="901" width="0.0144%" height="15" fill="rgb(254,101,39)" fg:x="15334" fg:w="4"/><text x="55.3528%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (8 samples, 0.03%)</title><rect x="55.1207%" y="917" width="0.0287%" height="15" fill="rgb(221,168,40)" fg:x="15339" fg:w="8"/><text x="55.3707%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (8 samples, 0.03%)</title><rect x="55.1207%" y="901" width="0.0287%" height="15" fill="rgb(221,14,27)" fg:x="15339" fg:w="8"/><text x="55.3707%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (8 samples, 0.03%)</title><rect x="55.1207%" y="885" width="0.0287%" height="15" fill="rgb(207,36,43)" fg:x="15339" fg:w="8"/><text x="55.3707%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.01%)</title><rect x="55.1351%" y="869" width="0.0144%" height="15" fill="rgb(240,172,53)" fg:x="15343" fg:w="4"/><text x="55.3851%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (63 samples, 0.23%)</title><rect x="55.1171%" y="981" width="0.2264%" height="15" fill="rgb(241,138,43)" fg:x="15338" fg:w="63"/><text x="55.3671%" y="991.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (63 samples, 0.23%)</title><rect x="55.1171%" y="965" width="0.2264%" height="15" fill="rgb(227,78,19)" fg:x="15338" fg:w="63"/><text x="55.3671%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (63 samples, 0.23%)</title><rect x="55.1171%" y="949" width="0.2264%" height="15" fill="rgb(215,127,44)" fg:x="15338" fg:w="63"/><text x="55.3671%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (63 samples, 0.23%)</title><rect x="55.1171%" y="933" width="0.2264%" height="15" fill="rgb(227,13,10)" fg:x="15338" fg:w="63"/><text x="55.3671%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (52 samples, 0.19%)</title><rect x="55.1567%" y="917" width="0.1869%" height="15" fill="rgb(249,177,6)" fg:x="15349" fg:w="52"/><text x="55.4067%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (52 samples, 0.19%)</title><rect x="55.1567%" y="901" width="0.1869%" height="15" fill="rgb(215,154,26)" fg:x="15349" fg:w="52"/><text x="55.4067%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (52 samples, 0.19%)</title><rect x="55.1567%" y="885" width="0.1869%" height="15" fill="rgb(250,168,20)" fg:x="15349" fg:w="52"/><text x="55.4067%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (52 samples, 0.19%)</title><rect x="55.1567%" y="869" width="0.1869%" height="15" fill="rgb(222,53,38)" fg:x="15349" fg:w="52"/><text x="55.4067%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (52 samples, 0.19%)</title><rect x="55.1567%" y="853" width="0.1869%" height="15" fill="rgb(245,154,5)" fg:x="15349" fg:w="52"/><text x="55.4067%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (52 samples, 0.19%)</title><rect x="55.1567%" y="837" width="0.1869%" height="15" fill="rgb(214,89,50)" fg:x="15349" fg:w="52"/><text x="55.4067%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.19%)</title><rect x="55.1567%" y="821" width="0.1869%" height="15" fill="rgb(232,73,14)" fg:x="15349" fg:w="52"/><text x="55.4067%" y="831.50"></text></g><g><title>core::hash::sip::u8to64_le (51 samples, 0.18%)</title><rect x="55.1603%" y="805" width="0.1833%" height="15" fill="rgb(230,101,20)" fg:x="15350" fg:w="51"/><text x="55.4103%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.04%)</title><rect x="55.3076%" y="789" width="0.0359%" height="15" fill="rgb(208,56,28)" fg:x="15391" fg:w="10"/><text x="55.5576%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (6 samples, 0.02%)</title><rect x="55.3471%" y="981" width="0.0216%" height="15" fill="rgb(247,205,22)" fg:x="15402" fg:w="6"/><text x="55.5971%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.02%)</title><rect x="55.3471%" y="965" width="0.0216%" height="15" fill="rgb(252,109,51)" fg:x="15402" fg:w="6"/><text x="55.5971%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.01%)</title><rect x="55.3543%" y="949" width="0.0144%" height="15" fill="rgb(220,40,24)" fg:x="15404" fg:w="4"/><text x="55.6043%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="55.3543%" y="933" width="0.0144%" height="15" fill="rgb(251,108,7)" fg:x="15404" fg:w="4"/><text x="55.6043%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (83 samples, 0.30%)</title><rect x="55.0956%" y="1045" width="0.2983%" height="15" fill="rgb(238,102,51)" fg:x="15332" fg:w="83"/><text x="55.3456%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (83 samples, 0.30%)</title><rect x="55.0956%" y="1029" width="0.2983%" height="15" fill="rgb(219,149,34)" fg:x="15332" fg:w="83"/><text x="55.3456%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (83 samples, 0.30%)</title><rect x="55.0956%" y="1013" width="0.2983%" height="15" fill="rgb(239,70,0)" fg:x="15332" fg:w="83"/><text x="55.3456%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (82 samples, 0.29%)</title><rect x="55.0992%" y="997" width="0.2947%" height="15" fill="rgb(246,214,23)" fg:x="15333" fg:w="82"/><text x="55.3492%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (7 samples, 0.03%)</title><rect x="55.3687%" y="981" width="0.0252%" height="15" fill="rgb(239,221,51)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (7 samples, 0.03%)</title><rect x="55.3687%" y="965" width="0.0252%" height="15" fill="rgb(254,62,14)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (7 samples, 0.03%)</title><rect x="55.3687%" y="949" width="0.0252%" height="15" fill="rgb(253,57,33)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="959.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (7 samples, 0.03%)</title><rect x="55.3687%" y="933" width="0.0252%" height="15" fill="rgb(229,34,6)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="55.3687%" y="917" width="0.0252%" height="15" fill="rgb(235,191,23)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="55.3687%" y="901" width="0.0252%" height="15" fill="rgb(217,207,27)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="911.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="55.3687%" y="885" width="0.0252%" height="15" fill="rgb(232,41,44)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="895.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="55.3687%" y="869" width="0.0252%" height="15" fill="rgb(221,188,19)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="879.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="55.3687%" y="853" width="0.0252%" height="15" fill="rgb(245,180,45)" fg:x="15408" fg:w="7"/><text x="55.6187%" y="863.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="55.3795%" y="837" width="0.0144%" height="15" fill="rgb(250,220,42)" fg:x="15411" fg:w="4"/><text x="55.6295%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.3831%" y="821" width="0.0108%" height="15" fill="rgb(234,16,34)" fg:x="15412" fg:w="3"/><text x="55.6331%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.3831%" y="805" width="0.0108%" height="15" fill="rgb(233,217,23)" fg:x="15412" fg:w="3"/><text x="55.6331%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.3831%" y="789" width="0.0108%" height="15" fill="rgb(209,22,46)" fg:x="15412" fg:w="3"/><text x="55.6331%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.3831%" y="773" width="0.0108%" height="15" fill="rgb(213,101,18)" fg:x="15412" fg:w="3"/><text x="55.6331%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.01%)</title><rect x="55.3938%" y="1045" width="0.0108%" height="15" fill="rgb(215,179,52)" fg:x="15415" fg:w="3"/><text x="55.6438%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (103 samples, 0.37%)</title><rect x="55.0381%" y="1093" width="0.3701%" height="15" fill="rgb(223,50,25)" fg:x="15316" fg:w="103"/><text x="55.2881%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (102 samples, 0.37%)</title><rect x="55.0417%" y="1077" width="0.3665%" height="15" fill="rgb(224,51,44)" fg:x="15317" fg:w="102"/><text x="55.2917%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (87 samples, 0.31%)</title><rect x="55.0956%" y="1061" width="0.3126%" height="15" fill="rgb(224,13,54)" fg:x="15332" fg:w="87"/><text x="55.3456%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="55.4082%" y="1077" width="0.0108%" height="15" fill="rgb(219,58,47)" fg:x="15419" fg:w="3"/><text x="55.6582%" y="1087.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="55.4082%" y="1061" width="0.0108%" height="15" fill="rgb(246,124,34)" fg:x="15419" fg:w="3"/><text x="55.6582%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (7 samples, 0.03%)</title><rect x="55.4082%" y="1093" width="0.0252%" height="15" fill="rgb(245,109,25)" fg:x="15419" fg:w="7"/><text x="55.6582%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="55.4442%" y="965" width="0.0180%" height="15" fill="rgb(235,48,23)" fg:x="15429" fg:w="5"/><text x="55.6942%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="55.4442%" y="949" width="0.0180%" height="15" fill="rgb(229,203,36)" fg:x="15429" fg:w="5"/><text x="55.6942%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="55.4442%" y="933" width="0.0180%" height="15" fill="rgb(234,180,9)" fg:x="15429" fg:w="5"/><text x="55.6942%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="55.4442%" y="917" width="0.0180%" height="15" fill="rgb(228,98,45)" fg:x="15429" fg:w="5"/><text x="55.6942%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="55.4442%" y="901" width="0.0180%" height="15" fill="rgb(240,24,36)" fg:x="15429" fg:w="5"/><text x="55.6942%" y="911.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="55.4442%" y="885" width="0.0180%" height="15" fill="rgb(227,154,19)" fg:x="15429" fg:w="5"/><text x="55.6942%" y="895.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="55.4513%" y="869" width="0.0108%" height="15" fill="rgb(231,2,48)" fg:x="15431" fg:w="3"/><text x="55.7013%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (7 samples, 0.03%)</title><rect x="55.4442%" y="1077" width="0.0252%" height="15" fill="rgb(219,216,0)" fg:x="15429" fg:w="7"/><text x="55.6942%" y="1087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (7 samples, 0.03%)</title><rect x="55.4442%" y="1061" width="0.0252%" height="15" fill="rgb(251,88,0)" fg:x="15429" fg:w="7"/><text x="55.6942%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (7 samples, 0.03%)</title><rect x="55.4442%" y="1045" width="0.0252%" height="15" fill="rgb(242,45,45)" fg:x="15429" fg:w="7"/><text x="55.6942%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.03%)</title><rect x="55.4442%" y="1029" width="0.0252%" height="15" fill="rgb(218,149,45)" fg:x="15429" fg:w="7"/><text x="55.6942%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.03%)</title><rect x="55.4442%" y="1013" width="0.0252%" height="15" fill="rgb(247,194,10)" fg:x="15429" fg:w="7"/><text x="55.6942%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.03%)</title><rect x="55.4442%" y="997" width="0.0252%" height="15" fill="rgb(234,33,37)" fg:x="15429" fg:w="7"/><text x="55.6942%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.03%)</title><rect x="55.4442%" y="981" width="0.0252%" height="15" fill="rgb(218,61,13)" fg:x="15429" fg:w="7"/><text x="55.6942%" y="991.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="55.4765%" y="1077" width="0.0144%" height="15" fill="rgb(210,80,52)" fg:x="15438" fg:w="4"/><text x="55.7265%" y="1087.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (3 samples, 0.01%)</title><rect x="55.4909%" y="981" width="0.0108%" height="15" fill="rgb(218,203,27)" fg:x="15442" fg:w="3"/><text x="55.7409%" y="991.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.01%)</title><rect x="55.4909%" y="965" width="0.0108%" height="15" fill="rgb(209,126,33)" fg:x="15442" fg:w="3"/><text x="55.7409%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (196 samples, 0.70%)</title><rect x="54.8009%" y="1109" width="0.7043%" height="15" fill="rgb(234,173,41)" fg:x="15250" fg:w="196"/><text x="55.0509%" y="1119.50"></text></g><g><title>zenoh::net::routing::resource::Resource::new (20 samples, 0.07%)</title><rect x="55.4334%" y="1093" width="0.0719%" height="15" fill="rgb(228,166,9)" fg:x="15426" fg:w="20"/><text x="55.6834%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (4 samples, 0.01%)</title><rect x="55.4909%" y="1077" width="0.0144%" height="15" fill="rgb(208,124,43)" fg:x="15442" fg:w="4"/><text x="55.7409%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="55.4909%" y="1061" width="0.0144%" height="15" fill="rgb(212,154,38)" fg:x="15442" fg:w="4"/><text x="55.7409%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="55.4909%" y="1045" width="0.0144%" height="15" fill="rgb(246,179,35)" fg:x="15442" fg:w="4"/><text x="55.7409%" y="1055.50"></text></g><g><title>std::collections::hash::map::RandomState::new (4 samples, 0.01%)</title><rect x="55.4909%" y="1029" width="0.0144%" height="15" fill="rgb(251,3,50)" fg:x="15442" fg:w="4"/><text x="55.7409%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="55.4909%" y="1013" width="0.0144%" height="15" fill="rgb(219,96,8)" fg:x="15442" fg:w="4"/><text x="55.7409%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="55.4909%" y="997" width="0.0144%" height="15" fill="rgb(251,216,33)" fg:x="15442" fg:w="4"/><text x="55.7409%" y="1007.50"></text></g><g><title>alloc::str::join_generic_copy (8 samples, 0.03%)</title><rect x="55.5088%" y="965" width="0.0287%" height="15" fill="rgb(243,145,29)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (8 samples, 0.03%)</title><rect x="55.5088%" y="949" width="0.0287%" height="15" fill="rgb(210,75,20)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="55.5088%" y="933" width="0.0287%" height="15" fill="rgb(235,56,8)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.03%)</title><rect x="55.5088%" y="917" width="0.0287%" height="15" fill="rgb(226,175,49)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.03%)</title><rect x="55.5088%" y="901" width="0.0287%" height="15" fill="rgb(242,204,23)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.03%)</title><rect x="55.5088%" y="885" width="0.0287%" height="15" fill="rgb(225,104,24)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="55.5088%" y="869" width="0.0287%" height="15" fill="rgb(253,34,1)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="879.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="55.5088%" y="853" width="0.0287%" height="15" fill="rgb(233,199,23)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="863.50"></text></g><g><title>malloc (8 samples, 0.03%)</title><rect x="55.5088%" y="837" width="0.0287%" height="15" fill="rgb(247,7,51)" fg:x="15447" fg:w="8"/><text x="55.7588%" y="847.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="55.5196%" y="821" width="0.0180%" height="15" fill="rgb(214,146,12)" fg:x="15450" fg:w="5"/><text x="55.7696%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (9 samples, 0.03%)</title><rect x="55.5088%" y="1013" width="0.0323%" height="15" fill="rgb(234,181,43)" fg:x="15447" fg:w="9"/><text x="55.7588%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (9 samples, 0.03%)</title><rect x="55.5088%" y="997" width="0.0323%" height="15" fill="rgb(239,148,6)" fg:x="15447" fg:w="9"/><text x="55.7588%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (9 samples, 0.03%)</title><rect x="55.5088%" y="981" width="0.0323%" height="15" fill="rgb(206,151,17)" fg:x="15447" fg:w="9"/><text x="55.7588%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.01%)</title><rect x="55.5484%" y="933" width="0.0108%" height="15" fill="rgb(213,215,10)" fg:x="15458" fg:w="3"/><text x="55.7984%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="55.5484%" y="917" width="0.0108%" height="15" fill="rgb(215,220,44)" fg:x="15458" fg:w="3"/><text x="55.7984%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="55.5484%" y="901" width="0.0108%" height="15" fill="rgb(245,205,37)" fg:x="15458" fg:w="3"/><text x="55.7984%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="55.5484%" y="885" width="0.0108%" height="15" fill="rgb(245,130,43)" fg:x="15458" fg:w="3"/><text x="55.7984%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="55.5484%" y="869" width="0.0108%" height="15" fill="rgb(231,227,38)" fg:x="15458" fg:w="3"/><text x="55.7984%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="55.5484%" y="853" width="0.0108%" height="15" fill="rgb(233,185,4)" fg:x="15458" fg:w="3"/><text x="55.7984%" y="863.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="55.5484%" y="837" width="0.0108%" height="15" fill="rgb(224,154,43)" fg:x="15458" fg:w="3"/><text x="55.7984%" y="847.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="55.5484%" y="821" width="0.0108%" height="15" fill="rgb(235,156,15)" fg:x="15458" fg:w="3"/><text x="55.7984%" y="831.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (16 samples, 0.06%)</title><rect x="55.5052%" y="1109" width="0.0575%" height="15" fill="rgb(211,55,43)" fg:x="15446" fg:w="16"/><text x="55.7552%" y="1119.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches (16 samples, 0.06%)</title><rect x="55.5052%" y="1093" width="0.0575%" height="15" fill="rgb(247,149,40)" fg:x="15446" fg:w="16"/><text x="55.7552%" y="1103.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (16 samples, 0.06%)</title><rect x="55.5052%" y="1077" width="0.0575%" height="15" fill="rgb(232,171,16)" fg:x="15446" fg:w="16"/><text x="55.7552%" y="1087.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (16 samples, 0.06%)</title><rect x="55.5052%" y="1061" width="0.0575%" height="15" fill="rgb(215,117,49)" fg:x="15446" fg:w="16"/><text x="55.7552%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (16 samples, 0.06%)</title><rect x="55.5052%" y="1045" width="0.0575%" height="15" fill="rgb(246,194,11)" fg:x="15446" fg:w="16"/><text x="55.7552%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (15 samples, 0.05%)</title><rect x="55.5088%" y="1029" width="0.0539%" height="15" fill="rgb(242,101,44)" fg:x="15447" fg:w="15"/><text x="55.7588%" y="1039.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (6 samples, 0.02%)</title><rect x="55.5412%" y="1013" width="0.0216%" height="15" fill="rgb(226,174,6)" fg:x="15456" fg:w="6"/><text x="55.7912%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (6 samples, 0.02%)</title><rect x="55.5412%" y="997" width="0.0216%" height="15" fill="rgb(213,150,20)" fg:x="15456" fg:w="6"/><text x="55.7912%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (6 samples, 0.02%)</title><rect x="55.5412%" y="981" width="0.0216%" height="15" fill="rgb(222,124,42)" fg:x="15456" fg:w="6"/><text x="55.7912%" y="991.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (6 samples, 0.02%)</title><rect x="55.5412%" y="965" width="0.0216%" height="15" fill="rgb(250,19,47)" fg:x="15456" fg:w="6"/><text x="55.7912%" y="975.50"></text></g><g><title>alloc::str::join_generic_copy (6 samples, 0.02%)</title><rect x="55.5412%" y="949" width="0.0216%" height="15" fill="rgb(241,217,19)" fg:x="15456" fg:w="6"/><text x="55.7912%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="55.5807%" y="949" width="0.0144%" height="15" fill="rgb(207,210,34)" fg:x="15467" fg:w="4"/><text x="55.8307%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="55.5807%" y="933" width="0.0144%" height="15" fill="rgb(244,45,4)" fg:x="15467" fg:w="4"/><text x="55.8307%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="55.5807%" y="917" width="0.0144%" height="15" fill="rgb(252,134,50)" fg:x="15467" fg:w="4"/><text x="55.8307%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="55.5807%" y="901" width="0.0144%" height="15" fill="rgb(238,74,2)" fg:x="15467" fg:w="4"/><text x="55.8307%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="55.5807%" y="885" width="0.0144%" height="15" fill="rgb(226,58,46)" fg:x="15467" fg:w="4"/><text x="55.8307%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="55.5807%" y="869" width="0.0144%" height="15" fill="rgb(232,83,35)" fg:x="15467" fg:w="4"/><text x="55.8307%" y="879.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="55.5807%" y="853" width="0.0144%" height="15" fill="rgb(212,148,47)" fg:x="15467" fg:w="4"/><text x="55.8307%" y="863.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="55.5843%" y="837" width="0.0108%" height="15" fill="rgb(235,29,1)" fg:x="15468" fg:w="3"/><text x="55.8343%" y="847.50"></text></g><g><title>alloc::str::join_generic_copy (9 samples, 0.03%)</title><rect x="55.5699%" y="965" width="0.0323%" height="15" fill="rgb(247,55,37)" fg:x="15464" fg:w="9"/><text x="55.8199%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 samples, 0.04%)</title><rect x="55.5699%" y="1013" width="0.0359%" height="15" fill="rgb(222,48,3)" fg:x="15464" fg:w="10"/><text x="55.8199%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (10 samples, 0.04%)</title><rect x="55.5699%" y="997" width="0.0359%" height="15" fill="rgb(234,21,33)" fg:x="15464" fg:w="10"/><text x="55.8199%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (10 samples, 0.04%)</title><rect x="55.5699%" y="981" width="0.0359%" height="15" fill="rgb(247,178,53)" fg:x="15464" fg:w="10"/><text x="55.8199%" y="991.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (14 samples, 0.05%)</title><rect x="55.5627%" y="1077" width="0.0503%" height="15" fill="rgb(225,75,7)" fg:x="15462" fg:w="14"/><text x="55.8127%" y="1087.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (14 samples, 0.05%)</title><rect x="55.5627%" y="1061" width="0.0503%" height="15" fill="rgb(219,199,7)" fg:x="15462" fg:w="14"/><text x="55.8127%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (14 samples, 0.05%)</title><rect x="55.5627%" y="1045" width="0.0503%" height="15" fill="rgb(209,93,42)" fg:x="15462" fg:w="14"/><text x="55.8127%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (12 samples, 0.04%)</title><rect x="55.5699%" y="1029" width="0.0431%" height="15" fill="rgb(240,175,17)" fg:x="15464" fg:w="12"/><text x="55.8199%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (3 samples, 0.01%)</title><rect x="55.6238%" y="1013" width="0.0108%" height="15" fill="rgb(232,106,7)" fg:x="15479" fg:w="3"/><text x="55.8738%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (3 samples, 0.01%)</title><rect x="55.6238%" y="997" width="0.0108%" height="15" fill="rgb(242,106,43)" fg:x="15479" fg:w="3"/><text x="55.8738%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (3 samples, 0.01%)</title><rect x="55.6238%" y="981" width="0.0108%" height="15" fill="rgb(242,61,37)" fg:x="15479" fg:w="3"/><text x="55.8738%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (7 samples, 0.03%)</title><rect x="55.6131%" y="1045" width="0.0252%" height="15" fill="rgb(205,72,10)" fg:x="15476" fg:w="7"/><text x="55.8631%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (4 samples, 0.01%)</title><rect x="55.6238%" y="1029" width="0.0144%" height="15" fill="rgb(214,184,36)" fg:x="15479" fg:w="4"/><text x="55.8738%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.03%)</title><rect x="55.6418%" y="965" width="0.0323%" height="15" fill="rgb(206,107,18)" fg:x="15484" fg:w="9"/><text x="55.8918%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.03%)</title><rect x="55.6418%" y="949" width="0.0323%" height="15" fill="rgb(210,75,5)" fg:x="15484" fg:w="9"/><text x="55.8918%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.01%)</title><rect x="55.6634%" y="933" width="0.0108%" height="15" fill="rgb(205,3,19)" fg:x="15490" fg:w="3"/><text x="55.9134%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.01%)</title><rect x="55.6634%" y="917" width="0.0108%" height="15" fill="rgb(207,181,42)" fg:x="15490" fg:w="3"/><text x="55.9134%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.01%)</title><rect x="55.6634%" y="901" width="0.0108%" height="15" fill="rgb(229,179,43)" fg:x="15490" fg:w="3"/><text x="55.9134%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="55.6634%" y="885" width="0.0108%" height="15" fill="rgb(246,95,30)" fg:x="15490" fg:w="3"/><text x="55.9134%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="55.6634%" y="869" width="0.0108%" height="15" fill="rgb(234,144,45)" fg:x="15490" fg:w="3"/><text x="55.9134%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.01%)</title><rect x="55.6634%" y="853" width="0.0108%" height="15" fill="rgb(250,54,25)" fg:x="15490" fg:w="3"/><text x="55.9134%" y="863.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (246 samples, 0.88%)</title><rect x="54.7973%" y="1141" width="0.8840%" height="15" fill="rgb(215,195,40)" fg:x="15249" fg:w="246"/><text x="55.0473%" y="1151.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (246 samples, 0.88%)</title><rect x="54.7973%" y="1125" width="0.8840%" height="15" fill="rgb(233,188,42)" fg:x="15249" fg:w="246"/><text x="55.0473%" y="1135.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_matches_routes (33 samples, 0.12%)</title><rect x="55.5627%" y="1109" width="0.1186%" height="15" fill="rgb(247,227,35)" fg:x="15462" fg:w="33"/><text x="55.8127%" y="1119.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_routes (33 samples, 0.12%)</title><rect x="55.5627%" y="1093" width="0.1186%" height="15" fill="rgb(249,124,27)" fg:x="15462" fg:w="33"/><text x="55.8127%" y="1103.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (19 samples, 0.07%)</title><rect x="55.6131%" y="1077" width="0.0683%" height="15" fill="rgb(219,207,25)" fg:x="15476" fg:w="19"/><text x="55.8631%" y="1087.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (19 samples, 0.07%)</title><rect x="55.6131%" y="1061" width="0.0683%" height="15" fill="rgb(241,216,47)" fg:x="15476" fg:w="19"/><text x="55.8631%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (12 samples, 0.04%)</title><rect x="55.6382%" y="1045" width="0.0431%" height="15" fill="rgb(233,82,50)" fg:x="15483" fg:w="12"/><text x="55.8882%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (12 samples, 0.04%)</title><rect x="55.6382%" y="1029" width="0.0431%" height="15" fill="rgb(232,63,2)" fg:x="15483" fg:w="12"/><text x="55.8882%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.04%)</title><rect x="55.6418%" y="1013" width="0.0395%" height="15" fill="rgb(236,184,28)" fg:x="15484" fg:w="11"/><text x="55.8918%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.04%)</title><rect x="55.6418%" y="997" width="0.0395%" height="15" fill="rgb(254,63,27)" fg:x="15484" fg:w="11"/><text x="55.8918%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.04%)</title><rect x="55.6418%" y="981" width="0.0395%" height="15" fill="rgb(253,106,28)" fg:x="15484" fg:w="11"/><text x="55.8918%" y="991.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_matches_data_routes (3 samples, 0.01%)</title><rect x="55.6813%" y="1109" width="0.0108%" height="15" fill="rgb(225,141,39)" fg:x="15495" fg:w="3"/><text x="55.9313%" y="1119.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (3 samples, 0.01%)</title><rect x="55.6813%" y="1093" width="0.0108%" height="15" fill="rgb(222,157,20)" fg:x="15495" fg:w="3"/><text x="55.9313%" y="1103.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (3 samples, 0.01%)</title><rect x="55.6813%" y="1077" width="0.0108%" height="15" fill="rgb(210,190,9)" fg:x="15495" fg:w="3"/><text x="55.9313%" y="1087.50"></text></g><g><title>&lt;zenoh::session::Session as zenoh_transport::primitives::Primitives&gt;::decl_resource (3 samples, 0.01%)</title><rect x="55.6921%" y="1077" width="0.0108%" height="15" fill="rgb(242,167,7)" fg:x="15498" fg:w="3"/><text x="55.9421%" y="1087.50"></text></g><g><title>zenoh::net::routing::pubsub::propagate_simple_subscription (5 samples, 0.02%)</title><rect x="55.6921%" y="1109" width="0.0180%" height="15" fill="rgb(227,82,41)" fg:x="15498" fg:w="5"/><text x="55.9421%" y="1119.50"></text></g><g><title>zenoh::net::routing::resource::Resource::decl_key (5 samples, 0.02%)</title><rect x="55.6921%" y="1093" width="0.0180%" height="15" fill="rgb(222,131,13)" fg:x="15498" fg:w="5"/><text x="55.9421%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (1,143 samples, 4.11%)</title><rect x="51.6063%" y="1237" width="4.1074%" height="15" fill="rgb(221,98,26)" fg:x="14361" fg:w="1143"/><text x="51.8563%" y="1247.50">zeno..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (1,143 samples, 4.11%)</title><rect x="51.6063%" y="1221" width="4.1074%" height="15" fill="rgb(251,63,52)" fg:x="14361" fg:w="1143"/><text x="51.8563%" y="1231.50">zeno..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (1,143 samples, 4.11%)</title><rect x="51.6063%" y="1205" width="4.1074%" height="15" fill="rgb(246,25,43)" fg:x="14361" fg:w="1143"/><text x="51.8563%" y="1215.50">zeno..</text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,143 samples, 4.11%)</title><rect x="51.6063%" y="1189" width="4.1074%" height="15" fill="rgb(247,167,15)" fg:x="14361" fg:w="1143"/><text x="51.8563%" y="1199.50">&lt;zen..</text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,143 samples, 4.11%)</title><rect x="51.6063%" y="1173" width="4.1074%" height="15" fill="rgb(240,104,42)" fg:x="14361" fg:w="1143"/><text x="51.8563%" y="1183.50">&lt;zen..</text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,143 samples, 4.11%)</title><rect x="51.6063%" y="1157" width="4.1074%" height="15" fill="rgb(224,54,6)" fg:x="14361" fg:w="1143"/><text x="51.8563%" y="1167.50">&lt;zen..</text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_subscriber (9 samples, 0.03%)</title><rect x="55.6813%" y="1141" width="0.0323%" height="15" fill="rgb(244,108,35)" fg:x="15495" fg:w="9"/><text x="55.9313%" y="1151.50"></text></g><g><title>zenoh::net::routing::pubsub::declare_client_subscription (9 samples, 0.03%)</title><rect x="55.6813%" y="1125" width="0.0323%" height="15" fill="rgb(216,154,2)" fg:x="15495" fg:w="9"/><text x="55.9313%" y="1135.50"></text></g><g><title>&lt;zenoh_transport::primitives::mux::Mux as zenoh_transport::primitives::Primitives&gt;::decl_resource (4 samples, 0.01%)</title><rect x="55.7137%" y="1141" width="0.0144%" height="15" fill="rgb(222,8,47)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (4 samples, 0.01%)</title><rect x="55.7137%" y="1125" width="0.0144%" height="15" fill="rgb(252,93,1)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (4 samples, 0.01%)</title><rect x="55.7137%" y="1109" width="0.0144%" height="15" fill="rgb(223,226,51)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (4 samples, 0.01%)</title><rect x="55.7137%" y="1093" width="0.0144%" height="15" fill="rgb(206,147,9)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (4 samples, 0.01%)</title><rect x="55.7137%" y="1077" width="0.0144%" height="15" fill="rgb(248,180,41)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (4 samples, 0.01%)</title><rect x="55.7137%" y="1061" width="0.0144%" height="15" fill="rgb(209,47,50)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1071.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (4 samples, 0.01%)</title><rect x="55.7137%" y="1045" width="0.0144%" height="15" fill="rgb(243,65,31)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1055.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (4 samples, 0.01%)</title><rect x="55.7137%" y="1029" width="0.0144%" height="15" fill="rgb(228,128,1)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1039.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (4 samples, 0.01%)</title><rect x="55.7137%" y="1013" width="0.0144%" height="15" fill="rgb(231,192,16)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1023.50"></text></g><g><title>event_listener::List::notify_additional (4 samples, 0.01%)</title><rect x="55.7137%" y="997" width="0.0144%" height="15" fill="rgb(224,26,40)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.01%)</title><rect x="55.7137%" y="981" width="0.0144%" height="15" fill="rgb(214,192,17)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (4 samples, 0.01%)</title><rect x="55.7137%" y="965" width="0.0144%" height="15" fill="rgb(225,147,18)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (4 samples, 0.01%)</title><rect x="55.7137%" y="949" width="0.0144%" height="15" fill="rgb(205,35,11)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (4 samples, 0.01%)</title><rect x="55.7137%" y="933" width="0.0144%" height="15" fill="rgb(242,40,42)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="943.50"></text></g><g><title>async_executor::State::notify (4 samples, 0.01%)</title><rect x="55.7137%" y="917" width="0.0144%" height="15" fill="rgb(250,170,13)" fg:x="15504" fg:w="4"/><text x="55.9637%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.01%)</title><rect x="55.7173%" y="901" width="0.0108%" height="15" fill="rgb(240,161,28)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (3 samples, 0.01%)</title><rect x="55.7173%" y="885" width="0.0108%" height="15" fill="rgb(245,179,12)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="895.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (3 samples, 0.01%)</title><rect x="55.7173%" y="869" width="0.0108%" height="15" fill="rgb(250,92,32)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="879.50"></text></g><g><title>parking::Unparker::unpark (3 samples, 0.01%)</title><rect x="55.7173%" y="853" width="0.0108%" height="15" fill="rgb(233,10,40)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="863.50"></text></g><g><title>parking::Inner::unpark (3 samples, 0.01%)</title><rect x="55.7173%" y="837" width="0.0108%" height="15" fill="rgb(217,98,1)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="847.50"></text></g><g><title>syscall (3 samples, 0.01%)</title><rect x="55.7173%" y="821" width="0.0108%" height="15" fill="rgb(238,202,7)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.7173%" y="805" width="0.0108%" height="15" fill="rgb(222,91,3)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.7173%" y="789" width="0.0108%" height="15" fill="rgb(211,170,49)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.7173%" y="773" width="0.0108%" height="15" fill="rgb(253,139,18)" fg:x="15505" fg:w="3"/><text x="55.9673%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.01%)</title><rect x="55.7316%" y="1077" width="0.0108%" height="15" fill="rgb(222,4,43)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="1087.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.01%)</title><rect x="55.7316%" y="1061" width="0.0108%" height="15" fill="rgb(207,205,12)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.01%)</title><rect x="55.7316%" y="1045" width="0.0108%" height="15" fill="rgb(216,159,46)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.01%)</title><rect x="55.7316%" y="1029" width="0.0108%" height="15" fill="rgb(236,115,1)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.01%)</title><rect x="55.7316%" y="1013" width="0.0108%" height="15" fill="rgb(251,35,33)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.01%)</title><rect x="55.7316%" y="997" width="0.0108%" height="15" fill="rgb(248,62,51)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.01%)</title><rect x="55.7316%" y="981" width="0.0108%" height="15" fill="rgb(254,180,19)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="55.7316%" y="965" width="0.0108%" height="15" fill="rgb(217,100,32)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="55.7316%" y="949" width="0.0108%" height="15" fill="rgb(224,71,22)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.01%)</title><rect x="55.7316%" y="933" width="0.0108%" height="15" fill="rgb(251,185,33)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="55.7316%" y="917" width="0.0108%" height="15" fill="rgb(209,75,48)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="55.7316%" y="901" width="0.0108%" height="15" fill="rgb(253,190,16)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="911.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="55.7316%" y="885" width="0.0108%" height="15" fill="rgb(226,140,1)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="895.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="55.7316%" y="869" width="0.0108%" height="15" fill="rgb(206,75,30)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="879.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="55.7316%" y="853" width="0.0108%" height="15" fill="rgb(231,208,37)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.7316%" y="837" width="0.0108%" height="15" fill="rgb(238,136,40)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.7316%" y="821" width="0.0108%" height="15" fill="rgb(247,137,17)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.7316%" y="805" width="0.0108%" height="15" fill="rgb(240,60,40)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="55.7316%" y="789" width="0.0108%" height="15" fill="rgb(236,68,50)" fg:x="15509" fg:w="3"/><text x="55.9816%" y="799.50"></text></g><g><title>zenoh::net::routing::resource::Resource::new (8 samples, 0.03%)</title><rect x="55.7316%" y="1093" width="0.0287%" height="15" fill="rgb(230,42,12)" fg:x="15509" fg:w="8"/><text x="55.9816%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (3 samples, 0.01%)</title><rect x="55.7496%" y="1077" width="0.0108%" height="15" fill="rgb(219,16,16)" fg:x="15514" fg:w="3"/><text x="55.9996%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (3 samples, 0.01%)</title><rect x="55.7496%" y="1061" width="0.0108%" height="15" fill="rgb(220,38,35)" fg:x="15514" fg:w="3"/><text x="55.9996%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (3 samples, 0.01%)</title><rect x="55.7496%" y="1045" width="0.0108%" height="15" fill="rgb(228,33,1)" fg:x="15514" fg:w="3"/><text x="55.9996%" y="1055.50"></text></g><g><title>std::collections::hash::map::RandomState::new (3 samples, 0.01%)</title><rect x="55.7496%" y="1029" width="0.0108%" height="15" fill="rgb(241,46,31)" fg:x="15514" fg:w="3"/><text x="55.9996%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.01%)</title><rect x="55.7496%" y="1013" width="0.0108%" height="15" fill="rgb(232,58,20)" fg:x="15514" fg:w="3"/><text x="55.9996%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.01%)</title><rect x="55.7496%" y="997" width="0.0108%" height="15" fill="rgb(206,228,53)" fg:x="15514" fg:w="3"/><text x="55.9996%" y="1007.50"></text></g><g><title>[unknown] (14,485 samples, 52.05%)</title><rect x="3.7265%" y="1253" width="52.0519%" height="15" fill="rgb(206,88,33)" fg:x="1037" fg:w="14485"/><text x="3.9765%" y="1263.50">[unknown]</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (18 samples, 0.06%)</title><rect x="55.7137%" y="1237" width="0.0647%" height="15" fill="rgb(238,69,7)" fg:x="15504" fg:w="18"/><text x="55.9637%" y="1247.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (18 samples, 0.06%)</title><rect x="55.7137%" y="1221" width="0.0647%" height="15" fill="rgb(250,21,46)" fg:x="15504" fg:w="18"/><text x="55.9637%" y="1231.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (18 samples, 0.06%)</title><rect x="55.7137%" y="1205" width="0.0647%" height="15" fill="rgb(215,212,21)" fg:x="15504" fg:w="18"/><text x="55.9637%" y="1215.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (18 samples, 0.06%)</title><rect x="55.7137%" y="1189" width="0.0647%" height="15" fill="rgb(211,35,12)" fg:x="15504" fg:w="18"/><text x="55.9637%" y="1199.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (18 samples, 0.06%)</title><rect x="55.7137%" y="1173" width="0.0647%" height="15" fill="rgb(231,184,16)" fg:x="15504" fg:w="18"/><text x="55.9637%" y="1183.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (18 samples, 0.06%)</title><rect x="55.7137%" y="1157" width="0.0647%" height="15" fill="rgb(242,140,15)" fg:x="15504" fg:w="18"/><text x="55.9637%" y="1167.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (14 samples, 0.05%)</title><rect x="55.7280%" y="1141" width="0.0503%" height="15" fill="rgb(220,37,14)" fg:x="15508" fg:w="14"/><text x="55.9780%" y="1151.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (14 samples, 0.05%)</title><rect x="55.7280%" y="1125" width="0.0503%" height="15" fill="rgb(223,146,22)" fg:x="15508" fg:w="14"/><text x="55.9780%" y="1135.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (14 samples, 0.05%)</title><rect x="55.7280%" y="1109" width="0.0503%" height="15" fill="rgb(216,132,15)" fg:x="15508" fg:w="14"/><text x="55.9780%" y="1119.50"></text></g><g><title>zenoh::net::routing::resource::Resource::upgrade_resource (5 samples, 0.02%)</title><rect x="55.7604%" y="1093" width="0.0180%" height="15" fill="rgb(248,83,5)" fg:x="15517" fg:w="5"/><text x="56.0104%" y="1103.50"></text></g><g><title>zenoh::net::routing::resource::ResourceContext::new (3 samples, 0.01%)</title><rect x="55.7676%" y="1077" width="0.0108%" height="15" fill="rgb(231,206,48)" fg:x="15519" fg:w="3"/><text x="56.0176%" y="1087.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="56.2383%" y="1221" width="0.0144%" height="15" fill="rgb(253,185,37)" fg:x="15650" fg:w="4"/><text x="56.4883%" y="1231.50"></text></g><g><title>[unknown] (370 samples, 1.33%)</title><rect x="56.2527%" y="1221" width="1.3296%" height="15" fill="rgb(208,21,44)" fg:x="15654" fg:w="370"/><text x="56.5027%" y="1231.50"></text></g><g><title>[unknown] (286 samples, 1.03%)</title><rect x="56.5545%" y="1205" width="1.0277%" height="15" fill="rgb(236,125,4)" fg:x="15738" fg:w="286"/><text x="56.8045%" y="1215.50"></text></g><g><title>[unknown] (262 samples, 0.94%)</title><rect x="56.6408%" y="1189" width="0.9415%" height="15" fill="rgb(226,134,25)" fg:x="15762" fg:w="262"/><text x="56.8908%" y="1199.50"></text></g><g><title>[unknown] (213 samples, 0.77%)</title><rect x="56.8169%" y="1173" width="0.7654%" height="15" fill="rgb(250,201,12)" fg:x="15811" fg:w="213"/><text x="57.0669%" y="1183.50"></text></g><g><title>[unknown] (133 samples, 0.48%)</title><rect x="57.1044%" y="1157" width="0.4779%" height="15" fill="rgb(225,92,18)" fg:x="15891" fg:w="133"/><text x="57.3544%" y="1167.50"></text></g><g><title>[unknown] (64 samples, 0.23%)</title><rect x="57.3523%" y="1141" width="0.2300%" height="15" fill="rgb(227,35,22)" fg:x="15960" fg:w="64"/><text x="57.6023%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="57.5715%" y="1125" width="0.0108%" height="15" fill="rgb(214,180,52)" fg:x="16021" fg:w="3"/><text x="57.8215%" y="1135.50"></text></g><g><title>__ctype_init (26 samples, 0.09%)</title><rect x="57.5823%" y="1221" width="0.0934%" height="15" fill="rgb(233,55,38)" fg:x="16024" fg:w="26"/><text x="57.8323%" y="1231.50"></text></g><g><title>__sigsetjmp (27 samples, 0.10%)</title><rect x="57.6757%" y="1221" width="0.0970%" height="15" fill="rgb(249,171,43)" fg:x="16050" fg:w="27"/><text x="57.9257%" y="1231.50"></text></g><g><title>_setjmp (7 samples, 0.03%)</title><rect x="57.7727%" y="1221" width="0.0252%" height="15" fill="rgb(239,87,2)" fg:x="16077" fg:w="7"/><text x="58.0227%" y="1231.50"></text></g><g><title>prctl (75 samples, 0.27%)</title><rect x="58.1033%" y="1141" width="0.2695%" height="15" fill="rgb(248,141,5)" fg:x="16169" fg:w="75"/><text x="58.3533%" y="1151.50"></text></g><g><title>[unknown] (71 samples, 0.26%)</title><rect x="58.1177%" y="1125" width="0.2551%" height="15" fill="rgb(238,33,42)" fg:x="16173" fg:w="71"/><text x="58.3677%" y="1135.50"></text></g><g><title>[unknown] (71 samples, 0.26%)</title><rect x="58.1177%" y="1109" width="0.2551%" height="15" fill="rgb(231,57,19)" fg:x="16173" fg:w="71"/><text x="58.3677%" y="1119.50"></text></g><g><title>[unknown] (71 samples, 0.26%)</title><rect x="58.1177%" y="1093" width="0.2551%" height="15" fill="rgb(214,78,53)" fg:x="16173" fg:w="71"/><text x="58.3677%" y="1103.50"></text></g><g><title>[unknown] (67 samples, 0.24%)</title><rect x="58.1321%" y="1077" width="0.2408%" height="15" fill="rgb(206,132,29)" fg:x="16177" fg:w="67"/><text x="58.3821%" y="1087.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="58.2147%" y="1061" width="0.1581%" height="15" fill="rgb(248,174,31)" fg:x="16200" fg:w="44"/><text x="58.4647%" y="1071.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="58.2794%" y="1045" width="0.0934%" height="15" fill="rgb(221,87,13)" fg:x="16218" fg:w="26"/><text x="58.5294%" y="1055.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="58.3046%" y="1029" width="0.0683%" height="15" fill="rgb(223,197,17)" fg:x="16225" fg:w="19"/><text x="58.5546%" y="1039.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="58.3154%" y="1013" width="0.0575%" height="15" fill="rgb(220,144,50)" fg:x="16228" fg:w="16"/><text x="58.5654%" y="1023.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="58.3333%" y="997" width="0.0395%" height="15" fill="rgb(244,201,11)" fg:x="16233" fg:w="11"/><text x="58.5833%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="58.3513%" y="981" width="0.0216%" height="15" fill="rgb(249,81,34)" fg:x="16238" fg:w="6"/><text x="58.6013%" y="991.50"></text></g><g><title>std::io::stdio::set_output_capture (35 samples, 0.13%)</title><rect x="58.3729%" y="1141" width="0.1258%" height="15" fill="rgb(205,161,12)" fg:x="16244" fg:w="35"/><text x="58.6229%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (22 samples, 0.08%)</title><rect x="58.4196%" y="1125" width="0.0791%" height="15" fill="rgb(252,139,50)" fg:x="16257" fg:w="22"/><text x="58.6696%" y="1135.50"></text></g><g><title>async_channel::bounded (4 samples, 0.01%)</title><rect x="58.5238%" y="1013" width="0.0144%" height="15" fill="rgb(205,169,14)" fg:x="16286" fg:w="4"/><text x="58.7738%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="58.5238%" y="997" width="0.0144%" height="15" fill="rgb(248,198,33)" fg:x="16286" fg:w="4"/><text x="58.7738%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="58.5238%" y="981" width="0.0144%" height="15" fill="rgb(236,23,21)" fg:x="16286" fg:w="4"/><text x="58.7738%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="58.5238%" y="965" width="0.0144%" height="15" fill="rgb(231,13,38)" fg:x="16286" fg:w="4"/><text x="58.7738%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="58.5238%" y="949" width="0.0144%" height="15" fill="rgb(239,139,21)" fg:x="16286" fg:w="4"/><text x="58.7738%" y="959.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="58.5238%" y="933" width="0.0144%" height="15" fill="rgb(222,164,45)" fg:x="16286" fg:w="4"/><text x="58.7738%" y="943.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="58.5274%" y="917" width="0.0108%" height="15" fill="rgb(230,52,27)" fg:x="16287" fg:w="3"/><text x="58.7774%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (6 samples, 0.02%)</title><rect x="58.8400%" y="549" width="0.0216%" height="15" fill="rgb(227,143,42)" fg:x="16374" fg:w="6"/><text x="59.0900%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.02%)</title><rect x="58.8400%" y="533" width="0.0216%" height="15" fill="rgb(249,127,1)" fg:x="16374" fg:w="6"/><text x="59.0900%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.02%)</title><rect x="58.8400%" y="517" width="0.0216%" height="15" fill="rgb(243,107,26)" fg:x="16374" fg:w="6"/><text x="59.0900%" y="527.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.02%)</title><rect x="58.8616%" y="549" width="0.0180%" height="15" fill="rgb(225,7,45)" fg:x="16380" fg:w="5"/><text x="59.1116%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.11%)</title><rect x="58.7861%" y="597" width="0.1114%" height="15" fill="rgb(241,88,38)" fg:x="16359" fg:w="31"/><text x="59.0361%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (29 samples, 0.10%)</title><rect x="58.7933%" y="581" width="0.1042%" height="15" fill="rgb(226,121,9)" fg:x="16361" fg:w="29"/><text x="59.0433%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.09%)</title><rect x="58.8113%" y="565" width="0.0862%" height="15" fill="rgb(253,60,29)" fg:x="16366" fg:w="24"/><text x="59.0613%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.02%)</title><rect x="58.8795%" y="549" width="0.0180%" height="15" fill="rgb(244,181,39)" fg:x="16385" fg:w="5"/><text x="59.1295%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (5 samples, 0.02%)</title><rect x="58.8795%" y="533" width="0.0180%" height="15" fill="rgb(252,203,31)" fg:x="16385" fg:w="5"/><text x="59.1295%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.13%)</title><rect x="58.7861%" y="645" width="0.1258%" height="15" fill="rgb(224,120,8)" fg:x="16359" fg:w="35"/><text x="59.0361%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (35 samples, 0.13%)</title><rect x="58.7861%" y="629" width="0.1258%" height="15" fill="rgb(205,171,54)" fg:x="16359" fg:w="35"/><text x="59.0361%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (35 samples, 0.13%)</title><rect x="58.7861%" y="613" width="0.1258%" height="15" fill="rgb(235,89,11)" fg:x="16359" fg:w="35"/><text x="59.0361%" y="623.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (4 samples, 0.01%)</title><rect x="58.8975%" y="597" width="0.0144%" height="15" fill="rgb(212,180,28)" fg:x="16390" fg:w="4"/><text x="59.1475%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="61.0824%" y="613" width="0.0323%" height="15" fill="rgb(247,84,49)" fg:x="16998" fg:w="9"/><text x="61.3324%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="61.0896%" y="597" width="0.0252%" height="15" fill="rgb(236,187,52)" fg:x="17000" fg:w="7"/><text x="61.3396%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="61.0896%" y="581" width="0.0252%" height="15" fill="rgb(227,24,15)" fg:x="17000" fg:w="7"/><text x="61.3396%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="61.0967%" y="565" width="0.0180%" height="15" fill="rgb(227,211,13)" fg:x="17002" fg:w="5"/><text x="61.3467%" y="575.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (334 samples, 1.20%)</title><rect x="61.1147%" y="613" width="1.2002%" height="15" fill="rgb(245,52,14)" fg:x="17007" fg:w="334"/><text x="61.3647%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (297 samples, 1.07%)</title><rect x="61.2477%" y="597" width="1.0673%" height="15" fill="rgb(225,185,13)" fg:x="17044" fg:w="297"/><text x="61.4977%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (297 samples, 1.07%)</title><rect x="61.2477%" y="581" width="1.0673%" height="15" fill="rgb(217,160,29)" fg:x="17044" fg:w="297"/><text x="61.4977%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (917 samples, 3.30%)</title><rect x="59.0305%" y="629" width="3.2952%" height="15" fill="rgb(216,115,53)" fg:x="16427" fg:w="917"/><text x="59.2805%" y="639.50">con..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (3 samples, 0.01%)</title><rect x="62.3149%" y="613" width="0.0108%" height="15" fill="rgb(236,99,5)" fg:x="17341" fg:w="3"/><text x="62.5649%" y="623.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (7 samples, 0.03%)</title><rect x="62.3293%" y="613" width="0.0252%" height="15" fill="rgb(222,60,38)" fg:x="17345" fg:w="7"/><text x="62.5793%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (3 samples, 0.01%)</title><rect x="62.3724%" y="597" width="0.0108%" height="15" fill="rgb(212,82,22)" fg:x="17357" fg:w="3"/><text x="62.6224%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (21 samples, 0.08%)</title><rect x="62.3257%" y="629" width="0.0755%" height="15" fill="rgb(214,48,28)" fg:x="17344" fg:w="21"/><text x="62.5757%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13 samples, 0.05%)</title><rect x="62.3545%" y="613" width="0.0467%" height="15" fill="rgb(245,196,50)" fg:x="17352" fg:w="13"/><text x="62.6045%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (33 samples, 0.12%)</title><rect x="62.4012%" y="629" width="0.1186%" height="15" fill="rgb(225,159,46)" fg:x="17365" fg:w="33"/><text x="62.6512%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (31 samples, 0.11%)</title><rect x="62.4084%" y="613" width="0.1114%" height="15" fill="rgb(207,195,48)" fg:x="17367" fg:w="31"/><text x="62.6584%" y="623.50"></text></g><g><title>async_executor::steal (1,005 samples, 3.61%)</title><rect x="58.9119%" y="645" width="3.6115%" height="15" fill="rgb(240,73,3)" fg:x="16394" fg:w="1005"/><text x="59.1619%" y="655.50">asyn..</text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="62.6779%" y="629" width="0.0108%" height="15" fill="rgb(245,57,23)" fg:x="17442" fg:w="3"/><text x="62.9279%" y="639.50"></text></g><g><title>concurrent_queue::full_fence (4 samples, 0.01%)</title><rect x="62.9582%" y="613" width="0.0144%" height="15" fill="rgb(240,75,18)" fg:x="17520" fg:w="4"/><text x="63.2082%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4 samples, 0.01%)</title><rect x="62.9582%" y="597" width="0.0144%" height="15" fill="rgb(238,168,12)" fg:x="17520" fg:w="4"/><text x="63.2082%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.01%)</title><rect x="62.9582%" y="581" width="0.0144%" height="15" fill="rgb(226,20,40)" fg:x="17520" fg:w="4"/><text x="63.2082%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="62.9582%" y="565" width="0.0144%" height="15" fill="rgb(224,130,35)" fg:x="17520" fg:w="4"/><text x="63.2082%" y="575.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (121 samples, 0.43%)</title><rect x="62.6887%" y="629" width="0.4348%" height="15" fill="rgb(225,63,41)" fg:x="17445" fg:w="121"/><text x="62.9387%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (42 samples, 0.15%)</title><rect x="62.9725%" y="613" width="0.1509%" height="15" fill="rgb(219,3,3)" fg:x="17524" fg:w="42"/><text x="63.2225%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (39 samples, 0.14%)</title><rect x="62.9833%" y="597" width="0.1401%" height="15" fill="rgb(218,157,4)" fg:x="17527" fg:w="39"/><text x="63.2333%" y="607.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (4 samples, 0.01%)</title><rect x="63.2097%" y="613" width="0.0144%" height="15" fill="rgb(232,76,36)" fg:x="17590" fg:w="4"/><text x="63.4597%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (20 samples, 0.07%)</title><rect x="63.2313%" y="613" width="0.0719%" height="15" fill="rgb(247,36,0)" fg:x="17596" fg:w="20"/><text x="63.4813%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (21 samples, 0.08%)</title><rect x="63.3103%" y="613" width="0.0755%" height="15" fill="rgb(205,2,34)" fg:x="17618" fg:w="21"/><text x="63.5603%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.08%)</title><rect x="63.3103%" y="597" width="0.0755%" height="15" fill="rgb(239,136,13)" fg:x="17618" fg:w="21"/><text x="63.5603%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (245 samples, 0.88%)</title><rect x="62.5234%" y="645" width="0.8804%" height="15" fill="rgb(253,122,12)" fg:x="17399" fg:w="245"/><text x="62.7734%" y="655.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (78 samples, 0.28%)</title><rect x="63.1235%" y="629" width="0.2803%" height="15" fill="rgb(222,174,7)" fg:x="17566" fg:w="78"/><text x="63.3735%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.01%)</title><rect x="63.3930%" y="613" width="0.0108%" height="15" fill="rgb(208,191,42)" fg:x="17641" fg:w="3"/><text x="63.6430%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="63.3930%" y="597" width="0.0108%" height="15" fill="rgb(237,212,15)" fg:x="17641" fg:w="3"/><text x="63.6430%" y="607.50"></text></g><g><title>fastrand::RNG::__getit (4 samples, 0.01%)</title><rect x="63.4145%" y="597" width="0.0144%" height="15" fill="rgb(215,65,20)" fg:x="17647" fg:w="4"/><text x="63.6645%" y="607.50"></text></g><g><title>fastrand::usize (6 samples, 0.02%)</title><rect x="63.4145%" y="645" width="0.0216%" height="15" fill="rgb(232,103,11)" fg:x="17647" fg:w="6"/><text x="63.6645%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="63.4145%" y="629" width="0.0216%" height="15" fill="rgb(235,148,18)" fg:x="17647" fg:w="6"/><text x="63.6645%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="63.4145%" y="613" width="0.0216%" height="15" fill="rgb(240,173,7)" fg:x="17647" fg:w="6"/><text x="63.6645%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,318 samples, 4.74%)</title><rect x="58.7286%" y="661" width="4.7362%" height="15" fill="rgb(228,182,25)" fg:x="16343" fg:w="1318"/><text x="58.9786%" y="671.50">async_..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (8 samples, 0.03%)</title><rect x="63.4361%" y="645" width="0.0287%" height="15" fill="rgb(247,3,52)" fg:x="17653" fg:w="8"/><text x="63.6861%" y="655.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (7 samples, 0.03%)</title><rect x="63.4397%" y="629" width="0.0252%" height="15" fill="rgb(226,155,8)" fg:x="17654" fg:w="7"/><text x="63.6897%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (7 samples, 0.03%)</title><rect x="63.4397%" y="613" width="0.0252%" height="15" fill="rgb(243,195,38)" fg:x="17654" fg:w="7"/><text x="63.6897%" y="623.50"></text></g><g><title>async_executor::Sleepers::notify (5 samples, 0.02%)</title><rect x="63.4756%" y="645" width="0.0180%" height="15" fill="rgb(254,181,33)" fg:x="17664" fg:w="5"/><text x="63.7256%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::notify (12 samples, 0.04%)</title><rect x="63.5116%" y="597" width="0.0431%" height="15" fill="rgb(232,98,23)" fg:x="17674" fg:w="12"/><text x="63.7616%" y="607.50"></text></g><g><title>polling::Poller::notify (12 samples, 0.04%)</title><rect x="63.5116%" y="581" width="0.0431%" height="15" fill="rgb(205,23,10)" fg:x="17674" fg:w="12"/><text x="63.7616%" y="591.50"></text></g><g><title>polling::epoll::Poller::notify (11 samples, 0.04%)</title><rect x="63.5152%" y="565" width="0.0395%" height="15" fill="rgb(212,124,38)" fg:x="17675" fg:w="11"/><text x="63.7652%" y="575.50"></text></g><g><title>write (11 samples, 0.04%)</title><rect x="63.5152%" y="549" width="0.0395%" height="15" fill="rgb(228,207,2)" fg:x="17675" fg:w="11"/><text x="63.7652%" y="559.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="63.5152%" y="533" width="0.0395%" height="15" fill="rgb(215,120,22)" fg:x="17675" fg:w="11"/><text x="63.7652%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="63.5152%" y="517" width="0.0395%" height="15" fill="rgb(251,172,33)" fg:x="17675" fg:w="11"/><text x="63.7652%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="63.5152%" y="501" width="0.0395%" height="15" fill="rgb(250,83,2)" fg:x="17675" fg:w="11"/><text x="63.7652%" y="511.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="63.5224%" y="485" width="0.0323%" height="15" fill="rgb(210,132,53)" fg:x="17677" fg:w="9"/><text x="63.7724%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="63.5295%" y="469" width="0.0252%" height="15" fill="rgb(221,208,36)" fg:x="17679" fg:w="7"/><text x="63.7795%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="63.5403%" y="453" width="0.0144%" height="15" fill="rgb(205,192,46)" fg:x="17682" fg:w="4"/><text x="63.7903%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="63.5439%" y="437" width="0.0108%" height="15" fill="rgb(223,163,14)" fg:x="17683" fg:w="3"/><text x="63.7939%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (3 samples, 0.01%)</title><rect x="63.5547%" y="597" width="0.0108%" height="15" fill="rgb(218,41,28)" fg:x="17686" fg:w="3"/><text x="63.8047%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (22 samples, 0.08%)</title><rect x="63.6625%" y="565" width="0.0791%" height="15" fill="rgb(235,104,10)" fg:x="17716" fg:w="22"/><text x="63.9125%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (22 samples, 0.08%)</title><rect x="63.6625%" y="549" width="0.0791%" height="15" fill="rgb(246,17,4)" fg:x="17716" fg:w="22"/><text x="63.9125%" y="559.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (4 samples, 0.01%)</title><rect x="63.7416%" y="565" width="0.0144%" height="15" fill="rgb(240,7,16)" fg:x="17738" fg:w="4"/><text x="63.9916%" y="575.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (4 samples, 0.01%)</title><rect x="63.7416%" y="549" width="0.0144%" height="15" fill="rgb(213,160,23)" fg:x="17738" fg:w="4"/><text x="63.9916%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (4 samples, 0.01%)</title><rect x="63.7416%" y="533" width="0.0144%" height="15" fill="rgb(251,179,49)" fg:x="17738" fg:w="4"/><text x="63.9916%" y="543.50"></text></g><g><title>parking::Unparker::unpark (212 samples, 0.76%)</title><rect x="63.5655%" y="597" width="0.7618%" height="15" fill="rgb(247,198,10)" fg:x="17689" fg:w="212"/><text x="63.8155%" y="607.50"></text></g><g><title>parking::Inner::unpark (187 samples, 0.67%)</title><rect x="63.6553%" y="581" width="0.6720%" height="15" fill="rgb(220,65,29)" fg:x="17714" fg:w="187"/><text x="63.9053%" y="591.50"></text></g><g><title>syscall (159 samples, 0.57%)</title><rect x="63.7559%" y="565" width="0.5714%" height="15" fill="rgb(237,171,28)" fg:x="17742" fg:w="159"/><text x="64.0059%" y="575.50"></text></g><g><title>[unknown] (156 samples, 0.56%)</title><rect x="63.7667%" y="549" width="0.5606%" height="15" fill="rgb(228,44,26)" fg:x="17745" fg:w="156"/><text x="64.0167%" y="559.50"></text></g><g><title>[unknown] (154 samples, 0.55%)</title><rect x="63.7739%" y="533" width="0.5534%" height="15" fill="rgb(216,210,27)" fg:x="17747" fg:w="154"/><text x="64.0239%" y="543.50"></text></g><g><title>[unknown] (151 samples, 0.54%)</title><rect x="63.7847%" y="517" width="0.5426%" height="15" fill="rgb(252,10,17)" fg:x="17750" fg:w="151"/><text x="64.0347%" y="527.50"></text></g><g><title>[unknown] (145 samples, 0.52%)</title><rect x="63.8062%" y="501" width="0.5211%" height="15" fill="rgb(214,172,30)" fg:x="17756" fg:w="145"/><text x="64.0562%" y="511.50"></text></g><g><title>[unknown] (133 samples, 0.48%)</title><rect x="63.8494%" y="485" width="0.4779%" height="15" fill="rgb(253,130,48)" fg:x="17768" fg:w="133"/><text x="64.0994%" y="495.50"></text></g><g><title>[unknown] (91 samples, 0.33%)</title><rect x="64.0003%" y="469" width="0.3270%" height="15" fill="rgb(226,99,43)" fg:x="17810" fg:w="91"/><text x="64.2503%" y="479.50"></text></g><g><title>[unknown] (72 samples, 0.26%)</title><rect x="64.0686%" y="453" width="0.2587%" height="15" fill="rgb(239,111,26)" fg:x="17829" fg:w="72"/><text x="64.3186%" y="463.50"></text></g><g><title>[unknown] (58 samples, 0.21%)</title><rect x="64.1189%" y="437" width="0.2084%" height="15" fill="rgb(240,27,53)" fg:x="17843" fg:w="58"/><text x="64.3689%" y="447.50"></text></g><g><title>[unknown] (33 samples, 0.12%)</title><rect x="64.2087%" y="421" width="0.1186%" height="15" fill="rgb(254,163,12)" fg:x="17868" fg:w="33"/><text x="64.4587%" y="431.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="64.2842%" y="405" width="0.0431%" height="15" fill="rgb(225,51,48)" fg:x="17889" fg:w="12"/><text x="64.5342%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="64.2985%" y="389" width="0.0287%" height="15" fill="rgb(205,19,32)" fg:x="17893" fg:w="8"/><text x="64.5485%" y="399.50"></text></g><g><title>core::task::wake::Waker::wake (233 samples, 0.84%)</title><rect x="63.4936%" y="645" width="0.8373%" height="15" fill="rgb(218,119,26)" fg:x="17669" fg:w="233"/><text x="63.7436%" y="655.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (233 samples, 0.84%)</title><rect x="63.4936%" y="629" width="0.8373%" height="15" fill="rgb(231,173,33)" fg:x="17669" fg:w="233"/><text x="63.7436%" y="639.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (231 samples, 0.83%)</title><rect x="63.5008%" y="613" width="0.8301%" height="15" fill="rgb(241,100,29)" fg:x="17671" fg:w="231"/><text x="63.7508%" y="623.50"></text></g><g><title>async_executor::State::notify (242 samples, 0.87%)</title><rect x="63.4649%" y="661" width="0.8696%" height="15" fill="rgb(250,194,34)" fg:x="17661" fg:w="242"/><text x="63.7149%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="64.3848%" y="629" width="0.0108%" height="15" fill="rgb(215,23,50)" fg:x="17917" fg:w="3"/><text x="64.6348%" y="639.50"></text></g><g><title>async_executor::Sleepers::update (14 samples, 0.05%)</title><rect x="64.3525%" y="645" width="0.0503%" height="15" fill="rgb(206,49,37)" fg:x="17908" fg:w="14"/><text x="64.6025%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (6 samples, 0.02%)</title><rect x="64.4028%" y="645" width="0.0216%" height="15" fill="rgb(247,39,21)" fg:x="17922" fg:w="6"/><text x="64.6528%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="64.4028%" y="629" width="0.0216%" height="15" fill="rgb(209,220,15)" fg:x="17922" fg:w="6"/><text x="64.6528%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (5 samples, 0.02%)</title><rect x="64.4064%" y="613" width="0.0180%" height="15" fill="rgb(206,41,33)" fg:x="17923" fg:w="5"/><text x="64.6564%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (5 samples, 0.02%)</title><rect x="64.4064%" y="597" width="0.0180%" height="15" fill="rgb(221,225,45)" fg:x="17923" fg:w="5"/><text x="64.6564%" y="607.50"></text></g><g><title>async_executor::Ticker::sleep (31 samples, 0.11%)</title><rect x="64.3345%" y="661" width="0.1114%" height="15" fill="rgb(216,27,18)" fg:x="17903" fg:w="31"/><text x="64.5845%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.02%)</title><rect x="64.4243%" y="645" width="0.0216%" height="15" fill="rgb(250,193,34)" fg:x="17928" fg:w="6"/><text x="64.6743%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.02%)</title><rect x="64.4243%" y="629" width="0.0216%" height="15" fill="rgb(227,215,20)" fg:x="17928" fg:w="6"/><text x="64.6743%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (6 samples, 0.02%)</title><rect x="64.4243%" y="613" width="0.0216%" height="15" fill="rgb(242,211,27)" fg:x="17928" fg:w="6"/><text x="64.6743%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (3 samples, 0.01%)</title><rect x="64.4351%" y="597" width="0.0108%" height="15" fill="rgb(229,190,30)" fg:x="17931" fg:w="3"/><text x="64.6851%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.03%)</title><rect x="64.5321%" y="629" width="0.0252%" height="15" fill="rgb(253,31,29)" fg:x="17958" fg:w="7"/><text x="64.7821%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (7 samples, 0.03%)</title><rect x="64.5321%" y="613" width="0.0252%" height="15" fill="rgb(229,177,52)" fg:x="17958" fg:w="7"/><text x="64.7821%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (7 samples, 0.03%)</title><rect x="64.5321%" y="597" width="0.0252%" height="15" fill="rgb(226,88,8)" fg:x="17958" fg:w="7"/><text x="64.7821%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.03%)</title><rect x="64.5321%" y="581" width="0.0252%" height="15" fill="rgb(214,55,27)" fg:x="17958" fg:w="7"/><text x="64.7821%" y="591.50"></text></g><g><title>async_executor::Sleepers::remove (40 samples, 0.14%)</title><rect x="64.4603%" y="645" width="0.1437%" height="15" fill="rgb(233,202,5)" fg:x="17938" fg:w="40"/><text x="64.7103%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.04%)</title><rect x="64.5609%" y="629" width="0.0431%" height="15" fill="rgb(251,49,30)" fg:x="17966" fg:w="12"/><text x="64.8109%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (24 samples, 0.09%)</title><rect x="64.6040%" y="645" width="0.0862%" height="15" fill="rgb(235,18,52)" fg:x="17978" fg:w="24"/><text x="64.8540%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.09%)</title><rect x="64.6040%" y="629" width="0.0862%" height="15" fill="rgb(250,111,51)" fg:x="17978" fg:w="24"/><text x="64.8540%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.04%)</title><rect x="64.6507%" y="613" width="0.0395%" height="15" fill="rgb(218,13,25)" fg:x="17991" fg:w="11"/><text x="64.9007%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (11 samples, 0.04%)</title><rect x="64.6507%" y="597" width="0.0395%" height="15" fill="rgb(248,96,7)" fg:x="17991" fg:w="11"/><text x="64.9007%" y="607.50"></text></g><g><title>syscall (7 samples, 0.03%)</title><rect x="64.6651%" y="581" width="0.0252%" height="15" fill="rgb(217,31,15)" fg:x="17995" fg:w="7"/><text x="64.9151%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="64.6651%" y="565" width="0.0252%" height="15" fill="rgb(228,59,49)" fg:x="17995" fg:w="7"/><text x="64.9151%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="64.6651%" y="549" width="0.0252%" height="15" fill="rgb(210,152,38)" fg:x="17995" fg:w="7"/><text x="64.9151%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="64.6651%" y="533" width="0.0252%" height="15" fill="rgb(206,71,11)" fg:x="17995" fg:w="7"/><text x="64.9151%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="64.6651%" y="517" width="0.0252%" height="15" fill="rgb(244,199,5)" fg:x="17995" fg:w="7"/><text x="64.9151%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="64.6687%" y="501" width="0.0216%" height="15" fill="rgb(253,49,1)" fg:x="17996" fg:w="6"/><text x="64.9187%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="64.6723%" y="485" width="0.0180%" height="15" fill="rgb(225,206,40)" fg:x="17997" fg:w="5"/><text x="64.9223%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="64.6759%" y="469" width="0.0144%" height="15" fill="rgb(243,116,47)" fg:x="17998" fg:w="4"/><text x="64.9259%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="64.6795%" y="453" width="0.0108%" height="15" fill="rgb(219,225,16)" fg:x="17999" fg:w="3"/><text x="64.9295%" y="463.50"></text></g><g><title>async_executor::Ticker::wake (83 samples, 0.30%)</title><rect x="64.4459%" y="661" width="0.2983%" height="15" fill="rgb(233,29,47)" fg:x="17934" fg:w="83"/><text x="64.6959%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.05%)</title><rect x="64.6938%" y="645" width="0.0503%" height="15" fill="rgb(250,179,18)" fg:x="18003" fg:w="14"/><text x="64.9438%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (14 samples, 0.05%)</title><rect x="64.6938%" y="629" width="0.0503%" height="15" fill="rgb(215,176,6)" fg:x="18003" fg:w="14"/><text x="64.9438%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (14 samples, 0.05%)</title><rect x="64.6938%" y="613" width="0.0503%" height="15" fill="rgb(214,117,39)" fg:x="18003" fg:w="14"/><text x="64.9438%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,686 samples, 6.06%)</title><rect x="58.6927%" y="757" width="6.0586%" height="15" fill="rgb(247,183,36)" fg:x="16333" fg:w="1686"/><text x="58.9427%" y="767.50">&lt;core::f..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (1,684 samples, 6.05%)</title><rect x="58.6999%" y="741" width="6.0515%" height="15" fill="rgb(237,200,3)" fg:x="16335" fg:w="1684"/><text x="58.9499%" y="751.50">async_ex..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,681 samples, 6.04%)</title><rect x="58.7107%" y="725" width="6.0407%" height="15" fill="rgb(212,220,24)" fg:x="16338" fg:w="1681"/><text x="58.9607%" y="735.50">&lt;core::f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1,681 samples, 6.04%)</title><rect x="58.7107%" y="709" width="6.0407%" height="15" fill="rgb(245,216,20)" fg:x="16338" fg:w="1681"/><text x="58.9607%" y="719.50">async_ex..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,680 samples, 6.04%)</title><rect x="58.7142%" y="693" width="6.0371%" height="15" fill="rgb(219,124,7)" fg:x="16339" fg:w="1680"/><text x="58.9642%" y="703.50">&lt;futures..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1,677 samples, 6.03%)</title><rect x="58.7250%" y="677" width="6.0263%" height="15" fill="rgb(227,167,8)" fg:x="16342" fg:w="1677"/><text x="58.9750%" y="687.50">async_ex..</text></g><g><title>async_executor::Runner::runnable (4 samples, 0.01%)</title><rect x="64.7513%" y="757" width="0.0144%" height="15" fill="rgb(241,37,2)" fg:x="18019" fg:w="4"/><text x="65.0013%" y="767.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (4 samples, 0.01%)</title><rect x="64.8160%" y="517" width="0.0144%" height="15" fill="rgb(238,134,33)" fg:x="18037" fg:w="4"/><text x="65.0660%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="64.8160%" y="501" width="0.0144%" height="15" fill="rgb(248,48,27)" fg:x="18037" fg:w="4"/><text x="65.0660%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="64.8160%" y="485" width="0.0144%" height="15" fill="rgb(212,14,16)" fg:x="18037" fg:w="4"/><text x="65.0660%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="64.8160%" y="469" width="0.0144%" height="15" fill="rgb(217,205,37)" fg:x="18037" fg:w="4"/><text x="65.0660%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="64.8160%" y="453" width="0.0144%" height="15" fill="rgb(233,185,47)" fg:x="18037" fg:w="4"/><text x="65.0660%" y="463.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="64.8160%" y="437" width="0.0144%" height="15" fill="rgb(244,88,8)" fg:x="18037" fg:w="4"/><text x="65.0660%" y="447.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="64.8160%" y="421" width="0.0144%" height="15" fill="rgb(213,0,20)" fg:x="18037" fg:w="4"/><text x="65.0660%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="64.7945%" y="741" width="0.0395%" height="15" fill="rgb(238,159,36)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (11 samples, 0.04%)</title><rect x="64.7945%" y="725" width="0.0395%" height="15" fill="rgb(253,173,17)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="735.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="64.7945%" y="709" width="0.0395%" height="15" fill="rgb(221,23,28)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11 samples, 0.04%)</title><rect x="64.7945%" y="693" width="0.0395%" height="15" fill="rgb(218,113,15)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.04%)</title><rect x="64.7945%" y="677" width="0.0395%" height="15" fill="rgb(233,58,3)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.04%)</title><rect x="64.7945%" y="661" width="0.0395%" height="15" fill="rgb(250,46,35)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11 samples, 0.04%)</title><rect x="64.7945%" y="645" width="0.0395%" height="15" fill="rgb(210,169,11)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="655.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11 samples, 0.04%)</title><rect x="64.7945%" y="629" width="0.0395%" height="15" fill="rgb(246,88,19)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.04%)</title><rect x="64.7945%" y="613" width="0.0395%" height="15" fill="rgb(206,81,49)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="623.50"></text></g><g><title>zenoh_transport::manager::TransportManager::new::{{closure}} (11 samples, 0.04%)</title><rect x="64.7945%" y="597" width="0.0395%" height="15" fill="rgb(232,144,18)" fg:x="18031" fg:w="11"/><text x="65.0445%" y="607.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.04%)</title><rect x="64.7980%" y="581" width="0.0359%" height="15" fill="rgb(235,2,27)" fg:x="18032" fg:w="10"/><text x="65.0480%" y="591.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (9 samples, 0.03%)</title><rect x="64.8016%" y="565" width="0.0323%" height="15" fill="rgb(239,157,39)" fg:x="18033" fg:w="9"/><text x="65.0516%" y="575.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (9 samples, 0.03%)</title><rect x="64.8016%" y="549" width="0.0323%" height="15" fill="rgb(220,11,17)" fg:x="18033" fg:w="9"/><text x="65.0516%" y="559.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::{{closure}} (6 samples, 0.02%)</title><rect x="64.8124%" y="533" width="0.0216%" height="15" fill="rgb(243,94,50)" fg:x="18036" fg:w="6"/><text x="65.0624%" y="543.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (4 samples, 0.01%)</title><rect x="64.9418%" y="501" width="0.0144%" height="15" fill="rgb(218,22,0)" fg:x="18072" fg:w="4"/><text x="65.1918%" y="511.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="64.9418%" y="485" width="0.0144%" height="15" fill="rgb(249,70,21)" fg:x="18072" fg:w="4"/><text x="65.1918%" y="495.50"></text></g><g><title>async_io::reactor::Reactor::notify (10 samples, 0.04%)</title><rect x="64.9633%" y="437" width="0.0359%" height="15" fill="rgb(245,111,46)" fg:x="18078" fg:w="10"/><text x="65.2133%" y="447.50"></text></g><g><title>polling::Poller::notify (10 samples, 0.04%)</title><rect x="64.9633%" y="421" width="0.0359%" height="15" fill="rgb(244,183,12)" fg:x="18078" fg:w="10"/><text x="65.2133%" y="431.50"></text></g><g><title>polling::epoll::Poller::notify (10 samples, 0.04%)</title><rect x="64.9633%" y="405" width="0.0359%" height="15" fill="rgb(207,117,0)" fg:x="18078" fg:w="10"/><text x="65.2133%" y="415.50"></text></g><g><title>write (10 samples, 0.04%)</title><rect x="64.9633%" y="389" width="0.0359%" height="15" fill="rgb(206,20,43)" fg:x="18078" fg:w="10"/><text x="65.2133%" y="399.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="64.9669%" y="373" width="0.0323%" height="15" fill="rgb(221,104,11)" fg:x="18079" fg:w="9"/><text x="65.2169%" y="383.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="64.9669%" y="357" width="0.0323%" height="15" fill="rgb(254,36,50)" fg:x="18079" fg:w="9"/><text x="65.2169%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="64.9669%" y="341" width="0.0323%" height="15" fill="rgb(252,17,15)" fg:x="18079" fg:w="9"/><text x="65.2169%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="64.9705%" y="325" width="0.0287%" height="15" fill="rgb(219,129,43)" fg:x="18080" fg:w="8"/><text x="65.2205%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="64.9849%" y="309" width="0.0144%" height="15" fill="rgb(205,34,45)" fg:x="18084" fg:w="4"/><text x="65.2349%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="64.9885%" y="293" width="0.0108%" height="15" fill="rgb(251,201,32)" fg:x="18085" fg:w="3"/><text x="65.2385%" y="303.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (13 samples, 0.05%)</title><rect x="64.9598%" y="485" width="0.0467%" height="15" fill="rgb(205,56,0)" fg:x="18077" fg:w="13"/><text x="65.2098%" y="495.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (13 samples, 0.05%)</title><rect x="64.9598%" y="469" width="0.0467%" height="15" fill="rgb(211,193,27)" fg:x="18077" fg:w="13"/><text x="65.2098%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (12 samples, 0.04%)</title><rect x="64.9633%" y="453" width="0.0431%" height="15" fill="rgb(231,100,42)" fg:x="18078" fg:w="12"/><text x="65.2133%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="65.1071%" y="405" width="0.0108%" height="15" fill="rgb(245,85,27)" fg:x="18118" fg:w="3"/><text x="65.3571%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="65.2939%" y="213" width="0.0108%" height="15" fill="rgb(241,76,24)" fg:x="18170" fg:w="3"/><text x="65.5439%" y="223.50"></text></g><g><title>recv (177 samples, 0.64%)</title><rect x="65.2652%" y="229" width="0.6361%" height="15" fill="rgb(249,157,15)" fg:x="18162" fg:w="177"/><text x="65.5152%" y="239.50"></text></g><g><title>[unknown] (166 samples, 0.60%)</title><rect x="65.3047%" y="213" width="0.5965%" height="15" fill="rgb(222,218,25)" fg:x="18173" fg:w="166"/><text x="65.5547%" y="223.50"></text></g><g><title>[unknown] (164 samples, 0.59%)</title><rect x="65.3119%" y="197" width="0.5893%" height="15" fill="rgb(252,156,52)" fg:x="18175" fg:w="164"/><text x="65.5619%" y="207.50"></text></g><g><title>[unknown] (164 samples, 0.59%)</title><rect x="65.3119%" y="181" width="0.5893%" height="15" fill="rgb(211,185,7)" fg:x="18175" fg:w="164"/><text x="65.5619%" y="191.50"></text></g><g><title>[unknown] (155 samples, 0.56%)</title><rect x="65.3443%" y="165" width="0.5570%" height="15" fill="rgb(234,108,24)" fg:x="18184" fg:w="155"/><text x="65.5943%" y="175.50"></text></g><g><title>[unknown] (139 samples, 0.50%)</title><rect x="65.4018%" y="149" width="0.4995%" height="15" fill="rgb(227,218,2)" fg:x="18200" fg:w="139"/><text x="65.6518%" y="159.50"></text></g><g><title>[unknown] (128 samples, 0.46%)</title><rect x="65.4413%" y="133" width="0.4600%" height="15" fill="rgb(224,0,36)" fg:x="18211" fg:w="128"/><text x="65.6913%" y="143.50"></text></g><g><title>[unknown] (91 samples, 0.33%)</title><rect x="65.5742%" y="117" width="0.3270%" height="15" fill="rgb(233,201,10)" fg:x="18248" fg:w="91"/><text x="65.8242%" y="127.50"></text></g><g><title>[unknown] (72 samples, 0.26%)</title><rect x="65.6425%" y="101" width="0.2587%" height="15" fill="rgb(252,209,14)" fg:x="18267" fg:w="72"/><text x="65.8925%" y="111.50"></text></g><g><title>[unknown] (54 samples, 0.19%)</title><rect x="65.7072%" y="85" width="0.1940%" height="15" fill="rgb(205,93,49)" fg:x="18285" fg:w="54"/><text x="65.9572%" y="95.50"></text></g><g><title>[unknown] (37 samples, 0.13%)</title><rect x="65.7683%" y="69" width="0.1330%" height="15" fill="rgb(234,116,45)" fg:x="18302" fg:w="37"/><text x="66.0183%" y="79.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="65.8222%" y="53" width="0.0791%" height="15" fill="rgb(248,89,35)" fg:x="18317" fg:w="22"/><text x="66.0722%" y="63.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="65.8905%" y="37" width="0.0108%" height="15" fill="rgb(233,167,45)" fg:x="18336" fg:w="3"/><text x="66.1405%" y="47.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (183 samples, 0.66%)</title><rect x="65.2544%" y="293" width="0.6576%" height="15" fill="rgb(248,228,14)" fg:x="18159" fg:w="183"/><text x="65.5044%" y="303.50"></text></g><g><title>std::sys_common::net::TcpStream::read (180 samples, 0.65%)</title><rect x="65.2652%" y="277" width="0.6468%" height="15" fill="rgb(246,91,14)" fg:x="18162" fg:w="180"/><text x="65.5152%" y="287.50"></text></g><g><title>std::sys::unix::net::Socket::read (180 samples, 0.65%)</title><rect x="65.2652%" y="261" width="0.6468%" height="15" fill="rgb(227,142,5)" fg:x="18162" fg:w="180"/><text x="65.5152%" y="271.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (180 samples, 0.65%)</title><rect x="65.2652%" y="245" width="0.6468%" height="15" fill="rgb(221,63,33)" fg:x="18162" fg:w="180"/><text x="65.5152%" y="255.50"></text></g><g><title>std::sys::unix::cvt (3 samples, 0.01%)</title><rect x="65.9013%" y="229" width="0.0108%" height="15" fill="rgb(233,49,0)" fg:x="18339" fg:w="3"/><text x="66.1513%" y="239.50"></text></g><g><title>std::io::error::Error::last_os_error (3 samples, 0.01%)</title><rect x="65.9013%" y="213" width="0.0108%" height="15" fill="rgb(251,115,38)" fg:x="18339" fg:w="3"/><text x="66.1513%" y="223.50"></text></g><g><title>std::sys::unix::os::errno (3 samples, 0.01%)</title><rect x="65.9013%" y="197" width="0.0108%" height="15" fill="rgb(231,214,32)" fg:x="18339" fg:w="3"/><text x="66.1513%" y="207.50"></text></g><g><title>__errno_location (3 samples, 0.01%)</title><rect x="65.9013%" y="181" width="0.0108%" height="15" fill="rgb(248,73,46)" fg:x="18339" fg:w="3"/><text x="66.1513%" y="191.50"></text></g><g><title>async_io::Async&lt;T&gt;::get_ref (9 samples, 0.03%)</title><rect x="65.9156%" y="293" width="0.0323%" height="15" fill="rgb(237,156,4)" fg:x="18343" fg:w="9"/><text x="66.1656%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (9 samples, 0.03%)</title><rect x="65.9156%" y="277" width="0.0323%" height="15" fill="rgb(227,132,2)" fg:x="18343" fg:w="9"/><text x="66.1656%" y="287.50"></text></g><g><title>polling::Poller::modify (17 samples, 0.06%)</title><rect x="65.9552%" y="261" width="0.0611%" height="15" fill="rgb(248,161,9)" fg:x="18354" fg:w="17"/><text x="66.2052%" y="271.50"></text></g><g><title>polling::epoll::Poller::modify (17 samples, 0.06%)</title><rect x="65.9552%" y="245" width="0.0611%" height="15" fill="rgb(238,77,38)" fg:x="18354" fg:w="17"/><text x="66.2052%" y="255.50"></text></g><g><title>polling::epoll::Poller::ctl (17 samples, 0.06%)</title><rect x="65.9552%" y="229" width="0.0611%" height="15" fill="rgb(222,166,40)" fg:x="18354" fg:w="17"/><text x="66.2052%" y="239.50"></text></g><g><title>epoll_ctl (17 samples, 0.06%)</title><rect x="65.9552%" y="213" width="0.0611%" height="15" fill="rgb(214,168,45)" fg:x="18354" fg:w="17"/><text x="66.2052%" y="223.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="65.9552%" y="197" width="0.0611%" height="15" fill="rgb(226,64,37)" fg:x="18354" fg:w="17"/><text x="66.2052%" y="207.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="65.9552%" y="181" width="0.0611%" height="15" fill="rgb(232,210,43)" fg:x="18354" fg:w="17"/><text x="66.2052%" y="191.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="65.9552%" y="165" width="0.0611%" height="15" fill="rgb(214,76,33)" fg:x="18354" fg:w="17"/><text x="66.2052%" y="175.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="65.9587%" y="149" width="0.0575%" height="15" fill="rgb(210,78,5)" fg:x="18355" fg:w="16"/><text x="66.2087%" y="159.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="65.9803%" y="133" width="0.0359%" height="15" fill="rgb(211,107,37)" fg:x="18361" fg:w="10"/><text x="66.2303%" y="143.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="66.0019%" y="117" width="0.0144%" height="15" fill="rgb(249,67,16)" fg:x="18367" fg:w="4"/><text x="66.2519%" y="127.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (218 samples, 0.78%)</title><rect x="65.2436%" y="309" width="0.7834%" height="15" fill="rgb(222,114,31)" fg:x="18156" fg:w="218"/><text x="65.4936%" y="319.50"></text></g><g><title>async_io::Async&lt;T&gt;::poll_readable (22 samples, 0.08%)</title><rect x="65.9480%" y="293" width="0.0791%" height="15" fill="rgb(242,118,19)" fg:x="18352" fg:w="22"/><text x="66.1980%" y="303.50"></text></g><g><title>async_io::reactor::Source::poll_ready (22 samples, 0.08%)</title><rect x="65.9480%" y="277" width="0.0791%" height="15" fill="rgb(223,115,1)" fg:x="18352" fg:w="22"/><text x="66.1980%" y="287.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.01%)</title><rect x="66.0162%" y="261" width="0.0108%" height="15" fill="rgb(241,182,54)" fg:x="18371" fg:w="3"/><text x="66.2662%" y="271.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.01%)</title><rect x="66.0162%" y="245" width="0.0108%" height="15" fill="rgb(244,166,36)" fg:x="18371" fg:w="3"/><text x="66.2662%" y="255.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (3 samples, 0.01%)</title><rect x="66.0162%" y="229" width="0.0108%" height="15" fill="rgb(241,52,43)" fg:x="18371" fg:w="3"/><text x="66.2662%" y="239.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (233 samples, 0.84%)</title><rect x="65.2185%" y="357" width="0.8373%" height="15" fill="rgb(236,82,9)" fg:x="18149" fg:w="233"/><text x="65.4685%" y="367.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (230 samples, 0.83%)</title><rect x="65.2293%" y="341" width="0.8265%" height="15" fill="rgb(241,119,0)" fg:x="18152" fg:w="230"/><text x="65.4793%" y="351.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (230 samples, 0.83%)</title><rect x="65.2293%" y="325" width="0.8265%" height="15" fill="rgb(221,19,22)" fg:x="18152" fg:w="230"/><text x="65.4793%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.03%)</title><rect x="66.0270%" y="309" width="0.0287%" height="15" fill="rgb(254,144,35)" fg:x="18374" fg:w="8"/><text x="66.2770%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (262 samples, 0.94%)</title><rect x="65.1179%" y="389" width="0.9415%" height="15" fill="rgb(246,132,30)" fg:x="18121" fg:w="262"/><text x="65.3679%" y="399.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (254 samples, 0.91%)</title><rect x="65.1466%" y="373" width="0.9127%" height="15" fill="rgb(234,69,28)" fg:x="18129" fg:w="254"/><text x="65.3966%" y="383.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (265 samples, 0.95%)</title><rect x="65.1179%" y="405" width="0.9523%" height="15" fill="rgb(219,106,47)" fg:x="18121" fg:w="265"/><text x="65.3679%" y="415.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}}::read::{{closure}} (291 samples, 1.05%)</title><rect x="65.0891%" y="421" width="1.0457%" height="15" fill="rgb(218,79,24)" fg:x="18113" fg:w="291"/><text x="65.3391%" y="431.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact (18 samples, 0.06%)</title><rect x="66.0701%" y="405" width="0.0647%" height="15" fill="rgb(225,26,21)" fg:x="18386" fg:w="18"/><text x="66.3201%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (17 samples, 0.06%)</title><rect x="66.0737%" y="389" width="0.0611%" height="15" fill="rgb(217,68,49)" fg:x="18387" fg:w="17"/><text x="66.3237%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.06%)</title><rect x="66.0737%" y="373" width="0.0611%" height="15" fill="rgb(220,204,28)" fg:x="18387" fg:w="17"/><text x="66.3237%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.06%)</title><rect x="66.0737%" y="357" width="0.0611%" height="15" fill="rgb(237,208,43)" fg:x="18387" fg:w="17"/><text x="66.3237%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.06%)</title><rect x="66.0737%" y="341" width="0.0611%" height="15" fill="rgb(213,97,42)" fg:x="18387" fg:w="17"/><text x="66.3237%" y="351.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.06%)</title><rect x="66.0737%" y="325" width="0.0611%" height="15" fill="rgb(238,96,52)" fg:x="18387" fg:w="17"/><text x="66.3237%" y="335.50"></text></g><g><title>malloc (15 samples, 0.05%)</title><rect x="66.0809%" y="309" width="0.0539%" height="15" fill="rgb(228,14,13)" fg:x="18389" fg:w="15"/><text x="66.3309%" y="319.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="66.1133%" y="293" width="0.0216%" height="15" fill="rgb(219,123,13)" fg:x="18398" fg:w="6"/><text x="66.3633%" y="303.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (295 samples, 1.06%)</title><rect x="65.0819%" y="437" width="1.0601%" height="15" fill="rgb(216,144,17)" fg:x="18111" fg:w="295"/><text x="65.3319%" y="447.50"></text></g><g><title>&lt;async_std::future::future::race::Race&lt;L,R&gt; as core::future::future::Future&gt;::poll (317 samples, 1.14%)</title><rect x="65.0065%" y="485" width="1.1391%" height="15" fill="rgb(230,228,29)" fg:x="18090" fg:w="317"/><text x="65.2565%" y="495.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (311 samples, 1.12%)</title><rect x="65.0280%" y="469" width="1.1176%" height="15" fill="rgb(233,18,5)" fg:x="18096" fg:w="311"/><text x="65.2780%" y="479.50"></text></g><g><title>&lt;async_std::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (311 samples, 1.12%)</title><rect x="65.0280%" y="453" width="1.1176%" height="15" fill="rgb(233,197,12)" fg:x="18096" fg:w="311"/><text x="65.2780%" y="463.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (331 samples, 1.19%)</title><rect x="64.9598%" y="501" width="1.1894%" height="15" fill="rgb(234,140,29)" fg:x="18077" fg:w="331"/><text x="65.2098%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (3 samples, 0.01%)</title><rect x="66.1780%" y="485" width="0.0108%" height="15" fill="rgb(233,113,19)" fg:x="18416" fg:w="3"/><text x="66.4280%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (6 samples, 0.02%)</title><rect x="66.2103%" y="469" width="0.0216%" height="15" fill="rgb(246,209,13)" fg:x="18425" fg:w="6"/><text x="66.4603%" y="479.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (6 samples, 0.02%)</title><rect x="66.2103%" y="453" width="0.0216%" height="15" fill="rgb(242,79,54)" fg:x="18425" fg:w="6"/><text x="66.4603%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (5 samples, 0.02%)</title><rect x="66.2139%" y="437" width="0.0180%" height="15" fill="rgb(219,73,16)" fg:x="18426" fg:w="5"/><text x="66.4639%" y="447.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::deref::Deref&gt;::deref (13 samples, 0.05%)</title><rect x="66.5589%" y="405" width="0.0467%" height="15" fill="rgb(224,52,10)" fg:x="18522" fg:w="13"/><text x="66.8089%" y="415.50"></text></g><g><title>zenoh_buffers::zslice::ZSliceBuffer::as_slice (13 samples, 0.05%)</title><rect x="66.5589%" y="389" width="0.0467%" height="15" fill="rgb(237,179,5)" fg:x="18522" fg:w="13"/><text x="66.8089%" y="399.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.03%)</title><rect x="66.5732%" y="373" width="0.0323%" height="15" fill="rgb(231,20,6)" fg:x="18526" fg:w="9"/><text x="66.8232%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (9 samples, 0.03%)</title><rect x="66.5732%" y="357" width="0.0323%" height="15" fill="rgb(253,171,45)" fg:x="18526" fg:w="9"/><text x="66.8232%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (31 samples, 0.11%)</title><rect x="66.4978%" y="437" width="0.1114%" height="15" fill="rgb(230,75,49)" fg:x="18505" fg:w="31"/><text x="66.7478%" y="447.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (31 samples, 0.11%)</title><rect x="66.4978%" y="421" width="0.1114%" height="15" fill="rgb(216,83,46)" fg:x="18505" fg:w="31"/><text x="66.7478%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (56 samples, 0.20%)</title><rect x="66.4151%" y="453" width="0.2012%" height="15" fill="rgb(236,56,9)" fg:x="18482" fg:w="56"/><text x="66.6651%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.04%)</title><rect x="66.6379%" y="437" width="0.0395%" height="15" fill="rgb(215,28,34)" fg:x="18544" fg:w="11"/><text x="66.8879%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.05%)</title><rect x="66.7026%" y="421" width="0.0503%" height="15" fill="rgb(230,222,20)" fg:x="18562" fg:w="14"/><text x="66.9526%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (22 samples, 0.08%)</title><rect x="66.7529%" y="421" width="0.0791%" height="15" fill="rgb(235,209,51)" fg:x="18576" fg:w="22"/><text x="67.0029%" y="431.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (22 samples, 0.08%)</title><rect x="66.7529%" y="405" width="0.0791%" height="15" fill="rgb(235,167,1)" fg:x="18576" fg:w="22"/><text x="67.0029%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (20 samples, 0.07%)</title><rect x="66.7601%" y="389" width="0.0719%" height="15" fill="rgb(248,220,0)" fg:x="18578" fg:w="20"/><text x="67.0101%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (16 samples, 0.06%)</title><rect x="66.7745%" y="373" width="0.0575%" height="15" fill="rgb(239,0,18)" fg:x="18582" fg:w="16"/><text x="67.0245%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (16 samples, 0.06%)</title><rect x="66.7745%" y="357" width="0.0575%" height="15" fill="rgb(229,179,11)" fg:x="18582" fg:w="16"/><text x="67.0245%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (8 samples, 0.03%)</title><rect x="66.8643%" y="405" width="0.0287%" height="15" fill="rgb(226,116,53)" fg:x="18607" fg:w="8"/><text x="67.1143%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (7 samples, 0.03%)</title><rect x="66.8931%" y="405" width="0.0252%" height="15" fill="rgb(218,1,49)" fg:x="18615" fg:w="7"/><text x="67.1431%" y="415.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (7 samples, 0.03%)</title><rect x="66.8931%" y="389" width="0.0252%" height="15" fill="rgb(208,184,47)" fg:x="18615" fg:w="7"/><text x="67.1431%" y="399.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (4 samples, 0.01%)</title><rect x="66.9254%" y="373" width="0.0144%" height="15" fill="rgb(238,174,3)" fg:x="18624" fg:w="4"/><text x="67.1754%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_string (7 samples, 0.03%)</title><rect x="66.9182%" y="389" width="0.0252%" height="15" fill="rgb(247,188,6)" fg:x="18622" fg:w="7"/><text x="67.1682%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_key_expr (14 samples, 0.05%)</title><rect x="66.9182%" y="405" width="0.0503%" height="15" fill="rgb(211,165,46)" fg:x="18622" fg:w="14"/><text x="67.1682%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (7 samples, 0.03%)</title><rect x="66.9434%" y="389" width="0.0252%" height="15" fill="rgb(222,190,10)" fg:x="18629" fg:w="7"/><text x="67.1934%" y="399.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (7 samples, 0.03%)</title><rect x="66.9434%" y="373" width="0.0252%" height="15" fill="rgb(206,185,3)" fg:x="18629" fg:w="7"/><text x="67.1934%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (4 samples, 0.01%)</title><rect x="66.9541%" y="357" width="0.0144%" height="15" fill="rgb(244,125,37)" fg:x="18632" fg:w="4"/><text x="67.2041%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declaration (39 samples, 0.14%)</title><rect x="66.8320%" y="421" width="0.1401%" height="15" fill="rgb(211,43,7)" fg:x="18598" fg:w="39"/><text x="67.0820%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.05%)</title><rect x="66.9757%" y="421" width="0.0503%" height="15" fill="rgb(250,41,42)" fg:x="18638" fg:w="14"/><text x="67.2257%" y="431.50"></text></g><g><title>core::ptr::write (14 samples, 0.05%)</title><rect x="66.9757%" y="405" width="0.0503%" height="15" fill="rgb(254,54,42)" fg:x="18638" fg:w="14"/><text x="67.2257%" y="415.50"></text></g><g><title>__rdl_alloc (3 samples, 0.01%)</title><rect x="67.0296%" y="309" width="0.0108%" height="15" fill="rgb(213,71,43)" fg:x="18653" fg:w="3"/><text x="67.2796%" y="319.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="67.0404%" y="309" width="0.0144%" height="15" fill="rgb(249,3,44)" fg:x="18656" fg:w="4"/><text x="67.2904%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="67.4033%" y="277" width="0.0108%" height="15" fill="rgb(229,80,41)" fg:x="18757" fg:w="3"/><text x="67.6533%" y="287.50"></text></g><g><title>[libc.so.6] (70 samples, 0.25%)</title><rect x="67.1698%" y="293" width="0.2515%" height="15" fill="rgb(231,25,28)" fg:x="18692" fg:w="70"/><text x="67.4198%" y="303.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declare (228 samples, 0.82%)</title><rect x="66.6164%" y="453" width="0.8193%" height="15" fill="rgb(208,79,48)" fg:x="18538" fg:w="228"/><text x="66.8664%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_declarations (211 samples, 0.76%)</title><rect x="66.6774%" y="437" width="0.7582%" height="15" fill="rgb(207,196,38)" fg:x="18555" fg:w="211"/><text x="66.9274%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (114 samples, 0.41%)</title><rect x="67.0260%" y="421" width="0.4097%" height="15" fill="rgb(228,105,49)" fg:x="18652" fg:w="114"/><text x="67.2760%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (114 samples, 0.41%)</title><rect x="67.0260%" y="405" width="0.4097%" height="15" fill="rgb(237,99,15)" fg:x="18652" fg:w="114"/><text x="67.2760%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (113 samples, 0.41%)</title><rect x="67.0296%" y="389" width="0.4061%" height="15" fill="rgb(224,207,46)" fg:x="18653" fg:w="113"/><text x="67.2796%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (113 samples, 0.41%)</title><rect x="67.0296%" y="373" width="0.4061%" height="15" fill="rgb(249,117,50)" fg:x="18653" fg:w="113"/><text x="67.2796%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113 samples, 0.41%)</title><rect x="67.0296%" y="357" width="0.4061%" height="15" fill="rgb(248,17,13)" fg:x="18653" fg:w="113"/><text x="67.2796%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113 samples, 0.41%)</title><rect x="67.0296%" y="341" width="0.4061%" height="15" fill="rgb(228,187,36)" fg:x="18653" fg:w="113"/><text x="67.2796%" y="351.50"></text></g><g><title>alloc::alloc::alloc (113 samples, 0.41%)</title><rect x="67.0296%" y="325" width="0.4061%" height="15" fill="rgb(234,132,20)" fg:x="18653" fg:w="113"/><text x="67.2796%" y="335.50"></text></g><g><title>malloc (106 samples, 0.38%)</title><rect x="67.0548%" y="309" width="0.3809%" height="15" fill="rgb(209,170,46)" fg:x="18660" fg:w="106"/><text x="67.3048%" y="319.50"></text></g><g><title>__lll_lock_wait_private (4 samples, 0.01%)</title><rect x="67.4213%" y="293" width="0.0144%" height="15" fill="rgb(237,23,19)" fg:x="18762" fg:w="4"/><text x="67.6713%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="67.4213%" y="277" width="0.0144%" height="15" fill="rgb(227,21,26)" fg:x="18762" fg:w="4"/><text x="67.6713%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="67.4249%" y="261" width="0.0108%" height="15" fill="rgb(222,220,48)" fg:x="18763" fg:w="3"/><text x="67.6749%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="67.4249%" y="245" width="0.0108%" height="15" fill="rgb(214,9,16)" fg:x="18763" fg:w="3"/><text x="67.6749%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="67.4249%" y="229" width="0.0108%" height="15" fill="rgb(209,73,30)" fg:x="18763" fg:w="3"/><text x="67.6749%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="67.4249%" y="213" width="0.0108%" height="15" fill="rgb(207,20,33)" fg:x="18763" fg:w="3"/><text x="67.6749%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="67.4249%" y="197" width="0.0108%" height="15" fill="rgb(219,153,12)" fg:x="18763" fg:w="3"/><text x="67.6749%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="67.4249%" y="181" width="0.0108%" height="15" fill="rgb(235,97,25)" fg:x="18763" fg:w="3"/><text x="67.6749%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="67.4249%" y="165" width="0.0108%" height="15" fill="rgb(244,30,34)" fg:x="18763" fg:w="3"/><text x="67.6749%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="67.4249%" y="149" width="0.0108%" height="15" fill="rgb(214,106,45)" fg:x="18763" fg:w="3"/><text x="67.6749%" y="159.50"></text></g><g><title>&lt;zenoh_protocol_core::Priority as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="67.4357%" y="453" width="0.0144%" height="15" fill="rgb(226,41,9)" fg:x="18766" fg:w="4"/><text x="67.6857%" y="463.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="67.4501%" y="453" width="0.0395%" height="15" fill="rgb(253,139,29)" fg:x="18770" fg:w="11"/><text x="67.7001%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (351 samples, 1.26%)</title><rect x="66.2319%" y="469" width="1.2613%" height="15" fill="rgb(213,205,39)" fg:x="18431" fg:w="351"/><text x="66.4819%" y="479.50"></text></g><g><title>[libc.so.6] (26 samples, 0.09%)</title><rect x="67.4932%" y="469" width="0.0934%" height="15" fill="rgb(209,27,10)" fg:x="18782" fg:w="26"/><text x="67.7432%" y="479.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="67.8633%" y="293" width="0.1581%" height="15" fill="rgb(249,142,16)" fg:x="18885" fg:w="44"/><text x="68.1133%" y="303.50"></text></g><g><title>[unknown] (33 samples, 0.12%)</title><rect x="67.9028%" y="277" width="0.1186%" height="15" fill="rgb(242,65,12)" fg:x="18896" fg:w="33"/><text x="68.1528%" y="287.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="67.9064%" y="261" width="0.1150%" height="15" fill="rgb(232,48,10)" fg:x="18897" fg:w="32"/><text x="68.1564%" y="271.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="67.9064%" y="245" width="0.1150%" height="15" fill="rgb(253,67,19)" fg:x="18897" fg:w="32"/><text x="68.1564%" y="255.50"></text></g><g><title>[unknown] (28 samples, 0.10%)</title><rect x="67.9208%" y="229" width="0.1006%" height="15" fill="rgb(227,93,29)" fg:x="18901" fg:w="28"/><text x="68.1708%" y="239.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="67.9280%" y="213" width="0.0934%" height="15" fill="rgb(226,189,53)" fg:x="18903" fg:w="26"/><text x="68.1780%" y="223.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="67.9424%" y="197" width="0.0791%" height="15" fill="rgb(223,224,1)" fg:x="18907" fg:w="22"/><text x="68.1924%" y="207.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="67.9531%" y="181" width="0.0683%" height="15" fill="rgb(221,84,32)" fg:x="18910" fg:w="19"/><text x="68.2031%" y="191.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="67.9711%" y="165" width="0.0503%" height="15" fill="rgb(214,189,28)" fg:x="18915" fg:w="14"/><text x="68.2211%" y="175.50"></text></g><g><title>[libc.so.6] (65 samples, 0.23%)</title><rect x="67.8597%" y="309" width="0.2336%" height="15" fill="rgb(234,7,52)" fg:x="18884" fg:w="65"/><text x="68.1097%" y="319.50"></text></g><g><title>__mprotect (20 samples, 0.07%)</title><rect x="68.0214%" y="293" width="0.0719%" height="15" fill="rgb(249,73,31)" fg:x="18929" fg:w="20"/><text x="68.2714%" y="303.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="68.0214%" y="277" width="0.0719%" height="15" fill="rgb(253,153,41)" fg:x="18929" fg:w="20"/><text x="68.2714%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="68.0250%" y="261" width="0.0683%" height="15" fill="rgb(249,52,34)" fg:x="18930" fg:w="19"/><text x="68.2750%" y="271.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="68.0250%" y="245" width="0.0683%" height="15" fill="rgb(236,177,47)" fg:x="18930" fg:w="19"/><text x="68.2750%" y="255.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="68.0286%" y="229" width="0.0647%" height="15" fill="rgb(252,185,45)" fg:x="18931" fg:w="18"/><text x="68.2786%" y="239.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="68.0322%" y="213" width="0.0611%" height="15" fill="rgb(251,15,30)" fg:x="18932" fg:w="17"/><text x="68.2822%" y="223.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="68.0394%" y="197" width="0.0539%" height="15" fill="rgb(233,31,4)" fg:x="18934" fg:w="15"/><text x="68.2894%" y="207.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="68.0574%" y="181" width="0.0359%" height="15" fill="rgb(254,44,24)" fg:x="18939" fg:w="10"/><text x="68.3074%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="68.0825%" y="165" width="0.0108%" height="15" fill="rgb(218,54,1)" fg:x="18946" fg:w="3"/><text x="68.3325%" y="175.50"></text></g><g><title>[libc.so.6] (214 samples, 0.77%)</title><rect x="67.6657%" y="325" width="0.7690%" height="15" fill="rgb(243,209,39)" fg:x="18830" fg:w="214"/><text x="67.9157%" y="335.50"></text></g><g><title>[unknown] (95 samples, 0.34%)</title><rect x="68.0933%" y="309" width="0.3414%" height="15" fill="rgb(206,75,33)" fg:x="18949" fg:w="95"/><text x="68.3433%" y="319.50"></text></g><g><title>[unknown] (52 samples, 0.19%)</title><rect x="68.2478%" y="293" width="0.1869%" height="15" fill="rgb(223,108,18)" fg:x="18992" fg:w="52"/><text x="68.4978%" y="303.50"></text></g><g><title>[unknown] (48 samples, 0.17%)</title><rect x="68.2622%" y="277" width="0.1725%" height="15" fill="rgb(244,89,31)" fg:x="18996" fg:w="48"/><text x="68.5122%" y="287.50"></text></g><g><title>[unknown] (47 samples, 0.17%)</title><rect x="68.2658%" y="261" width="0.1689%" height="15" fill="rgb(222,167,27)" fg:x="18997" fg:w="47"/><text x="68.5158%" y="271.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="68.3197%" y="245" width="0.1150%" height="15" fill="rgb(247,41,16)" fg:x="19012" fg:w="32"/><text x="68.5697%" y="255.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="68.3664%" y="229" width="0.0683%" height="15" fill="rgb(233,168,40)" fg:x="19025" fg:w="19"/><text x="68.6164%" y="239.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="68.3808%" y="213" width="0.0539%" height="15" fill="rgb(205,211,8)" fg:x="19029" fg:w="15"/><text x="68.6308%" y="223.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="68.3880%" y="197" width="0.0467%" height="15" fill="rgb(238,105,11)" fg:x="19031" fg:w="13"/><text x="68.6380%" y="207.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="68.4023%" y="181" width="0.0323%" height="15" fill="rgb(223,142,52)" fg:x="19035" fg:w="9"/><text x="68.6523%" y="191.50"></text></g><g><title>[libc.so.6] (254 samples, 0.91%)</title><rect x="67.6405%" y="341" width="0.9127%" height="15" fill="rgb(238,51,33)" fg:x="18823" fg:w="254"/><text x="67.8905%" y="351.50"></text></g><g><title>[unknown] (33 samples, 0.12%)</title><rect x="68.4347%" y="325" width="0.1186%" height="15" fill="rgb(231,188,43)" fg:x="19044" fg:w="33"/><text x="68.6847%" y="335.50"></text></g><g><title>[unknown] (33 samples, 0.12%)</title><rect x="68.4347%" y="309" width="0.1186%" height="15" fill="rgb(216,92,17)" fg:x="19044" fg:w="33"/><text x="68.6847%" y="319.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="68.4383%" y="293" width="0.1150%" height="15" fill="rgb(228,2,40)" fg:x="19045" fg:w="32"/><text x="68.6883%" y="303.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="68.4383%" y="277" width="0.1150%" height="15" fill="rgb(226,73,15)" fg:x="19045" fg:w="32"/><text x="68.6883%" y="287.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="68.4670%" y="261" width="0.0862%" height="15" fill="rgb(227,66,46)" fg:x="19053" fg:w="24"/><text x="68.7170%" y="271.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="68.4742%" y="245" width="0.0791%" height="15" fill="rgb(209,71,6)" fg:x="19055" fg:w="22"/><text x="68.7242%" y="255.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="68.4922%" y="229" width="0.0611%" height="15" fill="rgb(246,100,25)" fg:x="19060" fg:w="17"/><text x="68.7422%" y="239.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="68.4994%" y="213" width="0.0539%" height="15" fill="rgb(248,185,27)" fg:x="19062" fg:w="15"/><text x="68.7494%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="68.5137%" y="197" width="0.0395%" height="15" fill="rgb(225,118,47)" fg:x="19066" fg:w="11"/><text x="68.7637%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="68.5389%" y="181" width="0.0144%" height="15" fill="rgb(220,185,44)" fg:x="19073" fg:w="4"/><text x="68.7889%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (266 samples, 0.96%)</title><rect x="67.6082%" y="405" width="0.9559%" height="15" fill="rgb(227,95,24)" fg:x="18814" fg:w="266"/><text x="67.8582%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (266 samples, 0.96%)</title><rect x="67.6082%" y="389" width="0.9559%" height="15" fill="rgb(252,84,24)" fg:x="18814" fg:w="266"/><text x="67.8582%" y="399.50"></text></g><g><title>alloc::alloc::realloc (266 samples, 0.96%)</title><rect x="67.6082%" y="373" width="0.9559%" height="15" fill="rgb(240,34,44)" fg:x="18814" fg:w="266"/><text x="67.8582%" y="383.50"></text></g><g><title>realloc (266 samples, 0.96%)</title><rect x="67.6082%" y="357" width="0.9559%" height="15" fill="rgb(209,72,54)" fg:x="18814" fg:w="266"/><text x="67.8582%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (272 samples, 0.98%)</title><rect x="67.5902%" y="453" width="0.9774%" height="15" fill="rgb(226,19,45)" fg:x="18809" fg:w="272"/><text x="67.8402%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (271 samples, 0.97%)</title><rect x="67.5938%" y="437" width="0.9738%" height="15" fill="rgb(246,7,45)" fg:x="18810" fg:w="271"/><text x="67.8438%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (269 samples, 0.97%)</title><rect x="67.6010%" y="421" width="0.9667%" height="15" fill="rgb(225,45,2)" fg:x="18812" fg:w="269"/><text x="67.8510%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (3 samples, 0.01%)</title><rect x="68.5748%" y="437" width="0.0108%" height="15" fill="rgb(221,80,29)" fg:x="19083" fg:w="3"/><text x="68.8248%" y="447.50"></text></g><g><title>[libc.so.6] (90 samples, 0.32%)</title><rect x="68.5856%" y="437" width="0.3234%" height="15" fill="rgb(228,11,19)" fg:x="19086" fg:w="90"/><text x="68.8356%" y="447.50"></text></g><g><title>[unknown] (67 samples, 0.24%)</title><rect x="68.6682%" y="421" width="0.2408%" height="15" fill="rgb(243,17,21)" fg:x="19109" fg:w="67"/><text x="68.9182%" y="431.50"></text></g><g><title>[unknown] (65 samples, 0.23%)</title><rect x="68.6754%" y="405" width="0.2336%" height="15" fill="rgb(243,88,8)" fg:x="19111" fg:w="65"/><text x="68.9254%" y="415.50"></text></g><g><title>[unknown] (57 samples, 0.20%)</title><rect x="68.7042%" y="389" width="0.2048%" height="15" fill="rgb(214,17,9)" fg:x="19119" fg:w="57"/><text x="68.9542%" y="399.50"></text></g><g><title>[unknown] (55 samples, 0.20%)</title><rect x="68.7114%" y="373" width="0.1976%" height="15" fill="rgb(232,169,15)" fg:x="19121" fg:w="55"/><text x="68.9614%" y="383.50"></text></g><g><title>[unknown] (31 samples, 0.11%)</title><rect x="68.7976%" y="357" width="0.1114%" height="15" fill="rgb(232,86,53)" fg:x="19145" fg:w="31"/><text x="69.0476%" y="367.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="68.8407%" y="341" width="0.0683%" height="15" fill="rgb(222,100,4)" fg:x="19157" fg:w="19"/><text x="69.0907%" y="351.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="68.8515%" y="325" width="0.0575%" height="15" fill="rgb(253,151,38)" fg:x="19160" fg:w="16"/><text x="69.1015%" y="335.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="68.8659%" y="309" width="0.0431%" height="15" fill="rgb(238,215,29)" fg:x="19164" fg:w="12"/><text x="69.1159%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="68.8803%" y="293" width="0.0287%" height="15" fill="rgb(205,128,53)" fg:x="19168" fg:w="8"/><text x="69.1303%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (369 samples, 1.33%)</title><rect x="67.5866%" y="469" width="1.3260%" height="15" fill="rgb(248,183,14)" fg:x="18808" fg:w="369"/><text x="67.8366%" y="479.50"></text></g><g><title>core::ptr::write (94 samples, 0.34%)</title><rect x="68.5748%" y="453" width="0.3378%" height="15" fill="rgb(244,172,35)" fg:x="19083" fg:w="94"/><text x="68.8248%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.03%)</title><rect x="68.9126%" y="469" width="0.0323%" height="15" fill="rgb(234,93,19)" fg:x="19177" fg:w="9"/><text x="69.1626%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.03%)</title><rect x="68.9126%" y="453" width="0.0323%" height="15" fill="rgb(227,109,7)" fg:x="19177" fg:w="9"/><text x="69.1626%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.03%)</title><rect x="68.9126%" y="437" width="0.0323%" height="15" fill="rgb(233,136,54)" fg:x="19177" fg:w="9"/><text x="69.1626%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.03%)</title><rect x="68.9126%" y="421" width="0.0323%" height="15" fill="rgb(233,19,40)" fg:x="19177" fg:w="9"/><text x="69.1626%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.03%)</title><rect x="68.9162%" y="405" width="0.0287%" height="15" fill="rgb(247,41,18)" fg:x="19178" fg:w="8"/><text x="69.1662%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.03%)</title><rect x="68.9162%" y="389" width="0.0287%" height="15" fill="rgb(220,34,34)" fg:x="19178" fg:w="8"/><text x="69.1662%" y="399.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.03%)</title><rect x="68.9162%" y="373" width="0.0287%" height="15" fill="rgb(222,135,32)" fg:x="19178" fg:w="8"/><text x="69.1662%" y="383.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="68.9198%" y="357" width="0.0252%" height="15" fill="rgb(214,80,19)" fg:x="19179" fg:w="7"/><text x="69.1698%" y="367.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="68.9270%" y="341" width="0.0180%" height="15" fill="rgb(234,54,46)" fg:x="19181" fg:w="5"/><text x="69.1770%" y="351.50"></text></g><g><title>zenoh_buffers::traits::reader::Reader::can_read (12 samples, 0.04%)</title><rect x="68.9449%" y="469" width="0.0431%" height="15" fill="rgb(251,48,23)" fg:x="19186" fg:w="12"/><text x="69.1949%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::remaining (11 samples, 0.04%)</title><rect x="68.9485%" y="453" width="0.0395%" height="15" fill="rgb(254,109,52)" fg:x="19187" fg:w="11"/><text x="69.1985%" y="463.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::get_pos (4 samples, 0.01%)</title><rect x="68.9881%" y="469" width="0.0144%" height="15" fill="rgb(240,186,19)" fg:x="19198" fg:w="4"/><text x="69.2381%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (794 samples, 2.85%)</title><rect x="66.1528%" y="501" width="2.8532%" height="15" fill="rgb(246,187,17)" fg:x="18409" fg:w="794"/><text x="66.4028%" y="511.50">&lt;z..</text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (784 samples, 2.82%)</title><rect x="66.1887%" y="485" width="2.8173%" height="15" fill="rgb(212,21,5)" fg:x="18419" fg:w="784"/><text x="66.4387%" y="495.50">&lt;z..</text></g><g><title>&lt;zenoh_sync::signal::Signal as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="69.0096%" y="501" width="0.0252%" height="15" fill="rgb(225,185,18)" fg:x="19204" fg:w="7"/><text x="69.2596%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="69.0096%" y="485" width="0.0252%" height="15" fill="rgb(245,114,17)" fg:x="19204" fg:w="7"/><text x="69.2596%" y="495.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="69.0348%" y="469" width="0.0108%" height="15" fill="rgb(223,164,24)" fg:x="19211" fg:w="3"/><text x="69.2848%" y="479.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (12 samples, 0.04%)</title><rect x="69.0348%" y="501" width="0.0431%" height="15" fill="rgb(211,228,3)" fg:x="19211" fg:w="12"/><text x="69.2848%" y="511.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (12 samples, 0.04%)</title><rect x="69.0348%" y="485" width="0.0431%" height="15" fill="rgb(223,16,38)" fg:x="19211" fg:w="12"/><text x="69.2848%" y="495.50"></text></g><g><title>async_std::utils::timer_after (9 samples, 0.03%)</title><rect x="69.0456%" y="469" width="0.0323%" height="15" fill="rgb(207,31,54)" fg:x="19214" fg:w="9"/><text x="69.2956%" y="479.50"></text></g><g><title>async_io::Timer::after (9 samples, 0.03%)</title><rect x="69.0456%" y="453" width="0.0323%" height="15" fill="rgb(220,39,11)" fg:x="19214" fg:w="9"/><text x="69.2956%" y="463.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.03%)</title><rect x="69.0456%" y="437" width="0.0323%" height="15" fill="rgb(235,185,0)" fg:x="19214" fg:w="9"/><text x="69.2956%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (9 samples, 0.03%)</title><rect x="69.0456%" y="421" width="0.0323%" height="15" fill="rgb(249,39,18)" fg:x="19214" fg:w="9"/><text x="69.2956%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (9 samples, 0.03%)</title><rect x="69.0456%" y="405" width="0.0323%" height="15" fill="rgb(240,110,33)" fg:x="19214" fg:w="9"/><text x="69.2956%" y="415.50"></text></g><g><title>clock_gettime (9 samples, 0.03%)</title><rect x="69.0456%" y="389" width="0.0323%" height="15" fill="rgb(210,92,42)" fg:x="19214" fg:w="9"/><text x="69.2956%" y="399.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.03%)</title><rect x="69.0528%" y="373" width="0.0252%" height="15" fill="rgb(218,215,28)" fg:x="19216" fg:w="7"/><text x="69.3028%" y="383.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="69.0779%" y="469" width="0.0108%" height="15" fill="rgb(238,215,36)" fg:x="19223" fg:w="3"/><text x="69.3279%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (3 samples, 0.01%)</title><rect x="69.0779%" y="453" width="0.0108%" height="15" fill="rgb(220,31,10)" fg:x="19223" fg:w="3"/><text x="69.3279%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (3 samples, 0.01%)</title><rect x="69.0779%" y="437" width="0.0108%" height="15" fill="rgb(212,93,14)" fg:x="19223" fg:w="3"/><text x="69.3279%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (3 samples, 0.01%)</title><rect x="69.0779%" y="421" width="0.0108%" height="15" fill="rgb(254,207,2)" fg:x="19223" fg:w="3"/><text x="69.3279%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;async_std::future::future::race::Race&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::link::rx_task_stream::{{closure}}::read::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::link::rx_task_stream::{{closure}}::stop::{{closure}}&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="69.0779%" y="501" width="0.0144%" height="15" fill="rgb(205,57,44)" fg:x="19223" fg:w="4"/><text x="69.3279%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (4 samples, 0.01%)</title><rect x="69.0779%" y="485" width="0.0144%" height="15" fill="rgb(226,151,19)" fg:x="19223" fg:w="4"/><text x="69.3279%" y="495.50"></text></g><g><title>zenoh_buffers::traits::reader::Reader::can_read (3 samples, 0.01%)</title><rect x="69.0923%" y="501" width="0.0108%" height="15" fill="rgb(230,72,30)" fg:x="19227" fg:w="3"/><text x="69.3423%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::remaining (3 samples, 0.01%)</title><rect x="69.0923%" y="485" width="0.0108%" height="15" fill="rgb(244,0,8)" fg:x="19227" fg:w="3"/><text x="69.3423%" y="495.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.03%)</title><rect x="69.1031%" y="453" width="0.0287%" height="15" fill="rgb(230,192,6)" fg:x="19230" fg:w="8"/><text x="69.3531%" y="463.50"></text></g><g><title>async_std::task::block_on::block_on (6 samples, 0.02%)</title><rect x="69.1102%" y="437" width="0.0216%" height="15" fill="rgb(233,207,13)" fg:x="19232" fg:w="6"/><text x="69.3602%" y="447.50"></text></g><g><title>async_std::task::builder::Builder::blocking (6 samples, 0.02%)</title><rect x="69.1102%" y="421" width="0.0216%" height="15" fill="rgb(206,227,7)" fg:x="19232" fg:w="6"/><text x="69.3602%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="69.1138%" y="405" width="0.0180%" height="15" fill="rgb(213,217,25)" fg:x="19233" fg:w="5"/><text x="69.3638%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="69.1174%" y="389" width="0.0144%" height="15" fill="rgb(249,75,4)" fg:x="19234" fg:w="4"/><text x="69.3674%" y="399.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (3 samples, 0.01%)</title><rect x="69.1210%" y="373" width="0.0108%" height="15" fill="rgb(225,114,18)" fg:x="19235" fg:w="3"/><text x="69.3710%" y="383.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3 samples, 0.01%)</title><rect x="69.1210%" y="357" width="0.0108%" height="15" fill="rgb(211,162,40)" fg:x="19235" fg:w="3"/><text x="69.3710%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.01%)</title><rect x="69.1210%" y="341" width="0.0108%" height="15" fill="rgb(206,49,29)" fg:x="19235" fg:w="3"/><text x="69.3710%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.03%)</title><rect x="69.1031%" y="485" width="0.0323%" height="15" fill="rgb(244,8,6)" fg:x="19230" fg:w="9"/><text x="69.3531%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="69.1031%" y="469" width="0.0323%" height="15" fill="rgb(231,194,28)" fg:x="19230" fg:w="9"/><text x="69.3531%" y="479.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (10 samples, 0.04%)</title><rect x="69.1031%" y="501" width="0.0359%" height="15" fill="rgb(210,69,5)" fg:x="19230" fg:w="10"/><text x="69.3531%" y="511.50"></text></g><g><title>[libc.so.6] (65 samples, 0.23%)</title><rect x="69.1498%" y="357" width="0.2336%" height="15" fill="rgb(216,186,12)" fg:x="19243" fg:w="65"/><text x="69.3998%" y="367.50"></text></g><g><title>[unknown] (57 samples, 0.20%)</title><rect x="69.1785%" y="341" width="0.2048%" height="15" fill="rgb(238,61,15)" fg:x="19251" fg:w="57"/><text x="69.4285%" y="351.50"></text></g><g><title>[unknown] (56 samples, 0.20%)</title><rect x="69.1821%" y="325" width="0.2012%" height="15" fill="rgb(226,104,1)" fg:x="19252" fg:w="56"/><text x="69.4321%" y="335.50"></text></g><g><title>[unknown] (56 samples, 0.20%)</title><rect x="69.1821%" y="309" width="0.2012%" height="15" fill="rgb(229,128,15)" fg:x="19252" fg:w="56"/><text x="69.4321%" y="319.50"></text></g><g><title>[unknown] (55 samples, 0.20%)</title><rect x="69.1857%" y="293" width="0.1976%" height="15" fill="rgb(247,110,15)" fg:x="19253" fg:w="55"/><text x="69.4357%" y="303.50"></text></g><g><title>[unknown] (47 samples, 0.17%)</title><rect x="69.2145%" y="277" width="0.1689%" height="15" fill="rgb(210,74,48)" fg:x="19261" fg:w="47"/><text x="69.4645%" y="287.50"></text></g><g><title>[unknown] (38 samples, 0.14%)</title><rect x="69.2468%" y="261" width="0.1366%" height="15" fill="rgb(246,121,10)" fg:x="19270" fg:w="38"/><text x="69.4968%" y="271.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="69.2863%" y="245" width="0.0970%" height="15" fill="rgb(214,156,37)" fg:x="19281" fg:w="27"/><text x="69.5363%" y="255.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="69.3007%" y="229" width="0.0827%" height="15" fill="rgb(214,210,34)" fg:x="19285" fg:w="23"/><text x="69.5507%" y="239.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="69.3223%" y="213" width="0.0611%" height="15" fill="rgb(237,93,35)" fg:x="19291" fg:w="17"/><text x="69.5723%" y="223.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="69.3690%" y="197" width="0.0144%" height="15" fill="rgb(206,36,8)" fg:x="19304" fg:w="4"/><text x="69.6190%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="69.4049%" y="309" width="0.0144%" height="15" fill="rgb(208,151,12)" fg:x="19314" fg:w="4"/><text x="69.6549%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="69.4085%" y="293" width="0.0108%" height="15" fill="rgb(225,133,52)" fg:x="19315" fg:w="3"/><text x="69.6585%" y="303.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="69.4049%" y="325" width="0.0180%" height="15" fill="rgb(231,71,53)" fg:x="19314" fg:w="5"/><text x="69.6549%" y="335.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="69.3977%" y="341" width="0.0323%" height="15" fill="rgb(243,76,21)" fg:x="19312" fg:w="9"/><text x="69.6477%" y="351.50"></text></g><g><title>zenoh_collections::object_pool::RecyclingObjectPool&lt;T,F&gt;::new (85 samples, 0.31%)</title><rect x="69.1390%" y="501" width="0.3054%" height="15" fill="rgb(252,144,3)" fg:x="19240" fg:w="85"/><text x="69.3890%" y="511.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}}::{{closure}} (82 samples, 0.29%)</title><rect x="69.1498%" y="485" width="0.2947%" height="15" fill="rgb(231,199,10)" fg:x="19243" fg:w="82"/><text x="69.3998%" y="495.50"></text></g><g><title>alloc::vec::from_elem (82 samples, 0.29%)</title><rect x="69.1498%" y="469" width="0.2947%" height="15" fill="rgb(215,18,11)" fg:x="19243" fg:w="82"/><text x="69.3998%" y="479.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (82 samples, 0.29%)</title><rect x="69.1498%" y="453" width="0.2947%" height="15" fill="rgb(241,65,24)" fg:x="19243" fg:w="82"/><text x="69.3998%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (82 samples, 0.29%)</title><rect x="69.1498%" y="437" width="0.2947%" height="15" fill="rgb(251,192,38)" fg:x="19243" fg:w="82"/><text x="69.3998%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (82 samples, 0.29%)</title><rect x="69.1498%" y="421" width="0.2947%" height="15" fill="rgb(205,9,35)" fg:x="19243" fg:w="82"/><text x="69.3998%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (82 samples, 0.29%)</title><rect x="69.1498%" y="405" width="0.2947%" height="15" fill="rgb(229,225,49)" fg:x="19243" fg:w="82"/><text x="69.3998%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (82 samples, 0.29%)</title><rect x="69.1498%" y="389" width="0.2947%" height="15" fill="rgb(207,125,39)" fg:x="19243" fg:w="82"/><text x="69.3998%" y="399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (82 samples, 0.29%)</title><rect x="69.1498%" y="373" width="0.2947%" height="15" fill="rgb(222,78,19)" fg:x="19243" fg:w="82"/><text x="69.3998%" y="383.50"></text></g><g><title>__libc_calloc (17 samples, 0.06%)</title><rect x="69.3834%" y="357" width="0.0611%" height="15" fill="rgb(248,207,20)" fg:x="19308" fg:w="17"/><text x="69.6334%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="69.4301%" y="341" width="0.0144%" height="15" fill="rgb(205,103,49)" fg:x="19321" fg:w="4"/><text x="69.6801%" y="351.50"></text></g><g><title>zenoh_sync::signal::Signal::is_triggered (5 samples, 0.02%)</title><rect x="69.4516%" y="501" width="0.0180%" height="15" fill="rgb(216,42,28)" fg:x="19327" fg:w="5"/><text x="69.7016%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (5 samples, 0.02%)</title><rect x="69.4516%" y="485" width="0.0180%" height="15" fill="rgb(213,205,53)" fg:x="19327" fg:w="5"/><text x="69.7016%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="69.4588%" y="469" width="0.0108%" height="15" fill="rgb(239,140,53)" fg:x="19329" fg:w="3"/><text x="69.7088%" y="479.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (3 samples, 0.01%)</title><rect x="69.5199%" y="485" width="0.0108%" height="15" fill="rgb(248,95,9)" fg:x="19346" fg:w="3"/><text x="69.7699%" y="495.50"></text></g><g><title>[libc.so.6] (13 samples, 0.05%)</title><rect x="69.6888%" y="469" width="0.0467%" height="15" fill="rgb(254,58,47)" fg:x="19393" fg:w="13"/><text x="69.9388%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.06%)</title><rect x="69.7822%" y="453" width="0.0611%" height="15" fill="rgb(234,227,14)" fg:x="19419" fg:w="17"/><text x="70.0322%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.06%)</title><rect x="69.7822%" y="437" width="0.0611%" height="15" fill="rgb(205,192,45)" fg:x="19419" fg:w="17"/><text x="70.0322%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.06%)</title><rect x="69.7822%" y="421" width="0.0611%" height="15" fill="rgb(253,187,31)" fg:x="19419" fg:w="17"/><text x="70.0322%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.01%)</title><rect x="69.8433%" y="453" width="0.0108%" height="15" fill="rgb(222,6,32)" fg:x="19436" fg:w="3"/><text x="70.0933%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="69.8541%" y="453" width="0.0108%" height="15" fill="rgb(249,190,19)" fg:x="19439" fg:w="3"/><text x="70.1041%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.01%)</title><rect x="69.8541%" y="437" width="0.0108%" height="15" fill="rgb(251,28,20)" fg:x="19439" fg:w="3"/><text x="70.1041%" y="447.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (3 samples, 0.01%)</title><rect x="69.8649%" y="453" width="0.0108%" height="15" fill="rgb(210,223,40)" fg:x="19442" fg:w="3"/><text x="70.1149%" y="463.50"></text></g><g><title>[libc.so.6] (8 samples, 0.03%)</title><rect x="69.8757%" y="453" width="0.0287%" height="15" fill="rgb(216,137,22)" fg:x="19445" fg:w="8"/><text x="70.1257%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;dyn zenoh_transport::TransportPeerEventHandler&gt;&gt;&gt; (11 samples, 0.04%)</title><rect x="69.9044%" y="453" width="0.0395%" height="15" fill="rgb(247,39,34)" fg:x="19453" fg:w="11"/><text x="70.1544%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn zenoh_transport::TransportPeerEventHandler&gt;&gt; (10 samples, 0.04%)</title><rect x="69.9080%" y="437" width="0.0359%" height="15" fill="rgb(239,43,50)" fg:x="19454" fg:w="10"/><text x="70.1580%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="69.9080%" y="421" width="0.0359%" height="15" fill="rgb(241,212,9)" fg:x="19454" fg:w="10"/><text x="70.1580%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,407 samples, 5.06%)</title><rect x="64.9202%" y="533" width="5.0561%" height="15" fill="rgb(205,8,2)" fg:x="18066" fg:w="1407"/><text x="65.1702%" y="543.50">&lt;core:..</text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (1,407 samples, 5.06%)</title><rect x="64.9202%" y="517" width="5.0561%" height="15" fill="rgb(217,173,54)" fg:x="18066" fg:w="1407"/><text x="65.1702%" y="527.50">zenoh_..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (141 samples, 0.51%)</title><rect x="69.4696%" y="501" width="0.5067%" height="15" fill="rgb(208,149,52)" fg:x="19332" fg:w="141"/><text x="69.7196%" y="511.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (124 samples, 0.45%)</title><rect x="69.5307%" y="485" width="0.4456%" height="15" fill="rgb(239,99,40)" fg:x="19349" fg:w="124"/><text x="69.7807%" y="495.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (61 samples, 0.22%)</title><rect x="69.7571%" y="469" width="0.2192%" height="15" fill="rgb(233,214,26)" fg:x="19412" fg:w="61"/><text x="70.0071%" y="479.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::try_read (7 samples, 0.03%)</title><rect x="69.9511%" y="453" width="0.0252%" height="15" fill="rgb(231,225,37)" fg:x="19466" fg:w="7"/><text x="70.2011%" y="463.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::try_read (7 samples, 0.03%)</title><rect x="69.9511%" y="437" width="0.0252%" height="15" fill="rgb(252,55,35)" fg:x="19466" fg:w="7"/><text x="70.2011%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::try_read (7 samples, 0.03%)</title><rect x="69.9511%" y="421" width="0.0252%" height="15" fill="rgb(239,43,18)" fg:x="19466" fg:w="7"/><text x="70.2011%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_update (7 samples, 0.03%)</title><rect x="69.9511%" y="405" width="0.0252%" height="15" fill="rgb(251,125,49)" fg:x="19466" fg:w="7"/><text x="70.2011%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (7 samples, 0.03%)</title><rect x="69.9511%" y="389" width="0.0252%" height="15" fill="rgb(212,83,54)" fg:x="19466" fg:w="7"/><text x="70.2011%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.03%)</title><rect x="69.9511%" y="373" width="0.0252%" height="15" fill="rgb(250,75,6)" fg:x="19466" fg:w="7"/><text x="70.2011%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,413 samples, 5.08%)</title><rect x="64.9094%" y="565" width="5.0776%" height="15" fill="rgb(252,36,40)" fg:x="18063" fg:w="1413"/><text x="65.1594%" y="575.50">&lt;core:..</text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (1,412 samples, 5.07%)</title><rect x="64.9130%" y="549" width="5.0740%" height="15" fill="rgb(230,91,51)" fg:x="18064" fg:w="1412"/><text x="65.1630%" y="559.50">zenoh_..</text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::is_reliable (3 samples, 0.01%)</title><rect x="69.9763%" y="533" width="0.0108%" height="15" fill="rgb(212,92,28)" fg:x="19473" fg:w="3"/><text x="70.2263%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,423 samples, 5.11%)</title><rect x="64.8771%" y="597" width="5.1136%" height="15" fill="rgb(227,13,22)" fg:x="18054" fg:w="1423"/><text x="65.1271%" y="607.50">&lt;core:..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (1,419 samples, 5.10%)</title><rect x="64.8915%" y="581" width="5.0992%" height="15" fill="rgb(239,204,32)" fg:x="18058" fg:w="1419"/><text x="65.1415%" y="591.50">zenoh_..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="69.9943%" y="533" width="0.0144%" height="15" fill="rgb(228,49,41)" fg:x="19478" fg:w="4"/><text x="70.2443%" y="543.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (6 samples, 0.02%)</title><rect x="69.9907%" y="581" width="0.0216%" height="15" fill="rgb(206,95,6)" fg:x="19477" fg:w="6"/><text x="70.2407%" y="591.50"></text></g><g><title>event_listener::Event::listen (5 samples, 0.02%)</title><rect x="69.9943%" y="565" width="0.0180%" height="15" fill="rgb(251,20,14)" fg:x="19478" fg:w="5"/><text x="70.2443%" y="575.50"></text></g><g><title>event_listener::Event::inner (5 samples, 0.02%)</title><rect x="69.9943%" y="549" width="0.0180%" height="15" fill="rgb(214,99,28)" fg:x="19478" fg:w="5"/><text x="70.2443%" y="559.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,435 samples, 5.16%)</title><rect x="64.8663%" y="693" width="5.1567%" height="15" fill="rgb(239,122,54)" fg:x="18051" fg:w="1435"/><text x="65.1163%" y="703.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,435 samples, 5.16%)</title><rect x="64.8663%" y="677" width="5.1567%" height="15" fill="rgb(218,217,46)" fg:x="18051" fg:w="1435"/><text x="65.1163%" y="687.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,435 samples, 5.16%)</title><rect x="64.8663%" y="661" width="5.1567%" height="15" fill="rgb(249,106,28)" fg:x="18051" fg:w="1435"/><text x="65.1163%" y="671.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,433 samples, 5.15%)</title><rect x="64.8735%" y="645" width="5.1495%" height="15" fill="rgb(250,158,18)" fg:x="18053" fg:w="1433"/><text x="65.1235%" y="655.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,432 samples, 5.15%)</title><rect x="64.8771%" y="629" width="5.1459%" height="15" fill="rgb(226,137,29)" fg:x="18054" fg:w="1432"/><text x="65.1271%" y="639.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,432 samples, 5.15%)</title><rect x="64.8771%" y="613" width="5.1459%" height="15" fill="rgb(210,188,1)" fg:x="18054" fg:w="1432"/><text x="65.1271%" y="623.50">&lt;async..</text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="69.9907%" y="597" width="0.0323%" height="15" fill="rgb(227,84,42)" fg:x="19477" fg:w="9"/><text x="70.2407%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="70.0122%" y="581" width="0.0108%" height="15" fill="rgb(222,147,48)" fg:x="19483" fg:w="3"/><text x="70.2622%" y="591.50"></text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}}::{{closure}} (3 samples, 0.01%)</title><rect x="70.0122%" y="565" width="0.0108%" height="15" fill="rgb(241,150,43)" fg:x="19483" fg:w="3"/><text x="70.2622%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,447 samples, 5.20%)</title><rect x="64.8340%" y="741" width="5.1998%" height="15" fill="rgb(206,139,52)" fg:x="18042" fg:w="1447"/><text x="65.0840%" y="751.50">&lt;core:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,447 samples, 5.20%)</title><rect x="64.8340%" y="725" width="5.1998%" height="15" fill="rgb(230,63,14)" fg:x="18042" fg:w="1447"/><text x="65.0840%" y="735.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,444 samples, 5.19%)</title><rect x="64.8448%" y="709" width="5.1890%" height="15" fill="rgb(247,8,20)" fg:x="18045" fg:w="1444"/><text x="65.0948%" y="719.50">async_..</text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="70.0230%" y="693" width="0.0108%" height="15" fill="rgb(213,115,4)" fg:x="19486" fg:w="3"/><text x="70.2730%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::notify (3 samples, 0.01%)</title><rect x="70.0482%" y="645" width="0.0108%" height="15" fill="rgb(241,79,49)" fg:x="19493" fg:w="3"/><text x="70.2982%" y="655.50"></text></g><g><title>polling::Poller::notify (3 samples, 0.01%)</title><rect x="70.0482%" y="629" width="0.0108%" height="15" fill="rgb(222,42,35)" fg:x="19493" fg:w="3"/><text x="70.2982%" y="639.50"></text></g><g><title>polling::epoll::Poller::notify (3 samples, 0.01%)</title><rect x="70.0482%" y="613" width="0.0108%" height="15" fill="rgb(247,59,23)" fg:x="19493" fg:w="3"/><text x="70.2982%" y="623.50"></text></g><g><title>write (3 samples, 0.01%)</title><rect x="70.0482%" y="597" width="0.0108%" height="15" fill="rgb(247,93,18)" fg:x="19493" fg:w="3"/><text x="70.2982%" y="607.50"></text></g><g><title>async_executor::State::notify (9 samples, 0.03%)</title><rect x="70.0446%" y="709" width="0.0323%" height="15" fill="rgb(249,107,47)" fg:x="19492" fg:w="9"/><text x="70.2946%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake (8 samples, 0.03%)</title><rect x="70.0482%" y="693" width="0.0287%" height="15" fill="rgb(219,27,1)" fg:x="19493" fg:w="8"/><text x="70.2982%" y="703.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (8 samples, 0.03%)</title><rect x="70.0482%" y="677" width="0.0287%" height="15" fill="rgb(217,82,32)" fg:x="19493" fg:w="8"/><text x="70.2982%" y="687.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (8 samples, 0.03%)</title><rect x="70.0482%" y="661" width="0.0287%" height="15" fill="rgb(250,129,47)" fg:x="19493" fg:w="8"/><text x="70.2982%" y="671.50"></text></g><g><title>parking::Unparker::unpark (5 samples, 0.02%)</title><rect x="70.0589%" y="645" width="0.0180%" height="15" fill="rgb(253,88,35)" fg:x="19496" fg:w="5"/><text x="70.3089%" y="655.50"></text></g><g><title>parking::Inner::unpark (5 samples, 0.02%)</title><rect x="70.0589%" y="629" width="0.0180%" height="15" fill="rgb(245,221,14)" fg:x="19496" fg:w="5"/><text x="70.3089%" y="639.50"></text></g><g><title>syscall (3 samples, 0.01%)</title><rect x="70.0661%" y="613" width="0.0108%" height="15" fill="rgb(217,119,54)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="597" width="0.0108%" height="15" fill="rgb(247,128,31)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="581" width="0.0108%" height="15" fill="rgb(211,99,22)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="565" width="0.0108%" height="15" fill="rgb(212,20,17)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="549" width="0.0108%" height="15" fill="rgb(209,159,29)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="533" width="0.0108%" height="15" fill="rgb(222,177,53)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="517" width="0.0108%" height="15" fill="rgb(234,46,43)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="501" width="0.0108%" height="15" fill="rgb(208,108,14)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="485" width="0.0108%" height="15" fill="rgb(226,78,53)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.0661%" y="469" width="0.0108%" height="15" fill="rgb(230,20,41)" fg:x="19498" fg:w="3"/><text x="70.3161%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,482 samples, 5.33%)</title><rect x="64.7657%" y="757" width="5.3256%" height="15" fill="rgb(213,195,35)" fg:x="18023" fg:w="1482"/><text x="65.0157%" y="767.50">async_t..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (14 samples, 0.05%)</title><rect x="70.0410%" y="741" width="0.0503%" height="15" fill="rgb(242,62,36)" fg:x="19491" fg:w="14"/><text x="70.2910%" y="751.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (13 samples, 0.05%)</title><rect x="70.0446%" y="725" width="0.0467%" height="15" fill="rgb(222,210,37)" fg:x="19492" fg:w="13"/><text x="70.2946%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (4 samples, 0.01%)</title><rect x="70.0769%" y="709" width="0.0144%" height="15" fill="rgb(232,107,19)" fg:x="19501" fg:w="4"/><text x="70.3269%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (3 samples, 0.01%)</title><rect x="70.0805%" y="693" width="0.0108%" height="15" fill="rgb(235,85,17)" fg:x="19502" fg:w="3"/><text x="70.3305%" y="703.50"></text></g><g><title>async_task::runnable::Runnable::run (8 samples, 0.03%)</title><rect x="70.0913%" y="757" width="0.0287%" height="15" fill="rgb(219,195,31)" fg:x="19505" fg:w="8"/><text x="70.3413%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,192 samples, 11.47%)</title><rect x="58.6603%" y="805" width="11.4705%" height="15" fill="rgb(231,183,30)" fg:x="16324" fg:w="3192"/><text x="58.9103%" y="815.50">&lt;futures_lite::fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,190 samples, 11.46%)</title><rect x="58.6675%" y="789" width="11.4633%" height="15" fill="rgb(212,0,11)" fg:x="16326" fg:w="3190"/><text x="58.9175%" y="799.50">&lt;core::future::fr..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,190 samples, 11.46%)</title><rect x="58.6675%" y="773" width="11.4633%" height="15" fill="rgb(249,53,54)" fg:x="16326" fg:w="3190"/><text x="58.9175%" y="783.50">async_executor::E..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.01%)</title><rect x="70.1200%" y="757" width="0.0108%" height="15" fill="rgb(211,118,13)" fg:x="19513" fg:w="3"/><text x="70.3700%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.01%)</title><rect x="70.1200%" y="741" width="0.0108%" height="15" fill="rgb(237,42,9)" fg:x="19513" fg:w="3"/><text x="70.3700%" y="751.50"></text></g><g><title>async_executor::Executor::state (3 samples, 0.01%)</title><rect x="70.1308%" y="805" width="0.0108%" height="15" fill="rgb(227,68,32)" fg:x="19516" fg:w="3"/><text x="70.3808%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="70.1416%" y="789" width="0.0108%" height="15" fill="rgb(238,10,7)" fg:x="19519" fg:w="3"/><text x="70.3916%" y="799.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.01%)</title><rect x="70.1416%" y="773" width="0.0108%" height="15" fill="rgb(224,42,12)" fg:x="19519" fg:w="3"/><text x="70.3916%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.01%)</title><rect x="70.1416%" y="757" width="0.0108%" height="15" fill="rgb(252,190,5)" fg:x="19519" fg:w="3"/><text x="70.3916%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="70.1416%" y="741" width="0.0108%" height="15" fill="rgb(220,214,39)" fg:x="19519" fg:w="3"/><text x="70.3916%" y="751.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="70.1416%" y="725" width="0.0108%" height="15" fill="rgb(247,98,4)" fg:x="19519" fg:w="3"/><text x="70.3916%" y="735.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="70.1416%" y="709" width="0.0108%" height="15" fill="rgb(211,60,12)" fg:x="19519" fg:w="3"/><text x="70.3916%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="70.1524%" y="773" width="0.0180%" height="15" fill="rgb(224,42,10)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="70.1524%" y="757" width="0.0180%" height="15" fill="rgb(217,167,4)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="70.1524%" y="741" width="0.0180%" height="15" fill="rgb(253,18,17)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="70.1524%" y="725" width="0.0180%" height="15" fill="rgb(249,186,44)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="735.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="70.1524%" y="709" width="0.0180%" height="15" fill="rgb(254,124,54)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="719.50"></text></g><g><title>__rdl_alloc (5 samples, 0.02%)</title><rect x="70.1524%" y="693" width="0.0180%" height="15" fill="rgb(220,124,39)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.02%)</title><rect x="70.1524%" y="677" width="0.0180%" height="15" fill="rgb(225,96,46)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="687.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (5 samples, 0.02%)</title><rect x="70.1524%" y="661" width="0.0180%" height="15" fill="rgb(221,106,12)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="671.50"></text></g><g><title>posix_memalign (5 samples, 0.02%)</title><rect x="70.1524%" y="645" width="0.0180%" height="15" fill="rgb(227,133,23)" fg:x="19522" fg:w="5"/><text x="70.4024%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.04%)</title><rect x="70.1703%" y="757" width="0.0359%" height="15" fill="rgb(216,44,52)" fg:x="19527" fg:w="10"/><text x="70.4203%" y="767.50"></text></g><g><title>core::ptr::write (9 samples, 0.03%)</title><rect x="70.1739%" y="741" width="0.0323%" height="15" fill="rgb(239,149,7)" fg:x="19528" fg:w="9"/><text x="70.4239%" y="751.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="70.1739%" y="725" width="0.0323%" height="15" fill="rgb(211,157,31)" fg:x="19528" fg:w="9"/><text x="70.4239%" y="735.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="70.1739%" y="709" width="0.0323%" height="15" fill="rgb(206,215,22)" fg:x="19528" fg:w="9"/><text x="70.4239%" y="719.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="70.1739%" y="693" width="0.0323%" height="15" fill="rgb(208,113,15)" fg:x="19528" fg:w="9"/><text x="70.4239%" y="703.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="70.1739%" y="677" width="0.0323%" height="15" fill="rgb(207,189,15)" fg:x="19528" fg:w="9"/><text x="70.4239%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="70.1775%" y="661" width="0.0287%" height="15" fill="rgb(231,115,4)" fg:x="19529" fg:w="8"/><text x="70.4275%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="70.1919%" y="645" width="0.0144%" height="15" fill="rgb(253,117,2)" fg:x="19533" fg:w="4"/><text x="70.4419%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="70.1919%" y="629" width="0.0144%" height="15" fill="rgb(248,48,24)" fg:x="19533" fg:w="4"/><text x="70.4419%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="70.1919%" y="613" width="0.0144%" height="15" fill="rgb(241,28,46)" fg:x="19533" fg:w="4"/><text x="70.4419%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="70.1919%" y="597" width="0.0144%" height="15" fill="rgb(216,165,52)" fg:x="19533" fg:w="4"/><text x="70.4419%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (20 samples, 0.07%)</title><rect x="70.1524%" y="789" width="0.0719%" height="15" fill="rgb(220,222,34)" fg:x="19522" fg:w="20"/><text x="70.4024%" y="799.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (15 samples, 0.05%)</title><rect x="70.1703%" y="773" width="0.0539%" height="15" fill="rgb(247,222,49)" fg:x="19527" fg:w="15"/><text x="70.4203%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.02%)</title><rect x="70.2063%" y="757" width="0.0180%" height="15" fill="rgb(240,10,31)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="70.2063%" y="741" width="0.0180%" height="15" fill="rgb(221,199,35)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="70.2063%" y="725" width="0.0180%" height="15" fill="rgb(230,223,11)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="70.2063%" y="709" width="0.0180%" height="15" fill="rgb(218,82,45)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="70.2063%" y="693" width="0.0180%" height="15" fill="rgb(233,213,33)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="70.2063%" y="677" width="0.0180%" height="15" fill="rgb(210,143,52)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="687.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="70.2063%" y="661" width="0.0180%" height="15" fill="rgb(206,95,4)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="671.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="70.2063%" y="645" width="0.0180%" height="15" fill="rgb(246,164,46)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="655.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="70.2063%" y="629" width="0.0180%" height="15" fill="rgb(213,210,47)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="70.2063%" y="613" width="0.0180%" height="15" fill="rgb(210,12,38)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="70.2063%" y="597" width="0.0180%" height="15" fill="rgb(252,192,54)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="70.2063%" y="581" width="0.0180%" height="15" fill="rgb(242,92,6)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="70.2063%" y="565" width="0.0180%" height="15" fill="rgb(253,154,15)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="70.2063%" y="549" width="0.0180%" height="15" fill="rgb(209,20,43)" fg:x="19537" fg:w="5"/><text x="70.4563%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="70.2135%" y="533" width="0.0108%" height="15" fill="rgb(232,28,49)" fg:x="19539" fg:w="3"/><text x="70.4635%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (3,227 samples, 11.60%)</title><rect x="58.6352%" y="821" width="11.5962%" height="15" fill="rgb(248,131,53)" fg:x="16317" fg:w="3227"/><text x="58.8852%" y="831.50">async_executor::E..</text></g><g><title>async_executor::Runner::new (25 samples, 0.09%)</title><rect x="70.1416%" y="805" width="0.0898%" height="15" fill="rgb(214,16,30)" fg:x="19519" fg:w="25"/><text x="70.3916%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.06%)</title><rect x="70.7165%" y="613" width="0.0647%" height="15" fill="rgb(245,16,0)" fg:x="19679" fg:w="18"/><text x="70.9665%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (18 samples, 0.06%)</title><rect x="70.7165%" y="597" width="0.0647%" height="15" fill="rgb(245,17,35)" fg:x="19679" fg:w="18"/><text x="70.9665%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.06%)</title><rect x="70.7165%" y="581" width="0.0647%" height="15" fill="rgb(249,27,53)" fg:x="19679" fg:w="18"/><text x="70.9665%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.06%)</title><rect x="70.7165%" y="565" width="0.0647%" height="15" fill="rgb(214,73,24)" fg:x="19679" fg:w="18"/><text x="70.9665%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.06%)</title><rect x="70.7165%" y="549" width="0.0647%" height="15" fill="rgb(223,84,37)" fg:x="19679" fg:w="18"/><text x="70.9665%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.06%)</title><rect x="70.7201%" y="533" width="0.0611%" height="15" fill="rgb(210,109,28)" fg:x="19680" fg:w="17"/><text x="70.9701%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (16 samples, 0.06%)</title><rect x="70.7237%" y="517" width="0.0575%" height="15" fill="rgb(208,186,6)" fg:x="19681" fg:w="16"/><text x="70.9737%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (16 samples, 0.06%)</title><rect x="70.7237%" y="501" width="0.0575%" height="15" fill="rgb(235,201,30)" fg:x="19681" fg:w="16"/><text x="70.9737%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="71.2987%" y="581" width="0.0180%" height="15" fill="rgb(216,198,48)" fg:x="19841" fg:w="5"/><text x="71.5487%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="71.3023%" y="565" width="0.0144%" height="15" fill="rgb(254,186,25)" fg:x="19842" fg:w="4"/><text x="71.5523%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="71.3023%" y="549" width="0.0144%" height="15" fill="rgb(227,87,5)" fg:x="19842" fg:w="4"/><text x="71.5523%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="71.3023%" y="533" width="0.0144%" height="15" fill="rgb(236,205,25)" fg:x="19842" fg:w="4"/><text x="71.5523%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="71.3023%" y="517" width="0.0144%" height="15" fill="rgb(229,99,32)" fg:x="19842" fg:w="4"/><text x="71.5523%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="71.3023%" y="501" width="0.0144%" height="15" fill="rgb(231,177,31)" fg:x="19842" fg:w="4"/><text x="71.5523%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="71.3023%" y="485" width="0.0144%" height="15" fill="rgb(246,15,2)" fg:x="19842" fg:w="4"/><text x="71.5523%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="71.3023%" y="469" width="0.0144%" height="15" fill="rgb(207,39,15)" fg:x="19842" fg:w="4"/><text x="71.5523%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="71.3059%" y="453" width="0.0108%" height="15" fill="rgb(207,44,9)" fg:x="19843" fg:w="3"/><text x="71.5559%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="71.3059%" y="437" width="0.0108%" height="15" fill="rgb(225,224,33)" fg:x="19843" fg:w="3"/><text x="71.5559%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="71.3059%" y="421" width="0.0108%" height="15" fill="rgb(252,151,3)" fg:x="19843" fg:w="3"/><text x="71.5559%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (104 samples, 0.37%)</title><rect x="70.9645%" y="597" width="0.3737%" height="15" fill="rgb(211,140,13)" fg:x="19748" fg:w="104"/><text x="71.2145%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.01%)</title><rect x="71.3238%" y="581" width="0.0144%" height="15" fill="rgb(239,225,17)" fg:x="19848" fg:w="4"/><text x="71.5738%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="71.3238%" y="565" width="0.0144%" height="15" fill="rgb(223,170,52)" fg:x="19848" fg:w="4"/><text x="71.5738%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (21 samples, 0.08%)</title><rect x="71.4317%" y="581" width="0.0755%" height="15" fill="rgb(212,64,21)" fg:x="19878" fg:w="21"/><text x="71.6817%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.08%)</title><rect x="71.4317%" y="565" width="0.0755%" height="15" fill="rgb(236,126,48)" fg:x="19878" fg:w="21"/><text x="71.6817%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (205 samples, 0.74%)</title><rect x="70.7812%" y="613" width="0.7367%" height="15" fill="rgb(209,135,11)" fg:x="19697" fg:w="205"/><text x="71.0312%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (50 samples, 0.18%)</title><rect x="71.3382%" y="597" width="0.1797%" height="15" fill="rgb(228,126,40)" fg:x="19852" fg:w="50"/><text x="71.5882%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.01%)</title><rect x="71.5071%" y="581" width="0.0108%" height="15" fill="rgb(205,196,36)" fg:x="19899" fg:w="3"/><text x="71.7571%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="71.5071%" y="565" width="0.0108%" height="15" fill="rgb(243,160,33)" fg:x="19899" fg:w="3"/><text x="71.7571%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::has_writers_waiting (6 samples, 0.02%)</title><rect x="71.5323%" y="549" width="0.0216%" height="15" fill="rgb(210,84,20)" fg:x="19906" fg:w="6"/><text x="71.7823%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (15 samples, 0.05%)</title><rect x="71.5179%" y="613" width="0.0539%" height="15" fill="rgb(228,213,30)" fg:x="19902" fg:w="15"/><text x="71.7679%" y="623.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="71.5179%" y="597" width="0.0539%" height="15" fill="rgb(252,33,45)" fg:x="19902" fg:w="15"/><text x="71.7679%" y="607.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (12 samples, 0.04%)</title><rect x="71.5287%" y="581" width="0.0431%" height="15" fill="rgb(254,227,20)" fg:x="19905" fg:w="12"/><text x="71.7787%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (12 samples, 0.04%)</title><rect x="71.5287%" y="565" width="0.0431%" height="15" fill="rgb(228,192,2)" fg:x="19905" fg:w="12"/><text x="71.7787%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_unlocked (5 samples, 0.02%)</title><rect x="71.5538%" y="549" width="0.0180%" height="15" fill="rgb(233,32,8)" fg:x="19912" fg:w="5"/><text x="71.8038%" y="559.50"></text></g><g><title>fastrand::RNG::__getit (41 samples, 0.15%)</title><rect x="71.5862%" y="565" width="0.1473%" height="15" fill="rgb(220,146,47)" fg:x="19921" fg:w="41"/><text x="71.8362%" y="575.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (13 samples, 0.05%)</title><rect x="71.6868%" y="549" width="0.0467%" height="15" fill="rgb(246,194,1)" fg:x="19949" fg:w="13"/><text x="71.9368%" y="559.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (6 samples, 0.02%)</title><rect x="71.7119%" y="533" width="0.0216%" height="15" fill="rgb(218,203,9)" fg:x="19956" fg:w="6"/><text x="71.9619%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.02%)</title><rect x="71.7119%" y="517" width="0.0216%" height="15" fill="rgb(237,97,14)" fg:x="19956" fg:w="6"/><text x="71.9619%" y="527.50"></text></g><g><title>fastrand::usize::{{closure}} (3 samples, 0.01%)</title><rect x="71.7335%" y="565" width="0.0108%" height="15" fill="rgb(239,76,15)" fg:x="19962" fg:w="3"/><text x="71.9835%" y="575.50"></text></g><g><title>fastrand::Rng::usize (3 samples, 0.01%)</title><rect x="71.7335%" y="549" width="0.0108%" height="15" fill="rgb(222,53,45)" fg:x="19962" fg:w="3"/><text x="71.9835%" y="559.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (3 samples, 0.01%)</title><rect x="71.7335%" y="533" width="0.0108%" height="15" fill="rgb(237,88,5)" fg:x="19962" fg:w="3"/><text x="71.9835%" y="543.50"></text></g><g><title>fastrand::mul_high_u64 (3 samples, 0.01%)</title><rect x="71.7335%" y="517" width="0.0108%" height="15" fill="rgb(218,223,35)" fg:x="19962" fg:w="3"/><text x="71.9835%" y="527.50"></text></g><g><title>std::collections::hash::map::DefaultHasher::new (3 samples, 0.01%)</title><rect x="71.7479%" y="517" width="0.0108%" height="15" fill="rgb(243,229,38)" fg:x="19966" fg:w="3"/><text x="71.9979%" y="527.50"></text></g><g><title>fastrand::usize (55 samples, 0.20%)</title><rect x="71.5718%" y="613" width="0.1976%" height="15" fill="rgb(240,75,41)" fg:x="19917" fg:w="55"/><text x="71.8218%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 samples, 0.19%)</title><rect x="71.5754%" y="597" width="0.1940%" height="15" fill="rgb(209,110,37)" fg:x="19918" fg:w="54"/><text x="71.8254%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (51 samples, 0.18%)</title><rect x="71.5862%" y="581" width="0.1833%" height="15" fill="rgb(221,130,46)" fg:x="19921" fg:w="51"/><text x="71.8362%" y="591.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (7 samples, 0.03%)</title><rect x="71.7443%" y="565" width="0.0252%" height="15" fill="rgb(237,160,20)" fg:x="19965" fg:w="7"/><text x="71.9943%" y="575.50"></text></g><g><title>fastrand::RNG::__getit::{{closure}} (7 samples, 0.03%)</title><rect x="71.7443%" y="549" width="0.0252%" height="15" fill="rgb(234,126,24)" fg:x="19965" fg:w="7"/><text x="71.9943%" y="559.50"></text></g><g><title>fastrand::RNG::__init (7 samples, 0.03%)</title><rect x="71.7443%" y="533" width="0.0252%" height="15" fill="rgb(207,177,9)" fg:x="19965" fg:w="7"/><text x="71.9943%" y="543.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.01%)</title><rect x="71.7587%" y="517" width="0.0108%" height="15" fill="rgb(231,191,33)" fg:x="19969" fg:w="3"/><text x="72.0087%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="71.7587%" y="501" width="0.0108%" height="15" fill="rgb(207,42,1)" fg:x="19969" fg:w="3"/><text x="72.0087%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.01%)</title><rect x="71.7587%" y="485" width="0.0108%" height="15" fill="rgb(218,34,50)" fg:x="19969" fg:w="3"/><text x="72.0087%" y="495.50"></text></g><g><title>clock_gettime (3 samples, 0.01%)</title><rect x="71.7587%" y="469" width="0.0108%" height="15" fill="rgb(254,126,39)" fg:x="19969" fg:w="3"/><text x="72.0087%" y="479.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (311 samples, 1.12%)</title><rect x="70.6986%" y="629" width="1.1176%" height="15" fill="rgb(251,17,26)" fg:x="19674" fg:w="311"/><text x="70.9486%" y="639.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (13 samples, 0.05%)</title><rect x="71.7694%" y="613" width="0.0467%" height="15" fill="rgb(252,215,34)" fg:x="19972" fg:w="13"/><text x="72.0194%" y="623.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (13 samples, 0.05%)</title><rect x="71.7694%" y="597" width="0.0467%" height="15" fill="rgb(217,120,44)" fg:x="19972" fg:w="13"/><text x="72.0194%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (13 samples, 0.05%)</title><rect x="71.7694%" y="581" width="0.0467%" height="15" fill="rgb(211,31,11)" fg:x="19972" fg:w="13"/><text x="72.0194%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (10 samples, 0.04%)</title><rect x="71.7802%" y="565" width="0.0359%" height="15" fill="rgb(222,69,51)" fg:x="19975" fg:w="10"/><text x="72.0302%" y="575.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="71.9707%" y="597" width="0.0144%" height="15" fill="rgb(215,229,42)" fg:x="20028" fg:w="4"/><text x="72.2207%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.01%)</title><rect x="71.9707%" y="581" width="0.0144%" height="15" fill="rgb(212,102,15)" fg:x="20028" fg:w="4"/><text x="72.2207%" y="591.50"></text></g><g><title>async_executor::Sleepers::update (31 samples, 0.11%)</title><rect x="71.9024%" y="613" width="0.1114%" height="15" fill="rgb(205,179,41)" fg:x="20009" fg:w="31"/><text x="72.1524%" y="623.50"></text></g><g><title>core::task::wake::Waker::will_wake (8 samples, 0.03%)</title><rect x="71.9851%" y="597" width="0.0287%" height="15" fill="rgb(219,148,46)" fg:x="20032" fg:w="8"/><text x="72.2351%" y="607.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (8 samples, 0.03%)</title><rect x="71.9851%" y="581" width="0.0287%" height="15" fill="rgb(243,40,19)" fg:x="20032" fg:w="8"/><text x="72.2351%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.02%)</title><rect x="71.9958%" y="565" width="0.0180%" height="15" fill="rgb(208,206,34)" fg:x="20035" fg:w="5"/><text x="72.2458%" y="575.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (5 samples, 0.02%)</title><rect x="71.9958%" y="549" width="0.0180%" height="15" fill="rgb(244,184,38)" fg:x="20035" fg:w="5"/><text x="72.2458%" y="559.50"></text></g><g><title>async_executor::Ticker::sleep (75 samples, 0.27%)</title><rect x="71.8162%" y="629" width="0.2695%" height="15" fill="rgb(244,151,47)" fg:x="19985" fg:w="75"/><text x="72.0662%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.06%)</title><rect x="72.0210%" y="613" width="0.0647%" height="15" fill="rgb(236,134,42)" fg:x="20042" fg:w="18"/><text x="72.2710%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.06%)</title><rect x="72.0210%" y="597" width="0.0647%" height="15" fill="rgb(233,93,22)" fg:x="20042" fg:w="18"/><text x="72.2710%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (18 samples, 0.06%)</title><rect x="72.0210%" y="581" width="0.0647%" height="15" fill="rgb(211,202,10)" fg:x="20042" fg:w="18"/><text x="72.2710%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (430 samples, 1.55%)</title><rect x="70.5441%" y="725" width="1.5452%" height="15" fill="rgb(240,63,8)" fg:x="19631" fg:w="430"/><text x="70.7941%" y="735.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (420 samples, 1.51%)</title><rect x="70.5800%" y="709" width="1.5093%" height="15" fill="rgb(214,9,4)" fg:x="19641" fg:w="420"/><text x="70.8300%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (413 samples, 1.48%)</title><rect x="70.6051%" y="693" width="1.4841%" height="15" fill="rgb(243,66,45)" fg:x="19648" fg:w="413"/><text x="70.8551%" y="703.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (413 samples, 1.48%)</title><rect x="70.6051%" y="677" width="1.4841%" height="15" fill="rgb(220,50,42)" fg:x="19648" fg:w="413"/><text x="70.8551%" y="687.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (396 samples, 1.42%)</title><rect x="70.6662%" y="661" width="1.4230%" height="15" fill="rgb(220,134,27)" fg:x="19665" fg:w="396"/><text x="70.9162%" y="671.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (391 samples, 1.41%)</title><rect x="70.6842%" y="645" width="1.4051%" height="15" fill="rgb(246,151,50)" fg:x="19670" fg:w="391"/><text x="70.9342%" y="655.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (436 samples, 1.57%)</title><rect x="70.5261%" y="741" width="1.5668%" height="15" fill="rgb(238,216,27)" fg:x="19626" fg:w="436"/><text x="70.7761%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.01%)</title><rect x="72.2150%" y="693" width="0.0108%" height="15" fill="rgb(250,92,11)" fg:x="20096" fg:w="3"/><text x="72.4650%" y="703.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="72.2150%" y="677" width="0.0108%" height="15" fill="rgb(248,183,6)" fg:x="20096" fg:w="3"/><text x="72.4650%" y="687.50"></text></g><g><title>core::ptr::read (3 samples, 0.01%)</title><rect x="72.2150%" y="661" width="0.0108%" height="15" fill="rgb(211,204,50)" fg:x="20096" fg:w="3"/><text x="72.4650%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.02%)</title><rect x="72.2258%" y="693" width="0.0216%" height="15" fill="rgb(252,55,47)" fg:x="20099" fg:w="6"/><text x="72.4758%" y="703.50"></text></g><g><title>core::mem::drop (5 samples, 0.02%)</title><rect x="72.2294%" y="677" width="0.0180%" height="15" fill="rgb(240,198,32)" fg:x="20100" fg:w="5"/><text x="72.4794%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (5 samples, 0.02%)</title><rect x="72.2294%" y="661" width="0.0180%" height="15" fill="rgb(224,203,19)" fg:x="20100" fg:w="5"/><text x="72.4794%" y="671.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="72.2474%" y="677" width="0.0108%" height="15" fill="rgb(205,27,16)" fg:x="20105" fg:w="3"/><text x="72.4974%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (5 samples, 0.02%)</title><rect x="72.2474%" y="693" width="0.0180%" height="15" fill="rgb(224,226,17)" fg:x="20105" fg:w="5"/><text x="72.4974%" y="703.50"></text></g><g><title>core::task::wake::Waker::will_wake (8 samples, 0.03%)</title><rect x="72.2653%" y="693" width="0.0287%" height="15" fill="rgb(205,216,54)" fg:x="20110" fg:w="8"/><text x="72.5153%" y="703.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (8 samples, 0.03%)</title><rect x="72.2653%" y="677" width="0.0287%" height="15" fill="rgb(248,168,46)" fg:x="20110" fg:w="8"/><text x="72.5153%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.02%)</title><rect x="72.2761%" y="661" width="0.0180%" height="15" fill="rgb(226,111,45)" fg:x="20113" fg:w="5"/><text x="72.5261%" y="671.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (5 samples, 0.02%)</title><rect x="72.2761%" y="645" width="0.0180%" height="15" fill="rgb(231,15,9)" fg:x="20113" fg:w="5"/><text x="72.5261%" y="655.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (53 samples, 0.19%)</title><rect x="72.1827%" y="709" width="0.1905%" height="15" fill="rgb(243,168,3)" fg:x="20087" fg:w="53"/><text x="72.4327%" y="719.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.08%)</title><rect x="72.2941%" y="693" width="0.0791%" height="15" fill="rgb(221,220,54)" fg:x="20118" fg:w="22"/><text x="72.5441%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.08%)</title><rect x="72.2941%" y="677" width="0.0791%" height="15" fill="rgb(232,174,38)" fg:x="20118" fg:w="22"/><text x="72.5441%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.08%)</title><rect x="72.2941%" y="661" width="0.0791%" height="15" fill="rgb(205,14,38)" fg:x="20118" fg:w="22"/><text x="72.5441%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (22 samples, 0.08%)</title><rect x="72.2941%" y="645" width="0.0791%" height="15" fill="rgb(234,89,19)" fg:x="20118" fg:w="22"/><text x="72.5441%" y="655.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (28 samples, 0.10%)</title><rect x="72.3767%" y="709" width="0.1006%" height="15" fill="rgb(216,68,51)" fg:x="20141" fg:w="28"/><text x="72.6267%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (28 samples, 0.10%)</title><rect x="72.3767%" y="693" width="0.1006%" height="15" fill="rgb(213,49,2)" fg:x="20141" fg:w="28"/><text x="72.6267%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (3 samples, 0.01%)</title><rect x="72.4774%" y="677" width="0.0108%" height="15" fill="rgb(242,146,30)" fg:x="20169" fg:w="3"/><text x="72.7274%" y="687.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.34%)</title><rect x="72.1504%" y="725" width="0.3414%" height="15" fill="rgb(224,188,11)" fg:x="20078" fg:w="95"/><text x="72.4004%" y="735.50"></text></g><g><title>event_listener::Event::listen (4 samples, 0.01%)</title><rect x="72.4774%" y="709" width="0.0144%" height="15" fill="rgb(213,159,11)" fg:x="20169" fg:w="4"/><text x="72.7274%" y="719.50"></text></g><g><title>event_listener::Event::inner (4 samples, 0.01%)</title><rect x="72.4774%" y="693" width="0.0144%" height="15" fill="rgb(229,13,31)" fg:x="20169" fg:w="4"/><text x="72.7274%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (559 samples, 2.01%)</title><rect x="70.4866%" y="773" width="2.0088%" height="15" fill="rgb(209,103,11)" fg:x="19615" fg:w="559"/><text x="70.7366%" y="783.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (557 samples, 2.00%)</title><rect x="70.4937%" y="757" width="2.0016%" height="15" fill="rgb(206,3,4)" fg:x="19617" fg:w="557"/><text x="70.7437%" y="767.50">&lt;..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (112 samples, 0.40%)</title><rect x="72.0929%" y="741" width="0.4025%" height="15" fill="rgb(252,10,49)" fg:x="20062" fg:w="112"/><text x="72.3429%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (18 samples, 0.06%)</title><rect x="72.5025%" y="629" width="0.0647%" height="15" fill="rgb(217,160,32)" fg:x="20176" fg:w="18"/><text x="72.7525%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.06%)</title><rect x="72.5025%" y="613" width="0.0647%" height="15" fill="rgb(249,196,0)" fg:x="20176" fg:w="18"/><text x="72.7525%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.06%)</title><rect x="72.5025%" y="597" width="0.0647%" height="15" fill="rgb(213,17,48)" fg:x="20176" fg:w="18"/><text x="72.7525%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.06%)</title><rect x="72.5025%" y="581" width="0.0647%" height="15" fill="rgb(206,42,46)" fg:x="20176" fg:w="18"/><text x="72.7525%" y="591.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.06%)</title><rect x="72.5025%" y="565" width="0.0647%" height="15" fill="rgb(212,105,24)" fg:x="20176" fg:w="18"/><text x="72.7525%" y="575.50"></text></g><g><title>malloc (17 samples, 0.06%)</title><rect x="72.5061%" y="549" width="0.0611%" height="15" fill="rgb(243,216,30)" fg:x="20177" fg:w="17"/><text x="72.7561%" y="559.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="72.5061%" y="533" width="0.0611%" height="15" fill="rgb(207,121,3)" fg:x="20177" fg:w="17"/><text x="72.7561%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="72.5241%" y="517" width="0.0431%" height="15" fill="rgb(249,78,0)" fg:x="20182" fg:w="12"/><text x="72.7741%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="72.5277%" y="501" width="0.0395%" height="15" fill="rgb(244,151,32)" fg:x="20183" fg:w="11"/><text x="72.7777%" y="511.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="72.5313%" y="485" width="0.0359%" height="15" fill="rgb(228,63,25)" fg:x="20184" fg:w="10"/><text x="72.7813%" y="495.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="72.5313%" y="469" width="0.0359%" height="15" fill="rgb(231,158,23)" fg:x="20184" fg:w="10"/><text x="72.7813%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="72.5420%" y="453" width="0.0252%" height="15" fill="rgb(248,107,23)" fg:x="20187" fg:w="7"/><text x="72.7920%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="72.5420%" y="437" width="0.0252%" height="15" fill="rgb(215,168,21)" fg:x="20187" fg:w="7"/><text x="72.7920%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="72.5528%" y="421" width="0.0144%" height="15" fill="rgb(227,83,22)" fg:x="20190" fg:w="4"/><text x="72.8028%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (5 samples, 0.02%)</title><rect x="72.5672%" y="613" width="0.0180%" height="15" fill="rgb(217,118,43)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="72.5672%" y="597" width="0.0180%" height="15" fill="rgb(229,220,41)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.02%)</title><rect x="72.5672%" y="581" width="0.0180%" height="15" fill="rgb(254,146,46)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="72.5672%" y="565" width="0.0180%" height="15" fill="rgb(233,208,31)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="72.5672%" y="549" width="0.0180%" height="15" fill="rgb(222,162,7)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="559.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="72.5672%" y="533" width="0.0180%" height="15" fill="rgb(230,117,45)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="543.50"></text></g><g><title>__rdl_alloc (5 samples, 0.02%)</title><rect x="72.5672%" y="517" width="0.0180%" height="15" fill="rgb(239,163,6)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.02%)</title><rect x="72.5672%" y="501" width="0.0180%" height="15" fill="rgb(246,130,17)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="511.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (5 samples, 0.02%)</title><rect x="72.5672%" y="485" width="0.0180%" height="15" fill="rgb(216,84,5)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="495.50"></text></g><g><title>posix_memalign (5 samples, 0.02%)</title><rect x="72.5672%" y="469" width="0.0180%" height="15" fill="rgb(230,200,21)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="479.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="72.5672%" y="453" width="0.0180%" height="15" fill="rgb(224,2,8)" fg:x="20194" fg:w="5"/><text x="72.8172%" y="463.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="72.5744%" y="437" width="0.0108%" height="15" fill="rgb(238,178,10)" fg:x="20196" fg:w="3"/><text x="72.8244%" y="447.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="72.5744%" y="421" width="0.0108%" height="15" fill="rgb(242,153,24)" fg:x="20196" fg:w="3"/><text x="72.8244%" y="431.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (25 samples, 0.09%)</title><rect x="72.5025%" y="661" width="0.0898%" height="15" fill="rgb(242,32,48)" fg:x="20176" fg:w="25"/><text x="72.7525%" y="671.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (25 samples, 0.09%)</title><rect x="72.5025%" y="645" width="0.0898%" height="15" fill="rgb(227,36,0)" fg:x="20176" fg:w="25"/><text x="72.7525%" y="655.50"></text></g><g><title>async_executor::State::new (7 samples, 0.03%)</title><rect x="72.5672%" y="629" width="0.0252%" height="15" fill="rgb(251,33,35)" fg:x="20194" fg:w="7"/><text x="72.8172%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27 samples, 0.10%)</title><rect x="72.4989%" y="693" width="0.0970%" height="15" fill="rgb(232,168,51)" fg:x="20175" fg:w="27"/><text x="72.7489%" y="703.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (27 samples, 0.10%)</title><rect x="72.4989%" y="677" width="0.0970%" height="15" fill="rgb(228,56,10)" fg:x="20175" fg:w="27"/><text x="72.7489%" y="687.50"></text></g><g><title>async_executor::Executor::state (31 samples, 0.11%)</title><rect x="72.4953%" y="773" width="0.1114%" height="15" fill="rgb(231,10,26)" fg:x="20174" fg:w="31"/><text x="72.7453%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (30 samples, 0.11%)</title><rect x="72.4989%" y="757" width="0.1078%" height="15" fill="rgb(226,202,12)" fg:x="20175" fg:w="30"/><text x="72.7489%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (30 samples, 0.11%)</title><rect x="72.4989%" y="741" width="0.1078%" height="15" fill="rgb(251,49,21)" fg:x="20175" fg:w="30"/><text x="72.7489%" y="751.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (30 samples, 0.11%)</title><rect x="72.4989%" y="725" width="0.1078%" height="15" fill="rgb(206,228,28)" fg:x="20175" fg:w="30"/><text x="72.7489%" y="735.50"></text></g><g><title>once_cell::imp::initialize_or_wait (30 samples, 0.11%)</title><rect x="72.4989%" y="709" width="0.1078%" height="15" fill="rgb(205,198,31)" fg:x="20175" fg:w="30"/><text x="72.7489%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;once_cell::imp::Guard&gt; (3 samples, 0.01%)</title><rect x="72.5959%" y="693" width="0.0108%" height="15" fill="rgb(213,69,1)" fg:x="20202" fg:w="3"/><text x="72.8459%" y="703.50"></text></g><g><title>&lt;once_cell::imp::Guard as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="72.5959%" y="677" width="0.0108%" height="15" fill="rgb(209,177,9)" fg:x="20202" fg:w="3"/><text x="72.8459%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.02%)</title><rect x="72.6067%" y="757" width="0.0180%" height="15" fill="rgb(227,119,30)" fg:x="20205" fg:w="5"/><text x="72.8567%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.02%)</title><rect x="72.6067%" y="741" width="0.0180%" height="15" fill="rgb(234,106,41)" fg:x="20205" fg:w="5"/><text x="72.8567%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.02%)</title><rect x="72.6067%" y="725" width="0.0180%" height="15" fill="rgb(244,103,47)" fg:x="20205" fg:w="5"/><text x="72.8567%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="72.6103%" y="709" width="0.0144%" height="15" fill="rgb(212,211,25)" fg:x="20206" fg:w="4"/><text x="72.8603%" y="719.50"></text></g><g><title>malloc (3 samples, 0.01%)</title><rect x="72.6139%" y="693" width="0.0108%" height="15" fill="rgb(208,63,53)" fg:x="20207" fg:w="3"/><text x="72.8639%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="72.6247%" y="741" width="0.0144%" height="15" fill="rgb(213,176,21)" fg:x="20210" fg:w="4"/><text x="72.8747%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.06%)</title><rect x="72.6391%" y="725" width="0.0575%" height="15" fill="rgb(243,124,12)" fg:x="20214" fg:w="16"/><text x="72.8891%" y="735.50"></text></g><g><title>core::ptr::write (13 samples, 0.05%)</title><rect x="72.6498%" y="709" width="0.0467%" height="15" fill="rgb(239,2,35)" fg:x="20217" fg:w="13"/><text x="72.8998%" y="719.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="72.6498%" y="693" width="0.0467%" height="15" fill="rgb(253,169,22)" fg:x="20217" fg:w="13"/><text x="72.8998%" y="703.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="72.6498%" y="677" width="0.0467%" height="15" fill="rgb(254,51,12)" fg:x="20217" fg:w="13"/><text x="72.8998%" y="687.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="72.6498%" y="661" width="0.0467%" height="15" fill="rgb(244,17,47)" fg:x="20217" fg:w="13"/><text x="72.8998%" y="671.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="72.6498%" y="645" width="0.0467%" height="15" fill="rgb(251,45,46)" fg:x="20217" fg:w="13"/><text x="72.8998%" y="655.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="72.6570%" y="629" width="0.0395%" height="15" fill="rgb(223,87,43)" fg:x="20219" fg:w="11"/><text x="72.9070%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="72.6678%" y="613" width="0.0287%" height="15" fill="rgb(230,132,31)" fg:x="20222" fg:w="8"/><text x="72.9178%" y="623.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="72.6678%" y="597" width="0.0287%" height="15" fill="rgb(206,99,1)" fg:x="20222" fg:w="8"/><text x="72.9178%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="72.6714%" y="581" width="0.0252%" height="15" fill="rgb(227,110,25)" fg:x="20223" fg:w="7"/><text x="72.9214%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="72.6750%" y="565" width="0.0216%" height="15" fill="rgb(217,182,7)" fg:x="20224" fg:w="6"/><text x="72.9250%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (30 samples, 0.11%)</title><rect x="72.6247%" y="757" width="0.1078%" height="15" fill="rgb(250,176,4)" fg:x="20210" fg:w="30"/><text x="72.8747%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (26 samples, 0.09%)</title><rect x="72.6391%" y="741" width="0.0934%" height="15" fill="rgb(244,98,30)" fg:x="20214" fg:w="26"/><text x="72.8891%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.04%)</title><rect x="72.6966%" y="725" width="0.0359%" height="15" fill="rgb(228,150,42)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.04%)</title><rect x="72.6966%" y="709" width="0.0359%" height="15" fill="rgb(231,91,46)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.04%)</title><rect x="72.6966%" y="693" width="0.0359%" height="15" fill="rgb(252,161,32)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.04%)</title><rect x="72.6966%" y="677" width="0.0359%" height="15" fill="rgb(236,69,41)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.04%)</title><rect x="72.6966%" y="661" width="0.0359%" height="15" fill="rgb(212,160,3)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.04%)</title><rect x="72.6966%" y="645" width="0.0359%" height="15" fill="rgb(216,5,50)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="655.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.04%)</title><rect x="72.6966%" y="629" width="0.0359%" height="15" fill="rgb(241,138,25)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="639.50"></text></g><g><title>malloc (10 samples, 0.04%)</title><rect x="72.6966%" y="613" width="0.0359%" height="15" fill="rgb(239,42,18)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="623.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="72.6966%" y="597" width="0.0359%" height="15" fill="rgb(239,40,7)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="72.6966%" y="581" width="0.0359%" height="15" fill="rgb(239,11,31)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="591.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="72.6966%" y="565" width="0.0359%" height="15" fill="rgb(224,77,40)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="72.6966%" y="549" width="0.0359%" height="15" fill="rgb(226,15,5)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="559.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="72.6966%" y="533" width="0.0359%" height="15" fill="rgb(254,188,5)" fg:x="20230" fg:w="10"/><text x="72.9466%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="72.7145%" y="517" width="0.0180%" height="15" fill="rgb(241,148,52)" fg:x="20235" fg:w="5"/><text x="72.9645%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (637 samples, 2.29%)</title><rect x="70.4542%" y="805" width="2.2891%" height="15" fill="rgb(251,48,36)" fg:x="19606" fg:w="637"/><text x="70.7042%" y="815.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (635 samples, 2.28%)</title><rect x="70.4614%" y="789" width="2.2819%" height="15" fill="rgb(243,83,13)" fg:x="19608" fg:w="635"/><text x="70.7114%" y="799.50">a..</text></g><g><title>async_executor::Runner::new (38 samples, 0.14%)</title><rect x="72.6067%" y="773" width="0.1366%" height="15" fill="rgb(210,105,0)" fg:x="20205" fg:w="38"/><text x="72.8567%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="72.7433%" y="805" width="0.0144%" height="15" fill="rgb(239,60,36)" fg:x="20243" fg:w="4"/><text x="72.9933%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,939 samples, 14.15%)</title><rect x="58.6064%" y="837" width="14.1548%" height="15" fill="rgb(210,20,0)" fg:x="16309" fg:w="3939"/><text x="58.8564%" y="847.50">&lt;core::future::from_g..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (704 samples, 2.53%)</title><rect x="70.2314%" y="821" width="2.5298%" height="15" fill="rgb(244,26,53)" fg:x="19544" fg:w="704"/><text x="70.4814%" y="831.50">as..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,953 samples, 14.21%)</title><rect x="58.5597%" y="853" width="14.2051%" height="15" fill="rgb(240,100,49)" fg:x="16296" fg:w="3953"/><text x="58.8097%" y="863.50">&lt;futures_lite::future:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.06%)</title><rect x="72.7972%" y="821" width="0.0611%" height="15" fill="rgb(250,46,45)" fg:x="20258" fg:w="17"/><text x="73.0472%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.06%)</title><rect x="72.7972%" y="805" width="0.0611%" height="15" fill="rgb(220,181,29)" fg:x="20258" fg:w="17"/><text x="73.0472%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.06%)</title><rect x="72.8008%" y="789" width="0.0575%" height="15" fill="rgb(213,137,33)" fg:x="20259" fg:w="16"/><text x="73.0508%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.06%)</title><rect x="72.8008%" y="773" width="0.0575%" height="15" fill="rgb(213,27,48)" fg:x="20259" fg:w="16"/><text x="73.0508%" y="783.50"></text></g><g><title>malloc (14 samples, 0.05%)</title><rect x="72.8080%" y="757" width="0.0503%" height="15" fill="rgb(245,180,39)" fg:x="20261" fg:w="14"/><text x="73.0580%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.01%)</title><rect x="72.8583%" y="821" width="0.0108%" height="15" fill="rgb(212,158,42)" fg:x="20275" fg:w="3"/><text x="73.1083%" y="831.50"></text></g><g><title>core::mem::replace (3 samples, 0.01%)</title><rect x="72.8583%" y="805" width="0.0108%" height="15" fill="rgb(228,193,18)" fg:x="20275" fg:w="3"/><text x="73.1083%" y="815.50"></text></g><g><title>core::ptr::read (3 samples, 0.01%)</title><rect x="72.8583%" y="789" width="0.0108%" height="15" fill="rgb(245,172,29)" fg:x="20275" fg:w="3"/><text x="73.1083%" y="799.50"></text></g><g><title>async_io::reactor::Direction::drain_into (21 samples, 0.08%)</title><rect x="72.7972%" y="837" width="0.0755%" height="15" fill="rgb(207,98,24)" fg:x="20258" fg:w="21"/><text x="73.0472%" y="847.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="72.8834%" y="821" width="0.0108%" height="15" fill="rgb(249,92,26)" fg:x="20282" fg:w="3"/><text x="73.1334%" y="831.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (3 samples, 0.01%)</title><rect x="72.8834%" y="805" width="0.0108%" height="15" fill="rgb(217,176,26)" fg:x="20282" fg:w="3"/><text x="73.1334%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (3 samples, 0.01%)</title><rect x="72.8834%" y="789" width="0.0108%" height="15" fill="rgb(221,8,39)" fg:x="20282" fg:w="3"/><text x="73.1334%" y="799.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (3 samples, 0.01%)</title><rect x="72.8834%" y="773" width="0.0108%" height="15" fill="rgb(208,90,18)" fg:x="20282" fg:w="3"/><text x="73.1334%" y="783.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (3 samples, 0.01%)</title><rect x="72.8834%" y="757" width="0.0108%" height="15" fill="rgb(207,202,30)" fg:x="20282" fg:w="3"/><text x="73.1334%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="72.8834%" y="741" width="0.0108%" height="15" fill="rgb(231,124,22)" fg:x="20282" fg:w="3"/><text x="73.1334%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="72.8834%" y="725" width="0.0108%" height="15" fill="rgb(206,15,5)" fg:x="20282" fg:w="3"/><text x="73.1334%" y="735.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="72.8834%" y="709" width="0.0108%" height="15" fill="rgb(239,16,52)" fg:x="20282" fg:w="3"/><text x="73.1334%" y="719.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_right_border (3 samples, 0.01%)</title><rect x="72.9050%" y="789" width="0.0108%" height="15" fill="rgb(245,213,29)" fg:x="20288" fg:w="3"/><text x="73.1550%" y="799.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_top (3 samples, 0.01%)</title><rect x="72.9050%" y="773" width="0.0108%" height="15" fill="rgb(213,203,36)" fg:x="20288" fg:w="3"/><text x="73.1550%" y="783.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::pop_internal_level (3 samples, 0.01%)</title><rect x="72.9050%" y="757" width="0.0108%" height="15" fill="rgb(209,55,18)" fg:x="20288" fg:w="3"/><text x="73.1550%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.01%)</title><rect x="72.9050%" y="741" width="0.0108%" height="15" fill="rgb(207,133,49)" fg:x="20288" fg:w="3"/><text x="73.1550%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.01%)</title><rect x="72.9050%" y="725" width="0.0108%" height="15" fill="rgb(240,33,46)" fg:x="20288" fg:w="3"/><text x="73.1550%" y="735.50"></text></g><g><title>cfree (3 samples, 0.01%)</title><rect x="72.9050%" y="709" width="0.0108%" height="15" fill="rgb(212,35,2)" fg:x="20288" fg:w="3"/><text x="73.1550%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (8 samples, 0.03%)</title><rect x="72.9158%" y="789" width="0.0287%" height="15" fill="rgb(231,119,28)" fg:x="20291" fg:w="8"/><text x="73.1658%" y="799.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (6 samples, 0.02%)</title><rect x="72.9230%" y="773" width="0.0216%" height="15" fill="rgb(252,178,7)" fg:x="20293" fg:w="6"/><text x="73.1730%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="72.9230%" y="757" width="0.0216%" height="15" fill="rgb(251,91,4)" fg:x="20293" fg:w="6"/><text x="73.1730%" y="767.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="72.9230%" y="741" width="0.0216%" height="15" fill="rgb(233,122,19)" fg:x="20293" fg:w="6"/><text x="73.1730%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (9 samples, 0.03%)</title><rect x="72.9517%" y="773" width="0.0323%" height="15" fill="rgb(231,208,46)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="783.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (9 samples, 0.03%)</title><rect x="72.9517%" y="757" width="0.0323%" height="15" fill="rgb(243,15,41)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="767.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (9 samples, 0.03%)</title><rect x="72.9517%" y="741" width="0.0323%" height="15" fill="rgb(210,32,43)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (9 samples, 0.03%)</title><rect x="72.9517%" y="725" width="0.0323%" height="15" fill="rgb(222,177,15)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (9 samples, 0.03%)</title><rect x="72.9517%" y="709" width="0.0323%" height="15" fill="rgb(244,121,34)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (9 samples, 0.03%)</title><rect x="72.9517%" y="693" width="0.0323%" height="15" fill="rgb(234,138,4)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.03%)</title><rect x="72.9517%" y="677" width="0.0323%" height="15" fill="rgb(240,97,48)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.03%)</title><rect x="72.9517%" y="661" width="0.0323%" height="15" fill="rgb(237,65,54)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="671.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.03%)</title><rect x="72.9517%" y="645" width="0.0323%" height="15" fill="rgb(214,25,24)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="655.50"></text></g><g><title>malloc (9 samples, 0.03%)</title><rect x="72.9517%" y="629" width="0.0323%" height="15" fill="rgb(213,5,3)" fg:x="20301" fg:w="9"/><text x="73.2017%" y="639.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (5 samples, 0.02%)</title><rect x="72.9840%" y="677" width="0.0180%" height="15" fill="rgb(219,81,29)" fg:x="20310" fg:w="5"/><text x="73.2340%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (5 samples, 0.02%)</title><rect x="72.9840%" y="661" width="0.0180%" height="15" fill="rgb(220,43,48)" fg:x="20310" fg:w="5"/><text x="73.2340%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.02%)</title><rect x="72.9840%" y="645" width="0.0180%" height="15" fill="rgb(239,157,2)" fg:x="20310" fg:w="5"/><text x="73.2340%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.02%)</title><rect x="72.9840%" y="629" width="0.0180%" height="15" fill="rgb(213,104,43)" fg:x="20310" fg:w="5"/><text x="73.2340%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="72.9840%" y="613" width="0.0180%" height="15" fill="rgb(237,84,9)" fg:x="20310" fg:w="5"/><text x="73.2340%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="72.9840%" y="597" width="0.0180%" height="15" fill="rgb(252,6,33)" fg:x="20310" fg:w="5"/><text x="73.2340%" y="607.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="72.9840%" y="581" width="0.0180%" height="15" fill="rgb(251,172,22)" fg:x="20310" fg:w="5"/><text x="73.2340%" y="591.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="72.9840%" y="565" width="0.0180%" height="15" fill="rgb(244,91,53)" fg:x="20310" fg:w="5"/><text x="73.2340%" y="575.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (15 samples, 0.05%)</title><rect x="72.9517%" y="789" width="0.0539%" height="15" fill="rgb(219,29,30)" fg:x="20301" fg:w="15"/><text x="73.2017%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (6 samples, 0.02%)</title><rect x="72.9840%" y="773" width="0.0216%" height="15" fill="rgb(213,3,15)" fg:x="20310" fg:w="6"/><text x="73.2340%" y="783.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (6 samples, 0.02%)</title><rect x="72.9840%" y="757" width="0.0216%" height="15" fill="rgb(208,25,28)" fg:x="20310" fg:w="6"/><text x="73.2340%" y="767.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.02%)</title><rect x="72.9840%" y="741" width="0.0216%" height="15" fill="rgb(252,144,25)" fg:x="20310" fg:w="6"/><text x="73.2340%" y="751.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::{{closure}} (6 samples, 0.02%)</title><rect x="72.9840%" y="725" width="0.0216%" height="15" fill="rgb(226,220,25)" fg:x="20310" fg:w="6"/><text x="73.2340%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}} (6 samples, 0.02%)</title><rect x="72.9840%" y="709" width="0.0216%" height="15" fill="rgb(212,131,28)" fg:x="20310" fg:w="6"/><text x="73.2340%" y="719.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (6 samples, 0.02%)</title><rect x="72.9840%" y="693" width="0.0216%" height="15" fill="rgb(219,143,52)" fg:x="20310" fg:w="6"/><text x="73.2340%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (32 samples, 0.11%)</title><rect x="72.8942%" y="821" width="0.1150%" height="15" fill="rgb(215,56,7)" fg:x="20285" fg:w="32"/><text x="73.1442%" y="831.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (31 samples, 0.11%)</title><rect x="72.8978%" y="805" width="0.1114%" height="15" fill="rgb(239,59,51)" fg:x="20286" fg:w="31"/><text x="73.1478%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (8 samples, 0.03%)</title><rect x="73.0164%" y="789" width="0.0287%" height="15" fill="rgb(209,215,4)" fg:x="20319" fg:w="8"/><text x="73.2664%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (8 samples, 0.03%)</title><rect x="73.0164%" y="773" width="0.0287%" height="15" fill="rgb(221,118,39)" fg:x="20319" fg:w="8"/><text x="73.2664%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (8 samples, 0.03%)</title><rect x="73.0164%" y="757" width="0.0287%" height="15" fill="rgb(236,6,44)" fg:x="20319" fg:w="8"/><text x="73.2664%" y="767.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (8 samples, 0.03%)</title><rect x="73.0164%" y="741" width="0.0287%" height="15" fill="rgb(216,122,9)" fg:x="20319" fg:w="8"/><text x="73.2664%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (13 samples, 0.05%)</title><rect x="73.0128%" y="805" width="0.0467%" height="15" fill="rgb(244,134,42)" fg:x="20318" fg:w="13"/><text x="73.2628%" y="815.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (4 samples, 0.01%)</title><rect x="73.0451%" y="789" width="0.0144%" height="15" fill="rgb(209,189,35)" fg:x="20327" fg:w="4"/><text x="73.2951%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (4 samples, 0.01%)</title><rect x="73.0451%" y="773" width="0.0144%" height="15" fill="rgb(250,47,36)" fg:x="20327" fg:w="4"/><text x="73.2951%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (3 samples, 0.01%)</title><rect x="73.0595%" y="805" width="0.0108%" height="15" fill="rgb(252,112,4)" fg:x="20331" fg:w="3"/><text x="73.3095%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (3 samples, 0.01%)</title><rect x="73.0595%" y="789" width="0.0108%" height="15" fill="rgb(221,79,51)" fg:x="20331" fg:w="3"/><text x="73.3095%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (10 samples, 0.04%)</title><rect x="73.0739%" y="805" width="0.0359%" height="15" fill="rgb(232,65,53)" fg:x="20335" fg:w="10"/><text x="73.3239%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (9 samples, 0.03%)</title><rect x="73.0775%" y="789" width="0.0323%" height="15" fill="rgb(211,37,7)" fg:x="20336" fg:w="9"/><text x="73.3275%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.01%)</title><rect x="73.0990%" y="773" width="0.0108%" height="15" fill="rgb(234,221,18)" fg:x="20342" fg:w="3"/><text x="73.3490%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="73.0990%" y="757" width="0.0108%" height="15" fill="rgb(220,158,26)" fg:x="20342" fg:w="3"/><text x="73.3490%" y="767.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (31 samples, 0.11%)</title><rect x="73.0092%" y="821" width="0.1114%" height="15" fill="rgb(220,70,6)" fg:x="20317" fg:w="31"/><text x="73.2592%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.01%)</title><rect x="73.1206%" y="821" width="0.0108%" height="15" fill="rgb(250,39,48)" fg:x="20348" fg:w="3"/><text x="73.3706%" y="831.50"></text></g><g><title>async_io::reactor::Reactor::process_timers::{{closure}} (3 samples, 0.01%)</title><rect x="73.1206%" y="805" width="0.0108%" height="15" fill="rgb(206,40,27)" fg:x="20348" fg:w="3"/><text x="73.3706%" y="815.50"></text></g><g><title>std::time::Instant::duration_since (3 samples, 0.01%)</title><rect x="73.1206%" y="789" width="0.0108%" height="15" fill="rgb(247,80,36)" fg:x="20348" fg:w="3"/><text x="73.3706%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.01%)</title><rect x="73.1314%" y="821" width="0.0108%" height="15" fill="rgb(222,9,20)" fg:x="20351" fg:w="3"/><text x="73.3814%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.01%)</title><rect x="73.1314%" y="805" width="0.0108%" height="15" fill="rgb(217,26,45)" fg:x="20351" fg:w="3"/><text x="73.3814%" y="815.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (3 samples, 0.01%)</title><rect x="73.1314%" y="789" width="0.0108%" height="15" fill="rgb(221,67,14)" fg:x="20351" fg:w="3"/><text x="73.3814%" y="799.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (78 samples, 0.28%)</title><rect x="72.8762%" y="837" width="0.2803%" height="15" fill="rgb(248,100,24)" fg:x="20280" fg:w="78"/><text x="73.1262%" y="847.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.01%)</title><rect x="73.1422%" y="821" width="0.0144%" height="15" fill="rgb(230,187,16)" fg:x="20354" fg:w="4"/><text x="73.3922%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.01%)</title><rect x="73.1422%" y="805" width="0.0144%" height="15" fill="rgb(205,108,13)" fg:x="20354" fg:w="4"/><text x="73.3922%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.01%)</title><rect x="73.1422%" y="789" width="0.0144%" height="15" fill="rgb(235,71,51)" fg:x="20354" fg:w="4"/><text x="73.3922%" y="799.50"></text></g><g><title>clock_gettime (4 samples, 0.01%)</title><rect x="73.1422%" y="773" width="0.0144%" height="15" fill="rgb(251,172,48)" fg:x="20354" fg:w="4"/><text x="73.3922%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.02%)</title><rect x="73.1565%" y="837" width="0.0180%" height="15" fill="rgb(240,96,49)" fg:x="20358" fg:w="5"/><text x="73.4065%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="73.1565%" y="821" width="0.0180%" height="15" fill="rgb(235,46,36)" fg:x="20358" fg:w="5"/><text x="73.4065%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::task::wake::Waker,alloc::alloc::Global&gt;&gt; (4 samples, 0.01%)</title><rect x="73.1601%" y="805" width="0.0144%" height="15" fill="rgb(244,3,49)" fg:x="20359" fg:w="4"/><text x="73.4101%" y="815.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="73.1601%" y="789" width="0.0144%" height="15" fill="rgb(206,78,54)" fg:x="20359" fg:w="4"/><text x="73.4101%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::task::wake::Waker&gt;&gt; (4 samples, 0.01%)</title><rect x="73.1601%" y="773" width="0.0144%" height="15" fill="rgb(208,85,42)" fg:x="20359" fg:w="4"/><text x="73.4101%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="73.1601%" y="757" width="0.0144%" height="15" fill="rgb(219,196,21)" fg:x="20359" fg:w="4"/><text x="73.4101%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="73.1601%" y="741" width="0.0144%" height="15" fill="rgb(238,19,9)" fg:x="20359" fg:w="4"/><text x="73.4101%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="73.1601%" y="725" width="0.0144%" height="15" fill="rgb(206,86,13)" fg:x="20359" fg:w="4"/><text x="73.4101%" y="735.50"></text></g><g><title>cfree (4 samples, 0.01%)</title><rect x="73.1601%" y="709" width="0.0144%" height="15" fill="rgb(214,123,40)" fg:x="20359" fg:w="4"/><text x="73.4101%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;[async_io::reactor::Direction: 2]&gt;&gt; (3 samples, 0.01%)</title><rect x="73.1745%" y="837" width="0.0108%" height="15" fill="rgb(243,53,5)" fg:x="20363" fg:w="3"/><text x="73.4245%" y="847.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="73.1745%" y="821" width="0.0108%" height="15" fill="rgb(254,186,31)" fg:x="20363" fg:w="3"/><text x="73.4245%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.01%)</title><rect x="73.1745%" y="805" width="0.0108%" height="15" fill="rgb(221,216,25)" fg:x="20363" fg:w="3"/><text x="73.4245%" y="815.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (3 samples, 0.01%)</title><rect x="73.1745%" y="789" width="0.0108%" height="15" fill="rgb(248,107,42)" fg:x="20363" fg:w="3"/><text x="73.4245%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.01%)</title><rect x="73.2104%" y="821" width="0.0108%" height="15" fill="rgb(221,85,43)" fg:x="20373" fg:w="3"/><text x="73.4604%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.01%)</title><rect x="73.2104%" y="805" width="0.0108%" height="15" fill="rgb(225,34,24)" fg:x="20373" fg:w="3"/><text x="73.4604%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.01%)</title><rect x="73.2104%" y="789" width="0.0108%" height="15" fill="rgb(211,119,1)" fg:x="20373" fg:w="3"/><text x="73.4604%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="73.2212%" y="821" width="0.0144%" height="15" fill="rgb(254,216,46)" fg:x="20376" fg:w="4"/><text x="73.4712%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (4 samples, 0.01%)</title><rect x="73.2356%" y="821" width="0.0144%" height="15" fill="rgb(238,11,38)" fg:x="20380" fg:w="4"/><text x="73.4856%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="73.2356%" y="805" width="0.0144%" height="15" fill="rgb(233,50,15)" fg:x="20380" fg:w="4"/><text x="73.4856%" y="815.50"></text></g><g><title>polling::epoll::Events::iter (6 samples, 0.02%)</title><rect x="73.2500%" y="821" width="0.0216%" height="15" fill="rgb(217,181,29)" fg:x="20384" fg:w="6"/><text x="73.5000%" y="831.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="73.2859%" y="789" width="0.0144%" height="15" fill="rgb(214,56,3)" fg:x="20394" fg:w="4"/><text x="73.5359%" y="799.50"></text></g><g><title>epoll_wait (13 samples, 0.05%)</title><rect x="73.2859%" y="805" width="0.0467%" height="15" fill="rgb(230,69,45)" fg:x="20394" fg:w="13"/><text x="73.5359%" y="815.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="73.3003%" y="789" width="0.0323%" height="15" fill="rgb(224,201,50)" fg:x="20398" fg:w="9"/><text x="73.5503%" y="799.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="73.3003%" y="773" width="0.0323%" height="15" fill="rgb(217,228,18)" fg:x="20398" fg:w="9"/><text x="73.5503%" y="783.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="73.3003%" y="757" width="0.0323%" height="15" fill="rgb(239,33,44)" fg:x="20398" fg:w="9"/><text x="73.5503%" y="767.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="73.3003%" y="741" width="0.0323%" height="15" fill="rgb(248,210,23)" fg:x="20398" fg:w="9"/><text x="73.5503%" y="751.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="73.3039%" y="725" width="0.0287%" height="15" fill="rgb(253,135,8)" fg:x="20399" fg:w="8"/><text x="73.5539%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="73.3146%" y="709" width="0.0180%" height="15" fill="rgb(217,98,21)" fg:x="20402" fg:w="5"/><text x="73.5646%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="73.3182%" y="693" width="0.0144%" height="15" fill="rgb(253,130,21)" fg:x="20403" fg:w="4"/><text x="73.5682%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="73.3182%" y="677" width="0.0144%" height="15" fill="rgb(207,81,54)" fg:x="20403" fg:w="4"/><text x="73.5682%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="73.3182%" y="661" width="0.0144%" height="15" fill="rgb(232,48,33)" fg:x="20403" fg:w="4"/><text x="73.5682%" y="671.50"></text></g><g><title>polling::epoll::Poller::modify (21 samples, 0.08%)</title><rect x="73.3326%" y="805" width="0.0755%" height="15" fill="rgb(211,9,35)" fg:x="20407" fg:w="21"/><text x="73.5826%" y="815.50"></text></g><g><title>polling::epoll::Poller::ctl (18 samples, 0.06%)</title><rect x="73.3434%" y="789" width="0.0647%" height="15" fill="rgb(205,152,21)" fg:x="20410" fg:w="18"/><text x="73.5934%" y="799.50"></text></g><g><title>epoll_ctl (18 samples, 0.06%)</title><rect x="73.3434%" y="773" width="0.0647%" height="15" fill="rgb(249,21,27)" fg:x="20410" fg:w="18"/><text x="73.5934%" y="783.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="73.3434%" y="757" width="0.0647%" height="15" fill="rgb(252,29,24)" fg:x="20410" fg:w="18"/><text x="73.5934%" y="767.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="73.3434%" y="741" width="0.0647%" height="15" fill="rgb(230,130,50)" fg:x="20410" fg:w="18"/><text x="73.5934%" y="751.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="73.3434%" y="725" width="0.0647%" height="15" fill="rgb(239,144,14)" fg:x="20410" fg:w="18"/><text x="73.5934%" y="735.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="73.3470%" y="709" width="0.0611%" height="15" fill="rgb(227,111,50)" fg:x="20411" fg:w="17"/><text x="73.5970%" y="719.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="73.3793%" y="693" width="0.0287%" height="15" fill="rgb(254,84,20)" fg:x="20420" fg:w="8"/><text x="73.6293%" y="703.50"></text></g><g><title>read (47 samples, 0.17%)</title><rect x="73.4081%" y="805" width="0.1689%" height="15" fill="rgb(232,90,48)" fg:x="20428" fg:w="47"/><text x="73.6581%" y="815.50"></text></g><g><title>[unknown] (45 samples, 0.16%)</title><rect x="73.4153%" y="789" width="0.1617%" height="15" fill="rgb(253,63,47)" fg:x="20430" fg:w="45"/><text x="73.6653%" y="799.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="73.4189%" y="773" width="0.1581%" height="15" fill="rgb(251,146,35)" fg:x="20431" fg:w="44"/><text x="73.6689%" y="783.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="73.4189%" y="757" width="0.1581%" height="15" fill="rgb(229,192,35)" fg:x="20431" fg:w="44"/><text x="73.6689%" y="767.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="73.4189%" y="741" width="0.1581%" height="15" fill="rgb(225,68,9)" fg:x="20431" fg:w="44"/><text x="73.6689%" y="751.50"></text></g><g><title>[unknown] (38 samples, 0.14%)</title><rect x="73.4404%" y="725" width="0.1366%" height="15" fill="rgb(214,97,34)" fg:x="20437" fg:w="38"/><text x="73.6904%" y="735.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="73.5015%" y="709" width="0.0755%" height="15" fill="rgb(253,31,26)" fg:x="20454" fg:w="21"/><text x="73.7515%" y="719.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="73.5087%" y="693" width="0.0683%" height="15" fill="rgb(225,151,47)" fg:x="20456" fg:w="19"/><text x="73.7587%" y="703.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="73.5518%" y="677" width="0.0252%" height="15" fill="rgb(206,185,9)" fg:x="20468" fg:w="7"/><text x="73.8018%" y="687.50"></text></g><g><title>polling::Poller::wait (128 samples, 0.46%)</title><rect x="73.1925%" y="837" width="0.4600%" height="15" fill="rgb(249,65,17)" fg:x="20368" fg:w="128"/><text x="73.4425%" y="847.50"></text></g><g><title>polling::epoll::Poller::wait (106 samples, 0.38%)</title><rect x="73.2715%" y="821" width="0.3809%" height="15" fill="rgb(220,110,10)" fg:x="20390" fg:w="106"/><text x="73.5215%" y="831.50"></text></g><g><title>syscall (20 samples, 0.07%)</title><rect x="73.5806%" y="805" width="0.0719%" height="15" fill="rgb(222,198,49)" fg:x="20476" fg:w="20"/><text x="73.8306%" y="815.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="73.5842%" y="789" width="0.0683%" height="15" fill="rgb(239,81,13)" fg:x="20477" fg:w="19"/><text x="73.8342%" y="799.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="73.5842%" y="773" width="0.0683%" height="15" fill="rgb(216,128,11)" fg:x="20477" fg:w="19"/><text x="73.8342%" y="783.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="73.5842%" y="757" width="0.0683%" height="15" fill="rgb(247,156,8)" fg:x="20477" fg:w="19"/><text x="73.8342%" y="767.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="73.5949%" y="741" width="0.0575%" height="15" fill="rgb(219,173,1)" fg:x="20480" fg:w="16"/><text x="73.8449%" y="751.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="73.5985%" y="725" width="0.0539%" height="15" fill="rgb(227,42,24)" fg:x="20481" fg:w="15"/><text x="73.8485%" y="735.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="73.6129%" y="709" width="0.0395%" height="15" fill="rgb(253,219,50)" fg:x="20485" fg:w="11"/><text x="73.8629%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="73.6417%" y="693" width="0.0108%" height="15" fill="rgb(215,191,54)" fg:x="20493" fg:w="3"/><text x="73.8917%" y="703.50"></text></g><g><title>async_executor::State::notify (22 samples, 0.08%)</title><rect x="73.6776%" y="709" width="0.0791%" height="15" fill="rgb(238,83,12)" fg:x="20503" fg:w="22"/><text x="73.9276%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake (22 samples, 0.08%)</title><rect x="73.6776%" y="693" width="0.0791%" height="15" fill="rgb(205,124,9)" fg:x="20503" fg:w="22"/><text x="73.9276%" y="703.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (22 samples, 0.08%)</title><rect x="73.6776%" y="677" width="0.0791%" height="15" fill="rgb(253,174,7)" fg:x="20503" fg:w="22"/><text x="73.9276%" y="687.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (22 samples, 0.08%)</title><rect x="73.6776%" y="661" width="0.0791%" height="15" fill="rgb(206,134,49)" fg:x="20503" fg:w="22"/><text x="73.9276%" y="671.50"></text></g><g><title>parking::Unparker::unpark (22 samples, 0.08%)</title><rect x="73.6776%" y="645" width="0.0791%" height="15" fill="rgb(221,89,20)" fg:x="20503" fg:w="22"/><text x="73.9276%" y="655.50"></text></g><g><title>parking::Inner::unpark (17 samples, 0.06%)</title><rect x="73.6956%" y="629" width="0.0611%" height="15" fill="rgb(240,205,13)" fg:x="20508" fg:w="17"/><text x="73.9456%" y="639.50"></text></g><g><title>syscall (14 samples, 0.05%)</title><rect x="73.7063%" y="613" width="0.0503%" height="15" fill="rgb(237,174,32)" fg:x="20511" fg:w="14"/><text x="73.9563%" y="623.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="73.7063%" y="597" width="0.0503%" height="15" fill="rgb(226,12,15)" fg:x="20511" fg:w="14"/><text x="73.9563%" y="607.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="73.7063%" y="581" width="0.0503%" height="15" fill="rgb(245,160,52)" fg:x="20511" fg:w="14"/><text x="73.9563%" y="591.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="73.7063%" y="565" width="0.0503%" height="15" fill="rgb(253,80,21)" fg:x="20511" fg:w="14"/><text x="73.9563%" y="575.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="73.7063%" y="549" width="0.0503%" height="15" fill="rgb(231,225,22)" fg:x="20511" fg:w="14"/><text x="73.9563%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="73.7135%" y="533" width="0.0431%" height="15" fill="rgb(253,185,12)" fg:x="20513" fg:w="12"/><text x="73.9635%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="73.7351%" y="517" width="0.0216%" height="15" fill="rgb(234,197,21)" fg:x="20519" fg:w="6"/><text x="73.9851%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="73.7423%" y="501" width="0.0144%" height="15" fill="rgb(210,47,30)" fg:x="20521" fg:w="4"/><text x="73.9923%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="73.7423%" y="485" width="0.0144%" height="15" fill="rgb(246,139,27)" fg:x="20521" fg:w="4"/><text x="73.9923%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="73.7459%" y="469" width="0.0108%" height="15" fill="rgb(226,130,16)" fg:x="20522" fg:w="3"/><text x="73.9959%" y="479.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (36 samples, 0.13%)</title><rect x="73.6776%" y="725" width="0.1294%" height="15" fill="rgb(237,208,20)" fg:x="20503" fg:w="36"/><text x="73.9276%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (14 samples, 0.05%)</title><rect x="73.7566%" y="709" width="0.0503%" height="15" fill="rgb(245,186,28)" fg:x="20525" fg:w="14"/><text x="74.0066%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (12 samples, 0.04%)</title><rect x="73.7638%" y="693" width="0.0431%" height="15" fill="rgb(238,105,39)" fg:x="20527" fg:w="12"/><text x="74.0138%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.01%)</title><rect x="73.7962%" y="677" width="0.0108%" height="15" fill="rgb(253,228,11)" fg:x="20536" fg:w="3"/><text x="74.0462%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.01%)</title><rect x="73.7962%" y="661" width="0.0108%" height="15" fill="rgb(224,136,38)" fg:x="20536" fg:w="3"/><text x="74.0462%" y="671.50"></text></g><g><title>std::panic::catch_unwind (45 samples, 0.16%)</title><rect x="73.6596%" y="837" width="0.1617%" height="15" fill="rgb(211,3,25)" fg:x="20498" fg:w="45"/><text x="73.9096%" y="847.50"></text></g><g><title>std::panicking::try (45 samples, 0.16%)</title><rect x="73.6596%" y="821" width="0.1617%" height="15" fill="rgb(238,66,34)" fg:x="20498" fg:w="45"/><text x="73.9096%" y="831.50"></text></g><g><title>std::panicking::try::do_call (45 samples, 0.16%)</title><rect x="73.6596%" y="805" width="0.1617%" height="15" fill="rgb(223,188,11)" fg:x="20498" fg:w="45"/><text x="73.9096%" y="815.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (45 samples, 0.16%)</title><rect x="73.6596%" y="789" width="0.1617%" height="15" fill="rgb(221,10,35)" fg:x="20498" fg:w="45"/><text x="73.9096%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (45 samples, 0.16%)</title><rect x="73.6596%" y="773" width="0.1617%" height="15" fill="rgb(223,18,44)" fg:x="20498" fg:w="45"/><text x="73.9096%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (45 samples, 0.16%)</title><rect x="73.6596%" y="757" width="0.1617%" height="15" fill="rgb(220,97,41)" fg:x="20498" fg:w="45"/><text x="73.9096%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (40 samples, 0.14%)</title><rect x="73.6776%" y="741" width="0.1437%" height="15" fill="rgb(206,95,45)" fg:x="20503" fg:w="40"/><text x="73.9276%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.01%)</title><rect x="73.8070%" y="725" width="0.0144%" height="15" fill="rgb(209,96,13)" fg:x="20539" fg:w="4"/><text x="74.0570%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="73.8070%" y="709" width="0.0144%" height="15" fill="rgb(237,39,34)" fg:x="20539" fg:w="4"/><text x="74.0570%" y="719.50"></text></g><g><title>async_io::reactor::ReactorLock::react (298 samples, 1.07%)</title><rect x="72.7756%" y="853" width="1.0709%" height="15" fill="rgb(213,49,47)" fg:x="20252" fg:w="298"/><text x="73.0256%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.03%)</title><rect x="73.8213%" y="837" width="0.0252%" height="15" fill="rgb(205,107,27)" fg:x="20543" fg:w="7"/><text x="74.0713%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (7 samples, 0.03%)</title><rect x="73.8213%" y="821" width="0.0252%" height="15" fill="rgb(212,142,9)" fg:x="20543" fg:w="7"/><text x="74.0713%" y="831.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (7 samples, 0.03%)</title><rect x="73.8213%" y="805" width="0.0252%" height="15" fill="rgb(226,182,0)" fg:x="20543" fg:w="7"/><text x="74.0713%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (7 samples, 0.03%)</title><rect x="73.8788%" y="821" width="0.0252%" height="15" fill="rgb(231,3,53)" fg:x="20559" fg:w="7"/><text x="74.1288%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="73.8788%" y="805" width="0.0252%" height="15" fill="rgb(246,111,28)" fg:x="20559" fg:w="7"/><text x="74.1288%" y="815.50"></text></g><g><title>std::sync::poison::Flag::done (7 samples, 0.03%)</title><rect x="73.8788%" y="789" width="0.0252%" height="15" fill="rgb(254,183,7)" fg:x="20559" fg:w="7"/><text x="74.1288%" y="799.50"></text></g><g><title>std::sys::unix::futex::futex_wait (27 samples, 0.10%)</title><rect x="73.9255%" y="757" width="0.0970%" height="15" fill="rgb(247,177,28)" fg:x="20572" fg:w="27"/><text x="74.1755%" y="767.50"></text></g><g><title>syscall (23 samples, 0.08%)</title><rect x="73.9399%" y="741" width="0.0827%" height="15" fill="rgb(244,43,1)" fg:x="20576" fg:w="23"/><text x="74.1899%" y="751.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="73.9435%" y="725" width="0.0791%" height="15" fill="rgb(207,2,35)" fg:x="20577" fg:w="22"/><text x="74.1935%" y="735.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="73.9435%" y="709" width="0.0791%" height="15" fill="rgb(213,83,22)" fg:x="20577" fg:w="22"/><text x="74.1935%" y="719.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="73.9435%" y="693" width="0.0791%" height="15" fill="rgb(246,212,13)" fg:x="20577" fg:w="22"/><text x="74.1935%" y="703.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="73.9435%" y="677" width="0.0791%" height="15" fill="rgb(213,127,46)" fg:x="20577" fg:w="22"/><text x="74.1935%" y="687.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="73.9435%" y="661" width="0.0791%" height="15" fill="rgb(219,215,39)" fg:x="20577" fg:w="22"/><text x="74.1935%" y="671.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="73.9435%" y="645" width="0.0791%" height="15" fill="rgb(227,99,17)" fg:x="20577" fg:w="22"/><text x="74.1935%" y="655.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="73.9507%" y="629" width="0.0719%" height="15" fill="rgb(208,155,18)" fg:x="20579" fg:w="20"/><text x="74.2007%" y="639.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="73.9579%" y="613" width="0.0647%" height="15" fill="rgb(223,204,38)" fg:x="20581" fg:w="18"/><text x="74.2079%" y="623.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="73.9759%" y="597" width="0.0467%" height="15" fill="rgb(212,114,21)" fg:x="20586" fg:w="13"/><text x="74.2259%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="73.9902%" y="581" width="0.0323%" height="15" fill="rgb(250,74,13)" fg:x="20590" fg:w="9"/><text x="74.2402%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="74.0010%" y="565" width="0.0216%" height="15" fill="rgb(234,7,1)" fg:x="20593" fg:w="6"/><text x="74.2510%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="74.0082%" y="549" width="0.0144%" height="15" fill="rgb(207,138,31)" fg:x="20595" fg:w="4"/><text x="74.2582%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (37 samples, 0.13%)</title><rect x="73.9040%" y="789" width="0.1330%" height="15" fill="rgb(215,186,42)" fg:x="20566" fg:w="37"/><text x="74.1540%" y="799.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (31 samples, 0.11%)</title><rect x="73.9255%" y="773" width="0.1114%" height="15" fill="rgb(229,205,49)" fg:x="20572" fg:w="31"/><text x="74.1755%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (4 samples, 0.01%)</title><rect x="74.0226%" y="757" width="0.0144%" height="15" fill="rgb(216,156,32)" fg:x="20599" fg:w="4"/><text x="74.2726%" y="767.50"></text></g><g><title>std::sync::condvar::Condvar::wait (38 samples, 0.14%)</title><rect x="73.9040%" y="821" width="0.1366%" height="15" fill="rgb(238,7,21)" fg:x="20566" fg:w="38"/><text x="74.1540%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (38 samples, 0.14%)</title><rect x="73.9040%" y="805" width="0.1366%" height="15" fill="rgb(249,190,22)" fg:x="20566" fg:w="38"/><text x="74.1540%" y="815.50"></text></g><g><title>parking::Parker::park (54 samples, 0.19%)</title><rect x="73.8501%" y="853" width="0.1940%" height="15" fill="rgb(253,51,31)" fg:x="20551" fg:w="54"/><text x="74.1001%" y="863.50"></text></g><g><title>parking::Inner::park (52 samples, 0.19%)</title><rect x="73.8573%" y="837" width="0.1869%" height="15" fill="rgb(237,90,54)" fg:x="20553" fg:w="52"/><text x="74.1073%" y="847.50"></text></g><g><title>parking::Parker::park_timeout (4 samples, 0.01%)</title><rect x="74.0441%" y="853" width="0.0144%" height="15" fill="rgb(250,214,33)" fg:x="20605" fg:w="4"/><text x="74.2941%" y="863.50"></text></g><g><title>parking::Unparker::unpark (3 samples, 0.01%)</title><rect x="74.0585%" y="853" width="0.0108%" height="15" fill="rgb(237,10,49)" fg:x="20609" fg:w="3"/><text x="74.3085%" y="863.50"></text></g><g><title>parking::Inner::unpark (3 samples, 0.01%)</title><rect x="74.0585%" y="837" width="0.0108%" height="15" fill="rgb(241,56,36)" fg:x="20609" fg:w="3"/><text x="74.3085%" y="847.50"></text></g><g><title>syscall (3 samples, 0.01%)</title><rect x="74.0585%" y="821" width="0.0108%" height="15" fill="rgb(227,164,12)" fg:x="20609" fg:w="3"/><text x="74.3085%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="74.0585%" y="805" width="0.0108%" height="15" fill="rgb(249,149,35)" fg:x="20609" fg:w="3"/><text x="74.3085%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="74.0585%" y="789" width="0.0108%" height="15" fill="rgb(238,227,50)" fg:x="20609" fg:w="3"/><text x="74.3085%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="74.0585%" y="773" width="0.0108%" height="15" fill="rgb(235,102,45)" fg:x="20609" fg:w="3"/><text x="74.3085%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="74.0585%" y="757" width="0.0108%" height="15" fill="rgb(211,10,38)" fg:x="20609" fg:w="3"/><text x="74.3085%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="74.0585%" y="741" width="0.0108%" height="15" fill="rgb(219,77,48)" fg:x="20609" fg:w="3"/><text x="74.3085%" y="751.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,322 samples, 15.53%)</title><rect x="58.5561%" y="885" width="15.5311%" height="15" fill="rgb(246,6,15)" fg:x="16295" fg:w="4322"/><text x="58.8061%" y="895.50">async_global_executor::r..</text></g><g><title>async_io::driver::block_on (4,322 samples, 15.53%)</title><rect x="58.5561%" y="869" width="15.5311%" height="15" fill="rgb(207,220,2)" fg:x="16295" fg:w="4322"/><text x="58.8061%" y="879.50">async_io::driver::block_..</text></g><g><title>std::time::Instant::elapsed (4 samples, 0.01%)</title><rect x="74.0729%" y="853" width="0.0144%" height="15" fill="rgb(242,48,14)" fg:x="20613" fg:w="4"/><text x="74.3229%" y="863.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (4,330 samples, 15.56%)</title><rect x="58.5454%" y="917" width="15.5599%" height="15" fill="rgb(218,19,27)" fg:x="16292" fg:w="4330"/><text x="58.7954%" y="927.50">async_global_executor::t..</text></g><g><title>async_global_executor::reactor::block_on (4,330 samples, 15.56%)</title><rect x="58.5454%" y="901" width="15.5599%" height="15" fill="rgb(228,0,35)" fg:x="16292" fg:w="4330"/><text x="58.7954%" y="911.50">async_global_executor::r..</text></g><g><title>async_global_executor::tokio::enter (5 samples, 0.02%)</title><rect x="74.0873%" y="885" width="0.0180%" height="15" fill="rgb(244,142,54)" fg:x="20617" fg:w="5"/><text x="74.3373%" y="895.50"></text></g><g><title>tokio::runtime::handle::Handle::enter (5 samples, 0.02%)</title><rect x="74.0873%" y="869" width="0.0180%" height="15" fill="rgb(243,217,40)" fg:x="20617" fg:w="5"/><text x="74.3373%" y="879.50"></text></g><g><title>tokio::runtime::context::enter (4 samples, 0.01%)</title><rect x="74.0908%" y="853" width="0.0144%" height="15" fill="rgb(207,114,16)" fg:x="20618" fg:w="4"/><text x="74.3408%" y="863.50"></text></g><g><title>tokio::runtime::context::try_enter (4 samples, 0.01%)</title><rect x="74.0908%" y="837" width="0.0144%" height="15" fill="rgb(224,33,25)" fg:x="20618" fg:w="4"/><text x="74.3408%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="74.0908%" y="821" width="0.0144%" height="15" fill="rgb(230,93,54)" fg:x="20618" fg:w="4"/><text x="74.3408%" y="831.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (4 samples, 0.01%)</title><rect x="74.0908%" y="805" width="0.0144%" height="15" fill="rgb(224,56,24)" fg:x="20618" fg:w="4"/><text x="74.3408%" y="815.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="74.0908%" y="789" width="0.0144%" height="15" fill="rgb(235,189,50)" fg:x="20618" fg:w="4"/><text x="74.3408%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (4 samples, 0.01%)</title><rect x="74.0908%" y="773" width="0.0144%" height="15" fill="rgb(242,173,8)" fg:x="20618" fg:w="4"/><text x="74.3408%" y="783.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (3 samples, 0.01%)</title><rect x="74.0944%" y="757" width="0.0108%" height="15" fill="rgb(209,206,10)" fg:x="20619" fg:w="3"/><text x="74.3444%" y="767.50"></text></g><g><title>__libc_calloc (4 samples, 0.01%)</title><rect x="74.1088%" y="869" width="0.0144%" height="15" fill="rgb(213,182,44)" fg:x="20623" fg:w="4"/><text x="74.3588%" y="879.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="74.1124%" y="853" width="0.0108%" height="15" fill="rgb(243,51,15)" fg:x="20624" fg:w="3"/><text x="74.3624%" y="863.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (6 samples, 0.02%)</title><rect x="74.1052%" y="917" width="0.0216%" height="15" fill="rgb(241,13,14)" fg:x="20622" fg:w="6"/><text x="74.3552%" y="927.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (6 samples, 0.02%)</title><rect x="74.1052%" y="901" width="0.0216%" height="15" fill="rgb(239,147,24)" fg:x="20622" fg:w="6"/><text x="74.3552%" y="911.50"></text></g><g><title>__cxa_thread_atexit_impl (5 samples, 0.02%)</title><rect x="74.1088%" y="885" width="0.0180%" height="15" fill="rgb(223,129,16)" fg:x="20623" fg:w="5"/><text x="74.3588%" y="895.50"></text></g><g><title>std::panic::catch_unwind (4,341 samples, 15.60%)</title><rect x="58.5382%" y="1013" width="15.5994%" height="15" fill="rgb(209,169,13)" fg:x="16290" fg:w="4341"/><text x="58.7882%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,341 samples, 15.60%)</title><rect x="58.5382%" y="997" width="15.5994%" height="15" fill="rgb(235,159,41)" fg:x="16290" fg:w="4341"/><text x="58.7882%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,341 samples, 15.60%)</title><rect x="58.5382%" y="981" width="15.5994%" height="15" fill="rgb(223,219,48)" fg:x="16290" fg:w="4341"/><text x="58.7882%" y="991.50">std::panicking::try::do_..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (4,341 samples, 15.60%)</title><rect x="58.5382%" y="965" width="15.5994%" height="15" fill="rgb(236,80,13)" fg:x="16290" fg:w="4341"/><text x="58.7882%" y="975.50">async_global_executor::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,341 samples, 15.60%)</title><rect x="58.5382%" y="949" width="15.5994%" height="15" fill="rgb(213,5,6)" fg:x="16290" fg:w="4341"/><text x="58.7882%" y="959.50">std::thread::local::Loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,340 samples, 15.60%)</title><rect x="58.5418%" y="933" width="15.5958%" height="15" fill="rgb(205,59,21)" fg:x="16291" fg:w="4340"/><text x="58.7918%" y="943.50">std::thread::local::Loca..</text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (3 samples, 0.01%)</title><rect x="74.1268%" y="917" width="0.0108%" height="15" fill="rgb(247,137,35)" fg:x="20628" fg:w="3"/><text x="74.3768%" y="927.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (5 samples, 0.02%)</title><rect x="74.1447%" y="981" width="0.0180%" height="15" fill="rgb(242,208,28)" fg:x="20633" fg:w="5"/><text x="74.3947%" y="991.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::set (5 samples, 0.02%)</title><rect x="74.1447%" y="965" width="0.0180%" height="15" fill="rgb(245,62,25)" fg:x="20633" fg:w="5"/><text x="74.3947%" y="975.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::try_insert (5 samples, 0.02%)</title><rect x="74.1447%" y="949" width="0.0180%" height="15" fill="rgb(233,99,54)" fg:x="20633" fg:w="5"/><text x="74.3947%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5 samples, 0.02%)</title><rect x="74.1447%" y="933" width="0.0180%" height="15" fill="rgb(213,10,37)" fg:x="20633" fg:w="5"/><text x="74.3947%" y="943.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5 samples, 0.02%)</title><rect x="74.1447%" y="917" width="0.0180%" height="15" fill="rgb(235,143,30)" fg:x="20633" fg:w="5"/><text x="74.3947%" y="927.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (5 samples, 0.02%)</title><rect x="74.1447%" y="901" width="0.0180%" height="15" fill="rgb(250,146,33)" fg:x="20633" fg:w="5"/><text x="74.3947%" y="911.50"></text></g><g><title>once_cell::imp::initialize_or_wait (5 samples, 0.02%)</title><rect x="74.1447%" y="885" width="0.0180%" height="15" fill="rgb(226,198,42)" fg:x="20633" fg:w="5"/><text x="74.3947%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4,358 samples, 15.66%)</title><rect x="58.5238%" y="1045" width="15.6605%" height="15" fill="rgb(222,55,6)" fg:x="16286" fg:w="4358"/><text x="58.7738%" y="1055.50">core::ops::function::FnO..</text></g><g><title>async_global_executor::threading::thread_main_loop (4,358 samples, 15.66%)</title><rect x="58.5238%" y="1029" width="15.6605%" height="15" fill="rgb(213,224,31)" fg:x="16286" fg:w="4358"/><text x="58.7738%" y="1039.50">async_global_executor::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.05%)</title><rect x="74.1376%" y="1013" width="0.0467%" height="15" fill="rgb(226,103,35)" fg:x="20631" fg:w="13"/><text x="74.3876%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.05%)</title><rect x="74.1376%" y="997" width="0.0467%" height="15" fill="rgb(205,66,45)" fg:x="20631" fg:w="13"/><text x="74.3876%" y="1007.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (6 samples, 0.02%)</title><rect x="74.1627%" y="981" width="0.0216%" height="15" fill="rgb(226,51,42)" fg:x="20638" fg:w="6"/><text x="74.4127%" y="991.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (5 samples, 0.02%)</title><rect x="74.1663%" y="965" width="0.0180%" height="15" fill="rgb(206,69,1)" fg:x="20639" fg:w="5"/><text x="74.4163%" y="975.50"></text></g><g><title>__cxa_thread_atexit_impl (5 samples, 0.02%)</title><rect x="74.1663%" y="949" width="0.0180%" height="15" fill="rgb(213,228,47)" fg:x="20639" fg:w="5"/><text x="74.4163%" y="959.50"></text></g><g><title>__libc_calloc (3 samples, 0.01%)</title><rect x="74.1735%" y="933" width="0.0108%" height="15" fill="rgb(224,204,18)" fg:x="20641" fg:w="3"/><text x="74.4235%" y="943.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="74.1735%" y="917" width="0.0108%" height="15" fill="rgb(253,187,47)" fg:x="20641" fg:w="3"/><text x="74.4235%" y="927.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="74.1843%" y="1013" width="0.0108%" height="15" fill="rgb(232,61,2)" fg:x="20644" fg:w="3"/><text x="74.4343%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="74.1843%" y="997" width="0.0108%" height="15" fill="rgb(213,132,35)" fg:x="20644" fg:w="3"/><text x="74.4343%" y="1007.50"></text></g><g><title>[libc.so.6] (21 samples, 0.08%)</title><rect x="74.2022%" y="997" width="0.0755%" height="15" fill="rgb(247,33,21)" fg:x="20649" fg:w="21"/><text x="74.4522%" y="1007.50"></text></g><g><title>async_std::task::task::Task::new (13 samples, 0.05%)</title><rect x="74.2813%" y="981" width="0.0467%" height="15" fill="rgb(233,71,46)" fg:x="20671" fg:w="13"/><text x="74.5313%" y="991.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (12 samples, 0.04%)</title><rect x="74.2849%" y="965" width="0.0431%" height="15" fill="rgb(222,173,43)" fg:x="20672" fg:w="12"/><text x="74.5349%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::new (10 samples, 0.04%)</title><rect x="74.3280%" y="981" width="0.0359%" height="15" fill="rgb(249,218,47)" fg:x="20684" fg:w="10"/><text x="74.5780%" y="991.50"></text></g><g><title>async_std::task::task_local::LocalsMap::new (9 samples, 0.03%)</title><rect x="74.3316%" y="965" width="0.0323%" height="15" fill="rgb(254,185,48)" fg:x="20685" fg:w="9"/><text x="74.5816%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="74.3496%" y="949" width="0.0144%" height="15" fill="rgb(252,165,50)" fg:x="20690" fg:w="4"/><text x="74.5996%" y="959.50"></text></g><g><title>async_std::task::builder::Builder::build (43 samples, 0.15%)</title><rect x="74.2813%" y="997" width="0.1545%" height="15" fill="rgb(206,219,6)" fg:x="20671" fg:w="43"/><text x="74.5313%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.07%)</title><rect x="74.3639%" y="981" width="0.0719%" height="15" fill="rgb(212,212,45)" fg:x="20694" fg:w="20"/><text x="74.6139%" y="991.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="74.5364%" y="965" width="0.0395%" height="15" fill="rgb(221,31,9)" fg:x="20742" fg:w="11"/><text x="74.7864%" y="975.50"></text></g><g><title>async_std::task::builder::Builder::blocking::NUM_NESTED_BLOCKING::__getit (5 samples, 0.02%)</title><rect x="74.5796%" y="965" width="0.0180%" height="15" fill="rgb(234,198,39)" fg:x="20754" fg:w="5"/><text x="74.8296%" y="975.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="74.5975%" y="933" width="0.0252%" height="15" fill="rgb(252,145,46)" fg:x="20759" fg:w="7"/><text x="74.8475%" y="943.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="74.6263%" y="917" width="0.0216%" height="15" fill="rgb(237,149,0)" fg:x="20767" fg:w="6"/><text x="74.8763%" y="927.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="74.6981%" y="901" width="0.0108%" height="15" fill="rgb(229,65,5)" fg:x="20787" fg:w="3"/><text x="74.9481%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (4 samples, 0.01%)</title><rect x="74.7089%" y="901" width="0.0144%" height="15" fill="rgb(235,60,36)" fg:x="20790" fg:w="4"/><text x="74.9589%" y="911.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="74.7233%" y="853" width="0.0144%" height="15" fill="rgb(222,47,18)" fg:x="20794" fg:w="4"/><text x="74.9733%" y="863.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="74.7449%" y="837" width="0.0647%" height="15" fill="rgb(235,114,22)" fg:x="20800" fg:w="18"/><text x="74.9949%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="74.7988%" y="821" width="0.0108%" height="15" fill="rgb(209,167,11)" fg:x="20815" fg:w="3"/><text x="75.0488%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="74.7988%" y="805" width="0.0108%" height="15" fill="rgb(251,73,18)" fg:x="20815" fg:w="3"/><text x="75.0488%" y="815.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="74.8095%" y="837" width="0.0323%" height="15" fill="rgb(217,60,17)" fg:x="20818" fg:w="9"/><text x="75.0595%" y="847.50"></text></g><g><title>async_global_executor::executor::LOCAL_EXECUTOR::__getit (19 samples, 0.07%)</title><rect x="74.8491%" y="821" width="0.0683%" height="15" fill="rgb(224,36,37)" fg:x="20829" fg:w="19"/><text x="75.0991%" y="831.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (19 samples, 0.07%)</title><rect x="74.8491%" y="805" width="0.0683%" height="15" fill="rgb(211,21,32)" fg:x="20829" fg:w="19"/><text x="75.0991%" y="815.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (8 samples, 0.03%)</title><rect x="74.8886%" y="789" width="0.0287%" height="15" fill="rgb(231,55,48)" fg:x="20840" fg:w="8"/><text x="75.1386%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.03%)</title><rect x="74.8886%" y="773" width="0.0287%" height="15" fill="rgb(227,42,18)" fg:x="20840" fg:w="8"/><text x="75.1386%" y="783.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="74.9173%" y="805" width="0.0323%" height="15" fill="rgb(217,2,27)" fg:x="20848" fg:w="9"/><text x="75.1673%" y="815.50"></text></g><g><title>[libc.so.6] (19 samples, 0.07%)</title><rect x="74.9605%" y="789" width="0.0683%" height="15" fill="rgb(251,138,23)" fg:x="20860" fg:w="19"/><text x="75.2105%" y="799.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="75.0287%" y="773" width="0.0359%" height="15" fill="rgb(226,184,11)" fg:x="20879" fg:w="10"/><text x="75.2787%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="75.0539%" y="757" width="0.0108%" height="15" fill="rgb(242,142,12)" fg:x="20886" fg:w="3"/><text x="75.3039%" y="767.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (93 samples, 0.33%)</title><rect x="75.6540%" y="613" width="0.3342%" height="15" fill="rgb(234,187,18)" fg:x="21053" fg:w="93"/><text x="75.9040%" y="623.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (56 samples, 0.20%)</title><rect x="75.7870%" y="597" width="0.2012%" height="15" fill="rgb(237,44,42)" fg:x="21090" fg:w="56"/><text x="76.0370%" y="607.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (22 samples, 0.08%)</title><rect x="75.9092%" y="581" width="0.0791%" height="15" fill="rgb(211,90,23)" fg:x="21124" fg:w="22"/><text x="76.1592%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.08%)</title><rect x="75.9092%" y="565" width="0.0791%" height="15" fill="rgb(207,81,18)" fg:x="21124" fg:w="22"/><text x="76.1592%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (33 samples, 0.12%)</title><rect x="76.2829%" y="501" width="0.1186%" height="15" fill="rgb(222,107,28)" fg:x="21228" fg:w="33"/><text x="76.5329%" y="511.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (32 samples, 0.11%)</title><rect x="76.2865%" y="485" width="0.1150%" height="15" fill="rgb(237,83,52)" fg:x="21229" fg:w="32"/><text x="76.5365%" y="495.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.11%)</title><rect x="76.2865%" y="469" width="0.1150%" height="15" fill="rgb(208,67,11)" fg:x="21229" fg:w="32"/><text x="76.5365%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.11%)</title><rect x="76.2865%" y="453" width="0.1150%" height="15" fill="rgb(249,157,49)" fg:x="21229" fg:w="32"/><text x="76.5365%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="76.4015%" y="501" width="0.0108%" height="15" fill="rgb(243,200,1)" fg:x="21261" fg:w="3"/><text x="76.6515%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.04%)</title><rect x="76.4122%" y="501" width="0.0395%" height="15" fill="rgb(225,162,37)" fg:x="21264" fg:w="11"/><text x="76.6622%" y="511.50"></text></g><g><title>core::mem::replace (11 samples, 0.04%)</title><rect x="76.4122%" y="485" width="0.0395%" height="15" fill="rgb(242,92,13)" fg:x="21264" fg:w="11"/><text x="76.6622%" y="495.50"></text></g><g><title>core::ptr::read (10 samples, 0.04%)</title><rect x="76.4158%" y="469" width="0.0359%" height="15" fill="rgb(220,43,36)" fg:x="21265" fg:w="10"/><text x="76.6658%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (16 samples, 0.06%)</title><rect x="76.4554%" y="485" width="0.0575%" height="15" fill="rgb(213,165,48)" fg:x="21276" fg:w="16"/><text x="76.7054%" y="495.50"></text></g><g><title>core::mem::replace (16 samples, 0.06%)</title><rect x="76.4554%" y="469" width="0.0575%" height="15" fill="rgb(227,200,9)" fg:x="21276" fg:w="16"/><text x="76.7054%" y="479.50"></text></g><g><title>core::ptr::read (15 samples, 0.05%)</title><rect x="76.4590%" y="453" width="0.0539%" height="15" fill="rgb(221,222,28)" fg:x="21277" fg:w="15"/><text x="76.7090%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (18 samples, 0.06%)</title><rect x="76.4518%" y="501" width="0.0647%" height="15" fill="rgb(223,142,26)" fg:x="21275" fg:w="18"/><text x="76.7018%" y="511.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="76.5165%" y="485" width="0.0539%" height="15" fill="rgb(243,46,9)" fg:x="21293" fg:w="15"/><text x="76.7665%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (17 samples, 0.06%)</title><rect x="76.5165%" y="501" width="0.0611%" height="15" fill="rgb(250,56,11)" fg:x="21293" fg:w="17"/><text x="76.7665%" y="511.50"></text></g><g><title>core::task::wake::Waker::will_wake (21 samples, 0.08%)</title><rect x="76.5775%" y="501" width="0.0755%" height="15" fill="rgb(229,113,5)" fg:x="21310" fg:w="21"/><text x="76.8275%" y="511.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (21 samples, 0.08%)</title><rect x="76.5775%" y="485" width="0.0755%" height="15" fill="rgb(244,108,28)" fg:x="21310" fg:w="21"/><text x="76.8275%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.07%)</title><rect x="76.5811%" y="469" width="0.0719%" height="15" fill="rgb(242,119,50)" fg:x="21311" fg:w="20"/><text x="76.8311%" y="479.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (20 samples, 0.07%)</title><rect x="76.5811%" y="453" width="0.0719%" height="15" fill="rgb(224,164,23)" fg:x="21311" fg:w="20"/><text x="76.8311%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="76.8507%" y="437" width="0.0108%" height="15" fill="rgb(214,227,44)" fg:x="21386" fg:w="3"/><text x="77.1007%" y="447.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (191 samples, 0.69%)</title><rect x="76.1787%" y="517" width="0.6864%" height="15" fill="rgb(238,202,4)" fg:x="21199" fg:w="191"/><text x="76.4287%" y="527.50"></text></g><g><title>event_listener::Inner::lock (59 samples, 0.21%)</title><rect x="76.6530%" y="501" width="0.2120%" height="15" fill="rgb(213,190,30)" fg:x="21331" fg:w="59"/><text x="76.9030%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.21%)</title><rect x="76.6530%" y="485" width="0.2120%" height="15" fill="rgb(239,15,2)" fg:x="21331" fg:w="59"/><text x="76.9030%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (59 samples, 0.21%)</title><rect x="76.6530%" y="469" width="0.2120%" height="15" fill="rgb(249,229,4)" fg:x="21331" fg:w="59"/><text x="76.9030%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (59 samples, 0.21%)</title><rect x="76.6530%" y="453" width="0.2120%" height="15" fill="rgb(239,75,44)" fg:x="21331" fg:w="59"/><text x="76.9030%" y="463.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (61 samples, 0.22%)</title><rect x="76.8686%" y="517" width="0.2192%" height="15" fill="rgb(251,206,23)" fg:x="21391" fg:w="61"/><text x="77.1186%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (60 samples, 0.22%)</title><rect x="76.8722%" y="501" width="0.2156%" height="15" fill="rgb(215,208,0)" fg:x="21392" fg:w="60"/><text x="77.1222%" y="511.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (8 samples, 0.03%)</title><rect x="77.0591%" y="485" width="0.0287%" height="15" fill="rgb(230,75,50)" fg:x="21444" fg:w="8"/><text x="77.3091%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4 samples, 0.01%)</title><rect x="77.0735%" y="469" width="0.0144%" height="15" fill="rgb(246,180,39)" fg:x="21448" fg:w="4"/><text x="77.3235%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.01%)</title><rect x="77.0735%" y="453" width="0.0144%" height="15" fill="rgb(249,175,24)" fg:x="21448" fg:w="4"/><text x="77.3235%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="77.0735%" y="437" width="0.0144%" height="15" fill="rgb(247,176,22)" fg:x="21448" fg:w="4"/><text x="77.3235%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.09%)</title><rect x="77.1130%" y="501" width="0.0862%" height="15" fill="rgb(241,100,24)" fg:x="21459" fg:w="24"/><text x="77.3630%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (5 samples, 0.02%)</title><rect x="77.1992%" y="501" width="0.0180%" height="15" fill="rgb(233,4,35)" fg:x="21483" fg:w="5"/><text x="77.4492%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (5 samples, 0.02%)</title><rect x="77.1992%" y="485" width="0.0180%" height="15" fill="rgb(211,164,46)" fg:x="21483" fg:w="5"/><text x="77.4492%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="77.1992%" y="469" width="0.0180%" height="15" fill="rgb(242,99,53)" fg:x="21483" fg:w="5"/><text x="77.4492%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (5 samples, 0.02%)</title><rect x="77.1992%" y="453" width="0.0180%" height="15" fill="rgb(243,45,33)" fg:x="21483" fg:w="5"/><text x="77.4492%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (5 samples, 0.02%)</title><rect x="77.1992%" y="437" width="0.0180%" height="15" fill="rgb(217,55,21)" fg:x="21483" fg:w="5"/><text x="77.4492%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.03%)</title><rect x="77.2208%" y="485" width="0.0252%" height="15" fill="rgb(245,145,46)" fg:x="21489" fg:w="7"/><text x="77.4708%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.03%)</title><rect x="77.2208%" y="469" width="0.0252%" height="15" fill="rgb(215,112,45)" fg:x="21489" fg:w="7"/><text x="77.4708%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.03%)</title><rect x="77.2208%" y="453" width="0.0252%" height="15" fill="rgb(228,104,16)" fg:x="21489" fg:w="7"/><text x="77.4708%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.03%)</title><rect x="77.2208%" y="437" width="0.0252%" height="15" fill="rgb(239,186,38)" fg:x="21489" fg:w="7"/><text x="77.4708%" y="447.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.03%)</title><rect x="77.2208%" y="421" width="0.0252%" height="15" fill="rgb(228,38,35)" fg:x="21489" fg:w="7"/><text x="77.4708%" y="431.50"></text></g><g><title>malloc (7 samples, 0.03%)</title><rect x="77.2208%" y="405" width="0.0252%" height="15" fill="rgb(251,42,40)" fg:x="21489" fg:w="7"/><text x="77.4708%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (5 samples, 0.02%)</title><rect x="77.2459%" y="485" width="0.0180%" height="15" fill="rgb(210,51,19)" fg:x="21496" fg:w="5"/><text x="77.4959%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.02%)</title><rect x="77.2459%" y="469" width="0.0180%" height="15" fill="rgb(236,94,42)" fg:x="21496" fg:w="5"/><text x="77.4959%" y="479.50"></text></g><g><title>event_listener::Event::inner (17 samples, 0.06%)</title><rect x="77.2172%" y="501" width="0.0611%" height="15" fill="rgb(239,167,16)" fg:x="21488" fg:w="17"/><text x="77.4672%" y="511.50"></text></g><g><title>event_listener::Inner::lock (3 samples, 0.01%)</title><rect x="77.2783%" y="501" width="0.0108%" height="15" fill="rgb(252,175,31)" fg:x="21505" fg:w="3"/><text x="77.5283%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.01%)</title><rect x="77.2783%" y="485" width="0.0108%" height="15" fill="rgb(206,166,30)" fg:x="21505" fg:w="3"/><text x="77.5283%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="77.3466%" y="485" width="0.0216%" height="15" fill="rgb(206,209,37)" fg:x="21524" fg:w="6"/><text x="77.5966%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="77.3537%" y="469" width="0.0144%" height="15" fill="rgb(226,91,4)" fg:x="21526" fg:w="4"/><text x="77.6037%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="77.3537%" y="453" width="0.0144%" height="15" fill="rgb(222,167,0)" fg:x="21526" fg:w="4"/><text x="77.6037%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="77.3537%" y="437" width="0.0144%" height="15" fill="rgb(211,70,14)" fg:x="21526" fg:w="4"/><text x="77.6037%" y="447.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="77.3537%" y="421" width="0.0144%" height="15" fill="rgb(214,84,42)" fg:x="21526" fg:w="4"/><text x="77.6037%" y="431.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="77.3537%" y="405" width="0.0144%" height="15" fill="rgb(235,157,37)" fg:x="21526" fg:w="4"/><text x="77.6037%" y="415.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (356 samples, 1.28%)</title><rect x="76.1212%" y="533" width="1.2793%" height="15" fill="rgb(225,13,6)" fg:x="21183" fg:w="356"/><text x="76.3712%" y="543.50"></text></g><g><title>event_listener::Event::listen (87 samples, 0.31%)</title><rect x="77.0878%" y="517" width="0.3126%" height="15" fill="rgb(205,202,1)" fg:x="21452" fg:w="87"/><text x="77.3378%" y="527.50"></text></g><g><title>event_listener::List::insert (31 samples, 0.11%)</title><rect x="77.2891%" y="501" width="0.1114%" height="15" fill="rgb(232,195,26)" fg:x="21508" fg:w="31"/><text x="77.5391%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (9 samples, 0.03%)</title><rect x="77.3681%" y="485" width="0.0323%" height="15" fill="rgb(208,102,26)" fg:x="21530" fg:w="9"/><text x="77.6181%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.03%)</title><rect x="77.3681%" y="469" width="0.0323%" height="15" fill="rgb(215,41,39)" fg:x="21530" fg:w="9"/><text x="77.6181%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.01%)</title><rect x="77.4472%" y="517" width="0.0108%" height="15" fill="rgb(247,139,11)" fg:x="21552" fg:w="3"/><text x="77.6972%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="77.7023%" y="421" width="0.0108%" height="15" fill="rgb(243,99,6)" fg:x="21623" fg:w="3"/><text x="77.9523%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="77.7023%" y="405" width="0.0108%" height="15" fill="rgb(230,168,48)" fg:x="21623" fg:w="3"/><text x="77.9523%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="77.7023%" y="389" width="0.0108%" height="15" fill="rgb(238,227,13)" fg:x="21623" fg:w="3"/><text x="77.9523%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="77.7023%" y="373" width="0.0108%" height="15" fill="rgb(209,109,13)" fg:x="21623" fg:w="3"/><text x="77.9523%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="77.7023%" y="357" width="0.0108%" height="15" fill="rgb(228,195,1)" fg:x="21623" fg:w="3"/><text x="77.9523%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="77.7850%" y="389" width="0.0144%" height="15" fill="rgb(230,218,0)" fg:x="21646" fg:w="4"/><text x="78.0350%" y="399.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="77.8389%" y="293" width="0.0144%" height="15" fill="rgb(206,1,45)" fg:x="21661" fg:w="4"/><text x="78.0889%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (13 samples, 0.05%)</title><rect x="77.8532%" y="277" width="0.0467%" height="15" fill="rgb(209,124,26)" fg:x="21665" fg:w="13"/><text x="78.1032%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.11%)</title><rect x="77.7993%" y="341" width="0.1078%" height="15" fill="rgb(220,59,8)" fg:x="21650" fg:w="30"/><text x="78.0493%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (30 samples, 0.11%)</title><rect x="77.7993%" y="325" width="0.1078%" height="15" fill="rgb(251,41,37)" fg:x="21650" fg:w="30"/><text x="78.0493%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.09%)</title><rect x="77.8137%" y="309" width="0.0934%" height="15" fill="rgb(239,152,21)" fg:x="21654" fg:w="26"/><text x="78.0637%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15 samples, 0.05%)</title><rect x="77.8532%" y="293" width="0.0539%" height="15" fill="rgb(226,32,1)" fg:x="21665" fg:w="15"/><text x="78.1032%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.11%)</title><rect x="77.7993%" y="389" width="0.1114%" height="15" fill="rgb(230,154,36)" fg:x="21650" fg:w="31"/><text x="78.0493%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (31 samples, 0.11%)</title><rect x="77.7993%" y="373" width="0.1114%" height="15" fill="rgb(208,228,43)" fg:x="21650" fg:w="31"/><text x="78.0493%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 0.11%)</title><rect x="77.7993%" y="357" width="0.1114%" height="15" fill="rgb(214,203,3)" fg:x="21650" fg:w="31"/><text x="78.0493%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="78.5755%" y="357" width="0.0180%" height="15" fill="rgb(207,149,29)" fg:x="21866" fg:w="5"/><text x="78.8255%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="78.5791%" y="341" width="0.0144%" height="15" fill="rgb(250,105,7)" fg:x="21867" fg:w="4"/><text x="78.8291%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="78.5791%" y="325" width="0.0144%" height="15" fill="rgb(232,222,16)" fg:x="21867" fg:w="4"/><text x="78.8291%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="78.5791%" y="309" width="0.0144%" height="15" fill="rgb(209,32,24)" fg:x="21867" fg:w="4"/><text x="78.8291%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="78.5827%" y="293" width="0.0108%" height="15" fill="rgb(225,13,6)" fg:x="21868" fg:w="3"/><text x="78.8327%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="78.5827%" y="277" width="0.0108%" height="15" fill="rgb(245,226,26)" fg:x="21868" fg:w="3"/><text x="78.8327%" y="287.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (148 samples, 0.53%)</title><rect x="78.5935%" y="357" width="0.5318%" height="15" fill="rgb(229,178,27)" fg:x="21871" fg:w="148"/><text x="78.8435%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (127 samples, 0.46%)</title><rect x="78.6690%" y="341" width="0.4564%" height="15" fill="rgb(205,227,28)" fg:x="21892" fg:w="127"/><text x="78.9190%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (127 samples, 0.46%)</title><rect x="78.6690%" y="325" width="0.4564%" height="15" fill="rgb(210,191,45)" fg:x="21892" fg:w="127"/><text x="78.9190%" y="335.50"></text></g><g><title>async_executor::steal (339 samples, 1.22%)</title><rect x="77.9179%" y="389" width="1.2182%" height="15" fill="rgb(206,124,16)" fg:x="21683" fg:w="339"/><text x="78.1679%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (325 samples, 1.17%)</title><rect x="77.9682%" y="373" width="1.1679%" height="15" fill="rgb(210,162,0)" fg:x="21697" fg:w="325"/><text x="78.2182%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (3 samples, 0.01%)</title><rect x="79.1253%" y="357" width="0.0108%" height="15" fill="rgb(211,54,38)" fg:x="22019" fg:w="3"/><text x="79.3753%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (185 samples, 0.66%)</title><rect x="79.3338%" y="373" width="0.6648%" height="15" fill="rgb(248,192,3)" fg:x="22077" fg:w="185"/><text x="79.5838%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25 samples, 0.09%)</title><rect x="79.9087%" y="357" width="0.0898%" height="15" fill="rgb(233,187,18)" fg:x="22237" fg:w="25"/><text x="80.1587%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.08%)</title><rect x="79.9159%" y="341" width="0.0827%" height="15" fill="rgb(237,208,14)" fg:x="22239" fg:w="23"/><text x="80.1659%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (23 samples, 0.08%)</title><rect x="80.1711%" y="357" width="0.0827%" height="15" fill="rgb(212,77,1)" fg:x="22310" fg:w="23"/><text x="80.4211%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (9 samples, 0.03%)</title><rect x="80.2537%" y="357" width="0.0323%" height="15" fill="rgb(210,163,22)" fg:x="22333" fg:w="9"/><text x="80.5037%" y="367.50"></text></g><g><title>core::ptr::read (9 samples, 0.03%)</title><rect x="80.2537%" y="341" width="0.0323%" height="15" fill="rgb(250,58,28)" fg:x="22333" fg:w="9"/><text x="80.5037%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (46 samples, 0.17%)</title><rect x="80.2896%" y="357" width="0.1653%" height="15" fill="rgb(254,28,41)" fg:x="22343" fg:w="46"/><text x="80.5396%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.17%)</title><rect x="80.2896%" y="341" width="0.1653%" height="15" fill="rgb(237,162,36)" fg:x="22343" fg:w="46"/><text x="80.5396%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="80.4442%" y="325" width="0.0108%" height="15" fill="rgb(232,56,6)" fg:x="22386" fg:w="3"/><text x="80.6942%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="80.4442%" y="309" width="0.0108%" height="15" fill="rgb(216,127,42)" fg:x="22386" fg:w="3"/><text x="80.6942%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="80.4442%" y="293" width="0.0108%" height="15" fill="rgb(241,69,15)" fg:x="22386" fg:w="3"/><text x="80.6942%" y="303.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (378 samples, 1.36%)</title><rect x="79.1361%" y="389" width="1.3583%" height="15" fill="rgb(227,180,19)" fg:x="22022" fg:w="378"/><text x="79.3861%" y="399.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (138 samples, 0.50%)</title><rect x="79.9986%" y="373" width="0.4959%" height="15" fill="rgb(231,188,29)" fg:x="22262" fg:w="138"/><text x="80.2486%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.04%)</title><rect x="80.4585%" y="357" width="0.0359%" height="15" fill="rgb(224,176,27)" fg:x="22390" fg:w="10"/><text x="80.7085%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.04%)</title><rect x="80.4585%" y="341" width="0.0359%" height="15" fill="rgb(249,214,19)" fg:x="22390" fg:w="10"/><text x="80.7085%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="80.4945%" y="389" width="0.0323%" height="15" fill="rgb(240,0,4)" fg:x="22400" fg:w="9"/><text x="80.7445%" y="399.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="80.4945%" y="373" width="0.0323%" height="15" fill="rgb(233,28,41)" fg:x="22400" fg:w="9"/><text x="80.7445%" y="383.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (9 samples, 0.03%)</title><rect x="80.4945%" y="357" width="0.0323%" height="15" fill="rgb(220,90,51)" fg:x="22400" fg:w="9"/><text x="80.7445%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (9 samples, 0.03%)</title><rect x="80.4945%" y="341" width="0.0323%" height="15" fill="rgb(250,52,22)" fg:x="22400" fg:w="9"/><text x="80.7445%" y="351.50"></text></g><g><title>fastrand::usize (4 samples, 0.01%)</title><rect x="80.5268%" y="389" width="0.0144%" height="15" fill="rgb(231,152,36)" fg:x="22409" fg:w="4"/><text x="80.7768%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="80.5268%" y="373" width="0.0144%" height="15" fill="rgb(250,218,4)" fg:x="22409" fg:w="4"/><text x="80.7768%" y="383.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (805 samples, 2.89%)</title><rect x="77.7454%" y="405" width="2.8928%" height="15" fill="rgb(210,38,21)" fg:x="21635" fg:w="805"/><text x="77.9954%" y="415.50">as..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (27 samples, 0.10%)</title><rect x="80.5412%" y="389" width="0.0970%" height="15" fill="rgb(230,75,13)" fg:x="22413" fg:w="27"/><text x="80.7912%" y="399.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (26 samples, 0.09%)</title><rect x="80.5448%" y="373" width="0.0934%" height="15" fill="rgb(250,68,53)" fg:x="22414" fg:w="26"/><text x="80.7948%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (26 samples, 0.09%)</title><rect x="80.5448%" y="357" width="0.0934%" height="15" fill="rgb(250,210,16)" fg:x="22414" fg:w="26"/><text x="80.7948%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (10 samples, 0.04%)</title><rect x="80.6023%" y="341" width="0.0359%" height="15" fill="rgb(240,132,5)" fg:x="22430" fg:w="10"/><text x="80.8523%" y="351.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="80.8826%" y="309" width="0.0108%" height="15" fill="rgb(222,148,48)" fg:x="22508" fg:w="3"/><text x="81.1326%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (3 samples, 0.01%)</title><rect x="80.8826%" y="293" width="0.0108%" height="15" fill="rgb(247,181,24)" fg:x="22508" fg:w="3"/><text x="81.1326%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="80.8826%" y="277" width="0.0108%" height="15" fill="rgb(239,5,31)" fg:x="22508" fg:w="3"/><text x="81.1326%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.01%)</title><rect x="80.8826%" y="261" width="0.0108%" height="15" fill="rgb(241,152,38)" fg:x="22508" fg:w="3"/><text x="81.1326%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (3 samples, 0.01%)</title><rect x="80.8826%" y="245" width="0.0108%" height="15" fill="rgb(246,200,37)" fg:x="22508" fg:w="3"/><text x="81.1326%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (16 samples, 0.06%)</title><rect x="80.8933%" y="309" width="0.0575%" height="15" fill="rgb(243,210,26)" fg:x="22511" fg:w="16"/><text x="81.1433%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_swap (16 samples, 0.06%)</title><rect x="80.8933%" y="293" width="0.0575%" height="15" fill="rgb(222,22,22)" fg:x="22511" fg:w="16"/><text x="81.1433%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (3 samples, 0.01%)</title><rect x="80.9544%" y="261" width="0.0108%" height="15" fill="rgb(208,129,28)" fg:x="22528" fg:w="3"/><text x="81.2044%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.01%)</title><rect x="80.9544%" y="245" width="0.0108%" height="15" fill="rgb(254,169,28)" fg:x="22528" fg:w="3"/><text x="81.2044%" y="255.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (12 samples, 0.04%)</title><rect x="80.9508%" y="309" width="0.0431%" height="15" fill="rgb(225,45,17)" fg:x="22527" fg:w="12"/><text x="81.2008%" y="319.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (11 samples, 0.04%)</title><rect x="80.9544%" y="293" width="0.0395%" height="15" fill="rgb(232,199,2)" fg:x="22528" fg:w="11"/><text x="81.2044%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (11 samples, 0.04%)</title><rect x="80.9544%" y="277" width="0.0395%" height="15" fill="rgb(235,33,40)" fg:x="22528" fg:w="11"/><text x="81.2044%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wake (8 samples, 0.03%)</title><rect x="80.9652%" y="261" width="0.0287%" height="15" fill="rgb(237,89,50)" fg:x="22531" fg:w="8"/><text x="81.2152%" y="271.50"></text></g><g><title>async_executor::State::notify (354 samples, 1.27%)</title><rect x="80.6382%" y="405" width="1.2721%" height="15" fill="rgb(238,126,5)" fg:x="22440" fg:w="354"/><text x="80.8882%" y="415.50"></text></g><g><title>core::task::wake::Waker::wake (347 samples, 1.25%)</title><rect x="80.6634%" y="389" width="1.2469%" height="15" fill="rgb(247,214,42)" fg:x="22447" fg:w="347"/><text x="80.9134%" y="399.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (346 samples, 1.24%)</title><rect x="80.6670%" y="373" width="1.2434%" height="15" fill="rgb(238,60,45)" fg:x="22448" fg:w="346"/><text x="80.9170%" y="383.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (340 samples, 1.22%)</title><rect x="80.6885%" y="357" width="1.2218%" height="15" fill="rgb(225,69,44)" fg:x="22454" fg:w="340"/><text x="80.9385%" y="367.50"></text></g><g><title>parking::Unparker::unpark (339 samples, 1.22%)</title><rect x="80.6921%" y="341" width="1.2182%" height="15" fill="rgb(241,13,44)" fg:x="22455" fg:w="339"/><text x="80.9421%" y="351.50"></text></g><g><title>parking::Inner::unpark (288 samples, 1.03%)</title><rect x="80.8754%" y="325" width="1.0349%" height="15" fill="rgb(227,121,22)" fg:x="22506" fg:w="288"/><text x="81.1254%" y="335.50"></text></g><g><title>syscall (254 samples, 0.91%)</title><rect x="80.9976%" y="309" width="0.9127%" height="15" fill="rgb(231,160,23)" fg:x="22540" fg:w="254"/><text x="81.2476%" y="319.50"></text></g><g><title>[unknown] (251 samples, 0.90%)</title><rect x="81.0083%" y="293" width="0.9020%" height="15" fill="rgb(250,179,43)" fg:x="22543" fg:w="251"/><text x="81.2583%" y="303.50"></text></g><g><title>[unknown] (249 samples, 0.89%)</title><rect x="81.0155%" y="277" width="0.8948%" height="15" fill="rgb(233,54,46)" fg:x="22545" fg:w="249"/><text x="81.2655%" y="287.50"></text></g><g><title>[unknown] (247 samples, 0.89%)</title><rect x="81.0227%" y="261" width="0.8876%" height="15" fill="rgb(247,120,42)" fg:x="22547" fg:w="247"/><text x="81.2727%" y="271.50"></text></g><g><title>[unknown] (238 samples, 0.86%)</title><rect x="81.0551%" y="245" width="0.8553%" height="15" fill="rgb(221,219,12)" fg:x="22556" fg:w="238"/><text x="81.3051%" y="255.50"></text></g><g><title>[unknown] (207 samples, 0.74%)</title><rect x="81.1665%" y="229" width="0.7439%" height="15" fill="rgb(211,126,8)" fg:x="22587" fg:w="207"/><text x="81.4165%" y="239.50"></text></g><g><title>[unknown] (119 samples, 0.43%)</title><rect x="81.4827%" y="213" width="0.4276%" height="15" fill="rgb(218,154,33)" fg:x="22675" fg:w="119"/><text x="81.7327%" y="223.50"></text></g><g><title>[unknown] (82 samples, 0.29%)</title><rect x="81.6156%" y="197" width="0.2947%" height="15" fill="rgb(212,199,16)" fg:x="22712" fg:w="82"/><text x="81.8656%" y="207.50"></text></g><g><title>[unknown] (76 samples, 0.27%)</title><rect x="81.6372%" y="181" width="0.2731%" height="15" fill="rgb(236,215,46)" fg:x="22718" fg:w="76"/><text x="81.8872%" y="191.50"></text></g><g><title>[unknown] (39 samples, 0.14%)</title><rect x="81.7702%" y="165" width="0.1401%" height="15" fill="rgb(232,32,22)" fg:x="22755" fg:w="39"/><text x="82.0202%" y="175.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="81.8636%" y="149" width="0.0467%" height="15" fill="rgb(234,79,15)" fg:x="22781" fg:w="13"/><text x="82.1136%" y="159.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="81.8816%" y="133" width="0.0287%" height="15" fill="rgb(235,187,47)" fg:x="22786" fg:w="8"/><text x="82.1316%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="81.8995%" y="117" width="0.0108%" height="15" fill="rgb(244,69,37)" fg:x="22791" fg:w="3"/><text x="82.1495%" y="127.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="81.9426%" y="373" width="0.0252%" height="15" fill="rgb(249,140,25)" fg:x="22803" fg:w="7"/><text x="82.1926%" y="383.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (7 samples, 0.03%)</title><rect x="81.9426%" y="357" width="0.0252%" height="15" fill="rgb(213,69,8)" fg:x="22803" fg:w="7"/><text x="82.1926%" y="367.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="81.9426%" y="341" width="0.0252%" height="15" fill="rgb(220,136,2)" fg:x="22803" fg:w="7"/><text x="82.1926%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.03%)</title><rect x="81.9426%" y="325" width="0.0252%" height="15" fill="rgb(237,50,36)" fg:x="22803" fg:w="7"/><text x="82.1926%" y="335.50"></text></g><g><title>async_executor::Sleepers::insert (10 samples, 0.04%)</title><rect x="81.9391%" y="389" width="0.0359%" height="15" fill="rgb(226,18,11)" fg:x="22802" fg:w="10"/><text x="82.1891%" y="399.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="82.0540%" y="373" width="0.0144%" height="15" fill="rgb(243,156,2)" fg:x="22834" fg:w="4"/><text x="82.3040%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.01%)</title><rect x="82.0540%" y="357" width="0.0144%" height="15" fill="rgb(218,8,34)" fg:x="22834" fg:w="4"/><text x="82.3040%" y="367.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="82.0756%" y="373" width="0.0216%" height="15" fill="rgb(250,94,35)" fg:x="22840" fg:w="6"/><text x="82.3256%" y="383.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (6 samples, 0.02%)</title><rect x="82.0756%" y="357" width="0.0216%" height="15" fill="rgb(229,127,21)" fg:x="22840" fg:w="6"/><text x="82.3256%" y="367.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="82.0756%" y="341" width="0.0216%" height="15" fill="rgb(234,49,5)" fg:x="22840" fg:w="6"/><text x="82.3256%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="82.0756%" y="325" width="0.0216%" height="15" fill="rgb(248,12,16)" fg:x="22840" fg:w="6"/><text x="82.3256%" y="335.50"></text></g><g><title>async_executor::Sleepers::update (42 samples, 0.15%)</title><rect x="81.9750%" y="389" width="0.1509%" height="15" fill="rgb(208,220,31)" fg:x="22812" fg:w="42"/><text x="82.2250%" y="399.50"></text></g><g><title>core::task::wake::Waker::will_wake (6 samples, 0.02%)</title><rect x="82.1044%" y="373" width="0.0216%" height="15" fill="rgb(243,184,0)" fg:x="22848" fg:w="6"/><text x="82.3544%" y="383.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="82.1044%" y="357" width="0.0216%" height="15" fill="rgb(217,38,21)" fg:x="22848" fg:w="6"/><text x="82.3544%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (24 samples, 0.09%)</title><rect x="82.1259%" y="389" width="0.0862%" height="15" fill="rgb(239,120,45)" fg:x="22854" fg:w="24"/><text x="82.3759%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.09%)</title><rect x="82.1259%" y="373" width="0.0862%" height="15" fill="rgb(235,33,2)" fg:x="22854" fg:w="24"/><text x="82.3759%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (16 samples, 0.06%)</title><rect x="82.1547%" y="357" width="0.0575%" height="15" fill="rgb(249,161,5)" fg:x="22862" fg:w="16"/><text x="82.4047%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (16 samples, 0.06%)</title><rect x="82.1547%" y="341" width="0.0575%" height="15" fill="rgb(250,165,48)" fg:x="22862" fg:w="16"/><text x="82.4047%" y="351.50"></text></g><g><title>async_executor::Ticker::sleep (87 samples, 0.31%)</title><rect x="81.9103%" y="405" width="0.3126%" height="15" fill="rgb(221,23,45)" fg:x="22794" fg:w="87"/><text x="82.1603%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.01%)</title><rect x="82.2122%" y="389" width="0.0108%" height="15" fill="rgb(217,108,46)" fg:x="22878" fg:w="3"/><text x="82.4622%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.01%)</title><rect x="82.2122%" y="373" width="0.0108%" height="15" fill="rgb(254,26,35)" fg:x="22878" fg:w="3"/><text x="82.4622%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (3 samples, 0.01%)</title><rect x="82.2122%" y="357" width="0.0108%" height="15" fill="rgb(218,223,28)" fg:x="22878" fg:w="3"/><text x="82.4622%" y="367.50"></text></g><g><title>async_executor::Sleepers::remove (51 samples, 0.18%)</title><rect x="82.2409%" y="389" width="0.1833%" height="15" fill="rgb(242,27,47)" fg:x="22886" fg:w="51"/><text x="82.4909%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.07%)</title><rect x="82.3559%" y="373" width="0.0683%" height="15" fill="rgb(218,39,35)" fg:x="22918" fg:w="19"/><text x="82.6059%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (11 samples, 0.04%)</title><rect x="82.4242%" y="389" width="0.0395%" height="15" fill="rgb(232,127,16)" fg:x="22937" fg:w="11"/><text x="82.6742%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.04%)</title><rect x="82.4242%" y="373" width="0.0395%" height="15" fill="rgb(231,219,51)" fg:x="22937" fg:w="11"/><text x="82.6742%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (7 samples, 0.03%)</title><rect x="82.4386%" y="357" width="0.0252%" height="15" fill="rgb(217,220,46)" fg:x="22941" fg:w="7"/><text x="82.6886%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (7 samples, 0.03%)</title><rect x="82.4386%" y="341" width="0.0252%" height="15" fill="rgb(230,75,1)" fg:x="22941" fg:w="7"/><text x="82.6886%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,350 samples, 4.85%)</title><rect x="77.6269%" y="469" width="4.8512%" height="15" fill="rgb(218,2,8)" fg:x="21602" fg:w="1350"/><text x="77.8769%" y="479.50">&lt;core:..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1,350 samples, 4.85%)</title><rect x="77.6269%" y="453" width="4.8512%" height="15" fill="rgb(206,111,30)" fg:x="21602" fg:w="1350"/><text x="77.8769%" y="463.50">async_..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,341 samples, 4.82%)</title><rect x="77.6592%" y="437" width="4.8189%" height="15" fill="rgb(209,135,6)" fg:x="21611" fg:w="1341"/><text x="77.9092%" y="447.50">&lt;futur..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1,326 samples, 4.76%)</title><rect x="77.7131%" y="421" width="4.7650%" height="15" fill="rgb(205,169,10)" fg:x="21626" fg:w="1326"/><text x="77.9631%" y="431.50">async_..</text></g><g><title>async_executor::Ticker::wake (71 samples, 0.26%)</title><rect x="82.2229%" y="405" width="0.2551%" height="15" fill="rgb(212,204,38)" fg:x="22881" fg:w="71"/><text x="82.4729%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="82.4637%" y="389" width="0.0144%" height="15" fill="rgb(205,199,14)" fg:x="22948" fg:w="4"/><text x="82.7137%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (4 samples, 0.01%)</title><rect x="82.4637%" y="373" width="0.0144%" height="15" fill="rgb(212,4,6)" fg:x="22948" fg:w="4"/><text x="82.7137%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (4 samples, 0.01%)</title><rect x="82.4637%" y="357" width="0.0144%" height="15" fill="rgb(250,15,10)" fg:x="22948" fg:w="4"/><text x="82.7137%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,380 samples, 4.96%)</title><rect x="77.5226%" y="501" width="4.9590%" height="15" fill="rgb(212,49,51)" fg:x="21573" fg:w="1380"/><text x="77.7726%" y="511.50">&lt;core:..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (1,363 samples, 4.90%)</title><rect x="77.5837%" y="485" width="4.8979%" height="15" fill="rgb(235,21,9)" fg:x="21590" fg:w="1363"/><text x="77.8337%" y="495.50">async_..</text></g><g><title>async_executor::Runner::runnable (3 samples, 0.01%)</title><rect x="82.4853%" y="501" width="0.0108%" height="15" fill="rgb(251,31,32)" fg:x="22954" fg:w="3"/><text x="82.7353%" y="511.50"></text></g><g><title>core::future::from_generator (3 samples, 0.01%)</title><rect x="82.4853%" y="485" width="0.0108%" height="15" fill="rgb(246,23,9)" fg:x="22954" fg:w="3"/><text x="82.7353%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4 samples, 0.01%)</title><rect x="82.4960%" y="501" width="0.0144%" height="15" fill="rgb(225,216,14)" fg:x="22957" fg:w="4"/><text x="82.7460%" y="511.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,783 samples, 6.41%)</title><rect x="76.1176%" y="549" width="6.4072%" height="15" fill="rgb(215,200,26)" fg:x="21182" fg:w="1783"/><text x="76.3676%" y="559.50">&lt;futures..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,426 samples, 5.12%)</title><rect x="77.4005%" y="533" width="5.1243%" height="15" fill="rgb(237,130,47)" fg:x="21539" fg:w="1426"/><text x="77.6505%" y="543.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,410 samples, 5.07%)</title><rect x="77.4580%" y="517" width="5.0668%" height="15" fill="rgb(247,74,14)" fg:x="21555" fg:w="1410"/><text x="77.7080%" y="527.50">async_..</text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (4 samples, 0.01%)</title><rect x="82.5392%" y="501" width="0.0144%" height="15" fill="rgb(254,97,46)" fg:x="22969" fg:w="4"/><text x="82.7892%" y="511.50"></text></g><g><title>async_executor::Executor::state (33 samples, 0.12%)</title><rect x="82.5284%" y="549" width="0.1186%" height="15" fill="rgb(234,191,1)" fg:x="22966" fg:w="33"/><text x="82.7784%" y="559.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (30 samples, 0.11%)</title><rect x="82.5392%" y="533" width="0.1078%" height="15" fill="rgb(215,165,14)" fg:x="22969" fg:w="30"/><text x="82.7892%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (30 samples, 0.11%)</title><rect x="82.5392%" y="517" width="0.1078%" height="15" fill="rgb(230,182,6)" fg:x="22969" fg:w="30"/><text x="82.7892%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (26 samples, 0.09%)</title><rect x="82.5535%" y="501" width="0.0934%" height="15" fill="rgb(210,127,39)" fg:x="22973" fg:w="26"/><text x="82.8035%" y="511.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (26 samples, 0.09%)</title><rect x="82.5535%" y="485" width="0.0934%" height="15" fill="rgb(223,212,51)" fg:x="22973" fg:w="26"/><text x="82.8035%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,856 samples, 6.67%)</title><rect x="75.9882%" y="581" width="6.6695%" height="15" fill="rgb(226,176,43)" fg:x="21146" fg:w="1856"/><text x="76.2382%" y="591.50">&lt;core::fu..</text></g><g><title>async_executor::Executor::run::{{closure}} (1,851 samples, 6.65%)</title><rect x="76.0062%" y="565" width="6.6516%" height="15" fill="rgb(222,155,4)" fg:x="21151" fg:w="1851"/><text x="76.2562%" y="575.50">async_exe..</text></g><g><title>async_executor::Runner::new (3 samples, 0.01%)</title><rect x="82.6470%" y="549" width="0.0108%" height="15" fill="rgb(215,149,7)" fg:x="22999" fg:w="3"/><text x="82.8970%" y="559.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,859 samples, 6.68%)</title><rect x="75.9882%" y="597" width="6.6803%" height="15" fill="rgb(252,199,23)" fg:x="21146" fg:w="1859"/><text x="76.2382%" y="607.50">&lt;async_st..</text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (3 samples, 0.01%)</title><rect x="82.6578%" y="581" width="0.0108%" height="15" fill="rgb(245,52,29)" fg:x="23002" fg:w="3"/><text x="82.9078%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,979 samples, 7.11%)</title><rect x="75.5642%" y="677" width="7.1115%" height="15" fill="rgb(221,228,19)" fg:x="21028" fg:w="1979"/><text x="75.8142%" y="687.50">&lt;async_std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,979 samples, 7.11%)</title><rect x="75.5642%" y="661" width="7.1115%" height="15" fill="rgb(253,101,6)" fg:x="21028" fg:w="1979"/><text x="75.8142%" y="671.50">async_std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,978 samples, 7.11%)</title><rect x="75.5678%" y="645" width="7.1079%" height="15" fill="rgb(211,130,8)" fg:x="21029" fg:w="1978"/><text x="75.8178%" y="655.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,972 samples, 7.09%)</title><rect x="75.5893%" y="629" width="7.0864%" height="15" fill="rgb(238,37,53)" fg:x="21035" fg:w="1972"/><text x="75.8393%" y="639.50">std::threa..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,861 samples, 6.69%)</title><rect x="75.9882%" y="613" width="6.6875%" height="15" fill="rgb(235,145,5)" fg:x="21146" fg:w="1861"/><text x="76.2382%" y="623.50">async_std..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="82.7117%" y="533" width="0.0180%" height="15" fill="rgb(244,12,43)" fg:x="23017" fg:w="5"/><text x="82.9617%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.02%)</title><rect x="82.7117%" y="517" width="0.0180%" height="15" fill="rgb(246,195,24)" fg:x="23017" fg:w="5"/><text x="82.9617%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="82.7117%" y="501" width="0.0180%" height="15" fill="rgb(235,163,6)" fg:x="23017" fg:w="5"/><text x="82.9617%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="82.7117%" y="485" width="0.0180%" height="15" fill="rgb(236,218,17)" fg:x="23017" fg:w="5"/><text x="82.9617%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.02%)</title><rect x="82.7117%" y="469" width="0.0180%" height="15" fill="rgb(235,12,38)" fg:x="23017" fg:w="5"/><text x="82.9617%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.02%)</title><rect x="82.7117%" y="453" width="0.0180%" height="15" fill="rgb(225,195,33)" fg:x="23017" fg:w="5"/><text x="82.9617%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.02%)</title><rect x="82.7117%" y="437" width="0.0180%" height="15" fill="rgb(238,54,35)" fg:x="23017" fg:w="5"/><text x="82.9617%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (5 samples, 0.02%)</title><rect x="82.7117%" y="421" width="0.0180%" height="15" fill="rgb(238,33,7)" fg:x="23017" fg:w="5"/><text x="82.9617%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (56 samples, 0.20%)</title><rect x="82.8195%" y="517" width="0.2012%" height="15" fill="rgb(245,5,14)" fg:x="23047" fg:w="56"/><text x="83.0695%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (98 samples, 0.35%)</title><rect x="82.7296%" y="533" width="0.3522%" height="15" fill="rgb(251,95,31)" fg:x="23022" fg:w="98"/><text x="82.9796%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (17 samples, 0.06%)</title><rect x="83.0207%" y="517" width="0.0611%" height="15" fill="rgb(222,15,46)" fg:x="23103" fg:w="17"/><text x="83.2707%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (10 samples, 0.04%)</title><rect x="83.0459%" y="501" width="0.0359%" height="15" fill="rgb(226,182,24)" fg:x="23110" fg:w="10"/><text x="83.2959%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.04%)</title><rect x="83.0459%" y="485" width="0.0359%" height="15" fill="rgb(229,105,41)" fg:x="23110" fg:w="10"/><text x="83.2959%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="83.0818%" y="533" width="0.0144%" height="15" fill="rgb(216,99,53)" fg:x="23120" fg:w="4"/><text x="83.3318%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="83.0818%" y="517" width="0.0144%" height="15" fill="rgb(253,26,20)" fg:x="23120" fg:w="4"/><text x="83.3318%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (110 samples, 0.40%)</title><rect x="82.7117%" y="549" width="0.3953%" height="15" fill="rgb(249,155,28)" fg:x="23017" fg:w="110"/><text x="82.9617%" y="559.50"></text></g><g><title>async_executor::Sleepers::insert (3 samples, 0.01%)</title><rect x="83.1141%" y="533" width="0.0108%" height="15" fill="rgb(241,221,2)" fg:x="23129" fg:w="3"/><text x="83.3641%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.01%)</title><rect x="83.1141%" y="517" width="0.0108%" height="15" fill="rgb(219,124,6)" fg:x="23129" fg:w="3"/><text x="83.3641%" y="527.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="83.1608%" y="517" width="0.0144%" height="15" fill="rgb(233,37,6)" fg:x="23142" fg:w="4"/><text x="83.4108%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.01%)</title><rect x="83.1608%" y="501" width="0.0144%" height="15" fill="rgb(238,20,14)" fg:x="23142" fg:w="4"/><text x="83.4108%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (17 samples, 0.06%)</title><rect x="83.1249%" y="533" width="0.0611%" height="15" fill="rgb(232,106,27)" fg:x="23132" fg:w="17"/><text x="83.3749%" y="543.50"></text></g><g><title>core::task::wake::Waker::will_wake (3 samples, 0.01%)</title><rect x="83.1752%" y="517" width="0.0108%" height="15" fill="rgb(246,157,24)" fg:x="23146" fg:w="3"/><text x="83.4252%" y="527.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (3 samples, 0.01%)</title><rect x="83.1752%" y="501" width="0.0108%" height="15" fill="rgb(214,153,10)" fg:x="23146" fg:w="3"/><text x="83.4252%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.50%)</title><rect x="82.7009%" y="645" width="0.5031%" height="15" fill="rgb(212,94,6)" fg:x="23014" fg:w="140"/><text x="82.9509%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (140 samples, 0.50%)</title><rect x="82.7009%" y="629" width="0.5031%" height="15" fill="rgb(254,25,27)" fg:x="23014" fg:w="140"/><text x="82.9509%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.50%)</title><rect x="82.7009%" y="613" width="0.5031%" height="15" fill="rgb(250,43,52)" fg:x="23014" fg:w="140"/><text x="82.9509%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (140 samples, 0.50%)</title><rect x="82.7009%" y="597" width="0.5031%" height="15" fill="rgb(221,226,40)" fg:x="23014" fg:w="140"/><text x="82.9509%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (139 samples, 0.50%)</title><rect x="82.7045%" y="581" width="0.4995%" height="15" fill="rgb(235,162,34)" fg:x="23015" fg:w="139"/><text x="82.9545%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (139 samples, 0.50%)</title><rect x="82.7045%" y="565" width="0.4995%" height="15" fill="rgb(239,24,26)" fg:x="23015" fg:w="139"/><text x="82.9545%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (27 samples, 0.10%)</title><rect x="83.1069%" y="549" width="0.0970%" height="15" fill="rgb(244,226,11)" fg:x="23127" fg:w="27"/><text x="83.3569%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="83.1896%" y="533" width="0.0144%" height="15" fill="rgb(225,23,10)" fg:x="23150" fg:w="4"/><text x="83.4396%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (4 samples, 0.01%)</title><rect x="83.1896%" y="517" width="0.0144%" height="15" fill="rgb(249,125,6)" fg:x="23150" fg:w="4"/><text x="83.4396%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (4 samples, 0.01%)</title><rect x="83.1896%" y="501" width="0.0144%" height="15" fill="rgb(246,212,12)" fg:x="23150" fg:w="4"/><text x="83.4396%" y="511.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,127 samples, 7.64%)</title><rect x="75.5642%" y="693" width="7.6434%" height="15" fill="rgb(230,43,32)" fg:x="21028" fg:w="2127"/><text x="75.8142%" y="703.50">&lt;futures_l..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (148 samples, 0.53%)</title><rect x="82.6757%" y="677" width="0.5318%" height="15" fill="rgb(210,95,23)" fg:x="23007" fg:w="148"/><text x="82.9257%" y="687.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (147 samples, 0.53%)</title><rect x="82.6793%" y="661" width="0.5282%" height="15" fill="rgb(229,103,33)" fg:x="23008" fg:w="147"/><text x="82.9293%" y="671.50"></text></g><g><title>[libc.so.6] (34 samples, 0.12%)</title><rect x="83.2076%" y="693" width="0.1222%" height="15" fill="rgb(222,104,27)" fg:x="23155" fg:w="34"/><text x="83.4576%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="83.3118%" y="677" width="0.0180%" height="15" fill="rgb(239,221,23)" fg:x="23184" fg:w="5"/><text x="83.5618%" y="687.50"></text></g><g><title>[libc.so.6] (11 samples, 0.04%)</title><rect x="83.4411%" y="533" width="0.0395%" height="15" fill="rgb(222,98,21)" fg:x="23220" fg:w="11"/><text x="83.6911%" y="543.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="83.5058%" y="453" width="0.0108%" height="15" fill="rgb(231,101,20)" fg:x="23238" fg:w="3"/><text x="83.7558%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (23 samples, 0.08%)</title><rect x="83.4411%" y="549" width="0.0827%" height="15" fill="rgb(215,150,22)" fg:x="23220" fg:w="23"/><text x="83.6911%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.04%)</title><rect x="83.4807%" y="533" width="0.0431%" height="15" fill="rgb(248,3,34)" fg:x="23231" fg:w="12"/><text x="83.7307%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.04%)</title><rect x="83.4807%" y="517" width="0.0431%" height="15" fill="rgb(220,141,21)" fg:x="23231" fg:w="12"/><text x="83.7307%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.04%)</title><rect x="83.4807%" y="501" width="0.0431%" height="15" fill="rgb(223,41,48)" fg:x="23231" fg:w="12"/><text x="83.7307%" y="511.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.04%)</title><rect x="83.4807%" y="485" width="0.0431%" height="15" fill="rgb(247,12,5)" fg:x="23231" fg:w="12"/><text x="83.7307%" y="495.50"></text></g><g><title>malloc (10 samples, 0.04%)</title><rect x="83.4879%" y="469" width="0.0359%" height="15" fill="rgb(206,173,10)" fg:x="23233" fg:w="10"/><text x="83.7379%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (35 samples, 0.13%)</title><rect x="83.4016%" y="613" width="0.1258%" height="15" fill="rgb(233,214,37)" fg:x="23209" fg:w="35"/><text x="83.6516%" y="623.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (35 samples, 0.13%)</title><rect x="83.4016%" y="597" width="0.1258%" height="15" fill="rgb(238,86,43)" fg:x="23209" fg:w="35"/><text x="83.6516%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (24 samples, 0.09%)</title><rect x="83.4411%" y="581" width="0.0862%" height="15" fill="rgb(212,182,8)" fg:x="23220" fg:w="24"/><text x="83.6911%" y="591.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (24 samples, 0.09%)</title><rect x="83.4411%" y="565" width="0.0862%" height="15" fill="rgb(240,91,47)" fg:x="23220" fg:w="24"/><text x="83.6911%" y="575.50"></text></g><g><title>async_executor::Executor::state (66 samples, 0.24%)</title><rect x="83.3369%" y="693" width="0.2372%" height="15" fill="rgb(209,138,26)" fg:x="23191" fg:w="66"/><text x="83.5869%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (65 samples, 0.23%)</title><rect x="83.3405%" y="677" width="0.2336%" height="15" fill="rgb(231,163,20)" fg:x="23192" fg:w="65"/><text x="83.5905%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (65 samples, 0.23%)</title><rect x="83.3405%" y="661" width="0.2336%" height="15" fill="rgb(214,91,54)" fg:x="23192" fg:w="65"/><text x="83.5905%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (61 samples, 0.22%)</title><rect x="83.3549%" y="645" width="0.2192%" height="15" fill="rgb(230,32,17)" fg:x="23196" fg:w="61"/><text x="83.6049%" y="655.50"></text></g><g><title>once_cell::imp::initialize_or_wait (56 samples, 0.20%)</title><rect x="83.3729%" y="629" width="0.2012%" height="15" fill="rgb(231,34,34)" fg:x="23201" fg:w="56"/><text x="83.6229%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;once_cell::imp::Guard&gt; (13 samples, 0.05%)</title><rect x="83.5274%" y="613" width="0.0467%" height="15" fill="rgb(224,228,27)" fg:x="23244" fg:w="13"/><text x="83.7774%" y="623.50"></text></g><g><title>&lt;once_cell::imp::Guard as core::ops::drop::Drop&gt;::drop (13 samples, 0.05%)</title><rect x="83.5274%" y="597" width="0.0467%" height="15" fill="rgb(219,35,40)" fg:x="23244" fg:w="13"/><text x="83.7774%" y="607.50"></text></g><g><title>async_executor::Runner::new (12 samples, 0.04%)</title><rect x="83.5777%" y="693" width="0.0431%" height="15" fill="rgb(234,42,8)" fg:x="23258" fg:w="12"/><text x="83.8277%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,256 samples, 8.11%)</title><rect x="75.5175%" y="709" width="8.1069%" height="15" fill="rgb(226,75,22)" fg:x="21015" fg:w="2256"/><text x="75.7675%" y="719.50">async_execu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,265 samples, 8.14%)</title><rect x="75.5175%" y="725" width="8.1393%" height="15" fill="rgb(242,203,28)" fg:x="21015" fg:w="2265"/><text x="75.7675%" y="735.50">&lt;core::futu..</text></g><g><title>async_io::driver::block_on (9 samples, 0.03%)</title><rect x="83.6244%" y="709" width="0.0323%" height="15" fill="rgb(221,3,9)" fg:x="23271" fg:w="9"/><text x="83.8744%" y="719.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="83.6567%" y="725" width="0.0216%" height="15" fill="rgb(214,34,31)" fg:x="23280" fg:w="6"/><text x="83.9067%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="83.6783%" y="725" width="0.0180%" height="15" fill="rgb(252,119,15)" fg:x="23286" fg:w="5"/><text x="83.9283%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="83.6855%" y="709" width="0.0108%" height="15" fill="rgb(244,224,31)" fg:x="23288" fg:w="3"/><text x="83.9355%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="83.6855%" y="693" width="0.0108%" height="15" fill="rgb(215,8,51)" fg:x="23288" fg:w="3"/><text x="83.9355%" y="703.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get (5 samples, 0.02%)</title><rect x="83.7538%" y="677" width="0.0180%" height="15" fill="rgb(207,24,1)" fg:x="23307" fg:w="5"/><text x="84.0038%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.02%)</title><rect x="83.7538%" y="661" width="0.0180%" height="15" fill="rgb(245,90,0)" fg:x="23307" fg:w="5"/><text x="84.0038%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,415 samples, 8.68%)</title><rect x="75.0970%" y="757" width="8.6783%" height="15" fill="rgb(246,43,48)" fg:x="20898" fg:w="2415"/><text x="75.3470%" y="767.50">&lt;core::futur..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (2,415 samples, 8.68%)</title><rect x="75.0970%" y="741" width="8.6783%" height="15" fill="rgb(252,218,10)" fg:x="20898" fg:w="2415"/><text x="75.3470%" y="751.50">async_execut..</text></g><g><title>async_executor::LocalExecutor::inner (22 samples, 0.08%)</title><rect x="83.6963%" y="725" width="0.0791%" height="15" fill="rgb(231,24,35)" fg:x="23291" fg:w="22"/><text x="83.9463%" y="735.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (22 samples, 0.08%)</title><rect x="83.6963%" y="709" width="0.0791%" height="15" fill="rgb(225,66,19)" fg:x="23291" fg:w="22"/><text x="83.9463%" y="719.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (22 samples, 0.08%)</title><rect x="83.6963%" y="693" width="0.0791%" height="15" fill="rgb(214,96,51)" fg:x="23291" fg:w="22"/><text x="83.9463%" y="703.50"></text></g><g><title>[libc.so.6] (29 samples, 0.10%)</title><rect x="83.7789%" y="757" width="0.1042%" height="15" fill="rgb(251,151,47)" fg:x="23314" fg:w="29"/><text x="84.0289%" y="767.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="83.8831%" y="757" width="0.0323%" height="15" fill="rgb(236,79,14)" fg:x="23343" fg:w="9"/><text x="84.1331%" y="767.50"></text></g><g><title>__rdl_alloc (4 samples, 0.01%)</title><rect x="83.9227%" y="677" width="0.0144%" height="15" fill="rgb(210,205,11)" fg:x="23354" fg:w="4"/><text x="84.1727%" y="687.50"></text></g><g><title>[libc.so.6] (42 samples, 0.15%)</title><rect x="84.0017%" y="661" width="0.1509%" height="15" fill="rgb(233,142,53)" fg:x="23376" fg:w="42"/><text x="84.2517%" y="671.50"></text></g><g><title>__lll_lock_wait_private (10 samples, 0.04%)</title><rect x="84.1527%" y="661" width="0.0359%" height="15" fill="rgb(212,116,48)" fg:x="23418" fg:w="10"/><text x="84.4027%" y="671.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="84.1562%" y="645" width="0.0323%" height="15" fill="rgb(234,55,33)" fg:x="23419" fg:w="9"/><text x="84.4062%" y="655.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="84.1562%" y="629" width="0.0323%" height="15" fill="rgb(253,92,27)" fg:x="23419" fg:w="9"/><text x="84.4062%" y="639.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="84.1562%" y="613" width="0.0323%" height="15" fill="rgb(220,7,35)" fg:x="23419" fg:w="9"/><text x="84.4062%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="84.1634%" y="597" width="0.0252%" height="15" fill="rgb(246,124,6)" fg:x="23421" fg:w="7"/><text x="84.4134%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="84.1706%" y="581" width="0.0180%" height="15" fill="rgb(212,111,51)" fg:x="23423" fg:w="5"/><text x="84.4206%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="84.1742%" y="565" width="0.0144%" height="15" fill="rgb(253,116,7)" fg:x="23424" fg:w="4"/><text x="84.4242%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="84.1742%" y="549" width="0.0144%" height="15" fill="rgb(213,145,18)" fg:x="23424" fg:w="4"/><text x="84.4242%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="84.1778%" y="533" width="0.0108%" height="15" fill="rgb(219,149,7)" fg:x="23425" fg:w="3"/><text x="84.4278%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (83 samples, 0.30%)</title><rect x="83.9155%" y="757" width="0.2983%" height="15" fill="rgb(225,156,20)" fg:x="23352" fg:w="83"/><text x="84.1655%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (81 samples, 0.29%)</title><rect x="83.9227%" y="741" width="0.2911%" height="15" fill="rgb(211,98,19)" fg:x="23354" fg:w="81"/><text x="84.1727%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.29%)</title><rect x="83.9227%" y="725" width="0.2911%" height="15" fill="rgb(231,192,31)" fg:x="23354" fg:w="81"/><text x="84.1727%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81 samples, 0.29%)</title><rect x="83.9227%" y="709" width="0.2911%" height="15" fill="rgb(249,95,19)" fg:x="23354" fg:w="81"/><text x="84.1727%" y="719.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.29%)</title><rect x="83.9227%" y="693" width="0.2911%" height="15" fill="rgb(247,101,36)" fg:x="23354" fg:w="81"/><text x="84.1727%" y="703.50"></text></g><g><title>malloc (77 samples, 0.28%)</title><rect x="83.9370%" y="677" width="0.2767%" height="15" fill="rgb(221,45,43)" fg:x="23358" fg:w="77"/><text x="84.1870%" y="687.50"></text></g><g><title>__lll_lock_wake_private (7 samples, 0.03%)</title><rect x="84.1886%" y="661" width="0.0252%" height="15" fill="rgb(220,42,1)" fg:x="23428" fg:w="7"/><text x="84.4386%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="84.1886%" y="645" width="0.0252%" height="15" fill="rgb(236,19,24)" fg:x="23428" fg:w="7"/><text x="84.4386%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="84.1886%" y="629" width="0.0252%" height="15" fill="rgb(225,192,6)" fg:x="23428" fg:w="7"/><text x="84.4386%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="84.1886%" y="613" width="0.0252%" height="15" fill="rgb(242,30,19)" fg:x="23428" fg:w="7"/><text x="84.4386%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="84.1886%" y="597" width="0.0252%" height="15" fill="rgb(240,36,6)" fg:x="23428" fg:w="7"/><text x="84.4386%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="84.1922%" y="581" width="0.0216%" height="15" fill="rgb(246,40,28)" fg:x="23429" fg:w="6"/><text x="84.4422%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="84.2030%" y="565" width="0.0108%" height="15" fill="rgb(225,155,33)" fg:x="23432" fg:w="3"/><text x="84.4530%" y="575.50"></text></g><g><title>async_io::reactor::Reactor::get (16 samples, 0.06%)</title><rect x="84.2137%" y="757" width="0.0575%" height="15" fill="rgb(240,65,18)" fg:x="23435" fg:w="16"/><text x="84.4637%" y="767.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.04%)</title><rect x="84.2353%" y="741" width="0.0359%" height="15" fill="rgb(217,0,48)" fg:x="23441" fg:w="10"/><text x="84.4853%" y="751.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (10 samples, 0.04%)</title><rect x="84.2353%" y="725" width="0.0359%" height="15" fill="rgb(217,80,15)" fg:x="23441" fg:w="10"/><text x="84.4853%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (10 samples, 0.04%)</title><rect x="84.2353%" y="709" width="0.0359%" height="15" fill="rgb(253,43,51)" fg:x="23441" fg:w="10"/><text x="84.4853%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (10 samples, 0.04%)</title><rect x="84.2353%" y="693" width="0.0359%" height="15" fill="rgb(246,60,4)" fg:x="23441" fg:w="10"/><text x="84.4853%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (10 samples, 0.04%)</title><rect x="84.2353%" y="677" width="0.0359%" height="15" fill="rgb(230,40,54)" fg:x="23441" fg:w="10"/><text x="84.4853%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (10 samples, 0.04%)</title><rect x="84.2353%" y="661" width="0.0359%" height="15" fill="rgb(208,20,44)" fg:x="23441" fg:w="10"/><text x="84.4853%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (19 samples, 0.07%)</title><rect x="84.2712%" y="757" width="0.0683%" height="15" fill="rgb(230,22,22)" fg:x="23451" fg:w="19"/><text x="84.5212%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (16 samples, 0.06%)</title><rect x="84.2820%" y="741" width="0.0575%" height="15" fill="rgb(207,57,4)" fg:x="23454" fg:w="16"/><text x="84.5320%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (16 samples, 0.06%)</title><rect x="84.2820%" y="725" width="0.0575%" height="15" fill="rgb(242,130,33)" fg:x="23454" fg:w="16"/><text x="84.5320%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (16 samples, 0.06%)</title><rect x="84.2820%" y="709" width="0.0575%" height="15" fill="rgb(218,66,43)" fg:x="23454" fg:w="16"/><text x="84.5320%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (16 samples, 0.06%)</title><rect x="84.2820%" y="693" width="0.0575%" height="15" fill="rgb(236,105,16)" fg:x="23454" fg:w="16"/><text x="84.5320%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.06%)</title><rect x="84.2820%" y="677" width="0.0575%" height="15" fill="rgb(230,46,15)" fg:x="23454" fg:w="16"/><text x="84.5320%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.07%)</title><rect x="84.3898%" y="677" width="0.0719%" height="15" fill="rgb(251,172,40)" fg:x="23484" fg:w="20"/><text x="84.6398%" y="687.50"></text></g><g><title>malloc (18 samples, 0.06%)</title><rect x="84.3970%" y="661" width="0.0647%" height="15" fill="rgb(225,217,32)" fg:x="23486" fg:w="18"/><text x="84.6470%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 0.08%)</title><rect x="84.3898%" y="725" width="0.0755%" height="15" fill="rgb(243,10,29)" fg:x="23484" fg:w="21"/><text x="84.6398%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 0.08%)</title><rect x="84.3898%" y="709" width="0.0755%" height="15" fill="rgb(207,102,10)" fg:x="23484" fg:w="21"/><text x="84.6398%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.08%)</title><rect x="84.3898%" y="693" width="0.0755%" height="15" fill="rgb(241,125,5)" fg:x="23484" fg:w="21"/><text x="84.6398%" y="703.50"></text></g><g><title>async_io::reactor::Direction::drain_into (22 samples, 0.08%)</title><rect x="84.3898%" y="741" width="0.0791%" height="15" fill="rgb(230,125,29)" fg:x="23484" fg:w="22"/><text x="84.6398%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (3 samples, 0.01%)</title><rect x="84.4904%" y="725" width="0.0108%" height="15" fill="rgb(223,65,44)" fg:x="23512" fg:w="3"/><text x="84.7404%" y="735.50"></text></g><g><title>core::mem::drop (3 samples, 0.01%)</title><rect x="84.5012%" y="725" width="0.0108%" height="15" fill="rgb(224,188,28)" fg:x="23515" fg:w="3"/><text x="84.7512%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (3 samples, 0.01%)</title><rect x="84.5012%" y="709" width="0.0108%" height="15" fill="rgb(254,197,27)" fg:x="23515" fg:w="3"/><text x="84.7512%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.01%)</title><rect x="84.5012%" y="693" width="0.0108%" height="15" fill="rgb(220,200,25)" fg:x="23515" fg:w="3"/><text x="84.7512%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (13 samples, 0.05%)</title><rect x="84.4761%" y="741" width="0.0467%" height="15" fill="rgb(239,225,54)" fg:x="23508" fg:w="13"/><text x="84.7261%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.02%)</title><rect x="84.5264%" y="741" width="0.0180%" height="15" fill="rgb(211,59,40)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="84.5264%" y="725" width="0.0180%" height="15" fill="rgb(213,176,46)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;core::task::wake::Waker,alloc::alloc::Global&gt;&gt; (5 samples, 0.02%)</title><rect x="84.5264%" y="709" width="0.0180%" height="15" fill="rgb(226,99,4)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="719.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="84.5264%" y="693" width="0.0180%" height="15" fill="rgb(239,203,43)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.02%)</title><rect x="84.5264%" y="677" width="0.0180%" height="15" fill="rgb(246,1,45)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="84.5264%" y="661" width="0.0180%" height="15" fill="rgb(231,42,52)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.02%)</title><rect x="84.5264%" y="645" width="0.0180%" height="15" fill="rgb(240,13,50)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="84.5264%" y="629" width="0.0180%" height="15" fill="rgb(225,81,14)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="639.50"></text></g><g><title>cfree (5 samples, 0.02%)</title><rect x="84.5264%" y="613" width="0.0180%" height="15" fill="rgb(216,182,23)" fg:x="23522" fg:w="5"/><text x="84.7764%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.02%)</title><rect x="84.5515%" y="741" width="0.0216%" height="15" fill="rgb(233,137,19)" fg:x="23529" fg:w="6"/><text x="84.8015%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.02%)</title><rect x="84.5515%" y="725" width="0.0216%" height="15" fill="rgb(242,61,46)" fg:x="23529" fg:w="6"/><text x="84.8015%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="84.5839%" y="677" width="0.0108%" height="15" fill="rgb(221,168,51)" fg:x="23538" fg:w="3"/><text x="84.8339%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.01%)</title><rect x="84.5839%" y="661" width="0.0108%" height="15" fill="rgb(238,48,15)" fg:x="23538" fg:w="3"/><text x="84.8339%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.02%)</title><rect x="84.5839%" y="725" width="0.0180%" height="15" fill="rgb(216,13,16)" fg:x="23538" fg:w="5"/><text x="84.8339%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.02%)</title><rect x="84.5839%" y="709" width="0.0180%" height="15" fill="rgb(223,185,34)" fg:x="23538" fg:w="5"/><text x="84.8339%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.02%)</title><rect x="84.5839%" y="693" width="0.0180%" height="15" fill="rgb(228,94,42)" fg:x="23538" fg:w="5"/><text x="84.8339%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.03%)</title><rect x="84.6018%" y="725" width="0.0252%" height="15" fill="rgb(218,166,43)" fg:x="23543" fg:w="7"/><text x="84.8518%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;polling::epoll::Events&gt;&gt; (7 samples, 0.03%)</title><rect x="84.6306%" y="725" width="0.0252%" height="15" fill="rgb(232,30,50)" fg:x="23551" fg:w="7"/><text x="84.8806%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="84.6306%" y="709" width="0.0252%" height="15" fill="rgb(245,206,45)" fg:x="23551" fg:w="7"/><text x="84.8806%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (7 samples, 0.03%)</title><rect x="84.6306%" y="693" width="0.0252%" height="15" fill="rgb(220,56,22)" fg:x="23551" fg:w="7"/><text x="84.8806%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (7 samples, 0.03%)</title><rect x="84.6306%" y="677" width="0.0252%" height="15" fill="rgb(239,129,38)" fg:x="23551" fg:w="7"/><text x="84.8806%" y="687.50"></text></g><g><title>polling::epoll::Events::iter (11 samples, 0.04%)</title><rect x="84.6557%" y="725" width="0.0395%" height="15" fill="rgb(207,68,41)" fg:x="23558" fg:w="11"/><text x="84.9057%" y="735.50"></text></g><g><title>polling::Poller::wait (36 samples, 0.13%)</title><rect x="84.5731%" y="741" width="0.1294%" height="15" fill="rgb(221,21,7)" fg:x="23535" fg:w="36"/><text x="84.8231%" y="751.50"></text></g><g><title>slab::Slab&lt;T&gt;::get (3 samples, 0.01%)</title><rect x="84.7025%" y="741" width="0.0108%" height="15" fill="rgb(240,33,25)" fg:x="23571" fg:w="3"/><text x="84.9525%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (3 samples, 0.01%)</title><rect x="84.7635%" y="517" width="0.0108%" height="15" fill="rgb(242,119,10)" fg:x="23588" fg:w="3"/><text x="85.0135%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.01%)</title><rect x="84.7635%" y="501" width="0.0108%" height="15" fill="rgb(214,149,40)" fg:x="23588" fg:w="3"/><text x="85.0135%" y="511.50"></text></g><g><title>core::task::wake::Waker::wake (26 samples, 0.09%)</title><rect x="84.7456%" y="597" width="0.0934%" height="15" fill="rgb(228,25,36)" fg:x="23583" fg:w="26"/><text x="84.9956%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (26 samples, 0.09%)</title><rect x="84.7456%" y="581" width="0.0934%" height="15" fill="rgb(222,59,15)" fg:x="23583" fg:w="26"/><text x="84.9956%" y="591.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (24 samples, 0.09%)</title><rect x="84.7528%" y="565" width="0.0862%" height="15" fill="rgb(218,170,0)" fg:x="23585" fg:w="24"/><text x="85.0028%" y="575.50"></text></g><g><title>parking::Unparker::unpark (24 samples, 0.09%)</title><rect x="84.7528%" y="549" width="0.0862%" height="15" fill="rgb(232,173,23)" fg:x="23585" fg:w="24"/><text x="85.0028%" y="559.50"></text></g><g><title>parking::Inner::unpark (21 samples, 0.08%)</title><rect x="84.7635%" y="533" width="0.0755%" height="15" fill="rgb(218,116,1)" fg:x="23588" fg:w="21"/><text x="85.0135%" y="543.50"></text></g><g><title>syscall (17 samples, 0.06%)</title><rect x="84.7779%" y="517" width="0.0611%" height="15" fill="rgb(207,34,4)" fg:x="23592" fg:w="17"/><text x="85.0279%" y="527.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="84.7779%" y="501" width="0.0611%" height="15" fill="rgb(229,54,52)" fg:x="23592" fg:w="17"/><text x="85.0279%" y="511.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="84.7779%" y="485" width="0.0611%" height="15" fill="rgb(211,86,23)" fg:x="23592" fg:w="17"/><text x="85.0279%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="84.7779%" y="469" width="0.0611%" height="15" fill="rgb(254,153,34)" fg:x="23592" fg:w="17"/><text x="85.0279%" y="479.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="84.7815%" y="453" width="0.0575%" height="15" fill="rgb(219,220,14)" fg:x="23593" fg:w="16"/><text x="85.0315%" y="463.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="84.7815%" y="437" width="0.0575%" height="15" fill="rgb(247,8,26)" fg:x="23593" fg:w="16"/><text x="85.0315%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="84.8031%" y="421" width="0.0359%" height="15" fill="rgb(213,129,42)" fg:x="23599" fg:w="10"/><text x="85.0531%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="84.8139%" y="405" width="0.0252%" height="15" fill="rgb(225,95,41)" fg:x="23602" fg:w="7"/><text x="85.0639%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="84.8175%" y="389" width="0.0216%" height="15" fill="rgb(215,134,24)" fg:x="23603" fg:w="6"/><text x="85.0675%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="84.8282%" y="373" width="0.0108%" height="15" fill="rgb(235,23,54)" fg:x="23606" fg:w="3"/><text x="85.0782%" y="383.50"></text></g><g><title>async_executor::State::notify (29 samples, 0.10%)</title><rect x="84.7384%" y="613" width="0.1042%" height="15" fill="rgb(229,96,31)" fg:x="23581" fg:w="29"/><text x="84.9884%" y="623.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (46 samples, 0.17%)</title><rect x="84.7384%" y="629" width="0.1653%" height="15" fill="rgb(206,111,12)" fg:x="23581" fg:w="46"/><text x="84.9884%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (17 samples, 0.06%)</title><rect x="84.8426%" y="613" width="0.0611%" height="15" fill="rgb(222,177,8)" fg:x="23610" fg:w="17"/><text x="85.0926%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (12 samples, 0.04%)</title><rect x="84.8606%" y="597" width="0.0431%" height="15" fill="rgb(251,36,52)" fg:x="23615" fg:w="12"/><text x="85.1106%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.01%)</title><rect x="84.8929%" y="581" width="0.0108%" height="15" fill="rgb(216,182,29)" fg:x="23624" fg:w="3"/><text x="85.1429%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.01%)</title><rect x="84.8929%" y="565" width="0.0108%" height="15" fill="rgb(241,145,50)" fg:x="23624" fg:w="3"/><text x="85.1429%" y="575.50"></text></g><g><title>std::panic::catch_unwind (67 samples, 0.24%)</title><rect x="84.7132%" y="741" width="0.2408%" height="15" fill="rgb(231,71,35)" fg:x="23574" fg:w="67"/><text x="84.9632%" y="751.50"></text></g><g><title>std::panicking::try (67 samples, 0.24%)</title><rect x="84.7132%" y="725" width="0.2408%" height="15" fill="rgb(218,22,17)" fg:x="23574" fg:w="67"/><text x="84.9632%" y="735.50"></text></g><g><title>std::panicking::try::do_call (67 samples, 0.24%)</title><rect x="84.7132%" y="709" width="0.2408%" height="15" fill="rgb(225,227,6)" fg:x="23574" fg:w="67"/><text x="84.9632%" y="719.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (67 samples, 0.24%)</title><rect x="84.7132%" y="693" width="0.2408%" height="15" fill="rgb(224,204,17)" fg:x="23574" fg:w="67"/><text x="84.9632%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (67 samples, 0.24%)</title><rect x="84.7132%" y="677" width="0.2408%" height="15" fill="rgb(227,61,28)" fg:x="23574" fg:w="67"/><text x="84.9632%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (67 samples, 0.24%)</title><rect x="84.7132%" y="661" width="0.2408%" height="15" fill="rgb(242,148,23)" fg:x="23574" fg:w="67"/><text x="84.9632%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (61 samples, 0.22%)</title><rect x="84.7348%" y="645" width="0.2192%" height="15" fill="rgb(237,105,33)" fg:x="23580" fg:w="61"/><text x="84.9848%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.05%)</title><rect x="84.9037%" y="629" width="0.0503%" height="15" fill="rgb(238,218,40)" fg:x="23627" fg:w="14"/><text x="85.1537%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.05%)</title><rect x="84.9037%" y="613" width="0.0503%" height="15" fill="rgb(209,126,11)" fg:x="23627" fg:w="14"/><text x="85.1537%" y="623.50"></text></g><g><title>async_io::reactor::ReactorLock::react (183 samples, 0.66%)</title><rect x="84.3395%" y="757" width="0.6576%" height="15" fill="rgb(245,90,11)" fg:x="23470" fg:w="183"/><text x="84.5895%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.04%)</title><rect x="84.9540%" y="741" width="0.0431%" height="15" fill="rgb(211,195,10)" fg:x="23641" fg:w="12"/><text x="85.2040%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.04%)</title><rect x="84.9576%" y="725" width="0.0395%" height="15" fill="rgb(231,45,45)" fg:x="23642" fg:w="11"/><text x="85.2076%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (11 samples, 0.04%)</title><rect x="84.9576%" y="709" width="0.0395%" height="15" fill="rgb(246,100,43)" fg:x="23642" fg:w="11"/><text x="85.2076%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (7 samples, 0.03%)</title><rect x="84.9971%" y="757" width="0.0252%" height="15" fill="rgb(241,193,8)" fg:x="23653" fg:w="7"/><text x="85.2471%" y="767.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.03%)</title><rect x="84.9971%" y="741" width="0.0252%" height="15" fill="rgb(208,76,19)" fg:x="23653" fg:w="7"/><text x="85.2471%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (7 samples, 0.03%)</title><rect x="84.9971%" y="725" width="0.0252%" height="15" fill="rgb(223,69,40)" fg:x="23653" fg:w="7"/><text x="85.2471%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="85.0007%" y="709" width="0.0216%" height="15" fill="rgb(207,120,39)" fg:x="23654" fg:w="6"/><text x="85.2507%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="85.0007%" y="693" width="0.0216%" height="15" fill="rgb(212,209,28)" fg:x="23654" fg:w="6"/><text x="85.2507%" y="703.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (6 samples, 0.02%)</title><rect x="85.0007%" y="677" width="0.0216%" height="15" fill="rgb(246,82,29)" fg:x="23654" fg:w="6"/><text x="85.2507%" y="687.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (6 samples, 0.02%)</title><rect x="85.0007%" y="661" width="0.0216%" height="15" fill="rgb(239,6,40)" fg:x="23654" fg:w="6"/><text x="85.2507%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.05%)</title><rect x="85.0223%" y="757" width="0.0467%" height="15" fill="rgb(228,181,35)" fg:x="23660" fg:w="13"/><text x="85.2723%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.05%)</title><rect x="85.0223%" y="741" width="0.0467%" height="15" fill="rgb(238,151,2)" fg:x="23660" fg:w="13"/><text x="85.2723%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="85.0582%" y="725" width="0.0108%" height="15" fill="rgb(236,94,18)" fg:x="23670" fg:w="3"/><text x="85.3082%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (22 samples, 0.08%)</title><rect x="85.1409%" y="725" width="0.0791%" height="15" fill="rgb(208,38,14)" fg:x="23693" fg:w="22"/><text x="85.3909%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.08%)</title><rect x="85.1409%" y="709" width="0.0791%" height="15" fill="rgb(234,215,27)" fg:x="23693" fg:w="22"/><text x="85.3909%" y="719.50"></text></g><g><title>std::sync::poison::Flag::done (22 samples, 0.08%)</title><rect x="85.1409%" y="693" width="0.0791%" height="15" fill="rgb(254,211,53)" fg:x="23693" fg:w="22"/><text x="85.3909%" y="703.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::then (3 samples, 0.01%)</title><rect x="85.3169%" y="645" width="0.0108%" height="15" fill="rgb(216,175,11)" fg:x="23742" fg:w="3"/><text x="85.5669%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (190 samples, 0.68%)</title><rect x="85.2738%" y="661" width="0.6828%" height="15" fill="rgb(246,179,26)" fg:x="23730" fg:w="190"/><text x="85.5238%" y="671.50"></text></g><g><title>syscall (173 samples, 0.62%)</title><rect x="85.3349%" y="645" width="0.6217%" height="15" fill="rgb(249,19,52)" fg:x="23747" fg:w="173"/><text x="85.5849%" y="655.50"></text></g><g><title>[unknown] (173 samples, 0.62%)</title><rect x="85.3349%" y="629" width="0.6217%" height="15" fill="rgb(230,42,52)" fg:x="23747" fg:w="173"/><text x="85.5849%" y="639.50"></text></g><g><title>[unknown] (172 samples, 0.62%)</title><rect x="85.3385%" y="613" width="0.6181%" height="15" fill="rgb(221,171,0)" fg:x="23748" fg:w="172"/><text x="85.5885%" y="623.50"></text></g><g><title>[unknown] (172 samples, 0.62%)</title><rect x="85.3385%" y="597" width="0.6181%" height="15" fill="rgb(222,177,40)" fg:x="23748" fg:w="172"/><text x="85.5885%" y="607.50"></text></g><g><title>[unknown] (168 samples, 0.60%)</title><rect x="85.3529%" y="581" width="0.6037%" height="15" fill="rgb(247,34,16)" fg:x="23752" fg:w="168"/><text x="85.6029%" y="591.50"></text></g><g><title>[unknown] (151 samples, 0.54%)</title><rect x="85.4140%" y="565" width="0.5426%" height="15" fill="rgb(213,217,37)" fg:x="23769" fg:w="151"/><text x="85.6640%" y="575.50"></text></g><g><title>[unknown] (141 samples, 0.51%)</title><rect x="85.4499%" y="549" width="0.5067%" height="15" fill="rgb(231,189,24)" fg:x="23779" fg:w="141"/><text x="85.6999%" y="559.50"></text></g><g><title>[unknown] (135 samples, 0.49%)</title><rect x="85.4715%" y="533" width="0.4851%" height="15" fill="rgb(214,22,9)" fg:x="23785" fg:w="135"/><text x="85.7215%" y="543.50"></text></g><g><title>[unknown] (101 samples, 0.36%)</title><rect x="85.5936%" y="517" width="0.3629%" height="15" fill="rgb(212,70,22)" fg:x="23819" fg:w="101"/><text x="85.8436%" y="527.50"></text></g><g><title>[unknown] (71 samples, 0.26%)</title><rect x="85.7015%" y="501" width="0.2551%" height="15" fill="rgb(249,64,51)" fg:x="23849" fg:w="71"/><text x="85.9515%" y="511.50"></text></g><g><title>[unknown] (62 samples, 0.22%)</title><rect x="85.7338%" y="485" width="0.2228%" height="15" fill="rgb(249,148,20)" fg:x="23858" fg:w="62"/><text x="85.9838%" y="495.50"></text></g><g><title>[unknown] (36 samples, 0.13%)</title><rect x="85.8272%" y="469" width="0.1294%" height="15" fill="rgb(246,46,48)" fg:x="23884" fg:w="36"/><text x="86.0772%" y="479.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="85.8847%" y="453" width="0.0719%" height="15" fill="rgb(217,34,48)" fg:x="23900" fg:w="20"/><text x="86.1347%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (10 samples, 0.04%)</title><rect x="85.9566%" y="661" width="0.0359%" height="15" fill="rgb(222,45,26)" fg:x="23920" fg:w="10"/><text x="86.2066%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (210 samples, 0.75%)</title><rect x="85.2415%" y="693" width="0.7546%" height="15" fill="rgb(230,201,36)" fg:x="23721" fg:w="210"/><text x="85.4915%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (203 samples, 0.73%)</title><rect x="85.2666%" y="677" width="0.7295%" height="15" fill="rgb(217,30,43)" fg:x="23728" fg:w="203"/><text x="85.5166%" y="687.50"></text></g><g><title>std::sync::condvar::Condvar::wait (220 samples, 0.79%)</title><rect x="85.2199%" y="725" width="0.7906%" height="15" fill="rgb(230,197,40)" fg:x="23715" fg:w="220"/><text x="85.4699%" y="735.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (218 samples, 0.78%)</title><rect x="85.2271%" y="709" width="0.7834%" height="15" fill="rgb(239,181,18)" fg:x="23717" fg:w="218"/><text x="85.4771%" y="719.50"></text></g><g><title>parking::Parker::park (263 samples, 0.95%)</title><rect x="85.0690%" y="757" width="0.9451%" height="15" fill="rgb(222,60,39)" fg:x="23673" fg:w="263"/><text x="85.3190%" y="767.50"></text></g><g><title>parking::Inner::park (262 samples, 0.94%)</title><rect x="85.0726%" y="741" width="0.9415%" height="15" fill="rgb(210,60,22)" fg:x="23674" fg:w="262"/><text x="85.3226%" y="751.50"></text></g><g><title>parking::Parker::park_timeout (20 samples, 0.07%)</title><rect x="86.0141%" y="757" width="0.0719%" height="15" fill="rgb(239,213,48)" fg:x="23936" fg:w="20"/><text x="86.2641%" y="767.50"></text></g><g><title>parking::Inner::park (13 samples, 0.05%)</title><rect x="86.0392%" y="741" width="0.0467%" height="15" fill="rgb(253,214,23)" fg:x="23943" fg:w="13"/><text x="86.2892%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.04%)</title><rect x="86.0464%" y="725" width="0.0395%" height="15" fill="rgb(211,98,45)" fg:x="23945" fg:w="11"/><text x="86.2964%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.04%)</title><rect x="86.0464%" y="709" width="0.0395%" height="15" fill="rgb(239,130,44)" fg:x="23945" fg:w="11"/><text x="86.2964%" y="719.50"></text></g><g><title>parking::Unparker::unpark (7 samples, 0.03%)</title><rect x="86.0860%" y="757" width="0.0252%" height="15" fill="rgb(222,181,35)" fg:x="23956" fg:w="7"/><text x="86.3360%" y="767.50"></text></g><g><title>parking::Inner::unpark (7 samples, 0.03%)</title><rect x="86.0860%" y="741" width="0.0252%" height="15" fill="rgb(219,219,49)" fg:x="23956" fg:w="7"/><text x="86.3360%" y="751.50"></text></g><g><title>syscall (6 samples, 0.02%)</title><rect x="86.0896%" y="725" width="0.0216%" height="15" fill="rgb(227,161,51)" fg:x="23957" fg:w="6"/><text x="86.3396%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.0896%" y="709" width="0.0216%" height="15" fill="rgb(239,112,27)" fg:x="23957" fg:w="6"/><text x="86.3396%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.0896%" y="693" width="0.0216%" height="15" fill="rgb(248,122,18)" fg:x="23957" fg:w="6"/><text x="86.3396%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.0896%" y="677" width="0.0216%" height="15" fill="rgb(245,130,23)" fg:x="23957" fg:w="6"/><text x="86.3396%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="86.0931%" y="661" width="0.0180%" height="15" fill="rgb(211,225,28)" fg:x="23958" fg:w="5"/><text x="86.3431%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="86.0931%" y="645" width="0.0180%" height="15" fill="rgb(242,105,44)" fg:x="23958" fg:w="5"/><text x="86.3431%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="86.1003%" y="629" width="0.0108%" height="15" fill="rgb(216,183,46)" fg:x="23960" fg:w="3"/><text x="86.3503%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="86.1003%" y="613" width="0.0108%" height="15" fill="rgb(227,112,9)" fg:x="23960" fg:w="3"/><text x="86.3503%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="86.1003%" y="597" width="0.0108%" height="15" fill="rgb(244,21,0)" fg:x="23960" fg:w="3"/><text x="86.3503%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (95 samples, 0.34%)</title><rect x="86.1147%" y="725" width="0.3414%" height="15" fill="rgb(236,185,14)" fg:x="23964" fg:w="95"/><text x="86.3647%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (94 samples, 0.34%)</title><rect x="86.1183%" y="709" width="0.3378%" height="15" fill="rgb(236,170,30)" fg:x="23965" fg:w="94"/><text x="86.3683%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.34%)</title><rect x="86.1183%" y="693" width="0.3378%" height="15" fill="rgb(209,198,51)" fg:x="23965" fg:w="94"/><text x="86.3683%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.34%)</title><rect x="86.1183%" y="677" width="0.3378%" height="15" fill="rgb(205,171,26)" fg:x="23965" fg:w="94"/><text x="86.3683%" y="687.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.34%)</title><rect x="86.1183%" y="661" width="0.3378%" height="15" fill="rgb(246,41,49)" fg:x="23965" fg:w="94"/><text x="86.3683%" y="671.50"></text></g><g><title>malloc (94 samples, 0.34%)</title><rect x="86.1183%" y="645" width="0.3378%" height="15" fill="rgb(240,229,12)" fg:x="23965" fg:w="94"/><text x="86.3683%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="86.4417%" y="629" width="0.0144%" height="15" fill="rgb(212,8,54)" fg:x="24055" fg:w="4"/><text x="86.6917%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="86.4453%" y="613" width="0.0108%" height="15" fill="rgb(230,114,13)" fg:x="24056" fg:w="3"/><text x="86.6953%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="86.4453%" y="597" width="0.0108%" height="15" fill="rgb(229,130,28)" fg:x="24056" fg:w="3"/><text x="86.6953%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="86.4453%" y="581" width="0.0108%" height="15" fill="rgb(206,139,15)" fg:x="24056" fg:w="3"/><text x="86.6953%" y="591.50"></text></g><g><title>parking::Parker::new (97 samples, 0.35%)</title><rect x="86.1147%" y="741" width="0.3486%" height="15" fill="rgb(241,188,35)" fg:x="23964" fg:w="97"/><text x="86.3647%" y="751.50"></text></g><g><title>parking::pair (103 samples, 0.37%)</title><rect x="86.1111%" y="757" width="0.3701%" height="15" fill="rgb(208,224,26)" fg:x="23963" fg:w="103"/><text x="86.3611%" y="767.50"></text></g><g><title>parking::Parker::unparker (5 samples, 0.02%)</title><rect x="86.4633%" y="741" width="0.0180%" height="15" fill="rgb(251,131,28)" fg:x="24061" fg:w="5"/><text x="86.7133%" y="751.50"></text></g><g><title>&lt;parking::Unparker as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="86.4633%" y="725" width="0.0180%" height="15" fill="rgb(208,153,1)" fg:x="24061" fg:w="5"/><text x="86.7133%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="86.4633%" y="709" width="0.0180%" height="15" fill="rgb(234,33,36)" fg:x="24061" fg:w="5"/><text x="86.7133%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.02%)</title><rect x="86.4812%" y="757" width="0.0180%" height="15" fill="rgb(246,42,29)" fg:x="24066" fg:w="5"/><text x="86.7312%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.02%)</title><rect x="86.4812%" y="741" width="0.0180%" height="15" fill="rgb(251,114,16)" fg:x="24066" fg:w="5"/><text x="86.7312%" y="751.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (5 samples, 0.02%)</title><rect x="86.4812%" y="725" width="0.0180%" height="15" fill="rgb(233,13,38)" fg:x="24066" fg:w="5"/><text x="86.7312%" y="735.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (5 samples, 0.02%)</title><rect x="86.4812%" y="709" width="0.0180%" height="15" fill="rgb(247,120,19)" fg:x="24066" fg:w="5"/><text x="86.7312%" y="719.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (3 samples, 0.01%)</title><rect x="86.4884%" y="693" width="0.0108%" height="15" fill="rgb(205,11,16)" fg:x="24068" fg:w="3"/><text x="86.7384%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.01%)</title><rect x="86.4884%" y="677" width="0.0108%" height="15" fill="rgb(228,185,19)" fg:x="24068" fg:w="3"/><text x="86.7384%" y="687.50"></text></g><g><title>std::time::Instant::elapsed (6 samples, 0.02%)</title><rect x="86.4992%" y="757" width="0.0216%" height="15" fill="rgb(239,88,52)" fg:x="24071" fg:w="6"/><text x="86.7492%" y="767.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.01%)</title><rect x="86.5100%" y="741" width="0.0108%" height="15" fill="rgb(219,23,1)" fg:x="24074" fg:w="3"/><text x="86.7600%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="86.5100%" y="725" width="0.0108%" height="15" fill="rgb(253,177,16)" fg:x="24074" fg:w="3"/><text x="86.7600%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.01%)</title><rect x="86.5100%" y="709" width="0.0108%" height="15" fill="rgb(225,150,40)" fg:x="24074" fg:w="3"/><text x="86.7600%" y="719.50"></text></g><g><title>clock_gettime (3 samples, 0.01%)</title><rect x="86.5100%" y="693" width="0.0108%" height="15" fill="rgb(208,108,30)" fg:x="24074" fg:w="3"/><text x="86.7600%" y="703.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.01%)</title><rect x="86.5208%" y="757" width="0.0108%" height="15" fill="rgb(214,122,4)" fg:x="24077" fg:w="3"/><text x="86.7708%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.01%)</title><rect x="86.5208%" y="741" width="0.0108%" height="15" fill="rgb(229,74,37)" fg:x="24077" fg:w="3"/><text x="86.7708%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.01%)</title><rect x="86.5208%" y="725" width="0.0108%" height="15" fill="rgb(233,61,41)" fg:x="24077" fg:w="3"/><text x="86.7708%" y="735.50"></text></g><g><title>clock_gettime (3 samples, 0.01%)</title><rect x="86.5208%" y="709" width="0.0108%" height="15" fill="rgb(238,191,5)" fg:x="24077" fg:w="3"/><text x="86.7708%" y="719.50"></text></g><g><title>async_io::driver::block_on (3,213 samples, 11.55%)</title><rect x="75.0683%" y="773" width="11.5459%" height="15" fill="rgb(233,78,24)" fg:x="20890" fg:w="3213"/><text x="75.3183%" y="783.50">async_io::driver:..</text></g><g><title>waker_fn::waker_fn (23 samples, 0.08%)</title><rect x="86.5316%" y="757" width="0.0827%" height="15" fill="rgb(211,142,8)" fg:x="24080" fg:w="23"/><text x="86.7816%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (23 samples, 0.08%)</title><rect x="86.5316%" y="741" width="0.0827%" height="15" fill="rgb(253,38,53)" fg:x="24080" fg:w="23"/><text x="86.7816%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.08%)</title><rect x="86.5316%" y="725" width="0.0827%" height="15" fill="rgb(234,63,51)" fg:x="24080" fg:w="23"/><text x="86.7816%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.08%)</title><rect x="86.5316%" y="709" width="0.0827%" height="15" fill="rgb(205,23,31)" fg:x="24080" fg:w="23"/><text x="86.7816%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.08%)</title><rect x="86.5316%" y="693" width="0.0827%" height="15" fill="rgb(210,184,50)" fg:x="24080" fg:w="23"/><text x="86.7816%" y="703.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.08%)</title><rect x="86.5316%" y="677" width="0.0827%" height="15" fill="rgb(222,112,26)" fg:x="24080" fg:w="23"/><text x="86.7816%" y="687.50"></text></g><g><title>malloc (22 samples, 0.08%)</title><rect x="86.5351%" y="661" width="0.0791%" height="15" fill="rgb(250,98,18)" fg:x="24081" fg:w="22"/><text x="86.7851%" y="671.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,225 samples, 11.59%)</title><rect x="75.0287%" y="789" width="11.5890%" height="15" fill="rgb(250,34,12)" fg:x="20879" fg:w="3225"/><text x="75.2787%" y="799.50">async_global_exec..</text></g><g><title>async_global_executor::tokio::enter (4 samples, 0.01%)</title><rect x="86.6178%" y="789" width="0.0144%" height="15" fill="rgb(236,141,30)" fg:x="24104" fg:w="4"/><text x="86.8678%" y="799.50"></text></g><g><title>&lt;tokio::runtime::handle::Handle as core::clone::Clone&gt;::clone (24 samples, 0.09%)</title><rect x="86.6322%" y="773" width="0.0862%" height="15" fill="rgb(246,134,38)" fg:x="24108" fg:w="24"/><text x="86.8822%" y="783.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (24 samples, 0.09%)</title><rect x="86.6322%" y="757" width="0.0862%" height="15" fill="rgb(240,114,4)" fg:x="24108" fg:w="24"/><text x="86.8822%" y="767.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="86.7615%" y="645" width="0.0323%" height="15" fill="rgb(243,113,39)" fg:x="24144" fg:w="9"/><text x="87.0115%" y="655.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="86.7723%" y="629" width="0.0216%" height="15" fill="rgb(239,215,4)" fg:x="24147" fg:w="6"/><text x="87.0223%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.7723%" y="613" width="0.0216%" height="15" fill="rgb(236,229,45)" fg:x="24147" fg:w="6"/><text x="87.0223%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.7723%" y="597" width="0.0216%" height="15" fill="rgb(242,2,6)" fg:x="24147" fg:w="6"/><text x="87.0223%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.7723%" y="581" width="0.0216%" height="15" fill="rgb(239,108,21)" fg:x="24147" fg:w="6"/><text x="87.0223%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.7723%" y="565" width="0.0216%" height="15" fill="rgb(215,168,34)" fg:x="24147" fg:w="6"/><text x="87.0223%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="86.7759%" y="549" width="0.0180%" height="15" fill="rgb(238,31,17)" fg:x="24148" fg:w="5"/><text x="87.0259%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="86.7795%" y="533" width="0.0144%" height="15" fill="rgb(220,133,11)" fg:x="24149" fg:w="4"/><text x="87.0295%" y="543.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="86.8801%" y="629" width="0.0539%" height="15" fill="rgb(212,158,23)" fg:x="24177" fg:w="15"/><text x="87.1301%" y="639.50"></text></g><g><title>__libc_calloc (43 samples, 0.15%)</title><rect x="86.7939%" y="645" width="0.1545%" height="15" fill="rgb(223,172,7)" fg:x="24153" fg:w="43"/><text x="87.0439%" y="655.50"></text></g><g><title>_dl_find_dso_for_object (3 samples, 0.01%)</title><rect x="86.9484%" y="645" width="0.0108%" height="15" fill="rgb(244,3,52)" fg:x="24196" fg:w="3"/><text x="87.1984%" y="655.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="86.9807%" y="629" width="0.0252%" height="15" fill="rgb(207,69,27)" fg:x="24205" fg:w="7"/><text x="87.2307%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="86.9807%" y="613" width="0.0252%" height="15" fill="rgb(213,136,45)" fg:x="24205" fg:w="7"/><text x="87.2307%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="86.9807%" y="597" width="0.0252%" height="15" fill="rgb(218,79,17)" fg:x="24205" fg:w="7"/><text x="87.2307%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.9843%" y="581" width="0.0216%" height="15" fill="rgb(216,106,36)" fg:x="24206" fg:w="6"/><text x="87.2343%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="86.9843%" y="565" width="0.0216%" height="15" fill="rgb(251,27,45)" fg:x="24206" fg:w="6"/><text x="87.2343%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="86.9879%" y="549" width="0.0180%" height="15" fill="rgb(232,21,34)" fg:x="24207" fg:w="5"/><text x="87.2379%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="86.9879%" y="533" width="0.0180%" height="15" fill="rgb(249,191,16)" fg:x="24207" fg:w="5"/><text x="87.2379%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="86.9879%" y="517" width="0.0180%" height="15" fill="rgb(224,88,20)" fg:x="24207" fg:w="5"/><text x="87.2379%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="86.9879%" y="501" width="0.0180%" height="15" fill="rgb(237,93,27)" fg:x="24207" fg:w="5"/><text x="87.2379%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="86.9915%" y="485" width="0.0144%" height="15" fill="rgb(226,198,48)" fg:x="24208" fg:w="4"/><text x="87.2415%" y="495.50"></text></g><g><title>__cxa_thread_atexit_impl (75 samples, 0.27%)</title><rect x="86.7400%" y="661" width="0.2695%" height="15" fill="rgb(207,162,53)" fg:x="24138" fg:w="75"/><text x="86.9900%" y="671.50"></text></g><g><title>pthread_mutex_lock (14 samples, 0.05%)</title><rect x="86.9592%" y="645" width="0.0503%" height="15" fill="rgb(207,169,9)" fg:x="24199" fg:w="14"/><text x="87.2092%" y="655.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (77 samples, 0.28%)</title><rect x="86.7364%" y="677" width="0.2767%" height="15" fill="rgb(224,166,46)" fg:x="24137" fg:w="77"/><text x="86.9864%" y="687.50"></text></g><g><title>async_global_executor::reactor::block_on (3,363 samples, 12.08%)</title><rect x="74.9497%" y="805" width="12.0850%" height="15" fill="rgb(233,26,6)" fg:x="20857" fg:w="3363"/><text x="75.1997%" y="815.50">async_global_execu..</text></g><g><title>tokio::runtime::handle::Handle::enter (112 samples, 0.40%)</title><rect x="86.6322%" y="789" width="0.4025%" height="15" fill="rgb(218,106,45)" fg:x="24108" fg:w="112"/><text x="86.8822%" y="799.50"></text></g><g><title>tokio::runtime::context::enter (88 samples, 0.32%)</title><rect x="86.7184%" y="773" width="0.3162%" height="15" fill="rgb(240,217,4)" fg:x="24132" fg:w="88"/><text x="86.9684%" y="783.50"></text></g><g><title>tokio::runtime::context::try_enter (88 samples, 0.32%)</title><rect x="86.7184%" y="757" width="0.3162%" height="15" fill="rgb(246,171,10)" fg:x="24132" fg:w="88"/><text x="86.9684%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (87 samples, 0.31%)</title><rect x="86.7220%" y="741" width="0.3126%" height="15" fill="rgb(223,197,30)" fg:x="24133" fg:w="87"/><text x="86.9720%" y="751.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (87 samples, 0.31%)</title><rect x="86.7220%" y="725" width="0.3126%" height="15" fill="rgb(207,92,16)" fg:x="24133" fg:w="87"/><text x="86.9720%" y="735.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (87 samples, 0.31%)</title><rect x="86.7220%" y="709" width="0.3126%" height="15" fill="rgb(211,6,44)" fg:x="24133" fg:w="87"/><text x="86.9720%" y="719.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (84 samples, 0.30%)</title><rect x="86.7328%" y="693" width="0.3019%" height="15" fill="rgb(219,139,2)" fg:x="24136" fg:w="84"/><text x="86.9828%" y="703.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (6 samples, 0.02%)</title><rect x="87.0131%" y="677" width="0.0216%" height="15" fill="rgb(224,103,21)" fg:x="24214" fg:w="6"/><text x="87.2631%" y="687.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit::{{closure}} (5 samples, 0.02%)</title><rect x="87.0167%" y="661" width="0.0180%" height="15" fill="rgb(254,110,48)" fg:x="24215" fg:w="5"/><text x="87.2667%" y="671.50"></text></g><g><title>async_global_executor::executor::LOCAL_EXECUTOR::__getit::{{closure}} (4 samples, 0.01%)</title><rect x="87.0418%" y="789" width="0.0144%" height="15" fill="rgb(212,88,19)" fg:x="24222" fg:w="4"/><text x="87.2918%" y="799.50"></text></g><g><title>async_global_executor::executor::LOCAL_EXECUTOR::__init (4 samples, 0.01%)</title><rect x="87.0418%" y="773" width="0.0144%" height="15" fill="rgb(248,103,6)" fg:x="24222" fg:w="4"/><text x="87.2918%" y="783.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (3,379 samples, 12.14%)</title><rect x="74.9173%" y="821" width="12.1424%" height="15" fill="rgb(214,53,46)" fg:x="20848" fg:w="3379"/><text x="75.1673%" y="831.50">async_global_execu..</text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (7 samples, 0.03%)</title><rect x="87.0346%" y="805" width="0.0252%" height="15" fill="rgb(236,190,24)" fg:x="24220" fg:w="7"/><text x="87.2846%" y="815.50"></text></g><g><title>[libc.so.6] (27 samples, 0.10%)</title><rect x="87.1820%" y="773" width="0.0970%" height="15" fill="rgb(254,58,28)" fg:x="24261" fg:w="27"/><text x="87.4320%" y="783.50"></text></g><g><title>[libc.so.6] (24 samples, 0.09%)</title><rect x="87.1928%" y="757" width="0.0862%" height="15" fill="rgb(243,63,27)" fg:x="24264" fg:w="24"/><text x="87.4428%" y="767.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="87.1928%" y="741" width="0.0862%" height="15" fill="rgb(206,81,20)" fg:x="24264" fg:w="24"/><text x="87.4428%" y="751.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="87.1928%" y="725" width="0.0862%" height="15" fill="rgb(252,69,51)" fg:x="24264" fg:w="24"/><text x="87.4428%" y="735.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="87.1928%" y="709" width="0.0862%" height="15" fill="rgb(222,213,4)" fg:x="24264" fg:w="24"/><text x="87.4428%" y="719.50"></text></g><g><title>[unknown] (24 samples, 0.09%)</title><rect x="87.1928%" y="693" width="0.0862%" height="15" fill="rgb(226,198,12)" fg:x="24264" fg:w="24"/><text x="87.4428%" y="703.50"></text></g><g><title>[unknown] (19 samples, 0.07%)</title><rect x="87.2107%" y="677" width="0.0683%" height="15" fill="rgb(248,115,11)" fg:x="24269" fg:w="19"/><text x="87.4607%" y="687.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="87.2251%" y="661" width="0.0539%" height="15" fill="rgb(221,148,54)" fg:x="24273" fg:w="15"/><text x="87.4751%" y="671.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="87.2431%" y="645" width="0.0359%" height="15" fill="rgb(214,209,51)" fg:x="24278" fg:w="10"/><text x="87.4931%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.2574%" y="629" width="0.0216%" height="15" fill="rgb(249,116,53)" fg:x="24282" fg:w="6"/><text x="87.5074%" y="639.50"></text></g><g><title>[libc.so.6] (29 samples, 0.10%)</title><rect x="87.5880%" y="757" width="0.1042%" height="15" fill="rgb(248,170,1)" fg:x="24374" fg:w="29"/><text x="87.8380%" y="767.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="87.6923%" y="757" width="0.0252%" height="15" fill="rgb(244,105,10)" fg:x="24403" fg:w="7"/><text x="87.9423%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.6958%" y="741" width="0.0216%" height="15" fill="rgb(229,100,5)" fg:x="24404" fg:w="6"/><text x="87.9458%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.6958%" y="725" width="0.0216%" height="15" fill="rgb(233,221,39)" fg:x="24404" fg:w="6"/><text x="87.9458%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="87.6994%" y="709" width="0.0180%" height="15" fill="rgb(233,88,21)" fg:x="24405" fg:w="5"/><text x="87.9494%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="87.7030%" y="693" width="0.0144%" height="15" fill="rgb(206,13,0)" fg:x="24406" fg:w="4"/><text x="87.9530%" y="703.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="87.7030%" y="677" width="0.0144%" height="15" fill="rgb(242,15,35)" fg:x="24406" fg:w="4"/><text x="87.9530%" y="687.50"></text></g><g><title>__lll_lock_wait_private (23 samples, 0.08%)</title><rect x="87.7174%" y="757" width="0.0827%" height="15" fill="rgb(247,142,41)" fg:x="24410" fg:w="23"/><text x="87.9674%" y="767.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="87.7174%" y="741" width="0.0827%" height="15" fill="rgb(245,51,29)" fg:x="24410" fg:w="23"/><text x="87.9674%" y="751.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="87.7174%" y="725" width="0.0827%" height="15" fill="rgb(228,209,43)" fg:x="24410" fg:w="23"/><text x="87.9674%" y="735.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="87.7174%" y="709" width="0.0827%" height="15" fill="rgb(233,185,9)" fg:x="24410" fg:w="23"/><text x="87.9674%" y="719.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="87.7174%" y="693" width="0.0827%" height="15" fill="rgb(226,93,0)" fg:x="24410" fg:w="23"/><text x="87.9674%" y="703.50"></text></g><g><title>[unknown] (17 samples, 0.06%)</title><rect x="87.7390%" y="677" width="0.0611%" height="15" fill="rgb(245,194,43)" fg:x="24416" fg:w="17"/><text x="87.9890%" y="687.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="87.7533%" y="661" width="0.0467%" height="15" fill="rgb(211,145,34)" fg:x="24420" fg:w="13"/><text x="88.0033%" y="671.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="87.7569%" y="645" width="0.0431%" height="15" fill="rgb(231,228,28)" fg:x="24421" fg:w="12"/><text x="88.0069%" y="655.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="87.7641%" y="629" width="0.0359%" height="15" fill="rgb(236,149,4)" fg:x="24423" fg:w="10"/><text x="88.0141%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="87.7749%" y="613" width="0.0252%" height="15" fill="rgb(234,114,38)" fg:x="24426" fg:w="7"/><text x="88.0249%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="87.7749%" y="597" width="0.0252%" height="15" fill="rgb(246,132,51)" fg:x="24426" fg:w="7"/><text x="88.0249%" y="607.50"></text></g><g><title>__libc_calloc (149 samples, 0.54%)</title><rect x="87.2862%" y="773" width="0.5354%" height="15" fill="rgb(251,137,22)" fg:x="24290" fg:w="149"/><text x="87.5362%" y="783.50"></text></g><g><title>__lll_lock_wake_private (6 samples, 0.02%)</title><rect x="87.8001%" y="757" width="0.0216%" height="15" fill="rgb(243,59,52)" fg:x="24433" fg:w="6"/><text x="88.0501%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.8001%" y="741" width="0.0216%" height="15" fill="rgb(239,56,28)" fg:x="24433" fg:w="6"/><text x="88.0501%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.8001%" y="725" width="0.0216%" height="15" fill="rgb(218,168,27)" fg:x="24433" fg:w="6"/><text x="88.0501%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.8001%" y="709" width="0.0216%" height="15" fill="rgb(232,165,11)" fg:x="24433" fg:w="6"/><text x="88.0501%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.8001%" y="693" width="0.0216%" height="15" fill="rgb(253,55,41)" fg:x="24433" fg:w="6"/><text x="88.0501%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.8001%" y="677" width="0.0216%" height="15" fill="rgb(233,206,24)" fg:x="24433" fg:w="6"/><text x="88.0501%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="87.8072%" y="661" width="0.0144%" height="15" fill="rgb(220,199,8)" fg:x="24435" fg:w="4"/><text x="88.0572%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 0.04%)</title><rect x="87.8432%" y="757" width="0.0359%" height="15" fill="rgb(254,65,26)" fg:x="24445" fg:w="10"/><text x="88.0932%" y="767.50"></text></g><g><title>_dl_find_dso_for_object (17 samples, 0.06%)</title><rect x="87.8216%" y="773" width="0.0611%" height="15" fill="rgb(253,102,23)" fg:x="24439" fg:w="17"/><text x="88.0716%" y="783.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="87.9186%" y="757" width="0.0611%" height="15" fill="rgb(231,103,35)" fg:x="24466" fg:w="17"/><text x="88.1686%" y="767.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="87.9222%" y="741" width="0.0575%" height="15" fill="rgb(238,26,10)" fg:x="24467" fg:w="16"/><text x="88.1722%" y="751.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="87.9222%" y="725" width="0.0575%" height="15" fill="rgb(234,191,34)" fg:x="24467" fg:w="16"/><text x="88.1722%" y="735.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="87.9222%" y="709" width="0.0575%" height="15" fill="rgb(206,210,9)" fg:x="24467" fg:w="16"/><text x="88.1722%" y="719.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="87.9258%" y="693" width="0.0539%" height="15" fill="rgb(219,155,3)" fg:x="24468" fg:w="15"/><text x="88.1758%" y="703.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="87.9402%" y="677" width="0.0395%" height="15" fill="rgb(221,62,52)" fg:x="24472" fg:w="11"/><text x="88.1902%" y="687.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="87.9438%" y="661" width="0.0359%" height="15" fill="rgb(215,197,36)" fg:x="24473" fg:w="10"/><text x="88.1938%" y="671.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="87.9438%" y="645" width="0.0359%" height="15" fill="rgb(226,222,6)" fg:x="24473" fg:w="10"/><text x="88.1938%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="87.9546%" y="629" width="0.0252%" height="15" fill="rgb(215,58,28)" fg:x="24476" fg:w="7"/><text x="88.2046%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.9582%" y="613" width="0.0216%" height="15" fill="rgb(212,148,2)" fg:x="24477" fg:w="6"/><text x="88.2082%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="87.9582%" y="597" width="0.0216%" height="15" fill="rgb(208,21,42)" fg:x="24477" fg:w="6"/><text x="88.2082%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="87.9618%" y="581" width="0.0180%" height="15" fill="rgb(209,107,26)" fg:x="24478" fg:w="5"/><text x="88.2118%" y="591.50"></text></g><g><title>__cxa_thread_atexit_impl (239 samples, 0.86%)</title><rect x="87.1281%" y="789" width="0.8588%" height="15" fill="rgb(254,60,47)" fg:x="24246" fg:w="239"/><text x="87.3781%" y="799.50"></text></g><g><title>pthread_mutex_lock (29 samples, 0.10%)</title><rect x="87.8827%" y="773" width="0.1042%" height="15" fill="rgb(207,226,45)" fg:x="24456" fg:w="29"/><text x="88.1327%" y="783.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (259 samples, 0.93%)</title><rect x="87.0598%" y="821" width="0.9307%" height="15" fill="rgb(223,124,22)" fg:x="24227" fg:w="259"/><text x="87.3098%" y="831.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (258 samples, 0.93%)</title><rect x="87.0634%" y="805" width="0.9271%" height="15" fill="rgb(240,162,13)" fg:x="24228" fg:w="258"/><text x="87.3134%" y="815.50"></text></g><g><title>async_global_executor::executor::LOCAL_EXECUTOR::__getit::{{closure}} (3 samples, 0.01%)</title><rect x="88.0013%" y="805" width="0.0108%" height="15" fill="rgb(244,199,31)" fg:x="24489" fg:w="3"/><text x="88.2513%" y="815.50"></text></g><g><title>async_global_executor::executor::LOCAL_EXECUTOR::__init (3 samples, 0.01%)</title><rect x="88.0013%" y="789" width="0.0108%" height="15" fill="rgb(207,92,16)" fg:x="24489" fg:w="3"/><text x="88.2513%" y="799.50"></text></g><g><title>core::mem::replace (6 samples, 0.02%)</title><rect x="88.0121%" y="805" width="0.0216%" height="15" fill="rgb(215,31,19)" fg:x="24492" fg:w="6"/><text x="88.2621%" y="815.50"></text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="88.0193%" y="789" width="0.0144%" height="15" fill="rgb(245,118,14)" fg:x="24494" fg:w="4"/><text x="88.2693%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8,214 samples, 29.52%)</title><rect x="58.5202%" y="1061" width="29.5170%" height="15" fill="rgb(248,12,46)" fg:x="16285" fg:w="8214"/><text x="58.7702%" y="1071.50">std::sys_common::backtrace::__rust_begin_short_b..</text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (3,855 samples, 13.85%)</title><rect x="74.1843%" y="1045" width="13.8530%" height="15" fill="rgb(209,119,0)" fg:x="20644" fg:w="3855"/><text x="74.4343%" y="1055.50">zenoh_transport::mana..</text></g><g><title>async_std::task::block_on::block_on (3,855 samples, 13.85%)</title><rect x="74.1843%" y="1029" width="13.8530%" height="15" fill="rgb(254,51,44)" fg:x="20644" fg:w="3855"/><text x="74.4343%" y="1039.50">async_std::task::bloc..</text></g><g><title>async_std::task::builder::Builder::blocking (3,852 samples, 13.84%)</title><rect x="74.1951%" y="1013" width="13.8422%" height="15" fill="rgb(253,182,35)" fg:x="20647" fg:w="3852"/><text x="74.4451%" y="1023.50">async_std::task::buil..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,784 samples, 13.60%)</title><rect x="74.4394%" y="997" width="13.5978%" height="15" fill="rgb(205,198,39)" fg:x="20715" fg:w="3784"/><text x="74.6894%" y="1007.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,777 samples, 13.57%)</title><rect x="74.4646%" y="981" width="13.5727%" height="15" fill="rgb(251,175,48)" fg:x="20722" fg:w="3777"/><text x="74.7146%" y="991.50">std::thread::local::L..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (3,740 samples, 13.44%)</title><rect x="74.5975%" y="965" width="13.4397%" height="15" fill="rgb(239,38,17)" fg:x="20759" fg:w="3740"/><text x="74.8475%" y="975.50">async_std::task::bui..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,740 samples, 13.44%)</title><rect x="74.5975%" y="949" width="13.4397%" height="15" fill="rgb(212,101,8)" fg:x="20759" fg:w="3740"/><text x="74.8475%" y="959.50">async_std::task::tas..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,733 samples, 13.41%)</title><rect x="74.6227%" y="933" width="13.4145%" height="15" fill="rgb(228,35,17)" fg:x="20766" fg:w="3733"/><text x="74.8727%" y="943.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,726 samples, 13.39%)</title><rect x="74.6478%" y="917" width="13.3894%" height="15" fill="rgb(214,95,8)" fg:x="20773" fg:w="3726"/><text x="74.8978%" y="927.50">std::thread::local::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,705 samples, 13.31%)</title><rect x="74.7233%" y="901" width="13.3139%" height="15" fill="rgb(210,176,35)" fg:x="20794" fg:w="3705"/><text x="74.9733%" y="911.50">async_std::task::tas..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (3,705 samples, 13.31%)</title><rect x="74.7233%" y="885" width="13.3139%" height="15" fill="rgb(226,4,3)" fg:x="20794" fg:w="3705"/><text x="74.9733%" y="895.50">async_std::task::bui..</text></g><g><title>async_global_executor::executor::block_on (3,705 samples, 13.31%)</title><rect x="74.7233%" y="869" width="13.3139%" height="15" fill="rgb(232,133,14)" fg:x="20794" fg:w="3705"/><text x="74.9733%" y="879.50">async_global_executo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,701 samples, 13.30%)</title><rect x="74.7377%" y="853" width="13.2996%" height="15" fill="rgb(250,191,8)" fg:x="20798" fg:w="3701"/><text x="74.9877%" y="863.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,672 samples, 13.20%)</title><rect x="74.8419%" y="837" width="13.1953%" height="15" fill="rgb(213,12,45)" fg:x="20827" fg:w="3672"/><text x="75.0919%" y="847.50">std::thread::local::..</text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (13 samples, 0.05%)</title><rect x="87.9905%" y="821" width="0.0467%" height="15" fill="rgb(233,78,26)" fg:x="24486" fg:w="13"/><text x="88.2405%" y="831.50"></text></g><g><title>std::panic::catch_unwind (8,221 samples, 29.54%)</title><rect x="58.4986%" y="1141" width="29.5422%" height="15" fill="rgb(245,222,11)" fg:x="16279" fg:w="8221"/><text x="58.7486%" y="1151.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (8,221 samples, 29.54%)</title><rect x="58.4986%" y="1125" width="29.5422%" height="15" fill="rgb(216,174,12)" fg:x="16279" fg:w="8221"/><text x="58.7486%" y="1135.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (8,221 samples, 29.54%)</title><rect x="58.4986%" y="1109" width="29.5422%" height="15" fill="rgb(213,15,9)" fg:x="16279" fg:w="8221"/><text x="58.7486%" y="1119.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8,221 samples, 29.54%)</title><rect x="58.4986%" y="1093" width="29.5422%" height="15" fill="rgb(238,103,32)" fg:x="16279" fg:w="8221"/><text x="58.7486%" y="1103.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; a..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (8,221 samples, 29.54%)</title><rect x="58.4986%" y="1077" width="29.5422%" height="15" fill="rgb(245,85,15)" fg:x="16279" fg:w="8221"/><text x="58.7486%" y="1087.50">std::thread::Builder::spawn_unchecked_::{{closur..</text></g><g><title>pthread_attr_destroy (11 samples, 0.04%)</title><rect x="88.0696%" y="1125" width="0.0395%" height="15" fill="rgb(254,204,5)" fg:x="24508" fg:w="11"/><text x="88.3196%" y="1135.50"></text></g><g><title>cfree (10 samples, 0.04%)</title><rect x="88.0732%" y="1109" width="0.0359%" height="15" fill="rgb(231,178,15)" fg:x="24509" fg:w="10"/><text x="88.3232%" y="1119.50"></text></g><g><title>[libc.so.6] (7 samples, 0.03%)</title><rect x="88.0839%" y="1093" width="0.0252%" height="15" fill="rgb(248,151,3)" fg:x="24512" fg:w="7"/><text x="88.3339%" y="1103.50"></text></g><g><title>pthread_attr_getguardsize (4 samples, 0.01%)</title><rect x="88.1091%" y="1125" width="0.0144%" height="15" fill="rgb(250,139,13)" fg:x="24519" fg:w="4"/><text x="88.3591%" y="1135.50"></text></g><g><title>cfree (7 samples, 0.03%)</title><rect x="88.2600%" y="1109" width="0.0252%" height="15" fill="rgb(243,107,53)" fg:x="24561" fg:w="7"/><text x="88.5100%" y="1119.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="88.2744%" y="1093" width="0.0108%" height="15" fill="rgb(232,81,15)" fg:x="24565" fg:w="3"/><text x="88.5244%" y="1103.50"></text></g><g><title>[unknown] (52 samples, 0.19%)</title><rect x="89.8376%" y="1045" width="0.1869%" height="15" fill="rgb(225,187,48)" fg:x="25000" fg:w="52"/><text x="90.0876%" y="1055.50"></text></g><g><title>[unknown] (52 samples, 0.19%)</title><rect x="89.8376%" y="1029" width="0.1869%" height="15" fill="rgb(205,116,12)" fg:x="25000" fg:w="52"/><text x="90.0876%" y="1039.50"></text></g><g><title>[unknown] (52 samples, 0.19%)</title><rect x="89.8376%" y="1013" width="0.1869%" height="15" fill="rgb(220,222,31)" fg:x="25000" fg:w="52"/><text x="90.0876%" y="1023.50"></text></g><g><title>[unknown] (52 samples, 0.19%)</title><rect x="89.8376%" y="997" width="0.1869%" height="15" fill="rgb(233,187,49)" fg:x="25000" fg:w="52"/><text x="90.0876%" y="1007.50"></text></g><g><title>[unknown] (51 samples, 0.18%)</title><rect x="89.8412%" y="981" width="0.1833%" height="15" fill="rgb(211,168,53)" fg:x="25001" fg:w="51"/><text x="90.0912%" y="991.50"></text></g><g><title>[unknown] (50 samples, 0.18%)</title><rect x="89.8448%" y="965" width="0.1797%" height="15" fill="rgb(206,160,16)" fg:x="25002" fg:w="50"/><text x="90.0948%" y="975.50"></text></g><g><title>[unknown] (48 samples, 0.17%)</title><rect x="89.8519%" y="949" width="0.1725%" height="15" fill="rgb(254,164,13)" fg:x="25004" fg:w="48"/><text x="90.1019%" y="959.50"></text></g><g><title>[unknown] (43 samples, 0.15%)</title><rect x="89.8699%" y="933" width="0.1545%" height="15" fill="rgb(229,45,30)" fg:x="25009" fg:w="43"/><text x="90.1199%" y="943.50"></text></g><g><title>[unknown] (38 samples, 0.14%)</title><rect x="89.8879%" y="917" width="0.1366%" height="15" fill="rgb(237,32,10)" fg:x="25014" fg:w="38"/><text x="90.1379%" y="927.50"></text></g><g><title>[unknown] (29 samples, 0.10%)</title><rect x="89.9202%" y="901" width="0.1042%" height="15" fill="rgb(251,20,47)" fg:x="25023" fg:w="29"/><text x="90.1702%" y="911.50"></text></g><g><title>__mmap (127 samples, 0.46%)</title><rect x="90.0244%" y="1045" width="0.4564%" height="15" fill="rgb(251,116,12)" fg:x="25052" fg:w="127"/><text x="90.2744%" y="1055.50"></text></g><g><title>[unknown] (127 samples, 0.46%)</title><rect x="90.0244%" y="1029" width="0.4564%" height="15" fill="rgb(214,227,27)" fg:x="25052" fg:w="127"/><text x="90.2744%" y="1039.50"></text></g><g><title>[unknown] (127 samples, 0.46%)</title><rect x="90.0244%" y="1013" width="0.4564%" height="15" fill="rgb(248,10,53)" fg:x="25052" fg:w="127"/><text x="90.2744%" y="1023.50"></text></g><g><title>[unknown] (124 samples, 0.45%)</title><rect x="90.0352%" y="997" width="0.4456%" height="15" fill="rgb(221,176,25)" fg:x="25055" fg:w="124"/><text x="90.2852%" y="1007.50"></text></g><g><title>[unknown] (119 samples, 0.43%)</title><rect x="90.0532%" y="981" width="0.4276%" height="15" fill="rgb(205,70,46)" fg:x="25060" fg:w="119"/><text x="90.3032%" y="991.50"></text></g><g><title>[unknown] (100 samples, 0.36%)</title><rect x="90.1215%" y="965" width="0.3594%" height="15" fill="rgb(217,45,38)" fg:x="25079" fg:w="100"/><text x="90.3715%" y="975.50"></text></g><g><title>[unknown] (80 samples, 0.29%)</title><rect x="90.1933%" y="949" width="0.2875%" height="15" fill="rgb(243,6,54)" fg:x="25099" fg:w="80"/><text x="90.4433%" y="959.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="90.3658%" y="933" width="0.1150%" height="15" fill="rgb(242,76,23)" fg:x="25147" fg:w="32"/><text x="90.6158%" y="943.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="90.4664%" y="917" width="0.0144%" height="15" fill="rgb(239,166,0)" fg:x="25175" fg:w="4"/><text x="90.7164%" y="927.50"></text></g><g><title>__mprotect (27 samples, 0.10%)</title><rect x="90.4808%" y="1045" width="0.0970%" height="15" fill="rgb(238,174,32)" fg:x="25179" fg:w="27"/><text x="90.7308%" y="1055.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="90.4808%" y="1029" width="0.0970%" height="15" fill="rgb(238,124,44)" fg:x="25179" fg:w="27"/><text x="90.7308%" y="1039.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="90.4808%" y="1013" width="0.0970%" height="15" fill="rgb(206,185,9)" fg:x="25179" fg:w="27"/><text x="90.7308%" y="1023.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="90.4808%" y="997" width="0.0970%" height="15" fill="rgb(215,157,17)" fg:x="25179" fg:w="27"/><text x="90.7308%" y="1007.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="90.4808%" y="981" width="0.0970%" height="15" fill="rgb(251,17,29)" fg:x="25179" fg:w="27"/><text x="90.7308%" y="991.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="90.4808%" y="965" width="0.0970%" height="15" fill="rgb(227,113,27)" fg:x="25179" fg:w="27"/><text x="90.7308%" y="975.50"></text></g><g><title>[unknown] (27 samples, 0.10%)</title><rect x="90.4808%" y="949" width="0.0970%" height="15" fill="rgb(217,226,24)" fg:x="25179" fg:w="27"/><text x="90.7308%" y="959.50"></text></g><g><title>[unknown] (23 samples, 0.08%)</title><rect x="90.4952%" y="933" width="0.0827%" height="15" fill="rgb(251,99,38)" fg:x="25183" fg:w="23"/><text x="90.7452%" y="943.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="90.5527%" y="917" width="0.0252%" height="15" fill="rgb(231,147,19)" fg:x="25199" fg:w="7"/><text x="90.8027%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="90.5635%" y="901" width="0.0144%" height="15" fill="rgb(230,86,8)" fg:x="25202" fg:w="4"/><text x="90.8135%" y="911.50"></text></g><g><title>[libc.so.6] (232 samples, 0.83%)</title><rect x="89.7980%" y="1061" width="0.8337%" height="15" fill="rgb(237,159,39)" fg:x="24989" fg:w="232"/><text x="90.0480%" y="1071.50"></text></g><g><title>__munmap (15 samples, 0.05%)</title><rect x="90.5778%" y="1045" width="0.0539%" height="15" fill="rgb(247,179,47)" fg:x="25206" fg:w="15"/><text x="90.8278%" y="1055.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="90.5778%" y="1029" width="0.0539%" height="15" fill="rgb(253,152,26)" fg:x="25206" fg:w="15"/><text x="90.8278%" y="1039.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="90.5778%" y="1013" width="0.0539%" height="15" fill="rgb(222,211,15)" fg:x="25206" fg:w="15"/><text x="90.8278%" y="1023.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="90.5778%" y="997" width="0.0539%" height="15" fill="rgb(236,193,6)" fg:x="25206" fg:w="15"/><text x="90.8278%" y="1007.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="90.5778%" y="981" width="0.0539%" height="15" fill="rgb(226,206,10)" fg:x="25206" fg:w="15"/><text x="90.8278%" y="991.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="90.5778%" y="965" width="0.0539%" height="15" fill="rgb(213,125,22)" fg:x="25206" fg:w="15"/><text x="90.8278%" y="975.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="90.5814%" y="949" width="0.0503%" height="15" fill="rgb(221,66,28)" fg:x="25207" fg:w="14"/><text x="90.8314%" y="959.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="90.5922%" y="933" width="0.0395%" height="15" fill="rgb(222,84,53)" fg:x="25210" fg:w="11"/><text x="90.8422%" y="943.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="90.6317%" y="1061" width="0.0575%" height="15" fill="rgb(243,50,15)" fg:x="25221" fg:w="16"/><text x="90.8817%" y="1071.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="90.6353%" y="1045" width="0.0539%" height="15" fill="rgb(208,184,23)" fg:x="25222" fg:w="15"/><text x="90.8853%" y="1055.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="90.6353%" y="1029" width="0.0539%" height="15" fill="rgb(221,83,2)" fg:x="25222" fg:w="15"/><text x="90.8853%" y="1039.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="90.6353%" y="1013" width="0.0539%" height="15" fill="rgb(236,53,24)" fg:x="25222" fg:w="15"/><text x="90.8853%" y="1023.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="90.6569%" y="997" width="0.0323%" height="15" fill="rgb(244,171,29)" fg:x="25228" fg:w="9"/><text x="90.9069%" y="1007.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="90.6605%" y="981" width="0.0287%" height="15" fill="rgb(205,19,11)" fg:x="25229" fg:w="8"/><text x="90.9105%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="90.6677%" y="965" width="0.0216%" height="15" fill="rgb(207,108,29)" fg:x="25231" fg:w="6"/><text x="90.9177%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="90.6677%" y="949" width="0.0216%" height="15" fill="rgb(236,215,43)" fg:x="25231" fg:w="6"/><text x="90.9177%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="90.6677%" y="933" width="0.0216%" height="15" fill="rgb(213,58,35)" fg:x="25231" fg:w="6"/><text x="90.9177%" y="943.50"></text></g><g><title>[libc.so.6] (514 samples, 1.85%)</title><rect x="88.8565%" y="1077" width="1.8471%" height="15" fill="rgb(220,211,46)" fg:x="24727" fg:w="514"/><text x="89.1065%" y="1087.50">[..</text></g><g><title>[libc.so.6] (663 samples, 2.38%)</title><rect x="88.3535%" y="1093" width="2.3825%" height="15" fill="rgb(212,134,16)" fg:x="24587" fg:w="663"/><text x="88.6035%" y="1103.50">[l..</text></g><g><title>__lll_lock_wake_private (7 samples, 0.03%)</title><rect x="90.7108%" y="1077" width="0.0252%" height="15" fill="rgb(232,90,44)" fg:x="25243" fg:w="7"/><text x="90.9608%" y="1087.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="90.7108%" y="1061" width="0.0252%" height="15" fill="rgb(212,18,36)" fg:x="25243" fg:w="7"/><text x="90.9608%" y="1071.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="90.7108%" y="1045" width="0.0252%" height="15" fill="rgb(206,112,24)" fg:x="25243" fg:w="7"/><text x="90.9608%" y="1055.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="90.7108%" y="1029" width="0.0252%" height="15" fill="rgb(238,223,40)" fg:x="25243" fg:w="7"/><text x="90.9608%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="90.7144%" y="1013" width="0.0216%" height="15" fill="rgb(226,169,20)" fg:x="25244" fg:w="6"/><text x="90.9644%" y="1023.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="90.7216%" y="997" width="0.0144%" height="15" fill="rgb(241,64,52)" fg:x="25246" fg:w="4"/><text x="90.9716%" y="1007.50"></text></g><g><title>malloc (684 samples, 2.46%)</title><rect x="88.2852%" y="1109" width="2.4580%" height="15" fill="rgb(228,120,25)" fg:x="24568" fg:w="684"/><text x="88.5352%" y="1119.50">ma..</text></g><g><title>pthread_attr_init (43 samples, 0.15%)</title><rect x="90.7431%" y="1109" width="0.1545%" height="15" fill="rgb(234,108,19)" fg:x="25252" fg:w="43"/><text x="90.9931%" y="1119.50"></text></g><g><title>[libc.so.6] (51 samples, 0.18%)</title><rect x="91.0378%" y="1061" width="0.1833%" height="15" fill="rgb(236,133,29)" fg:x="25334" fg:w="51"/><text x="91.2878%" y="1071.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="91.1636%" y="1045" width="0.0575%" height="15" fill="rgb(246,174,53)" fg:x="25369" fg:w="16"/><text x="91.4136%" y="1055.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="91.1672%" y="1029" width="0.0539%" height="15" fill="rgb(210,105,35)" fg:x="25370" fg:w="15"/><text x="91.4172%" y="1039.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="91.1672%" y="1013" width="0.0539%" height="15" fill="rgb(225,27,26)" fg:x="25370" fg:w="15"/><text x="91.4172%" y="1023.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="91.1672%" y="997" width="0.0539%" height="15" fill="rgb(233,2,39)" fg:x="25370" fg:w="15"/><text x="91.4172%" y="1007.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="91.1708%" y="981" width="0.0503%" height="15" fill="rgb(219,164,26)" fg:x="25371" fg:w="14"/><text x="91.4208%" y="991.50"></text></g><g><title>[unknown] (11 samples, 0.04%)</title><rect x="91.1815%" y="965" width="0.0395%" height="15" fill="rgb(236,211,5)" fg:x="25374" fg:w="11"/><text x="91.4315%" y="975.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="91.1851%" y="949" width="0.0359%" height="15" fill="rgb(244,227,23)" fg:x="25375" fg:w="10"/><text x="91.4351%" y="959.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="91.1923%" y="933" width="0.0287%" height="15" fill="rgb(230,184,8)" fg:x="25377" fg:w="8"/><text x="91.4423%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="91.1995%" y="917" width="0.0216%" height="15" fill="rgb(217,125,48)" fg:x="25379" fg:w="6"/><text x="91.4495%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="91.2031%" y="901" width="0.0180%" height="15" fill="rgb(223,192,47)" fg:x="25380" fg:w="5"/><text x="91.4531%" y="911.50"></text></g><g><title>[libc.so.6] (90 samples, 0.32%)</title><rect x="90.9120%" y="1093" width="0.3234%" height="15" fill="rgb(226,119,10)" fg:x="25299" fg:w="90"/><text x="91.1620%" y="1103.50"></text></g><g><title>__libc_calloc (76 samples, 0.27%)</title><rect x="90.9623%" y="1077" width="0.2731%" height="15" fill="rgb(221,49,29)" fg:x="25313" fg:w="76"/><text x="91.2123%" y="1087.50"></text></g><g><title>__lll_lock_wake_private (3 samples, 0.01%)</title><rect x="91.2247%" y="1061" width="0.0108%" height="15" fill="rgb(217,205,19)" fg:x="25386" fg:w="3"/><text x="91.4747%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="91.2247%" y="1045" width="0.0108%" height="15" fill="rgb(242,104,7)" fg:x="25386" fg:w="3"/><text x="91.4747%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="91.2247%" y="1029" width="0.0108%" height="15" fill="rgb(209,154,48)" fg:x="25386" fg:w="3"/><text x="91.4747%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="91.2247%" y="1013" width="0.0108%" height="15" fill="rgb(219,213,46)" fg:x="25386" fg:w="3"/><text x="91.4747%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="91.2247%" y="997" width="0.0108%" height="15" fill="rgb(229,105,38)" fg:x="25386" fg:w="3"/><text x="91.4747%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="91.2247%" y="981" width="0.0108%" height="15" fill="rgb(205,151,5)" fg:x="25386" fg:w="3"/><text x="91.4747%" y="991.50"></text></g><g><title>[libc.so.6] (10 samples, 0.04%)</title><rect x="91.2462%" y="1077" width="0.0359%" height="15" fill="rgb(248,115,40)" fg:x="25392" fg:w="10"/><text x="91.4962%" y="1087.50"></text></g><g><title>malloc (15 samples, 0.05%)</title><rect x="91.2354%" y="1093" width="0.0539%" height="15" fill="rgb(206,179,2)" fg:x="25389" fg:w="15"/><text x="91.4854%" y="1103.50"></text></g><g><title>pthread_attr_setaffinity_np (113 samples, 0.41%)</title><rect x="90.8977%" y="1109" width="0.4061%" height="15" fill="rgb(230,103,24)" fg:x="25295" fg:w="113"/><text x="91.1477%" y="1119.50"></text></g><g><title>realloc (4 samples, 0.01%)</title><rect x="91.2893%" y="1093" width="0.0144%" height="15" fill="rgb(218,152,4)" fg:x="25404" fg:w="4"/><text x="91.5393%" y="1103.50"></text></g><g><title>[libc.so.6] (17 samples, 0.06%)</title><rect x="91.3576%" y="1093" width="0.0611%" height="15" fill="rgb(236,161,54)" fg:x="25423" fg:w="17"/><text x="91.6076%" y="1103.50"></text></g><g><title>pthread_getaffinity_np (232 samples, 0.83%)</title><rect x="91.3037%" y="1109" width="0.8337%" height="15" fill="rgb(226,65,17)" fg:x="25408" fg:w="232"/><text x="91.5537%" y="1119.50"></text></g><g><title>[unknown] (200 samples, 0.72%)</title><rect x="91.4187%" y="1093" width="0.7187%" height="15" fill="rgb(221,134,44)" fg:x="25440" fg:w="200"/><text x="91.6687%" y="1103.50"></text></g><g><title>[unknown] (196 samples, 0.70%)</title><rect x="91.4331%" y="1077" width="0.7043%" height="15" fill="rgb(251,129,4)" fg:x="25444" fg:w="196"/><text x="91.6831%" y="1087.50"></text></g><g><title>[unknown] (194 samples, 0.70%)</title><rect x="91.4403%" y="1061" width="0.6971%" height="15" fill="rgb(244,32,34)" fg:x="25446" fg:w="194"/><text x="91.6903%" y="1071.50"></text></g><g><title>[unknown] (180 samples, 0.65%)</title><rect x="91.4906%" y="1045" width="0.6468%" height="15" fill="rgb(251,224,37)" fg:x="25460" fg:w="180"/><text x="91.7406%" y="1055.50"></text></g><g><title>[unknown] (149 samples, 0.54%)</title><rect x="91.6020%" y="1029" width="0.5354%" height="15" fill="rgb(248,117,31)" fg:x="25491" fg:w="149"/><text x="91.8520%" y="1039.50"></text></g><g><title>[unknown] (108 samples, 0.39%)</title><rect x="91.7493%" y="1013" width="0.3881%" height="15" fill="rgb(222,208,37)" fg:x="25532" fg:w="108"/><text x="91.9993%" y="1023.50"></text></g><g><title>pthread_getattr_np (1,150 samples, 4.13%)</title><rect x="88.1235%" y="1125" width="4.1325%" height="15" fill="rgb(234,211,25)" fg:x="24523" fg:w="1150"/><text x="88.3735%" y="1135.50">pthre..</text></g><g><title>realloc (33 samples, 0.12%)</title><rect x="92.1374%" y="1109" width="0.1186%" height="15" fill="rgb(211,72,6)" fg:x="25640" fg:w="33"/><text x="92.3874%" y="1119.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="92.2416%" y="1093" width="0.0144%" height="15" fill="rgb(249,198,38)" fg:x="25669" fg:w="4"/><text x="92.4916%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::current (1,189 samples, 4.27%)</title><rect x="88.0408%" y="1141" width="4.2727%" height="15" fill="rgb(221,86,51)" fg:x="24500" fg:w="1189"/><text x="88.2908%" y="1151.50">std::..</text></g><g><title>pthread_self (16 samples, 0.06%)</title><rect x="92.2560%" y="1125" width="0.0575%" height="15" fill="rgb(226,178,43)" fg:x="25673" fg:w="16"/><text x="92.5060%" y="1135.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="92.4069%" y="1029" width="0.0108%" height="15" fill="rgb(215,145,7)" fg:x="25715" fg:w="3"/><text x="92.6569%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.4069%" y="1013" width="0.0108%" height="15" fill="rgb(250,202,36)" fg:x="25715" fg:w="3"/><text x="92.6569%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.4069%" y="997" width="0.0108%" height="15" fill="rgb(215,86,13)" fg:x="25715" fg:w="3"/><text x="92.6569%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.4069%" y="981" width="0.0108%" height="15" fill="rgb(221,134,12)" fg:x="25715" fg:w="3"/><text x="92.6569%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.4069%" y="965" width="0.0108%" height="15" fill="rgb(213,82,10)" fg:x="25715" fg:w="3"/><text x="92.6569%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.4069%" y="949" width="0.0108%" height="15" fill="rgb(214,142,0)" fg:x="25715" fg:w="3"/><text x="92.6569%" y="959.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.4069%" y="933" width="0.0108%" height="15" fill="rgb(205,145,9)" fg:x="25715" fg:w="3"/><text x="92.6569%" y="943.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="92.3997%" y="1045" width="0.0216%" height="15" fill="rgb(244,214,8)" fg:x="25713" fg:w="6"/><text x="92.6497%" y="1055.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="92.4644%" y="1029" width="0.0216%" height="15" fill="rgb(224,72,51)" fg:x="25731" fg:w="6"/><text x="92.7144%" y="1039.50"></text></g><g><title>__libc_calloc (19 samples, 0.07%)</title><rect x="92.4249%" y="1045" width="0.0683%" height="15" fill="rgb(233,137,37)" fg:x="25720" fg:w="19"/><text x="92.6749%" y="1055.50"></text></g><g><title>_dl_find_dso_for_object (26 samples, 0.09%)</title><rect x="92.4932%" y="1045" width="0.0934%" height="15" fill="rgb(208,71,28)" fg:x="25739" fg:w="26"/><text x="92.7432%" y="1055.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16 samples, 0.06%)</title><rect x="92.5291%" y="1029" width="0.0575%" height="15" fill="rgb(226,31,7)" fg:x="25749" fg:w="16"/><text x="92.7791%" y="1039.50"></text></g><g><title>[libc.so.6] (3 samples, 0.01%)</title><rect x="92.6405%" y="1029" width="0.0108%" height="15" fill="rgb(229,62,18)" fg:x="25780" fg:w="3"/><text x="92.8905%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.6405%" y="1013" width="0.0108%" height="15" fill="rgb(226,74,28)" fg:x="25780" fg:w="3"/><text x="92.8905%" y="1023.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.6405%" y="997" width="0.0108%" height="15" fill="rgb(214,170,18)" fg:x="25780" fg:w="3"/><text x="92.8905%" y="1007.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.6405%" y="981" width="0.0108%" height="15" fill="rgb(227,229,35)" fg:x="25780" fg:w="3"/><text x="92.8905%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.6405%" y="965" width="0.0108%" height="15" fill="rgb(225,181,39)" fg:x="25780" fg:w="3"/><text x="92.8905%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.6405%" y="949" width="0.0108%" height="15" fill="rgb(253,124,44)" fg:x="25780" fg:w="3"/><text x="92.8905%" y="959.50"></text></g><g><title>__cxa_thread_atexit_impl (90 samples, 0.32%)</title><rect x="92.3315%" y="1061" width="0.3234%" height="15" fill="rgb(220,75,18)" fg:x="25694" fg:w="90"/><text x="92.5815%" y="1071.50"></text></g><g><title>pthread_mutex_lock (19 samples, 0.07%)</title><rect x="92.5866%" y="1045" width="0.0683%" height="15" fill="rgb(239,175,43)" fg:x="25765" fg:w="19"/><text x="92.8366%" y="1055.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (91 samples, 0.33%)</title><rect x="92.3315%" y="1093" width="0.3270%" height="15" fill="rgb(228,112,50)" fg:x="25694" fg:w="91"/><text x="92.5815%" y="1103.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (91 samples, 0.33%)</title><rect x="92.3315%" y="1077" width="0.3270%" height="15" fill="rgb(232,105,36)" fg:x="25694" fg:w="91"/><text x="92.5815%" y="1087.50"></text></g><g><title>std::sys_common::thread_info::set (98 samples, 0.35%)</title><rect x="92.3135%" y="1141" width="0.3522%" height="15" fill="rgb(227,137,47)" fg:x="25689" fg:w="98"/><text x="92.5635%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (93 samples, 0.33%)</title><rect x="92.3315%" y="1125" width="0.3342%" height="15" fill="rgb(217,51,9)" fg:x="25694" fg:w="93"/><text x="92.5815%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (93 samples, 0.33%)</title><rect x="92.3315%" y="1109" width="0.3342%" height="15" fill="rgb(245,117,0)" fg:x="25694" fg:w="93"/><text x="92.5815%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="92.9208%" y="1109" width="0.0108%" height="15" fill="rgb(252,52,30)" fg:x="25858" fg:w="3"/><text x="93.1708%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,763 samples, 35.08%)</title><rect x="58.0099%" y="1189" width="35.0834%" height="15" fill="rgb(227,85,33)" fg:x="16143" fg:w="9763"/><text x="58.2599%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Ar..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (9,763 samples, 35.08%)</title><rect x="58.0099%" y="1173" width="35.0834%" height="15" fill="rgb(220,157,20)" fg:x="16143" fg:w="9763"/><text x="58.2599%" y="1183.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (9,753 samples, 35.05%)</title><rect x="58.0459%" y="1157" width="35.0474%" height="15" fill="rgb(254,14,34)" fg:x="16153" fg:w="9753"/><text x="58.2959%" y="1167.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::thread::Thread::cname (119 samples, 0.43%)</title><rect x="92.6657%" y="1141" width="0.4276%" height="15" fill="rgb(216,103,41)" fg:x="25787" fg:w="119"/><text x="92.9157%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (114 samples, 0.41%)</title><rect x="92.6836%" y="1125" width="0.4097%" height="15" fill="rgb(245,221,9)" fg:x="25792" fg:w="114"/><text x="92.9336%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (45 samples, 0.16%)</title><rect x="92.9316%" y="1109" width="0.1617%" height="15" fill="rgb(254,136,47)" fg:x="25861" fg:w="45"/><text x="93.1816%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (9,775 samples, 35.13%)</title><rect x="57.9704%" y="1205" width="35.1265%" height="15" fill="rgb(235,71,46)" fg:x="16132" fg:w="9775"/><text x="58.2204%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Ar..</text></g><g><title>core::sync::atomic::AtomicBool::load (69 samples, 0.25%)</title><rect x="93.1292%" y="1173" width="0.2480%" height="15" fill="rgb(242,154,29)" fg:x="25916" fg:w="69"/><text x="93.3792%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.17%)</title><rect x="93.2119%" y="1157" width="0.1653%" height="15" fill="rgb(210,65,31)" fg:x="25939" fg:w="46"/><text x="93.4619%" y="1167.50"></text></g><g><title>sigaltstack (137 samples, 0.49%)</title><rect x="93.3772%" y="1173" width="0.4923%" height="15" fill="rgb(244,9,50)" fg:x="25985" fg:w="137"/><text x="93.6272%" y="1183.50"></text></g><g><title>[unknown] (113 samples, 0.41%)</title><rect x="93.4634%" y="1157" width="0.4061%" height="15" fill="rgb(215,141,38)" fg:x="26009" fg:w="113"/><text x="93.7134%" y="1167.50"></text></g><g><title>[unknown] (97 samples, 0.35%)</title><rect x="93.5209%" y="1141" width="0.3486%" height="15" fill="rgb(241,129,6)" fg:x="26025" fg:w="97"/><text x="93.7709%" y="1151.50"></text></g><g><title>[unknown] (92 samples, 0.33%)</title><rect x="93.5389%" y="1125" width="0.3306%" height="15" fill="rgb(253,169,4)" fg:x="26030" fg:w="92"/><text x="93.7889%" y="1135.50"></text></g><g><title>[unknown] (65 samples, 0.23%)</title><rect x="93.6359%" y="1109" width="0.2336%" height="15" fill="rgb(237,82,36)" fg:x="26057" fg:w="65"/><text x="93.8859%" y="1119.50"></text></g><g><title>[unknown] (21 samples, 0.08%)</title><rect x="93.7940%" y="1093" width="0.0755%" height="15" fill="rgb(209,171,11)" fg:x="26101" fg:w="21"/><text x="94.0440%" y="1103.50"></text></g><g><title>__mmap (582 samples, 2.09%)</title><rect x="93.8731%" y="1141" width="2.0914%" height="15" fill="rgb(242,19,22)" fg:x="26123" fg:w="582"/><text x="94.1231%" y="1151.50">_..</text></g><g><title>[unknown] (582 samples, 2.09%)</title><rect x="93.8731%" y="1125" width="2.0914%" height="15" fill="rgb(251,122,24)" fg:x="26123" fg:w="582"/><text x="94.1231%" y="1135.50">[..</text></g><g><title>[unknown] (578 samples, 2.08%)</title><rect x="93.8875%" y="1109" width="2.0770%" height="15" fill="rgb(226,166,42)" fg:x="26127" fg:w="578"/><text x="94.1375%" y="1119.50">[..</text></g><g><title>[unknown] (575 samples, 2.07%)</title><rect x="93.8982%" y="1093" width="2.0663%" height="15" fill="rgb(244,101,48)" fg:x="26130" fg:w="575"/><text x="94.1482%" y="1103.50">[..</text></g><g><title>[unknown] (553 samples, 1.99%)</title><rect x="93.9773%" y="1077" width="1.9872%" height="15" fill="rgb(227,125,1)" fg:x="26152" fg:w="553"/><text x="94.2273%" y="1087.50">[..</text></g><g><title>[unknown] (450 samples, 1.62%)</title><rect x="94.3474%" y="1061" width="1.6171%" height="15" fill="rgb(206,79,43)" fg:x="26255" fg:w="450"/><text x="94.5974%" y="1071.50"></text></g><g><title>[unknown] (340 samples, 1.22%)</title><rect x="94.7427%" y="1045" width="1.2218%" height="15" fill="rgb(241,109,41)" fg:x="26365" fg:w="340"/><text x="94.9927%" y="1055.50"></text></g><g><title>[unknown] (115 samples, 0.41%)</title><rect x="95.5512%" y="1029" width="0.4133%" height="15" fill="rgb(219,73,4)" fg:x="26590" fg:w="115"/><text x="95.8012%" y="1039.50"></text></g><g><title>[unknown] (57 samples, 0.20%)</title><rect x="95.7597%" y="1013" width="0.2048%" height="15" fill="rgb(239,25,41)" fg:x="26648" fg:w="57"/><text x="96.0097%" y="1023.50"></text></g><g><title>[unknown] (35 samples, 0.13%)</title><rect x="95.8387%" y="997" width="0.1258%" height="15" fill="rgb(208,88,46)" fg:x="26670" fg:w="35"/><text x="96.0887%" y="1007.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="95.8926%" y="981" width="0.0719%" height="15" fill="rgb(239,184,9)" fg:x="26685" fg:w="20"/><text x="96.1426%" y="991.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="95.9178%" y="965" width="0.0467%" height="15" fill="rgb(223,114,13)" fg:x="26692" fg:w="13"/><text x="96.1678%" y="975.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="95.9537%" y="949" width="0.0108%" height="15" fill="rgb(214,28,42)" fg:x="26702" fg:w="3"/><text x="96.2037%" y="959.50"></text></g><g><title>__mprotect (598 samples, 2.15%)</title><rect x="95.9645%" y="1141" width="2.1489%" height="15" fill="rgb(252,32,44)" fg:x="26705" fg:w="598"/><text x="96.2145%" y="1151.50">_..</text></g><g><title>[unknown] (597 samples, 2.15%)</title><rect x="95.9681%" y="1125" width="2.1453%" height="15" fill="rgb(231,159,4)" fg:x="26706" fg:w="597"/><text x="96.2181%" y="1135.50">[..</text></g><g><title>[unknown] (597 samples, 2.15%)</title><rect x="95.9681%" y="1109" width="2.1453%" height="15" fill="rgb(210,35,26)" fg:x="26706" fg:w="597"/><text x="96.2181%" y="1119.50">[..</text></g><g><title>[unknown] (595 samples, 2.14%)</title><rect x="95.9753%" y="1093" width="2.1381%" height="15" fill="rgb(208,190,37)" fg:x="26708" fg:w="595"/><text x="96.2253%" y="1103.50">[..</text></g><g><title>[unknown] (595 samples, 2.14%)</title><rect x="95.9753%" y="1077" width="2.1381%" height="15" fill="rgb(226,148,22)" fg:x="26708" fg:w="595"/><text x="96.2253%" y="1087.50">[..</text></g><g><title>[unknown] (585 samples, 2.10%)</title><rect x="96.0112%" y="1061" width="2.1022%" height="15" fill="rgb(242,153,24)" fg:x="26718" fg:w="585"/><text x="96.2612%" y="1071.50">[..</text></g><g><title>[unknown] (543 samples, 1.95%)</title><rect x="96.1621%" y="1045" width="1.9513%" height="15" fill="rgb(213,133,7)" fg:x="26760" fg:w="543"/><text x="96.4121%" y="1055.50">[..</text></g><g><title>[unknown] (439 samples, 1.58%)</title><rect x="96.5359%" y="1029" width="1.5775%" height="15" fill="rgb(248,206,18)" fg:x="26864" fg:w="439"/><text x="96.7859%" y="1039.50"></text></g><g><title>[unknown] (85 samples, 0.31%)</title><rect x="97.8080%" y="1013" width="0.3054%" height="15" fill="rgb(233,157,4)" fg:x="27218" fg:w="85"/><text x="98.0580%" y="1023.50"></text></g><g><title>[unknown] (60 samples, 0.22%)</title><rect x="97.8978%" y="997" width="0.2156%" height="15" fill="rgb(249,179,32)" fg:x="27243" fg:w="60"/><text x="98.1478%" y="1007.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="98.0775%" y="981" width="0.0359%" height="15" fill="rgb(248,69,35)" fg:x="27293" fg:w="10"/><text x="98.3275%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.1026%" y="965" width="0.0108%" height="15" fill="rgb(249,158,38)" fg:x="27300" fg:w="3"/><text x="98.3526%" y="975.50"></text></g><g><title>sigaltstack (10 samples, 0.04%)</title><rect x="98.1170%" y="1141" width="0.0359%" height="15" fill="rgb(223,18,43)" fg:x="27304" fg:w="10"/><text x="98.3670%" y="1151.50"></text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="98.1170%" y="1125" width="0.0359%" height="15" fill="rgb(238,42,45)" fg:x="27304" fg:w="10"/><text x="98.3670%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="98.4260%" y="1109" width="0.0180%" height="15" fill="rgb(219,65,47)" fg:x="27390" fg:w="5"/><text x="98.6760%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="98.4260%" y="1093" width="0.0180%" height="15" fill="rgb(248,153,12)" fg:x="27390" fg:w="5"/><text x="98.6760%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="98.4260%" y="1077" width="0.0180%" height="15" fill="rgb(240,118,4)" fg:x="27390" fg:w="5"/><text x="98.6760%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.4332%" y="1061" width="0.0108%" height="15" fill="rgb(250,96,34)" fg:x="27392" fg:w="3"/><text x="98.6832%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.4332%" y="1045" width="0.0108%" height="15" fill="rgb(221,15,4)" fg:x="27392" fg:w="3"/><text x="98.6832%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.4332%" y="1029" width="0.0108%" height="15" fill="rgb(217,149,33)" fg:x="27392" fg:w="3"/><text x="98.6832%" y="1039.50"></text></g><g><title>[libc.so.6] (11,891 samples, 42.73%)</title><rect x="55.8287%" y="1237" width="42.7303%" height="15" fill="rgb(213,58,29)" fg:x="15536" fg:w="11891"/><text x="56.0787%" y="1247.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11,343 samples, 40.76%)</title><rect x="57.7979%" y="1221" width="40.7611%" height="15" fill="rgb(236,218,9)" fg:x="16084" fg:w="11343"/><text x="58.0479%" y="1231.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1,519 samples, 5.46%)</title><rect x="93.1005%" y="1205" width="5.4585%" height="15" fill="rgb(248,40,19)" fg:x="25908" fg:w="1519"/><text x="93.3505%" y="1215.50">std::sy..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1,519 samples, 5.46%)</title><rect x="93.1005%" y="1189" width="5.4585%" height="15" fill="rgb(212,17,6)" fg:x="25908" fg:w="1519"/><text x="93.3505%" y="1199.50">std::sy..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1,305 samples, 4.69%)</title><rect x="93.8695%" y="1173" width="4.6895%" height="15" fill="rgb(206,212,20)" fg:x="26122" fg:w="1305"/><text x="94.1195%" y="1183.50">std::..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1,305 samples, 4.69%)</title><rect x="93.8695%" y="1157" width="4.6895%" height="15" fill="rgb(229,80,37)" fg:x="26122" fg:w="1305"/><text x="94.1195%" y="1167.50">std::..</text></g><g><title>std::sys::unix::os::page_size (113 samples, 0.41%)</title><rect x="98.1529%" y="1141" width="0.4061%" height="15" fill="rgb(253,8,37)" fg:x="27314" fg:w="113"/><text x="98.4029%" y="1151.50"></text></g><g><title>__sysconf (112 samples, 0.40%)</title><rect x="98.1565%" y="1125" width="0.4025%" height="15" fill="rgb(215,16,43)" fg:x="27315" fg:w="112"/><text x="98.4065%" y="1135.50"></text></g><g><title>__getpagesize (32 samples, 0.11%)</title><rect x="98.4440%" y="1109" width="0.1150%" height="15" fill="rgb(236,219,16)" fg:x="27395" fg:w="32"/><text x="98.6940%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="98.5410%" y="1093" width="0.0180%" height="15" fill="rgb(251,0,3)" fg:x="27422" fg:w="5"/><text x="98.7910%" y="1103.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="98.5446%" y="1077" width="0.0144%" height="15" fill="rgb(207,133,37)" fg:x="27423" fg:w="4"/><text x="98.7946%" y="1087.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="98.5446%" y="1061" width="0.0144%" height="15" fill="rgb(250,143,20)" fg:x="27423" fg:w="4"/><text x="98.7946%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.5482%" y="1045" width="0.0108%" height="15" fill="rgb(242,19,50)" fg:x="27424" fg:w="3"/><text x="98.7982%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.5482%" y="1029" width="0.0108%" height="15" fill="rgb(206,124,43)" fg:x="27424" fg:w="3"/><text x="98.7982%" y="1039.50"></text></g><g><title>__clone (11,915 samples, 42.82%)</title><rect x="55.7784%" y="1253" width="42.8166%" height="15" fill="rgb(229,4,38)" fg:x="15522" fg:w="11915"/><text x="56.0284%" y="1263.50">__clone</text></g><g><title>[unknown] (10 samples, 0.04%)</title><rect x="98.5590%" y="1237" width="0.0359%" height="15" fill="rgb(247,220,45)" fg:x="27427" fg:w="10"/><text x="98.8090%" y="1247.50"></text></g><g><title>async_executor::Runner::new (5 samples, 0.02%)</title><rect x="98.5949%" y="1253" width="0.0180%" height="15" fill="rgb(247,195,0)" fg:x="27437" fg:w="5"/><text x="98.8449%" y="1263.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (4 samples, 0.01%)</title><rect x="98.5985%" y="1237" width="0.0144%" height="15" fill="rgb(252,12,19)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1247.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="98.5985%" y="1221" width="0.0144%" height="15" fill="rgb(222,49,50)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="98.5985%" y="1205" width="0.0144%" height="15" fill="rgb(209,157,28)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="98.5985%" y="1189" width="0.0144%" height="15" fill="rgb(238,174,24)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="98.5985%" y="1173" width="0.0144%" height="15" fill="rgb(224,17,28)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="98.5985%" y="1157" width="0.0144%" height="15" fill="rgb(249,7,29)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="98.5985%" y="1141" width="0.0144%" height="15" fill="rgb(243,178,4)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="98.5985%" y="1125" width="0.0144%" height="15" fill="rgb(246,138,35)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="98.5985%" y="1109" width="0.0144%" height="15" fill="rgb(251,85,18)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1119.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="98.5985%" y="1093" width="0.0144%" height="15" fill="rgb(254,55,9)" fg:x="27438" fg:w="4"/><text x="98.8485%" y="1103.50"></text></g><g><title>async-std/runti (26,515 samples, 95.28%)</title><rect x="3.3456%" y="1269" width="95.2817%" height="15" fill="rgb(248,4,50)" fg:x="931" fg:w="26515"/><text x="3.5956%" y="1279.50">async-std/runti</text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.02%)</title><rect x="98.6273%" y="1237" width="0.0216%" height="15" fill="rgb(215,208,14)" fg:x="27446" fg:w="6"/><text x="98.8773%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.6381%" y="1221" width="0.0108%" height="15" fill="rgb(218,37,18)" fg:x="27449" fg:w="3"/><text x="98.8881%" y="1231.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.6381%" y="1205" width="0.0108%" height="15" fill="rgb(206,104,13)" fg:x="27449" fg:w="3"/><text x="98.8881%" y="1215.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.6381%" y="1189" width="0.0108%" height="15" fill="rgb(248,94,22)" fg:x="27449" fg:w="3"/><text x="98.8881%" y="1199.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.6381%" y="1173" width="0.0108%" height="15" fill="rgb(235,42,46)" fg:x="27449" fg:w="3"/><text x="98.8881%" y="1183.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.6381%" y="1157" width="0.0108%" height="15" fill="rgb(220,228,48)" fg:x="27449" fg:w="3"/><text x="98.8881%" y="1167.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.6381%" y="1141" width="0.0108%" height="15" fill="rgb(216,58,12)" fg:x="27449" fg:w="3"/><text x="98.8881%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="98.6381%" y="1125" width="0.0108%" height="15" fill="rgb(223,97,52)" fg:x="27449" fg:w="3"/><text x="98.8881%" y="1135.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.03%)</title><rect x="98.6273%" y="1253" width="0.0252%" height="15" fill="rgb(208,159,17)" fg:x="27446" fg:w="7"/><text x="98.8773%" y="1263.50"></text></g><g><title>[unknown] (38 samples, 0.14%)</title><rect x="98.6848%" y="1221" width="0.1366%" height="15" fill="rgb(215,172,9)" fg:x="27462" fg:w="38"/><text x="98.9348%" y="1231.50"></text></g><g><title>[unknown] (34 samples, 0.12%)</title><rect x="98.6992%" y="1205" width="0.1222%" height="15" fill="rgb(252,175,30)" fg:x="27466" fg:w="34"/><text x="98.9492%" y="1215.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="98.7063%" y="1189" width="0.1150%" height="15" fill="rgb(209,159,10)" fg:x="27468" fg:w="32"/><text x="98.9563%" y="1199.50"></text></g><g><title>[unknown] (26 samples, 0.09%)</title><rect x="98.7279%" y="1173" width="0.0934%" height="15" fill="rgb(229,73,51)" fg:x="27474" fg:w="26"/><text x="98.9779%" y="1183.50"></text></g><g><title>[unknown] (20 samples, 0.07%)</title><rect x="98.7495%" y="1157" width="0.0719%" height="15" fill="rgb(208,212,43)" fg:x="27480" fg:w="20"/><text x="98.9995%" y="1167.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="98.7926%" y="1141" width="0.0287%" height="15" fill="rgb(254,123,53)" fg:x="27492" fg:w="8"/><text x="99.0426%" y="1151.50"></text></g><g><title>__ctype_init (5 samples, 0.02%)</title><rect x="98.8213%" y="1221" width="0.0180%" height="15" fill="rgb(254,128,49)" fg:x="27500" fg:w="5"/><text x="99.0713%" y="1231.50"></text></g><g><title>prctl (45 samples, 0.16%)</title><rect x="98.8788%" y="1141" width="0.1617%" height="15" fill="rgb(246,16,16)" fg:x="27516" fg:w="45"/><text x="99.1288%" y="1151.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="98.8824%" y="1125" width="0.1581%" height="15" fill="rgb(209,200,1)" fg:x="27517" fg:w="44"/><text x="99.1324%" y="1135.50"></text></g><g><title>[unknown] (44 samples, 0.16%)</title><rect x="98.8824%" y="1109" width="0.1581%" height="15" fill="rgb(235,9,3)" fg:x="27517" fg:w="44"/><text x="99.1324%" y="1119.50"></text></g><g><title>[unknown] (43 samples, 0.15%)</title><rect x="98.8860%" y="1093" width="0.1545%" height="15" fill="rgb(233,121,54)" fg:x="27518" fg:w="43"/><text x="99.1360%" y="1103.50"></text></g><g><title>[unknown] (40 samples, 0.14%)</title><rect x="98.8968%" y="1077" width="0.1437%" height="15" fill="rgb(236,80,25)" fg:x="27521" fg:w="40"/><text x="99.1468%" y="1087.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="98.9255%" y="1061" width="0.1150%" height="15" fill="rgb(220,44,24)" fg:x="27529" fg:w="32"/><text x="99.1755%" y="1071.50"></text></g><g><title>[unknown] (15 samples, 0.05%)</title><rect x="98.9866%" y="1045" width="0.0539%" height="15" fill="rgb(236,225,16)" fg:x="27546" fg:w="15"/><text x="99.2366%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="99.0190%" y="1029" width="0.0216%" height="15" fill="rgb(237,140,0)" fg:x="27555" fg:w="6"/><text x="99.2690%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="99.0298%" y="1013" width="0.0108%" height="15" fill="rgb(243,225,53)" fg:x="27558" fg:w="3"/><text x="99.2798%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (53 samples, 0.19%)</title><rect x="98.8752%" y="1205" width="0.1905%" height="15" fill="rgb(240,140,30)" fg:x="27515" fg:w="53"/><text x="99.1252%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (53 samples, 0.19%)</title><rect x="98.8752%" y="1189" width="0.1905%" height="15" fill="rgb(217,51,16)" fg:x="27515" fg:w="53"/><text x="99.1252%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (53 samples, 0.19%)</title><rect x="98.8752%" y="1173" width="0.1905%" height="15" fill="rgb(245,75,50)" fg:x="27515" fg:w="53"/><text x="99.1252%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (52 samples, 0.19%)</title><rect x="98.8788%" y="1157" width="0.1869%" height="15" fill="rgb(208,174,22)" fg:x="27516" fg:w="52"/><text x="99.1288%" y="1167.50"></text></g><g><title>std::thread::Thread::cname (6 samples, 0.02%)</title><rect x="99.0441%" y="1141" width="0.0216%" height="15" fill="rgb(219,98,50)" fg:x="27562" fg:w="6"/><text x="99.2941%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (6 samples, 0.02%)</title><rect x="99.0441%" y="1125" width="0.0216%" height="15" fill="rgb(243,138,3)" fg:x="27562" fg:w="6"/><text x="99.2941%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.01%)</title><rect x="99.0549%" y="1109" width="0.0108%" height="15" fill="rgb(243,132,26)" fg:x="27565" fg:w="3"/><text x="99.3049%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (6 samples, 0.02%)</title><rect x="99.0693%" y="1173" width="0.0216%" height="15" fill="rgb(250,201,8)" fg:x="27569" fg:w="6"/><text x="99.3193%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="99.0693%" y="1157" width="0.0216%" height="15" fill="rgb(213,91,26)" fg:x="27569" fg:w="6"/><text x="99.3193%" y="1167.50"></text></g><g><title>sigaltstack (16 samples, 0.06%)</title><rect x="99.0908%" y="1173" width="0.0575%" height="15" fill="rgb(229,117,1)" fg:x="27575" fg:w="16"/><text x="99.3408%" y="1183.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="99.1016%" y="1157" width="0.0467%" height="15" fill="rgb(229,24,6)" fg:x="27578" fg:w="13"/><text x="99.3516%" y="1167.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="99.1016%" y="1141" width="0.0467%" height="15" fill="rgb(206,69,11)" fg:x="27578" fg:w="13"/><text x="99.3516%" y="1151.50"></text></g><g><title>[unknown] (13 samples, 0.05%)</title><rect x="99.1016%" y="1125" width="0.0467%" height="15" fill="rgb(234,111,34)" fg:x="27578" fg:w="13"/><text x="99.3516%" y="1135.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="99.1052%" y="1109" width="0.0431%" height="15" fill="rgb(213,187,51)" fg:x="27579" fg:w="12"/><text x="99.3552%" y="1119.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.1340%" y="1093" width="0.0144%" height="15" fill="rgb(207,45,11)" fg:x="27587" fg:w="4"/><text x="99.3840%" y="1103.50"></text></g><g><title>__mmap (65 samples, 0.23%)</title><rect x="99.1483%" y="1141" width="0.2336%" height="15" fill="rgb(225,151,47)" fg:x="27591" fg:w="65"/><text x="99.3983%" y="1151.50"></text></g><g><title>[unknown] (65 samples, 0.23%)</title><rect x="99.1483%" y="1125" width="0.2336%" height="15" fill="rgb(211,226,5)" fg:x="27591" fg:w="65"/><text x="99.3983%" y="1135.50"></text></g><g><title>[unknown] (64 samples, 0.23%)</title><rect x="99.1519%" y="1109" width="0.2300%" height="15" fill="rgb(214,83,52)" fg:x="27592" fg:w="64"/><text x="99.4019%" y="1119.50"></text></g><g><title>[unknown] (64 samples, 0.23%)</title><rect x="99.1519%" y="1093" width="0.2300%" height="15" fill="rgb(229,49,53)" fg:x="27592" fg:w="64"/><text x="99.4019%" y="1103.50"></text></g><g><title>[unknown] (60 samples, 0.22%)</title><rect x="99.1663%" y="1077" width="0.2156%" height="15" fill="rgb(246,8,28)" fg:x="27596" fg:w="60"/><text x="99.4163%" y="1087.50"></text></g><g><title>[unknown] (47 samples, 0.17%)</title><rect x="99.2130%" y="1061" width="0.1689%" height="15" fill="rgb(207,28,41)" fg:x="27609" fg:w="47"/><text x="99.4630%" y="1071.50"></text></g><g><title>[unknown] (31 samples, 0.11%)</title><rect x="99.2705%" y="1045" width="0.1114%" height="15" fill="rgb(254,22,25)" fg:x="27625" fg:w="31"/><text x="99.5205%" y="1055.50"></text></g><g><title>[unknown] (22 samples, 0.08%)</title><rect x="99.3029%" y="1029" width="0.0791%" height="15" fill="rgb(209,120,42)" fg:x="27634" fg:w="22"/><text x="99.5529%" y="1039.50"></text></g><g><title>__mprotect (63 samples, 0.23%)</title><rect x="99.3819%" y="1141" width="0.2264%" height="15" fill="rgb(216,194,18)" fg:x="27656" fg:w="63"/><text x="99.6319%" y="1151.50"></text></g><g><title>[unknown] (63 samples, 0.23%)</title><rect x="99.3819%" y="1125" width="0.2264%" height="15" fill="rgb(213,70,17)" fg:x="27656" fg:w="63"/><text x="99.6319%" y="1135.50"></text></g><g><title>[unknown] (63 samples, 0.23%)</title><rect x="99.3819%" y="1109" width="0.2264%" height="15" fill="rgb(228,66,19)" fg:x="27656" fg:w="63"/><text x="99.6319%" y="1119.50"></text></g><g><title>[unknown] (63 samples, 0.23%)</title><rect x="99.3819%" y="1093" width="0.2264%" height="15" fill="rgb(236,221,54)" fg:x="27656" fg:w="63"/><text x="99.6319%" y="1103.50"></text></g><g><title>[unknown] (63 samples, 0.23%)</title><rect x="99.3819%" y="1077" width="0.2264%" height="15" fill="rgb(207,175,15)" fg:x="27656" fg:w="63"/><text x="99.6319%" y="1087.50"></text></g><g><title>[unknown] (63 samples, 0.23%)</title><rect x="99.3819%" y="1061" width="0.2264%" height="15" fill="rgb(234,76,8)" fg:x="27656" fg:w="63"/><text x="99.6319%" y="1071.50"></text></g><g><title>[unknown] (63 samples, 0.23%)</title><rect x="99.3819%" y="1045" width="0.2264%" height="15" fill="rgb(243,106,0)" fg:x="27656" fg:w="63"/><text x="99.6319%" y="1055.50"></text></g><g><title>[unknown] (32 samples, 0.11%)</title><rect x="99.4933%" y="1029" width="0.1150%" height="15" fill="rgb(208,48,19)" fg:x="27687" fg:w="32"/><text x="99.7433%" y="1039.50"></text></g><g><title>[unknown] (14 samples, 0.05%)</title><rect x="99.5580%" y="1013" width="0.0503%" height="15" fill="rgb(251,50,29)" fg:x="27705" fg:w="14"/><text x="99.8080%" y="1023.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.5760%" y="997" width="0.0323%" height="15" fill="rgb(222,31,49)" fg:x="27710" fg:w="9"/><text x="99.8260%" y="1007.50"></text></g><g><title>[libc.so.6] (272 samples, 0.98%)</title><rect x="98.6632%" y="1237" width="0.9774%" height="15" fill="rgb(232,33,18)" fg:x="27456" fg:w="272"/><text x="98.9132%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (221 samples, 0.79%)</title><rect x="98.8465%" y="1221" width="0.7942%" height="15" fill="rgb(209,1,44)" fg:x="27507" fg:w="221"/><text x="99.0965%" y="1231.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (160 samples, 0.57%)</title><rect x="99.0657%" y="1205" width="0.5750%" height="15" fill="rgb(211,7,1)" fg:x="27568" fg:w="160"/><text x="99.3157%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (160 samples, 0.57%)</title><rect x="99.0657%" y="1189" width="0.5750%" height="15" fill="rgb(224,111,27)" fg:x="27568" fg:w="160"/><text x="99.3157%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (137 samples, 0.49%)</title><rect x="99.1483%" y="1173" width="0.4923%" height="15" fill="rgb(252,195,39)" fg:x="27591" fg:w="137"/><text x="99.3983%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (137 samples, 0.49%)</title><rect x="99.1483%" y="1157" width="0.4923%" height="15" fill="rgb(237,198,5)" fg:x="27591" fg:w="137"/><text x="99.3983%" y="1167.50"></text></g><g><title>std::sys::unix::os::page_size (9 samples, 0.03%)</title><rect x="99.6083%" y="1141" width="0.0323%" height="15" fill="rgb(232,148,1)" fg:x="27719" fg:w="9"/><text x="99.8583%" y="1151.50"></text></g><g><title>__sysconf (9 samples, 0.03%)</title><rect x="99.6083%" y="1125" width="0.0323%" height="15" fill="rgb(249,41,3)" fg:x="27719" fg:w="9"/><text x="99.8583%" y="1135.50"></text></g><g><title>__getpagesize (4 samples, 0.01%)</title><rect x="99.6263%" y="1109" width="0.0144%" height="15" fill="rgb(215,14,33)" fg:x="27724" fg:w="4"/><text x="99.8763%" y="1119.50"></text></g><g><title>router-eval-tes (284 samples, 1.02%)</title><rect x="98.6273%" y="1269" width="1.0206%" height="15" fill="rgb(209,146,24)" fg:x="27446" fg:w="284"/><text x="98.8773%" y="1279.50"></text></g><g><title>__clone (275 samples, 0.99%)</title><rect x="98.6596%" y="1253" width="0.9882%" height="15" fill="rgb(219,51,47)" fg:x="27455" fg:w="275"/><text x="98.9096%" y="1263.50"></text></g><g><title>prctl (5 samples, 0.02%)</title><rect x="99.6478%" y="1141" width="0.0180%" height="15" fill="rgb(234,217,40)" fg:x="27730" fg:w="5"/><text x="99.8978%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="99.6478%" y="1125" width="0.0180%" height="15" fill="rgb(228,34,26)" fg:x="27730" fg:w="5"/><text x="99.8978%" y="1135.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.6514%" y="1109" width="0.0144%" height="15" fill="rgb(224,50,29)" fg:x="27731" fg:w="4"/><text x="99.9014%" y="1119.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.6514%" y="1093" width="0.0144%" height="15" fill="rgb(205,79,51)" fg:x="27731" fg:w="4"/><text x="99.9014%" y="1103.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.6514%" y="1077" width="0.0144%" height="15" fill="rgb(218,136,28)" fg:x="27731" fg:w="4"/><text x="99.9014%" y="1087.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.6514%" y="1061" width="0.0144%" height="15" fill="rgb(220,150,10)" fg:x="27731" fg:w="4"/><text x="99.9014%" y="1071.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.6514%" y="1045" width="0.0144%" height="15" fill="rgb(242,158,47)" fg:x="27731" fg:w="4"/><text x="99.9014%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="99.6550%" y="1029" width="0.0108%" height="15" fill="rgb(209,68,0)" fg:x="27732" fg:w="3"/><text x="99.9050%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="99.6550%" y="1013" width="0.0108%" height="15" fill="rgb(208,13,41)" fg:x="27732" fg:w="3"/><text x="99.9050%" y="1023.50"></text></g><g><title>core::mem::drop (10 samples, 0.04%)</title><rect x="99.6694%" y="1013" width="0.0359%" height="15" fill="rgb(226,201,7)" fg:x="27736" fg:w="10"/><text x="99.9194%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (10 samples, 0.04%)</title><rect x="99.6694%" y="997" width="0.0359%" height="15" fill="rgb(236,103,26)" fg:x="27736" fg:w="10"/><text x="99.9194%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.04%)</title><rect x="99.6694%" y="981" width="0.0359%" height="15" fill="rgb(243,162,8)" fg:x="27736" fg:w="10"/><text x="99.9194%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (10 samples, 0.04%)</title><rect x="99.6694%" y="965" width="0.0359%" height="15" fill="rgb(237,225,11)" fg:x="27736" fg:w="10"/><text x="99.9194%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (10 samples, 0.04%)</title><rect x="99.6694%" y="949" width="0.0359%" height="15" fill="rgb(247,186,32)" fg:x="27736" fg:w="10"/><text x="99.9194%" y="959.50"></text></g><g><title>syscall (10 samples, 0.04%)</title><rect x="99.6694%" y="933" width="0.0359%" height="15" fill="rgb(215,26,28)" fg:x="27736" fg:w="10"/><text x="99.9194%" y="943.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.6730%" y="917" width="0.0323%" height="15" fill="rgb(208,121,6)" fg:x="27737" fg:w="9"/><text x="99.9230%" y="927.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.6730%" y="901" width="0.0323%" height="15" fill="rgb(225,91,3)" fg:x="27737" fg:w="9"/><text x="99.9230%" y="911.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.6730%" y="885" width="0.0323%" height="15" fill="rgb(246,119,36)" fg:x="27737" fg:w="9"/><text x="99.9230%" y="895.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.6730%" y="869" width="0.0323%" height="15" fill="rgb(254,173,2)" fg:x="27737" fg:w="9"/><text x="99.9230%" y="879.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.6730%" y="853" width="0.0323%" height="15" fill="rgb(209,87,54)" fg:x="27737" fg:w="9"/><text x="99.9230%" y="863.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="99.6766%" y="837" width="0.0287%" height="15" fill="rgb(223,216,20)" fg:x="27738" fg:w="8"/><text x="99.9266%" y="847.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.6802%" y="821" width="0.0252%" height="15" fill="rgb(220,31,8)" fg:x="27739" fg:w="7"/><text x="99.9302%" y="831.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.6802%" y="805" width="0.0252%" height="15" fill="rgb(220,185,15)" fg:x="27739" fg:w="7"/><text x="99.9302%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.6910%" y="789" width="0.0144%" height="15" fill="rgb(247,190,50)" fg:x="27742" fg:w="4"/><text x="99.9410%" y="799.50"></text></g><g><title>std::sys::unix::futex::futex_wait (10 samples, 0.04%)</title><rect x="99.7053%" y="933" width="0.0359%" height="15" fill="rgb(239,173,47)" fg:x="27746" fg:w="10"/><text x="99.9553%" y="943.50"></text></g><g><title>syscall (9 samples, 0.03%)</title><rect x="99.7089%" y="917" width="0.0323%" height="15" fill="rgb(218,190,42)" fg:x="27747" fg:w="9"/><text x="99.9589%" y="927.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.7089%" y="901" width="0.0323%" height="15" fill="rgb(251,207,16)" fg:x="27747" fg:w="9"/><text x="99.9589%" y="911.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.7089%" y="885" width="0.0323%" height="15" fill="rgb(222,199,47)" fg:x="27747" fg:w="9"/><text x="99.9589%" y="895.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.7089%" y="869" width="0.0323%" height="15" fill="rgb(245,190,7)" fg:x="27747" fg:w="9"/><text x="99.9589%" y="879.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="99.7089%" y="853" width="0.0323%" height="15" fill="rgb(239,85,38)" fg:x="27747" fg:w="9"/><text x="99.9589%" y="863.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.7161%" y="837" width="0.0252%" height="15" fill="rgb(229,69,51)" fg:x="27749" fg:w="7"/><text x="99.9661%" y="847.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.7161%" y="821" width="0.0252%" height="15" fill="rgb(231,104,51)" fg:x="27749" fg:w="7"/><text x="99.9661%" y="831.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.7161%" y="805" width="0.0252%" height="15" fill="rgb(235,49,4)" fg:x="27749" fg:w="7"/><text x="99.9661%" y="815.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.7161%" y="789" width="0.0252%" height="15" fill="rgb(246,166,20)" fg:x="27749" fg:w="7"/><text x="99.9661%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.7269%" y="773" width="0.0144%" height="15" fill="rgb(230,119,37)" fg:x="27752" fg:w="4"/><text x="99.9769%" y="783.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.7269%" y="757" width="0.0144%" height="15" fill="rgb(234,77,34)" fg:x="27752" fg:w="4"/><text x="99.9769%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.7269%" y="741" width="0.0144%" height="15" fill="rgb(211,222,33)" fg:x="27752" fg:w="4"/><text x="99.9769%" y="751.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.11%)</title><rect x="99.7053%" y="1013" width="0.1078%" height="15" fill="rgb(226,45,42)" fg:x="27746" fg:w="30"/><text x="99.9553%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.11%)</title><rect x="99.7053%" y="997" width="0.1078%" height="15" fill="rgb(215,174,28)" fg:x="27746" fg:w="30"/><text x="99.9553%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.11%)</title><rect x="99.7053%" y="981" width="0.1078%" height="15" fill="rgb(254,173,49)" fg:x="27746" fg:w="30"/><text x="99.9553%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (30 samples, 0.11%)</title><rect x="99.7053%" y="965" width="0.1078%" height="15" fill="rgb(229,191,6)" fg:x="27746" fg:w="30"/><text x="99.9553%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (30 samples, 0.11%)</title><rect x="99.7053%" y="949" width="0.1078%" height="15" fill="rgb(212,145,22)" fg:x="27746" fg:w="30"/><text x="99.9553%" y="959.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (20 samples, 0.07%)</title><rect x="99.7413%" y="933" width="0.0719%" height="15" fill="rgb(226,6,51)" fg:x="27756" fg:w="20"/><text x="99.9913%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (4 samples, 0.01%)</title><rect x="99.7988%" y="917" width="0.0144%" height="15" fill="rgb(227,128,8)" fg:x="27772" fg:w="4"/><text x="100.0488%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="99.7988%" y="901" width="0.0144%" height="15" fill="rgb(205,24,10)" fg:x="27772" fg:w="4"/><text x="100.0488%" y="911.50"></text></g><g><title>std::sync::condvar::Condvar::wait (9 samples, 0.03%)</title><rect x="99.8275%" y="613" width="0.0323%" height="15" fill="rgb(217,147,27)" fg:x="27780" fg:w="9"/><text x="100.0775%" y="623.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (9 samples, 0.03%)</title><rect x="99.8275%" y="597" width="0.0323%" height="15" fill="rgb(250,82,42)" fg:x="27780" fg:w="9"/><text x="100.0775%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (9 samples, 0.03%)</title><rect x="99.8275%" y="581" width="0.0323%" height="15" fill="rgb(248,93,17)" fg:x="27780" fg:w="9"/><text x="100.0775%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (8 samples, 0.03%)</title><rect x="99.8311%" y="565" width="0.0287%" height="15" fill="rgb(254,212,40)" fg:x="27781" fg:w="8"/><text x="100.0811%" y="575.50"></text></g><g><title>std::sys::unix::futex::futex_wait (8 samples, 0.03%)</title><rect x="99.8311%" y="549" width="0.0287%" height="15" fill="rgb(229,209,2)" fg:x="27781" fg:w="8"/><text x="100.0811%" y="559.50"></text></g><g><title>syscall (8 samples, 0.03%)</title><rect x="99.8311%" y="533" width="0.0287%" height="15" fill="rgb(211,50,43)" fg:x="27781" fg:w="8"/><text x="100.0811%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="99.8311%" y="517" width="0.0287%" height="15" fill="rgb(245,196,29)" fg:x="27781" fg:w="8"/><text x="100.0811%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="99.8311%" y="501" width="0.0287%" height="15" fill="rgb(216,132,13)" fg:x="27781" fg:w="8"/><text x="100.0811%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="99.8311%" y="485" width="0.0287%" height="15" fill="rgb(251,108,21)" fg:x="27781" fg:w="8"/><text x="100.0811%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.03%)</title><rect x="99.8311%" y="469" width="0.0287%" height="15" fill="rgb(229,174,54)" fg:x="27781" fg:w="8"/><text x="100.0811%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.8347%" y="453" width="0.0252%" height="15" fill="rgb(211,175,47)" fg:x="27782" fg:w="7"/><text x="100.0847%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.8347%" y="437" width="0.0252%" height="15" fill="rgb(234,5,37)" fg:x="27782" fg:w="7"/><text x="100.0847%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.03%)</title><rect x="99.8347%" y="421" width="0.0252%" height="15" fill="rgb(244,150,43)" fg:x="27782" fg:w="7"/><text x="100.0847%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="99.8419%" y="405" width="0.0180%" height="15" fill="rgb(242,172,38)" fg:x="27784" fg:w="5"/><text x="100.0919%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="99.8419%" y="389" width="0.0180%" height="15" fill="rgb(205,27,8)" fg:x="27784" fg:w="5"/><text x="100.0919%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="99.8491%" y="373" width="0.0108%" height="15" fill="rgb(217,57,3)" fg:x="27786" fg:w="3"/><text x="100.0991%" y="383.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (12 samples, 0.04%)</title><rect x="99.8203%" y="677" width="0.0431%" height="15" fill="rgb(242,21,38)" fg:x="27778" fg:w="12"/><text x="100.0703%" y="687.50"></text></g><g><title>&lt;tokio::runtime::thread_pool::park::Parker as tokio::park::Park&gt;::park (12 samples, 0.04%)</title><rect x="99.8203%" y="661" width="0.0431%" height="15" fill="rgb(209,64,43)" fg:x="27778" fg:w="12"/><text x="100.0703%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::park::Inner::park (12 samples, 0.04%)</title><rect x="99.8203%" y="645" width="0.0431%" height="15" fill="rgb(222,2,46)" fg:x="27778" fg:w="12"/><text x="100.0703%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::park::Inner::park_condvar (10 samples, 0.04%)</title><rect x="99.8275%" y="629" width="0.0359%" height="15" fill="rgb(218,19,44)" fg:x="27780" fg:w="10"/><text x="100.0775%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (15 samples, 0.05%)</title><rect x="99.8203%" y="693" width="0.0539%" height="15" fill="rgb(240,203,42)" fg:x="27778" fg:w="15"/><text x="100.0703%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (3 samples, 0.01%)</title><rect x="99.8634%" y="677" width="0.0108%" height="15" fill="rgb(229,23,45)" fg:x="27790" fg:w="3"/><text x="100.1134%" y="687.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (60 samples, 0.22%)</title><rect x="99.6694%" y="1029" width="0.2156%" height="15" fill="rgb(205,228,51)" fg:x="27736" fg:w="60"/><text x="99.9194%" y="1039.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (20 samples, 0.07%)</title><rect x="99.8131%" y="1013" width="0.0719%" height="15" fill="rgb(239,36,20)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="1023.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (20 samples, 0.07%)</title><rect x="99.8131%" y="997" width="0.0719%" height="15" fill="rgb(248,172,27)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="1007.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (20 samples, 0.07%)</title><rect x="99.8131%" y="981" width="0.0719%" height="15" fill="rgb(244,55,32)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (20 samples, 0.07%)</title><rect x="99.8131%" y="965" width="0.0719%" height="15" fill="rgb(215,97,16)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (20 samples, 0.07%)</title><rect x="99.8131%" y="949" width="0.0719%" height="15" fill="rgb(224,80,29)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (20 samples, 0.07%)</title><rect x="99.8131%" y="933" width="0.0719%" height="15" fill="rgb(216,93,47)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="943.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.07%)</title><rect x="99.8131%" y="917" width="0.0719%" height="15" fill="rgb(238,159,10)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="927.50"></text></g><g><title>std::panicking::try (20 samples, 0.07%)</title><rect x="99.8131%" y="901" width="0.0719%" height="15" fill="rgb(223,98,29)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="911.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.07%)</title><rect x="99.8131%" y="885" width="0.0719%" height="15" fill="rgb(210,176,23)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.07%)</title><rect x="99.8131%" y="869" width="0.0719%" height="15" fill="rgb(242,162,27)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (20 samples, 0.07%)</title><rect x="99.8131%" y="853" width="0.0719%" height="15" fill="rgb(245,109,32)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="863.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (20 samples, 0.07%)</title><rect x="99.8131%" y="837" width="0.0719%" height="15" fill="rgb(248,87,8)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (20 samples, 0.07%)</title><rect x="99.8131%" y="821" width="0.0719%" height="15" fill="rgb(250,160,50)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="831.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (20 samples, 0.07%)</title><rect x="99.8131%" y="805" width="0.0719%" height="15" fill="rgb(246,165,25)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="815.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.07%)</title><rect x="99.8131%" y="789" width="0.0719%" height="15" fill="rgb(249,219,3)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (20 samples, 0.07%)</title><rect x="99.8131%" y="773" width="0.0719%" height="15" fill="rgb(226,66,5)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (20 samples, 0.07%)</title><rect x="99.8131%" y="757" width="0.0719%" height="15" fill="rgb(250,220,43)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="767.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (20 samples, 0.07%)</title><rect x="99.8131%" y="741" width="0.0719%" height="15" fill="rgb(225,111,31)" fg:x="27776" fg:w="20"/><text x="100.0631%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (18 samples, 0.06%)</title><rect x="99.8203%" y="725" width="0.0647%" height="15" fill="rgb(248,106,18)" fg:x="27778" fg:w="18"/><text x="100.0703%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (18 samples, 0.06%)</title><rect x="99.8203%" y="709" width="0.0647%" height="15" fill="rgb(220,226,45)" fg:x="27778" fg:w="18"/><text x="100.0703%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (3 samples, 0.01%)</title><rect x="99.8742%" y="693" width="0.0108%" height="15" fill="rgb(208,58,53)" fg:x="27793" fg:w="3"/><text x="100.1242%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::queue::Steal&lt;T&gt;::steal_into (3 samples, 0.01%)</title><rect x="99.8742%" y="677" width="0.0108%" height="15" fill="rgb(209,133,1)" fg:x="27793" fg:w="3"/><text x="100.1242%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::queue::Steal&lt;T&gt;::steal_into2 (3 samples, 0.01%)</title><rect x="99.8742%" y="661" width="0.0108%" height="15" fill="rgb(228,216,27)" fg:x="27793" fg:w="3"/><text x="100.1242%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.01%)</title><rect x="99.8742%" y="645" width="0.0108%" height="15" fill="rgb(238,155,2)" fg:x="27793" fg:w="3"/><text x="100.1242%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.01%)</title><rect x="99.8742%" y="629" width="0.0108%" height="15" fill="rgb(244,99,37)" fg:x="27793" fg:w="3"/><text x="100.1242%" y="639.50"></text></g><g><title>std::panic::catch_unwind (62 samples, 0.22%)</title><rect x="99.6658%" y="1141" width="0.2228%" height="15" fill="rgb(254,32,3)" fg:x="27735" fg:w="62"/><text x="99.9158%" y="1151.50"></text></g><g><title>std::panicking::try (62 samples, 0.22%)</title><rect x="99.6658%" y="1125" width="0.2228%" height="15" fill="rgb(234,46,50)" fg:x="27735" fg:w="62"/><text x="99.9158%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (62 samples, 0.22%)</title><rect x="99.6658%" y="1109" width="0.2228%" height="15" fill="rgb(232,118,51)" fg:x="27735" fg:w="62"/><text x="99.9158%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (62 samples, 0.22%)</title><rect x="99.6658%" y="1093" width="0.2228%" height="15" fill="rgb(207,24,32)" fg:x="27735" fg:w="62"/><text x="99.9158%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (62 samples, 0.22%)</title><rect x="99.6658%" y="1077" width="0.2228%" height="15" fill="rgb(208,107,43)" fg:x="27735" fg:w="62"/><text x="99.9158%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (62 samples, 0.22%)</title><rect x="99.6658%" y="1061" width="0.2228%" height="15" fill="rgb(231,28,9)" fg:x="27735" fg:w="62"/><text x="99.9158%" y="1071.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (62 samples, 0.22%)</title><rect x="99.6658%" y="1045" width="0.2228%" height="15" fill="rgb(241,204,15)" fg:x="27735" fg:w="62"/><text x="99.9158%" y="1055.50"></text></g><g><title>malloc (19 samples, 0.07%)</title><rect x="99.8886%" y="1109" width="0.0683%" height="15" fill="rgb(214,54,15)" fg:x="27797" fg:w="19"/><text x="100.1386%" y="1119.50"></text></g><g><title>[libc.so.6] (19 samples, 0.07%)</title><rect x="99.8886%" y="1093" width="0.0683%" height="15" fill="rgb(230,12,28)" fg:x="27797" fg:w="19"/><text x="100.1386%" y="1103.50"></text></g><g><title>[libc.so.6] (19 samples, 0.07%)</title><rect x="99.8886%" y="1077" width="0.0683%" height="15" fill="rgb(221,171,5)" fg:x="27797" fg:w="19"/><text x="100.1386%" y="1087.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="99.8922%" y="1061" width="0.0647%" height="15" fill="rgb(207,72,25)" fg:x="27798" fg:w="18"/><text x="100.1422%" y="1071.50"></text></g><g><title>__mmap (18 samples, 0.06%)</title><rect x="99.8922%" y="1045" width="0.0647%" height="15" fill="rgb(249,79,37)" fg:x="27798" fg:w="18"/><text x="100.1422%" y="1055.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="99.8922%" y="1029" width="0.0647%" height="15" fill="rgb(209,98,49)" fg:x="27798" fg:w="18"/><text x="100.1422%" y="1039.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="99.8922%" y="1013" width="0.0647%" height="15" fill="rgb(221,62,13)" fg:x="27798" fg:w="18"/><text x="100.1422%" y="1023.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="99.8922%" y="997" width="0.0647%" height="15" fill="rgb(223,39,6)" fg:x="27798" fg:w="18"/><text x="100.1422%" y="1007.50"></text></g><g><title>[unknown] (18 samples, 0.06%)</title><rect x="99.8922%" y="981" width="0.0647%" height="15" fill="rgb(246,163,20)" fg:x="27798" fg:w="18"/><text x="100.1422%" y="991.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="99.8994%" y="965" width="0.0575%" height="15" fill="rgb(211,111,29)" fg:x="27800" fg:w="16"/><text x="100.1494%" y="975.50"></text></g><g><title>[unknown] (16 samples, 0.06%)</title><rect x="99.8994%" y="949" width="0.0575%" height="15" fill="rgb(243,118,5)" fg:x="27800" fg:w="16"/><text x="100.1494%" y="959.50"></text></g><g><title>[unknown] (12 samples, 0.04%)</title><rect x="99.9138%" y="933" width="0.0431%" height="15" fill="rgb(240,144,52)" fg:x="27804" fg:w="12"/><text x="100.1638%" y="943.50"></text></g><g><title>std::sys::unix::thread::guard::current (26 samples, 0.09%)</title><rect x="99.8886%" y="1141" width="0.0934%" height="15" fill="rgb(244,158,36)" fg:x="27797" fg:w="26"/><text x="100.1386%" y="1151.50"></text></g><g><title>pthread_getattr_np (26 samples, 0.09%)</title><rect x="99.8886%" y="1125" width="0.0934%" height="15" fill="rgb(241,109,37)" fg:x="27797" fg:w="26"/><text x="100.1386%" y="1135.50"></text></g><g><title>pthread_getaffinity_np (5 samples, 0.02%)</title><rect x="99.9641%" y="1109" width="0.0180%" height="15" fill="rgb(213,95,32)" fg:x="27818" fg:w="5"/><text x="100.2141%" y="1119.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.9677%" y="1093" width="0.0144%" height="15" fill="rgb(252,193,9)" fg:x="27819" fg:w="4"/><text x="100.2177%" y="1103.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.9677%" y="1077" width="0.0144%" height="15" fill="rgb(225,213,21)" fg:x="27819" fg:w="4"/><text x="100.2177%" y="1087.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.9677%" y="1061" width="0.0144%" height="15" fill="rgb(220,172,46)" fg:x="27819" fg:w="4"/><text x="100.2177%" y="1071.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="99.9677%" y="1045" width="0.0144%" height="15" fill="rgb(235,75,41)" fg:x="27819" fg:w="4"/><text x="100.2177%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="99.9713%" y="1029" width="0.0108%" height="15" fill="rgb(213,86,9)" fg:x="27820" fg:w="3"/><text x="100.2213%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.01%)</title><rect x="99.9713%" y="1013" width="0.0108%" height="15" fill="rgb(238,127,51)" fg:x="27820" fg:w="3"/><text x="100.2213%" y="1023.50"></text></g><g><title>all (27,828 samples, 100%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(215,2,54)" fg:x="0" fg:w="27828"/><text x="0.2500%" y="1295.50"></text></g><g><title>tokio-runtime-w (98 samples, 0.35%)</title><rect x="99.6478%" y="1269" width="0.3522%" height="15" fill="rgb(245,80,6)" fg:x="27730" fg:w="98"/><text x="99.8978%" y="1279.50"></text></g><g><title>__clone (98 samples, 0.35%)</title><rect x="99.6478%" y="1253" width="0.3522%" height="15" fill="rgb(233,106,42)" fg:x="27730" fg:w="98"/><text x="99.8978%" y="1263.50"></text></g><g><title>[libc.so.6] (98 samples, 0.35%)</title><rect x="99.6478%" y="1237" width="0.3522%" height="15" fill="rgb(244,86,38)" fg:x="27730" fg:w="98"/><text x="99.8978%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (98 samples, 0.35%)</title><rect x="99.6478%" y="1221" width="0.3522%" height="15" fill="rgb(242,167,7)" fg:x="27730" fg:w="98"/><text x="99.8978%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (98 samples, 0.35%)</title><rect x="99.6478%" y="1205" width="0.3522%" height="15" fill="rgb(218,216,3)" fg:x="27730" fg:w="98"/><text x="99.8978%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (98 samples, 0.35%)</title><rect x="99.6478%" y="1189" width="0.3522%" height="15" fill="rgb(206,136,36)" fg:x="27730" fg:w="98"/><text x="99.8978%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (98 samples, 0.35%)</title><rect x="99.6478%" y="1173" width="0.3522%" height="15" fill="rgb(206,206,15)" fg:x="27730" fg:w="98"/><text x="99.8978%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (98 samples, 0.35%)</title><rect x="99.6478%" y="1157" width="0.3522%" height="15" fill="rgb(207,163,34)" fg:x="27730" fg:w="98"/><text x="99.8978%" y="1167.50"></text></g><g><title>std::sys_common::thread_info::set (5 samples, 0.02%)</title><rect x="99.9820%" y="1141" width="0.0180%" height="15" fill="rgb(240,127,22)" fg:x="27823" fg:w="5"/><text x="100.2320%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.01%)</title><rect x="99.9856%" y="1125" width="0.0144%" height="15" fill="rgb(227,49,5)" fg:x="27824" fg:w="4"/><text x="100.2356%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="99.9856%" y="1109" width="0.0144%" height="15" fill="rgb(231,8,6)" fg:x="27824" fg:w="4"/><text x="100.2356%" y="1119.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (4 samples, 0.01%)</title><rect x="99.9856%" y="1093" width="0.0144%" height="15" fill="rgb(223,21,24)" fg:x="27824" fg:w="4"/><text x="100.2356%" y="1103.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (4 samples, 0.01%)</title><rect x="99.9856%" y="1077" width="0.0144%" height="15" fill="rgb(244,44,52)" fg:x="27824" fg:w="4"/><text x="100.2356%" y="1087.50"></text></g><g><title>__cxa_thread_atexit_impl (4 samples, 0.01%)</title><rect x="99.9856%" y="1061" width="0.0144%" height="15" fill="rgb(207,73,28)" fg:x="27824" fg:w="4"/><text x="100.2356%" y="1071.50"></text></g></svg></svg>