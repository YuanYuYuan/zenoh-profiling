<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1318" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1301.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1301.00"> </text><svg id="frames" x="10" width="1180" total_samples="294459"><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (37 samples, 0.01%)</title><rect x="0.0740%" y="933" width="0.0126%" height="15" fill="rgb(227,0,7)" fg:x="218" fg:w="37"/><text x="0.3240%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (30 samples, 0.01%)</title><rect x="0.0893%" y="917" width="0.0102%" height="15" fill="rgb(217,0,24)" fg:x="263" fg:w="30"/><text x="0.3393%" y="927.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (30 samples, 0.01%)</title><rect x="0.0893%" y="901" width="0.0102%" height="15" fill="rgb(221,193,54)" fg:x="263" fg:w="30"/><text x="0.3393%" y="911.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (30 samples, 0.01%)</title><rect x="0.0893%" y="885" width="0.0102%" height="15" fill="rgb(248,212,6)" fg:x="263" fg:w="30"/><text x="0.3393%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (30 samples, 0.01%)</title><rect x="0.0893%" y="869" width="0.0102%" height="15" fill="rgb(208,68,35)" fg:x="263" fg:w="30"/><text x="0.3393%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (30 samples, 0.01%)</title><rect x="0.0893%" y="853" width="0.0102%" height="15" fill="rgb(232,128,0)" fg:x="263" fg:w="30"/><text x="0.3393%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (30 samples, 0.01%)</title><rect x="0.0893%" y="837" width="0.0102%" height="15" fill="rgb(207,160,47)" fg:x="263" fg:w="30"/><text x="0.3393%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.01%)</title><rect x="0.0893%" y="821" width="0.0102%" height="15" fill="rgb(228,23,34)" fg:x="263" fg:w="30"/><text x="0.3393%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.01%)</title><rect x="0.0893%" y="805" width="0.0102%" height="15" fill="rgb(218,30,26)" fg:x="263" fg:w="30"/><text x="0.3393%" y="815.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.01%)</title><rect x="0.0893%" y="789" width="0.0102%" height="15" fill="rgb(220,122,19)" fg:x="263" fg:w="30"/><text x="0.3393%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (110 samples, 0.04%)</title><rect x="0.0676%" y="965" width="0.0374%" height="15" fill="rgb(250,228,42)" fg:x="199" fg:w="110"/><text x="0.3176%" y="975.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (107 samples, 0.04%)</title><rect x="0.0686%" y="949" width="0.0363%" height="15" fill="rgb(240,193,28)" fg:x="202" fg:w="107"/><text x="0.3186%" y="959.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (46 samples, 0.02%)</title><rect x="0.0893%" y="933" width="0.0156%" height="15" fill="rgb(216,20,37)" fg:x="263" fg:w="46"/><text x="0.3393%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (79 samples, 0.03%)</title><rect x="0.1138%" y="933" width="0.0268%" height="15" fill="rgb(206,188,39)" fg:x="335" fg:w="79"/><text x="0.3638%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (78 samples, 0.03%)</title><rect x="0.1141%" y="917" width="0.0265%" height="15" fill="rgb(217,207,13)" fg:x="336" fg:w="78"/><text x="0.3641%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (74 samples, 0.03%)</title><rect x="0.1155%" y="901" width="0.0251%" height="15" fill="rgb(231,73,38)" fg:x="340" fg:w="74"/><text x="0.3655%" y="911.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (74 samples, 0.03%)</title><rect x="0.1155%" y="885" width="0.0251%" height="15" fill="rgb(225,20,46)" fg:x="340" fg:w="74"/><text x="0.3655%" y="895.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (31 samples, 0.01%)</title><rect x="0.1301%" y="869" width="0.0105%" height="15" fill="rgb(210,31,41)" fg:x="383" fg:w="31"/><text x="0.3801%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (135 samples, 0.05%)</title><rect x="0.1111%" y="949" width="0.0458%" height="15" fill="rgb(221,200,47)" fg:x="327" fg:w="135"/><text x="0.3611%" y="959.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (47 samples, 0.02%)</title><rect x="0.1409%" y="933" width="0.0160%" height="15" fill="rgb(226,26,5)" fg:x="415" fg:w="47"/><text x="0.3909%" y="943.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (43 samples, 0.01%)</title><rect x="0.1423%" y="917" width="0.0146%" height="15" fill="rgb(249,33,26)" fg:x="419" fg:w="43"/><text x="0.3923%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (41 samples, 0.01%)</title><rect x="0.1572%" y="917" width="0.0139%" height="15" fill="rgb(235,183,28)" fg:x="463" fg:w="41"/><text x="0.4072%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (41 samples, 0.01%)</title><rect x="0.1572%" y="901" width="0.0139%" height="15" fill="rgb(221,5,38)" fg:x="463" fg:w="41"/><text x="0.4072%" y="911.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (36 samples, 0.01%)</title><rect x="0.1589%" y="885" width="0.0122%" height="15" fill="rgb(247,18,42)" fg:x="468" fg:w="36"/><text x="0.4089%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (63 samples, 0.02%)</title><rect x="0.1729%" y="885" width="0.0214%" height="15" fill="rgb(241,131,45)" fg:x="509" fg:w="63"/><text x="0.4229%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (69 samples, 0.02%)</title><rect x="0.1712%" y="917" width="0.0234%" height="15" fill="rgb(249,31,29)" fg:x="504" fg:w="69"/><text x="0.4212%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (64 samples, 0.02%)</title><rect x="0.1729%" y="901" width="0.0217%" height="15" fill="rgb(225,111,53)" fg:x="509" fg:w="64"/><text x="0.4229%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (114 samples, 0.04%)</title><rect x="0.1569%" y="949" width="0.0387%" height="15" fill="rgb(238,160,17)" fg:x="462" fg:w="114"/><text x="0.4069%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (114 samples, 0.04%)</title><rect x="0.1569%" y="933" width="0.0387%" height="15" fill="rgb(214,148,48)" fg:x="462" fg:w="114"/><text x="0.4069%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (69 samples, 0.02%)</title><rect x="0.1973%" y="949" width="0.0234%" height="15" fill="rgb(232,36,49)" fg:x="581" fg:w="69"/><text x="0.4473%" y="959.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (67 samples, 0.02%)</title><rect x="0.1980%" y="933" width="0.0228%" height="15" fill="rgb(209,103,24)" fg:x="583" fg:w="67"/><text x="0.4480%" y="943.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (355 samples, 0.12%)</title><rect x="0.1094%" y="965" width="0.1206%" height="15" fill="rgb(229,88,8)" fg:x="322" fg:w="355"/><text x="0.3594%" y="975.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (528 samples, 0.18%)</title><rect x="0.0577%" y="981" width="0.1793%" height="15" fill="rgb(213,181,19)" fg:x="170" fg:w="528"/><text x="0.3077%" y="991.50"></text></g><g><title>polling::epoll::Poller::modify (46 samples, 0.02%)</title><rect x="0.2510%" y="949" width="0.0156%" height="15" fill="rgb(254,191,54)" fg:x="739" fg:w="46"/><text x="0.5010%" y="959.50"></text></g><g><title>polling::epoll::Poller::ctl (45 samples, 0.02%)</title><rect x="0.2513%" y="933" width="0.0153%" height="15" fill="rgb(241,83,37)" fg:x="740" fg:w="45"/><text x="0.5013%" y="943.50"></text></g><g><title>epoll_ctl (41 samples, 0.01%)</title><rect x="0.2527%" y="917" width="0.0139%" height="15" fill="rgb(233,36,39)" fg:x="744" fg:w="41"/><text x="0.5027%" y="927.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="0.2533%" y="901" width="0.0132%" height="15" fill="rgb(226,3,54)" fg:x="746" fg:w="39"/><text x="0.5033%" y="911.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="0.2540%" y="885" width="0.0126%" height="15" fill="rgb(245,192,40)" fg:x="748" fg:w="37"/><text x="0.5040%" y="895.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="0.2540%" y="869" width="0.0126%" height="15" fill="rgb(238,167,29)" fg:x="748" fg:w="37"/><text x="0.5040%" y="879.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="0.2550%" y="853" width="0.0115%" height="15" fill="rgb(232,182,51)" fg:x="751" fg:w="34"/><text x="0.5050%" y="863.50"></text></g><g><title>read (40 samples, 0.01%)</title><rect x="0.2666%" y="949" width="0.0136%" height="15" fill="rgb(231,60,39)" fg:x="785" fg:w="40"/><text x="0.5166%" y="959.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="0.2669%" y="933" width="0.0132%" height="15" fill="rgb(208,69,12)" fg:x="786" fg:w="39"/><text x="0.5169%" y="943.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="0.2669%" y="917" width="0.0132%" height="15" fill="rgb(235,93,37)" fg:x="786" fg:w="39"/><text x="0.5169%" y="927.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="0.2673%" y="901" width="0.0129%" height="15" fill="rgb(213,116,39)" fg:x="787" fg:w="38"/><text x="0.5173%" y="911.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="0.2676%" y="885" width="0.0126%" height="15" fill="rgb(222,207,29)" fg:x="788" fg:w="37"/><text x="0.5176%" y="895.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="0.2693%" y="869" width="0.0109%" height="15" fill="rgb(206,96,30)" fg:x="793" fg:w="32"/><text x="0.5193%" y="879.50"></text></g><g><title>polling::epoll::Poller::wait (182 samples, 0.06%)</title><rect x="0.2438%" y="965" width="0.0618%" height="15" fill="rgb(218,138,4)" fg:x="718" fg:w="182"/><text x="0.4938%" y="975.50"></text></g><g><title>syscall (73 samples, 0.02%)</title><rect x="0.2809%" y="949" width="0.0248%" height="15" fill="rgb(250,191,14)" fg:x="827" fg:w="73"/><text x="0.5309%" y="959.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="0.2815%" y="933" width="0.0241%" height="15" fill="rgb(239,60,40)" fg:x="829" fg:w="71"/><text x="0.5315%" y="943.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="0.2826%" y="917" width="0.0231%" height="15" fill="rgb(206,27,48)" fg:x="832" fg:w="68"/><text x="0.5326%" y="927.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="0.2829%" y="901" width="0.0228%" height="15" fill="rgb(225,35,8)" fg:x="833" fg:w="67"/><text x="0.5329%" y="911.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="0.2839%" y="885" width="0.0217%" height="15" fill="rgb(250,213,24)" fg:x="836" fg:w="64"/><text x="0.5339%" y="895.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="0.2866%" y="869" width="0.0190%" height="15" fill="rgb(247,123,22)" fg:x="844" fg:w="56"/><text x="0.5366%" y="879.50"></text></g><g><title>polling::Poller::wait (197 samples, 0.07%)</title><rect x="0.2408%" y="981" width="0.0669%" height="15" fill="rgb(231,138,38)" fg:x="709" fg:w="197"/><text x="0.4908%" y="991.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (50 samples, 0.02%)</title><rect x="0.3090%" y="869" width="0.0170%" height="15" fill="rgb(231,145,46)" fg:x="910" fg:w="50"/><text x="0.5590%" y="879.50"></text></g><g><title>std::panic::catch_unwind (77 samples, 0.03%)</title><rect x="0.3084%" y="981" width="0.0261%" height="15" fill="rgb(251,118,11)" fg:x="908" fg:w="77"/><text x="0.5584%" y="991.50"></text></g><g><title>std::panicking::try (77 samples, 0.03%)</title><rect x="0.3084%" y="965" width="0.0261%" height="15" fill="rgb(217,147,25)" fg:x="908" fg:w="77"/><text x="0.5584%" y="975.50"></text></g><g><title>std::panicking::try::do_call (77 samples, 0.03%)</title><rect x="0.3084%" y="949" width="0.0261%" height="15" fill="rgb(247,81,37)" fg:x="908" fg:w="77"/><text x="0.5584%" y="959.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (77 samples, 0.03%)</title><rect x="0.3084%" y="933" width="0.0261%" height="15" fill="rgb(209,12,38)" fg:x="908" fg:w="77"/><text x="0.5584%" y="943.50"></text></g><g><title>core::task::wake::Waker::wake (77 samples, 0.03%)</title><rect x="0.3084%" y="917" width="0.0261%" height="15" fill="rgb(227,1,9)" fg:x="908" fg:w="77"/><text x="0.5584%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (77 samples, 0.03%)</title><rect x="0.3084%" y="901" width="0.0261%" height="15" fill="rgb(248,47,43)" fg:x="908" fg:w="77"/><text x="0.5584%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (75 samples, 0.03%)</title><rect x="0.3090%" y="885" width="0.0255%" height="15" fill="rgb(221,10,30)" fg:x="910" fg:w="75"/><text x="0.5590%" y="895.50"></text></g><g><title>async_io::reactor::ReactorLock::react (851 samples, 0.29%)</title><rect x="0.0486%" y="997" width="0.2890%" height="15" fill="rgb(210,229,1)" fg:x="143" fg:w="851"/><text x="0.2986%" y="1007.50"></text></g><g><title>[[vdso]] (31 samples, 0.01%)</title><rect x="0.4367%" y="805" width="0.0105%" height="15" fill="rgb(222,148,37)" fg:x="1286" fg:w="31"/><text x="0.6867%" y="815.50"></text></g><g><title>clock_gettime (223 samples, 0.08%)</title><rect x="0.3729%" y="837" width="0.0757%" height="15" fill="rgb(234,67,33)" fg:x="1098" fg:w="223"/><text x="0.6229%" y="847.50"></text></g><g><title>__vdso_clock_gettime (96 samples, 0.03%)</title><rect x="0.4160%" y="821" width="0.0326%" height="15" fill="rgb(247,98,35)" fg:x="1225" fg:w="96"/><text x="0.6660%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (235 samples, 0.08%)</title><rect x="0.3695%" y="885" width="0.0798%" height="15" fill="rgb(247,138,52)" fg:x="1088" fg:w="235"/><text x="0.6195%" y="895.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (233 samples, 0.08%)</title><rect x="0.3702%" y="869" width="0.0791%" height="15" fill="rgb(213,79,30)" fg:x="1090" fg:w="233"/><text x="0.6202%" y="879.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (225 samples, 0.08%)</title><rect x="0.3729%" y="853" width="0.0764%" height="15" fill="rgb(246,177,23)" fg:x="1098" fg:w="225"/><text x="0.6229%" y="863.50"></text></g><g><title>std::sys::unix::futex::futex_wait (2,537 samples, 0.86%)</title><rect x="0.3647%" y="901" width="0.8616%" height="15" fill="rgb(230,62,27)" fg:x="1074" fg:w="2537"/><text x="0.6147%" y="911.50"></text></g><g><title>syscall (2,285 samples, 0.78%)</title><rect x="0.4503%" y="885" width="0.7760%" height="15" fill="rgb(216,154,8)" fg:x="1326" fg:w="2285"/><text x="0.7003%" y="895.50"></text></g><g><title>[unknown] (2,273 samples, 0.77%)</title><rect x="0.4544%" y="869" width="0.7719%" height="15" fill="rgb(244,35,45)" fg:x="1338" fg:w="2273"/><text x="0.7044%" y="879.50"></text></g><g><title>[unknown] (2,236 samples, 0.76%)</title><rect x="0.4670%" y="853" width="0.7594%" height="15" fill="rgb(251,115,12)" fg:x="1375" fg:w="2236"/><text x="0.7170%" y="863.50"></text></g><g><title>[unknown] (2,228 samples, 0.76%)</title><rect x="0.4697%" y="837" width="0.7566%" height="15" fill="rgb(240,54,50)" fg:x="1383" fg:w="2228"/><text x="0.7197%" y="847.50"></text></g><g><title>[unknown] (2,148 samples, 0.73%)</title><rect x="0.4968%" y="821" width="0.7295%" height="15" fill="rgb(233,84,52)" fg:x="1463" fg:w="2148"/><text x="0.7468%" y="831.50"></text></g><g><title>[unknown] (2,093 samples, 0.71%)</title><rect x="0.5155%" y="805" width="0.7108%" height="15" fill="rgb(207,117,47)" fg:x="1518" fg:w="2093"/><text x="0.7655%" y="815.50"></text></g><g><title>[unknown] (2,016 samples, 0.68%)</title><rect x="0.5417%" y="789" width="0.6846%" height="15" fill="rgb(249,43,39)" fg:x="1595" fg:w="2016"/><text x="0.7917%" y="799.50"></text></g><g><title>[unknown] (1,907 samples, 0.65%)</title><rect x="0.5787%" y="773" width="0.6476%" height="15" fill="rgb(209,38,44)" fg:x="1704" fg:w="1907"/><text x="0.8287%" y="783.50"></text></g><g><title>[unknown] (1,423 samples, 0.48%)</title><rect x="0.7431%" y="757" width="0.4833%" height="15" fill="rgb(236,212,23)" fg:x="2188" fg:w="1423"/><text x="0.9931%" y="767.50"></text></g><g><title>[unknown] (894 samples, 0.30%)</title><rect x="0.9227%" y="741" width="0.3036%" height="15" fill="rgb(242,79,21)" fg:x="2717" fg:w="894"/><text x="1.1727%" y="751.50"></text></g><g><title>[unknown] (540 samples, 0.18%)</title><rect x="1.0429%" y="725" width="0.1834%" height="15" fill="rgb(211,96,35)" fg:x="3071" fg:w="540"/><text x="1.2929%" y="735.50"></text></g><g><title>[unknown] (316 samples, 0.11%)</title><rect x="1.1190%" y="709" width="0.1073%" height="15" fill="rgb(253,215,40)" fg:x="3295" fg:w="316"/><text x="1.3690%" y="719.50"></text></g><g><title>[unknown] (181 samples, 0.06%)</title><rect x="1.1648%" y="693" width="0.0615%" height="15" fill="rgb(211,81,21)" fg:x="3430" fg:w="181"/><text x="1.4148%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (2,592 samples, 0.88%)</title><rect x="0.3518%" y="933" width="0.8803%" height="15" fill="rgb(208,190,38)" fg:x="1036" fg:w="2592"/><text x="0.6018%" y="943.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (2,557 samples, 0.87%)</title><rect x="0.3637%" y="917" width="0.8684%" height="15" fill="rgb(235,213,38)" fg:x="1071" fg:w="2557"/><text x="0.6137%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (2,620 samples, 0.89%)</title><rect x="0.3498%" y="965" width="0.8898%" height="15" fill="rgb(237,122,38)" fg:x="1030" fg:w="2620"/><text x="0.5998%" y="975.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (2,620 samples, 0.89%)</title><rect x="0.3498%" y="949" width="0.8898%" height="15" fill="rgb(244,218,35)" fg:x="1030" fg:w="2620"/><text x="0.5998%" y="959.50"></text></g><g><title>std::panic::catch_unwind (3,636 samples, 1.23%)</title><rect x="0.0051%" y="1125" width="1.2348%" height="15" fill="rgb(240,68,47)" fg:x="15" fg:w="3636"/><text x="0.2551%" y="1135.50"></text></g><g><title>std::panicking::try (3,636 samples, 1.23%)</title><rect x="0.0051%" y="1109" width="1.2348%" height="15" fill="rgb(210,16,53)" fg:x="15" fg:w="3636"/><text x="0.2551%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (3,636 samples, 1.23%)</title><rect x="0.0051%" y="1093" width="1.2348%" height="15" fill="rgb(235,124,12)" fg:x="15" fg:w="3636"/><text x="0.2551%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,636 samples, 1.23%)</title><rect x="0.0051%" y="1077" width="1.2348%" height="15" fill="rgb(224,169,11)" fg:x="15" fg:w="3636"/><text x="0.2551%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3,636 samples, 1.23%)</title><rect x="0.0051%" y="1061" width="1.2348%" height="15" fill="rgb(250,166,2)" fg:x="15" fg:w="3636"/><text x="0.2551%" y="1071.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,636 samples, 1.23%)</title><rect x="0.0051%" y="1045" width="1.2348%" height="15" fill="rgb(242,216,29)" fg:x="15" fg:w="3636"/><text x="0.2551%" y="1055.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (3,636 samples, 1.23%)</title><rect x="0.0051%" y="1029" width="1.2348%" height="15" fill="rgb(230,116,27)" fg:x="15" fg:w="3636"/><text x="0.2551%" y="1039.50"></text></g><g><title>async_io::driver::main_loop (3,636 samples, 1.23%)</title><rect x="0.0051%" y="1013" width="1.2348%" height="15" fill="rgb(228,99,48)" fg:x="15" fg:w="3636"/><text x="0.2551%" y="1023.50"></text></g><g><title>parking::Parker::park_timeout (2,644 samples, 0.90%)</title><rect x="0.3420%" y="997" width="0.8979%" height="15" fill="rgb(253,11,6)" fg:x="1007" fg:w="2644"/><text x="0.5920%" y="1007.50"></text></g><g><title>parking::Inner::park (2,638 samples, 0.90%)</title><rect x="0.3440%" y="981" width="0.8959%" height="15" fill="rgb(247,143,39)" fg:x="1013" fg:w="2638"/><text x="0.5940%" y="991.50"></text></g><g><title>async-io (3,649 samples, 1.24%)</title><rect x="0.0010%" y="1253" width="1.2392%" height="15" fill="rgb(236,97,10)" fg:x="3" fg:w="3649"/><text x="0.2510%" y="1263.50"></text></g><g><title>__clone (3,638 samples, 1.24%)</title><rect x="0.0048%" y="1237" width="1.2355%" height="15" fill="rgb(233,208,19)" fg:x="14" fg:w="3638"/><text x="0.2548%" y="1247.50"></text></g><g><title>[libc.so.6] (3,638 samples, 1.24%)</title><rect x="0.0048%" y="1221" width="1.2355%" height="15" fill="rgb(216,164,2)" fg:x="14" fg:w="3638"/><text x="0.2548%" y="1231.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,638 samples, 1.24%)</title><rect x="0.0048%" y="1205" width="1.2355%" height="15" fill="rgb(220,129,5)" fg:x="14" fg:w="3638"/><text x="0.2548%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,638 samples, 1.24%)</title><rect x="0.0048%" y="1189" width="1.2355%" height="15" fill="rgb(242,17,10)" fg:x="14" fg:w="3638"/><text x="0.2548%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,638 samples, 1.24%)</title><rect x="0.0048%" y="1173" width="1.2355%" height="15" fill="rgb(242,107,0)" fg:x="14" fg:w="3638"/><text x="0.2548%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,638 samples, 1.24%)</title><rect x="0.0048%" y="1157" width="1.2355%" height="15" fill="rgb(251,28,31)" fg:x="14" fg:w="3638"/><text x="0.2548%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (3,638 samples, 1.24%)</title><rect x="0.0048%" y="1141" width="1.2355%" height="15" fill="rgb(233,223,10)" fg:x="14" fg:w="3638"/><text x="0.2548%" y="1151.50"></text></g><g><title>parking::Unparker::unpark (35 samples, 0.01%)</title><rect x="1.2450%" y="1125" width="0.0119%" height="15" fill="rgb(215,21,27)" fg:x="3666" fg:w="35"/><text x="1.4950%" y="1135.50"></text></g><g><title>parking::Inner::unpark (35 samples, 0.01%)</title><rect x="1.2450%" y="1109" width="0.0119%" height="15" fill="rgb(232,23,21)" fg:x="3666" fg:w="35"/><text x="1.4950%" y="1119.50"></text></g><g><title>syscall (35 samples, 0.01%)</title><rect x="1.2450%" y="1093" width="0.0119%" height="15" fill="rgb(244,5,23)" fg:x="3666" fg:w="35"/><text x="1.4950%" y="1103.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="1.2450%" y="1077" width="0.0119%" height="15" fill="rgb(226,81,46)" fg:x="3666" fg:w="35"/><text x="1.4950%" y="1087.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="1.2443%" y="1221" width="0.0129%" height="15" fill="rgb(247,70,30)" fg:x="3664" fg:w="38"/><text x="1.4943%" y="1231.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (38 samples, 0.01%)</title><rect x="1.2443%" y="1205" width="0.0129%" height="15" fill="rgb(212,68,19)" fg:x="3664" fg:w="38"/><text x="1.4943%" y="1215.50"></text></g><g><title>async_executor::State::notify (37 samples, 0.01%)</title><rect x="1.2447%" y="1189" width="0.0126%" height="15" fill="rgb(240,187,13)" fg:x="3665" fg:w="37"/><text x="1.4947%" y="1199.50"></text></g><g><title>core::task::wake::Waker::wake (36 samples, 0.01%)</title><rect x="1.2450%" y="1173" width="0.0122%" height="15" fill="rgb(223,113,26)" fg:x="3666" fg:w="36"/><text x="1.4950%" y="1183.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (36 samples, 0.01%)</title><rect x="1.2450%" y="1157" width="0.0122%" height="15" fill="rgb(206,192,2)" fg:x="3666" fg:w="36"/><text x="1.4950%" y="1167.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (36 samples, 0.01%)</title><rect x="1.2450%" y="1141" width="0.0122%" height="15" fill="rgb(241,108,4)" fg:x="3666" fg:w="36"/><text x="1.4950%" y="1151.50"></text></g><g><title>[libc.so.6] (35 samples, 0.01%)</title><rect x="1.2572%" y="1221" width="0.0119%" height="15" fill="rgb(247,173,49)" fg:x="3702" fg:w="35"/><text x="1.5072%" y="1231.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="1.2582%" y="1205" width="0.0109%" height="15" fill="rgb(224,114,35)" fg:x="3705" fg:w="32"/><text x="1.5082%" y="1215.50"></text></g><g><title>async_executor::State::new (34 samples, 0.01%)</title><rect x="1.2871%" y="1109" width="0.0115%" height="15" fill="rgb(245,159,27)" fg:x="3790" fg:w="34"/><text x="1.5371%" y="1119.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (43 samples, 0.01%)</title><rect x="1.2864%" y="1221" width="0.0146%" height="15" fill="rgb(245,172,44)" fg:x="3788" fg:w="43"/><text x="1.5364%" y="1231.50"></text></g><g><title>once_cell::imp::initialize_or_wait (43 samples, 0.01%)</title><rect x="1.2864%" y="1205" width="0.0146%" height="15" fill="rgb(236,23,11)" fg:x="3788" fg:w="43"/><text x="1.5364%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;once_cell::imp::Guard&gt; (43 samples, 0.01%)</title><rect x="1.2864%" y="1189" width="0.0146%" height="15" fill="rgb(205,117,38)" fg:x="3788" fg:w="43"/><text x="1.5364%" y="1199.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (43 samples, 0.01%)</title><rect x="1.2864%" y="1173" width="0.0146%" height="15" fill="rgb(237,72,25)" fg:x="3788" fg:w="43"/><text x="1.5364%" y="1183.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (42 samples, 0.01%)</title><rect x="1.2868%" y="1157" width="0.0143%" height="15" fill="rgb(244,70,9)" fg:x="3789" fg:w="42"/><text x="1.5368%" y="1167.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (42 samples, 0.01%)</title><rect x="1.2868%" y="1141" width="0.0143%" height="15" fill="rgb(217,125,39)" fg:x="3789" fg:w="42"/><text x="1.5368%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (42 samples, 0.01%)</title><rect x="1.2868%" y="1125" width="0.0143%" height="15" fill="rgb(235,36,10)" fg:x="3789" fg:w="42"/><text x="1.5368%" y="1135.50"></text></g><g><title>syscall (87 samples, 0.03%)</title><rect x="1.3160%" y="1221" width="0.0295%" height="15" fill="rgb(251,123,47)" fg:x="3875" fg:w="87"/><text x="1.5660%" y="1231.50"></text></g><g><title>[unknown] (87 samples, 0.03%)</title><rect x="1.3160%" y="1205" width="0.0295%" height="15" fill="rgb(221,13,13)" fg:x="3875" fg:w="87"/><text x="1.5660%" y="1215.50"></text></g><g><title>[anon] (319 samples, 0.11%)</title><rect x="1.2416%" y="1237" width="0.1083%" height="15" fill="rgb(238,131,9)" fg:x="3656" fg:w="319"/><text x="1.4916%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (60 samples, 0.02%)</title><rect x="1.4260%" y="389" width="0.0204%" height="15" fill="rgb(211,50,8)" fg:x="4199" fg:w="60"/><text x="1.6760%" y="399.50"></text></g><g><title>async_lock::mutex::Mutex&lt;T&gt;::lock::{{closure}} (60 samples, 0.02%)</title><rect x="1.4260%" y="373" width="0.0204%" height="15" fill="rgb(245,182,24)" fg:x="4199" fg:w="60"/><text x="1.6760%" y="383.50"></text></g><g><title>core::mem::drop (72 samples, 0.02%)</title><rect x="1.4464%" y="389" width="0.0245%" height="15" fill="rgb(242,14,37)" fg:x="4259" fg:w="72"/><text x="1.6964%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::mutex::MutexGuard&lt;zenoh_collections::stack_buffer::StackBuffer&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;&gt; (72 samples, 0.02%)</title><rect x="1.4464%" y="373" width="0.0245%" height="15" fill="rgb(246,228,12)" fg:x="4259" fg:w="72"/><text x="1.6964%" y="383.50"></text></g><g><title>&lt;async_lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.02%)</title><rect x="1.4464%" y="357" width="0.0245%" height="15" fill="rgb(213,55,15)" fg:x="4259" fg:w="72"/><text x="1.6964%" y="367.50"></text></g><g><title>event_listener::Event::notify (71 samples, 0.02%)</title><rect x="1.4467%" y="341" width="0.0241%" height="15" fill="rgb(209,9,3)" fg:x="4260" fg:w="71"/><text x="1.6967%" y="351.50"></text></g><g><title>event_listener::full_fence (70 samples, 0.02%)</title><rect x="1.4471%" y="325" width="0.0238%" height="15" fill="rgb(230,59,30)" fg:x="4261" fg:w="70"/><text x="1.6971%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (59 samples, 0.02%)</title><rect x="1.4508%" y="309" width="0.0200%" height="15" fill="rgb(209,121,21)" fg:x="4272" fg:w="59"/><text x="1.7008%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.02%)</title><rect x="1.4508%" y="293" width="0.0200%" height="15" fill="rgb(220,109,13)" fg:x="4272" fg:w="59"/><text x="1.7008%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (33 samples, 0.01%)</title><rect x="1.4739%" y="373" width="0.0112%" height="15" fill="rgb(232,18,1)" fg:x="4340" fg:w="33"/><text x="1.7239%" y="383.50"></text></g><g><title>zenoh_collections::stack_buffer::StackBuffer&lt;T&gt;::push (37 samples, 0.01%)</title><rect x="1.4739%" y="389" width="0.0126%" height="15" fill="rgb(215,41,42)" fg:x="4340" fg:w="37"/><text x="1.7239%" y="399.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (220 samples, 0.07%)</title><rect x="1.4134%" y="533" width="0.0747%" height="15" fill="rgb(224,123,36)" fg:x="4162" fg:w="220"/><text x="1.6634%" y="543.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (220 samples, 0.07%)</title><rect x="1.4134%" y="517" width="0.0747%" height="15" fill="rgb(240,125,3)" fg:x="4162" fg:w="220"/><text x="1.6634%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (220 samples, 0.07%)</title><rect x="1.4134%" y="501" width="0.0747%" height="15" fill="rgb(205,98,50)" fg:x="4162" fg:w="220"/><text x="1.6634%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (220 samples, 0.07%)</title><rect x="1.4134%" y="485" width="0.0747%" height="15" fill="rgb(205,185,37)" fg:x="4162" fg:w="220"/><text x="1.6634%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (220 samples, 0.07%)</title><rect x="1.4134%" y="469" width="0.0747%" height="15" fill="rgb(238,207,15)" fg:x="4162" fg:w="220"/><text x="1.6634%" y="479.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (220 samples, 0.07%)</title><rect x="1.4134%" y="453" width="0.0747%" height="15" fill="rgb(213,199,42)" fg:x="4162" fg:w="220"/><text x="1.6634%" y="463.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (220 samples, 0.07%)</title><rect x="1.4134%" y="437" width="0.0747%" height="15" fill="rgb(235,201,11)" fg:x="4162" fg:w="220"/><text x="1.6634%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (220 samples, 0.07%)</title><rect x="1.4134%" y="421" width="0.0747%" height="15" fill="rgb(207,46,11)" fg:x="4162" fg:w="220"/><text x="1.6634%" y="431.50"></text></g><g><title>zenoh_collections::lifo_queue::LifoQueue&lt;T&gt;::push::{{closure}} (219 samples, 0.07%)</title><rect x="1.4138%" y="405" width="0.0744%" height="15" fill="rgb(241,35,35)" fg:x="4163" fg:w="219"/><text x="1.6638%" y="415.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (42 samples, 0.01%)</title><rect x="1.4882%" y="517" width="0.0143%" height="15" fill="rgb(243,32,47)" fg:x="4382" fg:w="42"/><text x="1.7382%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (42 samples, 0.01%)</title><rect x="1.4882%" y="501" width="0.0143%" height="15" fill="rgb(247,202,23)" fg:x="4382" fg:w="42"/><text x="1.7382%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (42 samples, 0.01%)</title><rect x="1.4882%" y="485" width="0.0143%" height="15" fill="rgb(219,102,11)" fg:x="4382" fg:w="42"/><text x="1.7382%" y="495.50"></text></g><g><title>cfree (45 samples, 0.02%)</title><rect x="1.5024%" y="469" width="0.0153%" height="15" fill="rgb(243,110,44)" fg:x="4424" fg:w="45"/><text x="1.7524%" y="479.50"></text></g><g><title>[libc.so.6] (45 samples, 0.02%)</title><rect x="1.5024%" y="453" width="0.0153%" height="15" fill="rgb(222,74,54)" fg:x="4424" fg:w="45"/><text x="1.7524%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (88 samples, 0.03%)</title><rect x="1.5024%" y="485" width="0.0299%" height="15" fill="rgb(216,99,12)" fg:x="4424" fg:w="88"/><text x="1.7524%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (43 samples, 0.01%)</title><rect x="1.5177%" y="469" width="0.0146%" height="15" fill="rgb(226,22,26)" fg:x="4469" fg:w="43"/><text x="1.7677%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (43 samples, 0.01%)</title><rect x="1.5177%" y="453" width="0.0146%" height="15" fill="rgb(217,163,10)" fg:x="4469" fg:w="43"/><text x="1.7677%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (43 samples, 0.01%)</title><rect x="1.5177%" y="437" width="0.0146%" height="15" fill="rgb(213,25,53)" fg:x="4469" fg:w="43"/><text x="1.7677%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (43 samples, 0.01%)</title><rect x="1.5177%" y="421" width="0.0146%" height="15" fill="rgb(252,105,26)" fg:x="4469" fg:w="43"/><text x="1.7677%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (39 samples, 0.01%)</title><rect x="1.5191%" y="405" width="0.0132%" height="15" fill="rgb(220,39,43)" fg:x="4473" fg:w="39"/><text x="1.7691%" y="415.50"></text></g><g><title>alloc::alloc::box_free (39 samples, 0.01%)</title><rect x="1.5191%" y="389" width="0.0132%" height="15" fill="rgb(229,68,48)" fg:x="4473" fg:w="39"/><text x="1.7691%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 0.01%)</title><rect x="1.5191%" y="373" width="0.0132%" height="15" fill="rgb(252,8,32)" fg:x="4473" fg:w="39"/><text x="1.7691%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (39 samples, 0.01%)</title><rect x="1.5191%" y="357" width="0.0132%" height="15" fill="rgb(223,20,43)" fg:x="4473" fg:w="39"/><text x="1.7691%" y="367.50"></text></g><g><title>cfree (39 samples, 0.01%)</title><rect x="1.5191%" y="341" width="0.0132%" height="15" fill="rgb(229,81,49)" fg:x="4473" fg:w="39"/><text x="1.7691%" y="351.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="1.5191%" y="325" width="0.0132%" height="15" fill="rgb(236,28,36)" fg:x="4473" fg:w="39"/><text x="1.7691%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (135 samples, 0.05%)</title><rect x="1.4882%" y="533" width="0.0458%" height="15" fill="rgb(249,185,26)" fg:x="4382" fg:w="135"/><text x="1.7382%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (93 samples, 0.03%)</title><rect x="1.5024%" y="517" width="0.0316%" height="15" fill="rgb(249,174,33)" fg:x="4424" fg:w="93"/><text x="1.7524%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.03%)</title><rect x="1.5024%" y="501" width="0.0316%" height="15" fill="rgb(233,201,37)" fg:x="4424" fg:w="93"/><text x="1.7524%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (365 samples, 0.12%)</title><rect x="1.4134%" y="597" width="0.1240%" height="15" fill="rgb(221,78,26)" fg:x="4162" fg:w="365"/><text x="1.6634%" y="607.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (365 samples, 0.12%)</title><rect x="1.4134%" y="581" width="0.1240%" height="15" fill="rgb(250,127,30)" fg:x="4162" fg:w="365"/><text x="1.6634%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (365 samples, 0.12%)</title><rect x="1.4134%" y="565" width="0.1240%" height="15" fill="rgb(230,49,44)" fg:x="4162" fg:w="365"/><text x="1.6634%" y="575.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (365 samples, 0.12%)</title><rect x="1.4134%" y="549" width="0.1240%" height="15" fill="rgb(229,67,23)" fg:x="4162" fg:w="365"/><text x="1.6634%" y="559.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (377 samples, 0.13%)</title><rect x="1.4134%" y="933" width="0.1280%" height="15" fill="rgb(249,83,47)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (377 samples, 0.13%)</title><rect x="1.4134%" y="917" width="0.1280%" height="15" fill="rgb(215,43,3)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (377 samples, 0.13%)</title><rect x="1.4134%" y="901" width="0.1280%" height="15" fill="rgb(238,154,13)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="911.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (377 samples, 0.13%)</title><rect x="1.4134%" y="885" width="0.1280%" height="15" fill="rgb(219,56,2)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="895.50"></text></g><g><title>async_std::task::block_on::block_on (377 samples, 0.13%)</title><rect x="1.4134%" y="869" width="0.1280%" height="15" fill="rgb(233,0,4)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="879.50"></text></g><g><title>async_std::task::builder::Builder::blocking (377 samples, 0.13%)</title><rect x="1.4134%" y="853" width="0.1280%" height="15" fill="rgb(235,30,7)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (377 samples, 0.13%)</title><rect x="1.4134%" y="837" width="0.1280%" height="15" fill="rgb(250,79,13)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (377 samples, 0.13%)</title><rect x="1.4134%" y="821" width="0.1280%" height="15" fill="rgb(211,146,34)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="831.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (377 samples, 0.13%)</title><rect x="1.4134%" y="805" width="0.1280%" height="15" fill="rgb(228,22,38)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="815.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (377 samples, 0.13%)</title><rect x="1.4134%" y="789" width="0.1280%" height="15" fill="rgb(235,168,5)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (377 samples, 0.13%)</title><rect x="1.4134%" y="773" width="0.1280%" height="15" fill="rgb(221,155,16)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (377 samples, 0.13%)</title><rect x="1.4134%" y="757" width="0.1280%" height="15" fill="rgb(215,215,53)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="767.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (377 samples, 0.13%)</title><rect x="1.4134%" y="741" width="0.1280%" height="15" fill="rgb(223,4,10)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="751.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (377 samples, 0.13%)</title><rect x="1.4134%" y="725" width="0.1280%" height="15" fill="rgb(234,103,6)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="735.50"></text></g><g><title>async_global_executor::executor::block_on (377 samples, 0.13%)</title><rect x="1.4134%" y="709" width="0.1280%" height="15" fill="rgb(227,97,0)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (377 samples, 0.13%)</title><rect x="1.4134%" y="693" width="0.1280%" height="15" fill="rgb(234,150,53)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (377 samples, 0.13%)</title><rect x="1.4134%" y="677" width="0.1280%" height="15" fill="rgb(228,201,54)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="687.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (377 samples, 0.13%)</title><rect x="1.4134%" y="661" width="0.1280%" height="15" fill="rgb(222,22,37)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="671.50"></text></g><g><title>async_global_executor::reactor::block_on (377 samples, 0.13%)</title><rect x="1.4134%" y="645" width="0.1280%" height="15" fill="rgb(237,53,32)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="655.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (377 samples, 0.13%)</title><rect x="1.4134%" y="629" width="0.1280%" height="15" fill="rgb(233,25,53)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="639.50"></text></g><g><title>async_io::driver::block_on (377 samples, 0.13%)</title><rect x="1.4134%" y="613" width="0.1280%" height="15" fill="rgb(210,40,34)" fg:x="4162" fg:w="377"/><text x="1.6634%" y="623.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (381 samples, 0.13%)</title><rect x="1.4134%" y="1013" width="0.1294%" height="15" fill="rgb(241,220,44)" fg:x="4162" fg:w="381"/><text x="1.6634%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (381 samples, 0.13%)</title><rect x="1.4134%" y="997" width="0.1294%" height="15" fill="rgb(235,28,35)" fg:x="4162" fg:w="381"/><text x="1.6634%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (381 samples, 0.13%)</title><rect x="1.4134%" y="981" width="0.1294%" height="15" fill="rgb(210,56,17)" fg:x="4162" fg:w="381"/><text x="1.6634%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (381 samples, 0.13%)</title><rect x="1.4134%" y="965" width="0.1294%" height="15" fill="rgb(224,130,29)" fg:x="4162" fg:w="381"/><text x="1.6634%" y="975.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (381 samples, 0.13%)</title><rect x="1.4134%" y="949" width="0.1294%" height="15" fill="rgb(235,212,8)" fg:x="4162" fg:w="381"/><text x="1.6634%" y="959.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (34 samples, 0.01%)</title><rect x="1.5479%" y="917" width="0.0115%" height="15" fill="rgb(223,33,50)" fg:x="4558" fg:w="34"/><text x="1.7979%" y="927.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (34 samples, 0.01%)</title><rect x="1.5479%" y="901" width="0.0115%" height="15" fill="rgb(219,149,13)" fg:x="4558" fg:w="34"/><text x="1.7979%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (34 samples, 0.01%)</title><rect x="1.5479%" y="885" width="0.0115%" height="15" fill="rgb(250,156,29)" fg:x="4558" fg:w="34"/><text x="1.7979%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (34 samples, 0.01%)</title><rect x="1.5479%" y="869" width="0.0115%" height="15" fill="rgb(216,193,19)" fg:x="4558" fg:w="34"/><text x="1.7979%" y="879.50"></text></g><g><title>[unknown] (181 samples, 0.06%)</title><rect x="1.5652%" y="469" width="0.0615%" height="15" fill="rgb(216,135,14)" fg:x="4609" fg:w="181"/><text x="1.8152%" y="479.50"></text></g><g><title>[unknown] (179 samples, 0.06%)</title><rect x="1.5659%" y="453" width="0.0608%" height="15" fill="rgb(241,47,5)" fg:x="4611" fg:w="179"/><text x="1.8159%" y="463.50"></text></g><g><title>[unknown] (175 samples, 0.06%)</title><rect x="1.5673%" y="437" width="0.0594%" height="15" fill="rgb(233,42,35)" fg:x="4615" fg:w="175"/><text x="1.8173%" y="447.50"></text></g><g><title>[unknown] (174 samples, 0.06%)</title><rect x="1.5676%" y="421" width="0.0591%" height="15" fill="rgb(231,13,6)" fg:x="4616" fg:w="174"/><text x="1.8176%" y="431.50"></text></g><g><title>[unknown] (165 samples, 0.06%)</title><rect x="1.5707%" y="405" width="0.0560%" height="15" fill="rgb(207,181,40)" fg:x="4625" fg:w="165"/><text x="1.8207%" y="415.50"></text></g><g><title>[unknown] (141 samples, 0.05%)</title><rect x="1.5788%" y="389" width="0.0479%" height="15" fill="rgb(254,173,49)" fg:x="4649" fg:w="141"/><text x="1.8288%" y="399.50"></text></g><g><title>[unknown] (120 samples, 0.04%)</title><rect x="1.5860%" y="373" width="0.0408%" height="15" fill="rgb(221,1,38)" fg:x="4670" fg:w="120"/><text x="1.8360%" y="383.50"></text></g><g><title>[unknown] (105 samples, 0.04%)</title><rect x="1.5911%" y="357" width="0.0357%" height="15" fill="rgb(206,124,46)" fg:x="4685" fg:w="105"/><text x="1.8411%" y="367.50"></text></g><g><title>[unknown] (77 samples, 0.03%)</title><rect x="1.6006%" y="341" width="0.0261%" height="15" fill="rgb(249,21,11)" fg:x="4713" fg:w="77"/><text x="1.8506%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (861 samples, 0.29%)</title><rect x="1.4134%" y="1029" width="0.2924%" height="15" fill="rgb(222,201,40)" fg:x="4162" fg:w="861"/><text x="1.6634%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (480 samples, 0.16%)</title><rect x="1.5428%" y="1013" width="0.1630%" height="15" fill="rgb(235,61,29)" fg:x="4543" fg:w="480"/><text x="1.7928%" y="1023.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (480 samples, 0.16%)</title><rect x="1.5428%" y="997" width="0.1630%" height="15" fill="rgb(219,207,3)" fg:x="4543" fg:w="480"/><text x="1.7928%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (480 samples, 0.16%)</title><rect x="1.5428%" y="981" width="0.1630%" height="15" fill="rgb(222,56,46)" fg:x="4543" fg:w="480"/><text x="1.7928%" y="991.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (480 samples, 0.16%)</title><rect x="1.5428%" y="965" width="0.1630%" height="15" fill="rgb(239,76,54)" fg:x="4543" fg:w="480"/><text x="1.7928%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (480 samples, 0.16%)</title><rect x="1.5428%" y="949" width="0.1630%" height="15" fill="rgb(231,124,27)" fg:x="4543" fg:w="480"/><text x="1.7928%" y="959.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (465 samples, 0.16%)</title><rect x="1.5479%" y="933" width="0.1579%" height="15" fill="rgb(249,195,6)" fg:x="4558" fg:w="465"/><text x="1.7979%" y="943.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (431 samples, 0.15%)</title><rect x="1.5595%" y="917" width="0.1464%" height="15" fill="rgb(237,174,47)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="927.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (431 samples, 0.15%)</title><rect x="1.5595%" y="901" width="0.1464%" height="15" fill="rgb(206,201,31)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="911.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (431 samples, 0.15%)</title><rect x="1.5595%" y="885" width="0.1464%" height="15" fill="rgb(231,57,52)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (431 samples, 0.15%)</title><rect x="1.5595%" y="869" width="0.1464%" height="15" fill="rgb(248,177,22)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (431 samples, 0.15%)</title><rect x="1.5595%" y="853" width="0.1464%" height="15" fill="rgb(215,211,37)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (431 samples, 0.15%)</title><rect x="1.5595%" y="837" width="0.1464%" height="15" fill="rgb(241,128,51)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (431 samples, 0.15%)</title><rect x="1.5595%" y="821" width="0.1464%" height="15" fill="rgb(227,165,31)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (431 samples, 0.15%)</title><rect x="1.5595%" y="805" width="0.1464%" height="15" fill="rgb(228,167,24)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (431 samples, 0.15%)</title><rect x="1.5595%" y="789" width="0.1464%" height="15" fill="rgb(228,143,12)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (431 samples, 0.15%)</title><rect x="1.5595%" y="773" width="0.1464%" height="15" fill="rgb(249,149,8)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (431 samples, 0.15%)</title><rect x="1.5595%" y="757" width="0.1464%" height="15" fill="rgb(243,35,44)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (431 samples, 0.15%)</title><rect x="1.5595%" y="741" width="0.1464%" height="15" fill="rgb(246,89,9)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (431 samples, 0.15%)</title><rect x="1.5595%" y="725" width="0.1464%" height="15" fill="rgb(233,213,13)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (431 samples, 0.15%)</title><rect x="1.5595%" y="709" width="0.1464%" height="15" fill="rgb(233,141,41)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="719.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (431 samples, 0.15%)</title><rect x="1.5595%" y="693" width="0.1464%" height="15" fill="rgb(239,167,4)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="703.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (431 samples, 0.15%)</title><rect x="1.5595%" y="677" width="0.1464%" height="15" fill="rgb(209,217,16)" fg:x="4592" fg:w="431"/><text x="1.8095%" y="687.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (428 samples, 0.15%)</title><rect x="1.5605%" y="661" width="0.1454%" height="15" fill="rgb(219,88,35)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (428 samples, 0.15%)</title><rect x="1.5605%" y="645" width="0.1454%" height="15" fill="rgb(220,193,23)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (428 samples, 0.15%)</title><rect x="1.5605%" y="629" width="0.1454%" height="15" fill="rgb(230,90,52)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (428 samples, 0.15%)</title><rect x="1.5605%" y="613" width="0.1454%" height="15" fill="rgb(252,106,19)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (428 samples, 0.15%)</title><rect x="1.5605%" y="597" width="0.1454%" height="15" fill="rgb(206,74,20)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (428 samples, 0.15%)</title><rect x="1.5605%" y="581" width="0.1454%" height="15" fill="rgb(230,138,44)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (428 samples, 0.15%)</title><rect x="1.5605%" y="565" width="0.1454%" height="15" fill="rgb(235,182,43)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (428 samples, 0.15%)</title><rect x="1.5605%" y="549" width="0.1454%" height="15" fill="rgb(242,16,51)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="559.50"></text></g><g><title>alloc::alloc::alloc (428 samples, 0.15%)</title><rect x="1.5605%" y="533" width="0.1454%" height="15" fill="rgb(248,9,4)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="543.50"></text></g><g><title>malloc (428 samples, 0.15%)</title><rect x="1.5605%" y="517" width="0.1454%" height="15" fill="rgb(210,31,22)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="527.50"></text></g><g><title>[libc.so.6] (428 samples, 0.15%)</title><rect x="1.5605%" y="501" width="0.1454%" height="15" fill="rgb(239,54,39)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="511.50"></text></g><g><title>[libc.so.6] (428 samples, 0.15%)</title><rect x="1.5605%" y="485" width="0.1454%" height="15" fill="rgb(230,99,41)" fg:x="4595" fg:w="428"/><text x="1.8105%" y="495.50"></text></g><g><title>__mprotect (231 samples, 0.08%)</title><rect x="1.6274%" y="469" width="0.0784%" height="15" fill="rgb(253,106,12)" fg:x="4792" fg:w="231"/><text x="1.8774%" y="479.50"></text></g><g><title>[unknown] (231 samples, 0.08%)</title><rect x="1.6274%" y="453" width="0.0784%" height="15" fill="rgb(213,46,41)" fg:x="4792" fg:w="231"/><text x="1.8774%" y="463.50"></text></g><g><title>[unknown] (225 samples, 0.08%)</title><rect x="1.6294%" y="437" width="0.0764%" height="15" fill="rgb(215,133,35)" fg:x="4798" fg:w="225"/><text x="1.8794%" y="447.50"></text></g><g><title>[unknown] (222 samples, 0.08%)</title><rect x="1.6304%" y="421" width="0.0754%" height="15" fill="rgb(213,28,5)" fg:x="4801" fg:w="222"/><text x="1.8804%" y="431.50"></text></g><g><title>[unknown] (217 samples, 0.07%)</title><rect x="1.6321%" y="405" width="0.0737%" height="15" fill="rgb(215,77,49)" fg:x="4806" fg:w="217"/><text x="1.8821%" y="415.50"></text></g><g><title>[unknown] (198 samples, 0.07%)</title><rect x="1.6386%" y="389" width="0.0672%" height="15" fill="rgb(248,100,22)" fg:x="4825" fg:w="198"/><text x="1.8886%" y="399.50"></text></g><g><title>[unknown] (167 samples, 0.06%)</title><rect x="1.6491%" y="373" width="0.0567%" height="15" fill="rgb(208,67,9)" fg:x="4856" fg:w="167"/><text x="1.8991%" y="383.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="1.6668%" y="357" width="0.0391%" height="15" fill="rgb(219,133,21)" fg:x="4908" fg:w="115"/><text x="1.9168%" y="367.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (874 samples, 0.30%)</title><rect x="1.4134%" y="1205" width="0.2968%" height="15" fill="rgb(246,46,29)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (874 samples, 0.30%)</title><rect x="1.4134%" y="1189" width="0.2968%" height="15" fill="rgb(246,185,52)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (874 samples, 0.30%)</title><rect x="1.4134%" y="1173" width="0.2968%" height="15" fill="rgb(252,136,11)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (874 samples, 0.30%)</title><rect x="1.4134%" y="1157" width="0.2968%" height="15" fill="rgb(219,138,53)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1167.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (874 samples, 0.30%)</title><rect x="1.4134%" y="1141" width="0.2968%" height="15" fill="rgb(211,51,23)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (874 samples, 0.30%)</title><rect x="1.4134%" y="1125" width="0.2968%" height="15" fill="rgb(247,221,28)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (874 samples, 0.30%)</title><rect x="1.4134%" y="1109" width="0.2968%" height="15" fill="rgb(251,222,45)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (874 samples, 0.30%)</title><rect x="1.4134%" y="1093" width="0.2968%" height="15" fill="rgb(217,162,53)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (874 samples, 0.30%)</title><rect x="1.4134%" y="1077" width="0.2968%" height="15" fill="rgb(229,93,14)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (874 samples, 0.30%)</title><rect x="1.4134%" y="1061" width="0.2968%" height="15" fill="rgb(209,67,49)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (874 samples, 0.30%)</title><rect x="1.4134%" y="1045" width="0.2968%" height="15" fill="rgb(213,87,29)" fg:x="4162" fg:w="874"/><text x="1.6634%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (56 samples, 0.02%)</title><rect x="1.7116%" y="485" width="0.0190%" height="15" fill="rgb(205,151,52)" fg:x="5040" fg:w="56"/><text x="1.9616%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (31 samples, 0.01%)</title><rect x="1.7201%" y="469" width="0.0105%" height="15" fill="rgb(253,215,39)" fg:x="5065" fg:w="31"/><text x="1.9701%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="1.7201%" y="453" width="0.0105%" height="15" fill="rgb(221,220,41)" fg:x="5065" fg:w="31"/><text x="1.9701%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (31 samples, 0.01%)</title><rect x="1.7201%" y="437" width="0.0105%" height="15" fill="rgb(218,133,21)" fg:x="5065" fg:w="31"/><text x="1.9701%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (31 samples, 0.01%)</title><rect x="1.7201%" y="421" width="0.0105%" height="15" fill="rgb(221,193,43)" fg:x="5065" fg:w="31"/><text x="1.9701%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (31 samples, 0.01%)</title><rect x="1.7201%" y="405" width="0.0105%" height="15" fill="rgb(240,128,52)" fg:x="5065" fg:w="31"/><text x="1.9701%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (31 samples, 0.01%)</title><rect x="1.7201%" y="389" width="0.0105%" height="15" fill="rgb(253,114,12)" fg:x="5065" fg:w="31"/><text x="1.9701%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (31 samples, 0.01%)</title><rect x="1.7201%" y="373" width="0.0105%" height="15" fill="rgb(215,223,47)" fg:x="5065" fg:w="31"/><text x="1.9701%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.02%)</title><rect x="1.7109%" y="549" width="0.0221%" height="15" fill="rgb(248,225,23)" fg:x="5038" fg:w="65"/><text x="1.9609%" y="559.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (65 samples, 0.02%)</title><rect x="1.7109%" y="533" width="0.0221%" height="15" fill="rgb(250,108,0)" fg:x="5038" fg:w="65"/><text x="1.9609%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (65 samples, 0.02%)</title><rect x="1.7109%" y="517" width="0.0221%" height="15" fill="rgb(228,208,7)" fg:x="5038" fg:w="65"/><text x="1.9609%" y="527.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (65 samples, 0.02%)</title><rect x="1.7109%" y="501" width="0.0221%" height="15" fill="rgb(244,45,10)" fg:x="5038" fg:w="65"/><text x="1.9609%" y="511.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (77 samples, 0.03%)</title><rect x="1.7109%" y="885" width="0.0261%" height="15" fill="rgb(207,125,25)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (77 samples, 0.03%)</title><rect x="1.7109%" y="869" width="0.0261%" height="15" fill="rgb(210,195,18)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (77 samples, 0.03%)</title><rect x="1.7109%" y="853" width="0.0261%" height="15" fill="rgb(249,80,12)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="863.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.03%)</title><rect x="1.7109%" y="837" width="0.0261%" height="15" fill="rgb(221,65,9)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="847.50"></text></g><g><title>async_std::task::block_on::block_on (77 samples, 0.03%)</title><rect x="1.7109%" y="821" width="0.0261%" height="15" fill="rgb(235,49,36)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="831.50"></text></g><g><title>async_std::task::builder::Builder::blocking (77 samples, 0.03%)</title><rect x="1.7109%" y="805" width="0.0261%" height="15" fill="rgb(225,32,20)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (77 samples, 0.03%)</title><rect x="1.7109%" y="789" width="0.0261%" height="15" fill="rgb(215,141,46)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (77 samples, 0.03%)</title><rect x="1.7109%" y="773" width="0.0261%" height="15" fill="rgb(250,160,47)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="783.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (77 samples, 0.03%)</title><rect x="1.7109%" y="757" width="0.0261%" height="15" fill="rgb(216,222,40)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="767.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (77 samples, 0.03%)</title><rect x="1.7109%" y="741" width="0.0261%" height="15" fill="rgb(234,217,39)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (77 samples, 0.03%)</title><rect x="1.7109%" y="725" width="0.0261%" height="15" fill="rgb(207,178,40)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (77 samples, 0.03%)</title><rect x="1.7109%" y="709" width="0.0261%" height="15" fill="rgb(221,136,13)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (77 samples, 0.03%)</title><rect x="1.7109%" y="693" width="0.0261%" height="15" fill="rgb(249,199,10)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="703.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (77 samples, 0.03%)</title><rect x="1.7109%" y="677" width="0.0261%" height="15" fill="rgb(249,222,13)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="687.50"></text></g><g><title>async_global_executor::executor::block_on (77 samples, 0.03%)</title><rect x="1.7109%" y="661" width="0.0261%" height="15" fill="rgb(244,185,38)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (77 samples, 0.03%)</title><rect x="1.7109%" y="645" width="0.0261%" height="15" fill="rgb(236,202,9)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (77 samples, 0.03%)</title><rect x="1.7109%" y="629" width="0.0261%" height="15" fill="rgb(250,229,37)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="639.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (77 samples, 0.03%)</title><rect x="1.7109%" y="613" width="0.0261%" height="15" fill="rgb(206,174,23)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="623.50"></text></g><g><title>async_global_executor::reactor::block_on (77 samples, 0.03%)</title><rect x="1.7109%" y="597" width="0.0261%" height="15" fill="rgb(211,33,43)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="607.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (77 samples, 0.03%)</title><rect x="1.7109%" y="581" width="0.0261%" height="15" fill="rgb(245,58,50)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="591.50"></text></g><g><title>async_io::driver::block_on (77 samples, 0.03%)</title><rect x="1.7109%" y="565" width="0.0261%" height="15" fill="rgb(244,68,36)" fg:x="5038" fg:w="77"/><text x="1.9609%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (33 samples, 0.01%)</title><rect x="1.7378%" y="725" width="0.0112%" height="15" fill="rgb(232,229,15)" fg:x="5117" fg:w="33"/><text x="1.9878%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (780 samples, 0.26%)</title><rect x="1.7371%" y="805" width="0.2649%" height="15" fill="rgb(254,30,23)" fg:x="5115" fg:w="780"/><text x="1.9871%" y="815.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (780 samples, 0.26%)</title><rect x="1.7371%" y="789" width="0.2649%" height="15" fill="rgb(235,160,14)" fg:x="5115" fg:w="780"/><text x="1.9871%" y="799.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (780 samples, 0.26%)</title><rect x="1.7371%" y="773" width="0.2649%" height="15" fill="rgb(212,155,44)" fg:x="5115" fg:w="780"/><text x="1.9871%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_contended (780 samples, 0.26%)</title><rect x="1.7371%" y="757" width="0.2649%" height="15" fill="rgb(226,2,50)" fg:x="5115" fg:w="780"/><text x="1.9871%" y="767.50"></text></g><g><title>std::sys::unix::futex::futex_wait (780 samples, 0.26%)</title><rect x="1.7371%" y="741" width="0.2649%" height="15" fill="rgb(234,177,6)" fg:x="5115" fg:w="780"/><text x="1.9871%" y="751.50"></text></g><g><title>syscall (737 samples, 0.25%)</title><rect x="1.7517%" y="725" width="0.2503%" height="15" fill="rgb(217,24,9)" fg:x="5158" fg:w="737"/><text x="2.0017%" y="735.50"></text></g><g><title>[unknown] (731 samples, 0.25%)</title><rect x="1.7537%" y="709" width="0.2483%" height="15" fill="rgb(220,13,46)" fg:x="5164" fg:w="731"/><text x="2.0037%" y="719.50"></text></g><g><title>[unknown] (717 samples, 0.24%)</title><rect x="1.7585%" y="693" width="0.2435%" height="15" fill="rgb(239,221,27)" fg:x="5178" fg:w="717"/><text x="2.0085%" y="703.50"></text></g><g><title>[unknown] (714 samples, 0.24%)</title><rect x="1.7595%" y="677" width="0.2425%" height="15" fill="rgb(222,198,25)" fg:x="5181" fg:w="714"/><text x="2.0095%" y="687.50"></text></g><g><title>[unknown] (700 samples, 0.24%)</title><rect x="1.7643%" y="661" width="0.2377%" height="15" fill="rgb(211,99,13)" fg:x="5195" fg:w="700"/><text x="2.0143%" y="671.50"></text></g><g><title>[unknown] (645 samples, 0.22%)</title><rect x="1.7829%" y="645" width="0.2190%" height="15" fill="rgb(232,111,31)" fg:x="5250" fg:w="645"/><text x="2.0329%" y="655.50"></text></g><g><title>[unknown] (588 samples, 0.20%)</title><rect x="1.8023%" y="629" width="0.1997%" height="15" fill="rgb(245,82,37)" fg:x="5307" fg:w="588"/><text x="2.0523%" y="639.50"></text></g><g><title>[unknown] (573 samples, 0.19%)</title><rect x="1.8074%" y="613" width="0.1946%" height="15" fill="rgb(227,149,46)" fg:x="5322" fg:w="573"/><text x="2.0574%" y="623.50"></text></g><g><title>[unknown] (509 samples, 0.17%)</title><rect x="1.8291%" y="597" width="0.1729%" height="15" fill="rgb(218,36,50)" fg:x="5386" fg:w="509"/><text x="2.0791%" y="607.50"></text></g><g><title>[unknown] (385 samples, 0.13%)</title><rect x="1.8712%" y="581" width="0.1307%" height="15" fill="rgb(226,80,48)" fg:x="5510" fg:w="385"/><text x="2.1212%" y="591.50"></text></g><g><title>[unknown] (303 samples, 0.10%)</title><rect x="1.8991%" y="565" width="0.1029%" height="15" fill="rgb(238,224,15)" fg:x="5592" fg:w="303"/><text x="2.1491%" y="575.50"></text></g><g><title>[unknown] (214 samples, 0.07%)</title><rect x="1.9293%" y="549" width="0.0727%" height="15" fill="rgb(241,136,10)" fg:x="5681" fg:w="214"/><text x="2.1793%" y="559.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="1.9650%" y="533" width="0.0370%" height="15" fill="rgb(208,32,45)" fg:x="5786" fg:w="109"/><text x="2.2150%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (858 samples, 0.29%)</title><rect x="1.7109%" y="965" width="0.2914%" height="15" fill="rgb(207,135,9)" fg:x="5038" fg:w="858"/><text x="1.9609%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (858 samples, 0.29%)</title><rect x="1.7109%" y="949" width="0.2914%" height="15" fill="rgb(206,86,44)" fg:x="5038" fg:w="858"/><text x="1.9609%" y="959.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (858 samples, 0.29%)</title><rect x="1.7109%" y="933" width="0.2914%" height="15" fill="rgb(245,177,15)" fg:x="5038" fg:w="858"/><text x="1.9609%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (858 samples, 0.29%)</title><rect x="1.7109%" y="917" width="0.2914%" height="15" fill="rgb(206,64,50)" fg:x="5038" fg:w="858"/><text x="1.9609%" y="927.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (858 samples, 0.29%)</title><rect x="1.7109%" y="901" width="0.2914%" height="15" fill="rgb(234,36,40)" fg:x="5038" fg:w="858"/><text x="1.9609%" y="911.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (781 samples, 0.27%)</title><rect x="1.7371%" y="885" width="0.2652%" height="15" fill="rgb(213,64,8)" fg:x="5115" fg:w="781"/><text x="1.9871%" y="895.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (781 samples, 0.27%)</title><rect x="1.7371%" y="869" width="0.2652%" height="15" fill="rgb(210,75,36)" fg:x="5115" fg:w="781"/><text x="1.9871%" y="879.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (781 samples, 0.27%)</title><rect x="1.7371%" y="853" width="0.2652%" height="15" fill="rgb(229,88,21)" fg:x="5115" fg:w="781"/><text x="1.9871%" y="863.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (781 samples, 0.27%)</title><rect x="1.7371%" y="837" width="0.2652%" height="15" fill="rgb(252,204,47)" fg:x="5115" fg:w="781"/><text x="1.9871%" y="847.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (781 samples, 0.27%)</title><rect x="1.7371%" y="821" width="0.2652%" height="15" fill="rgb(208,77,27)" fg:x="5115" fg:w="781"/><text x="1.9871%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (866 samples, 0.29%)</title><rect x="1.7109%" y="981" width="0.2941%" height="15" fill="rgb(221,76,26)" fg:x="5038" fg:w="866"/><text x="1.9609%" y="991.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (902 samples, 0.31%)</title><rect x="1.7103%" y="1205" width="0.3063%" height="15" fill="rgb(225,139,18)" fg:x="5036" fg:w="902"/><text x="1.9603%" y="1215.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (902 samples, 0.31%)</title><rect x="1.7103%" y="1189" width="0.3063%" height="15" fill="rgb(230,137,11)" fg:x="5036" fg:w="902"/><text x="1.9603%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (902 samples, 0.31%)</title><rect x="1.7103%" y="1173" width="0.3063%" height="15" fill="rgb(212,28,1)" fg:x="5036" fg:w="902"/><text x="1.9603%" y="1183.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (902 samples, 0.31%)</title><rect x="1.7103%" y="1157" width="0.3063%" height="15" fill="rgb(248,164,17)" fg:x="5036" fg:w="902"/><text x="1.9603%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (902 samples, 0.31%)</title><rect x="1.7103%" y="1141" width="0.3063%" height="15" fill="rgb(222,171,42)" fg:x="5036" fg:w="902"/><text x="1.9603%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (900 samples, 0.31%)</title><rect x="1.7109%" y="1125" width="0.3056%" height="15" fill="rgb(243,84,45)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (900 samples, 0.31%)</title><rect x="1.7109%" y="1109" width="0.3056%" height="15" fill="rgb(252,49,23)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1119.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (900 samples, 0.31%)</title><rect x="1.7109%" y="1093" width="0.3056%" height="15" fill="rgb(215,19,7)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1103.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (900 samples, 0.31%)</title><rect x="1.7109%" y="1077" width="0.3056%" height="15" fill="rgb(238,81,41)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (900 samples, 0.31%)</title><rect x="1.7109%" y="1061" width="0.3056%" height="15" fill="rgb(210,199,37)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (900 samples, 0.31%)</title><rect x="1.7109%" y="1045" width="0.3056%" height="15" fill="rgb(244,192,49)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (900 samples, 0.31%)</title><rect x="1.7109%" y="1029" width="0.3056%" height="15" fill="rgb(226,211,11)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1039.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (900 samples, 0.31%)</title><rect x="1.7109%" y="1013" width="0.3056%" height="15" fill="rgb(236,162,54)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (900 samples, 0.31%)</title><rect x="1.7109%" y="997" width="0.3056%" height="15" fill="rgb(220,229,9)" fg:x="5038" fg:w="900"/><text x="1.9609%" y="1007.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="2.0050%" y="981" width="0.0115%" height="15" fill="rgb(250,87,22)" fg:x="5904" fg:w="34"/><text x="2.2550%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="2.0050%" y="965" width="0.0115%" height="15" fill="rgb(239,43,17)" fg:x="5904" fg:w="34"/><text x="2.2550%" y="975.50"></text></g><g><title>&lt;zenoh::queryable::QueryableBuilder as core::future::future::Future&gt;::poll (40 samples, 0.01%)</title><rect x="2.0271%" y="1189" width="0.0136%" height="15" fill="rgb(231,177,25)" fg:x="5969" fg:w="40"/><text x="2.2771%" y="1199.50"></text></g><g><title>&lt;zenoh::queryable::QueryableBuilder as zenoh_sync::Runnable&gt;::run (40 samples, 0.01%)</title><rect x="2.0271%" y="1173" width="0.0136%" height="15" fill="rgb(219,179,1)" fg:x="5969" fg:w="40"/><text x="2.2771%" y="1183.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (40 samples, 0.01%)</title><rect x="2.0271%" y="1157" width="0.0136%" height="15" fill="rgb(238,219,53)" fg:x="5969" fg:w="40"/><text x="2.2771%" y="1167.50"></text></g><g><title>zenoh::net::routing::queries::declare_client_queryable (34 samples, 0.01%)</title><rect x="2.0291%" y="1141" width="0.0115%" height="15" fill="rgb(232,167,36)" fg:x="5975" fg:w="34"/><text x="2.2791%" y="1151.50"></text></g><g><title>async_global_executor::threading::spawn_more_threads::{{closure}} (76 samples, 0.03%)</title><rect x="2.0611%" y="1061" width="0.0258%" height="15" fill="rgb(244,19,51)" fg:x="6069" fg:w="76"/><text x="2.3111%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn (31 samples, 0.01%)</title><rect x="2.0764%" y="1045" width="0.0105%" height="15" fill="rgb(224,6,22)" fg:x="6114" fg:w="31"/><text x="2.3264%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (31 samples, 0.01%)</title><rect x="2.0764%" y="1029" width="0.0105%" height="15" fill="rgb(224,145,5)" fg:x="6114" fg:w="31"/><text x="2.3264%" y="1039.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (31 samples, 0.01%)</title><rect x="2.0764%" y="1013" width="0.0105%" height="15" fill="rgb(234,130,49)" fg:x="6114" fg:w="31"/><text x="2.3264%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (80 samples, 0.03%)</title><rect x="2.0604%" y="1077" width="0.0272%" height="15" fill="rgb(254,6,2)" fg:x="6067" fg:w="80"/><text x="2.3104%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (114 samples, 0.04%)</title><rect x="2.0577%" y="1109" width="0.0387%" height="15" fill="rgb(208,96,46)" fg:x="6059" fg:w="114"/><text x="2.3077%" y="1119.50"></text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}} (110 samples, 0.04%)</title><rect x="2.0590%" y="1093" width="0.0374%" height="15" fill="rgb(239,3,39)" fg:x="6063" fg:w="110"/><text x="2.3090%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (148 samples, 0.05%)</title><rect x="2.0495%" y="1141" width="0.0503%" height="15" fill="rgb(233,210,1)" fg:x="6035" fg:w="148"/><text x="2.2995%" y="1151.50"></text></g><g><title>zenoh::session::Session::new::{{closure}} (132 samples, 0.04%)</title><rect x="2.0550%" y="1125" width="0.0448%" height="15" fill="rgb(244,137,37)" fg:x="6051" fg:w="132"/><text x="2.3050%" y="1135.50"></text></g><g><title>&lt;zenoh_sync::ZPinBoxFuture&lt;T&gt; as core::future::future::Future&gt;::poll (150 samples, 0.05%)</title><rect x="2.0495%" y="1189" width="0.0509%" height="15" fill="rgb(240,136,2)" fg:x="6035" fg:w="150"/><text x="2.2995%" y="1199.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (150 samples, 0.05%)</title><rect x="2.0495%" y="1173" width="0.0509%" height="15" fill="rgb(239,18,37)" fg:x="6035" fg:w="150"/><text x="2.2995%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (150 samples, 0.05%)</title><rect x="2.0495%" y="1157" width="0.0509%" height="15" fill="rgb(218,185,22)" fg:x="6035" fg:w="150"/><text x="2.2995%" y="1167.50"></text></g><g><title>router_eval_test::main::main::{{closure}}::{{closure}}::{{closure}} (262 samples, 0.09%)</title><rect x="2.0237%" y="1205" width="0.0890%" height="15" fill="rgb(225,218,4)" fg:x="5959" fg:w="262"/><text x="2.2737%" y="1215.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (46 samples, 0.02%)</title><rect x="2.1195%" y="901" width="0.0156%" height="15" fill="rgb(230,182,32)" fg:x="6241" fg:w="46"/><text x="2.3695%" y="911.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (73 samples, 0.02%)</title><rect x="2.1130%" y="1013" width="0.0248%" height="15" fill="rgb(242,56,43)" fg:x="6222" fg:w="73"/><text x="2.3630%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::encrypt (73 samples, 0.02%)</title><rect x="2.1130%" y="997" width="0.0248%" height="15" fill="rgb(233,99,24)" fg:x="6222" fg:w="73"/><text x="2.3630%" y="1007.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::raw::EncryptionPrimitive&gt;::raw_encryption_primitive (73 samples, 0.02%)</title><rect x="2.1130%" y="981" width="0.0248%" height="15" fill="rgb(234,209,42)" fg:x="6222" fg:w="73"/><text x="2.3630%" y="991.50"></text></g><g><title>rsa::internals::encrypt (73 samples, 0.02%)</title><rect x="2.1130%" y="965" width="0.0248%" height="15" fill="rgb(227,7,12)" fg:x="6222" fg:w="73"/><text x="2.3630%" y="975.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (73 samples, 0.02%)</title><rect x="2.1130%" y="949" width="0.0248%" height="15" fill="rgb(245,203,43)" fg:x="6222" fg:w="73"/><text x="2.3630%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (73 samples, 0.02%)</title><rect x="2.1130%" y="933" width="0.0248%" height="15" fill="rgb(238,205,33)" fg:x="6222" fg:w="73"/><text x="2.3630%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (71 samples, 0.02%)</title><rect x="2.1137%" y="917" width="0.0241%" height="15" fill="rgb(231,56,7)" fg:x="6224" fg:w="71"/><text x="2.3637%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (114 samples, 0.04%)</title><rect x="2.1776%" y="869" width="0.0387%" height="15" fill="rgb(244,186,29)" fg:x="6412" fg:w="114"/><text x="2.4276%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (61 samples, 0.02%)</title><rect x="2.1956%" y="853" width="0.0207%" height="15" fill="rgb(234,111,31)" fg:x="6465" fg:w="61"/><text x="2.4456%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (34 samples, 0.01%)</title><rect x="2.2193%" y="869" width="0.0115%" height="15" fill="rgb(241,149,10)" fg:x="6535" fg:w="34"/><text x="2.4693%" y="879.50"></text></g><g><title>rsa::internals::decrypt (275 samples, 0.09%)</title><rect x="2.1382%" y="933" width="0.0934%" height="15" fill="rgb(249,206,44)" fg:x="6296" fg:w="275"/><text x="2.3882%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (256 samples, 0.09%)</title><rect x="2.1446%" y="917" width="0.0869%" height="15" fill="rgb(251,153,30)" fg:x="6315" fg:w="256"/><text x="2.3946%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (255 samples, 0.09%)</title><rect x="2.1450%" y="901" width="0.0866%" height="15" fill="rgb(239,152,38)" fg:x="6316" fg:w="255"/><text x="2.3950%" y="911.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (211 samples, 0.07%)</title><rect x="2.1599%" y="885" width="0.0717%" height="15" fill="rgb(249,139,47)" fg:x="6360" fg:w="211"/><text x="2.4099%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (73 samples, 0.02%)</title><rect x="2.2462%" y="869" width="0.0248%" height="15" fill="rgb(244,64,35)" fg:x="6614" fg:w="73"/><text x="2.4962%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (40 samples, 0.01%)</title><rect x="2.2574%" y="853" width="0.0136%" height="15" fill="rgb(216,46,15)" fg:x="6647" fg:w="40"/><text x="2.5074%" y="863.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (114 samples, 0.04%)</title><rect x="2.2383%" y="885" width="0.0387%" height="15" fill="rgb(250,74,19)" fg:x="6591" fg:w="114"/><text x="2.4883%" y="895.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (484 samples, 0.16%)</title><rect x="2.1130%" y="1029" width="0.1644%" height="15" fill="rgb(249,42,33)" fg:x="6222" fg:w="484"/><text x="2.3630%" y="1039.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (411 samples, 0.14%)</title><rect x="2.1378%" y="1013" width="0.1396%" height="15" fill="rgb(242,149,17)" fg:x="6295" fg:w="411"/><text x="2.3878%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::decrypt (411 samples, 0.14%)</title><rect x="2.1378%" y="997" width="0.1396%" height="15" fill="rgb(244,29,21)" fg:x="6295" fg:w="411"/><text x="2.3878%" y="1007.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (411 samples, 0.14%)</title><rect x="2.1378%" y="981" width="0.1396%" height="15" fill="rgb(220,130,37)" fg:x="6295" fg:w="411"/><text x="2.3878%" y="991.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (411 samples, 0.14%)</title><rect x="2.1378%" y="965" width="0.1396%" height="15" fill="rgb(211,67,2)" fg:x="6295" fg:w="411"/><text x="2.3878%" y="975.50"></text></g><g><title>rsa::internals::decrypt_and_check (410 samples, 0.14%)</title><rect x="2.1382%" y="949" width="0.1392%" height="15" fill="rgb(235,68,52)" fg:x="6296" fg:w="410"/><text x="2.3882%" y="959.50"></text></g><g><title>rsa::internals::encrypt (135 samples, 0.05%)</title><rect x="2.2316%" y="933" width="0.0458%" height="15" fill="rgb(246,142,3)" fg:x="6571" fg:w="135"/><text x="2.4816%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (135 samples, 0.05%)</title><rect x="2.2316%" y="917" width="0.0458%" height="15" fill="rgb(241,25,7)" fg:x="6571" fg:w="135"/><text x="2.4816%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (135 samples, 0.05%)</title><rect x="2.2316%" y="901" width="0.0458%" height="15" fill="rgb(242,119,39)" fg:x="6571" fg:w="135"/><text x="2.4816%" y="911.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (489 samples, 0.17%)</title><rect x="2.1127%" y="1077" width="0.1661%" height="15" fill="rgb(241,98,45)" fg:x="6221" fg:w="489"/><text x="2.3627%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (488 samples, 0.17%)</title><rect x="2.1130%" y="1061" width="0.1657%" height="15" fill="rgb(254,28,30)" fg:x="6222" fg:w="488"/><text x="2.3630%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (488 samples, 0.17%)</title><rect x="2.1130%" y="1045" width="0.1657%" height="15" fill="rgb(241,142,54)" fg:x="6222" fg:w="488"/><text x="2.3630%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.01%)</title><rect x="2.3124%" y="853" width="0.0115%" height="15" fill="rgb(222,85,15)" fg:x="6809" fg:w="34"/><text x="2.5624%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.01%)</title><rect x="2.3124%" y="837" width="0.0115%" height="15" fill="rgb(210,85,47)" fg:x="6809" fg:w="34"/><text x="2.5624%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.01%)</title><rect x="2.3124%" y="821" width="0.0115%" height="15" fill="rgb(224,206,25)" fg:x="6809" fg:w="34"/><text x="2.5624%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.01%)</title><rect x="2.3124%" y="805" width="0.0115%" height="15" fill="rgb(243,201,19)" fg:x="6809" fg:w="34"/><text x="2.5624%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (32 samples, 0.01%)</title><rect x="2.3131%" y="789" width="0.0109%" height="15" fill="rgb(236,59,4)" fg:x="6811" fg:w="32"/><text x="2.5631%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.01%)</title><rect x="2.3131%" y="773" width="0.0109%" height="15" fill="rgb(254,179,45)" fg:x="6811" fg:w="32"/><text x="2.5631%" y="783.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="2.3131%" y="757" width="0.0109%" height="15" fill="rgb(226,14,10)" fg:x="6811" fg:w="32"/><text x="2.5631%" y="767.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (56 samples, 0.02%)</title><rect x="2.3052%" y="885" width="0.0190%" height="15" fill="rgb(244,27,41)" fg:x="6788" fg:w="56"/><text x="2.5552%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (55 samples, 0.02%)</title><rect x="2.3056%" y="869" width="0.0187%" height="15" fill="rgb(235,35,32)" fg:x="6789" fg:w="55"/><text x="2.5556%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (67 samples, 0.02%)</title><rect x="2.3035%" y="965" width="0.0228%" height="15" fill="rgb(218,68,31)" fg:x="6783" fg:w="67"/><text x="2.5535%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (63 samples, 0.02%)</title><rect x="2.3049%" y="949" width="0.0214%" height="15" fill="rgb(207,120,37)" fg:x="6787" fg:w="63"/><text x="2.5549%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.02%)</title><rect x="2.3049%" y="933" width="0.0214%" height="15" fill="rgb(227,98,0)" fg:x="6787" fg:w="63"/><text x="2.5549%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.02%)</title><rect x="2.3049%" y="917" width="0.0214%" height="15" fill="rgb(207,7,3)" fg:x="6787" fg:w="63"/><text x="2.5549%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.02%)</title><rect x="2.3049%" y="901" width="0.0214%" height="15" fill="rgb(206,98,19)" fg:x="6787" fg:w="63"/><text x="2.5549%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (93 samples, 0.03%)</title><rect x="2.3008%" y="1013" width="0.0316%" height="15" fill="rgb(217,5,26)" fg:x="6775" fg:w="93"/><text x="2.5508%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (93 samples, 0.03%)</title><rect x="2.3008%" y="997" width="0.0316%" height="15" fill="rgb(235,190,38)" fg:x="6775" fg:w="93"/><text x="2.5508%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (88 samples, 0.03%)</title><rect x="2.3025%" y="981" width="0.0299%" height="15" fill="rgb(247,86,24)" fg:x="6780" fg:w="88"/><text x="2.5525%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (32 samples, 0.01%)</title><rect x="2.3368%" y="965" width="0.0109%" height="15" fill="rgb(205,101,16)" fg:x="6881" fg:w="32"/><text x="2.5868%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (32 samples, 0.01%)</title><rect x="2.3368%" y="949" width="0.0109%" height="15" fill="rgb(246,168,33)" fg:x="6881" fg:w="32"/><text x="2.5868%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.01%)</title><rect x="2.3368%" y="933" width="0.0109%" height="15" fill="rgb(231,114,1)" fg:x="6881" fg:w="32"/><text x="2.5868%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (32 samples, 0.01%)</title><rect x="2.3368%" y="917" width="0.0109%" height="15" fill="rgb(207,184,53)" fg:x="6881" fg:w="32"/><text x="2.5868%" y="927.50"></text></g><g><title>getifaddrs (55 samples, 0.02%)</title><rect x="2.3620%" y="837" width="0.0187%" height="15" fill="rgb(224,95,51)" fg:x="6955" fg:w="55"/><text x="2.6120%" y="847.50"></text></g><g><title>[libc.so.6] (55 samples, 0.02%)</title><rect x="2.3620%" y="821" width="0.0187%" height="15" fill="rgb(212,188,45)" fg:x="6955" fg:w="55"/><text x="2.6120%" y="831.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (95 samples, 0.03%)</title><rect x="2.3508%" y="917" width="0.0323%" height="15" fill="rgb(223,154,38)" fg:x="6922" fg:w="95"/><text x="2.6008%" y="927.50"></text></g><g><title>zenoh_util::net::get_local_addresses (82 samples, 0.03%)</title><rect x="2.3552%" y="901" width="0.0278%" height="15" fill="rgb(251,22,52)" fg:x="6935" fg:w="82"/><text x="2.6052%" y="911.50"></text></g><g><title>pnet_datalink::interfaces (79 samples, 0.03%)</title><rect x="2.3562%" y="885" width="0.0268%" height="15" fill="rgb(229,209,22)" fg:x="6938" fg:w="79"/><text x="2.6062%" y="895.50"></text></g><g><title>pnet_datalink::backend::interfaces (79 samples, 0.03%)</title><rect x="2.3562%" y="869" width="0.0268%" height="15" fill="rgb(234,138,34)" fg:x="6938" fg:w="79"/><text x="2.6062%" y="879.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (78 samples, 0.03%)</title><rect x="2.3565%" y="853" width="0.0265%" height="15" fill="rgb(212,95,11)" fg:x="6939" fg:w="78"/><text x="2.6065%" y="863.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (143 samples, 0.05%)</title><rect x="2.3361%" y="997" width="0.0486%" height="15" fill="rgb(240,179,47)" fg:x="6879" fg:w="143"/><text x="2.5861%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (141 samples, 0.05%)</title><rect x="2.3368%" y="981" width="0.0479%" height="15" fill="rgb(240,163,11)" fg:x="6881" fg:w="141"/><text x="2.5868%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (109 samples, 0.04%)</title><rect x="2.3477%" y="965" width="0.0370%" height="15" fill="rgb(236,37,12)" fg:x="6913" fg:w="109"/><text x="2.5977%" y="975.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (109 samples, 0.04%)</title><rect x="2.3477%" y="949" width="0.0370%" height="15" fill="rgb(232,164,16)" fg:x="6913" fg:w="109"/><text x="2.5977%" y="959.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (108 samples, 0.04%)</title><rect x="2.3480%" y="933" width="0.0367%" height="15" fill="rgb(244,205,15)" fg:x="6914" fg:w="108"/><text x="2.5980%" y="943.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (172 samples, 0.06%)</title><rect x="2.3324%" y="1013" width="0.0584%" height="15" fill="rgb(223,117,47)" fg:x="6868" fg:w="172"/><text x="2.5824%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (332 samples, 0.11%)</title><rect x="2.2788%" y="1029" width="0.1127%" height="15" fill="rgb(244,107,35)" fg:x="6710" fg:w="332"/><text x="2.5288%" y="1039.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (333 samples, 0.11%)</title><rect x="2.2788%" y="1061" width="0.1131%" height="15" fill="rgb(205,140,8)" fg:x="6710" fg:w="333"/><text x="2.5288%" y="1071.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (333 samples, 0.11%)</title><rect x="2.2788%" y="1045" width="0.1131%" height="15" fill="rgb(228,84,46)" fg:x="6710" fg:w="333"/><text x="2.5288%" y="1055.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="2.4204%" y="629" width="0.0207%" height="15" fill="rgb(254,188,9)" fg:x="7127" fg:w="61"/><text x="2.6704%" y="639.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="2.4204%" y="613" width="0.0207%" height="15" fill="rgb(206,112,54)" fg:x="7127" fg:w="61"/><text x="2.6704%" y="623.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="2.4204%" y="597" width="0.0207%" height="15" fill="rgb(216,84,49)" fg:x="7127" fg:w="61"/><text x="2.6704%" y="607.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="2.4204%" y="581" width="0.0207%" height="15" fill="rgb(214,194,35)" fg:x="7127" fg:w="61"/><text x="2.6704%" y="591.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="2.4227%" y="565" width="0.0183%" height="15" fill="rgb(249,28,3)" fg:x="7134" fg:w="54"/><text x="2.6727%" y="575.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="2.4255%" y="549" width="0.0156%" height="15" fill="rgb(222,56,52)" fg:x="7142" fg:w="46"/><text x="2.6755%" y="559.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="2.4272%" y="533" width="0.0139%" height="15" fill="rgb(245,217,50)" fg:x="7147" fg:w="41"/><text x="2.6772%" y="543.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="2.4292%" y="517" width="0.0119%" height="15" fill="rgb(213,201,24)" fg:x="7153" fg:w="35"/><text x="2.6792%" y="527.50"></text></g><g><title>[libc.so.6] (152 samples, 0.05%)</title><rect x="2.4177%" y="645" width="0.0516%" height="15" fill="rgb(248,116,28)" fg:x="7119" fg:w="152"/><text x="2.6677%" y="655.50"></text></g><g><title>__mprotect (80 samples, 0.03%)</title><rect x="2.4421%" y="629" width="0.0272%" height="15" fill="rgb(219,72,43)" fg:x="7191" fg:w="80"/><text x="2.6921%" y="639.50"></text></g><g><title>[unknown] (80 samples, 0.03%)</title><rect x="2.4421%" y="613" width="0.0272%" height="15" fill="rgb(209,138,14)" fg:x="7191" fg:w="80"/><text x="2.6921%" y="623.50"></text></g><g><title>[unknown] (79 samples, 0.03%)</title><rect x="2.4424%" y="597" width="0.0268%" height="15" fill="rgb(222,18,33)" fg:x="7192" fg:w="79"/><text x="2.6924%" y="607.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="2.4428%" y="581" width="0.0265%" height="15" fill="rgb(213,199,7)" fg:x="7193" fg:w="78"/><text x="2.6928%" y="591.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="2.4438%" y="565" width="0.0255%" height="15" fill="rgb(250,110,10)" fg:x="7196" fg:w="75"/><text x="2.6938%" y="575.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="2.4465%" y="549" width="0.0228%" height="15" fill="rgb(248,123,6)" fg:x="7204" fg:w="67"/><text x="2.6965%" y="559.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="2.4503%" y="533" width="0.0190%" height="15" fill="rgb(206,91,31)" fg:x="7215" fg:w="56"/><text x="2.7003%" y="543.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="2.4550%" y="517" width="0.0143%" height="15" fill="rgb(211,154,13)" fg:x="7229" fg:w="42"/><text x="2.7050%" y="527.50"></text></g><g><title>[libc.so.6] (157 samples, 0.05%)</title><rect x="2.4166%" y="661" width="0.0533%" height="15" fill="rgb(225,148,7)" fg:x="7116" fg:w="157"/><text x="2.6666%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (184 samples, 0.06%)</title><rect x="2.4132%" y="805" width="0.0625%" height="15" fill="rgb(220,160,43)" fg:x="7106" fg:w="184"/><text x="2.6632%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (179 samples, 0.06%)</title><rect x="2.4149%" y="789" width="0.0608%" height="15" fill="rgb(213,52,39)" fg:x="7111" fg:w="179"/><text x="2.6649%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (179 samples, 0.06%)</title><rect x="2.4149%" y="773" width="0.0608%" height="15" fill="rgb(243,137,7)" fg:x="7111" fg:w="179"/><text x="2.6649%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (179 samples, 0.06%)</title><rect x="2.4149%" y="757" width="0.0608%" height="15" fill="rgb(230,79,13)" fg:x="7111" fg:w="179"/><text x="2.6649%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (179 samples, 0.06%)</title><rect x="2.4149%" y="741" width="0.0608%" height="15" fill="rgb(247,105,23)" fg:x="7111" fg:w="179"/><text x="2.6649%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (179 samples, 0.06%)</title><rect x="2.4149%" y="725" width="0.0608%" height="15" fill="rgb(223,179,41)" fg:x="7111" fg:w="179"/><text x="2.6649%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (179 samples, 0.06%)</title><rect x="2.4149%" y="709" width="0.0608%" height="15" fill="rgb(218,9,34)" fg:x="7111" fg:w="179"/><text x="2.6649%" y="719.50"></text></g><g><title>alloc::alloc::alloc (179 samples, 0.06%)</title><rect x="2.4149%" y="693" width="0.0608%" height="15" fill="rgb(222,106,8)" fg:x="7111" fg:w="179"/><text x="2.6649%" y="703.50"></text></g><g><title>malloc (179 samples, 0.06%)</title><rect x="2.4149%" y="677" width="0.0608%" height="15" fill="rgb(211,220,0)" fg:x="7111" fg:w="179"/><text x="2.6649%" y="687.50"></text></g><g><title>[unknown] (156 samples, 0.05%)</title><rect x="2.4971%" y="613" width="0.0530%" height="15" fill="rgb(229,52,16)" fg:x="7353" fg:w="156"/><text x="2.7471%" y="623.50"></text></g><g><title>[unknown] (154 samples, 0.05%)</title><rect x="2.4978%" y="597" width="0.0523%" height="15" fill="rgb(212,155,18)" fg:x="7355" fg:w="154"/><text x="2.7478%" y="607.50"></text></g><g><title>[unknown] (152 samples, 0.05%)</title><rect x="2.4985%" y="581" width="0.0516%" height="15" fill="rgb(242,21,14)" fg:x="7357" fg:w="152"/><text x="2.7485%" y="591.50"></text></g><g><title>[unknown] (149 samples, 0.05%)</title><rect x="2.4995%" y="565" width="0.0506%" height="15" fill="rgb(222,19,48)" fg:x="7360" fg:w="149"/><text x="2.7495%" y="575.50"></text></g><g><title>[unknown] (139 samples, 0.05%)</title><rect x="2.5029%" y="549" width="0.0472%" height="15" fill="rgb(232,45,27)" fg:x="7370" fg:w="139"/><text x="2.7529%" y="559.50"></text></g><g><title>[unknown] (120 samples, 0.04%)</title><rect x="2.5093%" y="533" width="0.0408%" height="15" fill="rgb(249,103,42)" fg:x="7389" fg:w="120"/><text x="2.7593%" y="543.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="2.5158%" y="517" width="0.0343%" height="15" fill="rgb(246,81,33)" fg:x="7408" fg:w="101"/><text x="2.7658%" y="527.50"></text></g><g><title>[unknown] (86 samples, 0.03%)</title><rect x="2.5209%" y="501" width="0.0292%" height="15" fill="rgb(252,33,42)" fg:x="7423" fg:w="86"/><text x="2.7709%" y="511.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="2.5260%" y="485" width="0.0241%" height="15" fill="rgb(209,212,41)" fg:x="7438" fg:w="71"/><text x="2.7760%" y="495.50"></text></g><g><title>[libc.so.6] (350 samples, 0.12%)</title><rect x="2.4920%" y="629" width="0.1189%" height="15" fill="rgb(207,154,6)" fg:x="7338" fg:w="350"/><text x="2.7420%" y="639.50"></text></g><g><title>__mprotect (177 samples, 0.06%)</title><rect x="2.5508%" y="613" width="0.0601%" height="15" fill="rgb(223,64,47)" fg:x="7511" fg:w="177"/><text x="2.8008%" y="623.50"></text></g><g><title>[unknown] (177 samples, 0.06%)</title><rect x="2.5508%" y="597" width="0.0601%" height="15" fill="rgb(211,161,38)" fg:x="7511" fg:w="177"/><text x="2.8008%" y="607.50"></text></g><g><title>[unknown] (175 samples, 0.06%)</title><rect x="2.5515%" y="581" width="0.0594%" height="15" fill="rgb(219,138,40)" fg:x="7513" fg:w="175"/><text x="2.8015%" y="591.50"></text></g><g><title>[unknown] (173 samples, 0.06%)</title><rect x="2.5521%" y="565" width="0.0588%" height="15" fill="rgb(241,228,46)" fg:x="7515" fg:w="173"/><text x="2.8021%" y="575.50"></text></g><g><title>[unknown] (167 samples, 0.06%)</title><rect x="2.5542%" y="549" width="0.0567%" height="15" fill="rgb(223,209,38)" fg:x="7521" fg:w="167"/><text x="2.8042%" y="559.50"></text></g><g><title>[unknown] (159 samples, 0.05%)</title><rect x="2.5569%" y="533" width="0.0540%" height="15" fill="rgb(236,164,45)" fg:x="7529" fg:w="159"/><text x="2.8069%" y="543.50"></text></g><g><title>[unknown] (137 samples, 0.05%)</title><rect x="2.5644%" y="517" width="0.0465%" height="15" fill="rgb(231,15,5)" fg:x="7551" fg:w="137"/><text x="2.8144%" y="527.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="2.5803%" y="501" width="0.0306%" height="15" fill="rgb(252,35,15)" fg:x="7598" fg:w="90"/><text x="2.8303%" y="511.50"></text></g><g><title>[libc.so.6] (358 samples, 0.12%)</title><rect x="2.4900%" y="645" width="0.1216%" height="15" fill="rgb(248,181,18)" fg:x="7332" fg:w="358"/><text x="2.7400%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (430 samples, 0.15%)</title><rect x="2.4778%" y="789" width="0.1460%" height="15" fill="rgb(233,39,42)" fg:x="7296" fg:w="430"/><text x="2.7278%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (403 samples, 0.14%)</title><rect x="2.4869%" y="773" width="0.1369%" height="15" fill="rgb(238,110,33)" fg:x="7323" fg:w="403"/><text x="2.7369%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (403 samples, 0.14%)</title><rect x="2.4869%" y="757" width="0.1369%" height="15" fill="rgb(233,195,10)" fg:x="7323" fg:w="403"/><text x="2.7369%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (403 samples, 0.14%)</title><rect x="2.4869%" y="741" width="0.1369%" height="15" fill="rgb(254,105,3)" fg:x="7323" fg:w="403"/><text x="2.7369%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (403 samples, 0.14%)</title><rect x="2.4869%" y="725" width="0.1369%" height="15" fill="rgb(221,225,9)" fg:x="7323" fg:w="403"/><text x="2.7369%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (403 samples, 0.14%)</title><rect x="2.4869%" y="709" width="0.1369%" height="15" fill="rgb(224,227,45)" fg:x="7323" fg:w="403"/><text x="2.7369%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (403 samples, 0.14%)</title><rect x="2.4869%" y="693" width="0.1369%" height="15" fill="rgb(229,198,43)" fg:x="7323" fg:w="403"/><text x="2.7369%" y="703.50"></text></g><g><title>alloc::alloc::alloc (403 samples, 0.14%)</title><rect x="2.4869%" y="677" width="0.1369%" height="15" fill="rgb(206,209,35)" fg:x="7323" fg:w="403"/><text x="2.7369%" y="687.50"></text></g><g><title>malloc (398 samples, 0.14%)</title><rect x="2.4886%" y="661" width="0.1352%" height="15" fill="rgb(245,195,53)" fg:x="7328" fg:w="398"/><text x="2.7386%" y="671.50"></text></g><g><title>__lll_lock_wake_private (35 samples, 0.01%)</title><rect x="2.6119%" y="645" width="0.0119%" height="15" fill="rgb(240,92,26)" fg:x="7691" fg:w="35"/><text x="2.8619%" y="655.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="2.6119%" y="629" width="0.0119%" height="15" fill="rgb(207,40,23)" fg:x="7691" fg:w="35"/><text x="2.8619%" y="639.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="2.6119%" y="613" width="0.0119%" height="15" fill="rgb(223,111,35)" fg:x="7691" fg:w="35"/><text x="2.8619%" y="623.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="2.6119%" y="597" width="0.0119%" height="15" fill="rgb(229,147,28)" fg:x="7691" fg:w="35"/><text x="2.8619%" y="607.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="2.6122%" y="581" width="0.0115%" height="15" fill="rgb(211,29,28)" fg:x="7692" fg:w="34"/><text x="2.8622%" y="591.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="2.6122%" y="565" width="0.0115%" height="15" fill="rgb(228,72,33)" fg:x="7692" fg:w="34"/><text x="2.8622%" y="575.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="2.6133%" y="549" width="0.0105%" height="15" fill="rgb(205,214,31)" fg:x="7695" fg:w="31"/><text x="2.8633%" y="559.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="2.6136%" y="533" width="0.0102%" height="15" fill="rgb(224,111,15)" fg:x="7696" fg:w="30"/><text x="2.8636%" y="543.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="2.6136%" y="517" width="0.0102%" height="15" fill="rgb(253,21,26)" fg:x="7696" fg:w="30"/><text x="2.8636%" y="527.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (685 samples, 0.23%)</title><rect x="2.3966%" y="821" width="0.2326%" height="15" fill="rgb(245,139,43)" fg:x="7057" fg:w="685"/><text x="2.6466%" y="831.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (452 samples, 0.15%)</title><rect x="2.4757%" y="805" width="0.1535%" height="15" fill="rgb(252,170,7)" fg:x="7290" fg:w="452"/><text x="2.7257%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (727 samples, 0.25%)</title><rect x="2.3918%" y="949" width="0.2469%" height="15" fill="rgb(231,118,14)" fg:x="7043" fg:w="727"/><text x="2.6418%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (727 samples, 0.25%)</title><rect x="2.3918%" y="933" width="0.2469%" height="15" fill="rgb(238,83,0)" fg:x="7043" fg:w="727"/><text x="2.6418%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (727 samples, 0.25%)</title><rect x="2.3918%" y="917" width="0.2469%" height="15" fill="rgb(221,39,39)" fg:x="7043" fg:w="727"/><text x="2.6418%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (727 samples, 0.25%)</title><rect x="2.3918%" y="901" width="0.2469%" height="15" fill="rgb(222,119,46)" fg:x="7043" fg:w="727"/><text x="2.6418%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (727 samples, 0.25%)</title><rect x="2.3918%" y="885" width="0.2469%" height="15" fill="rgb(222,165,49)" fg:x="7043" fg:w="727"/><text x="2.6418%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (727 samples, 0.25%)</title><rect x="2.3918%" y="869" width="0.2469%" height="15" fill="rgb(219,113,52)" fg:x="7043" fg:w="727"/><text x="2.6418%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (727 samples, 0.25%)</title><rect x="2.3918%" y="853" width="0.2469%" height="15" fill="rgb(214,7,15)" fg:x="7043" fg:w="727"/><text x="2.6418%" y="863.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (723 samples, 0.25%)</title><rect x="2.3932%" y="837" width="0.2455%" height="15" fill="rgb(235,32,4)" fg:x="7047" fg:w="723"/><text x="2.6432%" y="847.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (1,557 samples, 0.53%)</title><rect x="2.1127%" y="1205" width="0.5288%" height="15" fill="rgb(238,90,54)" fg:x="6221" fg:w="1557"/><text x="2.3627%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,557 samples, 0.53%)</title><rect x="2.1127%" y="1189" width="0.5288%" height="15" fill="rgb(213,208,19)" fg:x="6221" fg:w="1557"/><text x="2.3627%" y="1199.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (1,557 samples, 0.53%)</title><rect x="2.1127%" y="1173" width="0.5288%" height="15" fill="rgb(233,156,4)" fg:x="6221" fg:w="1557"/><text x="2.3627%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,557 samples, 0.53%)</title><rect x="2.1127%" y="1157" width="0.5288%" height="15" fill="rgb(207,194,5)" fg:x="6221" fg:w="1557"/><text x="2.3627%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (1,557 samples, 0.53%)</title><rect x="2.1127%" y="1141" width="0.5288%" height="15" fill="rgb(206,111,30)" fg:x="6221" fg:w="1557"/><text x="2.3627%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,557 samples, 0.53%)</title><rect x="2.1127%" y="1125" width="0.5288%" height="15" fill="rgb(243,70,54)" fg:x="6221" fg:w="1557"/><text x="2.3627%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (1,557 samples, 0.53%)</title><rect x="2.1127%" y="1109" width="0.5288%" height="15" fill="rgb(242,28,8)" fg:x="6221" fg:w="1557"/><text x="2.3627%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,557 samples, 0.53%)</title><rect x="2.1127%" y="1093" width="0.5288%" height="15" fill="rgb(219,106,18)" fg:x="6221" fg:w="1557"/><text x="2.3627%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (1,068 samples, 0.36%)</title><rect x="2.2788%" y="1077" width="0.3627%" height="15" fill="rgb(244,222,10)" fg:x="6710" fg:w="1068"/><text x="2.5288%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (735 samples, 0.25%)</title><rect x="2.3918%" y="1061" width="0.2496%" height="15" fill="rgb(236,179,52)" fg:x="7043" fg:w="735"/><text x="2.6418%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (735 samples, 0.25%)</title><rect x="2.3918%" y="1045" width="0.2496%" height="15" fill="rgb(213,23,39)" fg:x="7043" fg:w="735"/><text x="2.6418%" y="1055.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (735 samples, 0.25%)</title><rect x="2.3918%" y="1029" width="0.2496%" height="15" fill="rgb(238,48,10)" fg:x="7043" fg:w="735"/><text x="2.6418%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (735 samples, 0.25%)</title><rect x="2.3918%" y="1013" width="0.2496%" height="15" fill="rgb(251,196,23)" fg:x="7043" fg:w="735"/><text x="2.6418%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (735 samples, 0.25%)</title><rect x="2.3918%" y="997" width="0.2496%" height="15" fill="rgb(250,152,24)" fg:x="7043" fg:w="735"/><text x="2.6418%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (735 samples, 0.25%)</title><rect x="2.3918%" y="981" width="0.2496%" height="15" fill="rgb(209,150,17)" fg:x="7043" fg:w="735"/><text x="2.6418%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (735 samples, 0.25%)</title><rect x="2.3918%" y="965" width="0.2496%" height="15" fill="rgb(234,202,34)" fg:x="7043" fg:w="735"/><text x="2.6418%" y="975.50"></text></g><g><title>rsa::internals::decrypt (67 samples, 0.02%)</title><rect x="2.6418%" y="933" width="0.0228%" height="15" fill="rgb(253,148,53)" fg:x="7779" fg:w="67"/><text x="2.8918%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (67 samples, 0.02%)</title><rect x="2.6418%" y="917" width="0.0228%" height="15" fill="rgb(218,129,16)" fg:x="7779" fg:w="67"/><text x="2.8918%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (67 samples, 0.02%)</title><rect x="2.6418%" y="901" width="0.0228%" height="15" fill="rgb(216,85,19)" fg:x="7779" fg:w="67"/><text x="2.8918%" y="911.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (54 samples, 0.02%)</title><rect x="2.6462%" y="885" width="0.0183%" height="15" fill="rgb(235,228,7)" fg:x="7792" fg:w="54"/><text x="2.8962%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (36 samples, 0.01%)</title><rect x="2.6656%" y="885" width="0.0122%" height="15" fill="rgb(245,175,0)" fg:x="7849" fg:w="36"/><text x="2.9156%" y="895.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (109 samples, 0.04%)</title><rect x="2.6415%" y="1077" width="0.0370%" height="15" fill="rgb(208,168,36)" fg:x="7778" fg:w="109"/><text x="2.8915%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (109 samples, 0.04%)</title><rect x="2.6415%" y="1061" width="0.0370%" height="15" fill="rgb(246,171,24)" fg:x="7778" fg:w="109"/><text x="2.8915%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (109 samples, 0.04%)</title><rect x="2.6415%" y="1045" width="0.0370%" height="15" fill="rgb(215,142,24)" fg:x="7778" fg:w="109"/><text x="2.8915%" y="1055.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (109 samples, 0.04%)</title><rect x="2.6415%" y="1029" width="0.0370%" height="15" fill="rgb(250,187,7)" fg:x="7778" fg:w="109"/><text x="2.8915%" y="1039.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (108 samples, 0.04%)</title><rect x="2.6418%" y="1013" width="0.0367%" height="15" fill="rgb(228,66,33)" fg:x="7779" fg:w="108"/><text x="2.8918%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::decrypt (108 samples, 0.04%)</title><rect x="2.6418%" y="997" width="0.0367%" height="15" fill="rgb(234,215,21)" fg:x="7779" fg:w="108"/><text x="2.8918%" y="1007.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (108 samples, 0.04%)</title><rect x="2.6418%" y="981" width="0.0367%" height="15" fill="rgb(222,191,20)" fg:x="7779" fg:w="108"/><text x="2.8918%" y="991.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (108 samples, 0.04%)</title><rect x="2.6418%" y="965" width="0.0367%" height="15" fill="rgb(245,79,54)" fg:x="7779" fg:w="108"/><text x="2.8918%" y="975.50"></text></g><g><title>rsa::internals::decrypt_and_check (108 samples, 0.04%)</title><rect x="2.6418%" y="949" width="0.0367%" height="15" fill="rgb(240,10,37)" fg:x="7779" fg:w="108"/><text x="2.8918%" y="959.50"></text></g><g><title>rsa::internals::encrypt (41 samples, 0.01%)</title><rect x="2.6645%" y="933" width="0.0139%" height="15" fill="rgb(214,192,32)" fg:x="7846" fg:w="41"/><text x="2.9145%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (41 samples, 0.01%)</title><rect x="2.6645%" y="917" width="0.0139%" height="15" fill="rgb(209,36,54)" fg:x="7846" fg:w="41"/><text x="2.9145%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (41 samples, 0.01%)</title><rect x="2.6645%" y="901" width="0.0139%" height="15" fill="rgb(220,10,11)" fg:x="7846" fg:w="41"/><text x="2.9145%" y="911.50"></text></g><g><title>getifaddrs (54 samples, 0.02%)</title><rect x="2.6887%" y="837" width="0.0183%" height="15" fill="rgb(221,106,17)" fg:x="7917" fg:w="54"/><text x="2.9387%" y="847.50"></text></g><g><title>[libc.so.6] (54 samples, 0.02%)</title><rect x="2.6887%" y="821" width="0.0183%" height="15" fill="rgb(251,142,44)" fg:x="7917" fg:w="54"/><text x="2.9387%" y="831.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (84 samples, 0.03%)</title><rect x="2.6812%" y="917" width="0.0285%" height="15" fill="rgb(238,13,15)" fg:x="7895" fg:w="84"/><text x="2.9312%" y="927.50"></text></g><g><title>zenoh_util::net::get_local_addresses (75 samples, 0.03%)</title><rect x="2.6842%" y="901" width="0.0255%" height="15" fill="rgb(208,107,27)" fg:x="7904" fg:w="75"/><text x="2.9342%" y="911.50"></text></g><g><title>pnet_datalink::interfaces (74 samples, 0.03%)</title><rect x="2.6846%" y="885" width="0.0251%" height="15" fill="rgb(205,136,37)" fg:x="7905" fg:w="74"/><text x="2.9346%" y="895.50"></text></g><g><title>pnet_datalink::backend::interfaces (74 samples, 0.03%)</title><rect x="2.6846%" y="869" width="0.0251%" height="15" fill="rgb(250,205,27)" fg:x="7905" fg:w="74"/><text x="2.9346%" y="879.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (74 samples, 0.03%)</title><rect x="2.6846%" y="853" width="0.0251%" height="15" fill="rgb(210,80,43)" fg:x="7905" fg:w="74"/><text x="2.9346%" y="863.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (95 samples, 0.03%)</title><rect x="2.6785%" y="1061" width="0.0323%" height="15" fill="rgb(247,160,36)" fg:x="7887" fg:w="95"/><text x="2.9285%" y="1071.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (95 samples, 0.03%)</title><rect x="2.6785%" y="1045" width="0.0323%" height="15" fill="rgb(234,13,49)" fg:x="7887" fg:w="95"/><text x="2.9285%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (95 samples, 0.03%)</title><rect x="2.6785%" y="1029" width="0.0323%" height="15" fill="rgb(234,122,0)" fg:x="7887" fg:w="95"/><text x="2.9285%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (94 samples, 0.03%)</title><rect x="2.6788%" y="1013" width="0.0319%" height="15" fill="rgb(207,146,38)" fg:x="7888" fg:w="94"/><text x="2.9288%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (94 samples, 0.03%)</title><rect x="2.6788%" y="997" width="0.0319%" height="15" fill="rgb(207,177,25)" fg:x="7888" fg:w="94"/><text x="2.9288%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (93 samples, 0.03%)</title><rect x="2.6792%" y="981" width="0.0316%" height="15" fill="rgb(211,178,42)" fg:x="7889" fg:w="93"/><text x="2.9292%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (89 samples, 0.03%)</title><rect x="2.6805%" y="965" width="0.0302%" height="15" fill="rgb(230,69,54)" fg:x="7893" fg:w="89"/><text x="2.9305%" y="975.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (89 samples, 0.03%)</title><rect x="2.6805%" y="949" width="0.0302%" height="15" fill="rgb(214,135,41)" fg:x="7893" fg:w="89"/><text x="2.9305%" y="959.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (89 samples, 0.03%)</title><rect x="2.6805%" y="933" width="0.0302%" height="15" fill="rgb(237,67,25)" fg:x="7893" fg:w="89"/><text x="2.9305%" y="943.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="2.7314%" y="629" width="0.0187%" height="15" fill="rgb(222,189,50)" fg:x="8043" fg:w="55"/><text x="2.9814%" y="639.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="2.7314%" y="613" width="0.0187%" height="15" fill="rgb(245,148,34)" fg:x="8043" fg:w="55"/><text x="2.9814%" y="623.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="2.7318%" y="597" width="0.0183%" height="15" fill="rgb(222,29,6)" fg:x="8044" fg:w="54"/><text x="2.9818%" y="607.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="2.7318%" y="581" width="0.0183%" height="15" fill="rgb(221,189,43)" fg:x="8044" fg:w="54"/><text x="2.9818%" y="591.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="2.7335%" y="565" width="0.0166%" height="15" fill="rgb(207,36,27)" fg:x="8049" fg:w="49"/><text x="2.9835%" y="575.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="2.7342%" y="549" width="0.0160%" height="15" fill="rgb(217,90,24)" fg:x="8051" fg:w="47"/><text x="2.9842%" y="559.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="2.7359%" y="533" width="0.0143%" height="15" fill="rgb(224,66,35)" fg:x="8056" fg:w="42"/><text x="2.9859%" y="543.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="2.7376%" y="517" width="0.0126%" height="15" fill="rgb(221,13,50)" fg:x="8061" fg:w="37"/><text x="2.9876%" y="527.50"></text></g><g><title>[libc.so.6] (132 samples, 0.04%)</title><rect x="2.7291%" y="645" width="0.0448%" height="15" fill="rgb(236,68,49)" fg:x="8036" fg:w="132"/><text x="2.9791%" y="655.50"></text></g><g><title>__mprotect (69 samples, 0.02%)</title><rect x="2.7505%" y="629" width="0.0234%" height="15" fill="rgb(229,146,28)" fg:x="8099" fg:w="69"/><text x="3.0005%" y="639.50"></text></g><g><title>[unknown] (69 samples, 0.02%)</title><rect x="2.7505%" y="613" width="0.0234%" height="15" fill="rgb(225,31,38)" fg:x="8099" fg:w="69"/><text x="3.0005%" y="623.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="2.7511%" y="597" width="0.0228%" height="15" fill="rgb(250,208,3)" fg:x="8101" fg:w="67"/><text x="3.0011%" y="607.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="2.7511%" y="581" width="0.0228%" height="15" fill="rgb(246,54,23)" fg:x="8101" fg:w="67"/><text x="3.0011%" y="591.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="2.7522%" y="565" width="0.0217%" height="15" fill="rgb(243,76,11)" fg:x="8104" fg:w="64"/><text x="3.0022%" y="575.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="2.7535%" y="549" width="0.0204%" height="15" fill="rgb(245,21,50)" fg:x="8108" fg:w="60"/><text x="3.0035%" y="559.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="2.7566%" y="533" width="0.0173%" height="15" fill="rgb(228,9,43)" fg:x="8117" fg:w="51"/><text x="3.0066%" y="543.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="2.7607%" y="517" width="0.0132%" height="15" fill="rgb(208,100,47)" fg:x="8129" fg:w="39"/><text x="3.0107%" y="527.50"></text></g><g><title>[libc.so.6] (136 samples, 0.05%)</title><rect x="2.7281%" y="661" width="0.0462%" height="15" fill="rgb(232,26,8)" fg:x="8033" fg:w="136"/><text x="2.9781%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (149 samples, 0.05%)</title><rect x="2.7247%" y="805" width="0.0506%" height="15" fill="rgb(216,166,38)" fg:x="8023" fg:w="149"/><text x="2.9747%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (143 samples, 0.05%)</title><rect x="2.7267%" y="789" width="0.0486%" height="15" fill="rgb(251,202,51)" fg:x="8029" fg:w="143"/><text x="2.9767%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (143 samples, 0.05%)</title><rect x="2.7267%" y="773" width="0.0486%" height="15" fill="rgb(254,216,34)" fg:x="8029" fg:w="143"/><text x="2.9767%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (143 samples, 0.05%)</title><rect x="2.7267%" y="757" width="0.0486%" height="15" fill="rgb(251,32,27)" fg:x="8029" fg:w="143"/><text x="2.9767%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (143 samples, 0.05%)</title><rect x="2.7267%" y="741" width="0.0486%" height="15" fill="rgb(208,127,28)" fg:x="8029" fg:w="143"/><text x="2.9767%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (143 samples, 0.05%)</title><rect x="2.7267%" y="725" width="0.0486%" height="15" fill="rgb(224,137,22)" fg:x="8029" fg:w="143"/><text x="2.9767%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (143 samples, 0.05%)</title><rect x="2.7267%" y="709" width="0.0486%" height="15" fill="rgb(254,70,32)" fg:x="8029" fg:w="143"/><text x="2.9767%" y="719.50"></text></g><g><title>alloc::alloc::alloc (143 samples, 0.05%)</title><rect x="2.7267%" y="693" width="0.0486%" height="15" fill="rgb(229,75,37)" fg:x="8029" fg:w="143"/><text x="2.9767%" y="703.50"></text></g><g><title>malloc (142 samples, 0.05%)</title><rect x="2.7270%" y="677" width="0.0482%" height="15" fill="rgb(252,64,23)" fg:x="8030" fg:w="142"/><text x="2.9770%" y="687.50"></text></g><g><title>[unknown] (119 samples, 0.04%)</title><rect x="2.7865%" y="613" width="0.0404%" height="15" fill="rgb(232,162,48)" fg:x="8205" fg:w="119"/><text x="3.0365%" y="623.50"></text></g><g><title>[unknown] (117 samples, 0.04%)</title><rect x="2.7871%" y="597" width="0.0397%" height="15" fill="rgb(246,160,12)" fg:x="8207" fg:w="117"/><text x="3.0371%" y="607.50"></text></g><g><title>[unknown] (116 samples, 0.04%)</title><rect x="2.7875%" y="581" width="0.0394%" height="15" fill="rgb(247,166,0)" fg:x="8208" fg:w="116"/><text x="3.0375%" y="591.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="2.7878%" y="565" width="0.0391%" height="15" fill="rgb(249,219,21)" fg:x="8209" fg:w="115"/><text x="3.0378%" y="575.50"></text></g><g><title>[unknown] (107 samples, 0.04%)</title><rect x="2.7905%" y="549" width="0.0363%" height="15" fill="rgb(205,209,3)" fg:x="8217" fg:w="107"/><text x="3.0405%" y="559.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="2.7946%" y="533" width="0.0323%" height="15" fill="rgb(243,44,1)" fg:x="8229" fg:w="95"/><text x="3.0446%" y="543.50"></text></g><g><title>[unknown] (81 samples, 0.03%)</title><rect x="2.7994%" y="517" width="0.0275%" height="15" fill="rgb(206,159,16)" fg:x="8243" fg:w="81"/><text x="3.0494%" y="527.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="2.8017%" y="501" width="0.0251%" height="15" fill="rgb(244,77,30)" fg:x="8250" fg:w="74"/><text x="3.0517%" y="511.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="2.8065%" y="485" width="0.0204%" height="15" fill="rgb(218,69,12)" fg:x="8264" fg:w="60"/><text x="3.0565%" y="495.50"></text></g><g><title>[libc.so.6] (286 samples, 0.10%)</title><rect x="2.7824%" y="629" width="0.0971%" height="15" fill="rgb(212,87,7)" fg:x="8193" fg:w="286"/><text x="3.0324%" y="639.50"></text></g><g><title>__mprotect (155 samples, 0.05%)</title><rect x="2.8269%" y="613" width="0.0526%" height="15" fill="rgb(245,114,25)" fg:x="8324" fg:w="155"/><text x="3.0769%" y="623.50"></text></g><g><title>[unknown] (154 samples, 0.05%)</title><rect x="2.8272%" y="597" width="0.0523%" height="15" fill="rgb(210,61,42)" fg:x="8325" fg:w="154"/><text x="3.0772%" y="607.50"></text></g><g><title>[unknown] (145 samples, 0.05%)</title><rect x="2.8303%" y="581" width="0.0492%" height="15" fill="rgb(211,52,33)" fg:x="8334" fg:w="145"/><text x="3.0803%" y="591.50"></text></g><g><title>[unknown] (145 samples, 0.05%)</title><rect x="2.8303%" y="565" width="0.0492%" height="15" fill="rgb(234,58,33)" fg:x="8334" fg:w="145"/><text x="3.0803%" y="575.50"></text></g><g><title>[unknown] (141 samples, 0.05%)</title><rect x="2.8316%" y="549" width="0.0479%" height="15" fill="rgb(220,115,36)" fg:x="8338" fg:w="141"/><text x="3.0816%" y="559.50"></text></g><g><title>[unknown] (132 samples, 0.04%)</title><rect x="2.8347%" y="533" width="0.0448%" height="15" fill="rgb(243,153,54)" fg:x="8347" fg:w="132"/><text x="3.0847%" y="543.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="2.8405%" y="517" width="0.0391%" height="15" fill="rgb(251,47,18)" fg:x="8364" fg:w="115"/><text x="3.0905%" y="527.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="2.8554%" y="501" width="0.0241%" height="15" fill="rgb(242,102,42)" fg:x="8408" fg:w="71"/><text x="3.1054%" y="511.50"></text></g><g><title>[libc.so.6] (293 samples, 0.10%)</title><rect x="2.7810%" y="645" width="0.0995%" height="15" fill="rgb(234,31,38)" fg:x="8189" fg:w="293"/><text x="3.0310%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (318 samples, 0.11%)</title><rect x="2.7763%" y="789" width="0.1080%" height="15" fill="rgb(221,117,51)" fg:x="8175" fg:w="318"/><text x="3.0263%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (307 samples, 0.10%)</title><rect x="2.7800%" y="773" width="0.1043%" height="15" fill="rgb(212,20,18)" fg:x="8186" fg:w="307"/><text x="3.0300%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (307 samples, 0.10%)</title><rect x="2.7800%" y="757" width="0.1043%" height="15" fill="rgb(245,133,36)" fg:x="8186" fg:w="307"/><text x="3.0300%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (307 samples, 0.10%)</title><rect x="2.7800%" y="741" width="0.1043%" height="15" fill="rgb(212,6,19)" fg:x="8186" fg:w="307"/><text x="3.0300%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (307 samples, 0.10%)</title><rect x="2.7800%" y="725" width="0.1043%" height="15" fill="rgb(218,1,36)" fg:x="8186" fg:w="307"/><text x="3.0300%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (307 samples, 0.10%)</title><rect x="2.7800%" y="709" width="0.1043%" height="15" fill="rgb(246,84,54)" fg:x="8186" fg:w="307"/><text x="3.0300%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (307 samples, 0.10%)</title><rect x="2.7800%" y="693" width="0.1043%" height="15" fill="rgb(242,110,6)" fg:x="8186" fg:w="307"/><text x="3.0300%" y="703.50"></text></g><g><title>alloc::alloc::alloc (307 samples, 0.10%)</title><rect x="2.7800%" y="677" width="0.1043%" height="15" fill="rgb(214,47,5)" fg:x="8186" fg:w="307"/><text x="3.0300%" y="687.50"></text></g><g><title>malloc (305 samples, 0.10%)</title><rect x="2.7807%" y="661" width="0.1036%" height="15" fill="rgb(218,159,25)" fg:x="8188" fg:w="305"/><text x="3.0307%" y="671.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (525 samples, 0.18%)</title><rect x="2.7107%" y="821" width="0.1783%" height="15" fill="rgb(215,211,28)" fg:x="7982" fg:w="525"/><text x="2.9607%" y="831.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (335 samples, 0.11%)</title><rect x="2.7753%" y="805" width="0.1138%" height="15" fill="rgb(238,59,32)" fg:x="8172" fg:w="335"/><text x="3.0253%" y="815.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (741 samples, 0.25%)</title><rect x="2.6415%" y="1205" width="0.2516%" height="15" fill="rgb(226,82,3)" fg:x="7778" fg:w="741"/><text x="2.8915%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (741 samples, 0.25%)</title><rect x="2.6415%" y="1189" width="0.2516%" height="15" fill="rgb(240,164,32)" fg:x="7778" fg:w="741"/><text x="2.8915%" y="1199.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (741 samples, 0.25%)</title><rect x="2.6415%" y="1173" width="0.2516%" height="15" fill="rgb(232,46,7)" fg:x="7778" fg:w="741"/><text x="2.8915%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (741 samples, 0.25%)</title><rect x="2.6415%" y="1157" width="0.2516%" height="15" fill="rgb(229,129,53)" fg:x="7778" fg:w="741"/><text x="2.8915%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (741 samples, 0.25%)</title><rect x="2.6415%" y="1141" width="0.2516%" height="15" fill="rgb(234,188,29)" fg:x="7778" fg:w="741"/><text x="2.8915%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (741 samples, 0.25%)</title><rect x="2.6415%" y="1125" width="0.2516%" height="15" fill="rgb(246,141,4)" fg:x="7778" fg:w="741"/><text x="2.8915%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (741 samples, 0.25%)</title><rect x="2.6415%" y="1109" width="0.2516%" height="15" fill="rgb(229,23,39)" fg:x="7778" fg:w="741"/><text x="2.8915%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (741 samples, 0.25%)</title><rect x="2.6415%" y="1093" width="0.2516%" height="15" fill="rgb(206,12,3)" fg:x="7778" fg:w="741"/><text x="2.8915%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (632 samples, 0.21%)</title><rect x="2.6785%" y="1077" width="0.2146%" height="15" fill="rgb(252,226,20)" fg:x="7887" fg:w="632"/><text x="2.9285%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (537 samples, 0.18%)</title><rect x="2.7107%" y="1061" width="0.1824%" height="15" fill="rgb(216,123,35)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (537 samples, 0.18%)</title><rect x="2.7107%" y="1045" width="0.1824%" height="15" fill="rgb(212,68,40)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="1055.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (537 samples, 0.18%)</title><rect x="2.7107%" y="1029" width="0.1824%" height="15" fill="rgb(254,125,32)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (537 samples, 0.18%)</title><rect x="2.7107%" y="1013" width="0.1824%" height="15" fill="rgb(253,97,22)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (537 samples, 0.18%)</title><rect x="2.7107%" y="997" width="0.1824%" height="15" fill="rgb(241,101,14)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (537 samples, 0.18%)</title><rect x="2.7107%" y="981" width="0.1824%" height="15" fill="rgb(238,103,29)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (537 samples, 0.18%)</title><rect x="2.7107%" y="965" width="0.1824%" height="15" fill="rgb(233,195,47)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (537 samples, 0.18%)</title><rect x="2.7107%" y="949" width="0.1824%" height="15" fill="rgb(246,218,30)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (537 samples, 0.18%)</title><rect x="2.7107%" y="933" width="0.1824%" height="15" fill="rgb(219,145,47)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (537 samples, 0.18%)</title><rect x="2.7107%" y="917" width="0.1824%" height="15" fill="rgb(243,12,26)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (537 samples, 0.18%)</title><rect x="2.7107%" y="901" width="0.1824%" height="15" fill="rgb(214,87,16)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (537 samples, 0.18%)</title><rect x="2.7107%" y="885" width="0.1824%" height="15" fill="rgb(208,99,42)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (537 samples, 0.18%)</title><rect x="2.7107%" y="869" width="0.1824%" height="15" fill="rgb(253,99,2)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (537 samples, 0.18%)</title><rect x="2.7107%" y="853" width="0.1824%" height="15" fill="rgb(220,168,23)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="863.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (537 samples, 0.18%)</title><rect x="2.7107%" y="837" width="0.1824%" height="15" fill="rgb(242,38,24)" fg:x="7982" fg:w="537"/><text x="2.9607%" y="847.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (34 samples, 0.01%)</title><rect x="2.8979%" y="997" width="0.0115%" height="15" fill="rgb(225,182,9)" fg:x="8533" fg:w="34"/><text x="3.1479%" y="1007.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::connect_map_to_shm (39 samples, 0.01%)</title><rect x="2.9240%" y="885" width="0.0132%" height="15" fill="rgb(243,178,37)" fg:x="8610" fg:w="39"/><text x="3.1740%" y="895.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (51 samples, 0.02%)</title><rect x="2.9220%" y="901" width="0.0173%" height="15" fill="rgb(232,139,19)" fg:x="8604" fg:w="51"/><text x="3.1720%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (56 samples, 0.02%)</title><rect x="2.9206%" y="965" width="0.0190%" height="15" fill="rgb(225,201,24)" fg:x="8600" fg:w="56"/><text x="3.1706%" y="975.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (56 samples, 0.02%)</title><rect x="2.9206%" y="949" width="0.0190%" height="15" fill="rgb(221,47,46)" fg:x="8600" fg:w="56"/><text x="3.1706%" y="959.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (52 samples, 0.02%)</title><rect x="2.9220%" y="933" width="0.0177%" height="15" fill="rgb(249,23,13)" fg:x="8604" fg:w="52"/><text x="3.1720%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (52 samples, 0.02%)</title><rect x="2.9220%" y="917" width="0.0177%" height="15" fill="rgb(219,9,5)" fg:x="8604" fg:w="52"/><text x="3.1720%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (131 samples, 0.04%)</title><rect x="2.8955%" y="1029" width="0.0445%" height="15" fill="rgb(254,171,16)" fg:x="8526" fg:w="131"/><text x="3.1455%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (131 samples, 0.04%)</title><rect x="2.8955%" y="1013" width="0.0445%" height="15" fill="rgb(230,171,20)" fg:x="8526" fg:w="131"/><text x="3.1455%" y="1023.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (90 samples, 0.03%)</title><rect x="2.9094%" y="997" width="0.0306%" height="15" fill="rgb(210,71,41)" fg:x="8567" fg:w="90"/><text x="3.1594%" y="1007.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (60 samples, 0.02%)</title><rect x="2.9196%" y="981" width="0.0204%" height="15" fill="rgb(206,173,20)" fg:x="8597" fg:w="60"/><text x="3.1696%" y="991.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (154 samples, 0.05%)</title><rect x="2.8931%" y="1045" width="0.0523%" height="15" fill="rgb(233,88,34)" fg:x="8519" fg:w="154"/><text x="3.1431%" y="1055.50"></text></g><g><title>async_std::task::spawn::spawn (105 samples, 0.04%)</title><rect x="2.9654%" y="981" width="0.0357%" height="15" fill="rgb(223,209,46)" fg:x="8732" fg:w="105"/><text x="3.2154%" y="991.50"></text></g><g><title>async_std::task::builder::Builder::spawn (105 samples, 0.04%)</title><rect x="2.9654%" y="965" width="0.0357%" height="15" fill="rgb(250,43,18)" fg:x="8732" fg:w="105"/><text x="3.2154%" y="975.50"></text></g><g><title>async_global_executor::executor::spawn (105 samples, 0.04%)</title><rect x="2.9654%" y="949" width="0.0357%" height="15" fill="rgb(208,13,10)" fg:x="8732" fg:w="105"/><text x="3.2154%" y="959.50"></text></g><g><title>async_executor::Executor::spawn (105 samples, 0.04%)</title><rect x="2.9654%" y="933" width="0.0357%" height="15" fill="rgb(212,200,36)" fg:x="8732" fg:w="105"/><text x="3.2154%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.02%)</title><rect x="2.9824%" y="917" width="0.0187%" height="15" fill="rgb(225,90,30)" fg:x="8782" fg:w="55"/><text x="3.2324%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.02%)</title><rect x="2.9824%" y="901" width="0.0187%" height="15" fill="rgb(236,182,39)" fg:x="8782" fg:w="55"/><text x="3.2324%" y="911.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (55 samples, 0.02%)</title><rect x="2.9824%" y="885" width="0.0187%" height="15" fill="rgb(212,144,35)" fg:x="8782" fg:w="55"/><text x="3.2324%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (55 samples, 0.02%)</title><rect x="2.9824%" y="869" width="0.0187%" height="15" fill="rgb(228,63,44)" fg:x="8782" fg:w="55"/><text x="3.2324%" y="879.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (36 samples, 0.01%)</title><rect x="2.9889%" y="853" width="0.0122%" height="15" fill="rgb(228,109,6)" fg:x="8801" fg:w="36"/><text x="3.2389%" y="863.50"></text></g><g><title>zenoh::net::routing::router::Tables::schedule_compute_trees (106 samples, 0.04%)</title><rect x="2.9654%" y="997" width="0.0360%" height="15" fill="rgb(238,117,24)" fg:x="8732" fg:w="106"/><text x="3.2154%" y="1007.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (130 samples, 0.04%)</title><rect x="2.9576%" y="1029" width="0.0441%" height="15" fill="rgb(242,26,26)" fg:x="8709" fg:w="130"/><text x="3.2076%" y="1039.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (115 samples, 0.04%)</title><rect x="2.9627%" y="1013" width="0.0391%" height="15" fill="rgb(221,92,48)" fg:x="8724" fg:w="115"/><text x="3.2127%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (173 samples, 0.06%)</title><rect x="2.9576%" y="1045" width="0.0588%" height="15" fill="rgb(209,209,32)" fg:x="8709" fg:w="173"/><text x="3.2076%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (36 samples, 0.01%)</title><rect x="3.0042%" y="1029" width="0.0122%" height="15" fill="rgb(221,70,22)" fg:x="8846" fg:w="36"/><text x="3.2542%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (36 samples, 0.01%)</title><rect x="3.0042%" y="1013" width="0.0122%" height="15" fill="rgb(248,145,5)" fg:x="8846" fg:w="36"/><text x="3.2542%" y="1023.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (31 samples, 0.01%)</title><rect x="3.0059%" y="997" width="0.0105%" height="15" fill="rgb(226,116,26)" fg:x="8851" fg:w="31"/><text x="3.2559%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (380 samples, 0.13%)</title><rect x="2.8931%" y="1061" width="0.1291%" height="15" fill="rgb(244,5,17)" fg:x="8519" fg:w="380"/><text x="3.1431%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (383 samples, 0.13%)</title><rect x="2.8931%" y="1093" width="0.1301%" height="15" fill="rgb(252,159,33)" fg:x="8519" fg:w="383"/><text x="3.1431%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (383 samples, 0.13%)</title><rect x="2.8931%" y="1077" width="0.1301%" height="15" fill="rgb(206,71,0)" fg:x="8519" fg:w="383"/><text x="3.1431%" y="1087.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (386 samples, 0.13%)</title><rect x="2.8931%" y="1205" width="0.1311%" height="15" fill="rgb(233,118,54)" fg:x="8519" fg:w="386"/><text x="3.1431%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (386 samples, 0.13%)</title><rect x="2.8931%" y="1189" width="0.1311%" height="15" fill="rgb(234,83,48)" fg:x="8519" fg:w="386"/><text x="3.1431%" y="1199.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (386 samples, 0.13%)</title><rect x="2.8931%" y="1173" width="0.1311%" height="15" fill="rgb(228,3,54)" fg:x="8519" fg:w="386"/><text x="3.1431%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (386 samples, 0.13%)</title><rect x="2.8931%" y="1157" width="0.1311%" height="15" fill="rgb(226,155,13)" fg:x="8519" fg:w="386"/><text x="3.1431%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (386 samples, 0.13%)</title><rect x="2.8931%" y="1141" width="0.1311%" height="15" fill="rgb(241,28,37)" fg:x="8519" fg:w="386"/><text x="3.1431%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (386 samples, 0.13%)</title><rect x="2.8931%" y="1125" width="0.1311%" height="15" fill="rgb(233,93,10)" fg:x="8519" fg:w="386"/><text x="3.1431%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (386 samples, 0.13%)</title><rect x="2.8931%" y="1109" width="0.1311%" height="15" fill="rgb(225,113,19)" fg:x="8519" fg:w="386"/><text x="3.1431%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;alloc::sync::Arc&lt;async_io::reactor::Source&gt;&gt;&gt;&gt; (40 samples, 0.01%)</title><rect x="3.0422%" y="869" width="0.0136%" height="15" fill="rgb(241,2,18)" fg:x="8958" fg:w="40"/><text x="3.2922%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.01%)</title><rect x="3.0422%" y="853" width="0.0136%" height="15" fill="rgb(228,207,21)" fg:x="8958" fg:w="40"/><text x="3.2922%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.01%)</title><rect x="3.0422%" y="837" width="0.0136%" height="15" fill="rgb(213,211,35)" fg:x="8958" fg:w="40"/><text x="3.2922%" y="847.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (40 samples, 0.01%)</title><rect x="3.0422%" y="821" width="0.0136%" height="15" fill="rgb(209,83,10)" fg:x="8958" fg:w="40"/><text x="3.2922%" y="831.50"></text></g><g><title>syscall (39 samples, 0.01%)</title><rect x="3.0425%" y="805" width="0.0132%" height="15" fill="rgb(209,164,1)" fg:x="8959" fg:w="39"/><text x="3.2925%" y="815.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="3.0425%" y="789" width="0.0132%" height="15" fill="rgb(213,184,43)" fg:x="8959" fg:w="39"/><text x="3.2925%" y="799.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="3.0425%" y="773" width="0.0132%" height="15" fill="rgb(231,61,34)" fg:x="8959" fg:w="39"/><text x="3.2925%" y="783.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="3.0425%" y="757" width="0.0132%" height="15" fill="rgb(235,75,3)" fg:x="8959" fg:w="39"/><text x="3.2925%" y="767.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="3.0435%" y="741" width="0.0122%" height="15" fill="rgb(220,106,47)" fg:x="8962" fg:w="36"/><text x="3.2935%" y="751.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="3.0442%" y="725" width="0.0115%" height="15" fill="rgb(210,196,33)" fg:x="8964" fg:w="34"/><text x="3.2942%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (57 samples, 0.02%)</title><rect x="3.0374%" y="885" width="0.0194%" height="15" fill="rgb(229,154,42)" fg:x="8944" fg:w="57"/><text x="3.2874%" y="895.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (63 samples, 0.02%)</title><rect x="3.0357%" y="901" width="0.0214%" height="15" fill="rgb(228,114,26)" fg:x="8939" fg:w="63"/><text x="3.2857%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (48 samples, 0.02%)</title><rect x="3.0578%" y="869" width="0.0163%" height="15" fill="rgb(208,144,1)" fg:x="9004" fg:w="48"/><text x="3.3078%" y="879.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (48 samples, 0.02%)</title><rect x="3.0578%" y="853" width="0.0163%" height="15" fill="rgb(239,112,37)" fg:x="9004" fg:w="48"/><text x="3.3078%" y="863.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::bind::{{closure}} (115 samples, 0.04%)</title><rect x="3.0357%" y="933" width="0.0391%" height="15" fill="rgb(210,96,50)" fg:x="8939" fg:w="115"/><text x="3.2857%" y="943.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::bind (115 samples, 0.04%)</title><rect x="3.0357%" y="917" width="0.0391%" height="15" fill="rgb(222,178,2)" fg:x="8939" fg:w="115"/><text x="3.2857%" y="927.50"></text></g><g><title>std::net::tcp::TcpListener::bind (52 samples, 0.02%)</title><rect x="3.0571%" y="901" width="0.0177%" height="15" fill="rgb(226,74,18)" fg:x="9002" fg:w="52"/><text x="3.3071%" y="911.50"></text></g><g><title>std::net::each_addr (51 samples, 0.02%)</title><rect x="3.0575%" y="885" width="0.0173%" height="15" fill="rgb(225,67,54)" fg:x="9003" fg:w="51"/><text x="3.3075%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (117 samples, 0.04%)</title><rect x="3.0354%" y="949" width="0.0397%" height="15" fill="rgb(251,92,32)" fg:x="8938" fg:w="117"/><text x="3.2854%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (30 samples, 0.01%)</title><rect x="3.0870%" y="949" width="0.0102%" height="15" fill="rgb(228,149,22)" fg:x="9090" fg:w="30"/><text x="3.3370%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (30 samples, 0.01%)</title><rect x="3.0870%" y="933" width="0.0102%" height="15" fill="rgb(243,54,13)" fg:x="9090" fg:w="30"/><text x="3.3370%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (194 samples, 0.07%)</title><rect x="3.0344%" y="997" width="0.0659%" height="15" fill="rgb(243,180,28)" fg:x="8935" fg:w="194"/><text x="3.2844%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (194 samples, 0.07%)</title><rect x="3.0344%" y="981" width="0.0659%" height="15" fill="rgb(208,167,24)" fg:x="8935" fg:w="194"/><text x="3.2844%" y="991.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}} (194 samples, 0.07%)</title><rect x="3.0344%" y="965" width="0.0659%" height="15" fill="rgb(245,73,45)" fg:x="8935" fg:w="194"/><text x="3.2844%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (213 samples, 0.07%)</title><rect x="3.0327%" y="1061" width="0.0723%" height="15" fill="rgb(237,203,48)" fg:x="8930" fg:w="213"/><text x="3.2827%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportManager::add_listener::{{closure}} (213 samples, 0.07%)</title><rect x="3.0327%" y="1045" width="0.0723%" height="15" fill="rgb(211,197,16)" fg:x="8930" fg:w="213"/><text x="3.2827%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (212 samples, 0.07%)</title><rect x="3.0330%" y="1029" width="0.0720%" height="15" fill="rgb(243,99,51)" fg:x="8931" fg:w="212"/><text x="3.2830%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::add_listener_unicast::{{closure}} (210 samples, 0.07%)</title><rect x="3.0337%" y="1013" width="0.0713%" height="15" fill="rgb(215,123,29)" fg:x="8933" fg:w="210"/><text x="3.2837%" y="1023.50"></text></g><g><title>[libc.so.6] (45 samples, 0.02%)</title><rect x="3.1543%" y="917" width="0.0153%" height="15" fill="rgb(239,186,37)" fg:x="9288" fg:w="45"/><text x="3.4043%" y="927.50"></text></g><g><title>getifaddrs (179 samples, 0.06%)</title><rect x="3.1264%" y="949" width="0.0608%" height="15" fill="rgb(252,136,39)" fg:x="9206" fg:w="179"/><text x="3.3764%" y="959.50"></text></g><g><title>[libc.so.6] (179 samples, 0.06%)</title><rect x="3.1264%" y="933" width="0.0608%" height="15" fill="rgb(223,213,32)" fg:x="9206" fg:w="179"/><text x="3.3764%" y="943.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (244 samples, 0.08%)</title><rect x="3.1108%" y="1029" width="0.0829%" height="15" fill="rgb(233,115,5)" fg:x="9160" fg:w="244"/><text x="3.3608%" y="1039.50"></text></g><g><title>zenoh_util::net::get_local_addresses (231 samples, 0.08%)</title><rect x="3.1152%" y="1013" width="0.0784%" height="15" fill="rgb(207,226,44)" fg:x="9173" fg:w="231"/><text x="3.3652%" y="1023.50"></text></g><g><title>pnet_datalink::interfaces (231 samples, 0.08%)</title><rect x="3.1152%" y="997" width="0.0784%" height="15" fill="rgb(208,126,0)" fg:x="9173" fg:w="231"/><text x="3.3652%" y="1007.50"></text></g><g><title>pnet_datalink::backend::interfaces (231 samples, 0.08%)</title><rect x="3.1152%" y="981" width="0.0784%" height="15" fill="rgb(244,66,21)" fg:x="9173" fg:w="231"/><text x="3.3652%" y="991.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (230 samples, 0.08%)</title><rect x="3.1155%" y="965" width="0.0781%" height="15" fill="rgb(222,97,12)" fg:x="9174" fg:w="230"/><text x="3.3655%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (495 samples, 0.17%)</title><rect x="3.0266%" y="1093" width="0.1681%" height="15" fill="rgb(219,213,19)" fg:x="8912" fg:w="495"/><text x="3.2766%" y="1103.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::bind_listeners::{{closure}} (477 samples, 0.16%)</title><rect x="3.0327%" y="1077" width="0.1620%" height="15" fill="rgb(252,169,30)" fg:x="8930" fg:w="477"/><text x="3.2827%" y="1087.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (256 samples, 0.09%)</title><rect x="3.1077%" y="1061" width="0.0869%" height="15" fill="rgb(206,32,51)" fg:x="9151" fg:w="256"/><text x="3.3577%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (256 samples, 0.09%)</title><rect x="3.1077%" y="1045" width="0.0869%" height="15" fill="rgb(250,172,42)" fg:x="9151" fg:w="256"/><text x="3.3577%" y="1055.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (507 samples, 0.17%)</title><rect x="3.0242%" y="1141" width="0.1722%" height="15" fill="rgb(209,34,43)" fg:x="8905" fg:w="507"/><text x="3.2742%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (506 samples, 0.17%)</title><rect x="3.0245%" y="1125" width="0.1718%" height="15" fill="rgb(223,11,35)" fg:x="8906" fg:w="506"/><text x="3.2745%" y="1135.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}} (506 samples, 0.17%)</title><rect x="3.0245%" y="1109" width="0.1718%" height="15" fill="rgb(251,219,26)" fg:x="8906" fg:w="506"/><text x="3.2745%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 0.01%)</title><rect x="3.2215%" y="1013" width="0.0115%" height="15" fill="rgb(231,119,3)" fg:x="9486" fg:w="34"/><text x="3.4715%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (33 samples, 0.01%)</title><rect x="3.2218%" y="997" width="0.0112%" height="15" fill="rgb(216,97,11)" fg:x="9487" fg:w="33"/><text x="3.4718%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.01%)</title><rect x="3.2225%" y="981" width="0.0105%" height="15" fill="rgb(223,59,9)" fg:x="9489" fg:w="31"/><text x="3.4725%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.01%)</title><rect x="3.2225%" y="965" width="0.0105%" height="15" fill="rgb(233,93,31)" fg:x="9489" fg:w="31"/><text x="3.4725%" y="975.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryManager::alloc (68 samples, 0.02%)</title><rect x="3.2184%" y="1029" width="0.0231%" height="15" fill="rgb(239,81,33)" fg:x="9477" fg:w="68"/><text x="3.4684%" y="1039.50"></text></g><g><title>shared_memory::unix::create_mapping (73 samples, 0.02%)</title><rect x="3.2646%" y="997" width="0.0248%" height="15" fill="rgb(213,120,34)" fg:x="9613" fg:w="73"/><text x="3.5146%" y="1007.50"></text></g><g><title>std::sys::unix::cvt_r (57 samples, 0.02%)</title><rect x="3.2935%" y="933" width="0.0194%" height="15" fill="rgb(243,49,53)" fg:x="9698" fg:w="57"/><text x="3.5435%" y="943.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (57 samples, 0.02%)</title><rect x="3.2935%" y="917" width="0.0194%" height="15" fill="rgb(247,216,33)" fg:x="9698" fg:w="57"/><text x="3.5435%" y="927.50"></text></g><g><title>open64 (57 samples, 0.02%)</title><rect x="3.2935%" y="901" width="0.0194%" height="15" fill="rgb(226,26,14)" fg:x="9698" fg:w="57"/><text x="3.5435%" y="911.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="3.2955%" y="885" width="0.0173%" height="15" fill="rgb(215,49,53)" fg:x="9704" fg:w="51"/><text x="3.5455%" y="895.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="3.2959%" y="869" width="0.0170%" height="15" fill="rgb(245,162,40)" fg:x="9705" fg:w="50"/><text x="3.5459%" y="879.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="3.2959%" y="853" width="0.0170%" height="15" fill="rgb(229,68,17)" fg:x="9705" fg:w="50"/><text x="3.5459%" y="863.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="3.2972%" y="837" width="0.0156%" height="15" fill="rgb(213,182,10)" fg:x="9709" fg:w="46"/><text x="3.5472%" y="847.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="3.3000%" y="821" width="0.0129%" height="15" fill="rgb(245,125,30)" fg:x="9717" fg:w="38"/><text x="3.5500%" y="831.50"></text></g><g><title>std::sys::unix::fs::File::open_c (58 samples, 0.02%)</title><rect x="3.2935%" y="949" width="0.0197%" height="15" fill="rgb(232,202,2)" fg:x="9698" fg:w="58"/><text x="3.5435%" y="959.50"></text></g><g><title>std::fs::OpenOptions::open (92 samples, 0.03%)</title><rect x="3.2898%" y="997" width="0.0312%" height="15" fill="rgb(237,140,51)" fg:x="9687" fg:w="92"/><text x="3.5398%" y="1007.50"></text></g><g><title>std::fs::OpenOptions::_open (92 samples, 0.03%)</title><rect x="3.2898%" y="981" width="0.0312%" height="15" fill="rgb(236,157,25)" fg:x="9687" fg:w="92"/><text x="3.5398%" y="991.50"></text></g><g><title>std::sys::unix::fs::File::open (92 samples, 0.03%)</title><rect x="3.2898%" y="965" width="0.0312%" height="15" fill="rgb(219,209,0)" fg:x="9687" fg:w="92"/><text x="3.5398%" y="975.50"></text></g><g><title>shared_memory::ShmemConf::create (246 samples, 0.08%)</title><rect x="3.2527%" y="1013" width="0.0835%" height="15" fill="rgb(240,116,54)" fg:x="9578" fg:w="246"/><text x="3.5027%" y="1023.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (45 samples, 0.02%)</title><rect x="3.3210%" y="997" width="0.0153%" height="15" fill="rgb(216,10,36)" fg:x="9779" fg:w="45"/><text x="3.5710%" y="1007.50"></text></g><g><title>std::sys::unix::net::Socket::write (44 samples, 0.01%)</title><rect x="3.3213%" y="981" width="0.0149%" height="15" fill="rgb(222,72,44)" fg:x="9780" fg:w="44"/><text x="3.5713%" y="991.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (44 samples, 0.01%)</title><rect x="3.3213%" y="965" width="0.0149%" height="15" fill="rgb(232,159,9)" fg:x="9780" fg:w="44"/><text x="3.5713%" y="975.50"></text></g><g><title>write (44 samples, 0.01%)</title><rect x="3.3213%" y="949" width="0.0149%" height="15" fill="rgb(210,39,32)" fg:x="9780" fg:w="44"/><text x="3.5713%" y="959.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="3.3217%" y="933" width="0.0146%" height="15" fill="rgb(216,194,45)" fg:x="9781" fg:w="43"/><text x="3.5717%" y="943.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="3.3220%" y="917" width="0.0143%" height="15" fill="rgb(218,18,35)" fg:x="9782" fg:w="42"/><text x="3.5720%" y="927.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="3.3220%" y="901" width="0.0143%" height="15" fill="rgb(207,83,51)" fg:x="9782" fg:w="42"/><text x="3.5720%" y="911.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="3.3220%" y="885" width="0.0143%" height="15" fill="rgb(225,63,43)" fg:x="9782" fg:w="42"/><text x="3.5720%" y="895.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="3.3227%" y="869" width="0.0136%" height="15" fill="rgb(207,57,36)" fg:x="9784" fg:w="40"/><text x="3.5727%" y="879.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="3.3234%" y="853" width="0.0129%" height="15" fill="rgb(216,99,33)" fg:x="9786" fg:w="38"/><text x="3.5734%" y="863.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="3.3234%" y="837" width="0.0129%" height="15" fill="rgb(225,42,16)" fg:x="9786" fg:w="38"/><text x="3.5734%" y="847.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="3.3234%" y="821" width="0.0129%" height="15" fill="rgb(220,201,45)" fg:x="9786" fg:w="38"/><text x="3.5734%" y="831.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="3.3247%" y="805" width="0.0115%" height="15" fill="rgb(225,33,4)" fg:x="9790" fg:w="34"/><text x="3.5747%" y="815.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="3.3258%" y="789" width="0.0105%" height="15" fill="rgb(224,33,50)" fg:x="9793" fg:w="31"/><text x="3.5758%" y="799.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryManager::make (280 samples, 0.10%)</title><rect x="3.2415%" y="1029" width="0.0951%" height="15" fill="rgb(246,198,51)" fg:x="9545" fg:w="280"/><text x="3.4915%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (382 samples, 0.13%)</title><rect x="3.2086%" y="1061" width="0.1297%" height="15" fill="rgb(205,22,4)" fg:x="9448" fg:w="382"/><text x="3.4586%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator::from_config::{{closure}} (381 samples, 0.13%)</title><rect x="3.2089%" y="1045" width="0.1294%" height="15" fill="rgb(206,3,8)" fg:x="9449" fg:w="381"/><text x="3.4589%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (444 samples, 0.15%)</title><rect x="3.2001%" y="1093" width="0.1508%" height="15" fill="rgb(251,23,15)" fg:x="9423" fg:w="444"/><text x="3.4501%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator::from_config::{{closure}} (444 samples, 0.15%)</title><rect x="3.2001%" y="1077" width="0.1508%" height="15" fill="rgb(252,88,28)" fg:x="9423" fg:w="444"/><text x="3.4501%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (37 samples, 0.01%)</title><rect x="3.3383%" y="1061" width="0.0126%" height="15" fill="rgb(212,127,14)" fg:x="9830" fg:w="37"/><text x="3.5883%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (37 samples, 0.01%)</title><rect x="3.3383%" y="1045" width="0.0126%" height="15" fill="rgb(247,145,37)" fg:x="9830" fg:w="37"/><text x="3.5883%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.01%)</title><rect x="3.3383%" y="1029" width="0.0126%" height="15" fill="rgb(209,117,53)" fg:x="9830" fg:w="37"/><text x="3.5883%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (464 samples, 0.16%)</title><rect x="3.1981%" y="1125" width="0.1576%" height="15" fill="rgb(212,90,42)" fg:x="9417" fg:w="464"/><text x="3.4481%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::from_config::{{closure}} (458 samples, 0.16%)</title><rect x="3.2001%" y="1109" width="0.1555%" height="15" fill="rgb(218,164,37)" fg:x="9423" fg:w="458"/><text x="3.4501%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,003 samples, 0.34%)</title><rect x="3.0242%" y="1157" width="0.3406%" height="15" fill="rgb(246,65,34)" fg:x="8905" fg:w="1003"/><text x="3.2742%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::from_config::{{closure}} (496 samples, 0.17%)</title><rect x="3.1964%" y="1141" width="0.1684%" height="15" fill="rgb(231,100,33)" fg:x="9412" fg:w="496"/><text x="3.4464%" y="1151.50"></text></g><g><title>async_executor::Executor::spawn (75 samples, 0.03%)</title><rect x="3.3791%" y="1077" width="0.0255%" height="15" fill="rgb(228,126,14)" fg:x="9950" fg:w="75"/><text x="3.6291%" y="1087.50"></text></g><g><title>async_global_executor::executor::spawn (80 samples, 0.03%)</title><rect x="3.3784%" y="1093" width="0.0272%" height="15" fill="rgb(215,173,21)" fg:x="9948" fg:w="80"/><text x="3.6284%" y="1103.50"></text></g><g><title>async_std::task::spawn::spawn (85 samples, 0.03%)</title><rect x="3.3774%" y="1125" width="0.0289%" height="15" fill="rgb(210,6,40)" fg:x="9945" fg:w="85"/><text x="3.6274%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::spawn (85 samples, 0.03%)</title><rect x="3.3774%" y="1109" width="0.0289%" height="15" fill="rgb(212,48,18)" fg:x="9945" fg:w="85"/><text x="3.6274%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::thread::Thread&gt; (35 samples, 0.01%)</title><rect x="3.4263%" y="1077" width="0.0119%" height="15" fill="rgb(230,214,11)" fg:x="10089" fg:w="35"/><text x="3.6763%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinHandle&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt; (66 samples, 0.02%)</title><rect x="3.4219%" y="1109" width="0.0224%" height="15" fill="rgb(254,105,39)" fg:x="10076" fg:w="66"/><text x="3.6719%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinInner&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt; (66 samples, 0.02%)</title><rect x="3.4219%" y="1093" width="0.0224%" height="15" fill="rgb(245,158,5)" fg:x="10076" fg:w="66"/><text x="3.6719%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (30 samples, 0.01%)</title><rect x="3.4558%" y="1045" width="0.0102%" height="15" fill="rgb(249,208,11)" fg:x="10176" fg:w="30"/><text x="3.7058%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (38 samples, 0.01%)</title><rect x="3.4823%" y="1029" width="0.0129%" height="15" fill="rgb(210,39,28)" fg:x="10254" fg:w="38"/><text x="3.7323%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.01%)</title><rect x="3.4823%" y="1013" width="0.0129%" height="15" fill="rgb(211,56,53)" fg:x="10254" fg:w="38"/><text x="3.7323%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.01%)</title><rect x="3.4823%" y="997" width="0.0129%" height="15" fill="rgb(226,201,30)" fg:x="10254" fg:w="38"/><text x="3.7323%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.01%)</title><rect x="3.4823%" y="981" width="0.0129%" height="15" fill="rgb(239,101,34)" fg:x="10254" fg:w="38"/><text x="3.7323%" y="991.50"></text></g><g><title>malloc (34 samples, 0.01%)</title><rect x="3.4837%" y="965" width="0.0115%" height="15" fill="rgb(226,209,5)" fg:x="10258" fg:w="34"/><text x="3.7337%" y="975.50"></text></g><g><title>[libc.so.6] (205 samples, 0.07%)</title><rect x="3.5485%" y="1013" width="0.0696%" height="15" fill="rgb(250,105,47)" fg:x="10449" fg:w="205"/><text x="3.7985%" y="1023.50"></text></g><g><title>[libc.so.6] (167 samples, 0.06%)</title><rect x="3.5614%" y="997" width="0.0567%" height="15" fill="rgb(230,72,3)" fg:x="10487" fg:w="167"/><text x="3.8114%" y="1007.50"></text></g><g><title>__clone (162 samples, 0.06%)</title><rect x="3.5631%" y="981" width="0.0550%" height="15" fill="rgb(232,218,39)" fg:x="10492" fg:w="162"/><text x="3.8131%" y="991.50"></text></g><g><title>[unknown] (157 samples, 0.05%)</title><rect x="3.5648%" y="965" width="0.0533%" height="15" fill="rgb(248,166,6)" fg:x="10497" fg:w="157"/><text x="3.8148%" y="975.50"></text></g><g><title>[unknown] (153 samples, 0.05%)</title><rect x="3.5662%" y="949" width="0.0520%" height="15" fill="rgb(247,89,20)" fg:x="10501" fg:w="153"/><text x="3.8162%" y="959.50"></text></g><g><title>[unknown] (151 samples, 0.05%)</title><rect x="3.5669%" y="933" width="0.0513%" height="15" fill="rgb(248,130,54)" fg:x="10503" fg:w="151"/><text x="3.8169%" y="943.50"></text></g><g><title>[unknown] (149 samples, 0.05%)</title><rect x="3.5676%" y="917" width="0.0506%" height="15" fill="rgb(234,196,4)" fg:x="10505" fg:w="149"/><text x="3.8176%" y="927.50"></text></g><g><title>[unknown] (120 samples, 0.04%)</title><rect x="3.5774%" y="901" width="0.0408%" height="15" fill="rgb(250,143,31)" fg:x="10534" fg:w="120"/><text x="3.8274%" y="911.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="3.5839%" y="885" width="0.0343%" height="15" fill="rgb(211,110,34)" fg:x="10553" fg:w="101"/><text x="3.8339%" y="895.50"></text></g><g><title>[unknown] (84 samples, 0.03%)</title><rect x="3.5896%" y="869" width="0.0285%" height="15" fill="rgb(215,124,48)" fg:x="10570" fg:w="84"/><text x="3.8396%" y="879.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="3.5940%" y="853" width="0.0241%" height="15" fill="rgb(216,46,13)" fg:x="10583" fg:w="71"/><text x="3.8440%" y="863.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="3.6015%" y="837" width="0.0166%" height="15" fill="rgb(205,184,25)" fg:x="10605" fg:w="49"/><text x="3.8515%" y="847.50"></text></g><g><title>[unknown] (359 samples, 0.12%)</title><rect x="3.6182%" y="1013" width="0.1219%" height="15" fill="rgb(228,1,10)" fg:x="10654" fg:w="359"/><text x="3.8682%" y="1023.50"></text></g><g><title>[unknown] (318 samples, 0.11%)</title><rect x="3.6321%" y="997" width="0.1080%" height="15" fill="rgb(213,116,27)" fg:x="10695" fg:w="318"/><text x="3.8821%" y="1007.50"></text></g><g><title>[unknown] (311 samples, 0.11%)</title><rect x="3.6345%" y="981" width="0.1056%" height="15" fill="rgb(241,95,50)" fg:x="10702" fg:w="311"/><text x="3.8845%" y="991.50"></text></g><g><title>[unknown] (299 samples, 0.10%)</title><rect x="3.6385%" y="965" width="0.1015%" height="15" fill="rgb(238,48,32)" fg:x="10714" fg:w="299"/><text x="3.8885%" y="975.50"></text></g><g><title>[unknown] (254 samples, 0.09%)</title><rect x="3.6538%" y="949" width="0.0863%" height="15" fill="rgb(235,113,49)" fg:x="10759" fg:w="254"/><text x="3.9038%" y="959.50"></text></g><g><title>[unknown] (163 samples, 0.06%)</title><rect x="3.6847%" y="933" width="0.0554%" height="15" fill="rgb(205,127,43)" fg:x="10850" fg:w="163"/><text x="3.9347%" y="943.50"></text></g><g><title>[unknown] (149 samples, 0.05%)</title><rect x="3.6895%" y="917" width="0.0506%" height="15" fill="rgb(250,162,2)" fg:x="10864" fg:w="149"/><text x="3.9395%" y="927.50"></text></g><g><title>[unknown] (133 samples, 0.05%)</title><rect x="3.6949%" y="901" width="0.0452%" height="15" fill="rgb(220,13,41)" fg:x="10880" fg:w="133"/><text x="3.9449%" y="911.50"></text></g><g><title>[unknown] (107 samples, 0.04%)</title><rect x="3.7037%" y="885" width="0.0363%" height="15" fill="rgb(249,221,25)" fg:x="10906" fg:w="107"/><text x="3.9537%" y="895.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="3.7146%" y="869" width="0.0255%" height="15" fill="rgb(215,208,19)" fg:x="10938" fg:w="75"/><text x="3.9646%" y="879.50"></text></g><g><title>__mmap (162 samples, 0.06%)</title><rect x="3.7472%" y="1013" width="0.0550%" height="15" fill="rgb(236,175,2)" fg:x="11034" fg:w="162"/><text x="3.9972%" y="1023.50"></text></g><g><title>[unknown] (162 samples, 0.06%)</title><rect x="3.7472%" y="997" width="0.0550%" height="15" fill="rgb(241,52,2)" fg:x="11034" fg:w="162"/><text x="3.9972%" y="1007.50"></text></g><g><title>[unknown] (161 samples, 0.05%)</title><rect x="3.7476%" y="981" width="0.0547%" height="15" fill="rgb(248,140,14)" fg:x="11035" fg:w="161"/><text x="3.9976%" y="991.50"></text></g><g><title>[unknown] (158 samples, 0.05%)</title><rect x="3.7486%" y="965" width="0.0537%" height="15" fill="rgb(253,22,42)" fg:x="11038" fg:w="158"/><text x="3.9986%" y="975.50"></text></g><g><title>[unknown] (146 samples, 0.05%)</title><rect x="3.7526%" y="949" width="0.0496%" height="15" fill="rgb(234,61,47)" fg:x="11050" fg:w="146"/><text x="4.0026%" y="959.50"></text></g><g><title>[unknown] (100 samples, 0.03%)</title><rect x="3.7683%" y="933" width="0.0340%" height="15" fill="rgb(208,226,15)" fg:x="11096" fg:w="100"/><text x="4.0183%" y="943.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="3.7774%" y="917" width="0.0248%" height="15" fill="rgb(217,221,4)" fg:x="11123" fg:w="73"/><text x="4.0274%" y="927.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="3.7907%" y="901" width="0.0115%" height="15" fill="rgb(212,174,34)" fg:x="11162" fg:w="34"/><text x="4.0407%" y="911.50"></text></g><g><title>__mprotect (204 samples, 0.07%)</title><rect x="3.8022%" y="1013" width="0.0693%" height="15" fill="rgb(253,83,4)" fg:x="11196" fg:w="204"/><text x="4.0522%" y="1023.50"></text></g><g><title>[unknown] (204 samples, 0.07%)</title><rect x="3.8022%" y="997" width="0.0693%" height="15" fill="rgb(250,195,49)" fg:x="11196" fg:w="204"/><text x="4.0522%" y="1007.50"></text></g><g><title>[unknown] (203 samples, 0.07%)</title><rect x="3.8026%" y="981" width="0.0689%" height="15" fill="rgb(241,192,25)" fg:x="11197" fg:w="203"/><text x="4.0526%" y="991.50"></text></g><g><title>[unknown] (203 samples, 0.07%)</title><rect x="3.8026%" y="965" width="0.0689%" height="15" fill="rgb(208,124,10)" fg:x="11197" fg:w="203"/><text x="4.0526%" y="975.50"></text></g><g><title>[unknown] (203 samples, 0.07%)</title><rect x="3.8026%" y="949" width="0.0689%" height="15" fill="rgb(222,33,0)" fg:x="11197" fg:w="203"/><text x="4.0526%" y="959.50"></text></g><g><title>[unknown] (201 samples, 0.07%)</title><rect x="3.8032%" y="933" width="0.0683%" height="15" fill="rgb(234,209,28)" fg:x="11199" fg:w="201"/><text x="4.0532%" y="943.50"></text></g><g><title>[unknown] (182 samples, 0.06%)</title><rect x="3.8097%" y="917" width="0.0618%" height="15" fill="rgb(224,11,23)" fg:x="11218" fg:w="182"/><text x="4.0597%" y="927.50"></text></g><g><title>[unknown] (145 samples, 0.05%)</title><rect x="3.8223%" y="901" width="0.0492%" height="15" fill="rgb(232,99,1)" fg:x="11255" fg:w="145"/><text x="4.0723%" y="911.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="3.8559%" y="885" width="0.0156%" height="15" fill="rgb(237,95,45)" fg:x="11354" fg:w="46"/><text x="4.1059%" y="895.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="3.8603%" y="869" width="0.0112%" height="15" fill="rgb(208,109,11)" fg:x="11367" fg:w="33"/><text x="4.1103%" y="879.50"></text></g><g><title>__lll_lock_wait_private (57 samples, 0.02%)</title><rect x="3.8963%" y="965" width="0.0194%" height="15" fill="rgb(216,190,48)" fg:x="11473" fg:w="57"/><text x="4.1463%" y="975.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="3.8966%" y="949" width="0.0190%" height="15" fill="rgb(251,171,36)" fg:x="11474" fg:w="56"/><text x="4.1466%" y="959.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="3.8970%" y="933" width="0.0187%" height="15" fill="rgb(230,62,22)" fg:x="11475" fg:w="55"/><text x="4.1470%" y="943.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="3.8970%" y="917" width="0.0187%" height="15" fill="rgb(225,114,35)" fg:x="11475" fg:w="55"/><text x="4.1470%" y="927.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="3.8970%" y="901" width="0.0187%" height="15" fill="rgb(215,118,42)" fg:x="11475" fg:w="55"/><text x="4.1470%" y="911.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="3.8973%" y="885" width="0.0183%" height="15" fill="rgb(243,119,21)" fg:x="11476" fg:w="54"/><text x="4.1473%" y="895.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="3.8977%" y="869" width="0.0180%" height="15" fill="rgb(252,177,53)" fg:x="11477" fg:w="53"/><text x="4.1477%" y="879.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="3.8977%" y="853" width="0.0180%" height="15" fill="rgb(237,209,29)" fg:x="11477" fg:w="53"/><text x="4.1477%" y="863.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="3.9007%" y="837" width="0.0149%" height="15" fill="rgb(212,65,23)" fg:x="11486" fg:w="44"/><text x="4.1507%" y="847.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="3.9017%" y="821" width="0.0139%" height="15" fill="rgb(230,222,46)" fg:x="11489" fg:w="41"/><text x="4.1517%" y="831.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="3.9048%" y="805" width="0.0109%" height="15" fill="rgb(215,135,32)" fg:x="11498" fg:w="32"/><text x="4.1548%" y="815.50"></text></g><g><title>_dl_allocate_tls (151 samples, 0.05%)</title><rect x="3.8715%" y="1013" width="0.0513%" height="15" fill="rgb(246,101,22)" fg:x="11400" fg:w="151"/><text x="4.1215%" y="1023.50"></text></g><g><title>[ld-linux-x86-64.so.2] (150 samples, 0.05%)</title><rect x="3.8718%" y="997" width="0.0509%" height="15" fill="rgb(206,107,13)" fg:x="11401" fg:w="150"/><text x="4.1218%" y="1007.50"></text></g><g><title>__libc_calloc (134 samples, 0.05%)</title><rect x="3.8773%" y="981" width="0.0455%" height="15" fill="rgb(250,100,44)" fg:x="11417" fg:w="134"/><text x="4.1273%" y="991.50"></text></g><g><title>[ld-linux-x86-64.so.2] (30 samples, 0.01%)</title><rect x="3.9326%" y="997" width="0.0102%" height="15" fill="rgb(231,147,38)" fg:x="11580" fg:w="30"/><text x="4.1826%" y="1007.50"></text></g><g><title>pthread_mutex_lock (39 samples, 0.01%)</title><rect x="3.9513%" y="997" width="0.0132%" height="15" fill="rgb(229,8,40)" fg:x="11635" fg:w="39"/><text x="4.2013%" y="1007.50"></text></g><g><title>pthread_create (1,368 samples, 0.46%)</title><rect x="3.5017%" y="1029" width="0.4646%" height="15" fill="rgb(221,135,30)" fg:x="10311" fg:w="1368"/><text x="3.7517%" y="1039.50"></text></g><g><title>_dl_allocate_tls_init (128 samples, 0.04%)</title><rect x="3.9228%" y="1013" width="0.0435%" height="15" fill="rgb(249,193,18)" fg:x="11551" fg:w="128"/><text x="4.1728%" y="1023.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1,440 samples, 0.49%)</title><rect x="3.4786%" y="1045" width="0.4890%" height="15" fill="rgb(209,133,39)" fg:x="10243" fg:w="1440"/><text x="3.7286%" y="1055.50"></text></g><g><title>__lll_lock_wait_private (33 samples, 0.01%)</title><rect x="3.9931%" y="901" width="0.0112%" height="15" fill="rgb(232,100,14)" fg:x="11758" fg:w="33"/><text x="4.2431%" y="911.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="3.9931%" y="885" width="0.0112%" height="15" fill="rgb(224,185,1)" fg:x="11758" fg:w="33"/><text x="4.2431%" y="895.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="3.9938%" y="869" width="0.0105%" height="15" fill="rgb(223,139,8)" fg:x="11760" fg:w="31"/><text x="4.2438%" y="879.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="3.9938%" y="853" width="0.0105%" height="15" fill="rgb(232,213,38)" fg:x="11760" fg:w="31"/><text x="4.2438%" y="863.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="3.9941%" y="837" width="0.0102%" height="15" fill="rgb(207,94,22)" fg:x="11761" fg:w="30"/><text x="4.2441%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit::{{closure}} (124 samples, 0.04%)</title><rect x="3.9680%" y="981" width="0.0421%" height="15" fill="rgb(219,183,54)" fg:x="11684" fg:w="124"/><text x="4.2180%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (124 samples, 0.04%)</title><rect x="3.9680%" y="965" width="0.0421%" height="15" fill="rgb(216,185,54)" fg:x="11684" fg:w="124"/><text x="4.2180%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (124 samples, 0.04%)</title><rect x="3.9680%" y="949" width="0.0421%" height="15" fill="rgb(254,217,39)" fg:x="11684" fg:w="124"/><text x="4.2180%" y="959.50"></text></g><g><title>alloc::alloc::alloc (124 samples, 0.04%)</title><rect x="3.9680%" y="933" width="0.0421%" height="15" fill="rgb(240,178,23)" fg:x="11684" fg:w="124"/><text x="4.2180%" y="943.50"></text></g><g><title>malloc (121 samples, 0.04%)</title><rect x="3.9690%" y="917" width="0.0411%" height="15" fill="rgb(218,11,47)" fg:x="11687" fg:w="121"/><text x="4.2190%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (129 samples, 0.04%)</title><rect x="3.9680%" y="1029" width="0.0438%" height="15" fill="rgb(218,51,51)" fg:x="11684" fg:w="129"/><text x="4.2180%" y="1039.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (129 samples, 0.04%)</title><rect x="3.9680%" y="1013" width="0.0438%" height="15" fill="rgb(238,126,27)" fg:x="11684" fg:w="129"/><text x="4.2180%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (129 samples, 0.04%)</title><rect x="3.9680%" y="997" width="0.0438%" height="15" fill="rgb(249,202,22)" fg:x="11684" fg:w="129"/><text x="4.2180%" y="1007.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new (1,810 samples, 0.61%)</title><rect x="3.4062%" y="1125" width="0.6147%" height="15" fill="rgb(254,195,49)" fg:x="10030" fg:w="1810"/><text x="3.6562%" y="1135.50"></text></g><g><title>std::thread::spawn (1,697 samples, 0.58%)</title><rect x="3.4446%" y="1109" width="0.5763%" height="15" fill="rgb(208,123,14)" fg:x="10143" fg:w="1697"/><text x="3.6946%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn (1,695 samples, 0.58%)</title><rect x="3.4453%" y="1093" width="0.5756%" height="15" fill="rgb(224,200,8)" fg:x="10145" fg:w="1695"/><text x="3.6953%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1,695 samples, 0.58%)</title><rect x="3.4453%" y="1077" width="0.5756%" height="15" fill="rgb(217,61,36)" fg:x="10145" fg:w="1695"/><text x="3.6953%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (1,695 samples, 0.58%)</title><rect x="3.4453%" y="1061" width="0.5756%" height="15" fill="rgb(206,35,45)" fg:x="10145" fg:w="1695"/><text x="3.6953%" y="1071.50"></text></g><g><title>std::thread::Thread::new (157 samples, 0.05%)</title><rect x="3.9676%" y="1045" width="0.0533%" height="15" fill="rgb(217,65,33)" fg:x="11683" fg:w="157"/><text x="4.2176%" y="1055.50"></text></g><g><title>zenoh_transport::manager::TransportManager::new (1,905 samples, 0.65%)</title><rect x="3.3743%" y="1141" width="0.6469%" height="15" fill="rgb(222,158,48)" fg:x="9936" fg:w="1905"/><text x="3.6243%" y="1151.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (77 samples, 0.03%)</title><rect x="4.0284%" y="1013" width="0.0261%" height="15" fill="rgb(254,2,54)" fg:x="11862" fg:w="77"/><text x="4.2784%" y="1023.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (77 samples, 0.03%)</title><rect x="4.0284%" y="997" width="0.0261%" height="15" fill="rgb(250,143,38)" fg:x="11862" fg:w="77"/><text x="4.2784%" y="1007.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (77 samples, 0.03%)</title><rect x="4.0284%" y="981" width="0.0261%" height="15" fill="rgb(248,25,0)" fg:x="11862" fg:w="77"/><text x="4.2784%" y="991.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_lucas (84 samples, 0.03%)</title><rect x="4.0270%" y="1029" width="0.0285%" height="15" fill="rgb(206,152,27)" fg:x="11858" fg:w="84"/><text x="4.2770%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,046 samples, 1.03%)</title><rect x="3.0242%" y="1189" width="1.0344%" height="15" fill="rgb(240,77,30)" fg:x="8905" fg:w="3046"/><text x="3.2742%" y="1199.50"></text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}} (3,046 samples, 1.03%)</title><rect x="3.0242%" y="1173" width="1.0344%" height="15" fill="rgb(231,5,3)" fg:x="8905" fg:w="3046"/><text x="3.2742%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::build (2,015 samples, 0.68%)</title><rect x="3.3743%" y="1157" width="0.6843%" height="15" fill="rgb(207,226,32)" fg:x="9936" fg:w="2015"/><text x="3.6243%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (110 samples, 0.04%)</title><rect x="4.0213%" y="1141" width="0.0374%" height="15" fill="rgb(222,207,47)" fg:x="11841" fg:w="110"/><text x="4.2713%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (110 samples, 0.04%)</title><rect x="4.0213%" y="1125" width="0.0374%" height="15" fill="rgb(229,115,45)" fg:x="11841" fg:w="110"/><text x="4.2713%" y="1135.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (102 samples, 0.03%)</title><rect x="4.0240%" y="1109" width="0.0346%" height="15" fill="rgb(224,191,6)" fg:x="11849" fg:w="102"/><text x="4.2740%" y="1119.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (102 samples, 0.03%)</title><rect x="4.0240%" y="1093" width="0.0346%" height="15" fill="rgb(230,227,24)" fg:x="11849" fg:w="102"/><text x="4.2740%" y="1103.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (102 samples, 0.03%)</title><rect x="4.0240%" y="1077" width="0.0346%" height="15" fill="rgb(228,80,19)" fg:x="11849" fg:w="102"/><text x="4.2740%" y="1087.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (102 samples, 0.03%)</title><rect x="4.0240%" y="1061" width="0.0346%" height="15" fill="rgb(247,229,0)" fg:x="11849" fg:w="102"/><text x="4.2740%" y="1071.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (96 samples, 0.03%)</title><rect x="4.0260%" y="1045" width="0.0326%" height="15" fill="rgb(237,194,15)" fg:x="11855" fg:w="96"/><text x="4.2760%" y="1055.50"></text></g><g><title>zenoh::session::Session::new::{{closure}} (3,079 samples, 1.05%)</title><rect x="3.0242%" y="1205" width="1.0456%" height="15" fill="rgb(219,203,20)" fg:x="8905" fg:w="3079"/><text x="3.2742%" y="1215.50"></text></g><g><title>zenoh::session::Session::init (33 samples, 0.01%)</title><rect x="4.0586%" y="1189" width="0.0112%" height="15" fill="rgb(234,128,8)" fg:x="11951" fg:w="33"/><text x="4.3086%" y="1199.50"></text></g><g><title>[libc.so.6] (125 samples, 0.04%)</title><rect x="4.1136%" y="693" width="0.0425%" height="15" fill="rgb(248,202,8)" fg:x="12113" fg:w="125"/><text x="4.3636%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (200 samples, 0.07%)</title><rect x="4.0889%" y="805" width="0.0679%" height="15" fill="rgb(206,104,37)" fg:x="12040" fg:w="200"/><text x="4.3389%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (177 samples, 0.06%)</title><rect x="4.0967%" y="789" width="0.0601%" height="15" fill="rgb(223,8,27)" fg:x="12063" fg:w="177"/><text x="4.3467%" y="799.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx::{{closure}} (176 samples, 0.06%)</title><rect x="4.0970%" y="773" width="0.0598%" height="15" fill="rgb(216,217,28)" fg:x="12064" fg:w="176"/><text x="4.3470%" y="783.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (162 samples, 0.06%)</title><rect x="4.1018%" y="757" width="0.0550%" height="15" fill="rgb(249,199,1)" fg:x="12078" fg:w="162"/><text x="4.3518%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (160 samples, 0.05%)</title><rect x="4.1024%" y="741" width="0.0543%" height="15" fill="rgb(240,85,17)" fg:x="12080" fg:w="160"/><text x="4.3524%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (160 samples, 0.05%)</title><rect x="4.1024%" y="725" width="0.0543%" height="15" fill="rgb(206,108,45)" fg:x="12080" fg:w="160"/><text x="4.3524%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (160 samples, 0.05%)</title><rect x="4.1024%" y="709" width="0.0543%" height="15" fill="rgb(245,210,41)" fg:x="12080" fg:w="160"/><text x="4.3524%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (203 samples, 0.07%)</title><rect x="4.0889%" y="821" width="0.0689%" height="15" fill="rgb(206,13,37)" fg:x="12040" fg:w="203"/><text x="4.3389%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (206 samples, 0.07%)</title><rect x="4.0889%" y="901" width="0.0700%" height="15" fill="rgb(250,61,18)" fg:x="12040" fg:w="206"/><text x="4.3389%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (206 samples, 0.07%)</title><rect x="4.0889%" y="885" width="0.0700%" height="15" fill="rgb(235,172,48)" fg:x="12040" fg:w="206"/><text x="4.3389%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (206 samples, 0.07%)</title><rect x="4.0889%" y="869" width="0.0700%" height="15" fill="rgb(249,201,17)" fg:x="12040" fg:w="206"/><text x="4.3389%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (206 samples, 0.07%)</title><rect x="4.0889%" y="853" width="0.0700%" height="15" fill="rgb(219,208,6)" fg:x="12040" fg:w="206"/><text x="4.3389%" y="863.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (206 samples, 0.07%)</title><rect x="4.0889%" y="837" width="0.0700%" height="15" fill="rgb(248,31,23)" fg:x="12040" fg:w="206"/><text x="4.3389%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (211 samples, 0.07%)</title><rect x="4.0889%" y="933" width="0.0717%" height="15" fill="rgb(245,15,42)" fg:x="12040" fg:w="211"/><text x="4.3389%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (211 samples, 0.07%)</title><rect x="4.0889%" y="917" width="0.0717%" height="15" fill="rgb(222,217,39)" fg:x="12040" fg:w="211"/><text x="4.3389%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (237 samples, 0.08%)</title><rect x="4.0889%" y="997" width="0.0805%" height="15" fill="rgb(210,219,27)" fg:x="12040" fg:w="237"/><text x="4.3389%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (237 samples, 0.08%)</title><rect x="4.0889%" y="981" width="0.0805%" height="15" fill="rgb(252,166,36)" fg:x="12040" fg:w="237"/><text x="4.3389%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (237 samples, 0.08%)</title><rect x="4.0889%" y="965" width="0.0805%" height="15" fill="rgb(245,132,34)" fg:x="12040" fg:w="237"/><text x="4.3389%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (237 samples, 0.08%)</title><rect x="4.0889%" y="949" width="0.0805%" height="15" fill="rgb(236,54,3)" fg:x="12040" fg:w="237"/><text x="4.3389%" y="959.50"></text></g><g><title>getifaddrs (63 samples, 0.02%)</title><rect x="4.1744%" y="869" width="0.0214%" height="15" fill="rgb(241,173,43)" fg:x="12292" fg:w="63"/><text x="4.4244%" y="879.50"></text></g><g><title>[libc.so.6] (63 samples, 0.02%)</title><rect x="4.1744%" y="853" width="0.0214%" height="15" fill="rgb(215,190,9)" fg:x="12292" fg:w="63"/><text x="4.4244%" y="863.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (365 samples, 0.12%)</title><rect x="4.0756%" y="1029" width="0.1240%" height="15" fill="rgb(242,101,16)" fg:x="12001" fg:w="365"/><text x="4.3256%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (342 samples, 0.12%)</title><rect x="4.0834%" y="1013" width="0.1161%" height="15" fill="rgb(223,190,21)" fg:x="12024" fg:w="342"/><text x="4.3334%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (89 samples, 0.03%)</title><rect x="4.1693%" y="997" width="0.0302%" height="15" fill="rgb(215,228,25)" fg:x="12277" fg:w="89"/><text x="4.4193%" y="1007.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (89 samples, 0.03%)</title><rect x="4.1693%" y="981" width="0.0302%" height="15" fill="rgb(225,36,22)" fg:x="12277" fg:w="89"/><text x="4.4193%" y="991.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (89 samples, 0.03%)</title><rect x="4.1693%" y="965" width="0.0302%" height="15" fill="rgb(251,106,46)" fg:x="12277" fg:w="89"/><text x="4.4193%" y="975.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (89 samples, 0.03%)</title><rect x="4.1693%" y="949" width="0.0302%" height="15" fill="rgb(208,90,1)" fg:x="12277" fg:w="89"/><text x="4.4193%" y="959.50"></text></g><g><title>zenoh_util::net::get_local_addresses (80 samples, 0.03%)</title><rect x="4.1724%" y="933" width="0.0272%" height="15" fill="rgb(243,10,4)" fg:x="12286" fg:w="80"/><text x="4.4224%" y="943.50"></text></g><g><title>pnet_datalink::interfaces (80 samples, 0.03%)</title><rect x="4.1724%" y="917" width="0.0272%" height="15" fill="rgb(212,137,27)" fg:x="12286" fg:w="80"/><text x="4.4224%" y="927.50"></text></g><g><title>pnet_datalink::backend::interfaces (80 samples, 0.03%)</title><rect x="4.1724%" y="901" width="0.0272%" height="15" fill="rgb(231,220,49)" fg:x="12286" fg:w="80"/><text x="4.4224%" y="911.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (80 samples, 0.03%)</title><rect x="4.1724%" y="885" width="0.0272%" height="15" fill="rgb(237,96,20)" fg:x="12286" fg:w="80"/><text x="4.4224%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (407 samples, 0.14%)</title><rect x="4.0756%" y="1045" width="0.1382%" height="15" fill="rgb(239,229,30)" fg:x="12001" fg:w="407"/><text x="4.3256%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (42 samples, 0.01%)</title><rect x="4.1996%" y="1029" width="0.0143%" height="15" fill="rgb(219,65,33)" fg:x="12366" fg:w="42"/><text x="4.4496%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (42 samples, 0.01%)</title><rect x="4.1996%" y="1013" width="0.0143%" height="15" fill="rgb(243,134,7)" fg:x="12366" fg:w="42"/><text x="4.4496%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (42 samples, 0.01%)</title><rect x="4.1996%" y="997" width="0.0143%" height="15" fill="rgb(216,177,54)" fg:x="12366" fg:w="42"/><text x="4.4496%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (42 samples, 0.01%)</title><rect x="4.1996%" y="981" width="0.0143%" height="15" fill="rgb(211,160,20)" fg:x="12366" fg:w="42"/><text x="4.4496%" y="991.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (42 samples, 0.01%)</title><rect x="4.1996%" y="965" width="0.0143%" height="15" fill="rgb(239,85,39)" fg:x="12366" fg:w="42"/><text x="4.4496%" y="975.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (42 samples, 0.01%)</title><rect x="4.1996%" y="949" width="0.0143%" height="15" fill="rgb(232,125,22)" fg:x="12366" fg:w="42"/><text x="4.4496%" y="959.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (34 samples, 0.01%)</title><rect x="4.2023%" y="933" width="0.0115%" height="15" fill="rgb(244,57,34)" fg:x="12374" fg:w="34"/><text x="4.4523%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (34 samples, 0.01%)</title><rect x="4.2023%" y="917" width="0.0115%" height="15" fill="rgb(214,203,32)" fg:x="12374" fg:w="34"/><text x="4.4523%" y="927.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (34 samples, 0.01%)</title><rect x="4.2023%" y="901" width="0.0115%" height="15" fill="rgb(207,58,43)" fg:x="12374" fg:w="34"/><text x="4.4523%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (34 samples, 0.01%)</title><rect x="4.2023%" y="885" width="0.0115%" height="15" fill="rgb(215,193,15)" fg:x="12374" fg:w="34"/><text x="4.4523%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (31 samples, 0.01%)</title><rect x="4.2267%" y="901" width="0.0105%" height="15" fill="rgb(232,15,44)" fg:x="12446" fg:w="31"/><text x="4.4767%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (33 samples, 0.01%)</title><rect x="4.2267%" y="917" width="0.0112%" height="15" fill="rgb(212,3,48)" fg:x="12446" fg:w="33"/><text x="4.4767%" y="927.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (41 samples, 0.01%)</title><rect x="4.2244%" y="933" width="0.0139%" height="15" fill="rgb(218,128,7)" fg:x="12439" fg:w="41"/><text x="4.4744%" y="943.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (480 samples, 0.16%)</title><rect x="4.0756%" y="1093" width="0.1630%" height="15" fill="rgb(226,216,39)" fg:x="12001" fg:w="480"/><text x="4.3256%" y="1103.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (480 samples, 0.16%)</title><rect x="4.0756%" y="1077" width="0.1630%" height="15" fill="rgb(243,47,51)" fg:x="12001" fg:w="480"/><text x="4.3256%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (480 samples, 0.16%)</title><rect x="4.0756%" y="1061" width="0.1630%" height="15" fill="rgb(241,183,40)" fg:x="12001" fg:w="480"/><text x="4.3256%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (73 samples, 0.02%)</title><rect x="4.2138%" y="1045" width="0.0248%" height="15" fill="rgb(231,217,32)" fg:x="12408" fg:w="73"/><text x="4.4638%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (67 samples, 0.02%)</title><rect x="4.2159%" y="1029" width="0.0228%" height="15" fill="rgb(229,61,38)" fg:x="12414" fg:w="67"/><text x="4.4659%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (67 samples, 0.02%)</title><rect x="4.2159%" y="1013" width="0.0228%" height="15" fill="rgb(225,210,5)" fg:x="12414" fg:w="67"/><text x="4.4659%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (67 samples, 0.02%)</title><rect x="4.2159%" y="997" width="0.0228%" height="15" fill="rgb(231,79,45)" fg:x="12414" fg:w="67"/><text x="4.4659%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (67 samples, 0.02%)</title><rect x="4.2159%" y="981" width="0.0228%" height="15" fill="rgb(224,100,7)" fg:x="12414" fg:w="67"/><text x="4.4659%" y="991.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (67 samples, 0.02%)</title><rect x="4.2159%" y="965" width="0.0228%" height="15" fill="rgb(241,198,18)" fg:x="12414" fg:w="67"/><text x="4.4659%" y="975.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (67 samples, 0.02%)</title><rect x="4.2159%" y="949" width="0.0228%" height="15" fill="rgb(252,97,53)" fg:x="12414" fg:w="67"/><text x="4.4659%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (30 samples, 0.01%)</title><rect x="4.2417%" y="1029" width="0.0102%" height="15" fill="rgb(220,88,7)" fg:x="12490" fg:w="30"/><text x="4.4917%" y="1039.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (556 samples, 0.19%)</title><rect x="4.0729%" y="1205" width="0.1888%" height="15" fill="rgb(213,176,14)" fg:x="11993" fg:w="556"/><text x="4.3229%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (556 samples, 0.19%)</title><rect x="4.0729%" y="1189" width="0.1888%" height="15" fill="rgb(246,73,7)" fg:x="11993" fg:w="556"/><text x="4.3229%" y="1199.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (556 samples, 0.19%)</title><rect x="4.0729%" y="1173" width="0.1888%" height="15" fill="rgb(245,64,36)" fg:x="11993" fg:w="556"/><text x="4.3229%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (556 samples, 0.19%)</title><rect x="4.0729%" y="1157" width="0.1888%" height="15" fill="rgb(245,80,10)" fg:x="11993" fg:w="556"/><text x="4.3229%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (556 samples, 0.19%)</title><rect x="4.0729%" y="1141" width="0.1888%" height="15" fill="rgb(232,107,50)" fg:x="11993" fg:w="556"/><text x="4.3229%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (556 samples, 0.19%)</title><rect x="4.0729%" y="1125" width="0.1888%" height="15" fill="rgb(253,3,0)" fg:x="11993" fg:w="556"/><text x="4.3229%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (548 samples, 0.19%)</title><rect x="4.0756%" y="1109" width="0.1861%" height="15" fill="rgb(212,99,53)" fg:x="12001" fg:w="548"/><text x="4.3256%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (68 samples, 0.02%)</title><rect x="4.2386%" y="1093" width="0.0231%" height="15" fill="rgb(249,111,54)" fg:x="12481" fg:w="68"/><text x="4.4886%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (68 samples, 0.02%)</title><rect x="4.2386%" y="1077" width="0.0231%" height="15" fill="rgb(249,55,30)" fg:x="12481" fg:w="68"/><text x="4.4886%" y="1087.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::spawn (68 samples, 0.02%)</title><rect x="4.2386%" y="1061" width="0.0231%" height="15" fill="rgb(237,47,42)" fg:x="12481" fg:w="68"/><text x="4.4886%" y="1071.50"></text></g><g><title>async_executor::Executor::spawn (68 samples, 0.02%)</title><rect x="4.2386%" y="1045" width="0.0231%" height="15" fill="rgb(211,20,18)" fg:x="12481" fg:w="68"/><text x="4.4886%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (144 samples, 0.05%)</title><rect x="4.2709%" y="709" width="0.0489%" height="15" fill="rgb(231,203,46)" fg:x="12576" fg:w="144"/><text x="4.5209%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (122 samples, 0.04%)</title><rect x="4.2784%" y="693" width="0.0414%" height="15" fill="rgb(237,142,3)" fg:x="12598" fg:w="122"/><text x="4.5284%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (122 samples, 0.04%)</title><rect x="4.2784%" y="677" width="0.0414%" height="15" fill="rgb(241,107,1)" fg:x="12598" fg:w="122"/><text x="4.5284%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (122 samples, 0.04%)</title><rect x="4.2784%" y="661" width="0.0414%" height="15" fill="rgb(229,83,13)" fg:x="12598" fg:w="122"/><text x="4.5284%" y="671.50"></text></g><g><title>alloc::alloc::alloc (122 samples, 0.04%)</title><rect x="4.2784%" y="645" width="0.0414%" height="15" fill="rgb(241,91,40)" fg:x="12598" fg:w="122"/><text x="4.5284%" y="655.50"></text></g><g><title>malloc (103 samples, 0.03%)</title><rect x="4.2848%" y="629" width="0.0350%" height="15" fill="rgb(225,3,45)" fg:x="12617" fg:w="103"/><text x="4.5348%" y="639.50"></text></g><g><title>[libc.so.6] (62 samples, 0.02%)</title><rect x="4.3242%" y="677" width="0.0211%" height="15" fill="rgb(244,223,14)" fg:x="12733" fg:w="62"/><text x="4.5742%" y="687.50"></text></g><g><title>[libc.so.6] (91 samples, 0.03%)</title><rect x="4.5293%" y="501" width="0.0309%" height="15" fill="rgb(224,124,37)" fg:x="13337" fg:w="91"/><text x="4.7793%" y="511.50"></text></g><g><title>[libc.so.6] (463 samples, 0.16%)</title><rect x="4.4057%" y="533" width="0.1572%" height="15" fill="rgb(251,171,30)" fg:x="12973" fg:w="463"/><text x="4.6557%" y="543.50"></text></g><g><title>[libc.so.6] (427 samples, 0.15%)</title><rect x="4.4179%" y="517" width="0.1450%" height="15" fill="rgb(236,46,54)" fg:x="13009" fg:w="427"/><text x="4.6679%" y="527.50"></text></g><g><title>[libc.so.6] (587 samples, 0.20%)</title><rect x="4.3731%" y="549" width="0.1993%" height="15" fill="rgb(245,213,5)" fg:x="12877" fg:w="587"/><text x="4.6231%" y="559.50"></text></g><g><title>__rdl_alloc (662 samples, 0.22%)</title><rect x="4.3487%" y="613" width="0.2248%" height="15" fill="rgb(230,144,27)" fg:x="12805" fg:w="662"/><text x="4.5987%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (641 samples, 0.22%)</title><rect x="4.3558%" y="597" width="0.2177%" height="15" fill="rgb(220,86,6)" fg:x="12826" fg:w="641"/><text x="4.6058%" y="607.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (641 samples, 0.22%)</title><rect x="4.3558%" y="581" width="0.2177%" height="15" fill="rgb(240,20,13)" fg:x="12826" fg:w="641"/><text x="4.6058%" y="591.50"></text></g><g><title>posix_memalign (637 samples, 0.22%)</title><rect x="4.3571%" y="565" width="0.2163%" height="15" fill="rgb(217,89,34)" fg:x="12830" fg:w="637"/><text x="4.6071%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (755 samples, 0.26%)</title><rect x="4.3239%" y="693" width="0.2564%" height="15" fill="rgb(229,13,5)" fg:x="12732" fg:w="755"/><text x="4.5739%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (692 samples, 0.24%)</title><rect x="4.3453%" y="677" width="0.2350%" height="15" fill="rgb(244,67,35)" fg:x="12795" fg:w="692"/><text x="4.5953%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (692 samples, 0.24%)</title><rect x="4.3453%" y="661" width="0.2350%" height="15" fill="rgb(221,40,2)" fg:x="12795" fg:w="692"/><text x="4.5953%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (692 samples, 0.24%)</title><rect x="4.3453%" y="645" width="0.2350%" height="15" fill="rgb(237,157,21)" fg:x="12795" fg:w="692"/><text x="4.5953%" y="655.50"></text></g><g><title>alloc::alloc::alloc (692 samples, 0.24%)</title><rect x="4.3453%" y="629" width="0.2350%" height="15" fill="rgb(222,94,11)" fg:x="12795" fg:w="692"/><text x="4.5953%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (46 samples, 0.02%)</title><rect x="4.8825%" y="661" width="0.0156%" height="15" fill="rgb(249,113,6)" fg:x="14377" fg:w="46"/><text x="5.1325%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,200 samples, 0.41%)</title><rect x="4.5908%" y="677" width="0.4075%" height="15" fill="rgb(238,137,36)" fg:x="13518" fg:w="1200"/><text x="4.8408%" y="687.50"></text></g><g><title>core::ptr::write (295 samples, 0.10%)</title><rect x="4.8981%" y="661" width="0.1002%" height="15" fill="rgb(210,102,26)" fg:x="14423" fg:w="295"/><text x="5.1481%" y="671.50"></text></g><g><title>[unknown] (215 samples, 0.07%)</title><rect x="4.9253%" y="645" width="0.0730%" height="15" fill="rgb(218,30,30)" fg:x="14503" fg:w="215"/><text x="5.1753%" y="655.50"></text></g><g><title>[unknown] (213 samples, 0.07%)</title><rect x="4.9260%" y="629" width="0.0723%" height="15" fill="rgb(214,67,26)" fg:x="14505" fg:w="213"/><text x="5.1760%" y="639.50"></text></g><g><title>[unknown] (208 samples, 0.07%)</title><rect x="4.9277%" y="613" width="0.0706%" height="15" fill="rgb(251,9,53)" fg:x="14510" fg:w="208"/><text x="5.1777%" y="623.50"></text></g><g><title>[unknown] (203 samples, 0.07%)</title><rect x="4.9294%" y="597" width="0.0689%" height="15" fill="rgb(228,204,25)" fg:x="14515" fg:w="203"/><text x="5.1794%" y="607.50"></text></g><g><title>[unknown] (147 samples, 0.05%)</title><rect x="4.9484%" y="581" width="0.0499%" height="15" fill="rgb(207,153,8)" fg:x="14571" fg:w="147"/><text x="5.1984%" y="591.50"></text></g><g><title>[unknown] (100 samples, 0.03%)</title><rect x="4.9644%" y="565" width="0.0340%" height="15" fill="rgb(242,9,16)" fg:x="14618" fg:w="100"/><text x="5.2144%" y="575.50"></text></g><g><title>[unknown] (85 samples, 0.03%)</title><rect x="4.9695%" y="549" width="0.0289%" height="15" fill="rgb(217,211,10)" fg:x="14633" fg:w="85"/><text x="5.2195%" y="559.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="4.9742%" y="533" width="0.0241%" height="15" fill="rgb(219,228,52)" fg:x="14647" fg:w="71"/><text x="5.2242%" y="543.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="4.9820%" y="517" width="0.0163%" height="15" fill="rgb(231,92,29)" fg:x="14670" fg:w="48"/><text x="5.2320%" y="527.50"></text></g><g><title>[unknown] (456 samples, 0.15%)</title><rect x="5.0564%" y="517" width="0.1549%" height="15" fill="rgb(232,8,23)" fg:x="14889" fg:w="456"/><text x="5.3064%" y="527.50"></text></g><g><title>[unknown] (433 samples, 0.15%)</title><rect x="5.0642%" y="501" width="0.1470%" height="15" fill="rgb(216,211,34)" fg:x="14912" fg:w="433"/><text x="5.3142%" y="511.50"></text></g><g><title>[unknown] (413 samples, 0.14%)</title><rect x="5.0710%" y="485" width="0.1403%" height="15" fill="rgb(236,151,0)" fg:x="14932" fg:w="413"/><text x="5.3210%" y="495.50"></text></g><g><title>[unknown] (397 samples, 0.13%)</title><rect x="5.0764%" y="469" width="0.1348%" height="15" fill="rgb(209,168,3)" fg:x="14948" fg:w="397"/><text x="5.3264%" y="479.50"></text></g><g><title>[unknown] (270 samples, 0.09%)</title><rect x="5.1196%" y="453" width="0.0917%" height="15" fill="rgb(208,129,28)" fg:x="15075" fg:w="270"/><text x="5.3696%" y="463.50"></text></g><g><title>[unknown] (152 samples, 0.05%)</title><rect x="5.1596%" y="437" width="0.0516%" height="15" fill="rgb(229,78,22)" fg:x="15193" fg:w="152"/><text x="5.4096%" y="447.50"></text></g><g><title>[unknown] (77 samples, 0.03%)</title><rect x="5.1851%" y="421" width="0.0261%" height="15" fill="rgb(228,187,13)" fg:x="15268" fg:w="77"/><text x="5.4351%" y="431.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="5.1895%" y="405" width="0.0217%" height="15" fill="rgb(240,119,24)" fg:x="15281" fg:w="64"/><text x="5.4395%" y="415.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="5.1960%" y="389" width="0.0153%" height="15" fill="rgb(209,194,42)" fg:x="15300" fg:w="45"/><text x="5.4460%" y="399.50"></text></g><g><title>[libc.so.6] (669 samples, 0.23%)</title><rect x="5.0272%" y="533" width="0.2272%" height="15" fill="rgb(247,200,46)" fg:x="14803" fg:w="669"/><text x="5.2772%" y="543.50"></text></g><g><title>__mprotect (127 samples, 0.04%)</title><rect x="5.2113%" y="517" width="0.0431%" height="15" fill="rgb(218,76,16)" fg:x="15345" fg:w="127"/><text x="5.4613%" y="527.50"></text></g><g><title>[unknown] (127 samples, 0.04%)</title><rect x="5.2113%" y="501" width="0.0431%" height="15" fill="rgb(225,21,48)" fg:x="15345" fg:w="127"/><text x="5.4613%" y="511.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="5.2174%" y="485" width="0.0370%" height="15" fill="rgb(239,223,50)" fg:x="15363" fg:w="109"/><text x="5.4674%" y="495.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="5.2191%" y="469" width="0.0353%" height="15" fill="rgb(244,45,21)" fg:x="15368" fg:w="104"/><text x="5.4691%" y="479.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="5.2201%" y="453" width="0.0343%" height="15" fill="rgb(232,33,43)" fg:x="15371" fg:w="101"/><text x="5.4701%" y="463.50"></text></g><g><title>[unknown] (92 samples, 0.03%)</title><rect x="5.2231%" y="437" width="0.0312%" height="15" fill="rgb(209,8,3)" fg:x="15380" fg:w="92"/><text x="5.4731%" y="447.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="5.2323%" y="421" width="0.0221%" height="15" fill="rgb(214,25,53)" fg:x="15407" fg:w="65"/><text x="5.4823%" y="431.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="5.2422%" y="405" width="0.0122%" height="15" fill="rgb(254,186,54)" fg:x="15436" fg:w="36"/><text x="5.4922%" y="415.50"></text></g><g><title>[libc.so.6] (735 samples, 0.25%)</title><rect x="5.0058%" y="549" width="0.2496%" height="15" fill="rgb(208,174,49)" fg:x="14740" fg:w="735"/><text x="5.2558%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (853 samples, 0.29%)</title><rect x="4.9983%" y="677" width="0.2897%" height="15" fill="rgb(233,191,51)" fg:x="14718" fg:w="853"/><text x="5.2483%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (853 samples, 0.29%)</title><rect x="4.9983%" y="661" width="0.2897%" height="15" fill="rgb(222,134,10)" fg:x="14718" fg:w="853"/><text x="5.2483%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (853 samples, 0.29%)</title><rect x="4.9983%" y="645" width="0.2897%" height="15" fill="rgb(230,226,20)" fg:x="14718" fg:w="853"/><text x="5.2483%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (853 samples, 0.29%)</title><rect x="4.9983%" y="629" width="0.2897%" height="15" fill="rgb(251,111,25)" fg:x="14718" fg:w="853"/><text x="5.2483%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (853 samples, 0.29%)</title><rect x="4.9983%" y="613" width="0.2897%" height="15" fill="rgb(224,40,46)" fg:x="14718" fg:w="853"/><text x="5.2483%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (853 samples, 0.29%)</title><rect x="4.9983%" y="597" width="0.2897%" height="15" fill="rgb(236,108,47)" fg:x="14718" fg:w="853"/><text x="5.2483%" y="607.50"></text></g><g><title>alloc::alloc::alloc (852 samples, 0.29%)</title><rect x="4.9987%" y="581" width="0.2893%" height="15" fill="rgb(234,93,0)" fg:x="14719" fg:w="852"/><text x="5.2487%" y="591.50"></text></g><g><title>malloc (838 samples, 0.28%)</title><rect x="5.0034%" y="565" width="0.2846%" height="15" fill="rgb(224,213,32)" fg:x="14733" fg:w="838"/><text x="5.2534%" y="575.50"></text></g><g><title>__lll_lock_wake_private (93 samples, 0.03%)</title><rect x="5.2564%" y="549" width="0.0316%" height="15" fill="rgb(251,11,48)" fg:x="15478" fg:w="93"/><text x="5.5064%" y="559.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="5.2564%" y="533" width="0.0316%" height="15" fill="rgb(236,173,5)" fg:x="15478" fg:w="93"/><text x="5.5064%" y="543.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="5.2574%" y="517" width="0.0306%" height="15" fill="rgb(230,95,12)" fg:x="15481" fg:w="90"/><text x="5.5074%" y="527.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="5.2574%" y="501" width="0.0306%" height="15" fill="rgb(232,209,1)" fg:x="15481" fg:w="90"/><text x="5.5074%" y="511.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="5.2581%" y="485" width="0.0299%" height="15" fill="rgb(232,6,1)" fg:x="15483" fg:w="88"/><text x="5.5081%" y="495.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="5.2598%" y="469" width="0.0282%" height="15" fill="rgb(210,224,50)" fg:x="15488" fg:w="83"/><text x="5.5098%" y="479.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="5.2659%" y="453" width="0.0221%" height="15" fill="rgb(228,127,35)" fg:x="15506" fg:w="65"/><text x="5.5159%" y="463.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="5.2710%" y="437" width="0.0170%" height="15" fill="rgb(245,102,45)" fg:x="15521" fg:w="50"/><text x="5.5210%" y="447.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="5.2734%" y="421" width="0.0146%" height="15" fill="rgb(214,1,49)" fg:x="15528" fg:w="43"/><text x="5.5234%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (87 samples, 0.03%)</title><rect x="5.2880%" y="677" width="0.0295%" height="15" fill="rgb(226,163,40)" fg:x="15571" fg:w="87"/><text x="5.5380%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (87 samples, 0.03%)</title><rect x="5.2880%" y="661" width="0.0295%" height="15" fill="rgb(239,212,28)" fg:x="15571" fg:w="87"/><text x="5.5380%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (62 samples, 0.02%)</title><rect x="5.2965%" y="645" width="0.0211%" height="15" fill="rgb(220,20,13)" fg:x="15596" fg:w="62"/><text x="5.5465%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (2,928 samples, 0.99%)</title><rect x="4.3235%" y="709" width="0.9944%" height="15" fill="rgb(210,164,35)" fg:x="12731" fg:w="2928"/><text x="4.5735%" y="719.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (2,172 samples, 0.74%)</title><rect x="4.5803%" y="693" width="0.7376%" height="15" fill="rgb(248,109,41)" fg:x="13487" fg:w="2172"/><text x="4.8303%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (36 samples, 0.01%)</title><rect x="5.3179%" y="709" width="0.0122%" height="15" fill="rgb(238,23,50)" fg:x="15659" fg:w="36"/><text x="5.5679%" y="719.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="5.3179%" y="693" width="0.0122%" height="15" fill="rgb(211,48,49)" fg:x="15659" fg:w="36"/><text x="5.5679%" y="703.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (36 samples, 0.01%)</title><rect x="5.3179%" y="677" width="0.0122%" height="15" fill="rgb(223,36,21)" fg:x="15659" fg:w="36"/><text x="5.5679%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (36 samples, 0.01%)</title><rect x="5.3179%" y="661" width="0.0122%" height="15" fill="rgb(207,123,46)" fg:x="15659" fg:w="36"/><text x="5.5679%" y="671.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (3,171 samples, 1.08%)</title><rect x="4.2617%" y="1125" width="1.0769%" height="15" fill="rgb(240,218,32)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3,171 samples, 1.08%)</title><rect x="4.2617%" y="1109" width="1.0769%" height="15" fill="rgb(252,5,43)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (3,171 samples, 1.08%)</title><rect x="4.2617%" y="1093" width="1.0769%" height="15" fill="rgb(252,84,19)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1103.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,171 samples, 1.08%)</title><rect x="4.2617%" y="1077" width="1.0769%" height="15" fill="rgb(243,152,39)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1087.50"></text></g><g><title>async_std::task::block_on::block_on (3,171 samples, 1.08%)</title><rect x="4.2617%" y="1061" width="1.0769%" height="15" fill="rgb(234,160,15)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1071.50"></text></g><g><title>async_std::task::builder::Builder::blocking (3,171 samples, 1.08%)</title><rect x="4.2617%" y="1045" width="1.0769%" height="15" fill="rgb(237,34,20)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,171 samples, 1.08%)</title><rect x="4.2617%" y="1029" width="1.0769%" height="15" fill="rgb(229,97,13)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,171 samples, 1.08%)</title><rect x="4.2617%" y="1013" width="1.0769%" height="15" fill="rgb(234,71,50)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1023.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (3,171 samples, 1.08%)</title><rect x="4.2617%" y="997" width="1.0769%" height="15" fill="rgb(253,155,4)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,171 samples, 1.08%)</title><rect x="4.2617%" y="981" width="1.0769%" height="15" fill="rgb(222,185,37)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,171 samples, 1.08%)</title><rect x="4.2617%" y="965" width="1.0769%" height="15" fill="rgb(251,177,13)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,171 samples, 1.08%)</title><rect x="4.2617%" y="949" width="1.0769%" height="15" fill="rgb(250,179,40)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,171 samples, 1.08%)</title><rect x="4.2617%" y="933" width="1.0769%" height="15" fill="rgb(242,44,2)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="943.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (3,171 samples, 1.08%)</title><rect x="4.2617%" y="917" width="1.0769%" height="15" fill="rgb(216,177,13)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="927.50"></text></g><g><title>async_global_executor::executor::block_on (3,171 samples, 1.08%)</title><rect x="4.2617%" y="901" width="1.0769%" height="15" fill="rgb(216,106,43)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,171 samples, 1.08%)</title><rect x="4.2617%" y="885" width="1.0769%" height="15" fill="rgb(216,183,2)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,171 samples, 1.08%)</title><rect x="4.2617%" y="869" width="1.0769%" height="15" fill="rgb(249,75,3)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="879.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (3,171 samples, 1.08%)</title><rect x="4.2617%" y="853" width="1.0769%" height="15" fill="rgb(219,67,39)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="863.50"></text></g><g><title>async_global_executor::reactor::block_on (3,171 samples, 1.08%)</title><rect x="4.2617%" y="837" width="1.0769%" height="15" fill="rgb(253,228,2)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="847.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,171 samples, 1.08%)</title><rect x="4.2617%" y="821" width="1.0769%" height="15" fill="rgb(235,138,27)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="831.50"></text></g><g><title>async_io::driver::block_on (3,171 samples, 1.08%)</title><rect x="4.2617%" y="805" width="1.0769%" height="15" fill="rgb(236,97,51)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,171 samples, 1.08%)</title><rect x="4.2617%" y="789" width="1.0769%" height="15" fill="rgb(240,80,30)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="799.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (3,171 samples, 1.08%)</title><rect x="4.2617%" y="773" width="1.0769%" height="15" fill="rgb(230,178,19)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,171 samples, 1.08%)</title><rect x="4.2617%" y="757" width="1.0769%" height="15" fill="rgb(210,190,27)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (3,171 samples, 1.08%)</title><rect x="4.2617%" y="741" width="1.0769%" height="15" fill="rgb(222,107,31)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="751.50"></text></g><g><title>async_executor::Runner::new (3,171 samples, 1.08%)</title><rect x="4.2617%" y="725" width="1.0769%" height="15" fill="rgb(216,127,34)" fg:x="12549" fg:w="3171"/><text x="4.5117%" y="735.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (41 samples, 0.01%)</title><rect x="5.3566%" y="949" width="0.0139%" height="15" fill="rgb(234,116,52)" fg:x="15773" fg:w="41"/><text x="5.6066%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (32 samples, 0.01%)</title><rect x="5.3597%" y="933" width="0.0109%" height="15" fill="rgb(222,124,15)" fg:x="15782" fg:w="32"/><text x="5.6097%" y="943.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (33 samples, 0.01%)</title><rect x="5.3773%" y="917" width="0.0112%" height="15" fill="rgb(231,179,28)" fg:x="15834" fg:w="33"/><text x="5.6273%" y="927.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (148 samples, 0.05%)</title><rect x="5.3396%" y="997" width="0.0503%" height="15" fill="rgb(226,93,45)" fg:x="15723" fg:w="148"/><text x="5.5896%" y="1007.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (148 samples, 0.05%)</title><rect x="5.3396%" y="981" width="0.0503%" height="15" fill="rgb(215,8,51)" fg:x="15723" fg:w="148"/><text x="5.5896%" y="991.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (122 samples, 0.04%)</title><rect x="5.3485%" y="965" width="0.0414%" height="15" fill="rgb(223,106,5)" fg:x="15749" fg:w="122"/><text x="5.5985%" y="975.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (50 samples, 0.02%)</title><rect x="5.3729%" y="949" width="0.0170%" height="15" fill="rgb(250,191,5)" fg:x="15821" fg:w="50"/><text x="5.6229%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (50 samples, 0.02%)</title><rect x="5.3729%" y="933" width="0.0170%" height="15" fill="rgb(242,132,44)" fg:x="15821" fg:w="50"/><text x="5.6229%" y="943.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (156 samples, 0.05%)</title><rect x="5.3393%" y="1029" width="0.0530%" height="15" fill="rgb(251,152,29)" fg:x="15722" fg:w="156"/><text x="5.5893%" y="1039.50"></text></g><g><title>zenoh::net::routing::queries::declare_peer_queryable (155 samples, 0.05%)</title><rect x="5.3396%" y="1013" width="0.0526%" height="15" fill="rgb(218,179,5)" fg:x="15723" fg:w="155"/><text x="5.5896%" y="1023.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (36 samples, 0.01%)</title><rect x="5.3984%" y="965" width="0.0122%" height="15" fill="rgb(227,67,19)" fg:x="15896" fg:w="36"/><text x="5.6484%" y="975.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (135 samples, 0.05%)</title><rect x="5.3923%" y="1029" width="0.0458%" height="15" fill="rgb(233,119,31)" fg:x="15878" fg:w="135"/><text x="5.6423%" y="1039.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (129 samples, 0.04%)</title><rect x="5.3943%" y="1013" width="0.0438%" height="15" fill="rgb(241,120,22)" fg:x="15884" fg:w="129"/><text x="5.6443%" y="1023.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_matches_routes (117 samples, 0.04%)</title><rect x="5.3984%" y="997" width="0.0397%" height="15" fill="rgb(224,102,30)" fg:x="15896" fg:w="117"/><text x="5.6484%" y="1007.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_routes (117 samples, 0.04%)</title><rect x="5.3984%" y="981" width="0.0397%" height="15" fill="rgb(210,164,37)" fg:x="15896" fg:w="117"/><text x="5.6484%" y="991.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (81 samples, 0.03%)</title><rect x="5.4106%" y="965" width="0.0275%" height="15" fill="rgb(226,191,16)" fg:x="15932" fg:w="81"/><text x="5.6606%" y="975.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (51 samples, 0.02%)</title><rect x="5.4208%" y="949" width="0.0173%" height="15" fill="rgb(214,40,45)" fg:x="15962" fg:w="51"/><text x="5.6708%" y="959.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (330 samples, 0.11%)</title><rect x="5.3386%" y="1045" width="0.1121%" height="15" fill="rgb(244,29,26)" fg:x="15720" fg:w="330"/><text x="5.5886%" y="1055.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_subscriber (37 samples, 0.01%)</title><rect x="5.4381%" y="1029" width="0.0126%" height="15" fill="rgb(216,16,5)" fg:x="16013" fg:w="37"/><text x="5.6881%" y="1039.50"></text></g><g><title>zenoh::net::routing::pubsub::declare_peer_subscription (37 samples, 0.01%)</title><rect x="5.4381%" y="1013" width="0.0126%" height="15" fill="rgb(249,76,35)" fg:x="16013" fg:w="37"/><text x="5.6881%" y="1023.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_matches_data_routes (37 samples, 0.01%)</title><rect x="5.4381%" y="997" width="0.0126%" height="15" fill="rgb(207,11,44)" fg:x="16013" fg:w="37"/><text x="5.6881%" y="1007.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (37 samples, 0.01%)</title><rect x="5.4381%" y="981" width="0.0126%" height="15" fill="rgb(228,190,49)" fg:x="16013" fg:w="37"/><text x="5.6881%" y="991.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (3,512 samples, 1.19%)</title><rect x="4.2617%" y="1205" width="1.1927%" height="15" fill="rgb(214,173,12)" fg:x="12549" fg:w="3512"/><text x="4.5117%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,512 samples, 1.19%)</title><rect x="4.2617%" y="1189" width="1.1927%" height="15" fill="rgb(218,26,35)" fg:x="12549" fg:w="3512"/><text x="4.5117%" y="1199.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (3,512 samples, 1.19%)</title><rect x="4.2617%" y="1173" width="1.1927%" height="15" fill="rgb(220,200,19)" fg:x="12549" fg:w="3512"/><text x="4.5117%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,512 samples, 1.19%)</title><rect x="4.2617%" y="1157" width="1.1927%" height="15" fill="rgb(239,95,49)" fg:x="12549" fg:w="3512"/><text x="4.5117%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (3,512 samples, 1.19%)</title><rect x="4.2617%" y="1141" width="1.1927%" height="15" fill="rgb(235,85,53)" fg:x="12549" fg:w="3512"/><text x="4.5117%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (341 samples, 0.12%)</title><rect x="5.3386%" y="1125" width="0.1158%" height="15" fill="rgb(233,133,31)" fg:x="15720" fg:w="341"/><text x="5.5886%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (341 samples, 0.12%)</title><rect x="5.3386%" y="1109" width="0.1158%" height="15" fill="rgb(218,25,20)" fg:x="15720" fg:w="341"/><text x="5.5886%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (341 samples, 0.12%)</title><rect x="5.3386%" y="1093" width="0.1158%" height="15" fill="rgb(252,210,38)" fg:x="15720" fg:w="341"/><text x="5.5886%" y="1103.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (341 samples, 0.12%)</title><rect x="5.3386%" y="1077" width="0.1158%" height="15" fill="rgb(242,134,21)" fg:x="15720" fg:w="341"/><text x="5.5886%" y="1087.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (341 samples, 0.12%)</title><rect x="5.3386%" y="1061" width="0.1158%" height="15" fill="rgb(213,28,48)" fg:x="15720" fg:w="341"/><text x="5.5886%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (35 samples, 0.01%)</title><rect x="5.4578%" y="1125" width="0.0119%" height="15" fill="rgb(250,196,2)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (35 samples, 0.01%)</title><rect x="5.4578%" y="1109" width="0.0119%" height="15" fill="rgb(227,5,17)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.01%)</title><rect x="5.4578%" y="1093" width="0.0119%" height="15" fill="rgb(221,226,24)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1103.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (35 samples, 0.01%)</title><rect x="5.4578%" y="1077" width="0.0119%" height="15" fill="rgb(211,5,48)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1087.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (35 samples, 0.01%)</title><rect x="5.4578%" y="1061" width="0.0119%" height="15" fill="rgb(219,150,6)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1071.50"></text></g><g><title>rsa::pkcs1v15::decrypt (35 samples, 0.01%)</title><rect x="5.4578%" y="1045" width="0.0119%" height="15" fill="rgb(251,46,16)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1055.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (35 samples, 0.01%)</title><rect x="5.4578%" y="1029" width="0.0119%" height="15" fill="rgb(220,204,40)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1039.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (35 samples, 0.01%)</title><rect x="5.4578%" y="1013" width="0.0119%" height="15" fill="rgb(211,85,2)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1023.50"></text></g><g><title>rsa::internals::decrypt_and_check (35 samples, 0.01%)</title><rect x="5.4578%" y="997" width="0.0119%" height="15" fill="rgb(229,17,7)" fg:x="16071" fg:w="35"/><text x="5.7078%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.01%)</title><rect x="5.4704%" y="1029" width="0.0122%" height="15" fill="rgb(239,72,28)" fg:x="16108" fg:w="36"/><text x="5.7204%" y="1039.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (85 samples, 0.03%)</title><rect x="5.4850%" y="933" width="0.0289%" height="15" fill="rgb(230,47,54)" fg:x="16151" fg:w="85"/><text x="5.7350%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (78 samples, 0.03%)</title><rect x="5.4874%" y="917" width="0.0265%" height="15" fill="rgb(214,50,8)" fg:x="16158" fg:w="78"/><text x="5.7374%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (58 samples, 0.02%)</title><rect x="5.4941%" y="901" width="0.0197%" height="15" fill="rgb(216,198,43)" fg:x="16178" fg:w="58"/><text x="5.7441%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.02%)</title><rect x="5.4941%" y="885" width="0.0197%" height="15" fill="rgb(234,20,35)" fg:x="16178" fg:w="58"/><text x="5.7441%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.02%)</title><rect x="5.4941%" y="869" width="0.0197%" height="15" fill="rgb(254,45,19)" fg:x="16178" fg:w="58"/><text x="5.7441%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.02%)</title><rect x="5.4941%" y="853" width="0.0197%" height="15" fill="rgb(219,14,44)" fg:x="16178" fg:w="58"/><text x="5.7441%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (34 samples, 0.01%)</title><rect x="5.5023%" y="837" width="0.0115%" height="15" fill="rgb(217,220,26)" fg:x="16202" fg:w="34"/><text x="5.7523%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.01%)</title><rect x="5.5023%" y="821" width="0.0115%" height="15" fill="rgb(213,158,28)" fg:x="16202" fg:w="34"/><text x="5.7523%" y="831.50"></text></g><g><title>[libc.so.6] (34 samples, 0.01%)</title><rect x="5.5023%" y="805" width="0.0115%" height="15" fill="rgb(252,51,52)" fg:x="16202" fg:w="34"/><text x="5.7523%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (106 samples, 0.04%)</title><rect x="5.4840%" y="1013" width="0.0360%" height="15" fill="rgb(246,89,16)" fg:x="16148" fg:w="106"/><text x="5.7340%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (103 samples, 0.03%)</title><rect x="5.4850%" y="997" width="0.0350%" height="15" fill="rgb(216,158,49)" fg:x="16151" fg:w="103"/><text x="5.7350%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (103 samples, 0.03%)</title><rect x="5.4850%" y="981" width="0.0350%" height="15" fill="rgb(236,107,19)" fg:x="16151" fg:w="103"/><text x="5.7350%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (103 samples, 0.03%)</title><rect x="5.4850%" y="965" width="0.0350%" height="15" fill="rgb(228,185,30)" fg:x="16151" fg:w="103"/><text x="5.7350%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (103 samples, 0.03%)</title><rect x="5.4850%" y="949" width="0.0350%" height="15" fill="rgb(246,134,8)" fg:x="16151" fg:w="103"/><text x="5.7350%" y="959.50"></text></g><g><title>[libc.so.6] (188 samples, 0.06%)</title><rect x="5.5590%" y="709" width="0.0638%" height="15" fill="rgb(214,143,50)" fg:x="16369" fg:w="188"/><text x="5.8090%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (287 samples, 0.10%)</title><rect x="5.5264%" y="821" width="0.0975%" height="15" fill="rgb(228,75,8)" fg:x="16273" fg:w="287"/><text x="5.7764%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (248 samples, 0.08%)</title><rect x="5.5397%" y="805" width="0.0842%" height="15" fill="rgb(207,175,4)" fg:x="16312" fg:w="248"/><text x="5.7897%" y="815.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx::{{closure}} (246 samples, 0.08%)</title><rect x="5.5403%" y="789" width="0.0835%" height="15" fill="rgb(205,108,24)" fg:x="16314" fg:w="246"/><text x="5.7903%" y="799.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (223 samples, 0.08%)</title><rect x="5.5481%" y="773" width="0.0757%" height="15" fill="rgb(244,120,49)" fg:x="16337" fg:w="223"/><text x="5.7981%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (222 samples, 0.08%)</title><rect x="5.5485%" y="757" width="0.0754%" height="15" fill="rgb(223,47,38)" fg:x="16338" fg:w="222"/><text x="5.7985%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (222 samples, 0.08%)</title><rect x="5.5485%" y="741" width="0.0754%" height="15" fill="rgb(229,179,11)" fg:x="16338" fg:w="222"/><text x="5.7985%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (222 samples, 0.08%)</title><rect x="5.5485%" y="725" width="0.0754%" height="15" fill="rgb(231,122,1)" fg:x="16338" fg:w="222"/><text x="5.7985%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (302 samples, 0.10%)</title><rect x="5.5244%" y="917" width="0.1026%" height="15" fill="rgb(245,119,9)" fg:x="16267" fg:w="302"/><text x="5.7744%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (301 samples, 0.10%)</title><rect x="5.5247%" y="901" width="0.1022%" height="15" fill="rgb(241,163,25)" fg:x="16268" fg:w="301"/><text x="5.7747%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (301 samples, 0.10%)</title><rect x="5.5247%" y="885" width="0.1022%" height="15" fill="rgb(217,214,3)" fg:x="16268" fg:w="301"/><text x="5.7747%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (298 samples, 0.10%)</title><rect x="5.5257%" y="869" width="0.1012%" height="15" fill="rgb(240,86,28)" fg:x="16271" fg:w="298"/><text x="5.7757%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (296 samples, 0.10%)</title><rect x="5.5264%" y="853" width="0.1005%" height="15" fill="rgb(215,47,9)" fg:x="16273" fg:w="296"/><text x="5.7764%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (296 samples, 0.10%)</title><rect x="5.5264%" y="837" width="0.1005%" height="15" fill="rgb(252,25,45)" fg:x="16273" fg:w="296"/><text x="5.7764%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (318 samples, 0.11%)</title><rect x="5.5237%" y="949" width="0.1080%" height="15" fill="rgb(251,164,9)" fg:x="16265" fg:w="318"/><text x="5.7737%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (318 samples, 0.11%)</title><rect x="5.5237%" y="933" width="0.1080%" height="15" fill="rgb(233,194,0)" fg:x="16265" fg:w="318"/><text x="5.7737%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (366 samples, 0.12%)</title><rect x="5.5213%" y="1013" width="0.1243%" height="15" fill="rgb(249,111,24)" fg:x="16258" fg:w="366"/><text x="5.7713%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (366 samples, 0.12%)</title><rect x="5.5213%" y="997" width="0.1243%" height="15" fill="rgb(250,223,3)" fg:x="16258" fg:w="366"/><text x="5.7713%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (366 samples, 0.12%)</title><rect x="5.5213%" y="981" width="0.1243%" height="15" fill="rgb(236,178,37)" fg:x="16258" fg:w="366"/><text x="5.7713%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (362 samples, 0.12%)</title><rect x="5.5227%" y="965" width="0.1229%" height="15" fill="rgb(241,158,50)" fg:x="16262" fg:w="362"/><text x="5.7727%" y="975.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (50 samples, 0.02%)</title><rect x="5.6463%" y="965" width="0.0170%" height="15" fill="rgb(213,121,41)" fg:x="16626" fg:w="50"/><text x="5.8963%" y="975.50"></text></g><g><title>zenoh_util::net::get_local_addresses (42 samples, 0.01%)</title><rect x="5.6490%" y="949" width="0.0143%" height="15" fill="rgb(240,92,3)" fg:x="16634" fg:w="42"/><text x="5.8990%" y="959.50"></text></g><g><title>pnet_datalink::interfaces (41 samples, 0.01%)</title><rect x="5.6493%" y="933" width="0.0139%" height="15" fill="rgb(205,123,3)" fg:x="16635" fg:w="41"/><text x="5.8993%" y="943.50"></text></g><g><title>pnet_datalink::backend::interfaces (40 samples, 0.01%)</title><rect x="5.6497%" y="917" width="0.0136%" height="15" fill="rgb(205,97,47)" fg:x="16636" fg:w="40"/><text x="5.8997%" y="927.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (40 samples, 0.01%)</title><rect x="5.6497%" y="901" width="0.0136%" height="15" fill="rgb(247,152,14)" fg:x="16636" fg:w="40"/><text x="5.8997%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (572 samples, 0.19%)</title><rect x="5.4697%" y="1045" width="0.1943%" height="15" fill="rgb(248,195,53)" fg:x="16106" fg:w="572"/><text x="5.7197%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (534 samples, 0.18%)</title><rect x="5.4826%" y="1029" width="0.1813%" height="15" fill="rgb(226,201,16)" fg:x="16144" fg:w="534"/><text x="5.7326%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (54 samples, 0.02%)</title><rect x="5.6456%" y="1013" width="0.0183%" height="15" fill="rgb(205,98,0)" fg:x="16624" fg:w="54"/><text x="5.8956%" y="1023.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (54 samples, 0.02%)</title><rect x="5.6456%" y="997" width="0.0183%" height="15" fill="rgb(214,191,48)" fg:x="16624" fg:w="54"/><text x="5.8956%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (54 samples, 0.02%)</title><rect x="5.6456%" y="981" width="0.0183%" height="15" fill="rgb(237,112,39)" fg:x="16624" fg:w="54"/><text x="5.8956%" y="991.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (33 samples, 0.01%)</title><rect x="5.6728%" y="885" width="0.0112%" height="15" fill="rgb(247,203,27)" fg:x="16704" fg:w="33"/><text x="5.9228%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (662 samples, 0.22%)</title><rect x="5.4697%" y="1061" width="0.2248%" height="15" fill="rgb(235,124,28)" fg:x="16106" fg:w="662"/><text x="5.7197%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (90 samples, 0.03%)</title><rect x="5.6639%" y="1045" width="0.0306%" height="15" fill="rgb(208,207,46)" fg:x="16678" fg:w="90"/><text x="5.9139%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (90 samples, 0.03%)</title><rect x="5.6639%" y="1029" width="0.0306%" height="15" fill="rgb(234,176,4)" fg:x="16678" fg:w="90"/><text x="5.9139%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (90 samples, 0.03%)</title><rect x="5.6639%" y="1013" width="0.0306%" height="15" fill="rgb(230,133,28)" fg:x="16678" fg:w="90"/><text x="5.9139%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (90 samples, 0.03%)</title><rect x="5.6639%" y="997" width="0.0306%" height="15" fill="rgb(211,137,40)" fg:x="16678" fg:w="90"/><text x="5.9139%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (89 samples, 0.03%)</title><rect x="5.6643%" y="981" width="0.0302%" height="15" fill="rgb(254,35,13)" fg:x="16679" fg:w="89"/><text x="5.9143%" y="991.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (86 samples, 0.03%)</title><rect x="5.6653%" y="965" width="0.0292%" height="15" fill="rgb(225,49,51)" fg:x="16682" fg:w="86"/><text x="5.9153%" y="975.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (69 samples, 0.02%)</title><rect x="5.6711%" y="949" width="0.0234%" height="15" fill="rgb(251,10,15)" fg:x="16699" fg:w="69"/><text x="5.9211%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (68 samples, 0.02%)</title><rect x="5.6714%" y="933" width="0.0231%" height="15" fill="rgb(228,207,15)" fg:x="16700" fg:w="68"/><text x="5.9214%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (68 samples, 0.02%)</title><rect x="5.6714%" y="917" width="0.0231%" height="15" fill="rgb(241,99,19)" fg:x="16700" fg:w="68"/><text x="5.9214%" y="927.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (67 samples, 0.02%)</title><rect x="5.6718%" y="901" width="0.0228%" height="15" fill="rgb(207,104,49)" fg:x="16701" fg:w="67"/><text x="5.9218%" y="911.50"></text></g><g><title>getifaddrs (83 samples, 0.03%)</title><rect x="5.7081%" y="885" width="0.0282%" height="15" fill="rgb(234,99,18)" fg:x="16808" fg:w="83"/><text x="5.9581%" y="895.50"></text></g><g><title>[libc.so.6] (82 samples, 0.03%)</title><rect x="5.7084%" y="869" width="0.0278%" height="15" fill="rgb(213,191,49)" fg:x="16809" fg:w="82"/><text x="5.9584%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (130 samples, 0.04%)</title><rect x="5.6976%" y="1045" width="0.0441%" height="15" fill="rgb(210,226,19)" fg:x="16777" fg:w="130"/><text x="5.9476%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (130 samples, 0.04%)</title><rect x="5.6976%" y="1029" width="0.0441%" height="15" fill="rgb(229,97,18)" fg:x="16777" fg:w="130"/><text x="5.9476%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (130 samples, 0.04%)</title><rect x="5.6976%" y="1013" width="0.0441%" height="15" fill="rgb(211,167,15)" fg:x="16777" fg:w="130"/><text x="5.9476%" y="1023.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (130 samples, 0.04%)</title><rect x="5.6976%" y="997" width="0.0441%" height="15" fill="rgb(210,169,34)" fg:x="16777" fg:w="130"/><text x="5.9476%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (130 samples, 0.04%)</title><rect x="5.6976%" y="981" width="0.0441%" height="15" fill="rgb(241,121,31)" fg:x="16777" fg:w="130"/><text x="5.9476%" y="991.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (130 samples, 0.04%)</title><rect x="5.6976%" y="965" width="0.0441%" height="15" fill="rgb(232,40,11)" fg:x="16777" fg:w="130"/><text x="5.9476%" y="975.50"></text></g><g><title>zenoh_util::net::get_local_addresses (122 samples, 0.04%)</title><rect x="5.7003%" y="949" width="0.0414%" height="15" fill="rgb(205,86,26)" fg:x="16785" fg:w="122"/><text x="5.9503%" y="959.50"></text></g><g><title>pnet_datalink::interfaces (119 samples, 0.04%)</title><rect x="5.7013%" y="933" width="0.0404%" height="15" fill="rgb(231,126,28)" fg:x="16788" fg:w="119"/><text x="5.9513%" y="943.50"></text></g><g><title>pnet_datalink::backend::interfaces (119 samples, 0.04%)</title><rect x="5.7013%" y="917" width="0.0404%" height="15" fill="rgb(219,221,18)" fg:x="16788" fg:w="119"/><text x="5.9513%" y="927.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (119 samples, 0.04%)</title><rect x="5.7013%" y="901" width="0.0404%" height="15" fill="rgb(211,40,0)" fg:x="16788" fg:w="119"/><text x="5.9513%" y="911.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (33 samples, 0.01%)</title><rect x="5.7533%" y="949" width="0.0112%" height="15" fill="rgb(239,85,43)" fg:x="16941" fg:w="33"/><text x="6.0033%" y="959.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (33 samples, 0.01%)</title><rect x="5.7533%" y="933" width="0.0112%" height="15" fill="rgb(231,55,21)" fg:x="16941" fg:w="33"/><text x="6.0033%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (47 samples, 0.02%)</title><rect x="5.7685%" y="933" width="0.0160%" height="15" fill="rgb(225,184,43)" fg:x="16986" fg:w="47"/><text x="6.0185%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (45 samples, 0.02%)</title><rect x="5.7692%" y="917" width="0.0153%" height="15" fill="rgb(251,158,41)" fg:x="16988" fg:w="45"/><text x="6.0192%" y="927.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (41 samples, 0.01%)</title><rect x="5.7706%" y="901" width="0.0139%" height="15" fill="rgb(234,159,37)" fg:x="16992" fg:w="41"/><text x="6.0206%" y="911.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (61 samples, 0.02%)</title><rect x="5.7655%" y="949" width="0.0207%" height="15" fill="rgb(216,204,22)" fg:x="16977" fg:w="61"/><text x="6.0155%" y="959.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (935 samples, 0.32%)</title><rect x="5.4697%" y="1109" width="0.3175%" height="15" fill="rgb(214,17,3)" fg:x="16106" fg:w="935"/><text x="5.7197%" y="1119.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (935 samples, 0.32%)</title><rect x="5.4697%" y="1093" width="0.3175%" height="15" fill="rgb(212,111,17)" fg:x="16106" fg:w="935"/><text x="5.7197%" y="1103.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (935 samples, 0.32%)</title><rect x="5.4697%" y="1077" width="0.3175%" height="15" fill="rgb(221,157,24)" fg:x="16106" fg:w="935"/><text x="5.7197%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (273 samples, 0.09%)</title><rect x="5.6945%" y="1061" width="0.0927%" height="15" fill="rgb(252,16,13)" fg:x="16768" fg:w="273"/><text x="5.9445%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (134 samples, 0.05%)</title><rect x="5.7417%" y="1045" width="0.0455%" height="15" fill="rgb(221,62,2)" fg:x="16907" fg:w="134"/><text x="5.9917%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (134 samples, 0.05%)</title><rect x="5.7417%" y="1029" width="0.0455%" height="15" fill="rgb(247,87,22)" fg:x="16907" fg:w="134"/><text x="5.9917%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (134 samples, 0.05%)</title><rect x="5.7417%" y="1013" width="0.0455%" height="15" fill="rgb(215,73,9)" fg:x="16907" fg:w="134"/><text x="5.9917%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (134 samples, 0.05%)</title><rect x="5.7417%" y="997" width="0.0455%" height="15" fill="rgb(207,175,33)" fg:x="16907" fg:w="134"/><text x="5.9917%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (134 samples, 0.05%)</title><rect x="5.7417%" y="981" width="0.0455%" height="15" fill="rgb(243,129,54)" fg:x="16907" fg:w="134"/><text x="5.9917%" y="991.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (134 samples, 0.05%)</title><rect x="5.7417%" y="965" width="0.0455%" height="15" fill="rgb(227,119,45)" fg:x="16907" fg:w="134"/><text x="5.9917%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12,918 samples, 4.39%)</title><rect x="1.4097%" y="1221" width="4.3870%" height="15" fill="rgb(205,109,36)" fg:x="4151" fg:w="12918"/><text x="1.6597%" y="1231.50">&lt;core..</text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (1,008 samples, 0.34%)</title><rect x="5.4544%" y="1205" width="0.3423%" height="15" fill="rgb(205,6,39)" fg:x="16061" fg:w="1008"/><text x="5.7044%" y="1215.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,008 samples, 0.34%)</title><rect x="5.4544%" y="1189" width="0.3423%" height="15" fill="rgb(221,32,16)" fg:x="16061" fg:w="1008"/><text x="5.7044%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,008 samples, 0.34%)</title><rect x="5.4544%" y="1173" width="0.3423%" height="15" fill="rgb(228,144,50)" fg:x="16061" fg:w="1008"/><text x="5.7044%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (1,008 samples, 0.34%)</title><rect x="5.4544%" y="1157" width="0.3423%" height="15" fill="rgb(229,201,53)" fg:x="16061" fg:w="1008"/><text x="5.7044%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,008 samples, 0.34%)</title><rect x="5.4544%" y="1141" width="0.3423%" height="15" fill="rgb(249,153,27)" fg:x="16061" fg:w="1008"/><text x="5.7044%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (963 samples, 0.33%)</title><rect x="5.4697%" y="1125" width="0.3270%" height="15" fill="rgb(227,106,25)" fg:x="16106" fg:w="963"/><text x="5.7197%" y="1135.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="5.7998%" y="1221" width="0.0129%" height="15" fill="rgb(230,65,29)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="5.7998%" y="1205" width="0.0129%" height="15" fill="rgb(221,57,46)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (38 samples, 0.01%)</title><rect x="5.7998%" y="1189" width="0.0129%" height="15" fill="rgb(229,161,17)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="5.7998%" y="1173" width="0.0129%" height="15" fill="rgb(222,213,11)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1183.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (38 samples, 0.01%)</title><rect x="5.7998%" y="1157" width="0.0129%" height="15" fill="rgb(235,35,13)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="5.7998%" y="1141" width="0.0129%" height="15" fill="rgb(233,158,34)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1151.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (38 samples, 0.01%)</title><rect x="5.7998%" y="1125" width="0.0129%" height="15" fill="rgb(215,151,48)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="5.7998%" y="1109" width="0.0129%" height="15" fill="rgb(229,84,14)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1119.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (38 samples, 0.01%)</title><rect x="5.7998%" y="1093" width="0.0129%" height="15" fill="rgb(229,68,14)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="5.7998%" y="1077" width="0.0129%" height="15" fill="rgb(243,106,26)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (38 samples, 0.01%)</title><rect x="5.7998%" y="1061" width="0.0129%" height="15" fill="rgb(206,45,38)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="5.7998%" y="1045" width="0.0129%" height="15" fill="rgb(226,6,15)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (38 samples, 0.01%)</title><rect x="5.7998%" y="1029" width="0.0129%" height="15" fill="rgb(232,22,54)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="5.7998%" y="1013" width="0.0129%" height="15" fill="rgb(229,222,32)" fg:x="17078" fg:w="38"/><text x="6.0498%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (64 samples, 0.02%)</title><rect x="5.8915%" y="357" width="0.0217%" height="15" fill="rgb(228,62,29)" fg:x="17348" fg:w="64"/><text x="6.1415%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (57 samples, 0.02%)</title><rect x="5.8939%" y="341" width="0.0194%" height="15" fill="rgb(251,103,34)" fg:x="17355" fg:w="57"/><text x="6.1439%" y="351.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (170 samples, 0.06%)</title><rect x="5.8623%" y="373" width="0.0577%" height="15" fill="rgb(233,12,30)" fg:x="17262" fg:w="170"/><text x="6.1123%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (197 samples, 0.07%)</title><rect x="5.8534%" y="405" width="0.0669%" height="15" fill="rgb(238,52,0)" fg:x="17236" fg:w="197"/><text x="6.1034%" y="415.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (193 samples, 0.07%)</title><rect x="5.8548%" y="389" width="0.0655%" height="15" fill="rgb(223,98,5)" fg:x="17240" fg:w="193"/><text x="6.1048%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (54 samples, 0.02%)</title><rect x="5.9251%" y="341" width="0.0183%" height="15" fill="rgb(228,75,37)" fg:x="17447" fg:w="54"/><text x="6.1751%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.02%)</title><rect x="5.9251%" y="325" width="0.0183%" height="15" fill="rgb(205,115,49)" fg:x="17447" fg:w="54"/><text x="6.1751%" y="335.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.02%)</title><rect x="5.9251%" y="309" width="0.0183%" height="15" fill="rgb(250,154,43)" fg:x="17447" fg:w="54"/><text x="6.1751%" y="319.50"></text></g><g><title>malloc (53 samples, 0.02%)</title><rect x="5.9254%" y="293" width="0.0180%" height="15" fill="rgb(226,43,29)" fg:x="17448" fg:w="53"/><text x="6.1754%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (62 samples, 0.02%)</title><rect x="5.9231%" y="405" width="0.0211%" height="15" fill="rgb(249,228,39)" fg:x="17441" fg:w="62"/><text x="6.1731%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62 samples, 0.02%)</title><rect x="5.9231%" y="389" width="0.0211%" height="15" fill="rgb(216,79,43)" fg:x="17441" fg:w="62"/><text x="6.1731%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (61 samples, 0.02%)</title><rect x="5.9234%" y="373" width="0.0207%" height="15" fill="rgb(228,95,12)" fg:x="17442" fg:w="61"/><text x="6.1734%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (59 samples, 0.02%)</title><rect x="5.9241%" y="357" width="0.0200%" height="15" fill="rgb(249,221,15)" fg:x="17444" fg:w="59"/><text x="6.1741%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (367 samples, 0.12%)</title><rect x="5.8270%" y="421" width="0.1246%" height="15" fill="rgb(233,34,13)" fg:x="17158" fg:w="367"/><text x="6.0770%" y="431.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (385 samples, 0.13%)</title><rect x="5.8266%" y="565" width="0.1307%" height="15" fill="rgb(214,103,39)" fg:x="17157" fg:w="385"/><text x="6.0766%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (385 samples, 0.13%)</title><rect x="5.8266%" y="549" width="0.1307%" height="15" fill="rgb(251,126,39)" fg:x="17157" fg:w="385"/><text x="6.0766%" y="559.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (385 samples, 0.13%)</title><rect x="5.8266%" y="533" width="0.1307%" height="15" fill="rgb(214,216,36)" fg:x="17157" fg:w="385"/><text x="6.0766%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (385 samples, 0.13%)</title><rect x="5.8266%" y="517" width="0.1307%" height="15" fill="rgb(220,221,8)" fg:x="17157" fg:w="385"/><text x="6.0766%" y="527.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (385 samples, 0.13%)</title><rect x="5.8266%" y="501" width="0.1307%" height="15" fill="rgb(240,216,3)" fg:x="17157" fg:w="385"/><text x="6.0766%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (385 samples, 0.13%)</title><rect x="5.8266%" y="485" width="0.1307%" height="15" fill="rgb(232,218,17)" fg:x="17157" fg:w="385"/><text x="6.0766%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (385 samples, 0.13%)</title><rect x="5.8266%" y="469" width="0.1307%" height="15" fill="rgb(229,163,45)" fg:x="17157" fg:w="385"/><text x="6.0766%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (385 samples, 0.13%)</title><rect x="5.8266%" y="453" width="0.1307%" height="15" fill="rgb(231,110,42)" fg:x="17157" fg:w="385"/><text x="6.0766%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (384 samples, 0.13%)</title><rect x="5.8270%" y="437" width="0.1304%" height="15" fill="rgb(208,170,48)" fg:x="17158" fg:w="384"/><text x="6.0770%" y="447.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="5.9608%" y="469" width="0.0160%" height="15" fill="rgb(239,116,25)" fg:x="17552" fg:w="47"/><text x="6.2108%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="5.9608%" y="453" width="0.0160%" height="15" fill="rgb(219,200,50)" fg:x="17552" fg:w="47"/><text x="6.2108%" y="463.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (47 samples, 0.02%)</title><rect x="5.9608%" y="437" width="0.0160%" height="15" fill="rgb(245,200,0)" fg:x="17552" fg:w="47"/><text x="6.2108%" y="447.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (61 samples, 0.02%)</title><rect x="5.9574%" y="485" width="0.0207%" height="15" fill="rgb(245,119,33)" fg:x="17542" fg:w="61"/><text x="6.2074%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (483 samples, 0.16%)</title><rect x="5.8266%" y="581" width="0.1640%" height="15" fill="rgb(231,125,12)" fg:x="17157" fg:w="483"/><text x="6.0766%" y="591.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (98 samples, 0.03%)</title><rect x="5.9574%" y="565" width="0.0333%" height="15" fill="rgb(216,96,41)" fg:x="17542" fg:w="98"/><text x="6.2074%" y="575.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (98 samples, 0.03%)</title><rect x="5.9574%" y="549" width="0.0333%" height="15" fill="rgb(248,43,45)" fg:x="17542" fg:w="98"/><text x="6.2074%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 0.03%)</title><rect x="5.9574%" y="533" width="0.0333%" height="15" fill="rgb(217,222,7)" fg:x="17542" fg:w="98"/><text x="6.2074%" y="543.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (98 samples, 0.03%)</title><rect x="5.9574%" y="517" width="0.0333%" height="15" fill="rgb(233,28,6)" fg:x="17542" fg:w="98"/><text x="6.2074%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 0.03%)</title><rect x="5.9574%" y="501" width="0.0333%" height="15" fill="rgb(231,218,15)" fg:x="17542" fg:w="98"/><text x="6.2074%" y="511.50"></text></g><g><title>&lt;async_io::reactor::Ready&lt;H,T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.02%)</title><rect x="5.9920%" y="277" width="0.0163%" height="15" fill="rgb(226,171,48)" fg:x="17644" fg:w="48"/><text x="6.2420%" y="287.50"></text></g><g><title>&lt;async_io::reactor::Writable&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="5.9920%" y="293" width="0.0166%" height="15" fill="rgb(235,201,9)" fg:x="17644" fg:w="49"/><text x="6.2420%" y="303.50"></text></g><g><title>socket2::socket::Socket::connect (41 samples, 0.01%)</title><rect x="6.0151%" y="277" width="0.0139%" height="15" fill="rgb(217,80,15)" fg:x="17712" fg:w="41"/><text x="6.2651%" y="287.50"></text></g><g><title>socket2::sys::connect (41 samples, 0.01%)</title><rect x="6.0151%" y="261" width="0.0139%" height="15" fill="rgb(219,152,8)" fg:x="17712" fg:w="41"/><text x="6.2651%" y="271.50"></text></g><g><title>connect (37 samples, 0.01%)</title><rect x="6.0165%" y="245" width="0.0126%" height="15" fill="rgb(243,107,38)" fg:x="17716" fg:w="37"/><text x="6.2665%" y="255.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="6.0171%" y="229" width="0.0119%" height="15" fill="rgb(231,17,5)" fg:x="17718" fg:w="35"/><text x="6.2671%" y="239.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="6.0171%" y="213" width="0.0119%" height="15" fill="rgb(209,25,54)" fg:x="17718" fg:w="35"/><text x="6.2671%" y="223.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="6.0171%" y="197" width="0.0119%" height="15" fill="rgb(219,0,2)" fg:x="17718" fg:w="35"/><text x="6.2671%" y="207.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="6.0171%" y="181" width="0.0119%" height="15" fill="rgb(246,9,5)" fg:x="17718" fg:w="35"/><text x="6.2671%" y="191.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="6.0185%" y="165" width="0.0105%" height="15" fill="rgb(226,159,4)" fg:x="17722" fg:w="31"/><text x="6.2685%" y="175.50"></text></g><g><title>socket2::socket::Socket::new (76 samples, 0.03%)</title><rect x="6.0290%" y="277" width="0.0258%" height="15" fill="rgb(219,175,34)" fg:x="17753" fg:w="76"/><text x="6.2790%" y="287.50"></text></g><g><title>socket2::socket::Socket::new_raw (73 samples, 0.02%)</title><rect x="6.0300%" y="261" width="0.0248%" height="15" fill="rgb(236,10,46)" fg:x="17756" fg:w="73"/><text x="6.2800%" y="271.50"></text></g><g><title>socket2::sys::socket (72 samples, 0.02%)</title><rect x="6.0304%" y="245" width="0.0245%" height="15" fill="rgb(240,211,16)" fg:x="17757" fg:w="72"/><text x="6.2804%" y="255.50"></text></g><g><title>__socket (72 samples, 0.02%)</title><rect x="6.0304%" y="229" width="0.0245%" height="15" fill="rgb(205,3,43)" fg:x="17757" fg:w="72"/><text x="6.2804%" y="239.50"></text></g><g><title>[unknown] (69 samples, 0.02%)</title><rect x="6.0314%" y="213" width="0.0234%" height="15" fill="rgb(245,7,22)" fg:x="17760" fg:w="69"/><text x="6.2814%" y="223.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="6.0317%" y="197" width="0.0231%" height="15" fill="rgb(239,132,32)" fg:x="17761" fg:w="68"/><text x="6.2817%" y="207.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="6.0321%" y="181" width="0.0228%" height="15" fill="rgb(228,202,34)" fg:x="17762" fg:w="67"/><text x="6.2821%" y="191.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="6.0334%" y="165" width="0.0214%" height="15" fill="rgb(254,200,22)" fg:x="17766" fg:w="63"/><text x="6.2834%" y="175.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="6.0351%" y="149" width="0.0197%" height="15" fill="rgb(219,10,39)" fg:x="17771" fg:w="58"/><text x="6.2851%" y="159.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="6.0351%" y="133" width="0.0197%" height="15" fill="rgb(226,210,39)" fg:x="17771" fg:w="58"/><text x="6.2851%" y="143.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="6.0389%" y="117" width="0.0160%" height="15" fill="rgb(208,219,16)" fg:x="17782" fg:w="47"/><text x="6.2889%" y="127.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="6.0392%" y="101" width="0.0156%" height="15" fill="rgb(216,158,51)" fg:x="17783" fg:w="46"/><text x="6.2892%" y="111.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="6.0402%" y="85" width="0.0146%" height="15" fill="rgb(233,14,44)" fg:x="17786" fg:w="43"/><text x="6.2902%" y="95.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="6.0426%" y="69" width="0.0122%" height="15" fill="rgb(237,97,39)" fg:x="17793" fg:w="36"/><text x="6.2926%" y="79.50"></text></g><g><title>async_io::connect (121 samples, 0.04%)</title><rect x="6.0141%" y="293" width="0.0411%" height="15" fill="rgb(218,198,43)" fg:x="17709" fg:w="121"/><text x="6.2641%" y="303.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (197 samples, 0.07%)</title><rect x="5.9906%" y="357" width="0.0669%" height="15" fill="rgb(231,104,20)" fg:x="17640" fg:w="197"/><text x="6.2406%" y="367.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (197 samples, 0.07%)</title><rect x="5.9906%" y="341" width="0.0669%" height="15" fill="rgb(254,36,13)" fg:x="17640" fg:w="197"/><text x="6.2406%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (197 samples, 0.07%)</title><rect x="5.9906%" y="325" width="0.0669%" height="15" fill="rgb(248,14,50)" fg:x="17640" fg:w="197"/><text x="6.2406%" y="335.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (197 samples, 0.07%)</title><rect x="5.9906%" y="309" width="0.0669%" height="15" fill="rgb(217,107,29)" fg:x="17640" fg:w="197"/><text x="6.2406%" y="319.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (208 samples, 0.07%)</title><rect x="5.9906%" y="405" width="0.0706%" height="15" fill="rgb(251,169,33)" fg:x="17640" fg:w="208"/><text x="6.2406%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (208 samples, 0.07%)</title><rect x="5.9906%" y="389" width="0.0706%" height="15" fill="rgb(217,108,32)" fg:x="17640" fg:w="208"/><text x="6.2406%" y="399.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (208 samples, 0.07%)</title><rect x="5.9906%" y="373" width="0.0706%" height="15" fill="rgb(219,66,42)" fg:x="17640" fg:w="208"/><text x="6.2406%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (712 samples, 0.24%)</title><rect x="5.8266%" y="1029" width="0.2418%" height="15" fill="rgb(206,180,7)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="1039.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (712 samples, 0.24%)</title><rect x="5.8266%" y="1013" width="0.2418%" height="15" fill="rgb(208,226,31)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (712 samples, 0.24%)</title><rect x="5.8266%" y="997" width="0.2418%" height="15" fill="rgb(218,26,49)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="1007.50"></text></g><g><title>std::panicking::try (712 samples, 0.24%)</title><rect x="5.8266%" y="981" width="0.2418%" height="15" fill="rgb(233,197,48)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="991.50"></text></g><g><title>std::panicking::try::do_call (712 samples, 0.24%)</title><rect x="5.8266%" y="965" width="0.2418%" height="15" fill="rgb(252,181,51)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="975.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (712 samples, 0.24%)</title><rect x="5.8266%" y="949" width="0.2418%" height="15" fill="rgb(253,90,19)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (712 samples, 0.24%)</title><rect x="5.8266%" y="933" width="0.2418%" height="15" fill="rgb(215,171,30)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (712 samples, 0.24%)</title><rect x="5.8266%" y="917" width="0.2418%" height="15" fill="rgb(214,222,9)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="927.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (712 samples, 0.24%)</title><rect x="5.8266%" y="901" width="0.2418%" height="15" fill="rgb(223,3,22)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on (712 samples, 0.24%)</title><rect x="5.8266%" y="885" width="0.2418%" height="15" fill="rgb(225,196,46)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="895.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (712 samples, 0.24%)</title><rect x="5.8266%" y="869" width="0.2418%" height="15" fill="rgb(209,110,37)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="879.50"></text></g><g><title>async_io::driver::block_on (712 samples, 0.24%)</title><rect x="5.8266%" y="853" width="0.2418%" height="15" fill="rgb(249,89,12)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="863.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (712 samples, 0.24%)</title><rect x="5.8266%" y="837" width="0.2418%" height="15" fill="rgb(226,27,33)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (712 samples, 0.24%)</title><rect x="5.8266%" y="821" width="0.2418%" height="15" fill="rgb(213,82,22)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="831.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (712 samples, 0.24%)</title><rect x="5.8266%" y="805" width="0.2418%" height="15" fill="rgb(248,140,0)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="815.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (712 samples, 0.24%)</title><rect x="5.8266%" y="789" width="0.2418%" height="15" fill="rgb(228,106,3)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (712 samples, 0.24%)</title><rect x="5.8266%" y="773" width="0.2418%" height="15" fill="rgb(209,23,37)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (712 samples, 0.24%)</title><rect x="5.8266%" y="757" width="0.2418%" height="15" fill="rgb(241,93,50)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (712 samples, 0.24%)</title><rect x="5.8266%" y="741" width="0.2418%" height="15" fill="rgb(253,46,43)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="751.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (712 samples, 0.24%)</title><rect x="5.8266%" y="725" width="0.2418%" height="15" fill="rgb(226,206,43)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (712 samples, 0.24%)</title><rect x="5.8266%" y="709" width="0.2418%" height="15" fill="rgb(217,54,7)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="719.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (712 samples, 0.24%)</title><rect x="5.8266%" y="693" width="0.2418%" height="15" fill="rgb(223,5,52)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="703.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (712 samples, 0.24%)</title><rect x="5.8266%" y="677" width="0.2418%" height="15" fill="rgb(206,52,46)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (712 samples, 0.24%)</title><rect x="5.8266%" y="661" width="0.2418%" height="15" fill="rgb(253,136,11)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (712 samples, 0.24%)</title><rect x="5.8266%" y="645" width="0.2418%" height="15" fill="rgb(208,106,33)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (712 samples, 0.24%)</title><rect x="5.8266%" y="629" width="0.2418%" height="15" fill="rgb(206,54,4)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (712 samples, 0.24%)</title><rect x="5.8266%" y="613" width="0.2418%" height="15" fill="rgb(213,3,15)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (712 samples, 0.24%)</title><rect x="5.8266%" y="597" width="0.2418%" height="15" fill="rgb(252,211,39)" fg:x="17157" fg:w="712"/><text x="6.0766%" y="607.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (229 samples, 0.08%)</title><rect x="5.9906%" y="581" width="0.0778%" height="15" fill="rgb(223,6,36)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (229 samples, 0.08%)</title><rect x="5.9906%" y="565" width="0.0778%" height="15" fill="rgb(252,169,45)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="575.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (229 samples, 0.08%)</title><rect x="5.9906%" y="549" width="0.0778%" height="15" fill="rgb(212,48,26)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (229 samples, 0.08%)</title><rect x="5.9906%" y="533" width="0.0778%" height="15" fill="rgb(251,102,48)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="543.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (229 samples, 0.08%)</title><rect x="5.9906%" y="517" width="0.0778%" height="15" fill="rgb(243,208,16)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (229 samples, 0.08%)</title><rect x="5.9906%" y="501" width="0.0778%" height="15" fill="rgb(219,96,24)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="511.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (229 samples, 0.08%)</title><rect x="5.9906%" y="485" width="0.0778%" height="15" fill="rgb(219,33,29)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (229 samples, 0.08%)</title><rect x="5.9906%" y="469" width="0.0778%" height="15" fill="rgb(223,176,5)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="479.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (229 samples, 0.08%)</title><rect x="5.9906%" y="453" width="0.0778%" height="15" fill="rgb(228,140,14)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (229 samples, 0.08%)</title><rect x="5.9906%" y="437" width="0.0778%" height="15" fill="rgb(217,179,31)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="447.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (229 samples, 0.08%)</title><rect x="5.9906%" y="421" width="0.0778%" height="15" fill="rgb(230,9,30)" fg:x="17640" fg:w="229"/><text x="6.2406%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (101 samples, 0.03%)</title><rect x="6.0722%" y="341" width="0.0343%" height="15" fill="rgb(230,136,20)" fg:x="17880" fg:w="101"/><text x="6.3222%" y="351.50"></text></g><g><title>cfree (64 samples, 0.02%)</title><rect x="6.1662%" y="325" width="0.0217%" height="15" fill="rgb(215,210,22)" fg:x="18157" fg:w="64"/><text x="6.4162%" y="335.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (40 samples, 0.01%)</title><rect x="6.1880%" y="325" width="0.0136%" height="15" fill="rgb(218,43,5)" fg:x="18221" fg:w="40"/><text x="6.4380%" y="335.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (72 samples, 0.02%)</title><rect x="6.2053%" y="325" width="0.0245%" height="15" fill="rgb(216,11,5)" fg:x="18272" fg:w="72"/><text x="6.4553%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (68 samples, 0.02%)</title><rect x="6.2437%" y="325" width="0.0231%" height="15" fill="rgb(209,82,29)" fg:x="18385" fg:w="68"/><text x="6.4937%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_or (68 samples, 0.02%)</title><rect x="6.2437%" y="309" width="0.0231%" height="15" fill="rgb(244,115,12)" fg:x="18385" fg:w="68"/><text x="6.4937%" y="319.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (683 samples, 0.23%)</title><rect x="6.0722%" y="357" width="0.2320%" height="15" fill="rgb(222,82,18)" fg:x="17880" fg:w="683"/><text x="6.3222%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (582 samples, 0.20%)</title><rect x="6.1065%" y="341" width="0.1977%" height="15" fill="rgb(249,227,8)" fg:x="17981" fg:w="582"/><text x="6.3565%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (110 samples, 0.04%)</title><rect x="6.2667%" y="325" width="0.0374%" height="15" fill="rgb(253,141,45)" fg:x="18453" fg:w="110"/><text x="6.5167%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (110 samples, 0.04%)</title><rect x="6.2667%" y="309" width="0.0374%" height="15" fill="rgb(234,184,4)" fg:x="18453" fg:w="110"/><text x="6.5167%" y="319.50"></text></g><g><title>async_executor::steal (1,273 samples, 0.43%)</title><rect x="6.0722%" y="373" width="0.4323%" height="15" fill="rgb(218,194,23)" fg:x="17880" fg:w="1273"/><text x="6.3222%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (590 samples, 0.20%)</title><rect x="6.3041%" y="357" width="0.2004%" height="15" fill="rgb(235,66,41)" fg:x="18563" fg:w="590"/><text x="6.5541%" y="367.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (590 samples, 0.20%)</title><rect x="6.3041%" y="341" width="0.2004%" height="15" fill="rgb(245,217,1)" fg:x="18563" fg:w="590"/><text x="6.5541%" y="351.50"></text></g><g><title>[libc.so.6] (56 samples, 0.02%)</title><rect x="6.5187%" y="325" width="0.0190%" height="15" fill="rgb(229,91,1)" fg:x="19195" fg:w="56"/><text x="6.7687%" y="335.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (105 samples, 0.04%)</title><rect x="6.5045%" y="373" width="0.0357%" height="15" fill="rgb(207,101,30)" fg:x="19153" fg:w="105"/><text x="6.7545%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (105 samples, 0.04%)</title><rect x="6.5045%" y="357" width="0.0357%" height="15" fill="rgb(223,82,49)" fg:x="19153" fg:w="105"/><text x="6.7545%" y="367.50"></text></g><g><title>cfree (105 samples, 0.04%)</title><rect x="6.5045%" y="341" width="0.0357%" height="15" fill="rgb(218,167,17)" fg:x="19153" fg:w="105"/><text x="6.7545%" y="351.50"></text></g><g><title>fastrand::RNG::__getit (421 samples, 0.14%)</title><rect x="6.5418%" y="325" width="0.1430%" height="15" fill="rgb(208,103,14)" fg:x="19263" fg:w="421"/><text x="6.7918%" y="335.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (283 samples, 0.10%)</title><rect x="6.5887%" y="309" width="0.0961%" height="15" fill="rgb(238,20,8)" fg:x="19401" fg:w="283"/><text x="6.8387%" y="319.50"></text></g><g><title>fastrand::Rng::usize (31 samples, 0.01%)</title><rect x="6.6848%" y="309" width="0.0105%" height="15" fill="rgb(218,80,54)" fg:x="19684" fg:w="31"/><text x="6.9348%" y="319.50"></text></g><g><title>fastrand::usize::{{closure}} (32 samples, 0.01%)</title><rect x="6.6848%" y="325" width="0.0109%" height="15" fill="rgb(240,144,17)" fg:x="19684" fg:w="32"/><text x="6.9348%" y="335.50"></text></g><g><title>fastrand::usize (460 samples, 0.16%)</title><rect x="6.5401%" y="373" width="0.1562%" height="15" fill="rgb(245,27,50)" fg:x="19258" fg:w="460"/><text x="6.7901%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (460 samples, 0.16%)</title><rect x="6.5401%" y="357" width="0.1562%" height="15" fill="rgb(251,51,7)" fg:x="19258" fg:w="460"/><text x="6.7901%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (459 samples, 0.16%)</title><rect x="6.5405%" y="341" width="0.1559%" height="15" fill="rgb(245,217,29)" fg:x="19259" fg:w="459"/><text x="6.7905%" y="351.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,839 samples, 0.62%)</title><rect x="6.0722%" y="389" width="0.6245%" height="15" fill="rgb(221,176,29)" fg:x="17880" fg:w="1839"/><text x="6.3222%" y="399.50"></text></g><g><title>async_io::reactor::Reactor::notify (69 samples, 0.02%)</title><rect x="6.6980%" y="325" width="0.0234%" height="15" fill="rgb(212,180,24)" fg:x="19723" fg:w="69"/><text x="6.9480%" y="335.50"></text></g><g><title>polling::Poller::notify (69 samples, 0.02%)</title><rect x="6.6980%" y="309" width="0.0234%" height="15" fill="rgb(254,24,2)" fg:x="19723" fg:w="69"/><text x="6.9480%" y="319.50"></text></g><g><title>polling::epoll::Poller::notify (60 samples, 0.02%)</title><rect x="6.7011%" y="293" width="0.0204%" height="15" fill="rgb(230,100,2)" fg:x="19732" fg:w="60"/><text x="6.9511%" y="303.50"></text></g><g><title>write (60 samples, 0.02%)</title><rect x="6.7011%" y="277" width="0.0204%" height="15" fill="rgb(219,142,25)" fg:x="19732" fg:w="60"/><text x="6.9511%" y="287.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="6.7025%" y="261" width="0.0190%" height="15" fill="rgb(240,73,43)" fg:x="19736" fg:w="56"/><text x="6.9525%" y="271.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="6.7025%" y="245" width="0.0190%" height="15" fill="rgb(214,114,15)" fg:x="19736" fg:w="56"/><text x="6.9525%" y="255.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="6.7025%" y="229" width="0.0190%" height="15" fill="rgb(207,130,4)" fg:x="19736" fg:w="56"/><text x="6.9525%" y="239.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="6.7028%" y="213" width="0.0187%" height="15" fill="rgb(221,25,40)" fg:x="19737" fg:w="55"/><text x="6.9528%" y="223.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="6.7052%" y="197" width="0.0163%" height="15" fill="rgb(241,184,7)" fg:x="19744" fg:w="48"/><text x="6.9552%" y="207.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="6.7099%" y="181" width="0.0115%" height="15" fill="rgb(235,159,4)" fg:x="19758" fg:w="34"/><text x="6.9599%" y="191.50"></text></g><g><title>core::task::wake::Waker::wake (92 samples, 0.03%)</title><rect x="6.6967%" y="373" width="0.0312%" height="15" fill="rgb(214,87,48)" fg:x="19719" fg:w="92"/><text x="6.9467%" y="383.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (88 samples, 0.03%)</title><rect x="6.6980%" y="357" width="0.0299%" height="15" fill="rgb(246,198,24)" fg:x="19723" fg:w="88"/><text x="6.9480%" y="367.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (88 samples, 0.03%)</title><rect x="6.6980%" y="341" width="0.0299%" height="15" fill="rgb(209,66,40)" fg:x="19723" fg:w="88"/><text x="6.9480%" y="351.50"></text></g><g><title>async_executor::State::notify (93 samples, 0.03%)</title><rect x="6.6967%" y="389" width="0.0316%" height="15" fill="rgb(233,147,39)" fg:x="19719" fg:w="93"/><text x="6.9467%" y="399.50"></text></g><g><title>async_executor::Ticker::sleep (56 samples, 0.02%)</title><rect x="6.7283%" y="389" width="0.0190%" height="15" fill="rgb(231,145,52)" fg:x="19812" fg:w="56"/><text x="6.9783%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.02%)</title><rect x="6.7286%" y="373" width="0.0187%" height="15" fill="rgb(206,20,26)" fg:x="19813" fg:w="55"/><text x="6.9786%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.02%)</title><rect x="6.7286%" y="357" width="0.0187%" height="15" fill="rgb(238,220,4)" fg:x="19813" fg:w="55"/><text x="6.9786%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (55 samples, 0.02%)</title><rect x="6.7286%" y="341" width="0.0187%" height="15" fill="rgb(252,195,42)" fg:x="19813" fg:w="55"/><text x="6.9786%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (55 samples, 0.02%)</title><rect x="6.7286%" y="325" width="0.0187%" height="15" fill="rgb(209,10,6)" fg:x="19813" fg:w="55"/><text x="6.9786%" y="335.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (42 samples, 0.01%)</title><rect x="6.7330%" y="309" width="0.0143%" height="15" fill="rgb(229,3,52)" fg:x="19826" fg:w="42"/><text x="6.9830%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,016 samples, 0.68%)</title><rect x="6.0722%" y="453" width="0.6846%" height="15" fill="rgb(253,49,37)" fg:x="17880" fg:w="2016"/><text x="6.3222%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (2,016 samples, 0.68%)</title><rect x="6.0722%" y="437" width="0.6846%" height="15" fill="rgb(240,103,49)" fg:x="17880" fg:w="2016"/><text x="6.3222%" y="447.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,016 samples, 0.68%)</title><rect x="6.0722%" y="421" width="0.6846%" height="15" fill="rgb(250,182,30)" fg:x="17880" fg:w="2016"/><text x="6.3222%" y="431.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2,016 samples, 0.68%)</title><rect x="6.0722%" y="405" width="0.6846%" height="15" fill="rgb(248,8,30)" fg:x="17880" fg:w="2016"/><text x="6.3222%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,017 samples, 0.68%)</title><rect x="6.0722%" y="485" width="0.6850%" height="15" fill="rgb(237,120,30)" fg:x="17880" fg:w="2017"/><text x="6.3222%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (2,017 samples, 0.68%)</title><rect x="6.0722%" y="469" width="0.6850%" height="15" fill="rgb(221,146,34)" fg:x="17880" fg:w="2017"/><text x="6.3222%" y="479.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,062 samples, 0.70%)</title><rect x="6.0684%" y="533" width="0.7003%" height="15" fill="rgb(242,55,13)" fg:x="17869" fg:w="2062"/><text x="6.3184%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,051 samples, 0.70%)</title><rect x="6.0722%" y="517" width="0.6965%" height="15" fill="rgb(242,112,31)" fg:x="17880" fg:w="2051"/><text x="6.3222%" y="527.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,051 samples, 0.70%)</title><rect x="6.0722%" y="501" width="0.6965%" height="15" fill="rgb(249,192,27)" fg:x="17880" fg:w="2051"/><text x="6.3222%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (34 samples, 0.01%)</title><rect x="6.7571%" y="485" width="0.0115%" height="15" fill="rgb(208,204,44)" fg:x="19897" fg:w="34"/><text x="7.0071%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (34 samples, 0.01%)</title><rect x="6.7571%" y="469" width="0.0115%" height="15" fill="rgb(208,93,54)" fg:x="19897" fg:w="34"/><text x="7.0071%" y="479.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (34 samples, 0.01%)</title><rect x="6.7571%" y="453" width="0.0115%" height="15" fill="rgb(242,1,31)" fg:x="19897" fg:w="34"/><text x="7.0071%" y="463.50"></text></g><g><title>async_executor::State::notify (34 samples, 0.01%)</title><rect x="6.7571%" y="437" width="0.0115%" height="15" fill="rgb(241,83,25)" fg:x="19897" fg:w="34"/><text x="7.0071%" y="447.50"></text></g><g><title>core::task::wake::Waker::wake (34 samples, 0.01%)</title><rect x="6.7571%" y="421" width="0.0115%" height="15" fill="rgb(205,169,50)" fg:x="19897" fg:w="34"/><text x="7.0071%" y="431.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (34 samples, 0.01%)</title><rect x="6.7571%" y="405" width="0.0115%" height="15" fill="rgb(239,186,37)" fg:x="19897" fg:w="34"/><text x="7.0071%" y="415.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (34 samples, 0.01%)</title><rect x="6.7571%" y="389" width="0.0115%" height="15" fill="rgb(205,221,10)" fg:x="19897" fg:w="34"/><text x="7.0071%" y="399.50"></text></g><g><title>parking::Unparker::unpark (31 samples, 0.01%)</title><rect x="6.7582%" y="373" width="0.0105%" height="15" fill="rgb(218,196,15)" fg:x="19900" fg:w="31"/><text x="7.0082%" y="383.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,071 samples, 0.70%)</title><rect x="6.0684%" y="661" width="0.7033%" height="15" fill="rgb(218,196,35)" fg:x="17869" fg:w="2071"/><text x="6.3184%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,071 samples, 0.70%)</title><rect x="6.0684%" y="645" width="0.7033%" height="15" fill="rgb(233,63,24)" fg:x="17869" fg:w="2071"/><text x="6.3184%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,071 samples, 0.70%)</title><rect x="6.0684%" y="629" width="0.7033%" height="15" fill="rgb(225,8,4)" fg:x="17869" fg:w="2071"/><text x="6.3184%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,071 samples, 0.70%)</title><rect x="6.0684%" y="613" width="0.7033%" height="15" fill="rgb(234,105,35)" fg:x="17869" fg:w="2071"/><text x="6.3184%" y="623.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,071 samples, 0.70%)</title><rect x="6.0684%" y="597" width="0.7033%" height="15" fill="rgb(236,21,32)" fg:x="17869" fg:w="2071"/><text x="6.3184%" y="607.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,071 samples, 0.70%)</title><rect x="6.0684%" y="581" width="0.7033%" height="15" fill="rgb(228,109,6)" fg:x="17869" fg:w="2071"/><text x="6.3184%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,071 samples, 0.70%)</title><rect x="6.0684%" y="565" width="0.7033%" height="15" fill="rgb(229,215,31)" fg:x="17869" fg:w="2071"/><text x="6.3184%" y="575.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,071 samples, 0.70%)</title><rect x="6.0684%" y="549" width="0.7033%" height="15" fill="rgb(221,52,54)" fg:x="17869" fg:w="2071"/><text x="6.3184%" y="559.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,076 samples, 0.71%)</title><rect x="6.0684%" y="677" width="0.7050%" height="15" fill="rgb(252,129,43)" fg:x="17869" fg:w="2076"/><text x="6.3184%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,101 samples, 0.71%)</title><rect x="6.0684%" y="741" width="0.7135%" height="15" fill="rgb(248,183,27)" fg:x="17869" fg:w="2101"/><text x="6.3184%" y="751.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (2,101 samples, 0.71%)</title><rect x="6.0684%" y="725" width="0.7135%" height="15" fill="rgb(250,0,22)" fg:x="17869" fg:w="2101"/><text x="6.3184%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,101 samples, 0.71%)</title><rect x="6.0684%" y="709" width="0.7135%" height="15" fill="rgb(213,166,10)" fg:x="17869" fg:w="2101"/><text x="6.3184%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,101 samples, 0.71%)</title><rect x="6.0684%" y="693" width="0.7135%" height="15" fill="rgb(207,163,36)" fg:x="17869" fg:w="2101"/><text x="6.3184%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.01%)</title><rect x="6.7853%" y="629" width="0.0115%" height="15" fill="rgb(208,122,22)" fg:x="19980" fg:w="34"/><text x="7.0353%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.01%)</title><rect x="6.7857%" y="613" width="0.0112%" height="15" fill="rgb(207,104,49)" fg:x="19981" fg:w="33"/><text x="7.0357%" y="623.50"></text></g><g><title>cfree (30 samples, 0.01%)</title><rect x="6.7867%" y="597" width="0.0102%" height="15" fill="rgb(248,211,50)" fg:x="19984" fg:w="30"/><text x="7.0367%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (38 samples, 0.01%)</title><rect x="6.7843%" y="677" width="0.0129%" height="15" fill="rgb(217,13,45)" fg:x="19977" fg:w="38"/><text x="7.0343%" y="687.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (38 samples, 0.01%)</title><rect x="6.7843%" y="661" width="0.0129%" height="15" fill="rgb(211,216,49)" fg:x="19977" fg:w="38"/><text x="7.0343%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (38 samples, 0.01%)</title><rect x="6.7843%" y="645" width="0.0129%" height="15" fill="rgb(221,58,53)" fg:x="19977" fg:w="38"/><text x="7.0343%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (60 samples, 0.02%)</title><rect x="6.7840%" y="693" width="0.0204%" height="15" fill="rgb(220,112,41)" fg:x="19976" fg:w="60"/><text x="7.0340%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.03%)</title><rect x="6.7823%" y="709" width="0.0289%" height="15" fill="rgb(236,38,28)" fg:x="19971" fg:w="85"/><text x="7.0323%" y="719.50"></text></g><g><title>clock_gettime (49 samples, 0.02%)</title><rect x="6.8298%" y="661" width="0.0166%" height="15" fill="rgb(227,195,22)" fg:x="20111" fg:w="49"/><text x="7.0798%" y="671.50"></text></g><g><title>__vdso_clock_gettime (31 samples, 0.01%)</title><rect x="6.8359%" y="645" width="0.0105%" height="15" fill="rgb(214,55,33)" fg:x="20129" fg:w="31"/><text x="7.0859%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (191 samples, 0.06%)</title><rect x="6.7823%" y="725" width="0.0649%" height="15" fill="rgb(248,80,13)" fg:x="19971" fg:w="191"/><text x="7.0323%" y="735.50"></text></g><g><title>std::time::Instant::now (55 samples, 0.02%)</title><rect x="6.8285%" y="709" width="0.0187%" height="15" fill="rgb(238,52,6)" fg:x="20107" fg:w="55"/><text x="7.0785%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (51 samples, 0.02%)</title><rect x="6.8298%" y="693" width="0.0173%" height="15" fill="rgb(224,198,47)" fg:x="20111" fg:w="51"/><text x="7.0798%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (51 samples, 0.02%)</title><rect x="6.8298%" y="677" width="0.0173%" height="15" fill="rgb(233,171,20)" fg:x="20111" fg:w="51"/><text x="7.0798%" y="687.50"></text></g><g><title>epoll_wait (56 samples, 0.02%)</title><rect x="6.8566%" y="693" width="0.0190%" height="15" fill="rgb(241,30,25)" fg:x="20190" fg:w="56"/><text x="7.1066%" y="703.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="6.8577%" y="677" width="0.0180%" height="15" fill="rgb(207,171,38)" fg:x="20193" fg:w="53"/><text x="7.1077%" y="687.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="6.8604%" y="661" width="0.0153%" height="15" fill="rgb(234,70,1)" fg:x="20201" fg:w="45"/><text x="7.1104%" y="671.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="6.8604%" y="645" width="0.0153%" height="15" fill="rgb(232,178,18)" fg:x="20201" fg:w="45"/><text x="7.1104%" y="655.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="6.8617%" y="629" width="0.0139%" height="15" fill="rgb(241,78,40)" fg:x="20205" fg:w="41"/><text x="7.1117%" y="639.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="6.8624%" y="613" width="0.0132%" height="15" fill="rgb(222,35,25)" fg:x="20207" fg:w="39"/><text x="7.1124%" y="623.50"></text></g><g><title>read (498 samples, 0.17%)</title><rect x="6.8801%" y="693" width="0.1691%" height="15" fill="rgb(207,92,16)" fg:x="20259" fg:w="498"/><text x="7.1301%" y="703.50"></text></g><g><title>[unknown] (479 samples, 0.16%)</title><rect x="6.8865%" y="677" width="0.1627%" height="15" fill="rgb(216,59,51)" fg:x="20278" fg:w="479"/><text x="7.1365%" y="687.50"></text></g><g><title>[unknown] (465 samples, 0.16%)</title><rect x="6.8913%" y="661" width="0.1579%" height="15" fill="rgb(213,80,28)" fg:x="20292" fg:w="465"/><text x="7.1413%" y="671.50"></text></g><g><title>[unknown] (464 samples, 0.16%)</title><rect x="6.8916%" y="645" width="0.1576%" height="15" fill="rgb(220,93,7)" fg:x="20293" fg:w="464"/><text x="7.1416%" y="655.50"></text></g><g><title>[unknown] (458 samples, 0.16%)</title><rect x="6.8937%" y="629" width="0.1555%" height="15" fill="rgb(225,24,44)" fg:x="20299" fg:w="458"/><text x="7.1437%" y="639.50"></text></g><g><title>[unknown] (385 samples, 0.13%)</title><rect x="6.9185%" y="613" width="0.1307%" height="15" fill="rgb(243,74,40)" fg:x="20372" fg:w="385"/><text x="7.1685%" y="623.50"></text></g><g><title>[unknown] (237 samples, 0.08%)</title><rect x="6.9687%" y="597" width="0.0805%" height="15" fill="rgb(228,39,7)" fg:x="20520" fg:w="237"/><text x="7.2187%" y="607.50"></text></g><g><title>[unknown] (192 samples, 0.07%)</title><rect x="6.9840%" y="581" width="0.0652%" height="15" fill="rgb(227,79,8)" fg:x="20565" fg:w="192"/><text x="7.2340%" y="591.50"></text></g><g><title>[unknown] (86 samples, 0.03%)</title><rect x="7.0200%" y="565" width="0.0292%" height="15" fill="rgb(236,58,11)" fg:x="20671" fg:w="86"/><text x="7.2700%" y="575.50"></text></g><g><title>polling::Poller::wait (993 samples, 0.34%)</title><rect x="6.8471%" y="725" width="0.3372%" height="15" fill="rgb(249,63,35)" fg:x="20162" fg:w="993"/><text x="7.0971%" y="735.50"></text></g><g><title>polling::epoll::Poller::wait (993 samples, 0.34%)</title><rect x="6.8471%" y="709" width="0.3372%" height="15" fill="rgb(252,114,16)" fg:x="20162" fg:w="993"/><text x="7.0971%" y="719.50"></text></g><g><title>syscall (381 samples, 0.13%)</title><rect x="7.0550%" y="693" width="0.1294%" height="15" fill="rgb(254,151,24)" fg:x="20774" fg:w="381"/><text x="7.3050%" y="703.50"></text></g><g><title>[unknown] (375 samples, 0.13%)</title><rect x="7.0570%" y="677" width="0.1274%" height="15" fill="rgb(253,54,39)" fg:x="20780" fg:w="375"/><text x="7.3070%" y="687.50"></text></g><g><title>[unknown] (354 samples, 0.12%)</title><rect x="7.0641%" y="661" width="0.1202%" height="15" fill="rgb(243,25,45)" fg:x="20801" fg:w="354"/><text x="7.3141%" y="671.50"></text></g><g><title>[unknown] (350 samples, 0.12%)</title><rect x="7.0655%" y="645" width="0.1189%" height="15" fill="rgb(234,134,9)" fg:x="20805" fg:w="350"/><text x="7.3155%" y="655.50"></text></g><g><title>[unknown] (333 samples, 0.11%)</title><rect x="7.0713%" y="629" width="0.1131%" height="15" fill="rgb(227,166,31)" fg:x="20822" fg:w="333"/><text x="7.3213%" y="639.50"></text></g><g><title>[unknown] (283 samples, 0.10%)</title><rect x="7.0883%" y="613" width="0.0961%" height="15" fill="rgb(245,143,41)" fg:x="20872" fg:w="283"/><text x="7.3383%" y="623.50"></text></g><g><title>[unknown] (163 samples, 0.06%)</title><rect x="7.1290%" y="597" width="0.0554%" height="15" fill="rgb(238,181,32)" fg:x="20992" fg:w="163"/><text x="7.3790%" y="607.50"></text></g><g><title>[unknown] (70 samples, 0.02%)</title><rect x="7.1606%" y="581" width="0.0238%" height="15" fill="rgb(224,113,18)" fg:x="21085" fg:w="70"/><text x="7.4106%" y="591.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="7.1738%" y="565" width="0.0105%" height="15" fill="rgb(240,229,28)" fg:x="21124" fg:w="31"/><text x="7.4238%" y="575.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1205" width="1.3591%" height="15" fill="rgb(250,185,3)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1189" width="1.3591%" height="15" fill="rgb(212,59,25)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1173" width="1.3591%" height="15" fill="rgb(221,87,20)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1157" width="1.3591%" height="15" fill="rgb(213,74,28)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1141" width="1.3591%" height="15" fill="rgb(224,132,34)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1125" width="1.3591%" height="15" fill="rgb(222,101,24)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1135.50"></text></g><g><title>std::panicking::try (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1109" width="1.3591%" height="15" fill="rgb(254,142,4)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1093" width="1.3591%" height="15" fill="rgb(230,229,49)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1077" width="1.3591%" height="15" fill="rgb(238,70,47)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1061" width="1.3591%" height="15" fill="rgb(231,160,17)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1071.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,002 samples, 1.36%)</title><rect x="5.8266%" y="1045" width="1.3591%" height="15" fill="rgb(218,68,53)" fg:x="17157" fg:w="4002"/><text x="6.0766%" y="1055.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (3,290 samples, 1.12%)</title><rect x="6.0684%" y="1029" width="1.1173%" height="15" fill="rgb(236,111,10)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="1039.50"></text></g><g><title>async_std::task::block_on::block_on (3,290 samples, 1.12%)</title><rect x="6.0684%" y="1013" width="1.1173%" height="15" fill="rgb(224,34,41)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="1023.50"></text></g><g><title>async_std::task::builder::Builder::blocking (3,290 samples, 1.12%)</title><rect x="6.0684%" y="997" width="1.1173%" height="15" fill="rgb(241,118,19)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,290 samples, 1.12%)</title><rect x="6.0684%" y="981" width="1.1173%" height="15" fill="rgb(238,129,25)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,290 samples, 1.12%)</title><rect x="6.0684%" y="965" width="1.1173%" height="15" fill="rgb(238,22,31)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="975.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (3,290 samples, 1.12%)</title><rect x="6.0684%" y="949" width="1.1173%" height="15" fill="rgb(222,174,48)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,290 samples, 1.12%)</title><rect x="6.0684%" y="933" width="1.1173%" height="15" fill="rgb(206,152,40)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,290 samples, 1.12%)</title><rect x="6.0684%" y="917" width="1.1173%" height="15" fill="rgb(218,99,54)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,290 samples, 1.12%)</title><rect x="6.0684%" y="901" width="1.1173%" height="15" fill="rgb(220,174,26)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,290 samples, 1.12%)</title><rect x="6.0684%" y="885" width="1.1173%" height="15" fill="rgb(245,116,9)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="895.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (3,290 samples, 1.12%)</title><rect x="6.0684%" y="869" width="1.1173%" height="15" fill="rgb(209,72,35)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="879.50"></text></g><g><title>async_global_executor::executor::block_on (3,290 samples, 1.12%)</title><rect x="6.0684%" y="853" width="1.1173%" height="15" fill="rgb(226,126,21)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,290 samples, 1.12%)</title><rect x="6.0684%" y="837" width="1.1173%" height="15" fill="rgb(227,192,1)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,290 samples, 1.12%)</title><rect x="6.0684%" y="821" width="1.1173%" height="15" fill="rgb(237,180,29)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="831.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (3,290 samples, 1.12%)</title><rect x="6.0684%" y="805" width="1.1173%" height="15" fill="rgb(230,197,35)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="815.50"></text></g><g><title>async_global_executor::reactor::block_on (3,290 samples, 1.12%)</title><rect x="6.0684%" y="789" width="1.1173%" height="15" fill="rgb(246,193,31)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="799.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,290 samples, 1.12%)</title><rect x="6.0684%" y="773" width="1.1173%" height="15" fill="rgb(241,36,4)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="783.50"></text></g><g><title>async_io::driver::block_on (3,290 samples, 1.12%)</title><rect x="6.0684%" y="757" width="1.1173%" height="15" fill="rgb(241,130,17)" fg:x="17869" fg:w="3290"/><text x="6.3184%" y="767.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,189 samples, 0.40%)</title><rect x="6.7819%" y="741" width="0.4038%" height="15" fill="rgb(206,137,32)" fg:x="19970" fg:w="1189"/><text x="7.0319%" y="751.50"></text></g><g><title>[libc.so.6] (4,034 samples, 1.37%)</title><rect x="5.8164%" y="1221" width="1.3700%" height="15" fill="rgb(237,228,51)" fg:x="17127" fg:w="4034"/><text x="6.0664%" y="1231.50"></text></g><g><title>[unknown] (412 samples, 0.14%)</title><rect x="7.1864%" y="1221" width="0.1399%" height="15" fill="rgb(243,6,42)" fg:x="21161" fg:w="412"/><text x="7.4364%" y="1231.50"></text></g><g><title>[unknown] (406 samples, 0.14%)</title><rect x="7.1884%" y="1205" width="0.1379%" height="15" fill="rgb(251,74,28)" fg:x="21167" fg:w="406"/><text x="7.4384%" y="1215.50"></text></g><g><title>[unknown] (393 samples, 0.13%)</title><rect x="7.1929%" y="1189" width="0.1335%" height="15" fill="rgb(218,20,49)" fg:x="21180" fg:w="393"/><text x="7.4429%" y="1199.50"></text></g><g><title>[unknown] (261 samples, 0.09%)</title><rect x="7.2377%" y="1173" width="0.0886%" height="15" fill="rgb(238,28,14)" fg:x="21312" fg:w="261"/><text x="7.4877%" y="1183.50"></text></g><g><title>[unknown] (190 samples, 0.06%)</title><rect x="7.2618%" y="1157" width="0.0645%" height="15" fill="rgb(229,40,46)" fg:x="21383" fg:w="190"/><text x="7.5118%" y="1167.50"></text></g><g><title>[unknown] (134 samples, 0.05%)</title><rect x="7.2808%" y="1141" width="0.0455%" height="15" fill="rgb(244,195,20)" fg:x="21439" fg:w="134"/><text x="7.5308%" y="1151.50"></text></g><g><title>[unknown] (100 samples, 0.03%)</title><rect x="7.2924%" y="1125" width="0.0340%" height="15" fill="rgb(253,56,35)" fg:x="21473" fg:w="100"/><text x="7.5424%" y="1135.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="7.3032%" y="1109" width="0.0231%" height="15" fill="rgb(210,149,44)" fg:x="21505" fg:w="68"/><text x="7.5532%" y="1119.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="7.3158%" y="1093" width="0.0105%" height="15" fill="rgb(240,135,12)" fg:x="21542" fg:w="31"/><text x="7.5658%" y="1103.50"></text></g><g><title>__clone (199 samples, 0.07%)</title><rect x="7.3263%" y="1221" width="0.0676%" height="15" fill="rgb(251,24,50)" fg:x="21573" fg:w="199"/><text x="7.5763%" y="1231.50"></text></g><g><title>[unknown] (199 samples, 0.07%)</title><rect x="7.3263%" y="1205" width="0.0676%" height="15" fill="rgb(243,200,47)" fg:x="21573" fg:w="199"/><text x="7.5763%" y="1215.50"></text></g><g><title>[unknown] (199 samples, 0.07%)</title><rect x="7.3263%" y="1189" width="0.0676%" height="15" fill="rgb(224,166,26)" fg:x="21573" fg:w="199"/><text x="7.5763%" y="1199.50"></text></g><g><title>[unknown] (198 samples, 0.07%)</title><rect x="7.3267%" y="1173" width="0.0672%" height="15" fill="rgb(233,0,47)" fg:x="21574" fg:w="198"/><text x="7.5767%" y="1183.50"></text></g><g><title>[unknown] (191 samples, 0.06%)</title><rect x="7.3290%" y="1157" width="0.0649%" height="15" fill="rgb(253,80,5)" fg:x="21581" fg:w="191"/><text x="7.5790%" y="1167.50"></text></g><g><title>[unknown] (174 samples, 0.06%)</title><rect x="7.3348%" y="1141" width="0.0591%" height="15" fill="rgb(214,133,25)" fg:x="21598" fg:w="174"/><text x="7.5848%" y="1151.50"></text></g><g><title>[unknown] (164 samples, 0.06%)</title><rect x="7.3382%" y="1125" width="0.0557%" height="15" fill="rgb(209,27,14)" fg:x="21608" fg:w="164"/><text x="7.5882%" y="1135.50"></text></g><g><title>[unknown] (125 samples, 0.04%)</title><rect x="7.3514%" y="1109" width="0.0425%" height="15" fill="rgb(219,102,51)" fg:x="21647" fg:w="125"/><text x="7.6014%" y="1119.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="7.3793%" y="1093" width="0.0146%" height="15" fill="rgb(237,18,16)" fg:x="21729" fg:w="43"/><text x="7.6293%" y="1103.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="7.3820%" y="1077" width="0.0119%" height="15" fill="rgb(241,85,17)" fg:x="21737" fg:w="35"/><text x="7.6320%" y="1087.50"></text></g><g><title>__rust_probestack (76 samples, 0.03%)</title><rect x="7.4004%" y="1221" width="0.0258%" height="15" fill="rgb(236,90,42)" fg:x="21791" fg:w="76"/><text x="7.6504%" y="1231.50"></text></g><g><title>[libc.so.6] (737 samples, 0.25%)</title><rect x="7.4326%" y="1189" width="0.2503%" height="15" fill="rgb(249,57,21)" fg:x="21886" fg:w="737"/><text x="7.6826%" y="1199.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="7.6632%" y="1173" width="0.0197%" height="15" fill="rgb(243,12,36)" fg:x="22565" fg:w="58"/><text x="7.9132%" y="1183.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="7.6635%" y="1157" width="0.0194%" height="15" fill="rgb(253,128,47)" fg:x="22566" fg:w="57"/><text x="7.9135%" y="1167.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="7.6639%" y="1141" width="0.0190%" height="15" fill="rgb(207,33,20)" fg:x="22567" fg:w="56"/><text x="7.9139%" y="1151.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="7.6639%" y="1125" width="0.0190%" height="15" fill="rgb(233,215,35)" fg:x="22567" fg:w="56"/><text x="7.9139%" y="1135.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="7.6666%" y="1109" width="0.0163%" height="15" fill="rgb(249,188,52)" fg:x="22575" fg:w="48"/><text x="7.9166%" y="1119.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="7.6690%" y="1093" width="0.0139%" height="15" fill="rgb(225,12,32)" fg:x="22582" fg:w="41"/><text x="7.9190%" y="1103.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="7.6717%" y="1077" width="0.0112%" height="15" fill="rgb(247,98,14)" fg:x="22590" fg:w="33"/><text x="7.9217%" y="1087.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="7.6829%" y="1189" width="0.0122%" height="15" fill="rgb(247,219,48)" fg:x="22623" fg:w="36"/><text x="7.9329%" y="1199.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="7.6829%" y="1173" width="0.0122%" height="15" fill="rgb(253,60,48)" fg:x="22623" fg:w="36"/><text x="7.9329%" y="1183.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="7.6829%" y="1157" width="0.0122%" height="15" fill="rgb(245,15,52)" fg:x="22623" fg:w="36"/><text x="7.9329%" y="1167.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="7.6832%" y="1141" width="0.0119%" height="15" fill="rgb(220,133,28)" fg:x="22624" fg:w="35"/><text x="7.9332%" y="1151.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="7.6836%" y="1125" width="0.0115%" height="15" fill="rgb(217,180,4)" fg:x="22625" fg:w="34"/><text x="7.9336%" y="1135.50"></text></g><g><title>__rust_probestack (127 samples, 0.04%)</title><rect x="7.6951%" y="1189" width="0.0431%" height="15" fill="rgb(251,24,1)" fg:x="22659" fg:w="127"/><text x="7.9451%" y="1199.50"></text></g><g><title>[libc.so.6] (723 samples, 0.25%)</title><rect x="7.7383%" y="1173" width="0.2455%" height="15" fill="rgb(212,185,49)" fg:x="22786" fg:w="723"/><text x="7.9883%" y="1183.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="7.9722%" y="1157" width="0.0115%" height="15" fill="rgb(215,175,22)" fg:x="23475" fg:w="34"/><text x="8.2222%" y="1167.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="7.9726%" y="1141" width="0.0112%" height="15" fill="rgb(250,205,14)" fg:x="23476" fg:w="33"/><text x="8.2226%" y="1151.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="7.9729%" y="1125" width="0.0109%" height="15" fill="rgb(225,211,22)" fg:x="23477" fg:w="32"/><text x="8.2229%" y="1135.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="8.4236%" y="1061" width="0.0156%" height="15" fill="rgb(251,179,42)" fg:x="24804" fg:w="46"/><text x="8.6736%" y="1071.50"></text></g><g><title>[unknown] (179 samples, 0.06%)</title><rect x="8.4392%" y="1061" width="0.0608%" height="15" fill="rgb(208,216,51)" fg:x="24850" fg:w="179"/><text x="8.6892%" y="1071.50"></text></g><g><title>[unknown] (176 samples, 0.06%)</title><rect x="8.4402%" y="1045" width="0.0598%" height="15" fill="rgb(235,36,11)" fg:x="24853" fg:w="176"/><text x="8.6902%" y="1055.50"></text></g><g><title>[unknown] (173 samples, 0.06%)</title><rect x="8.4412%" y="1029" width="0.0588%" height="15" fill="rgb(213,189,28)" fg:x="24856" fg:w="173"/><text x="8.6912%" y="1039.50"></text></g><g><title>[unknown] (169 samples, 0.06%)</title><rect x="8.4426%" y="1013" width="0.0574%" height="15" fill="rgb(227,203,42)" fg:x="24860" fg:w="169"/><text x="8.6926%" y="1023.50"></text></g><g><title>[unknown] (138 samples, 0.05%)</title><rect x="8.4531%" y="997" width="0.0469%" height="15" fill="rgb(244,72,36)" fg:x="24891" fg:w="138"/><text x="8.7031%" y="1007.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="8.4630%" y="981" width="0.0370%" height="15" fill="rgb(213,53,17)" fg:x="24920" fg:w="109"/><text x="8.7130%" y="991.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="8.4694%" y="965" width="0.0306%" height="15" fill="rgb(207,167,3)" fg:x="24939" fg:w="90"/><text x="8.7194%" y="975.50"></text></g><g><title>[unknown] (81 samples, 0.03%)</title><rect x="8.4725%" y="949" width="0.0275%" height="15" fill="rgb(216,98,30)" fg:x="24948" fg:w="81"/><text x="8.7225%" y="959.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="8.4800%" y="933" width="0.0200%" height="15" fill="rgb(236,123,15)" fg:x="24970" fg:w="59"/><text x="8.7300%" y="943.50"></text></g><g><title>[libc.so.6] (1,052 samples, 0.36%)</title><rect x="8.2103%" y="1077" width="0.3573%" height="15" fill="rgb(248,81,50)" fg:x="24176" fg:w="1052"/><text x="8.4603%" y="1087.50"></text></g><g><title>__mprotect (199 samples, 0.07%)</title><rect x="8.5000%" y="1061" width="0.0676%" height="15" fill="rgb(214,120,4)" fg:x="25029" fg:w="199"/><text x="8.7500%" y="1071.50"></text></g><g><title>[unknown] (199 samples, 0.07%)</title><rect x="8.5000%" y="1045" width="0.0676%" height="15" fill="rgb(208,179,34)" fg:x="25029" fg:w="199"/><text x="8.7500%" y="1055.50"></text></g><g><title>[unknown] (191 samples, 0.06%)</title><rect x="8.5027%" y="1029" width="0.0649%" height="15" fill="rgb(227,140,7)" fg:x="25037" fg:w="191"/><text x="8.7527%" y="1039.50"></text></g><g><title>[unknown] (189 samples, 0.06%)</title><rect x="8.5034%" y="1013" width="0.0642%" height="15" fill="rgb(214,22,6)" fg:x="25039" fg:w="189"/><text x="8.7534%" y="1023.50"></text></g><g><title>[unknown] (186 samples, 0.06%)</title><rect x="8.5044%" y="997" width="0.0632%" height="15" fill="rgb(207,137,27)" fg:x="25042" fg:w="186"/><text x="8.7544%" y="1007.50"></text></g><g><title>[unknown] (173 samples, 0.06%)</title><rect x="8.5088%" y="981" width="0.0588%" height="15" fill="rgb(210,8,46)" fg:x="25055" fg:w="173"/><text x="8.7588%" y="991.50"></text></g><g><title>[unknown] (127 samples, 0.04%)</title><rect x="8.5244%" y="965" width="0.0431%" height="15" fill="rgb(240,16,54)" fg:x="25101" fg:w="127"/><text x="8.7744%" y="975.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="8.5452%" y="949" width="0.0224%" height="15" fill="rgb(211,209,29)" fg:x="25162" fg:w="66"/><text x="8.7952%" y="959.50"></text></g><g><title>[libc.so.6] (1,474 samples, 0.50%)</title><rect x="8.0707%" y="1093" width="0.5006%" height="15" fill="rgb(226,228,24)" fg:x="23765" fg:w="1474"/><text x="8.3207%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,770 samples, 0.60%)</title><rect x="7.9838%" y="1173" width="0.6011%" height="15" fill="rgb(222,84,9)" fg:x="23509" fg:w="1770"/><text x="8.2338%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,770 samples, 0.60%)</title><rect x="7.9838%" y="1157" width="0.6011%" height="15" fill="rgb(234,203,30)" fg:x="23509" fg:w="1770"/><text x="8.2338%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,770 samples, 0.60%)</title><rect x="7.9838%" y="1141" width="0.6011%" height="15" fill="rgb(238,109,14)" fg:x="23509" fg:w="1770"/><text x="8.2338%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1,769 samples, 0.60%)</title><rect x="7.9841%" y="1125" width="0.6008%" height="15" fill="rgb(233,206,34)" fg:x="23510" fg:w="1769"/><text x="8.2341%" y="1135.50"></text></g><g><title>malloc (1,741 samples, 0.59%)</title><rect x="7.9936%" y="1109" width="0.5913%" height="15" fill="rgb(220,167,47)" fg:x="23538" fg:w="1741"/><text x="8.2436%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2,498 samples, 0.85%)</title><rect x="7.7383%" y="1189" width="0.8483%" height="15" fill="rgb(238,105,10)" fg:x="22786" fg:w="2498"/><text x="7.9883%" y="1199.50"></text></g><g><title>[libc.so.6] (64 samples, 0.02%)</title><rect x="8.6246%" y="1141" width="0.0217%" height="15" fill="rgb(213,227,17)" fg:x="25396" fg:w="64"/><text x="8.8746%" y="1151.50"></text></g><g><title>async_task::runnable::spawn_unchecked (3,584 samples, 1.22%)</title><rect x="7.4302%" y="1205" width="1.2171%" height="15" fill="rgb(217,132,38)" fg:x="21879" fg:w="3584"/><text x="7.6802%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (179 samples, 0.06%)</title><rect x="8.5866%" y="1189" width="0.0608%" height="15" fill="rgb(242,146,4)" fg:x="25284" fg:w="179"/><text x="8.8366%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (168 samples, 0.06%)</title><rect x="8.5903%" y="1173" width="0.0571%" height="15" fill="rgb(212,61,9)" fg:x="25295" fg:w="168"/><text x="8.8403%" y="1183.50"></text></g><g><title>malloc (156 samples, 0.05%)</title><rect x="8.5944%" y="1157" width="0.0530%" height="15" fill="rgb(247,126,22)" fg:x="25307" fg:w="156"/><text x="8.8444%" y="1167.50"></text></g><g><title>async_executor::Executor::spawn (3,605 samples, 1.22%)</title><rect x="7.4302%" y="1221" width="1.2243%" height="15" fill="rgb(220,196,2)" fg:x="21879" fg:w="3605"/><text x="7.6802%" y="1231.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (34 samples, 0.01%)</title><rect x="8.6739%" y="437" width="0.0115%" height="15" fill="rgb(208,46,4)" fg:x="25541" fg:w="34"/><text x="8.9239%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::handle::Handle&gt;&gt; (30 samples, 0.01%)</title><rect x="8.6752%" y="421" width="0.0102%" height="15" fill="rgb(252,104,46)" fg:x="25545" fg:w="30"/><text x="8.9252%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (30 samples, 0.01%)</title><rect x="8.6752%" y="405" width="0.0102%" height="15" fill="rgb(237,152,48)" fg:x="25545" fg:w="30"/><text x="8.9252%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (30 samples, 0.01%)</title><rect x="8.6752%" y="389" width="0.0102%" height="15" fill="rgb(221,59,37)" fg:x="25545" fg:w="30"/><text x="8.9252%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::thread_pool::Spawner&gt; (30 samples, 0.01%)</title><rect x="8.6752%" y="373" width="0.0102%" height="15" fill="rgb(209,202,51)" fg:x="25545" fg:w="30"/><text x="8.9252%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt; (30 samples, 0.01%)</title><rect x="8.6752%" y="357" width="0.0102%" height="15" fill="rgb(228,81,30)" fg:x="25545" fg:w="30"/><text x="8.9252%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="8.6752%" y="341" width="0.0102%" height="15" fill="rgb(227,42,39)" fg:x="25545" fg:w="30"/><text x="8.9252%" y="351.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop (53 samples, 0.02%)</title><rect x="8.6708%" y="485" width="0.0180%" height="15" fill="rgb(221,26,2)" fg:x="25532" fg:w="53"/><text x="8.9208%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (44 samples, 0.01%)</title><rect x="8.6739%" y="469" width="0.0149%" height="15" fill="rgb(254,61,31)" fg:x="25541" fg:w="44"/><text x="8.9239%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44 samples, 0.01%)</title><rect x="8.6739%" y="453" width="0.0149%" height="15" fill="rgb(222,173,38)" fg:x="25541" fg:w="44"/><text x="8.9239%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::EnterGuard&gt; (61 samples, 0.02%)</title><rect x="8.6695%" y="517" width="0.0207%" height="15" fill="rgb(218,50,12)" fg:x="25528" fg:w="61"/><text x="8.9195%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::EnterGuard&gt; (61 samples, 0.02%)</title><rect x="8.6695%" y="501" width="0.0207%" height="15" fill="rgb(223,88,40)" fg:x="25528" fg:w="61"/><text x="8.9195%" y="511.50"></text></g><g><title>&lt;tokio::runtime::handle::Handle as core::clone::Clone&gt;::clone (45 samples, 0.02%)</title><rect x="8.6902%" y="501" width="0.0153%" height="15" fill="rgb(237,54,19)" fg:x="25589" fg:w="45"/><text x="8.9402%" y="511.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (45 samples, 0.02%)</title><rect x="8.6902%" y="485" width="0.0153%" height="15" fill="rgb(251,129,25)" fg:x="25589" fg:w="45"/><text x="8.9402%" y="495.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (154 samples, 0.05%)</title><rect x="8.6552%" y="821" width="0.0523%" height="15" fill="rgb(238,97,19)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (154 samples, 0.05%)</title><rect x="8.6552%" y="805" width="0.0523%" height="15" fill="rgb(240,169,18)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (154 samples, 0.05%)</title><rect x="8.6552%" y="789" width="0.0523%" height="15" fill="rgb(230,187,49)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="799.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (154 samples, 0.05%)</title><rect x="8.6552%" y="773" width="0.0523%" height="15" fill="rgb(209,44,26)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="783.50"></text></g><g><title>async_std::task::block_on::block_on (154 samples, 0.05%)</title><rect x="8.6552%" y="757" width="0.0523%" height="15" fill="rgb(244,0,6)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="767.50"></text></g><g><title>async_std::task::builder::Builder::blocking (154 samples, 0.05%)</title><rect x="8.6552%" y="741" width="0.0523%" height="15" fill="rgb(248,18,21)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (154 samples, 0.05%)</title><rect x="8.6552%" y="725" width="0.0523%" height="15" fill="rgb(245,180,19)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (154 samples, 0.05%)</title><rect x="8.6552%" y="709" width="0.0523%" height="15" fill="rgb(252,118,36)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="719.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (154 samples, 0.05%)</title><rect x="8.6552%" y="693" width="0.0523%" height="15" fill="rgb(210,224,19)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (154 samples, 0.05%)</title><rect x="8.6552%" y="677" width="0.0523%" height="15" fill="rgb(218,30,24)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (154 samples, 0.05%)</title><rect x="8.6552%" y="661" width="0.0523%" height="15" fill="rgb(219,75,50)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (154 samples, 0.05%)</title><rect x="8.6552%" y="645" width="0.0523%" height="15" fill="rgb(234,72,50)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (154 samples, 0.05%)</title><rect x="8.6552%" y="629" width="0.0523%" height="15" fill="rgb(219,100,48)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="639.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (154 samples, 0.05%)</title><rect x="8.6552%" y="613" width="0.0523%" height="15" fill="rgb(253,5,41)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="623.50"></text></g><g><title>async_global_executor::executor::block_on (154 samples, 0.05%)</title><rect x="8.6552%" y="597" width="0.0523%" height="15" fill="rgb(247,181,11)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (154 samples, 0.05%)</title><rect x="8.6552%" y="581" width="0.0523%" height="15" fill="rgb(222,223,25)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (154 samples, 0.05%)</title><rect x="8.6552%" y="565" width="0.0523%" height="15" fill="rgb(214,198,28)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="575.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (154 samples, 0.05%)</title><rect x="8.6552%" y="549" width="0.0523%" height="15" fill="rgb(230,46,43)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="559.50"></text></g><g><title>async_global_executor::reactor::block_on (154 samples, 0.05%)</title><rect x="8.6552%" y="533" width="0.0523%" height="15" fill="rgb(233,65,53)" fg:x="25486" fg:w="154"/><text x="8.9052%" y="543.50"></text></g><g><title>tokio::runtime::handle::Handle::enter (51 samples, 0.02%)</title><rect x="8.6902%" y="517" width="0.0173%" height="15" fill="rgb(221,121,27)" fg:x="25589" fg:w="51"/><text x="8.9402%" y="527.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (193 samples, 0.07%)</title><rect x="8.6552%" y="901" width="0.0655%" height="15" fill="rgb(247,70,47)" fg:x="25486" fg:w="193"/><text x="8.9052%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (193 samples, 0.07%)</title><rect x="8.6552%" y="885" width="0.0655%" height="15" fill="rgb(228,85,35)" fg:x="25486" fg:w="193"/><text x="8.9052%" y="895.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (193 samples, 0.07%)</title><rect x="8.6552%" y="869" width="0.0655%" height="15" fill="rgb(209,50,18)" fg:x="25486" fg:w="193"/><text x="8.9052%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (193 samples, 0.07%)</title><rect x="8.6552%" y="853" width="0.0655%" height="15" fill="rgb(250,19,35)" fg:x="25486" fg:w="193"/><text x="8.9052%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (193 samples, 0.07%)</title><rect x="8.6552%" y="837" width="0.0655%" height="15" fill="rgb(253,107,29)" fg:x="25486" fg:w="193"/><text x="8.9052%" y="847.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (39 samples, 0.01%)</title><rect x="8.7075%" y="821" width="0.0132%" height="15" fill="rgb(252,179,29)" fg:x="25640" fg:w="39"/><text x="8.9575%" y="831.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (39 samples, 0.01%)</title><rect x="8.7075%" y="805" width="0.0132%" height="15" fill="rgb(238,194,6)" fg:x="25640" fg:w="39"/><text x="8.9575%" y="815.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (39 samples, 0.01%)</title><rect x="8.7075%" y="789" width="0.0132%" height="15" fill="rgb(238,164,29)" fg:x="25640" fg:w="39"/><text x="8.9575%" y="799.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (39 samples, 0.01%)</title><rect x="8.7075%" y="773" width="0.0132%" height="15" fill="rgb(224,25,9)" fg:x="25640" fg:w="39"/><text x="8.9575%" y="783.50"></text></g><g><title>shared_memory::ShmemConf::open (53 samples, 0.02%)</title><rect x="8.7269%" y="645" width="0.0180%" height="15" fill="rgb(244,153,23)" fg:x="25697" fg:w="53"/><text x="8.9769%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (104 samples, 0.04%)</title><rect x="8.7265%" y="693" width="0.0353%" height="15" fill="rgb(212,203,14)" fg:x="25696" fg:w="104"/><text x="8.9765%" y="703.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (104 samples, 0.04%)</title><rect x="8.7265%" y="677" width="0.0353%" height="15" fill="rgb(220,164,20)" fg:x="25696" fg:w="104"/><text x="8.9765%" y="687.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::connect_map_to_shm (104 samples, 0.04%)</title><rect x="8.7265%" y="661" width="0.0353%" height="15" fill="rgb(222,203,48)" fg:x="25696" fg:w="104"/><text x="8.9765%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (50 samples, 0.02%)</title><rect x="8.7449%" y="645" width="0.0170%" height="15" fill="rgb(215,159,22)" fg:x="25750" fg:w="50"/><text x="8.9949%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (50 samples, 0.02%)</title><rect x="8.7449%" y="629" width="0.0170%" height="15" fill="rgb(216,183,47)" fg:x="25750" fg:w="50"/><text x="8.9949%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (112 samples, 0.04%)</title><rect x="8.7262%" y="741" width="0.0380%" height="15" fill="rgb(229,195,25)" fg:x="25695" fg:w="112"/><text x="8.9762%" y="751.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (112 samples, 0.04%)</title><rect x="8.7262%" y="725" width="0.0380%" height="15" fill="rgb(224,132,51)" fg:x="25695" fg:w="112"/><text x="8.9762%" y="735.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (111 samples, 0.04%)</title><rect x="8.7265%" y="709" width="0.0377%" height="15" fill="rgb(240,63,7)" fg:x="25696" fg:w="111"/><text x="8.9765%" y="719.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (135 samples, 0.05%)</title><rect x="8.7207%" y="821" width="0.0458%" height="15" fill="rgb(249,182,41)" fg:x="25679" fg:w="135"/><text x="8.9707%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (135 samples, 0.05%)</title><rect x="8.7207%" y="805" width="0.0458%" height="15" fill="rgb(243,47,26)" fg:x="25679" fg:w="135"/><text x="8.9707%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (135 samples, 0.05%)</title><rect x="8.7207%" y="789" width="0.0458%" height="15" fill="rgb(233,48,2)" fg:x="25679" fg:w="135"/><text x="8.9707%" y="799.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (119 samples, 0.04%)</title><rect x="8.7262%" y="773" width="0.0404%" height="15" fill="rgb(244,165,34)" fg:x="25695" fg:w="119"/><text x="8.9762%" y="783.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (119 samples, 0.04%)</title><rect x="8.7262%" y="757" width="0.0404%" height="15" fill="rgb(207,89,7)" fg:x="25695" fg:w="119"/><text x="8.9762%" y="767.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (71 samples, 0.02%)</title><rect x="8.7713%" y="773" width="0.0241%" height="15" fill="rgb(244,117,36)" fg:x="25828" fg:w="71"/><text x="9.0213%" y="783.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (72 samples, 0.02%)</title><rect x="8.7713%" y="805" width="0.0245%" height="15" fill="rgb(226,144,34)" fg:x="25828" fg:w="72"/><text x="9.0213%" y="815.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (72 samples, 0.02%)</title><rect x="8.7713%" y="789" width="0.0245%" height="15" fill="rgb(213,23,19)" fg:x="25828" fg:w="72"/><text x="9.0213%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (43 samples, 0.01%)</title><rect x="8.8022%" y="693" width="0.0146%" height="15" fill="rgb(217,75,12)" fg:x="25919" fg:w="43"/><text x="9.0522%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (43 samples, 0.01%)</title><rect x="8.8022%" y="677" width="0.0146%" height="15" fill="rgb(224,159,17)" fg:x="25919" fg:w="43"/><text x="9.0522%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.01%)</title><rect x="8.8022%" y="661" width="0.0146%" height="15" fill="rgb(217,118,1)" fg:x="25919" fg:w="43"/><text x="9.0522%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.01%)</title><rect x="8.8026%" y="645" width="0.0143%" height="15" fill="rgb(232,180,48)" fg:x="25920" fg:w="42"/><text x="9.0526%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.01%)</title><rect x="8.8026%" y="629" width="0.0143%" height="15" fill="rgb(230,27,33)" fg:x="25920" fg:w="42"/><text x="9.0526%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (41 samples, 0.01%)</title><rect x="8.8029%" y="613" width="0.0139%" height="15" fill="rgb(205,31,21)" fg:x="25921" fg:w="41"/><text x="9.0529%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (41 samples, 0.01%)</title><rect x="8.8029%" y="597" width="0.0139%" height="15" fill="rgb(253,59,4)" fg:x="25921" fg:w="41"/><text x="9.0529%" y="607.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (33 samples, 0.01%)</title><rect x="8.8056%" y="581" width="0.0112%" height="15" fill="rgb(224,201,9)" fg:x="25929" fg:w="33"/><text x="9.0556%" y="591.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (144 samples, 0.05%)</title><rect x="8.7713%" y="821" width="0.0489%" height="15" fill="rgb(229,206,30)" fg:x="25828" fg:w="144"/><text x="9.0213%" y="831.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (71 samples, 0.02%)</title><rect x="8.7961%" y="805" width="0.0241%" height="15" fill="rgb(212,67,47)" fg:x="25901" fg:w="71"/><text x="9.0461%" y="815.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (71 samples, 0.02%)</title><rect x="8.7961%" y="789" width="0.0241%" height="15" fill="rgb(211,96,50)" fg:x="25901" fg:w="71"/><text x="9.0461%" y="799.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (68 samples, 0.02%)</title><rect x="8.7972%" y="773" width="0.0231%" height="15" fill="rgb(252,114,18)" fg:x="25904" fg:w="68"/><text x="9.0472%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (53 samples, 0.02%)</title><rect x="8.8022%" y="757" width="0.0180%" height="15" fill="rgb(223,58,37)" fg:x="25919" fg:w="53"/><text x="9.0522%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (53 samples, 0.02%)</title><rect x="8.8022%" y="741" width="0.0180%" height="15" fill="rgb(237,70,4)" fg:x="25919" fg:w="53"/><text x="9.0522%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 0.02%)</title><rect x="8.8022%" y="725" width="0.0180%" height="15" fill="rgb(244,85,46)" fg:x="25919" fg:w="53"/><text x="9.0522%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (53 samples, 0.02%)</title><rect x="8.8022%" y="709" width="0.0180%" height="15" fill="rgb(223,39,52)" fg:x="25919" fg:w="53"/><text x="9.0522%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (487 samples, 0.17%)</title><rect x="8.6552%" y="917" width="0.1654%" height="15" fill="rgb(218,200,14)" fg:x="25486" fg:w="487"/><text x="8.9052%" y="927.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (294 samples, 0.10%)</title><rect x="8.7207%" y="901" width="0.0998%" height="15" fill="rgb(208,171,16)" fg:x="25679" fg:w="294"/><text x="8.9707%" y="911.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (294 samples, 0.10%)</title><rect x="8.7207%" y="885" width="0.0998%" height="15" fill="rgb(234,200,18)" fg:x="25679" fg:w="294"/><text x="8.9707%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (294 samples, 0.10%)</title><rect x="8.7207%" y="869" width="0.0998%" height="15" fill="rgb(228,45,11)" fg:x="25679" fg:w="294"/><text x="8.9707%" y="879.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (294 samples, 0.10%)</title><rect x="8.7207%" y="853" width="0.0998%" height="15" fill="rgb(237,182,11)" fg:x="25679" fg:w="294"/><text x="8.9707%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (294 samples, 0.10%)</title><rect x="8.7207%" y="837" width="0.0998%" height="15" fill="rgb(241,175,49)" fg:x="25679" fg:w="294"/><text x="8.9707%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (91 samples, 0.03%)</title><rect x="8.8396%" y="677" width="0.0309%" height="15" fill="rgb(247,38,35)" fg:x="26029" fg:w="91"/><text x="9.0896%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.03%)</title><rect x="8.8396%" y="661" width="0.0309%" height="15" fill="rgb(228,39,49)" fg:x="26029" fg:w="91"/><text x="9.0896%" y="671.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (66 samples, 0.02%)</title><rect x="8.8481%" y="645" width="0.0224%" height="15" fill="rgb(226,101,26)" fg:x="26054" fg:w="66"/><text x="9.0981%" y="655.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (180 samples, 0.06%)</title><rect x="8.8277%" y="693" width="0.0611%" height="15" fill="rgb(206,141,19)" fg:x="25994" fg:w="180"/><text x="9.0777%" y="703.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (34 samples, 0.01%)</title><rect x="8.8960%" y="549" width="0.0115%" height="15" fill="rgb(211,200,13)" fg:x="26195" fg:w="34"/><text x="9.1460%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::write (34 samples, 0.01%)</title><rect x="8.8960%" y="533" width="0.0115%" height="15" fill="rgb(241,121,6)" fg:x="26195" fg:w="34"/><text x="9.1460%" y="543.50"></text></g><g><title>__send (34 samples, 0.01%)</title><rect x="8.8960%" y="517" width="0.0115%" height="15" fill="rgb(234,221,29)" fg:x="26195" fg:w="34"/><text x="9.1460%" y="527.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="8.8967%" y="501" width="0.0109%" height="15" fill="rgb(229,136,5)" fg:x="26197" fg:w="32"/><text x="9.1467%" y="511.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="8.8970%" y="485" width="0.0105%" height="15" fill="rgb(238,36,11)" fg:x="26198" fg:w="31"/><text x="9.1470%" y="495.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="8.8970%" y="469" width="0.0105%" height="15" fill="rgb(251,55,41)" fg:x="26198" fg:w="31"/><text x="9.1470%" y="479.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="8.8973%" y="453" width="0.0102%" height="15" fill="rgb(242,34,40)" fg:x="26199" fg:w="30"/><text x="9.1473%" y="463.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (37 samples, 0.01%)</title><rect x="8.8953%" y="645" width="0.0126%" height="15" fill="rgb(215,42,17)" fg:x="26193" fg:w="37"/><text x="9.1453%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.01%)</title><rect x="8.8953%" y="629" width="0.0126%" height="15" fill="rgb(207,44,46)" fg:x="26193" fg:w="37"/><text x="9.1453%" y="639.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all::{{closure}} (37 samples, 0.01%)</title><rect x="8.8953%" y="613" width="0.0126%" height="15" fill="rgb(211,206,28)" fg:x="26193" fg:w="37"/><text x="9.1453%" y="623.50"></text></g><g><title>&lt;async_std::io::write::write_all::WriteAllFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="8.8956%" y="597" width="0.0122%" height="15" fill="rgb(237,167,16)" fg:x="26194" fg:w="36"/><text x="9.1456%" y="607.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (36 samples, 0.01%)</title><rect x="8.8956%" y="581" width="0.0122%" height="15" fill="rgb(233,66,6)" fg:x="26194" fg:w="36"/><text x="9.1456%" y="591.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (35 samples, 0.01%)</title><rect x="8.8960%" y="565" width="0.0119%" height="15" fill="rgb(246,123,29)" fg:x="26195" fg:w="35"/><text x="9.1460%" y="575.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (31 samples, 0.01%)</title><rect x="8.9157%" y="645" width="0.0105%" height="15" fill="rgb(209,62,40)" fg:x="26253" fg:w="31"/><text x="9.1657%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.03%)</title><rect x="8.8943%" y="677" width="0.0343%" height="15" fill="rgb(218,4,25)" fg:x="26190" fg:w="101"/><text x="9.1443%" y="687.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (101 samples, 0.03%)</title><rect x="8.8943%" y="661" width="0.0343%" height="15" fill="rgb(253,91,49)" fg:x="26190" fg:w="101"/><text x="9.1443%" y="671.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::get_init_syn_properties::{{closure}} (43 samples, 0.01%)</title><rect x="8.9286%" y="645" width="0.0146%" height="15" fill="rgb(228,155,29)" fg:x="26291" fg:w="43"/><text x="9.1786%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (108 samples, 0.04%)</title><rect x="8.9286%" y="677" width="0.0367%" height="15" fill="rgb(243,57,37)" fg:x="26291" fg:w="108"/><text x="9.1786%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.04%)</title><rect x="8.9286%" y="661" width="0.0367%" height="15" fill="rgb(244,167,17)" fg:x="26291" fg:w="108"/><text x="9.1786%" y="671.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::get_init_syn_properties::{{closure}} (65 samples, 0.02%)</title><rect x="8.9432%" y="645" width="0.0221%" height="15" fill="rgb(207,181,38)" fg:x="26334" fg:w="65"/><text x="9.1932%" y="655.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_syn::send::{{closure}} (292 samples, 0.10%)</title><rect x="8.8888%" y="693" width="0.0992%" height="15" fill="rgb(211,8,23)" fg:x="26174" fg:w="292"/><text x="9.1388%" y="703.50"></text></g><g><title>zenoh_transport::unicast::establishment::attachment_from_properties (34 samples, 0.01%)</title><rect x="8.9765%" y="677" width="0.0115%" height="15" fill="rgb(235,11,44)" fg:x="26432" fg:w="34"/><text x="9.2265%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="8.9955%" y="677" width="0.0122%" height="15" fill="rgb(248,18,52)" fg:x="26488" fg:w="36"/><text x="9.2455%" y="687.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (36 samples, 0.01%)</title><rect x="8.9955%" y="661" width="0.0122%" height="15" fill="rgb(208,4,7)" fg:x="26488" fg:w="36"/><text x="9.2455%" y="671.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_syn::send::{{closure}} (41 samples, 0.01%)</title><rect x="8.9951%" y="693" width="0.0139%" height="15" fill="rgb(240,17,39)" fg:x="26487" fg:w="41"/><text x="9.2451%" y="703.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (42 samples, 0.01%)</title><rect x="9.0097%" y="677" width="0.0143%" height="15" fill="rgb(207,170,3)" fg:x="26530" fg:w="42"/><text x="9.2597%" y="687.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (39 samples, 0.01%)</title><rect x="9.0108%" y="661" width="0.0132%" height="15" fill="rgb(236,100,52)" fg:x="26533" fg:w="39"/><text x="9.2608%" y="671.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (57 samples, 0.02%)</title><rect x="9.0091%" y="693" width="0.0194%" height="15" fill="rgb(246,78,51)" fg:x="26528" fg:w="57"/><text x="9.2591%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (604 samples, 0.21%)</title><rect x="8.8257%" y="709" width="0.2051%" height="15" fill="rgb(211,17,15)" fg:x="25988" fg:w="604"/><text x="9.0757%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (625 samples, 0.21%)</title><rect x="8.8206%" y="741" width="0.2123%" height="15" fill="rgb(209,59,46)" fg:x="25973" fg:w="625"/><text x="9.0706%" y="751.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (625 samples, 0.21%)</title><rect x="8.8206%" y="725" width="0.2123%" height="15" fill="rgb(210,92,25)" fg:x="25973" fg:w="625"/><text x="9.0706%" y="735.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (639 samples, 0.22%)</title><rect x="8.8206%" y="885" width="0.2170%" height="15" fill="rgb(238,174,52)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (639 samples, 0.22%)</title><rect x="8.8206%" y="869" width="0.2170%" height="15" fill="rgb(230,73,7)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="879.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (639 samples, 0.22%)</title><rect x="8.8206%" y="853" width="0.2170%" height="15" fill="rgb(243,124,40)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (639 samples, 0.22%)</title><rect x="8.8206%" y="837" width="0.2170%" height="15" fill="rgb(244,170,11)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="847.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (639 samples, 0.22%)</title><rect x="8.8206%" y="821" width="0.2170%" height="15" fill="rgb(207,114,54)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (639 samples, 0.22%)</title><rect x="8.8206%" y="805" width="0.2170%" height="15" fill="rgb(205,42,20)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="815.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (639 samples, 0.22%)</title><rect x="8.8206%" y="789" width="0.2170%" height="15" fill="rgb(230,30,28)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (639 samples, 0.22%)</title><rect x="8.8206%" y="773" width="0.2170%" height="15" fill="rgb(205,73,54)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="783.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (639 samples, 0.22%)</title><rect x="8.8206%" y="757" width="0.2170%" height="15" fill="rgb(254,227,23)" fg:x="25973" fg:w="639"/><text x="9.0706%" y="767.50"></text></g><g><title>async_global_executor::reactor::block_on (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1221" width="0.3851%" height="15" fill="rgb(228,202,34)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1231.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1205" width="0.3851%" height="15" fill="rgb(222,225,37)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1215.50"></text></g><g><title>async_io::driver::block_on (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1189" width="0.3851%" height="15" fill="rgb(221,14,54)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1199.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1173" width="0.3851%" height="15" fill="rgb(254,102,2)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1157" width="0.3851%" height="15" fill="rgb(232,104,17)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1141" width="0.3851%" height="15" fill="rgb(250,220,14)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1125" width="0.3851%" height="15" fill="rgb(241,158,9)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1109" width="0.3851%" height="15" fill="rgb(246,9,43)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1093" width="0.3851%" height="15" fill="rgb(206,73,33)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1103.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1077" width="0.3851%" height="15" fill="rgb(222,79,8)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1061" width="0.3851%" height="15" fill="rgb(234,8,54)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1045" width="0.3851%" height="15" fill="rgb(209,134,38)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1055.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1029" width="0.3851%" height="15" fill="rgb(230,127,29)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1039.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,134 samples, 0.39%)</title><rect x="8.6552%" y="1013" width="0.3851%" height="15" fill="rgb(242,44,41)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,134 samples, 0.39%)</title><rect x="8.6552%" y="997" width="0.3851%" height="15" fill="rgb(222,56,43)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,134 samples, 0.39%)</title><rect x="8.6552%" y="981" width="0.3851%" height="15" fill="rgb(238,39,47)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,134 samples, 0.39%)</title><rect x="8.6552%" y="965" width="0.3851%" height="15" fill="rgb(226,79,43)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,134 samples, 0.39%)</title><rect x="8.6552%" y="949" width="0.3851%" height="15" fill="rgb(242,105,53)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="959.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,134 samples, 0.39%)</title><rect x="8.6552%" y="933" width="0.3851%" height="15" fill="rgb(251,132,46)" fg:x="25486" fg:w="1134"/><text x="8.9052%" y="943.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (647 samples, 0.22%)</title><rect x="8.8206%" y="917" width="0.2197%" height="15" fill="rgb(231,77,14)" fg:x="25973" fg:w="647"/><text x="9.0706%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (647 samples, 0.22%)</title><rect x="8.8206%" y="901" width="0.2197%" height="15" fill="rgb(240,135,9)" fg:x="25973" fg:w="647"/><text x="9.0706%" y="911.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (37 samples, 0.01%)</title><rect x="9.0444%" y="565" width="0.0126%" height="15" fill="rgb(248,109,14)" fg:x="26632" fg:w="37"/><text x="9.2944%" y="575.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (33 samples, 0.01%)</title><rect x="9.0637%" y="549" width="0.0112%" height="15" fill="rgb(227,146,52)" fg:x="26689" fg:w="33"/><text x="9.3137%" y="559.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (33 samples, 0.01%)</title><rect x="9.0637%" y="533" width="0.0112%" height="15" fill="rgb(232,54,3)" fg:x="26689" fg:w="33"/><text x="9.3137%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (33 samples, 0.01%)</title><rect x="9.0637%" y="517" width="0.0112%" height="15" fill="rgb(229,201,43)" fg:x="26689" fg:w="33"/><text x="9.3137%" y="527.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (33 samples, 0.01%)</title><rect x="9.0637%" y="501" width="0.0112%" height="15" fill="rgb(252,161,33)" fg:x="26689" fg:w="33"/><text x="9.3137%" y="511.50"></text></g><g><title>core::slice::memchr::memchr (32 samples, 0.01%)</title><rect x="9.0641%" y="485" width="0.0109%" height="15" fill="rgb(226,146,40)" fg:x="26690" fg:w="32"/><text x="9.3141%" y="495.50"></text></g><g><title>core::slice::memchr::memchr_general_case (32 samples, 0.01%)</title><rect x="9.0641%" y="469" width="0.0109%" height="15" fill="rgb(219,47,25)" fg:x="26690" fg:w="32"/><text x="9.3141%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (41 samples, 0.01%)</title><rect x="9.0794%" y="517" width="0.0139%" height="15" fill="rgb(250,135,13)" fg:x="26735" fg:w="41"/><text x="9.3294%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (33 samples, 0.01%)</title><rect x="9.0821%" y="501" width="0.0112%" height="15" fill="rgb(219,229,18)" fg:x="26743" fg:w="33"/><text x="9.3321%" y="511.50"></text></g><g><title>std::collections::hash::map::RandomState::new (33 samples, 0.01%)</title><rect x="9.0821%" y="485" width="0.0112%" height="15" fill="rgb(217,152,27)" fg:x="26743" fg:w="33"/><text x="9.3321%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.01%)</title><rect x="9.0821%" y="469" width="0.0112%" height="15" fill="rgb(225,71,47)" fg:x="26743" fg:w="33"/><text x="9.3321%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.01%)</title><rect x="9.0821%" y="453" width="0.0112%" height="15" fill="rgb(220,139,14)" fg:x="26743" fg:w="33"/><text x="9.3321%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (67 samples, 0.02%)</title><rect x="9.0749%" y="549" width="0.0228%" height="15" fill="rgb(247,54,32)" fg:x="26722" fg:w="67"/><text x="9.3249%" y="559.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str (67 samples, 0.02%)</title><rect x="9.0749%" y="533" width="0.0228%" height="15" fill="rgb(252,131,39)" fg:x="26722" fg:w="67"/><text x="9.3249%" y="543.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;zenoh_protocol_core::locators::Locator,R&gt;&gt;::read (195 samples, 0.07%)</title><rect x="9.0444%" y="581" width="0.0662%" height="15" fill="rgb(210,108,39)" fg:x="26632" fg:w="195"/><text x="9.2944%" y="591.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (158 samples, 0.05%)</title><rect x="9.0569%" y="565" width="0.0537%" height="15" fill="rgb(205,23,29)" fg:x="26669" fg:w="158"/><text x="9.3069%" y="575.50"></text></g><g><title>zenoh_protocol_core::split_once (38 samples, 0.01%)</title><rect x="9.0977%" y="549" width="0.0129%" height="15" fill="rgb(246,139,46)" fg:x="26789" fg:w="38"/><text x="9.3477%" y="559.50"></text></g><g><title>[libc.so.6] (43 samples, 0.01%)</title><rect x="9.1211%" y="453" width="0.0146%" height="15" fill="rgb(250,81,26)" fg:x="26858" fg:w="43"/><text x="9.3711%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (283 samples, 0.10%)</title><rect x="9.0403%" y="613" width="0.0961%" height="15" fill="rgb(214,104,7)" fg:x="26620" fg:w="283"/><text x="9.2903%" y="623.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (283 samples, 0.10%)</title><rect x="9.0403%" y="597" width="0.0961%" height="15" fill="rgb(233,189,8)" fg:x="26620" fg:w="283"/><text x="9.2903%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (76 samples, 0.03%)</title><rect x="9.1106%" y="581" width="0.0258%" height="15" fill="rgb(228,141,17)" fg:x="26827" fg:w="76"/><text x="9.3606%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (76 samples, 0.03%)</title><rect x="9.1106%" y="565" width="0.0258%" height="15" fill="rgb(247,157,1)" fg:x="26827" fg:w="76"/><text x="9.3606%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (76 samples, 0.03%)</title><rect x="9.1106%" y="549" width="0.0258%" height="15" fill="rgb(249,225,5)" fg:x="26827" fg:w="76"/><text x="9.3606%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (76 samples, 0.03%)</title><rect x="9.1106%" y="533" width="0.0258%" height="15" fill="rgb(242,55,13)" fg:x="26827" fg:w="76"/><text x="9.3606%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.03%)</title><rect x="9.1106%" y="517" width="0.0258%" height="15" fill="rgb(230,49,50)" fg:x="26827" fg:w="76"/><text x="9.3606%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.03%)</title><rect x="9.1106%" y="501" width="0.0258%" height="15" fill="rgb(241,111,38)" fg:x="26827" fg:w="76"/><text x="9.3606%" y="511.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.03%)</title><rect x="9.1106%" y="485" width="0.0258%" height="15" fill="rgb(252,155,4)" fg:x="26827" fg:w="76"/><text x="9.3606%" y="495.50"></text></g><g><title>malloc (76 samples, 0.03%)</title><rect x="9.1106%" y="469" width="0.0258%" height="15" fill="rgb(212,69,32)" fg:x="26827" fg:w="76"/><text x="9.3606%" y="479.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (290 samples, 0.10%)</title><rect x="9.0403%" y="773" width="0.0985%" height="15" fill="rgb(243,107,47)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.10%)</title><rect x="9.0403%" y="757" width="0.0985%" height="15" fill="rgb(247,130,12)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="767.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (290 samples, 0.10%)</title><rect x="9.0403%" y="741" width="0.0985%" height="15" fill="rgb(233,74,16)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.10%)</title><rect x="9.0403%" y="725" width="0.0985%" height="15" fill="rgb(208,58,18)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="735.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (290 samples, 0.10%)</title><rect x="9.0403%" y="709" width="0.0985%" height="15" fill="rgb(242,225,1)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="719.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (290 samples, 0.10%)</title><rect x="9.0403%" y="693" width="0.0985%" height="15" fill="rgb(249,39,40)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="703.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (290 samples, 0.10%)</title><rect x="9.0403%" y="677" width="0.0985%" height="15" fill="rgb(207,72,44)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="687.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (290 samples, 0.10%)</title><rect x="9.0403%" y="661" width="0.0985%" height="15" fill="rgb(215,193,12)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (290 samples, 0.10%)</title><rect x="9.0403%" y="645" width="0.0985%" height="15" fill="rgb(248,41,39)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="655.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (290 samples, 0.10%)</title><rect x="9.0403%" y="629" width="0.0985%" height="15" fill="rgb(253,85,4)" fg:x="26620" fg:w="290"/><text x="9.2903%" y="639.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (39 samples, 0.01%)</title><rect x="9.1395%" y="645" width="0.0132%" height="15" fill="rgb(243,70,31)" fg:x="26912" fg:w="39"/><text x="9.3895%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (122 samples, 0.04%)</title><rect x="9.1395%" y="677" width="0.0414%" height="15" fill="rgb(253,195,26)" fg:x="26912" fg:w="122"/><text x="9.3895%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (122 samples, 0.04%)</title><rect x="9.1395%" y="661" width="0.0414%" height="15" fill="rgb(243,42,11)" fg:x="26912" fg:w="122"/><text x="9.3895%" y="671.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (83 samples, 0.03%)</title><rect x="9.1527%" y="645" width="0.0282%" height="15" fill="rgb(239,66,17)" fg:x="26951" fg:w="83"/><text x="9.4027%" y="655.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (52 samples, 0.02%)</title><rect x="9.1632%" y="629" width="0.0177%" height="15" fill="rgb(217,132,21)" fg:x="26982" fg:w="52"/><text x="9.4132%" y="639.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (125 samples, 0.04%)</title><rect x="9.1388%" y="693" width="0.0425%" height="15" fill="rgb(252,202,21)" fg:x="26910" fg:w="125"/><text x="9.3888%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (161 samples, 0.05%)</title><rect x="9.1388%" y="709" width="0.0547%" height="15" fill="rgb(233,98,36)" fg:x="26910" fg:w="161"/><text x="9.3888%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (455 samples, 0.15%)</title><rect x="9.0403%" y="789" width="0.1545%" height="15" fill="rgb(216,153,54)" fg:x="26620" fg:w="455"/><text x="9.2903%" y="799.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (165 samples, 0.06%)</title><rect x="9.1388%" y="773" width="0.0560%" height="15" fill="rgb(250,99,7)" fg:x="26910" fg:w="165"/><text x="9.3888%" y="783.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (165 samples, 0.06%)</title><rect x="9.1388%" y="757" width="0.0560%" height="15" fill="rgb(207,56,50)" fg:x="26910" fg:w="165"/><text x="9.3888%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (165 samples, 0.06%)</title><rect x="9.1388%" y="741" width="0.0560%" height="15" fill="rgb(244,61,34)" fg:x="26910" fg:w="165"/><text x="9.3888%" y="751.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (165 samples, 0.06%)</title><rect x="9.1388%" y="725" width="0.0560%" height="15" fill="rgb(241,50,38)" fg:x="26910" fg:w="165"/><text x="9.3888%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (41 samples, 0.01%)</title><rect x="9.2060%" y="469" width="0.0139%" height="15" fill="rgb(212,166,30)" fg:x="27108" fg:w="41"/><text x="9.4560%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (33 samples, 0.01%)</title><rect x="9.2088%" y="453" width="0.0112%" height="15" fill="rgb(249,127,32)" fg:x="27116" fg:w="33"/><text x="9.4588%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.01%)</title><rect x="9.2088%" y="437" width="0.0112%" height="15" fill="rgb(209,103,0)" fg:x="27116" fg:w="33"/><text x="9.4588%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.01%)</title><rect x="9.2088%" y="421" width="0.0112%" height="15" fill="rgb(238,209,51)" fg:x="27116" fg:w="33"/><text x="9.4588%" y="431.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.01%)</title><rect x="9.2088%" y="405" width="0.0112%" height="15" fill="rgb(237,56,23)" fg:x="27116" fg:w="33"/><text x="9.4588%" y="415.50"></text></g><g><title>malloc (32 samples, 0.01%)</title><rect x="9.2091%" y="389" width="0.0109%" height="15" fill="rgb(215,153,46)" fg:x="27117" fg:w="32"/><text x="9.4591%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;alloc::sync::Arc&lt;async_io::reactor::Source&gt;&gt;&gt;&gt; (97 samples, 0.03%)</title><rect x="9.2200%" y="469" width="0.0329%" height="15" fill="rgb(224,49,31)" fg:x="27149" fg:w="97"/><text x="9.4700%" y="479.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.03%)</title><rect x="9.2200%" y="453" width="0.0329%" height="15" fill="rgb(250,18,42)" fg:x="27149" fg:w="97"/><text x="9.4700%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (97 samples, 0.03%)</title><rect x="9.2200%" y="437" width="0.0329%" height="15" fill="rgb(215,176,39)" fg:x="27149" fg:w="97"/><text x="9.4700%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (97 samples, 0.03%)</title><rect x="9.2200%" y="421" width="0.0329%" height="15" fill="rgb(223,77,29)" fg:x="27149" fg:w="97"/><text x="9.4700%" y="431.50"></text></g><g><title>syscall (96 samples, 0.03%)</title><rect x="9.2203%" y="405" width="0.0326%" height="15" fill="rgb(234,94,52)" fg:x="27150" fg:w="96"/><text x="9.4703%" y="415.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="9.2206%" y="389" width="0.0323%" height="15" fill="rgb(220,154,50)" fg:x="27151" fg:w="95"/><text x="9.4706%" y="399.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="9.2213%" y="373" width="0.0316%" height="15" fill="rgb(212,11,10)" fg:x="27153" fg:w="93"/><text x="9.4713%" y="383.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="9.2223%" y="357" width="0.0306%" height="15" fill="rgb(205,166,19)" fg:x="27156" fg:w="90"/><text x="9.4723%" y="367.50"></text></g><g><title>[unknown] (86 samples, 0.03%)</title><rect x="9.2237%" y="341" width="0.0292%" height="15" fill="rgb(244,198,16)" fg:x="27160" fg:w="86"/><text x="9.4737%" y="351.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="9.2274%" y="325" width="0.0255%" height="15" fill="rgb(219,69,12)" fg:x="27171" fg:w="75"/><text x="9.4774%" y="335.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="9.2352%" y="309" width="0.0177%" height="15" fill="rgb(245,30,7)" fg:x="27194" fg:w="52"/><text x="9.4852%" y="319.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="9.2420%" y="293" width="0.0109%" height="15" fill="rgb(218,221,48)" fg:x="27214" fg:w="32"/><text x="9.4920%" y="303.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (206 samples, 0.07%)</title><rect x="9.1948%" y="549" width="0.0700%" height="15" fill="rgb(216,66,15)" fg:x="27075" fg:w="206"/><text x="9.4448%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (206 samples, 0.07%)</title><rect x="9.1948%" y="533" width="0.0700%" height="15" fill="rgb(226,122,50)" fg:x="27075" fg:w="206"/><text x="9.4448%" y="543.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (206 samples, 0.07%)</title><rect x="9.1948%" y="517" width="0.0700%" height="15" fill="rgb(239,156,16)" fg:x="27075" fg:w="206"/><text x="9.4448%" y="527.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (187 samples, 0.06%)</title><rect x="9.2013%" y="501" width="0.0635%" height="15" fill="rgb(224,27,38)" fg:x="27094" fg:w="187"/><text x="9.4513%" y="511.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (187 samples, 0.06%)</title><rect x="9.2013%" y="485" width="0.0635%" height="15" fill="rgb(224,39,27)" fg:x="27094" fg:w="187"/><text x="9.4513%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (245 samples, 0.08%)</title><rect x="9.1948%" y="565" width="0.0832%" height="15" fill="rgb(215,92,29)" fg:x="27075" fg:w="245"/><text x="9.4448%" y="575.50"></text></g><g><title>zenoh_link_tcp::get_tcp_addr::{{closure}} (39 samples, 0.01%)</title><rect x="9.2648%" y="549" width="0.0132%" height="15" fill="rgb(207,159,16)" fg:x="27281" fg:w="39"/><text x="9.5148%" y="559.50"></text></g><g><title>&lt;str as async_std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (39 samples, 0.01%)</title><rect x="9.2648%" y="533" width="0.0132%" height="15" fill="rgb(238,163,47)" fg:x="27281" fg:w="39"/><text x="9.5148%" y="543.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (715 samples, 0.24%)</title><rect x="9.0403%" y="1221" width="0.2428%" height="15" fill="rgb(219,91,49)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (715 samples, 0.24%)</title><rect x="9.0403%" y="1205" width="0.2428%" height="15" fill="rgb(227,167,31)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1215.50"></text></g><g><title>std::panicking::try (715 samples, 0.24%)</title><rect x="9.0403%" y="1189" width="0.2428%" height="15" fill="rgb(234,80,54)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (715 samples, 0.24%)</title><rect x="9.0403%" y="1173" width="0.2428%" height="15" fill="rgb(212,114,2)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1183.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (715 samples, 0.24%)</title><rect x="9.0403%" y="1157" width="0.2428%" height="15" fill="rgb(234,50,24)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (715 samples, 0.24%)</title><rect x="9.0403%" y="1141" width="0.2428%" height="15" fill="rgb(221,68,8)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (715 samples, 0.24%)</title><rect x="9.0403%" y="1125" width="0.2428%" height="15" fill="rgb(254,180,31)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1135.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (715 samples, 0.24%)</title><rect x="9.0403%" y="1109" width="0.2428%" height="15" fill="rgb(247,130,50)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1119.50"></text></g><g><title>async_global_executor::reactor::block_on (715 samples, 0.24%)</title><rect x="9.0403%" y="1093" width="0.2428%" height="15" fill="rgb(211,109,4)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1103.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (715 samples, 0.24%)</title><rect x="9.0403%" y="1077" width="0.2428%" height="15" fill="rgb(238,50,21)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1087.50"></text></g><g><title>async_io::driver::block_on (715 samples, 0.24%)</title><rect x="9.0403%" y="1061" width="0.2428%" height="15" fill="rgb(225,57,45)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1071.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (715 samples, 0.24%)</title><rect x="9.0403%" y="1045" width="0.2428%" height="15" fill="rgb(209,196,50)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (715 samples, 0.24%)</title><rect x="9.0403%" y="1029" width="0.2428%" height="15" fill="rgb(242,140,13)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1039.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (715 samples, 0.24%)</title><rect x="9.0403%" y="1013" width="0.2428%" height="15" fill="rgb(217,111,7)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1023.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (715 samples, 0.24%)</title><rect x="9.0403%" y="997" width="0.2428%" height="15" fill="rgb(253,193,51)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (715 samples, 0.24%)</title><rect x="9.0403%" y="981" width="0.2428%" height="15" fill="rgb(252,70,29)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="991.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (715 samples, 0.24%)</title><rect x="9.0403%" y="965" width="0.2428%" height="15" fill="rgb(232,127,12)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (715 samples, 0.24%)</title><rect x="9.0403%" y="949" width="0.2428%" height="15" fill="rgb(211,180,21)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="959.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (715 samples, 0.24%)</title><rect x="9.0403%" y="933" width="0.2428%" height="15" fill="rgb(229,72,13)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (715 samples, 0.24%)</title><rect x="9.0403%" y="917" width="0.2428%" height="15" fill="rgb(240,211,49)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (715 samples, 0.24%)</title><rect x="9.0403%" y="901" width="0.2428%" height="15" fill="rgb(219,149,40)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="911.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (715 samples, 0.24%)</title><rect x="9.0403%" y="885" width="0.2428%" height="15" fill="rgb(210,127,46)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="895.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (715 samples, 0.24%)</title><rect x="9.0403%" y="869" width="0.2428%" height="15" fill="rgb(220,106,7)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (715 samples, 0.24%)</title><rect x="9.0403%" y="853" width="0.2428%" height="15" fill="rgb(249,31,22)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (715 samples, 0.24%)</title><rect x="9.0403%" y="837" width="0.2428%" height="15" fill="rgb(253,1,49)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="847.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (715 samples, 0.24%)</title><rect x="9.0403%" y="821" width="0.2428%" height="15" fill="rgb(227,144,33)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="831.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (715 samples, 0.24%)</title><rect x="9.0403%" y="805" width="0.2428%" height="15" fill="rgb(249,163,44)" fg:x="26620" fg:w="715"/><text x="9.2903%" y="815.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (260 samples, 0.09%)</title><rect x="9.1948%" y="789" width="0.0883%" height="15" fill="rgb(234,15,39)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (260 samples, 0.09%)</title><rect x="9.1948%" y="773" width="0.0883%" height="15" fill="rgb(207,66,16)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="783.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (260 samples, 0.09%)</title><rect x="9.1948%" y="757" width="0.0883%" height="15" fill="rgb(233,112,24)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (260 samples, 0.09%)</title><rect x="9.1948%" y="741" width="0.0883%" height="15" fill="rgb(230,90,22)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="751.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (260 samples, 0.09%)</title><rect x="9.1948%" y="725" width="0.0883%" height="15" fill="rgb(229,61,13)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (260 samples, 0.09%)</title><rect x="9.1948%" y="709" width="0.0883%" height="15" fill="rgb(225,57,24)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="719.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (260 samples, 0.09%)</title><rect x="9.1948%" y="693" width="0.0883%" height="15" fill="rgb(208,169,48)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (260 samples, 0.09%)</title><rect x="9.1948%" y="677" width="0.0883%" height="15" fill="rgb(244,218,51)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="687.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (260 samples, 0.09%)</title><rect x="9.1948%" y="661" width="0.0883%" height="15" fill="rgb(214,148,10)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (260 samples, 0.09%)</title><rect x="9.1948%" y="645" width="0.0883%" height="15" fill="rgb(225,174,27)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="655.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (260 samples, 0.09%)</title><rect x="9.1948%" y="629" width="0.0883%" height="15" fill="rgb(230,96,26)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (260 samples, 0.09%)</title><rect x="9.1948%" y="613" width="0.0883%" height="15" fill="rgb(232,10,30)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (260 samples, 0.09%)</title><rect x="9.1948%" y="597" width="0.0883%" height="15" fill="rgb(222,8,50)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="607.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (260 samples, 0.09%)</title><rect x="9.1948%" y="581" width="0.0883%" height="15" fill="rgb(213,81,27)" fg:x="27075" fg:w="260"/><text x="9.4448%" y="591.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (56 samples, 0.02%)</title><rect x="9.3083%" y="373" width="0.0190%" height="15" fill="rgb(245,50,10)" fg:x="27409" fg:w="56"/><text x="9.5583%" y="383.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (78 samples, 0.03%)</title><rect x="9.3021%" y="453" width="0.0265%" height="15" fill="rgb(216,100,18)" fg:x="27391" fg:w="78"/><text x="9.5521%" y="463.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (77 samples, 0.03%)</title><rect x="9.3025%" y="437" width="0.0261%" height="15" fill="rgb(236,147,54)" fg:x="27392" fg:w="77"/><text x="9.5525%" y="447.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (77 samples, 0.03%)</title><rect x="9.3025%" y="421" width="0.0261%" height="15" fill="rgb(205,143,26)" fg:x="27392" fg:w="77"/><text x="9.5525%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (76 samples, 0.03%)</title><rect x="9.3028%" y="405" width="0.0258%" height="15" fill="rgb(236,26,9)" fg:x="27393" fg:w="76"/><text x="9.5528%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (60 samples, 0.02%)</title><rect x="9.3083%" y="389" width="0.0204%" height="15" fill="rgb(221,165,53)" fg:x="27409" fg:w="60"/><text x="9.5583%" y="399.50"></text></g><g><title>[libc.so.6] (36 samples, 0.01%)</title><rect x="9.3286%" y="453" width="0.0122%" height="15" fill="rgb(214,110,17)" fg:x="27469" fg:w="36"/><text x="9.5786%" y="463.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (77 samples, 0.03%)</title><rect x="9.3487%" y="437" width="0.0261%" height="15" fill="rgb(237,197,12)" fg:x="27528" fg:w="77"/><text x="9.5987%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (66 samples, 0.02%)</title><rect x="9.3762%" y="405" width="0.0224%" height="15" fill="rgb(205,84,17)" fg:x="27609" fg:w="66"/><text x="9.6262%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (39 samples, 0.01%)</title><rect x="9.3853%" y="389" width="0.0132%" height="15" fill="rgb(237,18,45)" fg:x="27636" fg:w="39"/><text x="9.6353%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (32 samples, 0.01%)</title><rect x="9.3877%" y="373" width="0.0109%" height="15" fill="rgb(221,87,14)" fg:x="27643" fg:w="32"/><text x="9.6377%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (86 samples, 0.03%)</title><rect x="9.3748%" y="437" width="0.0292%" height="15" fill="rgb(238,186,15)" fg:x="27605" fg:w="86"/><text x="9.6248%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.03%)</title><rect x="9.3748%" y="421" width="0.0292%" height="15" fill="rgb(208,115,11)" fg:x="27605" fg:w="86"/><text x="9.6248%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (181 samples, 0.06%)</title><rect x="9.3480%" y="453" width="0.0615%" height="15" fill="rgb(254,175,0)" fg:x="27526" fg:w="181"/><text x="9.5980%" y="463.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="9.4135%" y="405" width="0.0112%" height="15" fill="rgb(227,24,42)" fg:x="27719" fg:w="33"/><text x="9.6635%" y="415.50"></text></g><g><title>async_std::utils::abort_on_panic (32 samples, 0.01%)</title><rect x="9.4139%" y="389" width="0.0109%" height="15" fill="rgb(223,211,37)" fg:x="27720" fg:w="32"/><text x="9.6639%" y="399.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop::{{closure}} (32 samples, 0.01%)</title><rect x="9.4139%" y="373" width="0.0109%" height="15" fill="rgb(235,49,27)" fg:x="27720" fg:w="32"/><text x="9.6639%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (40 samples, 0.01%)</title><rect x="9.4115%" y="421" width="0.0136%" height="15" fill="rgb(254,97,51)" fg:x="27713" fg:w="40"/><text x="9.6615%" y="431.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (410 samples, 0.14%)</title><rect x="9.2909%" y="469" width="0.1392%" height="15" fill="rgb(249,51,40)" fg:x="27358" fg:w="410"/><text x="9.5409%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::Or&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (61 samples, 0.02%)</title><rect x="9.4095%" y="453" width="0.0207%" height="15" fill="rgb(210,128,45)" fg:x="27707" fg:w="61"/><text x="9.6595%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt; (61 samples, 0.02%)</title><rect x="9.4095%" y="437" width="0.0207%" height="15" fill="rgb(224,137,50)" fg:x="27707" fg:w="61"/><text x="9.6595%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (412 samples, 0.14%)</title><rect x="9.2909%" y="485" width="0.1399%" height="15" fill="rgb(242,15,9)" fg:x="27358" fg:w="412"/><text x="9.5409%" y="495.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (477 samples, 0.16%)</title><rect x="9.2841%" y="501" width="0.1620%" height="15" fill="rgb(233,187,41)" fg:x="27338" fg:w="477"/><text x="9.5341%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (478 samples, 0.16%)</title><rect x="9.2841%" y="517" width="0.1623%" height="15" fill="rgb(227,2,29)" fg:x="27338" fg:w="478"/><text x="9.5341%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (53 samples, 0.02%)</title><rect x="9.4675%" y="469" width="0.0180%" height="15" fill="rgb(222,70,3)" fg:x="27878" fg:w="53"/><text x="9.7175%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (53 samples, 0.02%)</title><rect x="9.4675%" y="453" width="0.0180%" height="15" fill="rgb(213,11,42)" fg:x="27878" fg:w="53"/><text x="9.7175%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (57 samples, 0.02%)</title><rect x="9.4886%" y="437" width="0.0194%" height="15" fill="rgb(225,150,9)" fg:x="27940" fg:w="57"/><text x="9.7386%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_swap (57 samples, 0.02%)</title><rect x="9.4886%" y="421" width="0.0194%" height="15" fill="rgb(230,162,45)" fg:x="27940" fg:w="57"/><text x="9.7386%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (382 samples, 0.13%)</title><rect x="9.4587%" y="517" width="0.1297%" height="15" fill="rgb(222,14,52)" fg:x="27852" fg:w="382"/><text x="9.7087%" y="527.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (382 samples, 0.13%)</title><rect x="9.4587%" y="501" width="0.1297%" height="15" fill="rgb(254,198,14)" fg:x="27852" fg:w="382"/><text x="9.7087%" y="511.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (382 samples, 0.13%)</title><rect x="9.4587%" y="485" width="0.1297%" height="15" fill="rgb(220,217,30)" fg:x="27852" fg:w="382"/><text x="9.7087%" y="495.50"></text></g><g><title>parking::Unparker::unpark (303 samples, 0.10%)</title><rect x="9.4855%" y="469" width="0.1029%" height="15" fill="rgb(215,146,41)" fg:x="27931" fg:w="303"/><text x="9.7355%" y="479.50"></text></g><g><title>parking::Inner::unpark (297 samples, 0.10%)</title><rect x="9.4876%" y="453" width="0.1009%" height="15" fill="rgb(217,27,36)" fg:x="27937" fg:w="297"/><text x="9.7376%" y="463.50"></text></g><g><title>syscall (231 samples, 0.08%)</title><rect x="9.5100%" y="437" width="0.0784%" height="15" fill="rgb(219,218,39)" fg:x="28003" fg:w="231"/><text x="9.7600%" y="447.50"></text></g><g><title>[unknown] (229 samples, 0.08%)</title><rect x="9.5107%" y="421" width="0.0778%" height="15" fill="rgb(219,4,42)" fg:x="28005" fg:w="229"/><text x="9.7607%" y="431.50"></text></g><g><title>[unknown] (227 samples, 0.08%)</title><rect x="9.5113%" y="405" width="0.0771%" height="15" fill="rgb(249,119,36)" fg:x="28007" fg:w="227"/><text x="9.7613%" y="415.50"></text></g><g><title>[unknown] (226 samples, 0.08%)</title><rect x="9.5117%" y="389" width="0.0768%" height="15" fill="rgb(209,23,33)" fg:x="28008" fg:w="226"/><text x="9.7617%" y="399.50"></text></g><g><title>[unknown] (219 samples, 0.07%)</title><rect x="9.5141%" y="373" width="0.0744%" height="15" fill="rgb(211,10,0)" fg:x="28015" fg:w="219"/><text x="9.7641%" y="383.50"></text></g><g><title>[unknown] (206 samples, 0.07%)</title><rect x="9.5185%" y="357" width="0.0700%" height="15" fill="rgb(208,99,37)" fg:x="28028" fg:w="206"/><text x="9.7685%" y="367.50"></text></g><g><title>[unknown] (137 samples, 0.05%)</title><rect x="9.5419%" y="341" width="0.0465%" height="15" fill="rgb(213,132,31)" fg:x="28097" fg:w="137"/><text x="9.7919%" y="351.50"></text></g><g><title>[unknown] (96 samples, 0.03%)</title><rect x="9.5558%" y="325" width="0.0326%" height="15" fill="rgb(243,129,40)" fg:x="28138" fg:w="96"/><text x="9.8058%" y="335.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="9.5633%" y="309" width="0.0251%" height="15" fill="rgb(210,66,33)" fg:x="28160" fg:w="74"/><text x="9.8133%" y="319.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="9.5735%" y="293" width="0.0149%" height="15" fill="rgb(209,189,4)" fg:x="28190" fg:w="44"/><text x="9.8235%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (76 samples, 0.03%)</title><rect x="9.6125%" y="421" width="0.0258%" height="15" fill="rgb(214,107,37)" fg:x="28305" fg:w="76"/><text x="9.8625%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::block_on&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt; (66 samples, 0.02%)</title><rect x="9.6159%" y="405" width="0.0224%" height="15" fill="rgb(245,88,54)" fg:x="28315" fg:w="66"/><text x="9.8659%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (41 samples, 0.01%)</title><rect x="9.6244%" y="389" width="0.0139%" height="15" fill="rgb(205,146,20)" fg:x="28340" fg:w="41"/><text x="9.8744%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (41 samples, 0.01%)</title><rect x="9.6244%" y="373" width="0.0139%" height="15" fill="rgb(220,161,25)" fg:x="28340" fg:w="41"/><text x="9.8744%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.01%)</title><rect x="9.6244%" y="357" width="0.0139%" height="15" fill="rgb(215,152,15)" fg:x="28340" fg:w="41"/><text x="9.8744%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (159 samples, 0.05%)</title><rect x="9.5884%" y="517" width="0.0540%" height="15" fill="rgb(233,192,44)" fg:x="28234" fg:w="159"/><text x="9.8384%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (159 samples, 0.05%)</title><rect x="9.5884%" y="501" width="0.0540%" height="15" fill="rgb(240,170,46)" fg:x="28234" fg:w="159"/><text x="9.8384%" y="511.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (156 samples, 0.05%)</title><rect x="9.5895%" y="485" width="0.0530%" height="15" fill="rgb(207,104,33)" fg:x="28237" fg:w="156"/><text x="9.8395%" y="495.50"></text></g><g><title>core::mem::drop (126 samples, 0.04%)</title><rect x="9.5996%" y="469" width="0.0428%" height="15" fill="rgb(219,21,39)" fg:x="28267" fg:w="126"/><text x="9.8496%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (126 samples, 0.04%)</title><rect x="9.5996%" y="453" width="0.0428%" height="15" fill="rgb(214,133,29)" fg:x="28267" fg:w="126"/><text x="9.8496%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.04%)</title><rect x="9.5996%" y="437" width="0.0428%" height="15" fill="rgb(226,93,6)" fg:x="28267" fg:w="126"/><text x="9.8496%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Parker&gt; (41 samples, 0.01%)</title><rect x="9.6424%" y="517" width="0.0139%" height="15" fill="rgb(252,222,34)" fg:x="28393" fg:w="41"/><text x="9.8924%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (41 samples, 0.01%)</title><rect x="9.6424%" y="501" width="0.0139%" height="15" fill="rgb(252,92,48)" fg:x="28393" fg:w="41"/><text x="9.8924%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (41 samples, 0.01%)</title><rect x="9.6424%" y="485" width="0.0139%" height="15" fill="rgb(245,223,24)" fg:x="28393" fg:w="41"/><text x="9.8924%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.01%)</title><rect x="9.6424%" y="469" width="0.0139%" height="15" fill="rgb(205,176,3)" fg:x="28393" fg:w="41"/><text x="9.8924%" y="479.50"></text></g><g><title>parking::Parker::new (32 samples, 0.01%)</title><rect x="9.6655%" y="501" width="0.0109%" height="15" fill="rgb(235,151,15)" fg:x="28461" fg:w="32"/><text x="9.9155%" y="511.50"></text></g><g><title>parking::pair (33 samples, 0.01%)</title><rect x="9.6655%" y="517" width="0.0112%" height="15" fill="rgb(237,209,11)" fg:x="28461" fg:w="33"/><text x="9.9155%" y="527.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (1,176 samples, 0.40%)</title><rect x="9.2831%" y="853" width="0.3994%" height="15" fill="rgb(243,227,24)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,176 samples, 0.40%)</title><rect x="9.2831%" y="837" width="0.3994%" height="15" fill="rgb(239,193,16)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (1,176 samples, 0.40%)</title><rect x="9.2831%" y="821" width="0.3994%" height="15" fill="rgb(231,27,9)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="831.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,176 samples, 0.40%)</title><rect x="9.2831%" y="805" width="0.3994%" height="15" fill="rgb(219,169,10)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="815.50"></text></g><g><title>async_std::task::block_on::block_on (1,176 samples, 0.40%)</title><rect x="9.2831%" y="789" width="0.3994%" height="15" fill="rgb(244,229,43)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="799.50"></text></g><g><title>async_std::task::builder::Builder::blocking (1,176 samples, 0.40%)</title><rect x="9.2831%" y="773" width="0.3994%" height="15" fill="rgb(254,38,20)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,176 samples, 0.40%)</title><rect x="9.2831%" y="757" width="0.3994%" height="15" fill="rgb(250,47,30)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,176 samples, 0.40%)</title><rect x="9.2831%" y="741" width="0.3994%" height="15" fill="rgb(224,124,36)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="751.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (1,176 samples, 0.40%)</title><rect x="9.2831%" y="725" width="0.3994%" height="15" fill="rgb(246,68,51)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,176 samples, 0.40%)</title><rect x="9.2831%" y="709" width="0.3994%" height="15" fill="rgb(253,43,49)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,176 samples, 0.40%)</title><rect x="9.2831%" y="693" width="0.3994%" height="15" fill="rgb(219,54,36)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,176 samples, 0.40%)</title><rect x="9.2831%" y="677" width="0.3994%" height="15" fill="rgb(227,133,34)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,176 samples, 0.40%)</title><rect x="9.2831%" y="661" width="0.3994%" height="15" fill="rgb(247,227,15)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="671.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (1,176 samples, 0.40%)</title><rect x="9.2831%" y="645" width="0.3994%" height="15" fill="rgb(229,96,14)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="655.50"></text></g><g><title>async_global_executor::executor::block_on (1,176 samples, 0.40%)</title><rect x="9.2831%" y="629" width="0.3994%" height="15" fill="rgb(220,79,17)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,176 samples, 0.40%)</title><rect x="9.2831%" y="613" width="0.3994%" height="15" fill="rgb(205,131,53)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,176 samples, 0.40%)</title><rect x="9.2831%" y="597" width="0.3994%" height="15" fill="rgb(209,50,29)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="607.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (1,176 samples, 0.40%)</title><rect x="9.2831%" y="581" width="0.3994%" height="15" fill="rgb(245,86,46)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="591.50"></text></g><g><title>async_global_executor::reactor::block_on (1,176 samples, 0.40%)</title><rect x="9.2831%" y="565" width="0.3994%" height="15" fill="rgb(235,66,46)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="575.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,176 samples, 0.40%)</title><rect x="9.2831%" y="549" width="0.3994%" height="15" fill="rgb(232,148,31)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="559.50"></text></g><g><title>async_io::driver::block_on (1,176 samples, 0.40%)</title><rect x="9.2831%" y="533" width="0.3994%" height="15" fill="rgb(217,149,8)" fg:x="27335" fg:w="1176"/><text x="9.5331%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;zenoh::net::routing::router::Tables&gt;&gt; (144 samples, 0.05%)</title><rect x="9.7368%" y="773" width="0.0489%" height="15" fill="rgb(209,183,11)" fg:x="28671" fg:w="144"/><text x="9.9868%" y="783.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.05%)</title><rect x="9.7368%" y="757" width="0.0489%" height="15" fill="rgb(208,55,20)" fg:x="28671" fg:w="144"/><text x="9.9868%" y="767.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (136 samples, 0.05%)</title><rect x="9.7396%" y="741" width="0.0462%" height="15" fill="rgb(218,39,14)" fg:x="28679" fg:w="136"/><text x="9.9896%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (136 samples, 0.05%)</title><rect x="9.7396%" y="725" width="0.0462%" height="15" fill="rgb(216,169,33)" fg:x="28679" fg:w="136"/><text x="9.9896%" y="735.50"></text></g><g><title>syscall (116 samples, 0.04%)</title><rect x="9.7463%" y="709" width="0.0394%" height="15" fill="rgb(233,80,24)" fg:x="28699" fg:w="116"/><text x="9.9963%" y="719.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="9.7467%" y="693" width="0.0391%" height="15" fill="rgb(213,179,31)" fg:x="28700" fg:w="115"/><text x="9.9967%" y="703.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="9.7467%" y="677" width="0.0391%" height="15" fill="rgb(209,19,5)" fg:x="28700" fg:w="115"/><text x="9.9967%" y="687.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="9.7467%" y="661" width="0.0391%" height="15" fill="rgb(219,18,35)" fg:x="28700" fg:w="115"/><text x="9.9967%" y="671.50"></text></g><g><title>[unknown] (108 samples, 0.04%)</title><rect x="9.7491%" y="645" width="0.0367%" height="15" fill="rgb(209,169,16)" fg:x="28707" fg:w="108"/><text x="9.9991%" y="655.50"></text></g><g><title>[unknown] (99 samples, 0.03%)</title><rect x="9.7521%" y="629" width="0.0336%" height="15" fill="rgb(245,90,51)" fg:x="28716" fg:w="99"/><text x="10.0021%" y="639.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="9.7606%" y="613" width="0.0251%" height="15" fill="rgb(220,99,45)" fg:x="28741" fg:w="74"/><text x="10.0106%" y="623.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="9.7674%" y="597" width="0.0183%" height="15" fill="rgb(249,89,25)" fg:x="28761" fg:w="54"/><text x="10.0174%" y="607.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="9.7688%" y="581" width="0.0170%" height="15" fill="rgb(239,193,0)" fg:x="28765" fg:w="50"/><text x="10.0188%" y="591.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="9.7745%" y="565" width="0.0112%" height="15" fill="rgb(231,126,1)" fg:x="28782" fg:w="33"/><text x="10.0245%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (348 samples, 0.12%)</title><rect x="9.8248%" y="677" width="0.1182%" height="15" fill="rgb(243,166,3)" fg:x="28930" fg:w="348"/><text x="10.0748%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (348 samples, 0.12%)</title><rect x="9.8248%" y="661" width="0.1182%" height="15" fill="rgb(223,22,34)" fg:x="28930" fg:w="348"/><text x="10.0748%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_write (1,799 samples, 0.61%)</title><rect x="9.8075%" y="709" width="0.6110%" height="15" fill="rgb(251,52,51)" fg:x="28879" fg:w="1799"/><text x="10.0575%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_until (1,799 samples, 0.61%)</title><rect x="9.8075%" y="693" width="0.6110%" height="15" fill="rgb(221,165,28)" fg:x="28879" fg:w="1799"/><text x="10.0575%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_write::{{closure}} (1,400 samples, 0.48%)</title><rect x="9.9430%" y="677" width="0.4754%" height="15" fill="rgb(218,121,47)" fg:x="29278" fg:w="1400"/><text x="10.1930%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_unlocked (1,400 samples, 0.48%)</title><rect x="9.9430%" y="661" width="0.4754%" height="15" fill="rgb(209,120,9)" fg:x="29278" fg:w="1400"/><text x="10.1930%" y="671.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="10.3984%" y="645" width="0.0200%" height="15" fill="rgb(236,68,12)" fg:x="30619" fg:w="59"/><text x="10.6484%" y="655.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="10.4062%" y="629" width="0.0122%" height="15" fill="rgb(225,194,26)" fg:x="30642" fg:w="36"/><text x="10.6562%" y="639.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="10.4065%" y="613" width="0.0119%" height="15" fill="rgb(231,84,39)" fg:x="30643" fg:w="35"/><text x="10.6565%" y="623.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.4079%" y="597" width="0.0105%" height="15" fill="rgb(210,11,45)" fg:x="30647" fg:w="31"/><text x="10.6579%" y="607.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (1,860 samples, 0.63%)</title><rect x="9.7902%" y="773" width="0.6317%" height="15" fill="rgb(224,54,52)" fg:x="28828" fg:w="1860"/><text x="10.0402%" y="783.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (1,848 samples, 0.63%)</title><rect x="9.7942%" y="757" width="0.6276%" height="15" fill="rgb(238,102,14)" fg:x="28840" fg:w="1848"/><text x="10.0442%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (1,848 samples, 0.63%)</title><rect x="9.7942%" y="741" width="0.6276%" height="15" fill="rgb(243,160,52)" fg:x="28840" fg:w="1848"/><text x="10.0442%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_contended (1,847 samples, 0.63%)</title><rect x="9.7946%" y="725" width="0.6273%" height="15" fill="rgb(216,114,19)" fg:x="28841" fg:w="1847"/><text x="10.0446%" y="735.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (31 samples, 0.01%)</title><rect x="10.4225%" y="773" width="0.0105%" height="15" fill="rgb(244,166,37)" fg:x="30690" fg:w="31"/><text x="10.6725%" y="783.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_pid (37 samples, 0.01%)</title><rect x="10.4334%" y="773" width="0.0126%" height="15" fill="rgb(246,29,44)" fg:x="30722" fg:w="37"/><text x="10.6834%" y="783.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (167 samples, 0.06%)</title><rect x="10.4480%" y="757" width="0.0567%" height="15" fill="rgb(215,56,53)" fg:x="30765" fg:w="167"/><text x="10.6980%" y="767.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (167 samples, 0.06%)</title><rect x="10.4480%" y="741" width="0.0567%" height="15" fill="rgb(217,60,2)" fg:x="30765" fg:w="167"/><text x="10.6980%" y="751.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (73 samples, 0.02%)</title><rect x="10.4799%" y="725" width="0.0248%" height="15" fill="rgb(207,26,24)" fg:x="30859" fg:w="73"/><text x="10.7299%" y="735.50"></text></g><g><title>alloc::rc::is_dangling (73 samples, 0.02%)</title><rect x="10.4799%" y="709" width="0.0248%" height="15" fill="rgb(252,210,15)" fg:x="30859" fg:w="73"/><text x="10.7299%" y="719.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (3,612 samples, 1.23%)</title><rect x="9.2831%" y="933" width="1.2267%" height="15" fill="rgb(253,209,26)" fg:x="27335" fg:w="3612"/><text x="9.5331%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,612 samples, 1.23%)</title><rect x="9.2831%" y="917" width="1.2267%" height="15" fill="rgb(238,170,14)" fg:x="27335" fg:w="3612"/><text x="9.5331%" y="927.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (3,612 samples, 1.23%)</title><rect x="9.2831%" y="901" width="1.2267%" height="15" fill="rgb(216,178,15)" fg:x="27335" fg:w="3612"/><text x="9.5331%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,612 samples, 1.23%)</title><rect x="9.2831%" y="885" width="1.2267%" height="15" fill="rgb(250,197,2)" fg:x="27335" fg:w="3612"/><text x="9.5331%" y="895.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (3,612 samples, 1.23%)</title><rect x="9.2831%" y="869" width="1.2267%" height="15" fill="rgb(212,70,42)" fg:x="27335" fg:w="3612"/><text x="9.5331%" y="879.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (2,436 samples, 0.83%)</title><rect x="9.6825%" y="853" width="0.8273%" height="15" fill="rgb(227,213,9)" fg:x="28511" fg:w="2436"/><text x="9.9325%" y="863.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (2,436 samples, 0.83%)</title><rect x="9.6825%" y="837" width="0.8273%" height="15" fill="rgb(245,99,25)" fg:x="28511" fg:w="2436"/><text x="9.9325%" y="847.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (2,436 samples, 0.83%)</title><rect x="9.6825%" y="821" width="0.8273%" height="15" fill="rgb(250,82,29)" fg:x="28511" fg:w="2436"/><text x="9.9325%" y="831.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (2,436 samples, 0.83%)</title><rect x="9.6825%" y="805" width="0.8273%" height="15" fill="rgb(241,226,54)" fg:x="28511" fg:w="2436"/><text x="9.9325%" y="815.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (2,436 samples, 0.83%)</title><rect x="9.6825%" y="789" width="0.8273%" height="15" fill="rgb(221,99,41)" fg:x="28511" fg:w="2436"/><text x="9.9325%" y="799.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_whatami (188 samples, 0.06%)</title><rect x="10.4459%" y="773" width="0.0638%" height="15" fill="rgb(213,90,21)" fg:x="30759" fg:w="188"/><text x="10.6959%" y="783.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (116 samples, 0.04%)</title><rect x="10.5254%" y="677" width="0.0394%" height="15" fill="rgb(205,208,24)" fg:x="30993" fg:w="116"/><text x="10.7754%" y="687.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (68 samples, 0.02%)</title><rect x="10.5417%" y="661" width="0.0231%" height="15" fill="rgb(246,31,12)" fg:x="31041" fg:w="68"/><text x="10.7917%" y="671.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (168 samples, 0.06%)</title><rect x="10.5159%" y="693" width="0.0571%" height="15" fill="rgb(213,154,6)" fg:x="30965" fg:w="168"/><text x="10.7659%" y="703.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (189 samples, 0.06%)</title><rect x="10.5098%" y="853" width="0.0642%" height="15" fill="rgb(222,163,29)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (189 samples, 0.06%)</title><rect x="10.5098%" y="837" width="0.0642%" height="15" fill="rgb(227,201,8)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (189 samples, 0.06%)</title><rect x="10.5098%" y="821" width="0.0642%" height="15" fill="rgb(233,9,32)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="831.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (189 samples, 0.06%)</title><rect x="10.5098%" y="805" width="0.0642%" height="15" fill="rgb(217,54,24)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="815.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (189 samples, 0.06%)</title><rect x="10.5098%" y="789" width="0.0642%" height="15" fill="rgb(235,192,0)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="799.50"></text></g><g><title>rsa::pkcs1v15::encrypt (189 samples, 0.06%)</title><rect x="10.5098%" y="773" width="0.0642%" height="15" fill="rgb(235,45,9)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="783.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::raw::EncryptionPrimitive&gt;::raw_encryption_primitive (189 samples, 0.06%)</title><rect x="10.5098%" y="757" width="0.0642%" height="15" fill="rgb(246,42,40)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="767.50"></text></g><g><title>rsa::internals::encrypt (189 samples, 0.06%)</title><rect x="10.5098%" y="741" width="0.0642%" height="15" fill="rgb(248,111,24)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="751.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (189 samples, 0.06%)</title><rect x="10.5098%" y="725" width="0.0642%" height="15" fill="rgb(249,65,22)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="735.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (189 samples, 0.06%)</title><rect x="10.5098%" y="709" width="0.0642%" height="15" fill="rgb(238,111,51)" fg:x="30947" fg:w="189"/><text x="10.7598%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (45 samples, 0.02%)</title><rect x="10.5865%" y="741" width="0.0153%" height="15" fill="rgb(250,118,22)" fg:x="31173" fg:w="45"/><text x="10.8365%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (45 samples, 0.02%)</title><rect x="10.5865%" y="725" width="0.0153%" height="15" fill="rgb(234,84,26)" fg:x="31173" fg:w="45"/><text x="10.8365%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 0.02%)</title><rect x="10.5865%" y="709" width="0.0153%" height="15" fill="rgb(243,172,12)" fg:x="31173" fg:w="45"/><text x="10.8365%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (45 samples, 0.02%)</title><rect x="10.5865%" y="693" width="0.0153%" height="15" fill="rgb(236,150,49)" fg:x="31173" fg:w="45"/><text x="10.8365%" y="703.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (90 samples, 0.03%)</title><rect x="10.5767%" y="837" width="0.0306%" height="15" fill="rgb(225,197,26)" fg:x="31144" fg:w="90"/><text x="10.8267%" y="847.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (90 samples, 0.03%)</title><rect x="10.5767%" y="821" width="0.0306%" height="15" fill="rgb(214,17,42)" fg:x="31144" fg:w="90"/><text x="10.8267%" y="831.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (90 samples, 0.03%)</title><rect x="10.5767%" y="805" width="0.0306%" height="15" fill="rgb(224,165,40)" fg:x="31144" fg:w="90"/><text x="10.8267%" y="815.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (65 samples, 0.02%)</title><rect x="10.5852%" y="789" width="0.0221%" height="15" fill="rgb(246,100,4)" fg:x="31169" fg:w="65"/><text x="10.8352%" y="799.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (64 samples, 0.02%)</title><rect x="10.5855%" y="773" width="0.0217%" height="15" fill="rgb(222,103,0)" fg:x="31170" fg:w="64"/><text x="10.8355%" y="783.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (62 samples, 0.02%)</title><rect x="10.5862%" y="757" width="0.0211%" height="15" fill="rgb(227,189,26)" fg:x="31172" fg:w="62"/><text x="10.8362%" y="767.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (47 samples, 0.02%)</title><rect x="10.6117%" y="581" width="0.0160%" height="15" fill="rgb(214,202,17)" fg:x="31247" fg:w="47"/><text x="10.8617%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (47 samples, 0.02%)</title><rect x="10.6117%" y="565" width="0.0160%" height="15" fill="rgb(229,111,3)" fg:x="31247" fg:w="47"/><text x="10.8617%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.02%)</title><rect x="10.6120%" y="549" width="0.0156%" height="15" fill="rgb(229,172,15)" fg:x="31248" fg:w="46"/><text x="10.8620%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 0.02%)</title><rect x="10.6120%" y="533" width="0.0156%" height="15" fill="rgb(230,224,35)" fg:x="31248" fg:w="46"/><text x="10.8620%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.02%)</title><rect x="10.6120%" y="517" width="0.0156%" height="15" fill="rgb(251,141,6)" fg:x="31248" fg:w="46"/><text x="10.8620%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.02%)</title><rect x="10.6120%" y="501" width="0.0156%" height="15" fill="rgb(225,208,6)" fg:x="31248" fg:w="46"/><text x="10.8620%" y="511.50"></text></g><g><title>alloc::alloc::alloc (46 samples, 0.02%)</title><rect x="10.6120%" y="485" width="0.0156%" height="15" fill="rgb(246,181,16)" fg:x="31248" fg:w="46"/><text x="10.8620%" y="495.50"></text></g><g><title>malloc (44 samples, 0.01%)</title><rect x="10.6127%" y="469" width="0.0149%" height="15" fill="rgb(227,129,36)" fg:x="31250" fg:w="44"/><text x="10.8627%" y="479.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="10.6144%" y="453" width="0.0132%" height="15" fill="rgb(248,117,24)" fg:x="31255" fg:w="39"/><text x="10.8644%" y="463.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="10.6412%" y="405" width="0.0299%" height="15" fill="rgb(214,185,35)" fg:x="31334" fg:w="88"/><text x="10.8912%" y="415.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="10.6412%" y="389" width="0.0299%" height="15" fill="rgb(236,150,34)" fg:x="31334" fg:w="88"/><text x="10.8912%" y="399.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="10.6412%" y="373" width="0.0299%" height="15" fill="rgb(243,228,27)" fg:x="31334" fg:w="88"/><text x="10.8912%" y="383.50"></text></g><g><title>[unknown] (86 samples, 0.03%)</title><rect x="10.6419%" y="357" width="0.0292%" height="15" fill="rgb(245,77,44)" fg:x="31336" fg:w="86"/><text x="10.8919%" y="367.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="10.6460%" y="341" width="0.0251%" height="15" fill="rgb(235,214,42)" fg:x="31348" fg:w="74"/><text x="10.8960%" y="351.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="10.6490%" y="325" width="0.0221%" height="15" fill="rgb(221,74,3)" fg:x="31357" fg:w="65"/><text x="10.8990%" y="335.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="10.6504%" y="309" width="0.0207%" height="15" fill="rgb(206,121,29)" fg:x="31361" fg:w="61"/><text x="10.9004%" y="319.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="10.6534%" y="293" width="0.0177%" height="15" fill="rgb(249,131,53)" fg:x="31370" fg:w="52"/><text x="10.9034%" y="303.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="10.6568%" y="277" width="0.0143%" height="15" fill="rgb(236,170,29)" fg:x="31380" fg:w="42"/><text x="10.9068%" y="287.50"></text></g><g><title>[libc.so.6] (222 samples, 0.08%)</title><rect x="10.6392%" y="421" width="0.0754%" height="15" fill="rgb(247,96,15)" fg:x="31328" fg:w="222"/><text x="10.8892%" y="431.50"></text></g><g><title>__mprotect (126 samples, 0.04%)</title><rect x="10.6718%" y="405" width="0.0428%" height="15" fill="rgb(211,210,7)" fg:x="31424" fg:w="126"/><text x="10.9218%" y="415.50"></text></g><g><title>[unknown] (126 samples, 0.04%)</title><rect x="10.6718%" y="389" width="0.0428%" height="15" fill="rgb(240,88,50)" fg:x="31424" fg:w="126"/><text x="10.9218%" y="399.50"></text></g><g><title>[unknown] (124 samples, 0.04%)</title><rect x="10.6725%" y="373" width="0.0421%" height="15" fill="rgb(209,229,26)" fg:x="31426" fg:w="124"/><text x="10.9225%" y="383.50"></text></g><g><title>[unknown] (122 samples, 0.04%)</title><rect x="10.6731%" y="357" width="0.0414%" height="15" fill="rgb(210,68,23)" fg:x="31428" fg:w="122"/><text x="10.9231%" y="367.50"></text></g><g><title>[unknown] (120 samples, 0.04%)</title><rect x="10.6738%" y="341" width="0.0408%" height="15" fill="rgb(229,180,13)" fg:x="31430" fg:w="120"/><text x="10.9238%" y="351.50"></text></g><g><title>[unknown] (113 samples, 0.04%)</title><rect x="10.6762%" y="325" width="0.0384%" height="15" fill="rgb(236,53,44)" fg:x="31437" fg:w="113"/><text x="10.9262%" y="335.50"></text></g><g><title>[unknown] (97 samples, 0.03%)</title><rect x="10.6816%" y="309" width="0.0329%" height="15" fill="rgb(244,214,29)" fg:x="31453" fg:w="97"/><text x="10.9316%" y="319.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="10.6918%" y="293" width="0.0228%" height="15" fill="rgb(220,75,29)" fg:x="31483" fg:w="67"/><text x="10.9418%" y="303.50"></text></g><g><title>[libc.so.6] (237 samples, 0.08%)</title><rect x="10.6344%" y="437" width="0.0805%" height="15" fill="rgb(214,183,37)" fg:x="31314" fg:w="237"/><text x="10.8844%" y="447.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (270 samples, 0.09%)</title><rect x="10.6280%" y="581" width="0.0917%" height="15" fill="rgb(239,117,29)" fg:x="31295" fg:w="270"/><text x="10.8780%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (259 samples, 0.09%)</title><rect x="10.6317%" y="565" width="0.0880%" height="15" fill="rgb(237,171,35)" fg:x="31306" fg:w="259"/><text x="10.8817%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (259 samples, 0.09%)</title><rect x="10.6317%" y="549" width="0.0880%" height="15" fill="rgb(229,178,53)" fg:x="31306" fg:w="259"/><text x="10.8817%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (259 samples, 0.09%)</title><rect x="10.6317%" y="533" width="0.0880%" height="15" fill="rgb(210,102,19)" fg:x="31306" fg:w="259"/><text x="10.8817%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (259 samples, 0.09%)</title><rect x="10.6317%" y="517" width="0.0880%" height="15" fill="rgb(235,127,22)" fg:x="31306" fg:w="259"/><text x="10.8817%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (259 samples, 0.09%)</title><rect x="10.6317%" y="501" width="0.0880%" height="15" fill="rgb(244,31,31)" fg:x="31306" fg:w="259"/><text x="10.8817%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (259 samples, 0.09%)</title><rect x="10.6317%" y="485" width="0.0880%" height="15" fill="rgb(231,43,21)" fg:x="31306" fg:w="259"/><text x="10.8817%" y="495.50"></text></g><g><title>alloc::alloc::alloc (259 samples, 0.09%)</title><rect x="10.6317%" y="469" width="0.0880%" height="15" fill="rgb(217,131,35)" fg:x="31306" fg:w="259"/><text x="10.8817%" y="479.50"></text></g><g><title>malloc (255 samples, 0.09%)</title><rect x="10.6331%" y="453" width="0.0866%" height="15" fill="rgb(221,149,4)" fg:x="31310" fg:w="255"/><text x="10.8831%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.01%)</title><rect x="10.7261%" y="549" width="0.0115%" height="15" fill="rgb(232,170,28)" fg:x="31584" fg:w="34"/><text x="10.9761%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.01%)</title><rect x="10.7261%" y="533" width="0.0115%" height="15" fill="rgb(238,56,10)" fg:x="31584" fg:w="34"/><text x="10.9761%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.01%)</title><rect x="10.7261%" y="517" width="0.0115%" height="15" fill="rgb(235,196,14)" fg:x="31584" fg:w="34"/><text x="10.9761%" y="527.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.01%)</title><rect x="10.7261%" y="501" width="0.0115%" height="15" fill="rgb(216,45,48)" fg:x="31584" fg:w="34"/><text x="10.9761%" y="511.50"></text></g><g><title>malloc (33 samples, 0.01%)</title><rect x="10.7265%" y="485" width="0.0112%" height="15" fill="rgb(238,213,17)" fg:x="31585" fg:w="33"/><text x="10.9765%" y="495.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="10.7411%" y="421" width="0.0102%" height="15" fill="rgb(212,13,2)" fg:x="31628" fg:w="30"/><text x="10.9911%" y="431.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (114 samples, 0.04%)</title><rect x="10.7244%" y="565" width="0.0387%" height="15" fill="rgb(240,114,20)" fg:x="31579" fg:w="114"/><text x="10.9744%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (75 samples, 0.03%)</title><rect x="10.7377%" y="549" width="0.0255%" height="15" fill="rgb(228,41,40)" fg:x="31618" fg:w="75"/><text x="10.9877%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (75 samples, 0.03%)</title><rect x="10.7377%" y="533" width="0.0255%" height="15" fill="rgb(244,132,35)" fg:x="31618" fg:w="75"/><text x="10.9877%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (75 samples, 0.03%)</title><rect x="10.7377%" y="517" width="0.0255%" height="15" fill="rgb(253,189,4)" fg:x="31618" fg:w="75"/><text x="10.9877%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (75 samples, 0.03%)</title><rect x="10.7377%" y="501" width="0.0255%" height="15" fill="rgb(224,37,19)" fg:x="31618" fg:w="75"/><text x="10.9877%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.03%)</title><rect x="10.7377%" y="485" width="0.0255%" height="15" fill="rgb(235,223,18)" fg:x="31618" fg:w="75"/><text x="10.9877%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.03%)</title><rect x="10.7377%" y="469" width="0.0255%" height="15" fill="rgb(235,163,25)" fg:x="31618" fg:w="75"/><text x="10.9877%" y="479.50"></text></g><g><title>alloc::alloc::alloc (75 samples, 0.03%)</title><rect x="10.7377%" y="453" width="0.0255%" height="15" fill="rgb(217,145,28)" fg:x="31618" fg:w="75"/><text x="10.9877%" y="463.50"></text></g><g><title>malloc (74 samples, 0.03%)</title><rect x="10.7380%" y="437" width="0.0251%" height="15" fill="rgb(223,223,32)" fg:x="31619" fg:w="74"/><text x="10.9880%" y="447.50"></text></g><g><title>__lll_lock_wake_private (35 samples, 0.01%)</title><rect x="10.7512%" y="421" width="0.0119%" height="15" fill="rgb(227,189,39)" fg:x="31658" fg:w="35"/><text x="11.0012%" y="431.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="10.7512%" y="405" width="0.0119%" height="15" fill="rgb(248,10,22)" fg:x="31658" fg:w="35"/><text x="11.0012%" y="415.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="10.7512%" y="389" width="0.0119%" height="15" fill="rgb(248,46,39)" fg:x="31658" fg:w="35"/><text x="11.0012%" y="399.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="10.7512%" y="373" width="0.0119%" height="15" fill="rgb(248,113,48)" fg:x="31658" fg:w="35"/><text x="11.0012%" y="383.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="10.7512%" y="357" width="0.0119%" height="15" fill="rgb(245,16,25)" fg:x="31658" fg:w="35"/><text x="11.0012%" y="367.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="10.7516%" y="341" width="0.0115%" height="15" fill="rgb(249,152,16)" fg:x="31659" fg:w="34"/><text x="11.0016%" y="351.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (480 samples, 0.16%)</title><rect x="10.6072%" y="597" width="0.1630%" height="15" fill="rgb(250,16,1)" fg:x="31234" fg:w="480"/><text x="10.8572%" y="607.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (149 samples, 0.05%)</title><rect x="10.7197%" y="581" width="0.0506%" height="15" fill="rgb(249,138,3)" fg:x="31565" fg:w="149"/><text x="10.9697%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,384 samples, 1.49%)</title><rect x="9.2831%" y="949" width="1.4888%" height="15" fill="rgb(227,71,41)" fg:x="27335" fg:w="4384"/><text x="9.5331%" y="959.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (772 samples, 0.26%)</title><rect x="10.5098%" y="933" width="0.2622%" height="15" fill="rgb(209,184,23)" fg:x="30947" fg:w="772"/><text x="10.7598%" y="943.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (772 samples, 0.26%)</title><rect x="10.5098%" y="917" width="0.2622%" height="15" fill="rgb(223,215,31)" fg:x="30947" fg:w="772"/><text x="10.7598%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (772 samples, 0.26%)</title><rect x="10.5098%" y="901" width="0.2622%" height="15" fill="rgb(210,146,28)" fg:x="30947" fg:w="772"/><text x="10.7598%" y="911.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (772 samples, 0.26%)</title><rect x="10.5098%" y="885" width="0.2622%" height="15" fill="rgb(209,183,41)" fg:x="30947" fg:w="772"/><text x="10.7598%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (772 samples, 0.26%)</title><rect x="10.5098%" y="869" width="0.2622%" height="15" fill="rgb(209,224,45)" fg:x="30947" fg:w="772"/><text x="10.7598%" y="879.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (575 samples, 0.20%)</title><rect x="10.5767%" y="853" width="0.1953%" height="15" fill="rgb(224,209,51)" fg:x="31144" fg:w="575"/><text x="10.8267%" y="863.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (485 samples, 0.16%)</title><rect x="10.6072%" y="837" width="0.1647%" height="15" fill="rgb(223,17,39)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="847.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (485 samples, 0.16%)</title><rect x="10.6072%" y="821" width="0.1647%" height="15" fill="rgb(234,204,37)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="831.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (485 samples, 0.16%)</title><rect x="10.6072%" y="805" width="0.1647%" height="15" fill="rgb(236,120,5)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (485 samples, 0.16%)</title><rect x="10.6072%" y="789" width="0.1647%" height="15" fill="rgb(248,97,27)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (485 samples, 0.16%)</title><rect x="10.6072%" y="773" width="0.1647%" height="15" fill="rgb(240,66,17)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (485 samples, 0.16%)</title><rect x="10.6072%" y="757" width="0.1647%" height="15" fill="rgb(210,79,3)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (485 samples, 0.16%)</title><rect x="10.6072%" y="741" width="0.1647%" height="15" fill="rgb(214,176,27)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (485 samples, 0.16%)</title><rect x="10.6072%" y="725" width="0.1647%" height="15" fill="rgb(235,185,3)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (485 samples, 0.16%)</title><rect x="10.6072%" y="709" width="0.1647%" height="15" fill="rgb(227,24,12)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (485 samples, 0.16%)</title><rect x="10.6072%" y="693" width="0.1647%" height="15" fill="rgb(252,169,48)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (485 samples, 0.16%)</title><rect x="10.6072%" y="677" width="0.1647%" height="15" fill="rgb(212,65,1)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (485 samples, 0.16%)</title><rect x="10.6072%" y="661" width="0.1647%" height="15" fill="rgb(242,39,24)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (485 samples, 0.16%)</title><rect x="10.6072%" y="645" width="0.1647%" height="15" fill="rgb(249,32,23)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (485 samples, 0.16%)</title><rect x="10.6072%" y="629" width="0.1647%" height="15" fill="rgb(251,195,23)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="639.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (485 samples, 0.16%)</title><rect x="10.6072%" y="613" width="0.1647%" height="15" fill="rgb(236,174,8)" fg:x="31234" fg:w="485"/><text x="10.8572%" y="623.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.01%)</title><rect x="10.7740%" y="629" width="0.0136%" height="15" fill="rgb(220,197,8)" fg:x="31725" fg:w="40"/><text x="11.0240%" y="639.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (40 samples, 0.01%)</title><rect x="10.7740%" y="613" width="0.0136%" height="15" fill="rgb(240,108,37)" fg:x="31725" fg:w="40"/><text x="11.0240%" y="623.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (40 samples, 0.01%)</title><rect x="10.7740%" y="597" width="0.0136%" height="15" fill="rgb(232,176,24)" fg:x="31725" fg:w="40"/><text x="11.0240%" y="607.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (40 samples, 0.01%)</title><rect x="10.7740%" y="581" width="0.0136%" height="15" fill="rgb(243,35,29)" fg:x="31725" fg:w="40"/><text x="11.0240%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.01%)</title><rect x="10.7740%" y="709" width="0.0139%" height="15" fill="rgb(210,37,18)" fg:x="31725" fg:w="41"/><text x="11.0240%" y="719.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (41 samples, 0.01%)</title><rect x="10.7740%" y="693" width="0.0139%" height="15" fill="rgb(224,184,40)" fg:x="31725" fg:w="41"/><text x="11.0240%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (41 samples, 0.01%)</title><rect x="10.7740%" y="677" width="0.0139%" height="15" fill="rgb(236,39,29)" fg:x="31725" fg:w="41"/><text x="11.0240%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.01%)</title><rect x="10.7740%" y="661" width="0.0139%" height="15" fill="rgb(232,48,39)" fg:x="31725" fg:w="41"/><text x="11.0240%" y="671.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (41 samples, 0.01%)</title><rect x="10.7740%" y="645" width="0.0139%" height="15" fill="rgb(236,34,42)" fg:x="31725" fg:w="41"/><text x="11.0240%" y="655.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (42 samples, 0.01%)</title><rect x="10.7879%" y="677" width="0.0143%" height="15" fill="rgb(243,106,37)" fg:x="31766" fg:w="42"/><text x="11.0379%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (33 samples, 0.01%)</title><rect x="10.8025%" y="645" width="0.0112%" height="15" fill="rgb(218,96,6)" fg:x="31809" fg:w="33"/><text x="11.0525%" y="655.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (33 samples, 0.01%)</title><rect x="10.8025%" y="629" width="0.0112%" height="15" fill="rgb(235,130,12)" fg:x="31809" fg:w="33"/><text x="11.0525%" y="639.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (30 samples, 0.01%)</title><rect x="10.8035%" y="613" width="0.0102%" height="15" fill="rgb(231,95,0)" fg:x="31812" fg:w="30"/><text x="11.0535%" y="623.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (127 samples, 0.04%)</title><rect x="10.7740%" y="725" width="0.0431%" height="15" fill="rgb(228,12,23)" fg:x="31725" fg:w="127"/><text x="11.0240%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (86 samples, 0.03%)</title><rect x="10.7879%" y="709" width="0.0292%" height="15" fill="rgb(216,12,1)" fg:x="31766" fg:w="86"/><text x="11.0379%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (86 samples, 0.03%)</title><rect x="10.7879%" y="693" width="0.0292%" height="15" fill="rgb(219,59,3)" fg:x="31766" fg:w="86"/><text x="11.0379%" y="703.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (44 samples, 0.01%)</title><rect x="10.8022%" y="677" width="0.0149%" height="15" fill="rgb(215,208,46)" fg:x="31808" fg:w="44"/><text x="11.0522%" y="687.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (44 samples, 0.01%)</title><rect x="10.8022%" y="661" width="0.0149%" height="15" fill="rgb(254,224,29)" fg:x="31808" fg:w="44"/><text x="11.0522%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 0.06%)</title><rect x="10.7720%" y="773" width="0.0588%" height="15" fill="rgb(232,14,29)" fg:x="31719" fg:w="173"/><text x="11.0220%" y="783.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (173 samples, 0.06%)</title><rect x="10.7720%" y="757" width="0.0588%" height="15" fill="rgb(208,45,52)" fg:x="31719" fg:w="173"/><text x="11.0220%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 0.06%)</title><rect x="10.7720%" y="741" width="0.0588%" height="15" fill="rgb(234,191,28)" fg:x="31719" fg:w="173"/><text x="11.0220%" y="751.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (174 samples, 0.06%)</title><rect x="10.7720%" y="917" width="0.0591%" height="15" fill="rgb(244,67,43)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (174 samples, 0.06%)</title><rect x="10.7720%" y="901" width="0.0591%" height="15" fill="rgb(236,189,24)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="911.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (174 samples, 0.06%)</title><rect x="10.7720%" y="885" width="0.0591%" height="15" fill="rgb(239,214,33)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (174 samples, 0.06%)</title><rect x="10.7720%" y="869" width="0.0591%" height="15" fill="rgb(226,176,41)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="879.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (174 samples, 0.06%)</title><rect x="10.7720%" y="853" width="0.0591%" height="15" fill="rgb(248,47,8)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (174 samples, 0.06%)</title><rect x="10.7720%" y="837" width="0.0591%" height="15" fill="rgb(218,81,44)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="847.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (174 samples, 0.06%)</title><rect x="10.7720%" y="821" width="0.0591%" height="15" fill="rgb(213,98,6)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (174 samples, 0.06%)</title><rect x="10.7720%" y="805" width="0.0591%" height="15" fill="rgb(222,85,22)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="815.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (174 samples, 0.06%)</title><rect x="10.7720%" y="789" width="0.0591%" height="15" fill="rgb(239,46,39)" fg:x="31719" fg:w="174"/><text x="11.0220%" y="799.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (78 samples, 0.03%)</title><rect x="10.8378%" y="693" width="0.0265%" height="15" fill="rgb(237,12,29)" fg:x="31913" fg:w="78"/><text x="11.0878%" y="703.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (65 samples, 0.02%)</title><rect x="10.8423%" y="677" width="0.0221%" height="15" fill="rgb(214,77,8)" fg:x="31926" fg:w="65"/><text x="11.0923%" y="687.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (120 samples, 0.04%)</title><rect x="10.8314%" y="741" width="0.0408%" height="15" fill="rgb(217,168,37)" fg:x="31894" fg:w="120"/><text x="11.0814%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (120 samples, 0.04%)</title><rect x="10.8314%" y="725" width="0.0408%" height="15" fill="rgb(221,217,23)" fg:x="31894" fg:w="120"/><text x="11.0814%" y="735.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (120 samples, 0.04%)</title><rect x="10.8314%" y="709" width="0.0408%" height="15" fill="rgb(243,229,36)" fg:x="31894" fg:w="120"/><text x="11.0814%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="10.8314%" y="757" width="0.0418%" height="15" fill="rgb(251,163,40)" fg:x="31894" fg:w="123"/><text x="11.0814%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (124 samples, 0.04%)</title><rect x="10.8314%" y="805" width="0.0421%" height="15" fill="rgb(237,222,12)" fg:x="31894" fg:w="124"/><text x="11.0814%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (124 samples, 0.04%)</title><rect x="10.8314%" y="789" width="0.0421%" height="15" fill="rgb(248,132,6)" fg:x="31894" fg:w="124"/><text x="11.0814%" y="799.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (124 samples, 0.04%)</title><rect x="10.8314%" y="773" width="0.0421%" height="15" fill="rgb(227,167,50)" fg:x="31894" fg:w="124"/><text x="11.0814%" y="783.50"></text></g><g><title>async_io::driver::block_on (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1221" width="1.5907%" height="15" fill="rgb(242,84,37)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1231.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1205" width="1.5907%" height="15" fill="rgb(212,4,50)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1189" width="1.5907%" height="15" fill="rgb(230,228,32)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1199.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1173" width="1.5907%" height="15" fill="rgb(248,217,23)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1157" width="1.5907%" height="15" fill="rgb(238,197,32)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1141" width="1.5907%" height="15" fill="rgb(236,106,1)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1151.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1125" width="1.5907%" height="15" fill="rgb(219,228,13)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1109" width="1.5907%" height="15" fill="rgb(238,30,35)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1093" width="1.5907%" height="15" fill="rgb(236,70,23)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1077" width="1.5907%" height="15" fill="rgb(249,104,48)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1061" width="1.5907%" height="15" fill="rgb(254,117,50)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1071.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1045" width="1.5907%" height="15" fill="rgb(223,152,4)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1055.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1029" width="1.5907%" height="15" fill="rgb(245,6,2)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,684 samples, 1.59%)</title><rect x="9.2831%" y="1013" width="1.5907%" height="15" fill="rgb(249,150,24)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,684 samples, 1.59%)</title><rect x="9.2831%" y="997" width="1.5907%" height="15" fill="rgb(228,185,42)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,684 samples, 1.59%)</title><rect x="9.2831%" y="981" width="1.5907%" height="15" fill="rgb(226,39,33)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="991.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,684 samples, 1.59%)</title><rect x="9.2831%" y="965" width="1.5907%" height="15" fill="rgb(221,166,19)" fg:x="27335" fg:w="4684"/><text x="9.5331%" y="975.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (300 samples, 0.10%)</title><rect x="10.7720%" y="949" width="0.1019%" height="15" fill="rgb(209,109,2)" fg:x="31719" fg:w="300"/><text x="11.0220%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (300 samples, 0.10%)</title><rect x="10.7720%" y="933" width="0.1019%" height="15" fill="rgb(252,216,26)" fg:x="31719" fg:w="300"/><text x="11.0220%" y="943.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (126 samples, 0.04%)</title><rect x="10.8310%" y="917" width="0.0428%" height="15" fill="rgb(227,173,36)" fg:x="31893" fg:w="126"/><text x="11.0810%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (126 samples, 0.04%)</title><rect x="10.8310%" y="901" width="0.0428%" height="15" fill="rgb(209,90,7)" fg:x="31893" fg:w="126"/><text x="11.0810%" y="911.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (126 samples, 0.04%)</title><rect x="10.8310%" y="885" width="0.0428%" height="15" fill="rgb(250,194,11)" fg:x="31893" fg:w="126"/><text x="11.0810%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (126 samples, 0.04%)</title><rect x="10.8310%" y="869" width="0.0428%" height="15" fill="rgb(220,72,50)" fg:x="31893" fg:w="126"/><text x="11.0810%" y="879.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (126 samples, 0.04%)</title><rect x="10.8310%" y="853" width="0.0428%" height="15" fill="rgb(222,106,48)" fg:x="31893" fg:w="126"/><text x="11.0810%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (126 samples, 0.04%)</title><rect x="10.8310%" y="837" width="0.0428%" height="15" fill="rgb(216,220,45)" fg:x="31893" fg:w="126"/><text x="11.0810%" y="847.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (125 samples, 0.04%)</title><rect x="10.8314%" y="821" width="0.0425%" height="15" fill="rgb(234,112,18)" fg:x="31894" fg:w="125"/><text x="11.0814%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (34 samples, 0.01%)</title><rect x="10.8738%" y="597" width="0.0115%" height="15" fill="rgb(206,179,9)" fg:x="32019" fg:w="34"/><text x="11.1238%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (34 samples, 0.01%)</title><rect x="10.8738%" y="581" width="0.0115%" height="15" fill="rgb(215,115,40)" fg:x="32019" fg:w="34"/><text x="11.1238%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (32 samples, 0.01%)</title><rect x="10.8745%" y="565" width="0.0109%" height="15" fill="rgb(222,69,34)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.01%)</title><rect x="10.8745%" y="549" width="0.0109%" height="15" fill="rgb(209,161,10)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.01%)</title><rect x="10.8745%" y="533" width="0.0109%" height="15" fill="rgb(217,6,38)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="543.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.01%)</title><rect x="10.8745%" y="517" width="0.0109%" height="15" fill="rgb(229,229,48)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="527.50"></text></g><g><title>__rdl_alloc (32 samples, 0.01%)</title><rect x="10.8745%" y="501" width="0.0109%" height="15" fill="rgb(225,21,28)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (32 samples, 0.01%)</title><rect x="10.8745%" y="485" width="0.0109%" height="15" fill="rgb(206,33,13)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="495.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (32 samples, 0.01%)</title><rect x="10.8745%" y="469" width="0.0109%" height="15" fill="rgb(242,178,17)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="479.50"></text></g><g><title>posix_memalign (32 samples, 0.01%)</title><rect x="10.8745%" y="453" width="0.0109%" height="15" fill="rgb(220,162,5)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="463.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="10.8745%" y="437" width="0.0109%" height="15" fill="rgb(210,33,43)" fg:x="32021" fg:w="32"/><text x="11.1245%" y="447.50"></text></g><g><title>async_executor::Executor::state (40 samples, 0.01%)</title><rect x="10.8738%" y="757" width="0.0136%" height="15" fill="rgb(216,116,54)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (40 samples, 0.01%)</title><rect x="10.8738%" y="741" width="0.0136%" height="15" fill="rgb(249,92,24)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="751.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (40 samples, 0.01%)</title><rect x="10.8738%" y="725" width="0.0136%" height="15" fill="rgb(231,189,14)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="735.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (40 samples, 0.01%)</title><rect x="10.8738%" y="709" width="0.0136%" height="15" fill="rgb(230,8,41)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="719.50"></text></g><g><title>once_cell::imp::initialize_or_wait (40 samples, 0.01%)</title><rect x="10.8738%" y="693" width="0.0136%" height="15" fill="rgb(249,7,27)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (40 samples, 0.01%)</title><rect x="10.8738%" y="677" width="0.0136%" height="15" fill="rgb(232,86,5)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (40 samples, 0.01%)</title><rect x="10.8738%" y="661" width="0.0136%" height="15" fill="rgb(224,175,18)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (40 samples, 0.01%)</title><rect x="10.8738%" y="645" width="0.0136%" height="15" fill="rgb(220,129,12)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="655.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (40 samples, 0.01%)</title><rect x="10.8738%" y="629" width="0.0136%" height="15" fill="rgb(210,19,36)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="639.50"></text></g><g><title>async_executor::State::new (40 samples, 0.01%)</title><rect x="10.8738%" y="613" width="0.0136%" height="15" fill="rgb(219,96,14)" fg:x="32019" fg:w="40"/><text x="11.1238%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (57 samples, 0.02%)</title><rect x="10.8738%" y="901" width="0.0194%" height="15" fill="rgb(249,106,1)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="911.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (57 samples, 0.02%)</title><rect x="10.8738%" y="885" width="0.0194%" height="15" fill="rgb(249,155,20)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="895.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (57 samples, 0.02%)</title><rect x="10.8738%" y="869" width="0.0194%" height="15" fill="rgb(244,168,9)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (57 samples, 0.02%)</title><rect x="10.8738%" y="853" width="0.0194%" height="15" fill="rgb(216,23,50)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (57 samples, 0.02%)</title><rect x="10.8738%" y="837" width="0.0194%" height="15" fill="rgb(224,219,20)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="847.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (57 samples, 0.02%)</title><rect x="10.8738%" y="821" width="0.0194%" height="15" fill="rgb(222,156,15)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="831.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (57 samples, 0.02%)</title><rect x="10.8738%" y="805" width="0.0194%" height="15" fill="rgb(231,97,17)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.02%)</title><rect x="10.8738%" y="789" width="0.0194%" height="15" fill="rgb(218,70,48)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (57 samples, 0.02%)</title><rect x="10.8738%" y="773" width="0.0194%" height="15" fill="rgb(212,196,52)" fg:x="32019" fg:w="57"/><text x="11.1238%" y="783.50"></text></g><g><title>[libc.so.6] (91 samples, 0.03%)</title><rect x="10.9064%" y="549" width="0.0309%" height="15" fill="rgb(243,203,18)" fg:x="32115" fg:w="91"/><text x="11.1564%" y="559.50"></text></g><g><title>[libc.so.6] (121 samples, 0.04%)</title><rect x="10.8973%" y="565" width="0.0411%" height="15" fill="rgb(252,125,41)" fg:x="32088" fg:w="121"/><text x="11.1473%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (192 samples, 0.07%)</title><rect x="10.8738%" y="965" width="0.0652%" height="15" fill="rgb(223,180,33)" fg:x="32019" fg:w="192"/><text x="11.1238%" y="975.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (192 samples, 0.07%)</title><rect x="10.8738%" y="949" width="0.0652%" height="15" fill="rgb(254,159,46)" fg:x="32019" fg:w="192"/><text x="11.1238%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (192 samples, 0.07%)</title><rect x="10.8738%" y="933" width="0.0652%" height="15" fill="rgb(254,38,10)" fg:x="32019" fg:w="192"/><text x="11.1238%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (192 samples, 0.07%)</title><rect x="10.8738%" y="917" width="0.0652%" height="15" fill="rgb(208,217,32)" fg:x="32019" fg:w="192"/><text x="11.1238%" y="927.50"></text></g><g><title>async_executor::Executor::state (135 samples, 0.05%)</title><rect x="10.8932%" y="901" width="0.0458%" height="15" fill="rgb(221,120,13)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="911.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (135 samples, 0.05%)</title><rect x="10.8932%" y="885" width="0.0458%" height="15" fill="rgb(246,54,52)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="895.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (135 samples, 0.05%)</title><rect x="10.8932%" y="869" width="0.0458%" height="15" fill="rgb(242,34,25)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="879.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (135 samples, 0.05%)</title><rect x="10.8932%" y="853" width="0.0458%" height="15" fill="rgb(247,209,9)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="863.50"></text></g><g><title>once_cell::imp::initialize_or_wait (135 samples, 0.05%)</title><rect x="10.8932%" y="837" width="0.0458%" height="15" fill="rgb(228,71,26)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (135 samples, 0.05%)</title><rect x="10.8932%" y="821" width="0.0458%" height="15" fill="rgb(222,145,49)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="831.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (135 samples, 0.05%)</title><rect x="10.8932%" y="805" width="0.0458%" height="15" fill="rgb(218,121,17)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="815.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (135 samples, 0.05%)</title><rect x="10.8932%" y="789" width="0.0458%" height="15" fill="rgb(244,50,7)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="799.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (135 samples, 0.05%)</title><rect x="10.8932%" y="773" width="0.0458%" height="15" fill="rgb(246,229,37)" fg:x="32076" fg:w="135"/><text x="11.1432%" y="783.50"></text></g><g><title>async_executor::State::new (131 samples, 0.04%)</title><rect x="10.8946%" y="757" width="0.0445%" height="15" fill="rgb(225,18,5)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (131 samples, 0.04%)</title><rect x="10.8946%" y="741" width="0.0445%" height="15" fill="rgb(213,204,8)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (131 samples, 0.04%)</title><rect x="10.8946%" y="725" width="0.0445%" height="15" fill="rgb(238,103,6)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (131 samples, 0.04%)</title><rect x="10.8946%" y="709" width="0.0445%" height="15" fill="rgb(222,25,35)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (131 samples, 0.04%)</title><rect x="10.8946%" y="693" width="0.0445%" height="15" fill="rgb(213,203,35)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (131 samples, 0.04%)</title><rect x="10.8946%" y="677" width="0.0445%" height="15" fill="rgb(221,79,53)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="687.50"></text></g><g><title>alloc::alloc::alloc (131 samples, 0.04%)</title><rect x="10.8946%" y="661" width="0.0445%" height="15" fill="rgb(243,200,35)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="671.50"></text></g><g><title>__rdl_alloc (131 samples, 0.04%)</title><rect x="10.8946%" y="645" width="0.0445%" height="15" fill="rgb(248,60,25)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (131 samples, 0.04%)</title><rect x="10.8946%" y="629" width="0.0445%" height="15" fill="rgb(227,53,46)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="639.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (131 samples, 0.04%)</title><rect x="10.8946%" y="613" width="0.0445%" height="15" fill="rgb(216,120,32)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="623.50"></text></g><g><title>posix_memalign (131 samples, 0.04%)</title><rect x="10.8946%" y="597" width="0.0445%" height="15" fill="rgb(220,134,1)" fg:x="32080" fg:w="131"/><text x="11.1446%" y="607.50"></text></g><g><title>[libc.so.6] (130 samples, 0.04%)</title><rect x="10.8949%" y="581" width="0.0441%" height="15" fill="rgb(237,168,5)" fg:x="32081" fg:w="130"/><text x="11.1449%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (53 samples, 0.02%)</title><rect x="10.9730%" y="853" width="0.0180%" height="15" fill="rgb(231,100,33)" fg:x="32311" fg:w="53"/><text x="11.2230%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (65 samples, 0.02%)</title><rect x="10.9730%" y="869" width="0.0221%" height="15" fill="rgb(236,177,47)" fg:x="32311" fg:w="65"/><text x="11.2230%" y="879.50"></text></g><g><title>core::intrinsics::copy (100 samples, 0.03%)</title><rect x="10.9971%" y="821" width="0.0340%" height="15" fill="rgb(235,7,49)" fg:x="32382" fg:w="100"/><text x="11.2471%" y="831.50"></text></g><g><title>[libc.so.6] (93 samples, 0.03%)</title><rect x="10.9995%" y="805" width="0.0316%" height="15" fill="rgb(232,119,22)" fg:x="32389" fg:w="93"/><text x="11.2495%" y="815.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (124 samples, 0.04%)</title><rect x="10.9954%" y="853" width="0.0421%" height="15" fill="rgb(254,73,53)" fg:x="32377" fg:w="124"/><text x="11.2454%" y="863.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (119 samples, 0.04%)</title><rect x="10.9971%" y="837" width="0.0404%" height="15" fill="rgb(251,35,20)" fg:x="32382" fg:w="119"/><text x="11.2471%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (78 samples, 0.03%)</title><rect x="11.0375%" y="853" width="0.0265%" height="15" fill="rgb(241,119,20)" fg:x="32501" fg:w="78"/><text x="11.2875%" y="863.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (68 samples, 0.02%)</title><rect x="11.0409%" y="837" width="0.0231%" height="15" fill="rgb(207,102,14)" fg:x="32511" fg:w="68"/><text x="11.2909%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (68 samples, 0.02%)</title><rect x="11.0409%" y="821" width="0.0231%" height="15" fill="rgb(248,201,50)" fg:x="32511" fg:w="68"/><text x="11.2909%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (68 samples, 0.02%)</title><rect x="11.0409%" y="805" width="0.0231%" height="15" fill="rgb(222,185,44)" fg:x="32511" fg:w="68"/><text x="11.2909%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (68 samples, 0.02%)</title><rect x="11.0409%" y="789" width="0.0231%" height="15" fill="rgb(218,107,18)" fg:x="32511" fg:w="68"/><text x="11.2909%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (68 samples, 0.02%)</title><rect x="11.0409%" y="773" width="0.0231%" height="15" fill="rgb(237,177,39)" fg:x="32511" fg:w="68"/><text x="11.2909%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68 samples, 0.02%)</title><rect x="11.0409%" y="757" width="0.0231%" height="15" fill="rgb(246,69,6)" fg:x="32511" fg:w="68"/><text x="11.2909%" y="767.50"></text></g><g><title>alloc::alloc::alloc (68 samples, 0.02%)</title><rect x="11.0409%" y="741" width="0.0231%" height="15" fill="rgb(234,208,37)" fg:x="32511" fg:w="68"/><text x="11.2909%" y="751.50"></text></g><g><title>malloc (63 samples, 0.02%)</title><rect x="11.0426%" y="725" width="0.0214%" height="15" fill="rgb(225,4,6)" fg:x="32516" fg:w="63"/><text x="11.2926%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (226 samples, 0.08%)</title><rect x="10.9951%" y="869" width="0.0768%" height="15" fill="rgb(233,45,0)" fg:x="32376" fg:w="226"/><text x="11.2451%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (393 samples, 0.13%)</title><rect x="10.9390%" y="917" width="0.1335%" height="15" fill="rgb(226,136,5)" fg:x="32211" fg:w="393"/><text x="11.1890%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (393 samples, 0.13%)</title><rect x="10.9390%" y="901" width="0.1335%" height="15" fill="rgb(211,91,47)" fg:x="32211" fg:w="393"/><text x="11.1890%" y="911.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (322 samples, 0.11%)</title><rect x="10.9632%" y="885" width="0.1094%" height="15" fill="rgb(242,88,51)" fg:x="32282" fg:w="322"/><text x="11.2132%" y="895.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_internal_kv (37 samples, 0.01%)</title><rect x="11.0725%" y="837" width="0.0126%" height="15" fill="rgb(230,91,28)" fg:x="32604" fg:w="37"/><text x="11.3225%" y="847.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (37 samples, 0.01%)</title><rect x="11.0725%" y="821" width="0.0126%" height="15" fill="rgb(254,186,29)" fg:x="32604" fg:w="37"/><text x="11.3225%" y="831.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (56 samples, 0.02%)</title><rect x="11.1055%" y="821" width="0.0190%" height="15" fill="rgb(238,6,4)" fg:x="32701" fg:w="56"/><text x="11.3555%" y="831.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (56 samples, 0.02%)</title><rect x="11.1055%" y="805" width="0.0190%" height="15" fill="rgb(221,151,16)" fg:x="32701" fg:w="56"/><text x="11.3555%" y="815.50"></text></g><g><title>core::intrinsics::copy (58 samples, 0.02%)</title><rect x="11.1350%" y="789" width="0.0197%" height="15" fill="rgb(251,143,52)" fg:x="32788" fg:w="58"/><text x="11.3850%" y="799.50"></text></g><g><title>[libc.so.6] (52 samples, 0.02%)</title><rect x="11.1370%" y="773" width="0.0177%" height="15" fill="rgb(206,90,15)" fg:x="32794" fg:w="52"/><text x="11.3870%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (38 samples, 0.01%)</title><rect x="11.1547%" y="789" width="0.0129%" height="15" fill="rgb(218,35,8)" fg:x="32846" fg:w="38"/><text x="11.4047%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (103 samples, 0.03%)</title><rect x="11.1333%" y="821" width="0.0350%" height="15" fill="rgb(239,215,6)" fg:x="32783" fg:w="103"/><text x="11.3833%" y="831.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (101 samples, 0.03%)</title><rect x="11.1340%" y="805" width="0.0343%" height="15" fill="rgb(245,116,39)" fg:x="32785" fg:w="101"/><text x="11.3840%" y="815.50"></text></g><g><title>async_std::task::builder::Builder::blocking (873 samples, 0.30%)</title><rect x="10.8738%" y="1221" width="0.2965%" height="15" fill="rgb(242,65,28)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (873 samples, 0.30%)</title><rect x="10.8738%" y="1205" width="0.2965%" height="15" fill="rgb(252,132,53)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (873 samples, 0.30%)</title><rect x="10.8738%" y="1189" width="0.2965%" height="15" fill="rgb(224,159,50)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1199.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (873 samples, 0.30%)</title><rect x="10.8738%" y="1173" width="0.2965%" height="15" fill="rgb(224,93,4)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1183.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (873 samples, 0.30%)</title><rect x="10.8738%" y="1157" width="0.2965%" height="15" fill="rgb(208,81,34)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (873 samples, 0.30%)</title><rect x="10.8738%" y="1141" width="0.2965%" height="15" fill="rgb(233,92,54)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (873 samples, 0.30%)</title><rect x="10.8738%" y="1125" width="0.2965%" height="15" fill="rgb(237,21,14)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (873 samples, 0.30%)</title><rect x="10.8738%" y="1109" width="0.2965%" height="15" fill="rgb(249,128,51)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1119.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (873 samples, 0.30%)</title><rect x="10.8738%" y="1093" width="0.2965%" height="15" fill="rgb(223,129,24)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1103.50"></text></g><g><title>async_global_executor::executor::block_on (873 samples, 0.30%)</title><rect x="10.8738%" y="1077" width="0.2965%" height="15" fill="rgb(231,168,25)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (873 samples, 0.30%)</title><rect x="10.8738%" y="1061" width="0.2965%" height="15" fill="rgb(224,39,20)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (873 samples, 0.30%)</title><rect x="10.8738%" y="1045" width="0.2965%" height="15" fill="rgb(225,152,53)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1055.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (873 samples, 0.30%)</title><rect x="10.8738%" y="1029" width="0.2965%" height="15" fill="rgb(252,17,24)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1039.50"></text></g><g><title>async_global_executor::reactor::block_on (873 samples, 0.30%)</title><rect x="10.8738%" y="1013" width="0.2965%" height="15" fill="rgb(250,114,30)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1023.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (873 samples, 0.30%)</title><rect x="10.8738%" y="997" width="0.2965%" height="15" fill="rgb(229,5,4)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="1007.50"></text></g><g><title>async_io::driver::block_on (873 samples, 0.30%)</title><rect x="10.8738%" y="981" width="0.2965%" height="15" fill="rgb(225,176,49)" fg:x="32019" fg:w="873"/><text x="11.1238%" y="991.50"></text></g><g><title>async_io::reactor::ReactorLock::react (681 samples, 0.23%)</title><rect x="10.9390%" y="965" width="0.2313%" height="15" fill="rgb(224,221,49)" fg:x="32211" fg:w="681"/><text x="11.1890%" y="975.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (681 samples, 0.23%)</title><rect x="10.9390%" y="949" width="0.2313%" height="15" fill="rgb(253,169,27)" fg:x="32211" fg:w="681"/><text x="11.1890%" y="959.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (681 samples, 0.23%)</title><rect x="10.9390%" y="933" width="0.2313%" height="15" fill="rgb(211,206,16)" fg:x="32211" fg:w="681"/><text x="11.1890%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (288 samples, 0.10%)</title><rect x="11.0725%" y="917" width="0.0978%" height="15" fill="rgb(244,87,35)" fg:x="32604" fg:w="288"/><text x="11.3225%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (288 samples, 0.10%)</title><rect x="11.0725%" y="901" width="0.0978%" height="15" fill="rgb(246,28,10)" fg:x="32604" fg:w="288"/><text x="11.3225%" y="911.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (288 samples, 0.10%)</title><rect x="11.0725%" y="885" width="0.0978%" height="15" fill="rgb(229,12,44)" fg:x="32604" fg:w="288"/><text x="11.3225%" y="895.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (288 samples, 0.10%)</title><rect x="11.0725%" y="869" width="0.0978%" height="15" fill="rgb(210,145,37)" fg:x="32604" fg:w="288"/><text x="11.3225%" y="879.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (288 samples, 0.10%)</title><rect x="11.0725%" y="853" width="0.0978%" height="15" fill="rgb(227,112,52)" fg:x="32604" fg:w="288"/><text x="11.3225%" y="863.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (251 samples, 0.09%)</title><rect x="11.0851%" y="837" width="0.0852%" height="15" fill="rgb(238,155,34)" fg:x="32641" fg:w="251"/><text x="11.3351%" y="847.50"></text></g><g><title>[libc.so.6] (40 samples, 0.01%)</title><rect x="11.1720%" y="1173" width="0.0136%" height="15" fill="rgb(239,226,36)" fg:x="32897" fg:w="40"/><text x="11.4220%" y="1183.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="11.1856%" y="1173" width="0.0115%" height="15" fill="rgb(230,16,23)" fg:x="32937" fg:w="34"/><text x="11.4356%" y="1183.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="11.1863%" y="1157" width="0.0109%" height="15" fill="rgb(236,171,36)" fg:x="32939" fg:w="32"/><text x="11.4363%" y="1167.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="11.1866%" y="1141" width="0.0105%" height="15" fill="rgb(221,22,14)" fg:x="32940" fg:w="31"/><text x="11.4366%" y="1151.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.1870%" y="1125" width="0.0102%" height="15" fill="rgb(242,43,11)" fg:x="32941" fg:w="30"/><text x="11.4370%" y="1135.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="11.2121%" y="1157" width="0.0163%" height="15" fill="rgb(232,69,23)" fg:x="33015" fg:w="48"/><text x="11.4621%" y="1167.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="11.2284%" y="1141" width="0.0109%" height="15" fill="rgb(216,180,54)" fg:x="33063" fg:w="32"/><text x="11.4784%" y="1151.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="11.3123%" y="1029" width="0.0105%" height="15" fill="rgb(216,5,24)" fg:x="33310" fg:w="31"/><text x="11.5623%" y="1039.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.3126%" y="1013" width="0.0102%" height="15" fill="rgb(225,89,9)" fg:x="33311" fg:w="30"/><text x="11.5626%" y="1023.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.3126%" y="997" width="0.0102%" height="15" fill="rgb(243,75,33)" fg:x="33311" fg:w="30"/><text x="11.5626%" y="1007.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.3126%" y="981" width="0.0102%" height="15" fill="rgb(247,141,45)" fg:x="33311" fg:w="30"/><text x="11.5626%" y="991.50"></text></g><g><title>[libc.so.6] (221 samples, 0.08%)</title><rect x="11.2596%" y="1045" width="0.0751%" height="15" fill="rgb(232,177,36)" fg:x="33155" fg:w="221"/><text x="11.5096%" y="1055.50"></text></g><g><title>__mprotect (35 samples, 0.01%)</title><rect x="11.3228%" y="1029" width="0.0119%" height="15" fill="rgb(219,125,36)" fg:x="33341" fg:w="35"/><text x="11.5728%" y="1039.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="11.3231%" y="1013" width="0.0115%" height="15" fill="rgb(227,94,9)" fg:x="33342" fg:w="34"/><text x="11.5731%" y="1023.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.3245%" y="997" width="0.0102%" height="15" fill="rgb(240,34,52)" fg:x="33346" fg:w="30"/><text x="11.5745%" y="1007.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.3245%" y="981" width="0.0102%" height="15" fill="rgb(216,45,12)" fg:x="33346" fg:w="30"/><text x="11.5745%" y="991.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.3245%" y="965" width="0.0102%" height="15" fill="rgb(246,21,19)" fg:x="33346" fg:w="30"/><text x="11.5745%" y="975.50"></text></g><g><title>[libc.so.6] (252 samples, 0.09%)</title><rect x="11.2501%" y="1061" width="0.0856%" height="15" fill="rgb(213,98,42)" fg:x="33127" fg:w="252"/><text x="11.5001%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (327 samples, 0.11%)</title><rect x="11.2284%" y="1157" width="0.1111%" height="15" fill="rgb(250,136,47)" fg:x="33063" fg:w="327"/><text x="11.4784%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (295 samples, 0.10%)</title><rect x="11.2393%" y="1141" width="0.1002%" height="15" fill="rgb(251,124,27)" fg:x="33095" fg:w="295"/><text x="11.4893%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (295 samples, 0.10%)</title><rect x="11.2393%" y="1125" width="0.1002%" height="15" fill="rgb(229,180,14)" fg:x="33095" fg:w="295"/><text x="11.4893%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (295 samples, 0.10%)</title><rect x="11.2393%" y="1109" width="0.1002%" height="15" fill="rgb(245,216,25)" fg:x="33095" fg:w="295"/><text x="11.4893%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (294 samples, 0.10%)</title><rect x="11.2396%" y="1093" width="0.0998%" height="15" fill="rgb(251,43,5)" fg:x="33096" fg:w="294"/><text x="11.4896%" y="1103.50"></text></g><g><title>malloc (289 samples, 0.10%)</title><rect x="11.2413%" y="1077" width="0.0981%" height="15" fill="rgb(250,128,24)" fg:x="33101" fg:w="289"/><text x="11.4913%" y="1087.50"></text></g><g><title>async_task::runnable::spawn_unchecked (400 samples, 0.14%)</title><rect x="11.2117%" y="1173" width="0.1358%" height="15" fill="rgb(217,117,27)" fg:x="33014" fg:w="400"/><text x="11.4617%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (66 samples, 0.02%)</title><rect x="11.3476%" y="1173" width="0.0224%" height="15" fill="rgb(245,147,4)" fg:x="33414" fg:w="66"/><text x="11.5976%" y="1183.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.02%)</title><rect x="11.3476%" y="1157" width="0.0224%" height="15" fill="rgb(242,201,35)" fg:x="33414" fg:w="66"/><text x="11.5976%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (66 samples, 0.02%)</title><rect x="11.3476%" y="1141" width="0.0224%" height="15" fill="rgb(218,181,1)" fg:x="33414" fg:w="66"/><text x="11.5976%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (66 samples, 0.02%)</title><rect x="11.3476%" y="1125" width="0.0224%" height="15" fill="rgb(222,6,29)" fg:x="33414" fg:w="66"/><text x="11.5976%" y="1135.50"></text></g><g><title>syscall (60 samples, 0.02%)</title><rect x="11.3496%" y="1109" width="0.0204%" height="15" fill="rgb(208,186,3)" fg:x="33420" fg:w="60"/><text x="11.5996%" y="1119.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="11.3503%" y="1093" width="0.0197%" height="15" fill="rgb(216,36,26)" fg:x="33422" fg:w="58"/><text x="11.6003%" y="1103.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="11.3510%" y="1077" width="0.0190%" height="15" fill="rgb(248,201,23)" fg:x="33424" fg:w="56"/><text x="11.6010%" y="1087.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="11.3517%" y="1061" width="0.0183%" height="15" fill="rgb(251,170,31)" fg:x="33426" fg:w="54"/><text x="11.6017%" y="1071.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="11.3517%" y="1045" width="0.0183%" height="15" fill="rgb(207,110,25)" fg:x="33426" fg:w="54"/><text x="11.6017%" y="1055.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="11.3534%" y="1029" width="0.0166%" height="15" fill="rgb(250,54,15)" fg:x="33431" fg:w="49"/><text x="11.6034%" y="1039.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="11.3574%" y="1013" width="0.0126%" height="15" fill="rgb(227,68,33)" fg:x="33443" fg:w="37"/><text x="11.6074%" y="1023.50"></text></g><g><title>std::sys::unix::futex::futex_wait (58 samples, 0.02%)</title><rect x="11.3792%" y="1109" width="0.0197%" height="15" fill="rgb(238,34,41)" fg:x="33507" fg:w="58"/><text x="11.6292%" y="1119.50"></text></g><g><title>syscall (57 samples, 0.02%)</title><rect x="11.3795%" y="1093" width="0.0194%" height="15" fill="rgb(220,11,15)" fg:x="33508" fg:w="57"/><text x="11.6295%" y="1103.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="11.3795%" y="1077" width="0.0194%" height="15" fill="rgb(246,111,35)" fg:x="33508" fg:w="57"/><text x="11.6295%" y="1087.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="11.3799%" y="1061" width="0.0190%" height="15" fill="rgb(209,88,53)" fg:x="33509" fg:w="56"/><text x="11.6299%" y="1071.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="11.3799%" y="1045" width="0.0190%" height="15" fill="rgb(231,185,47)" fg:x="33509" fg:w="56"/><text x="11.6299%" y="1055.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="11.3802%" y="1029" width="0.0187%" height="15" fill="rgb(233,154,1)" fg:x="33510" fg:w="55"/><text x="11.6302%" y="1039.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="11.3812%" y="1013" width="0.0177%" height="15" fill="rgb(225,15,46)" fg:x="33513" fg:w="52"/><text x="11.6312%" y="1023.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="11.3839%" y="997" width="0.0149%" height="15" fill="rgb(211,135,41)" fg:x="33521" fg:w="44"/><text x="11.6339%" y="1007.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="11.3843%" y="981" width="0.0146%" height="15" fill="rgb(208,54,0)" fg:x="33522" fg:w="43"/><text x="11.6343%" y="991.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="11.3873%" y="965" width="0.0115%" height="15" fill="rgb(244,136,14)" fg:x="33531" fg:w="34"/><text x="11.6373%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (114 samples, 0.04%)</title><rect x="11.3754%" y="1173" width="0.0387%" height="15" fill="rgb(241,56,14)" fg:x="33496" fg:w="114"/><text x="11.6254%" y="1183.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (110 samples, 0.04%)</title><rect x="11.3768%" y="1157" width="0.0374%" height="15" fill="rgb(205,80,24)" fg:x="33500" fg:w="110"/><text x="11.6268%" y="1167.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (110 samples, 0.04%)</title><rect x="11.3768%" y="1141" width="0.0374%" height="15" fill="rgb(220,57,4)" fg:x="33500" fg:w="110"/><text x="11.6268%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (107 samples, 0.04%)</title><rect x="11.3778%" y="1125" width="0.0363%" height="15" fill="rgb(226,193,50)" fg:x="33503" fg:w="107"/><text x="11.6278%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (45 samples, 0.02%)</title><rect x="11.3989%" y="1109" width="0.0153%" height="15" fill="rgb(231,168,22)" fg:x="33565" fg:w="45"/><text x="11.6489%" y="1119.50"></text></g><g><title>async_std::task::builder::Builder::spawn (730 samples, 0.25%)</title><rect x="11.1703%" y="1221" width="0.2479%" height="15" fill="rgb(254,215,14)" fg:x="32892" fg:w="730"/><text x="11.4203%" y="1231.50"></text></g><g><title>async_global_executor::executor::spawn (730 samples, 0.25%)</title><rect x="11.1703%" y="1205" width="0.2479%" height="15" fill="rgb(211,115,16)" fg:x="32892" fg:w="730"/><text x="11.4203%" y="1215.50"></text></g><g><title>async_executor::Executor::spawn (730 samples, 0.25%)</title><rect x="11.1703%" y="1189" width="0.2479%" height="15" fill="rgb(236,210,16)" fg:x="32892" fg:w="730"/><text x="11.4203%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (71 samples, 0.02%)</title><rect x="11.4209%" y="1157" width="0.0241%" height="15" fill="rgb(221,94,12)" fg:x="33630" fg:w="71"/><text x="11.6709%" y="1167.50"></text></g><g><title>[libc.so.6] (504 samples, 0.17%)</title><rect x="11.4451%" y="1157" width="0.1712%" height="15" fill="rgb(235,218,49)" fg:x="33701" fg:w="504"/><text x="11.6951%" y="1167.50"></text></g><g><title>async_executor::Executor::schedule (39 samples, 0.01%)</title><rect x="11.6183%" y="1157" width="0.0132%" height="15" fill="rgb(217,114,14)" fg:x="34211" fg:w="39"/><text x="11.8683%" y="1167.50"></text></g><g><title>async_executor::Executor::state (99 samples, 0.03%)</title><rect x="11.6315%" y="1157" width="0.0336%" height="15" fill="rgb(216,145,22)" fg:x="34250" fg:w="99"/><text x="11.8815%" y="1167.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (58 samples, 0.02%)</title><rect x="11.6454%" y="1141" width="0.0197%" height="15" fill="rgb(217,112,39)" fg:x="34291" fg:w="58"/><text x="11.8954%" y="1151.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (58 samples, 0.02%)</title><rect x="11.6454%" y="1125" width="0.0197%" height="15" fill="rgb(225,85,32)" fg:x="34291" fg:w="58"/><text x="11.8954%" y="1135.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (57 samples, 0.02%)</title><rect x="11.6458%" y="1109" width="0.0194%" height="15" fill="rgb(245,209,47)" fg:x="34292" fg:w="57"/><text x="11.8958%" y="1119.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (56 samples, 0.02%)</title><rect x="11.6461%" y="1093" width="0.0190%" height="15" fill="rgb(218,220,15)" fg:x="34293" fg:w="56"/><text x="11.8961%" y="1103.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (69 samples, 0.02%)</title><rect x="11.6651%" y="1157" width="0.0234%" height="15" fill="rgb(222,202,31)" fg:x="34349" fg:w="69"/><text x="11.9151%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (71 samples, 0.02%)</title><rect x="11.7395%" y="1093" width="0.0241%" height="15" fill="rgb(243,203,4)" fg:x="34568" fg:w="71"/><text x="11.9895%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (71 samples, 0.02%)</title><rect x="11.7395%" y="1077" width="0.0241%" height="15" fill="rgb(237,92,17)" fg:x="34568" fg:w="71"/><text x="11.9895%" y="1087.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (285 samples, 0.10%)</title><rect x="11.7028%" y="1125" width="0.0968%" height="15" fill="rgb(231,119,7)" fg:x="34460" fg:w="285"/><text x="11.9528%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (255 samples, 0.09%)</title><rect x="11.7130%" y="1109" width="0.0866%" height="15" fill="rgb(237,82,41)" fg:x="34490" fg:w="255"/><text x="11.9630%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (105 samples, 0.04%)</title><rect x="11.7639%" y="1093" width="0.0357%" height="15" fill="rgb(226,81,48)" fg:x="34640" fg:w="105"/><text x="12.0139%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_or (105 samples, 0.04%)</title><rect x="11.7639%" y="1077" width="0.0357%" height="15" fill="rgb(234,70,51)" fg:x="34640" fg:w="105"/><text x="12.0139%" y="1087.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (312 samples, 0.11%)</title><rect x="11.6940%" y="1141" width="0.1060%" height="15" fill="rgb(251,86,4)" fg:x="34434" fg:w="312"/><text x="11.9440%" y="1151.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (331 samples, 0.11%)</title><rect x="11.6892%" y="1157" width="0.1124%" height="15" fill="rgb(244,144,28)" fg:x="34420" fg:w="331"/><text x="11.9392%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (765 samples, 0.26%)</title><rect x="11.8162%" y="1157" width="0.2598%" height="15" fill="rgb(232,161,39)" fg:x="34794" fg:w="765"/><text x="12.0662%" y="1167.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (765 samples, 0.26%)</title><rect x="11.8162%" y="1141" width="0.2598%" height="15" fill="rgb(247,34,51)" fg:x="34794" fg:w="765"/><text x="12.0662%" y="1151.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (762 samples, 0.26%)</title><rect x="11.8173%" y="1125" width="0.2588%" height="15" fill="rgb(225,132,2)" fg:x="34797" fg:w="762"/><text x="12.0673%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (762 samples, 0.26%)</title><rect x="11.8173%" y="1109" width="0.2588%" height="15" fill="rgb(209,159,44)" fg:x="34797" fg:w="762"/><text x="12.0673%" y="1119.50"></text></g><g><title>syscall (753 samples, 0.26%)</title><rect x="11.8203%" y="1093" width="0.2557%" height="15" fill="rgb(251,214,1)" fg:x="34806" fg:w="753"/><text x="12.0703%" y="1103.50"></text></g><g><title>[unknown] (747 samples, 0.25%)</title><rect x="11.8224%" y="1077" width="0.2537%" height="15" fill="rgb(247,84,47)" fg:x="34812" fg:w="747"/><text x="12.0724%" y="1087.50"></text></g><g><title>[unknown] (737 samples, 0.25%)</title><rect x="11.8258%" y="1061" width="0.2503%" height="15" fill="rgb(240,111,43)" fg:x="34822" fg:w="737"/><text x="12.0758%" y="1071.50"></text></g><g><title>[unknown] (733 samples, 0.25%)</title><rect x="11.8271%" y="1045" width="0.2489%" height="15" fill="rgb(215,214,35)" fg:x="34826" fg:w="733"/><text x="12.0771%" y="1055.50"></text></g><g><title>[unknown] (710 samples, 0.24%)</title><rect x="11.8349%" y="1029" width="0.2411%" height="15" fill="rgb(248,207,23)" fg:x="34849" fg:w="710"/><text x="12.0849%" y="1039.50"></text></g><g><title>[unknown] (670 samples, 0.23%)</title><rect x="11.8485%" y="1013" width="0.2275%" height="15" fill="rgb(214,186,4)" fg:x="34889" fg:w="670"/><text x="12.0985%" y="1023.50"></text></g><g><title>[unknown] (476 samples, 0.16%)</title><rect x="11.9144%" y="997" width="0.1617%" height="15" fill="rgb(220,133,22)" fg:x="35083" fg:w="476"/><text x="12.1644%" y="1007.50"></text></g><g><title>[unknown] (295 samples, 0.10%)</title><rect x="11.9759%" y="981" width="0.1002%" height="15" fill="rgb(239,134,19)" fg:x="35264" fg:w="295"/><text x="12.2259%" y="991.50"></text></g><g><title>[unknown] (242 samples, 0.08%)</title><rect x="11.9939%" y="965" width="0.0822%" height="15" fill="rgb(250,140,9)" fg:x="35317" fg:w="242"/><text x="12.2439%" y="975.50"></text></g><g><title>[unknown] (152 samples, 0.05%)</title><rect x="12.0244%" y="949" width="0.0516%" height="15" fill="rgb(225,59,14)" fg:x="35407" fg:w="152"/><text x="12.2744%" y="959.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (145 samples, 0.05%)</title><rect x="12.0760%" y="1157" width="0.0492%" height="15" fill="rgb(214,152,51)" fg:x="35559" fg:w="145"/><text x="12.3260%" y="1167.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (135 samples, 0.05%)</title><rect x="12.0794%" y="1141" width="0.0458%" height="15" fill="rgb(251,227,43)" fg:x="35569" fg:w="135"/><text x="12.3294%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (55 samples, 0.02%)</title><rect x="12.1066%" y="1125" width="0.0187%" height="15" fill="rgb(241,96,17)" fg:x="35649" fg:w="55"/><text x="12.3566%" y="1135.50"></text></g><g><title>core::ptr::write (50 samples, 0.02%)</title><rect x="12.1083%" y="1109" width="0.0170%" height="15" fill="rgb(234,198,43)" fg:x="35654" fg:w="50"/><text x="12.3583%" y="1119.50"></text></g><g><title>std::sys::unix::futex::futex_wait (435 samples, 0.15%)</title><rect x="12.1474%" y="1093" width="0.1477%" height="15" fill="rgb(220,108,29)" fg:x="35769" fg:w="435"/><text x="12.3974%" y="1103.50"></text></g><g><title>syscall (402 samples, 0.14%)</title><rect x="12.1586%" y="1077" width="0.1365%" height="15" fill="rgb(226,163,33)" fg:x="35802" fg:w="402"/><text x="12.4086%" y="1087.50"></text></g><g><title>[unknown] (400 samples, 0.14%)</title><rect x="12.1592%" y="1061" width="0.1358%" height="15" fill="rgb(205,194,45)" fg:x="35804" fg:w="400"/><text x="12.4092%" y="1071.50"></text></g><g><title>[unknown] (391 samples, 0.13%)</title><rect x="12.1623%" y="1045" width="0.1328%" height="15" fill="rgb(206,143,44)" fg:x="35813" fg:w="391"/><text x="12.4123%" y="1055.50"></text></g><g><title>[unknown] (391 samples, 0.13%)</title><rect x="12.1623%" y="1029" width="0.1328%" height="15" fill="rgb(236,136,36)" fg:x="35813" fg:w="391"/><text x="12.4123%" y="1039.50"></text></g><g><title>[unknown] (382 samples, 0.13%)</title><rect x="12.1654%" y="1013" width="0.1297%" height="15" fill="rgb(249,172,42)" fg:x="35822" fg:w="382"/><text x="12.4154%" y="1023.50"></text></g><g><title>[unknown] (362 samples, 0.12%)</title><rect x="12.1722%" y="997" width="0.1229%" height="15" fill="rgb(216,139,23)" fg:x="35842" fg:w="362"/><text x="12.4222%" y="1007.50"></text></g><g><title>[unknown] (334 samples, 0.11%)</title><rect x="12.1817%" y="981" width="0.1134%" height="15" fill="rgb(207,166,20)" fg:x="35870" fg:w="334"/><text x="12.4317%" y="991.50"></text></g><g><title>[unknown] (323 samples, 0.11%)</title><rect x="12.1854%" y="965" width="0.1097%" height="15" fill="rgb(210,209,22)" fg:x="35881" fg:w="323"/><text x="12.4354%" y="975.50"></text></g><g><title>[unknown] (269 samples, 0.09%)</title><rect x="12.2037%" y="949" width="0.0914%" height="15" fill="rgb(232,118,20)" fg:x="35935" fg:w="269"/><text x="12.4537%" y="959.50"></text></g><g><title>[unknown] (199 samples, 0.07%)</title><rect x="12.2275%" y="933" width="0.0676%" height="15" fill="rgb(238,113,42)" fg:x="36005" fg:w="199"/><text x="12.4775%" y="943.50"></text></g><g><title>[unknown] (134 samples, 0.05%)</title><rect x="12.2496%" y="917" width="0.0455%" height="15" fill="rgb(231,42,5)" fg:x="36070" fg:w="134"/><text x="12.4996%" y="927.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="12.2608%" y="901" width="0.0343%" height="15" fill="rgb(243,166,24)" fg:x="36103" fg:w="101"/><text x="12.5108%" y="911.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="12.2737%" y="885" width="0.0214%" height="15" fill="rgb(237,226,12)" fg:x="36141" fg:w="63"/><text x="12.5237%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,163 samples, 0.39%)</title><rect x="12.1260%" y="1157" width="0.3950%" height="15" fill="rgb(229,133,24)" fg:x="35706" fg:w="1163"/><text x="12.3760%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,145 samples, 0.39%)</title><rect x="12.1321%" y="1141" width="0.3888%" height="15" fill="rgb(238,33,43)" fg:x="35724" fg:w="1145"/><text x="12.3821%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,145 samples, 0.39%)</title><rect x="12.1321%" y="1125" width="0.3888%" height="15" fill="rgb(227,59,38)" fg:x="35724" fg:w="1145"/><text x="12.3821%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (1,131 samples, 0.38%)</title><rect x="12.1368%" y="1109" width="0.3841%" height="15" fill="rgb(230,97,0)" fg:x="35738" fg:w="1131"/><text x="12.3868%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (665 samples, 0.23%)</title><rect x="12.2951%" y="1093" width="0.2258%" height="15" fill="rgb(250,173,50)" fg:x="36204" fg:w="665"/><text x="12.5451%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (118 samples, 0.04%)</title><rect x="12.4809%" y="1077" width="0.0401%" height="15" fill="rgb(240,15,50)" fg:x="36751" fg:w="118"/><text x="12.7309%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (118 samples, 0.04%)</title><rect x="12.4809%" y="1061" width="0.0401%" height="15" fill="rgb(221,93,22)" fg:x="36751" fg:w="118"/><text x="12.7309%" y="1071.50"></text></g><g><title>async_std::task::spawn::spawn (3,249 samples, 1.10%)</title><rect x="11.4182%" y="1221" width="1.1034%" height="15" fill="rgb(245,180,53)" fg:x="33622" fg:w="3249"/><text x="11.6682%" y="1231.50"></text></g><g><title>async_std::task::builder::Builder::spawn (3,249 samples, 1.10%)</title><rect x="11.4182%" y="1205" width="1.1034%" height="15" fill="rgb(231,88,51)" fg:x="33622" fg:w="3249"/><text x="11.6682%" y="1215.50"></text></g><g><title>async_global_executor::executor::spawn (3,249 samples, 1.10%)</title><rect x="11.4182%" y="1189" width="1.1034%" height="15" fill="rgb(240,58,21)" fg:x="33622" fg:w="3249"/><text x="11.6682%" y="1199.50"></text></g><g><title>async_executor::Executor::spawn (3,249 samples, 1.10%)</title><rect x="11.4182%" y="1173" width="1.1034%" height="15" fill="rgb(237,21,10)" fg:x="33622" fg:w="3249"/><text x="11.6682%" y="1183.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (74 samples, 0.03%)</title><rect x="12.5427%" y="757" width="0.0251%" height="15" fill="rgb(218,43,11)" fg:x="36933" fg:w="74"/><text x="12.7927%" y="767.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (44 samples, 0.01%)</title><rect x="12.5529%" y="741" width="0.0149%" height="15" fill="rgb(218,221,29)" fg:x="36963" fg:w="44"/><text x="12.8029%" y="751.50"></text></g><g><title>rsa::internals::decrypt (144 samples, 0.05%)</title><rect x="12.5247%" y="821" width="0.0489%" height="15" fill="rgb(214,118,42)" fg:x="36880" fg:w="144"/><text x="12.7747%" y="831.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (143 samples, 0.05%)</title><rect x="12.5250%" y="805" width="0.0486%" height="15" fill="rgb(251,200,26)" fg:x="36881" fg:w="143"/><text x="12.7750%" y="815.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (143 samples, 0.05%)</title><rect x="12.5250%" y="789" width="0.0486%" height="15" fill="rgb(237,101,39)" fg:x="36881" fg:w="143"/><text x="12.7750%" y="799.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (143 samples, 0.05%)</title><rect x="12.5250%" y="773" width="0.0486%" height="15" fill="rgb(251,117,11)" fg:x="36881" fg:w="143"/><text x="12.7750%" y="783.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (36 samples, 0.01%)</title><rect x="12.5753%" y="757" width="0.0122%" height="15" fill="rgb(216,223,23)" fg:x="37029" fg:w="36"/><text x="12.8253%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (188 samples, 0.06%)</title><rect x="12.5247%" y="965" width="0.0638%" height="15" fill="rgb(251,54,12)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (188 samples, 0.06%)</title><rect x="12.5247%" y="949" width="0.0638%" height="15" fill="rgb(254,176,54)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (188 samples, 0.06%)</title><rect x="12.5247%" y="933" width="0.0638%" height="15" fill="rgb(210,32,8)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="943.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (188 samples, 0.06%)</title><rect x="12.5247%" y="917" width="0.0638%" height="15" fill="rgb(235,52,38)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="927.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (188 samples, 0.06%)</title><rect x="12.5247%" y="901" width="0.0638%" height="15" fill="rgb(231,4,44)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="911.50"></text></g><g><title>rsa::pkcs1v15::decrypt (188 samples, 0.06%)</title><rect x="12.5247%" y="885" width="0.0638%" height="15" fill="rgb(249,2,32)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="895.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (188 samples, 0.06%)</title><rect x="12.5247%" y="869" width="0.0638%" height="15" fill="rgb(224,65,26)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="879.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (188 samples, 0.06%)</title><rect x="12.5247%" y="853" width="0.0638%" height="15" fill="rgb(250,73,40)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="863.50"></text></g><g><title>rsa::internals::decrypt_and_check (188 samples, 0.06%)</title><rect x="12.5247%" y="837" width="0.0638%" height="15" fill="rgb(253,177,16)" fg:x="36880" fg:w="188"/><text x="12.7747%" y="847.50"></text></g><g><title>rsa::internals::encrypt (44 samples, 0.01%)</title><rect x="12.5736%" y="821" width="0.0149%" height="15" fill="rgb(217,32,34)" fg:x="37024" fg:w="44"/><text x="12.8236%" y="831.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (44 samples, 0.01%)</title><rect x="12.5736%" y="805" width="0.0149%" height="15" fill="rgb(212,7,10)" fg:x="37024" fg:w="44"/><text x="12.8236%" y="815.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (44 samples, 0.01%)</title><rect x="12.5736%" y="789" width="0.0149%" height="15" fill="rgb(245,89,8)" fg:x="37024" fg:w="44"/><text x="12.8236%" y="799.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (44 samples, 0.01%)</title><rect x="12.5736%" y="773" width="0.0149%" height="15" fill="rgb(237,16,53)" fg:x="37024" fg:w="44"/><text x="12.8236%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (203 samples, 0.07%)</title><rect x="12.5223%" y="1061" width="0.0689%" height="15" fill="rgb(250,204,30)" fg:x="36873" fg:w="203"/><text x="12.7723%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (197 samples, 0.07%)</title><rect x="12.5243%" y="1045" width="0.0669%" height="15" fill="rgb(208,77,27)" fg:x="36879" fg:w="197"/><text x="12.7743%" y="1055.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (197 samples, 0.07%)</title><rect x="12.5243%" y="1029" width="0.0669%" height="15" fill="rgb(250,204,28)" fg:x="36879" fg:w="197"/><text x="12.7743%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (197 samples, 0.07%)</title><rect x="12.5243%" y="1013" width="0.0669%" height="15" fill="rgb(244,63,21)" fg:x="36879" fg:w="197"/><text x="12.7743%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (197 samples, 0.07%)</title><rect x="12.5243%" y="997" width="0.0669%" height="15" fill="rgb(236,85,44)" fg:x="36879" fg:w="197"/><text x="12.7743%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (197 samples, 0.07%)</title><rect x="12.5243%" y="981" width="0.0669%" height="15" fill="rgb(215,98,4)" fg:x="36879" fg:w="197"/><text x="12.7743%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (272 samples, 0.09%)</title><rect x="12.5223%" y="1221" width="0.0924%" height="15" fill="rgb(235,38,11)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (272 samples, 0.09%)</title><rect x="12.5223%" y="1205" width="0.0924%" height="15" fill="rgb(254,186,25)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (272 samples, 0.09%)</title><rect x="12.5223%" y="1189" width="0.0924%" height="15" fill="rgb(225,55,31)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1199.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (272 samples, 0.09%)</title><rect x="12.5223%" y="1173" width="0.0924%" height="15" fill="rgb(211,15,21)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1183.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (272 samples, 0.09%)</title><rect x="12.5223%" y="1157" width="0.0924%" height="15" fill="rgb(215,187,41)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1167.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (272 samples, 0.09%)</title><rect x="12.5223%" y="1141" width="0.0924%" height="15" fill="rgb(248,69,32)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (272 samples, 0.09%)</title><rect x="12.5223%" y="1125" width="0.0924%" height="15" fill="rgb(252,102,52)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (272 samples, 0.09%)</title><rect x="12.5223%" y="1109" width="0.0924%" height="15" fill="rgb(253,140,32)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1119.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (272 samples, 0.09%)</title><rect x="12.5223%" y="1093" width="0.0924%" height="15" fill="rgb(216,56,42)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1103.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (272 samples, 0.09%)</title><rect x="12.5223%" y="1077" width="0.0924%" height="15" fill="rgb(216,184,14)" fg:x="36873" fg:w="272"/><text x="12.7723%" y="1087.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (69 samples, 0.02%)</title><rect x="12.5912%" y="1061" width="0.0234%" height="15" fill="rgb(237,187,27)" fg:x="37076" fg:w="69"/><text x="12.8412%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (69 samples, 0.02%)</title><rect x="12.5912%" y="1045" width="0.0234%" height="15" fill="rgb(219,65,3)" fg:x="37076" fg:w="69"/><text x="12.8412%" y="1055.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (49 samples, 0.02%)</title><rect x="12.5980%" y="1029" width="0.0166%" height="15" fill="rgb(245,83,25)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="12.5980%" y="1013" width="0.0166%" height="15" fill="rgb(214,205,45)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="1023.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (49 samples, 0.02%)</title><rect x="12.5980%" y="997" width="0.0166%" height="15" fill="rgb(241,20,18)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="12.5980%" y="981" width="0.0166%" height="15" fill="rgb(232,163,23)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="991.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (49 samples, 0.02%)</title><rect x="12.5980%" y="965" width="0.0166%" height="15" fill="rgb(214,5,46)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="12.5980%" y="949" width="0.0166%" height="15" fill="rgb(229,78,17)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="959.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (49 samples, 0.02%)</title><rect x="12.5980%" y="933" width="0.0166%" height="15" fill="rgb(248,89,10)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="12.5980%" y="917" width="0.0166%" height="15" fill="rgb(248,54,15)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="927.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (49 samples, 0.02%)</title><rect x="12.5980%" y="901" width="0.0166%" height="15" fill="rgb(223,116,6)" fg:x="37096" fg:w="49"/><text x="12.8480%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.01%)</title><rect x="12.5997%" y="885" width="0.0149%" height="15" fill="rgb(205,125,38)" fg:x="37101" fg:w="44"/><text x="12.8497%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (36 samples, 0.01%)</title><rect x="12.6184%" y="469" width="0.0122%" height="15" fill="rgb(251,78,38)" fg:x="37156" fg:w="36"/><text x="12.8684%" y="479.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (36 samples, 0.01%)</title><rect x="12.6184%" y="453" width="0.0122%" height="15" fill="rgb(253,78,28)" fg:x="37156" fg:w="36"/><text x="12.8684%" y="463.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (51 samples, 0.02%)</title><rect x="12.6184%" y="629" width="0.0173%" height="15" fill="rgb(209,120,3)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="12.6184%" y="613" width="0.0173%" height="15" fill="rgb(238,229,9)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="623.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (51 samples, 0.02%)</title><rect x="12.6184%" y="597" width="0.0173%" height="15" fill="rgb(253,159,18)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="12.6184%" y="581" width="0.0173%" height="15" fill="rgb(244,42,34)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="591.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (51 samples, 0.02%)</title><rect x="12.6184%" y="565" width="0.0173%" height="15" fill="rgb(224,8,7)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="575.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (51 samples, 0.02%)</title><rect x="12.6184%" y="549" width="0.0173%" height="15" fill="rgb(210,201,45)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="559.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (51 samples, 0.02%)</title><rect x="12.6184%" y="533" width="0.0173%" height="15" fill="rgb(252,185,21)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (51 samples, 0.02%)</title><rect x="12.6184%" y="517" width="0.0173%" height="15" fill="rgb(223,131,1)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (51 samples, 0.02%)</title><rect x="12.6184%" y="501" width="0.0173%" height="15" fill="rgb(245,141,16)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (51 samples, 0.02%)</title><rect x="12.6184%" y="485" width="0.0173%" height="15" fill="rgb(229,55,45)" fg:x="37156" fg:w="51"/><text x="12.8684%" y="495.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (37 samples, 0.01%)</title><rect x="12.6357%" y="549" width="0.0126%" height="15" fill="rgb(208,92,15)" fg:x="37207" fg:w="37"/><text x="12.8857%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.01%)</title><rect x="12.6357%" y="565" width="0.0143%" height="15" fill="rgb(234,185,47)" fg:x="37207" fg:w="42"/><text x="12.8857%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.03%)</title><rect x="12.6184%" y="645" width="0.0323%" height="15" fill="rgb(253,104,50)" fg:x="37156" fg:w="95"/><text x="12.8684%" y="655.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (44 samples, 0.01%)</title><rect x="12.6357%" y="629" width="0.0149%" height="15" fill="rgb(205,70,7)" fg:x="37207" fg:w="44"/><text x="12.8857%" y="639.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (44 samples, 0.01%)</title><rect x="12.6357%" y="613" width="0.0149%" height="15" fill="rgb(240,178,43)" fg:x="37207" fg:w="44"/><text x="12.8857%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.01%)</title><rect x="12.6357%" y="597" width="0.0149%" height="15" fill="rgb(214,112,2)" fg:x="37207" fg:w="44"/><text x="12.8857%" y="607.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (44 samples, 0.01%)</title><rect x="12.6357%" y="581" width="0.0149%" height="15" fill="rgb(206,46,17)" fg:x="37207" fg:w="44"/><text x="12.8857%" y="591.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (95 samples, 0.03%)</title><rect x="12.6510%" y="405" width="0.0323%" height="15" fill="rgb(225,220,16)" fg:x="37252" fg:w="95"/><text x="12.9010%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.03%)</title><rect x="12.6510%" y="389" width="0.0323%" height="15" fill="rgb(238,65,40)" fg:x="37252" fg:w="95"/><text x="12.9010%" y="399.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (95 samples, 0.03%)</title><rect x="12.6510%" y="373" width="0.0323%" height="15" fill="rgb(230,151,21)" fg:x="37252" fg:w="95"/><text x="12.9010%" y="383.50"></text></g><g><title>&lt;async_io::reactor::Writable&lt;T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.03%)</title><rect x="12.6510%" y="357" width="0.0323%" height="15" fill="rgb(218,58,49)" fg:x="37252" fg:w="95"/><text x="12.9010%" y="367.50"></text></g><g><title>&lt;async_io::reactor::Ready&lt;H,T&gt; as core::future::future::Future&gt;::poll (95 samples, 0.03%)</title><rect x="12.6510%" y="341" width="0.0323%" height="15" fill="rgb(219,179,14)" fg:x="37252" fg:w="95"/><text x="12.9010%" y="351.50"></text></g><g><title>polling::Poller::modify (95 samples, 0.03%)</title><rect x="12.6510%" y="325" width="0.0323%" height="15" fill="rgb(223,72,1)" fg:x="37252" fg:w="95"/><text x="12.9010%" y="335.50"></text></g><g><title>polling::epoll::Poller::modify (95 samples, 0.03%)</title><rect x="12.6510%" y="309" width="0.0323%" height="15" fill="rgb(238,126,10)" fg:x="37252" fg:w="95"/><text x="12.9010%" y="319.50"></text></g><g><title>polling::epoll::Poller::ctl (95 samples, 0.03%)</title><rect x="12.6510%" y="293" width="0.0323%" height="15" fill="rgb(224,206,38)" fg:x="37252" fg:w="95"/><text x="12.9010%" y="303.50"></text></g><g><title>epoll_ctl (91 samples, 0.03%)</title><rect x="12.6524%" y="277" width="0.0309%" height="15" fill="rgb(212,201,54)" fg:x="37256" fg:w="91"/><text x="12.9024%" y="287.50"></text></g><g><title>[unknown] (91 samples, 0.03%)</title><rect x="12.6524%" y="261" width="0.0309%" height="15" fill="rgb(218,154,48)" fg:x="37256" fg:w="91"/><text x="12.9024%" y="271.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="12.6527%" y="245" width="0.0306%" height="15" fill="rgb(232,93,24)" fg:x="37257" fg:w="90"/><text x="12.9027%" y="255.50"></text></g><g><title>[unknown] (89 samples, 0.03%)</title><rect x="12.6530%" y="229" width="0.0302%" height="15" fill="rgb(245,30,21)" fg:x="37258" fg:w="89"/><text x="12.9030%" y="239.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="12.6534%" y="213" width="0.0299%" height="15" fill="rgb(242,148,29)" fg:x="37259" fg:w="88"/><text x="12.9034%" y="223.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="12.6619%" y="197" width="0.0214%" height="15" fill="rgb(244,153,54)" fg:x="37284" fg:w="63"/><text x="12.9119%" y="207.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.03%)</title><rect x="12.6510%" y="421" width="0.0343%" height="15" fill="rgb(252,87,22)" fg:x="37252" fg:w="101"/><text x="12.9010%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (199 samples, 0.07%)</title><rect x="12.6184%" y="1093" width="0.0676%" height="15" fill="rgb(210,51,29)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="1103.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (199 samples, 0.07%)</title><rect x="12.6184%" y="1077" width="0.0676%" height="15" fill="rgb(242,136,47)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (199 samples, 0.07%)</title><rect x="12.6184%" y="1061" width="0.0676%" height="15" fill="rgb(238,68,4)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="1071.50"></text></g><g><title>std::panicking::try (199 samples, 0.07%)</title><rect x="12.6184%" y="1045" width="0.0676%" height="15" fill="rgb(242,161,30)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (199 samples, 0.07%)</title><rect x="12.6184%" y="1029" width="0.0676%" height="15" fill="rgb(218,58,44)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="1039.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (199 samples, 0.07%)</title><rect x="12.6184%" y="1013" width="0.0676%" height="15" fill="rgb(252,125,32)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (199 samples, 0.07%)</title><rect x="12.6184%" y="997" width="0.0676%" height="15" fill="rgb(219,178,0)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (199 samples, 0.07%)</title><rect x="12.6184%" y="981" width="0.0676%" height="15" fill="rgb(213,152,7)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="991.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (199 samples, 0.07%)</title><rect x="12.6184%" y="965" width="0.0676%" height="15" fill="rgb(249,109,34)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="975.50"></text></g><g><title>async_global_executor::reactor::block_on (199 samples, 0.07%)</title><rect x="12.6184%" y="949" width="0.0676%" height="15" fill="rgb(232,96,21)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="959.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (199 samples, 0.07%)</title><rect x="12.6184%" y="933" width="0.0676%" height="15" fill="rgb(228,27,39)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="943.50"></text></g><g><title>async_io::driver::block_on (199 samples, 0.07%)</title><rect x="12.6184%" y="917" width="0.0676%" height="15" fill="rgb(211,182,52)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="927.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (199 samples, 0.07%)</title><rect x="12.6184%" y="901" width="0.0676%" height="15" fill="rgb(234,178,38)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (199 samples, 0.07%)</title><rect x="12.6184%" y="885" width="0.0676%" height="15" fill="rgb(221,111,3)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (199 samples, 0.07%)</title><rect x="12.6184%" y="869" width="0.0676%" height="15" fill="rgb(228,175,21)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (199 samples, 0.07%)</title><rect x="12.6184%" y="853" width="0.0676%" height="15" fill="rgb(228,174,43)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (199 samples, 0.07%)</title><rect x="12.6184%" y="837" width="0.0676%" height="15" fill="rgb(211,191,0)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (199 samples, 0.07%)</title><rect x="12.6184%" y="821" width="0.0676%" height="15" fill="rgb(253,117,3)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (199 samples, 0.07%)</title><rect x="12.6184%" y="805" width="0.0676%" height="15" fill="rgb(241,127,19)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="815.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (199 samples, 0.07%)</title><rect x="12.6184%" y="789" width="0.0676%" height="15" fill="rgb(218,103,12)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (199 samples, 0.07%)</title><rect x="12.6184%" y="773" width="0.0676%" height="15" fill="rgb(236,214,43)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="783.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (199 samples, 0.07%)</title><rect x="12.6184%" y="757" width="0.0676%" height="15" fill="rgb(244,144,19)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="767.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (199 samples, 0.07%)</title><rect x="12.6184%" y="741" width="0.0676%" height="15" fill="rgb(246,188,10)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="751.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (199 samples, 0.07%)</title><rect x="12.6184%" y="725" width="0.0676%" height="15" fill="rgb(212,193,33)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (199 samples, 0.07%)</title><rect x="12.6184%" y="709" width="0.0676%" height="15" fill="rgb(241,51,29)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (199 samples, 0.07%)</title><rect x="12.6184%" y="693" width="0.0676%" height="15" fill="rgb(211,58,19)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (199 samples, 0.07%)</title><rect x="12.6184%" y="677" width="0.0676%" height="15" fill="rgb(229,111,26)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="687.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (199 samples, 0.07%)</title><rect x="12.6184%" y="661" width="0.0676%" height="15" fill="rgb(213,115,40)" fg:x="37156" fg:w="199"/><text x="12.8684%" y="671.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (104 samples, 0.04%)</title><rect x="12.6507%" y="645" width="0.0353%" height="15" fill="rgb(209,56,44)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (104 samples, 0.04%)</title><rect x="12.6507%" y="629" width="0.0353%" height="15" fill="rgb(230,108,32)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="639.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (104 samples, 0.04%)</title><rect x="12.6507%" y="613" width="0.0353%" height="15" fill="rgb(216,165,31)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (104 samples, 0.04%)</title><rect x="12.6507%" y="597" width="0.0353%" height="15" fill="rgb(218,122,21)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="607.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (104 samples, 0.04%)</title><rect x="12.6507%" y="581" width="0.0353%" height="15" fill="rgb(223,224,47)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (104 samples, 0.04%)</title><rect x="12.6507%" y="565" width="0.0353%" height="15" fill="rgb(238,102,44)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="575.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (104 samples, 0.04%)</title><rect x="12.6507%" y="549" width="0.0353%" height="15" fill="rgb(236,46,40)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (104 samples, 0.04%)</title><rect x="12.6507%" y="533" width="0.0353%" height="15" fill="rgb(247,202,50)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="543.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (104 samples, 0.04%)</title><rect x="12.6507%" y="517" width="0.0353%" height="15" fill="rgb(209,99,20)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (104 samples, 0.04%)</title><rect x="12.6507%" y="501" width="0.0353%" height="15" fill="rgb(252,27,34)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="511.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (104 samples, 0.04%)</title><rect x="12.6507%" y="485" width="0.0353%" height="15" fill="rgb(215,206,23)" fg:x="37251" fg:w="104"/><text x="12.9007%" y="495.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (103 samples, 0.03%)</title><rect x="12.6510%" y="469" width="0.0350%" height="15" fill="rgb(212,135,36)" fg:x="37252" fg:w="103"/><text x="12.9010%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 0.03%)</title><rect x="12.6510%" y="453" width="0.0350%" height="15" fill="rgb(240,189,1)" fg:x="37252" fg:w="103"/><text x="12.9010%" y="463.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (103 samples, 0.03%)</title><rect x="12.6510%" y="437" width="0.0350%" height="15" fill="rgb(242,56,20)" fg:x="37252" fg:w="103"/><text x="12.9010%" y="447.50"></text></g><g><title>async_executor::steal (60 samples, 0.02%)</title><rect x="12.6860%" y="437" width="0.0204%" height="15" fill="rgb(247,132,33)" fg:x="37355" fg:w="60"/><text x="12.9360%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (60 samples, 0.02%)</title><rect x="12.6860%" y="421" width="0.0204%" height="15" fill="rgb(208,149,11)" fg:x="37355" fg:w="60"/><text x="12.9360%" y="431.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (60 samples, 0.02%)</title><rect x="12.6860%" y="405" width="0.0204%" height="15" fill="rgb(211,33,11)" fg:x="37355" fg:w="60"/><text x="12.9360%" y="415.50"></text></g><g><title>cfree (60 samples, 0.02%)</title><rect x="12.6860%" y="389" width="0.0204%" height="15" fill="rgb(221,29,38)" fg:x="37355" fg:w="60"/><text x="12.9360%" y="399.50"></text></g><g><title>[libc.so.6] (60 samples, 0.02%)</title><rect x="12.6860%" y="373" width="0.0204%" height="15" fill="rgb(206,182,49)" fg:x="37355" fg:w="60"/><text x="12.9360%" y="383.50"></text></g><g><title>std::thread::current (44 samples, 0.01%)</title><rect x="12.7064%" y="341" width="0.0149%" height="15" fill="rgb(216,140,1)" fg:x="37415" fg:w="44"/><text x="12.9564%" y="351.50"></text></g><g><title>std::sys_common::thread_info::current_thread (44 samples, 0.01%)</title><rect x="12.7064%" y="325" width="0.0149%" height="15" fill="rgb(232,57,40)" fg:x="37415" fg:w="44"/><text x="12.9564%" y="335.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (44 samples, 0.01%)</title><rect x="12.7064%" y="309" width="0.0149%" height="15" fill="rgb(224,186,18)" fg:x="37415" fg:w="44"/><text x="12.9564%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44 samples, 0.01%)</title><rect x="12.7064%" y="293" width="0.0149%" height="15" fill="rgb(215,121,11)" fg:x="37415" fg:w="44"/><text x="12.9564%" y="303.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with::{{closure}} (33 samples, 0.01%)</title><rect x="12.7101%" y="277" width="0.0112%" height="15" fill="rgb(245,147,10)" fg:x="37426" fg:w="33"/><text x="12.9601%" y="287.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (130 samples, 0.04%)</title><rect x="12.6860%" y="453" width="0.0441%" height="15" fill="rgb(238,153,13)" fg:x="37355" fg:w="130"/><text x="12.9360%" y="463.50"></text></g><g><title>fastrand::usize (70 samples, 0.02%)</title><rect x="12.7064%" y="437" width="0.0238%" height="15" fill="rgb(233,108,0)" fg:x="37415" fg:w="70"/><text x="12.9564%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (70 samples, 0.02%)</title><rect x="12.7064%" y="421" width="0.0238%" height="15" fill="rgb(212,157,17)" fg:x="37415" fg:w="70"/><text x="12.9564%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (70 samples, 0.02%)</title><rect x="12.7064%" y="405" width="0.0238%" height="15" fill="rgb(225,213,38)" fg:x="37415" fg:w="70"/><text x="12.9564%" y="415.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (70 samples, 0.02%)</title><rect x="12.7064%" y="389" width="0.0238%" height="15" fill="rgb(248,16,11)" fg:x="37415" fg:w="70"/><text x="12.9564%" y="399.50"></text></g><g><title>fastrand::RNG::__getit::{{closure}} (70 samples, 0.02%)</title><rect x="12.7064%" y="373" width="0.0238%" height="15" fill="rgb(241,33,4)" fg:x="37415" fg:w="70"/><text x="12.9564%" y="383.50"></text></g><g><title>fastrand::RNG::__init (70 samples, 0.02%)</title><rect x="12.7064%" y="357" width="0.0238%" height="15" fill="rgb(222,26,43)" fg:x="37415" fg:w="70"/><text x="12.9564%" y="367.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="12.6860%" y="741" width="0.0475%" height="15" fill="rgb(243,29,36)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="751.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="12.6860%" y="725" width="0.0475%" height="15" fill="rgb(241,9,27)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (140 samples, 0.05%)</title><rect x="12.6860%" y="709" width="0.0475%" height="15" fill="rgb(205,117,26)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (140 samples, 0.05%)</title><rect x="12.6860%" y="693" width="0.0475%" height="15" fill="rgb(209,80,39)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (140 samples, 0.05%)</title><rect x="12.6860%" y="677" width="0.0475%" height="15" fill="rgb(239,155,6)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (140 samples, 0.05%)</title><rect x="12.6860%" y="661" width="0.0475%" height="15" fill="rgb(212,104,12)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="671.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (140 samples, 0.05%)</title><rect x="12.6860%" y="645" width="0.0475%" height="15" fill="rgb(234,204,3)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="12.6860%" y="629" width="0.0475%" height="15" fill="rgb(251,218,7)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (140 samples, 0.05%)</title><rect x="12.6860%" y="613" width="0.0475%" height="15" fill="rgb(221,81,32)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="623.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="12.6860%" y="597" width="0.0475%" height="15" fill="rgb(214,152,26)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="12.6860%" y="581" width="0.0475%" height="15" fill="rgb(223,22,3)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (140 samples, 0.05%)</title><rect x="12.6860%" y="565" width="0.0475%" height="15" fill="rgb(207,174,7)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="12.6860%" y="549" width="0.0475%" height="15" fill="rgb(224,19,52)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="559.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (140 samples, 0.05%)</title><rect x="12.6860%" y="533" width="0.0475%" height="15" fill="rgb(228,24,14)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="12.6860%" y="517" width="0.0475%" height="15" fill="rgb(230,153,43)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="527.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (140 samples, 0.05%)</title><rect x="12.6860%" y="501" width="0.0475%" height="15" fill="rgb(231,106,12)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="511.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="12.6860%" y="485" width="0.0475%" height="15" fill="rgb(215,92,2)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="495.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (140 samples, 0.05%)</title><rect x="12.6860%" y="469" width="0.0475%" height="15" fill="rgb(249,143,25)" fg:x="37355" fg:w="140"/><text x="12.9360%" y="479.50"></text></g><g><title>__rdl_alloc (84 samples, 0.03%)</title><rect x="12.7413%" y="629" width="0.0285%" height="15" fill="rgb(252,7,35)" fg:x="37518" fg:w="84"/><text x="12.9913%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (84 samples, 0.03%)</title><rect x="12.7413%" y="613" width="0.0285%" height="15" fill="rgb(216,69,40)" fg:x="37518" fg:w="84"/><text x="12.9913%" y="623.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (84 samples, 0.03%)</title><rect x="12.7413%" y="597" width="0.0285%" height="15" fill="rgb(240,36,33)" fg:x="37518" fg:w="84"/><text x="12.9913%" y="607.50"></text></g><g><title>posix_memalign (84 samples, 0.03%)</title><rect x="12.7413%" y="581" width="0.0285%" height="15" fill="rgb(231,128,14)" fg:x="37518" fg:w="84"/><text x="12.9913%" y="591.50"></text></g><g><title>[libc.so.6] (82 samples, 0.03%)</title><rect x="12.7420%" y="565" width="0.0278%" height="15" fill="rgb(245,143,14)" fg:x="37520" fg:w="82"/><text x="12.9920%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (93 samples, 0.03%)</title><rect x="12.7413%" y="709" width="0.0316%" height="15" fill="rgb(222,130,28)" fg:x="37518" fg:w="93"/><text x="12.9913%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (93 samples, 0.03%)</title><rect x="12.7413%" y="693" width="0.0316%" height="15" fill="rgb(212,10,48)" fg:x="37518" fg:w="93"/><text x="12.9913%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (93 samples, 0.03%)</title><rect x="12.7413%" y="677" width="0.0316%" height="15" fill="rgb(254,118,45)" fg:x="37518" fg:w="93"/><text x="12.9913%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (93 samples, 0.03%)</title><rect x="12.7413%" y="661" width="0.0316%" height="15" fill="rgb(228,6,45)" fg:x="37518" fg:w="93"/><text x="12.9913%" y="671.50"></text></g><g><title>alloc::alloc::alloc (93 samples, 0.03%)</title><rect x="12.7413%" y="645" width="0.0316%" height="15" fill="rgb(241,18,35)" fg:x="37518" fg:w="93"/><text x="12.9913%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (447 samples, 0.15%)</title><rect x="12.7804%" y="693" width="0.1518%" height="15" fill="rgb(227,214,53)" fg:x="37633" fg:w="447"/><text x="13.0304%" y="703.50"></text></g><g><title>core::ptr::write (160 samples, 0.05%)</title><rect x="12.8779%" y="677" width="0.0543%" height="15" fill="rgb(224,107,51)" fg:x="37920" fg:w="160"/><text x="13.1279%" y="687.50"></text></g><g><title>[unknown] (153 samples, 0.05%)</title><rect x="12.8802%" y="661" width="0.0520%" height="15" fill="rgb(248,60,28)" fg:x="37927" fg:w="153"/><text x="13.1302%" y="671.50"></text></g><g><title>[unknown] (150 samples, 0.05%)</title><rect x="12.8813%" y="645" width="0.0509%" height="15" fill="rgb(249,101,23)" fg:x="37930" fg:w="150"/><text x="13.1313%" y="655.50"></text></g><g><title>[unknown] (149 samples, 0.05%)</title><rect x="12.8816%" y="629" width="0.0506%" height="15" fill="rgb(228,51,19)" fg:x="37931" fg:w="149"/><text x="13.1316%" y="639.50"></text></g><g><title>[unknown] (149 samples, 0.05%)</title><rect x="12.8816%" y="613" width="0.0506%" height="15" fill="rgb(213,20,6)" fg:x="37931" fg:w="149"/><text x="13.1316%" y="623.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="12.8931%" y="597" width="0.0391%" height="15" fill="rgb(212,124,10)" fg:x="37965" fg:w="115"/><text x="13.1431%" y="607.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="12.9023%" y="581" width="0.0299%" height="15" fill="rgb(248,3,40)" fg:x="37992" fg:w="88"/><text x="13.1523%" y="591.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="12.9159%" y="565" width="0.0163%" height="15" fill="rgb(223,178,23)" fg:x="38032" fg:w="48"/><text x="13.1659%" y="575.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="12.9186%" y="549" width="0.0136%" height="15" fill="rgb(240,132,45)" fg:x="38040" fg:w="40"/><text x="13.1686%" y="559.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="12.9213%" y="533" width="0.0109%" height="15" fill="rgb(245,164,36)" fg:x="38048" fg:w="32"/><text x="13.1713%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (751 samples, 0.26%)</title><rect x="12.6860%" y="805" width="0.2550%" height="15" fill="rgb(231,188,53)" fg:x="37355" fg:w="751"/><text x="12.9360%" y="815.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (751 samples, 0.26%)</title><rect x="12.6860%" y="789" width="0.2550%" height="15" fill="rgb(237,198,39)" fg:x="37355" fg:w="751"/><text x="12.9360%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (751 samples, 0.26%)</title><rect x="12.6860%" y="773" width="0.2550%" height="15" fill="rgb(223,120,35)" fg:x="37355" fg:w="751"/><text x="12.9360%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (751 samples, 0.26%)</title><rect x="12.6860%" y="757" width="0.2550%" height="15" fill="rgb(253,107,49)" fg:x="37355" fg:w="751"/><text x="12.9360%" y="767.50"></text></g><g><title>async_executor::Runner::new (611 samples, 0.21%)</title><rect x="12.7335%" y="741" width="0.2075%" height="15" fill="rgb(216,44,31)" fg:x="37495" fg:w="611"/><text x="12.9835%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (588 samples, 0.20%)</title><rect x="12.7413%" y="725" width="0.1997%" height="15" fill="rgb(253,87,21)" fg:x="37518" fg:w="588"/><text x="12.9913%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (495 samples, 0.17%)</title><rect x="12.7729%" y="709" width="0.1681%" height="15" fill="rgb(226,18,2)" fg:x="37611" fg:w="495"/><text x="13.0229%" y="719.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_right_border (46 samples, 0.02%)</title><rect x="12.9465%" y="741" width="0.0156%" height="15" fill="rgb(216,8,46)" fg:x="38122" fg:w="46"/><text x="13.1965%" y="751.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_top (46 samples, 0.02%)</title><rect x="12.9465%" y="725" width="0.0156%" height="15" fill="rgb(226,140,39)" fg:x="38122" fg:w="46"/><text x="13.1965%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::pop_internal_level (46 samples, 0.02%)</title><rect x="12.9465%" y="709" width="0.0156%" height="15" fill="rgb(221,194,54)" fg:x="38122" fg:w="46"/><text x="13.1965%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (46 samples, 0.02%)</title><rect x="12.9465%" y="693" width="0.0156%" height="15" fill="rgb(213,92,11)" fg:x="38122" fg:w="46"/><text x="13.1965%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (46 samples, 0.02%)</title><rect x="12.9465%" y="677" width="0.0156%" height="15" fill="rgb(229,162,46)" fg:x="38122" fg:w="46"/><text x="13.1965%" y="687.50"></text></g><g><title>cfree (46 samples, 0.02%)</title><rect x="12.9465%" y="661" width="0.0156%" height="15" fill="rgb(214,111,36)" fg:x="38122" fg:w="46"/><text x="13.1965%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (55 samples, 0.02%)</title><rect x="12.9621%" y="725" width="0.0187%" height="15" fill="rgb(207,6,21)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (55 samples, 0.02%)</title><rect x="12.9621%" y="709" width="0.0187%" height="15" fill="rgb(213,127,38)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="719.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (55 samples, 0.02%)</title><rect x="12.9621%" y="693" width="0.0187%" height="15" fill="rgb(238,118,32)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (55 samples, 0.02%)</title><rect x="12.9621%" y="677" width="0.0187%" height="15" fill="rgb(240,139,39)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (55 samples, 0.02%)</title><rect x="12.9621%" y="661" width="0.0187%" height="15" fill="rgb(235,10,37)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (55 samples, 0.02%)</title><rect x="12.9621%" y="645" width="0.0187%" height="15" fill="rgb(249,171,38)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.02%)</title><rect x="12.9621%" y="629" width="0.0187%" height="15" fill="rgb(242,144,32)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.02%)</title><rect x="12.9621%" y="613" width="0.0187%" height="15" fill="rgb(217,117,21)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="623.50"></text></g><g><title>alloc::alloc::alloc (55 samples, 0.02%)</title><rect x="12.9621%" y="597" width="0.0187%" height="15" fill="rgb(249,87,1)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="607.50"></text></g><g><title>malloc (55 samples, 0.02%)</title><rect x="12.9621%" y="581" width="0.0187%" height="15" fill="rgb(248,196,48)" fg:x="38168" fg:w="55"/><text x="13.2121%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (154 samples, 0.05%)</title><rect x="12.9465%" y="773" width="0.0523%" height="15" fill="rgb(251,206,33)" fg:x="38122" fg:w="154"/><text x="13.1965%" y="783.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (154 samples, 0.05%)</title><rect x="12.9465%" y="757" width="0.0523%" height="15" fill="rgb(232,141,28)" fg:x="38122" fg:w="154"/><text x="13.1965%" y="767.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (108 samples, 0.04%)</title><rect x="12.9621%" y="741" width="0.0367%" height="15" fill="rgb(209,167,14)" fg:x="38168" fg:w="108"/><text x="13.2121%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (53 samples, 0.02%)</title><rect x="12.9808%" y="725" width="0.0180%" height="15" fill="rgb(225,11,50)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="735.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (53 samples, 0.02%)</title><rect x="12.9808%" y="709" width="0.0180%" height="15" fill="rgb(209,50,20)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::replace (53 samples, 0.02%)</title><rect x="12.9808%" y="693" width="0.0180%" height="15" fill="rgb(212,17,46)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="703.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::{{closure}} (53 samples, 0.02%)</title><rect x="12.9808%" y="677" width="0.0180%" height="15" fill="rgb(216,101,39)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}} (53 samples, 0.02%)</title><rect x="12.9808%" y="661" width="0.0180%" height="15" fill="rgb(212,228,48)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (53 samples, 0.02%)</title><rect x="12.9808%" y="645" width="0.0180%" height="15" fill="rgb(250,6,50)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="655.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (53 samples, 0.02%)</title><rect x="12.9808%" y="629" width="0.0180%" height="15" fill="rgb(250,160,48)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (53 samples, 0.02%)</title><rect x="12.9808%" y="613" width="0.0180%" height="15" fill="rgb(244,216,33)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (53 samples, 0.02%)</title><rect x="12.9808%" y="597" width="0.0180%" height="15" fill="rgb(207,157,5)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (53 samples, 0.02%)</title><rect x="12.9808%" y="581" width="0.0180%" height="15" fill="rgb(228,199,8)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.02%)</title><rect x="12.9808%" y="565" width="0.0180%" height="15" fill="rgb(227,80,20)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.02%)</title><rect x="12.9808%" y="549" width="0.0180%" height="15" fill="rgb(222,9,33)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="559.50"></text></g><g><title>alloc::alloc::alloc (53 samples, 0.02%)</title><rect x="12.9808%" y="533" width="0.0180%" height="15" fill="rgb(239,44,28)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="543.50"></text></g><g><title>malloc (53 samples, 0.02%)</title><rect x="12.9808%" y="517" width="0.0180%" height="15" fill="rgb(249,187,43)" fg:x="38223" fg:w="53"/><text x="13.2308%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (31 samples, 0.01%)</title><rect x="13.0205%" y="757" width="0.0105%" height="15" fill="rgb(216,141,28)" fg:x="38340" fg:w="31"/><text x="13.2705%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (31 samples, 0.01%)</title><rect x="13.0205%" y="741" width="0.0105%" height="15" fill="rgb(230,154,53)" fg:x="38340" fg:w="31"/><text x="13.2705%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (37 samples, 0.01%)</title><rect x="13.0334%" y="757" width="0.0126%" height="15" fill="rgb(227,82,4)" fg:x="38378" fg:w="37"/><text x="13.2834%" y="767.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (519 samples, 0.18%)</title><rect x="12.9410%" y="789" width="0.1763%" height="15" fill="rgb(220,107,16)" fg:x="38106" fg:w="519"/><text x="13.1910%" y="799.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (336 samples, 0.11%)</title><rect x="13.0032%" y="773" width="0.1141%" height="15" fill="rgb(207,187,2)" fg:x="38289" fg:w="336"/><text x="13.2532%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (201 samples, 0.07%)</title><rect x="13.0490%" y="757" width="0.0683%" height="15" fill="rgb(210,162,52)" fg:x="38424" fg:w="201"/><text x="13.2990%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (200 samples, 0.07%)</title><rect x="13.0494%" y="741" width="0.0679%" height="15" fill="rgb(217,216,49)" fg:x="38425" fg:w="200"/><text x="13.2994%" y="751.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (200 samples, 0.07%)</title><rect x="13.0494%" y="725" width="0.0679%" height="15" fill="rgb(218,146,49)" fg:x="38425" fg:w="200"/><text x="13.2994%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (198 samples, 0.07%)</title><rect x="13.0500%" y="709" width="0.0672%" height="15" fill="rgb(216,55,40)" fg:x="38427" fg:w="198"/><text x="13.3000%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2,023 samples, 0.69%)</title><rect x="12.6184%" y="1221" width="0.6870%" height="15" fill="rgb(208,196,21)" fg:x="37156" fg:w="2023"/><text x="12.8684%" y="1231.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2,023 samples, 0.69%)</title><rect x="12.6184%" y="1205" width="0.6870%" height="15" fill="rgb(242,117,42)" fg:x="37156" fg:w="2023"/><text x="12.8684%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (2,023 samples, 0.69%)</title><rect x="12.6184%" y="1189" width="0.6870%" height="15" fill="rgb(210,11,23)" fg:x="37156" fg:w="2023"/><text x="12.8684%" y="1199.50"></text></g><g><title>std::panicking::try (2,023 samples, 0.69%)</title><rect x="12.6184%" y="1173" width="0.6870%" height="15" fill="rgb(217,110,2)" fg:x="37156" fg:w="2023"/><text x="12.8684%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (2,023 samples, 0.69%)</title><rect x="12.6184%" y="1157" width="0.6870%" height="15" fill="rgb(229,77,54)" fg:x="37156" fg:w="2023"/><text x="12.8684%" y="1167.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,023 samples, 0.69%)</title><rect x="12.6184%" y="1141" width="0.6870%" height="15" fill="rgb(218,53,16)" fg:x="37156" fg:w="2023"/><text x="12.8684%" y="1151.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (2,023 samples, 0.69%)</title><rect x="12.6184%" y="1125" width="0.6870%" height="15" fill="rgb(215,38,13)" fg:x="37156" fg:w="2023"/><text x="12.8684%" y="1135.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,023 samples, 0.69%)</title><rect x="12.6184%" y="1109" width="0.6870%" height="15" fill="rgb(235,42,18)" fg:x="37156" fg:w="2023"/><text x="12.8684%" y="1119.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (1,824 samples, 0.62%)</title><rect x="12.6860%" y="1093" width="0.6194%" height="15" fill="rgb(219,66,54)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="1103.50"></text></g><g><title>async_std::task::block_on::block_on (1,824 samples, 0.62%)</title><rect x="12.6860%" y="1077" width="0.6194%" height="15" fill="rgb(222,205,4)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking (1,824 samples, 0.62%)</title><rect x="12.6860%" y="1061" width="0.6194%" height="15" fill="rgb(227,213,46)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,824 samples, 0.62%)</title><rect x="12.6860%" y="1045" width="0.6194%" height="15" fill="rgb(250,145,42)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,824 samples, 0.62%)</title><rect x="12.6860%" y="1029" width="0.6194%" height="15" fill="rgb(219,15,2)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (1,824 samples, 0.62%)</title><rect x="12.6860%" y="1013" width="0.6194%" height="15" fill="rgb(231,181,52)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,824 samples, 0.62%)</title><rect x="12.6860%" y="997" width="0.6194%" height="15" fill="rgb(235,1,42)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,824 samples, 0.62%)</title><rect x="12.6860%" y="981" width="0.6194%" height="15" fill="rgb(249,88,27)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,824 samples, 0.62%)</title><rect x="12.6860%" y="965" width="0.6194%" height="15" fill="rgb(235,145,16)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,824 samples, 0.62%)</title><rect x="12.6860%" y="949" width="0.6194%" height="15" fill="rgb(237,114,19)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="959.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (1,824 samples, 0.62%)</title><rect x="12.6860%" y="933" width="0.6194%" height="15" fill="rgb(238,51,50)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="943.50"></text></g><g><title>async_global_executor::executor::block_on (1,824 samples, 0.62%)</title><rect x="12.6860%" y="917" width="0.6194%" height="15" fill="rgb(205,194,25)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,824 samples, 0.62%)</title><rect x="12.6860%" y="901" width="0.6194%" height="15" fill="rgb(215,203,17)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,824 samples, 0.62%)</title><rect x="12.6860%" y="885" width="0.6194%" height="15" fill="rgb(233,112,49)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (1,824 samples, 0.62%)</title><rect x="12.6860%" y="869" width="0.6194%" height="15" fill="rgb(241,130,26)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on (1,824 samples, 0.62%)</title><rect x="12.6860%" y="853" width="0.6194%" height="15" fill="rgb(252,223,19)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="863.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,824 samples, 0.62%)</title><rect x="12.6860%" y="837" width="0.6194%" height="15" fill="rgb(211,95,25)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="847.50"></text></g><g><title>async_io::driver::block_on (1,824 samples, 0.62%)</title><rect x="12.6860%" y="821" width="0.6194%" height="15" fill="rgb(251,182,27)" fg:x="37355" fg:w="1824"/><text x="12.9360%" y="831.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,073 samples, 0.36%)</title><rect x="12.9410%" y="805" width="0.3644%" height="15" fill="rgb(238,24,4)" fg:x="38106" fg:w="1073"/><text x="13.1910%" y="815.50"></text></g><g><title>polling::Poller::wait (554 samples, 0.19%)</title><rect x="13.1173%" y="789" width="0.1881%" height="15" fill="rgb(224,220,25)" fg:x="38625" fg:w="554"/><text x="13.3673%" y="799.50"></text></g><g><title>polling::epoll::Poller::wait (554 samples, 0.19%)</title><rect x="13.1173%" y="773" width="0.1881%" height="15" fill="rgb(239,133,26)" fg:x="38625" fg:w="554"/><text x="13.3673%" y="783.50"></text></g><g><title>polling::epoll::Poller::modify (554 samples, 0.19%)</title><rect x="13.1173%" y="757" width="0.1881%" height="15" fill="rgb(211,94,48)" fg:x="38625" fg:w="554"/><text x="13.3673%" y="767.50"></text></g><g><title>polling::epoll::Poller::ctl (548 samples, 0.19%)</title><rect x="13.1193%" y="741" width="0.1861%" height="15" fill="rgb(239,87,6)" fg:x="38631" fg:w="548"/><text x="13.3693%" y="751.50"></text></g><g><title>epoll_ctl (534 samples, 0.18%)</title><rect x="13.1241%" y="725" width="0.1813%" height="15" fill="rgb(227,62,0)" fg:x="38645" fg:w="534"/><text x="13.3741%" y="735.50"></text></g><g><title>[unknown] (514 samples, 0.17%)</title><rect x="13.1309%" y="709" width="0.1746%" height="15" fill="rgb(211,226,4)" fg:x="38665" fg:w="514"/><text x="13.3809%" y="719.50"></text></g><g><title>[unknown] (500 samples, 0.17%)</title><rect x="13.1356%" y="693" width="0.1698%" height="15" fill="rgb(253,38,52)" fg:x="38679" fg:w="500"/><text x="13.3856%" y="703.50"></text></g><g><title>[unknown] (489 samples, 0.17%)</title><rect x="13.1394%" y="677" width="0.1661%" height="15" fill="rgb(229,126,40)" fg:x="38690" fg:w="489"/><text x="13.3894%" y="687.50"></text></g><g><title>[unknown] (467 samples, 0.16%)</title><rect x="13.1468%" y="661" width="0.1586%" height="15" fill="rgb(229,165,44)" fg:x="38712" fg:w="467"/><text x="13.3968%" y="671.50"></text></g><g><title>[unknown] (131 samples, 0.04%)</title><rect x="13.2609%" y="645" width="0.0445%" height="15" fill="rgb(247,95,47)" fg:x="39048" fg:w="131"/><text x="13.5109%" y="655.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="13.2905%" y="629" width="0.0149%" height="15" fill="rgb(216,140,30)" fg:x="39135" fg:w="44"/><text x="13.5405%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (47 samples, 0.02%)</title><rect x="13.3380%" y="421" width="0.0160%" height="15" fill="rgb(246,214,8)" fg:x="39275" fg:w="47"/><text x="13.5880%" y="431.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (47 samples, 0.02%)</title><rect x="13.3380%" y="405" width="0.0160%" height="15" fill="rgb(227,224,15)" fg:x="39275" fg:w="47"/><text x="13.5880%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (47 samples, 0.02%)</title><rect x="13.3380%" y="389" width="0.0160%" height="15" fill="rgb(233,175,4)" fg:x="39275" fg:w="47"/><text x="13.5880%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (47 samples, 0.02%)</title><rect x="13.3380%" y="373" width="0.0160%" height="15" fill="rgb(221,66,45)" fg:x="39275" fg:w="47"/><text x="13.5880%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (47 samples, 0.02%)</title><rect x="13.3380%" y="357" width="0.0160%" height="15" fill="rgb(221,178,18)" fg:x="39275" fg:w="47"/><text x="13.5880%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::deref::Deref&gt;::deref (39 samples, 0.01%)</title><rect x="13.3407%" y="341" width="0.0132%" height="15" fill="rgb(213,81,29)" fg:x="39283" fg:w="39"/><text x="13.5907%" y="351.50"></text></g><g><title>zenoh_buffers::zslice::ZSliceBuffer::as_slice (39 samples, 0.01%)</title><rect x="13.3407%" y="325" width="0.0132%" height="15" fill="rgb(220,89,49)" fg:x="39283" fg:w="39"/><text x="13.5907%" y="335.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (73 samples, 0.02%)</title><rect x="13.3336%" y="581" width="0.0248%" height="15" fill="rgb(227,60,33)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (73 samples, 0.02%)</title><rect x="13.3336%" y="565" width="0.0248%" height="15" fill="rgb(205,113,12)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="575.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (73 samples, 0.02%)</title><rect x="13.3336%" y="549" width="0.0248%" height="15" fill="rgb(211,32,1)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (73 samples, 0.02%)</title><rect x="13.3336%" y="533" width="0.0248%" height="15" fill="rgb(246,2,12)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (73 samples, 0.02%)</title><rect x="13.3336%" y="517" width="0.0248%" height="15" fill="rgb(243,37,27)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (73 samples, 0.02%)</title><rect x="13.3336%" y="501" width="0.0248%" height="15" fill="rgb(248,211,31)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (73 samples, 0.02%)</title><rect x="13.3336%" y="485" width="0.0248%" height="15" fill="rgb(242,146,47)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (73 samples, 0.02%)</title><rect x="13.3336%" y="469" width="0.0248%" height="15" fill="rgb(206,70,20)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (73 samples, 0.02%)</title><rect x="13.3336%" y="453" width="0.0248%" height="15" fill="rgb(215,10,51)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (73 samples, 0.02%)</title><rect x="13.3336%" y="437" width="0.0248%" height="15" fill="rgb(243,178,53)" fg:x="39262" fg:w="73"/><text x="13.5836%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (97 samples, 0.03%)</title><rect x="13.3336%" y="597" width="0.0329%" height="15" fill="rgb(233,221,20)" fg:x="39262" fg:w="97"/><text x="13.5836%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (125 samples, 0.04%)</title><rect x="13.3336%" y="1045" width="0.0425%" height="15" fill="rgb(218,95,35)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="1055.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (125 samples, 0.04%)</title><rect x="13.3336%" y="1029" width="0.0425%" height="15" fill="rgb(229,13,5)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (125 samples, 0.04%)</title><rect x="13.3336%" y="1013" width="0.0425%" height="15" fill="rgb(252,164,30)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="1023.50"></text></g><g><title>std::panicking::try (125 samples, 0.04%)</title><rect x="13.3336%" y="997" width="0.0425%" height="15" fill="rgb(232,68,36)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (125 samples, 0.04%)</title><rect x="13.3336%" y="981" width="0.0425%" height="15" fill="rgb(219,59,54)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="991.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (125 samples, 0.04%)</title><rect x="13.3336%" y="965" width="0.0425%" height="15" fill="rgb(250,92,33)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (125 samples, 0.04%)</title><rect x="13.3336%" y="949" width="0.0425%" height="15" fill="rgb(229,162,54)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (125 samples, 0.04%)</title><rect x="13.3336%" y="933" width="0.0425%" height="15" fill="rgb(244,114,52)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="943.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (125 samples, 0.04%)</title><rect x="13.3336%" y="917" width="0.0425%" height="15" fill="rgb(212,211,43)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on (125 samples, 0.04%)</title><rect x="13.3336%" y="901" width="0.0425%" height="15" fill="rgb(226,147,8)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (125 samples, 0.04%)</title><rect x="13.3336%" y="885" width="0.0425%" height="15" fill="rgb(226,23,13)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="895.50"></text></g><g><title>async_io::driver::block_on (125 samples, 0.04%)</title><rect x="13.3336%" y="869" width="0.0425%" height="15" fill="rgb(240,63,4)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (125 samples, 0.04%)</title><rect x="13.3336%" y="853" width="0.0425%" height="15" fill="rgb(221,1,32)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (125 samples, 0.04%)</title><rect x="13.3336%" y="837" width="0.0425%" height="15" fill="rgb(242,117,10)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (125 samples, 0.04%)</title><rect x="13.3336%" y="821" width="0.0425%" height="15" fill="rgb(249,172,44)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="831.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (125 samples, 0.04%)</title><rect x="13.3336%" y="805" width="0.0425%" height="15" fill="rgb(244,46,45)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (125 samples, 0.04%)</title><rect x="13.3336%" y="789" width="0.0425%" height="15" fill="rgb(206,43,17)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (125 samples, 0.04%)</title><rect x="13.3336%" y="773" width="0.0425%" height="15" fill="rgb(239,218,39)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (125 samples, 0.04%)</title><rect x="13.3336%" y="757" width="0.0425%" height="15" fill="rgb(208,169,54)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (125 samples, 0.04%)</title><rect x="13.3336%" y="741" width="0.0425%" height="15" fill="rgb(247,25,42)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (125 samples, 0.04%)</title><rect x="13.3336%" y="725" width="0.0425%" height="15" fill="rgb(226,23,31)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (125 samples, 0.04%)</title><rect x="13.3336%" y="709" width="0.0425%" height="15" fill="rgb(247,16,28)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (125 samples, 0.04%)</title><rect x="13.3336%" y="693" width="0.0425%" height="15" fill="rgb(231,147,38)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (125 samples, 0.04%)</title><rect x="13.3336%" y="677" width="0.0425%" height="15" fill="rgb(253,81,48)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (125 samples, 0.04%)</title><rect x="13.3336%" y="661" width="0.0425%" height="15" fill="rgb(249,222,43)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (125 samples, 0.04%)</title><rect x="13.3336%" y="645" width="0.0425%" height="15" fill="rgb(221,3,27)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (125 samples, 0.04%)</title><rect x="13.3336%" y="629" width="0.0425%" height="15" fill="rgb(228,180,5)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (125 samples, 0.04%)</title><rect x="13.3336%" y="613" width="0.0425%" height="15" fill="rgb(227,131,42)" fg:x="39262" fg:w="125"/><text x="13.5836%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (39 samples, 0.01%)</title><rect x="13.3913%" y="661" width="0.0132%" height="15" fill="rgb(212,3,39)" fg:x="39432" fg:w="39"/><text x="13.6413%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (40 samples, 0.01%)</title><rect x="13.3913%" y="677" width="0.0136%" height="15" fill="rgb(226,45,5)" fg:x="39432" fg:w="40"/><text x="13.6413%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (111 samples, 0.04%)</title><rect x="13.3761%" y="757" width="0.0377%" height="15" fill="rgb(215,167,45)" fg:x="39387" fg:w="111"/><text x="13.6261%" y="767.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (111 samples, 0.04%)</title><rect x="13.3761%" y="741" width="0.0377%" height="15" fill="rgb(250,218,53)" fg:x="39387" fg:w="111"/><text x="13.6261%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (111 samples, 0.04%)</title><rect x="13.3761%" y="725" width="0.0377%" height="15" fill="rgb(207,140,0)" fg:x="39387" fg:w="111"/><text x="13.6261%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (111 samples, 0.04%)</title><rect x="13.3761%" y="709" width="0.0377%" height="15" fill="rgb(238,133,51)" fg:x="39387" fg:w="111"/><text x="13.6261%" y="719.50"></text></g><g><title>async_executor::Runner::new (85 samples, 0.03%)</title><rect x="13.3849%" y="693" width="0.0289%" height="15" fill="rgb(218,203,53)" fg:x="39413" fg:w="85"/><text x="13.6349%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (109 samples, 0.04%)</title><rect x="13.4362%" y="661" width="0.0370%" height="15" fill="rgb(226,184,25)" fg:x="39564" fg:w="109"/><text x="13.6862%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::set_parent_link (101 samples, 0.03%)</title><rect x="13.4389%" y="645" width="0.0343%" height="15" fill="rgb(231,121,21)" fg:x="39572" fg:w="101"/><text x="13.6889%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (51 samples, 0.02%)</title><rect x="13.4559%" y="629" width="0.0173%" height="15" fill="rgb(251,14,34)" fg:x="39622" fg:w="51"/><text x="13.7059%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (114 samples, 0.04%)</title><rect x="13.4362%" y="677" width="0.0387%" height="15" fill="rgb(249,193,11)" fg:x="39564" fg:w="114"/><text x="13.6862%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (196 samples, 0.07%)</title><rect x="13.4345%" y="693" width="0.0666%" height="15" fill="rgb(220,172,37)" fg:x="39559" fg:w="196"/><text x="13.6845%" y="703.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (77 samples, 0.03%)</title><rect x="13.4749%" y="677" width="0.0261%" height="15" fill="rgb(231,229,43)" fg:x="39678" fg:w="77"/><text x="13.7249%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (77 samples, 0.03%)</title><rect x="13.4749%" y="661" width="0.0261%" height="15" fill="rgb(250,161,5)" fg:x="39678" fg:w="77"/><text x="13.7249%" y="671.50"></text></g><g><title>[libc.so.6] (70 samples, 0.02%)</title><rect x="13.4773%" y="645" width="0.0238%" height="15" fill="rgb(218,225,18)" fg:x="39685" fg:w="70"/><text x="13.7273%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (292 samples, 0.10%)</title><rect x="13.4155%" y="725" width="0.0992%" height="15" fill="rgb(245,45,42)" fg:x="39503" fg:w="292"/><text x="13.6655%" y="735.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (292 samples, 0.10%)</title><rect x="13.4155%" y="709" width="0.0992%" height="15" fill="rgb(211,115,1)" fg:x="39503" fg:w="292"/><text x="13.6655%" y="719.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (540 samples, 0.18%)</title><rect x="13.3336%" y="1221" width="0.1834%" height="15" fill="rgb(248,133,52)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (540 samples, 0.18%)</title><rect x="13.3336%" y="1205" width="0.1834%" height="15" fill="rgb(238,100,21)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (540 samples, 0.18%)</title><rect x="13.3336%" y="1189" width="0.1834%" height="15" fill="rgb(247,144,11)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (540 samples, 0.18%)</title><rect x="13.3336%" y="1173" width="0.1834%" height="15" fill="rgb(206,164,16)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (540 samples, 0.18%)</title><rect x="13.3336%" y="1157" width="0.1834%" height="15" fill="rgb(222,34,3)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (540 samples, 0.18%)</title><rect x="13.3336%" y="1141" width="0.1834%" height="15" fill="rgb(248,82,4)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1151.50"></text></g><g><title>std::panicking::try (540 samples, 0.18%)</title><rect x="13.3336%" y="1125" width="0.1834%" height="15" fill="rgb(228,81,46)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (540 samples, 0.18%)</title><rect x="13.3336%" y="1109" width="0.1834%" height="15" fill="rgb(227,67,47)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (540 samples, 0.18%)</title><rect x="13.3336%" y="1093" width="0.1834%" height="15" fill="rgb(215,93,53)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (540 samples, 0.18%)</title><rect x="13.3336%" y="1077" width="0.1834%" height="15" fill="rgb(248,194,39)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (540 samples, 0.18%)</title><rect x="13.3336%" y="1061" width="0.1834%" height="15" fill="rgb(215,5,19)" fg:x="39262" fg:w="540"/><text x="13.5836%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (415 samples, 0.14%)</title><rect x="13.3761%" y="1045" width="0.1409%" height="15" fill="rgb(226,215,51)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="1055.50"></text></g><g><title>async_std::task::block_on::block_on (415 samples, 0.14%)</title><rect x="13.3761%" y="1029" width="0.1409%" height="15" fill="rgb(225,56,26)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking (415 samples, 0.14%)</title><rect x="13.3761%" y="1013" width="0.1409%" height="15" fill="rgb(222,75,29)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (415 samples, 0.14%)</title><rect x="13.3761%" y="997" width="0.1409%" height="15" fill="rgb(236,139,6)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (415 samples, 0.14%)</title><rect x="13.3761%" y="981" width="0.1409%" height="15" fill="rgb(223,137,36)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="991.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (415 samples, 0.14%)</title><rect x="13.3761%" y="965" width="0.1409%" height="15" fill="rgb(226,99,2)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (415 samples, 0.14%)</title><rect x="13.3761%" y="949" width="0.1409%" height="15" fill="rgb(206,133,23)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (415 samples, 0.14%)</title><rect x="13.3761%" y="933" width="0.1409%" height="15" fill="rgb(243,173,15)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (415 samples, 0.14%)</title><rect x="13.3761%" y="917" width="0.1409%" height="15" fill="rgb(228,69,28)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (415 samples, 0.14%)</title><rect x="13.3761%" y="901" width="0.1409%" height="15" fill="rgb(212,51,22)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="911.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (415 samples, 0.14%)</title><rect x="13.3761%" y="885" width="0.1409%" height="15" fill="rgb(227,113,0)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on (415 samples, 0.14%)</title><rect x="13.3761%" y="869" width="0.1409%" height="15" fill="rgb(252,84,27)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (415 samples, 0.14%)</title><rect x="13.3761%" y="853" width="0.1409%" height="15" fill="rgb(223,145,39)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (415 samples, 0.14%)</title><rect x="13.3761%" y="837" width="0.1409%" height="15" fill="rgb(239,219,30)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="847.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (415 samples, 0.14%)</title><rect x="13.3761%" y="821" width="0.1409%" height="15" fill="rgb(224,196,39)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on (415 samples, 0.14%)</title><rect x="13.3761%" y="805" width="0.1409%" height="15" fill="rgb(205,35,43)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="815.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (415 samples, 0.14%)</title><rect x="13.3761%" y="789" width="0.1409%" height="15" fill="rgb(228,201,21)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="799.50"></text></g><g><title>async_io::driver::block_on (415 samples, 0.14%)</title><rect x="13.3761%" y="773" width="0.1409%" height="15" fill="rgb(237,118,16)" fg:x="39387" fg:w="415"/><text x="13.6261%" y="783.50"></text></g><g><title>async_io::reactor::ReactorLock::react (304 samples, 0.10%)</title><rect x="13.4138%" y="757" width="0.1032%" height="15" fill="rgb(241,17,19)" fg:x="39498" fg:w="304"/><text x="13.6638%" y="767.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (304 samples, 0.10%)</title><rect x="13.4138%" y="741" width="0.1032%" height="15" fill="rgb(214,10,25)" fg:x="39498" fg:w="304"/><text x="13.6638%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (51 samples, 0.02%)</title><rect x="13.5279%" y="693" width="0.0173%" height="15" fill="rgb(238,37,29)" fg:x="39834" fg:w="51"/><text x="13.7779%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (47 samples, 0.02%)</title><rect x="13.5292%" y="677" width="0.0160%" height="15" fill="rgb(253,83,25)" fg:x="39838" fg:w="47"/><text x="13.7792%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.02%)</title><rect x="13.5292%" y="661" width="0.0160%" height="15" fill="rgb(234,192,12)" fg:x="39838" fg:w="47"/><text x="13.7792%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.02%)</title><rect x="13.5292%" y="645" width="0.0160%" height="15" fill="rgb(241,216,45)" fg:x="39838" fg:w="47"/><text x="13.7792%" y="655.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.02%)</title><rect x="13.5292%" y="629" width="0.0160%" height="15" fill="rgb(242,22,33)" fg:x="39838" fg:w="47"/><text x="13.7792%" y="639.50"></text></g><g><title>malloc (43 samples, 0.01%)</title><rect x="13.5306%" y="613" width="0.0146%" height="15" fill="rgb(231,105,49)" fg:x="39842" fg:w="43"/><text x="13.7806%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (30 samples, 0.01%)</title><rect x="13.5452%" y="693" width="0.0102%" height="15" fill="rgb(218,204,15)" fg:x="39885" fg:w="30"/><text x="13.7952%" y="703.50"></text></g><g><title>[libc.so.6] (103 samples, 0.03%)</title><rect x="13.5903%" y="501" width="0.0350%" height="15" fill="rgb(235,138,41)" fg:x="40018" fg:w="103"/><text x="13.8403%" y="511.50"></text></g><g><title>[libc.so.6] (113 samples, 0.04%)</title><rect x="13.5873%" y="517" width="0.0384%" height="15" fill="rgb(246,0,9)" fg:x="40009" fg:w="113"/><text x="13.8373%" y="527.50"></text></g><g><title>__rdl_alloc (203 samples, 0.07%)</title><rect x="13.5611%" y="597" width="0.0689%" height="15" fill="rgb(210,74,4)" fg:x="39932" fg:w="203"/><text x="13.8111%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (197 samples, 0.07%)</title><rect x="13.5632%" y="581" width="0.0669%" height="15" fill="rgb(250,60,41)" fg:x="39938" fg:w="197"/><text x="13.8132%" y="591.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (197 samples, 0.07%)</title><rect x="13.5632%" y="565" width="0.0669%" height="15" fill="rgb(220,115,12)" fg:x="39938" fg:w="197"/><text x="13.8132%" y="575.50"></text></g><g><title>posix_memalign (191 samples, 0.06%)</title><rect x="13.5652%" y="549" width="0.0649%" height="15" fill="rgb(237,100,13)" fg:x="39944" fg:w="191"/><text x="13.8152%" y="559.50"></text></g><g><title>[libc.so.6] (180 samples, 0.06%)</title><rect x="13.5690%" y="533" width="0.0611%" height="15" fill="rgb(213,55,26)" fg:x="39955" fg:w="180"/><text x="13.8190%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (237 samples, 0.08%)</title><rect x="13.5554%" y="677" width="0.0805%" height="15" fill="rgb(216,17,4)" fg:x="39915" fg:w="237"/><text x="13.8054%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (221 samples, 0.08%)</title><rect x="13.5608%" y="661" width="0.0751%" height="15" fill="rgb(220,153,47)" fg:x="39931" fg:w="221"/><text x="13.8108%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (221 samples, 0.08%)</title><rect x="13.5608%" y="645" width="0.0751%" height="15" fill="rgb(215,131,9)" fg:x="39931" fg:w="221"/><text x="13.8108%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (221 samples, 0.08%)</title><rect x="13.5608%" y="629" width="0.0751%" height="15" fill="rgb(233,46,42)" fg:x="39931" fg:w="221"/><text x="13.8108%" y="639.50"></text></g><g><title>alloc::alloc::alloc (221 samples, 0.08%)</title><rect x="13.5608%" y="613" width="0.0751%" height="15" fill="rgb(226,86,7)" fg:x="39931" fg:w="221"/><text x="13.8108%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (399 samples, 0.14%)</title><rect x="13.6430%" y="661" width="0.1355%" height="15" fill="rgb(239,226,21)" fg:x="40173" fg:w="399"/><text x="13.8930%" y="671.50"></text></g><g><title>core::ptr::write (191 samples, 0.06%)</title><rect x="13.7136%" y="645" width="0.0649%" height="15" fill="rgb(244,137,22)" fg:x="40381" fg:w="191"/><text x="13.9636%" y="655.50"></text></g><g><title>[unknown] (177 samples, 0.06%)</title><rect x="13.7184%" y="629" width="0.0601%" height="15" fill="rgb(211,139,35)" fg:x="40395" fg:w="177"/><text x="13.9684%" y="639.50"></text></g><g><title>[unknown] (176 samples, 0.06%)</title><rect x="13.7187%" y="613" width="0.0598%" height="15" fill="rgb(214,62,50)" fg:x="40396" fg:w="176"/><text x="13.9687%" y="623.50"></text></g><g><title>[unknown] (171 samples, 0.06%)</title><rect x="13.7204%" y="597" width="0.0581%" height="15" fill="rgb(212,113,44)" fg:x="40401" fg:w="171"/><text x="13.9704%" y="607.50"></text></g><g><title>[unknown] (169 samples, 0.06%)</title><rect x="13.7211%" y="581" width="0.0574%" height="15" fill="rgb(226,150,43)" fg:x="40403" fg:w="169"/><text x="13.9711%" y="591.50"></text></g><g><title>[unknown] (126 samples, 0.04%)</title><rect x="13.7357%" y="565" width="0.0428%" height="15" fill="rgb(250,71,37)" fg:x="40446" fg:w="126"/><text x="13.9857%" y="575.50"></text></g><g><title>[unknown] (89 samples, 0.03%)</title><rect x="13.7483%" y="549" width="0.0302%" height="15" fill="rgb(219,76,19)" fg:x="40483" fg:w="89"/><text x="13.9983%" y="559.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="13.7591%" y="533" width="0.0194%" height="15" fill="rgb(250,39,11)" fg:x="40515" fg:w="57"/><text x="14.0091%" y="543.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="13.7615%" y="517" width="0.0170%" height="15" fill="rgb(230,64,31)" fg:x="40522" fg:w="50"/><text x="14.0115%" y="527.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="13.7676%" y="501" width="0.0109%" height="15" fill="rgb(208,222,23)" fg:x="40540" fg:w="32"/><text x="14.0176%" y="511.50"></text></g><g><title>[libc.so.6] (173 samples, 0.06%)</title><rect x="13.7846%" y="533" width="0.0588%" height="15" fill="rgb(227,125,18)" fg:x="40590" fg:w="173"/><text x="14.0346%" y="543.50"></text></g><g><title>[unknown] (133 samples, 0.05%)</title><rect x="13.7982%" y="517" width="0.0452%" height="15" fill="rgb(234,210,9)" fg:x="40630" fg:w="133"/><text x="14.0482%" y="527.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="13.8043%" y="501" width="0.0391%" height="15" fill="rgb(217,127,24)" fg:x="40648" fg:w="115"/><text x="14.0543%" y="511.50"></text></g><g><title>[unknown] (112 samples, 0.04%)</title><rect x="13.8053%" y="485" width="0.0380%" height="15" fill="rgb(239,141,48)" fg:x="40651" fg:w="112"/><text x="14.0553%" y="495.50"></text></g><g><title>[unknown] (110 samples, 0.04%)</title><rect x="13.8060%" y="469" width="0.0374%" height="15" fill="rgb(227,109,8)" fg:x="40653" fg:w="110"/><text x="14.0560%" y="479.50"></text></g><g><title>[unknown] (82 samples, 0.03%)</title><rect x="13.8155%" y="453" width="0.0278%" height="15" fill="rgb(235,184,23)" fg:x="40681" fg:w="82"/><text x="14.0655%" y="463.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="13.8237%" y="437" width="0.0197%" height="15" fill="rgb(227,226,48)" fg:x="40705" fg:w="58"/><text x="14.0737%" y="447.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="13.8315%" y="421" width="0.0119%" height="15" fill="rgb(206,150,11)" fg:x="40728" fg:w="35"/><text x="14.0815%" y="431.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="13.8328%" y="405" width="0.0105%" height="15" fill="rgb(254,2,33)" fg:x="40732" fg:w="31"/><text x="14.0828%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (252 samples, 0.09%)</title><rect x="13.7785%" y="661" width="0.0856%" height="15" fill="rgb(243,160,20)" fg:x="40572" fg:w="252"/><text x="14.0285%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (252 samples, 0.09%)</title><rect x="13.7785%" y="645" width="0.0856%" height="15" fill="rgb(218,208,30)" fg:x="40572" fg:w="252"/><text x="14.0285%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (252 samples, 0.09%)</title><rect x="13.7785%" y="629" width="0.0856%" height="15" fill="rgb(224,120,49)" fg:x="40572" fg:w="252"/><text x="14.0285%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (252 samples, 0.09%)</title><rect x="13.7785%" y="613" width="0.0856%" height="15" fill="rgb(246,12,2)" fg:x="40572" fg:w="252"/><text x="14.0285%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (252 samples, 0.09%)</title><rect x="13.7785%" y="597" width="0.0856%" height="15" fill="rgb(236,117,3)" fg:x="40572" fg:w="252"/><text x="14.0285%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (252 samples, 0.09%)</title><rect x="13.7785%" y="581" width="0.0856%" height="15" fill="rgb(216,128,52)" fg:x="40572" fg:w="252"/><text x="14.0285%" y="591.50"></text></g><g><title>alloc::alloc::alloc (248 samples, 0.08%)</title><rect x="13.7798%" y="565" width="0.0842%" height="15" fill="rgb(246,145,19)" fg:x="40576" fg:w="248"/><text x="14.0298%" y="575.50"></text></g><g><title>malloc (248 samples, 0.08%)</title><rect x="13.7798%" y="549" width="0.0842%" height="15" fill="rgb(222,11,46)" fg:x="40576" fg:w="248"/><text x="14.0298%" y="559.50"></text></g><g><title>__lll_lock_wake_private (59 samples, 0.02%)</title><rect x="13.8440%" y="533" width="0.0200%" height="15" fill="rgb(245,82,36)" fg:x="40765" fg:w="59"/><text x="14.0940%" y="543.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="13.8440%" y="517" width="0.0200%" height="15" fill="rgb(250,73,51)" fg:x="40765" fg:w="59"/><text x="14.0940%" y="527.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="13.8467%" y="501" width="0.0173%" height="15" fill="rgb(221,189,23)" fg:x="40773" fg:w="51"/><text x="14.0967%" y="511.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="13.8467%" y="485" width="0.0173%" height="15" fill="rgb(210,33,7)" fg:x="40773" fg:w="51"/><text x="14.0967%" y="495.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="13.8481%" y="469" width="0.0160%" height="15" fill="rgb(210,107,22)" fg:x="40777" fg:w="47"/><text x="14.0981%" y="479.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="13.8512%" y="453" width="0.0129%" height="15" fill="rgb(222,116,37)" fg:x="40786" fg:w="38"/><text x="14.1012%" y="463.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="13.8539%" y="437" width="0.0102%" height="15" fill="rgb(254,17,48)" fg:x="40794" fg:w="30"/><text x="14.1039%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (931 samples, 0.32%)</title><rect x="13.5554%" y="693" width="0.3162%" height="15" fill="rgb(224,36,32)" fg:x="39915" fg:w="931"/><text x="13.8054%" y="703.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (694 samples, 0.24%)</title><rect x="13.6359%" y="677" width="0.2357%" height="15" fill="rgb(232,90,46)" fg:x="40152" fg:w="694"/><text x="13.8859%" y="687.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,087 samples, 0.37%)</title><rect x="13.5231%" y="853" width="0.3692%" height="15" fill="rgb(241,66,40)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="863.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,087 samples, 0.37%)</title><rect x="13.5231%" y="837" width="0.3692%" height="15" fill="rgb(249,184,29)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="847.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,087 samples, 0.37%)</title><rect x="13.5231%" y="821" width="0.3692%" height="15" fill="rgb(231,181,1)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,087 samples, 0.37%)</title><rect x="13.5231%" y="805" width="0.3692%" height="15" fill="rgb(224,94,2)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,087 samples, 0.37%)</title><rect x="13.5231%" y="789" width="0.3692%" height="15" fill="rgb(229,170,15)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="799.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,087 samples, 0.37%)</title><rect x="13.5231%" y="773" width="0.3692%" height="15" fill="rgb(240,127,35)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="783.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,087 samples, 0.37%)</title><rect x="13.5231%" y="757" width="0.3692%" height="15" fill="rgb(248,196,34)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,087 samples, 0.37%)</title><rect x="13.5231%" y="741" width="0.3692%" height="15" fill="rgb(236,137,7)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="751.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,087 samples, 0.37%)</title><rect x="13.5231%" y="725" width="0.3692%" height="15" fill="rgb(235,127,16)" fg:x="39820" fg:w="1087"/><text x="13.7731%" y="735.50"></text></g><g><title>async_executor::Runner::new (1,084 samples, 0.37%)</title><rect x="13.5241%" y="709" width="0.3681%" height="15" fill="rgb(250,192,54)" fg:x="39823" fg:w="1084"/><text x="13.7741%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (48 samples, 0.02%)</title><rect x="13.8760%" y="693" width="0.0163%" height="15" fill="rgb(218,98,20)" fg:x="40859" fg:w="48"/><text x="14.1260%" y="703.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (46 samples, 0.02%)</title><rect x="13.8766%" y="677" width="0.0156%" height="15" fill="rgb(230,176,47)" fg:x="40861" fg:w="46"/><text x="14.1266%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (46 samples, 0.02%)</title><rect x="13.8766%" y="661" width="0.0156%" height="15" fill="rgb(244,2,33)" fg:x="40861" fg:w="46"/><text x="14.1266%" y="671.50"></text></g><g><title>async_executor::Executor::state (59 samples, 0.02%)</title><rect x="13.8923%" y="853" width="0.0200%" height="15" fill="rgb(231,100,17)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (59 samples, 0.02%)</title><rect x="13.8923%" y="837" width="0.0200%" height="15" fill="rgb(245,23,12)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="847.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (59 samples, 0.02%)</title><rect x="13.8923%" y="821" width="0.0200%" height="15" fill="rgb(249,55,22)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="831.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (59 samples, 0.02%)</title><rect x="13.8923%" y="805" width="0.0200%" height="15" fill="rgb(207,134,9)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="815.50"></text></g><g><title>once_cell::imp::initialize_or_wait (59 samples, 0.02%)</title><rect x="13.8923%" y="789" width="0.0200%" height="15" fill="rgb(218,134,0)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (59 samples, 0.02%)</title><rect x="13.8923%" y="773" width="0.0200%" height="15" fill="rgb(213,212,33)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="783.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (59 samples, 0.02%)</title><rect x="13.8923%" y="757" width="0.0200%" height="15" fill="rgb(252,106,18)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="767.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (59 samples, 0.02%)</title><rect x="13.8923%" y="741" width="0.0200%" height="15" fill="rgb(208,126,42)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="751.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (59 samples, 0.02%)</title><rect x="13.8923%" y="725" width="0.0200%" height="15" fill="rgb(246,175,29)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="735.50"></text></g><g><title>async_executor::State::new (59 samples, 0.02%)</title><rect x="13.8923%" y="709" width="0.0200%" height="15" fill="rgb(215,13,50)" fg:x="40907" fg:w="59"/><text x="14.1423%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::new (31 samples, 0.01%)</title><rect x="13.9018%" y="693" width="0.0105%" height="15" fill="rgb(216,172,15)" fg:x="40935" fg:w="31"/><text x="14.1518%" y="703.50"></text></g><g><title>[libc.so.6] (121 samples, 0.04%)</title><rect x="13.9255%" y="645" width="0.0411%" height="15" fill="rgb(212,103,13)" fg:x="41005" fg:w="121"/><text x="14.1755%" y="655.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="13.9554%" y="629" width="0.0112%" height="15" fill="rgb(231,171,36)" fg:x="41093" fg:w="33"/><text x="14.2054%" y="639.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="13.9564%" y="613" width="0.0102%" height="15" fill="rgb(250,123,20)" fg:x="41096" fg:w="30"/><text x="14.2064%" y="623.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="13.9564%" y="597" width="0.0102%" height="15" fill="rgb(212,53,50)" fg:x="41096" fg:w="30"/><text x="14.2064%" y="607.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="13.9564%" y="581" width="0.0102%" height="15" fill="rgb(243,54,12)" fg:x="41096" fg:w="30"/><text x="14.2064%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (127 samples, 0.04%)</title><rect x="13.9238%" y="821" width="0.0431%" height="15" fill="rgb(234,101,34)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (127 samples, 0.04%)</title><rect x="13.9238%" y="805" width="0.0431%" height="15" fill="rgb(254,67,22)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (127 samples, 0.04%)</title><rect x="13.9238%" y="789" width="0.0431%" height="15" fill="rgb(250,35,47)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (127 samples, 0.04%)</title><rect x="13.9238%" y="773" width="0.0431%" height="15" fill="rgb(226,126,38)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="783.50"></text></g><g><title>alloc::alloc::alloc (127 samples, 0.04%)</title><rect x="13.9238%" y="757" width="0.0431%" height="15" fill="rgb(216,138,53)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="767.50"></text></g><g><title>__rdl_alloc (127 samples, 0.04%)</title><rect x="13.9238%" y="741" width="0.0431%" height="15" fill="rgb(246,199,43)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (127 samples, 0.04%)</title><rect x="13.9238%" y="725" width="0.0431%" height="15" fill="rgb(232,125,11)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="735.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (127 samples, 0.04%)</title><rect x="13.9238%" y="709" width="0.0431%" height="15" fill="rgb(218,219,45)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="719.50"></text></g><g><title>posix_memalign (127 samples, 0.04%)</title><rect x="13.9238%" y="693" width="0.0431%" height="15" fill="rgb(216,102,54)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="703.50"></text></g><g><title>[libc.so.6] (127 samples, 0.04%)</title><rect x="13.9238%" y="677" width="0.0431%" height="15" fill="rgb(250,228,7)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="687.50"></text></g><g><title>[libc.so.6] (127 samples, 0.04%)</title><rect x="13.9238%" y="661" width="0.0431%" height="15" fill="rgb(226,125,25)" fg:x="41000" fg:w="127"/><text x="14.1738%" y="671.50"></text></g><g><title>[libc.so.6] (60 samples, 0.02%)</title><rect x="13.9914%" y="661" width="0.0204%" height="15" fill="rgb(224,165,27)" fg:x="41199" fg:w="60"/><text x="14.2414%" y="671.50"></text></g><g><title>[libc.so.6] (248 samples, 0.08%)</title><rect x="13.9731%" y="677" width="0.0842%" height="15" fill="rgb(233,86,3)" fg:x="41145" fg:w="248"/><text x="14.2231%" y="687.50"></text></g><g><title>[unknown] (134 samples, 0.05%)</title><rect x="14.0118%" y="661" width="0.0455%" height="15" fill="rgb(228,116,20)" fg:x="41259" fg:w="134"/><text x="14.2618%" y="671.50"></text></g><g><title>[unknown] (117 samples, 0.04%)</title><rect x="14.0176%" y="645" width="0.0397%" height="15" fill="rgb(209,192,17)" fg:x="41276" fg:w="117"/><text x="14.2676%" y="655.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="14.0183%" y="629" width="0.0391%" height="15" fill="rgb(224,88,34)" fg:x="41278" fg:w="115"/><text x="14.2683%" y="639.50"></text></g><g><title>[unknown] (112 samples, 0.04%)</title><rect x="14.0193%" y="613" width="0.0380%" height="15" fill="rgb(233,38,6)" fg:x="41281" fg:w="112"/><text x="14.2693%" y="623.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="14.0322%" y="597" width="0.0251%" height="15" fill="rgb(212,59,30)" fg:x="41319" fg:w="74"/><text x="14.2822%" y="607.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="14.0396%" y="581" width="0.0177%" height="15" fill="rgb(213,80,3)" fg:x="41341" fg:w="52"/><text x="14.2896%" y="591.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="14.0454%" y="565" width="0.0119%" height="15" fill="rgb(251,178,7)" fg:x="41358" fg:w="35"/><text x="14.2954%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,632 samples, 0.55%)</title><rect x="13.5231%" y="917" width="0.5542%" height="15" fill="rgb(213,154,26)" fg:x="39820" fg:w="1632"/><text x="13.7731%" y="927.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,632 samples, 0.55%)</title><rect x="13.5231%" y="901" width="0.5542%" height="15" fill="rgb(238,165,49)" fg:x="39820" fg:w="1632"/><text x="13.7731%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,632 samples, 0.55%)</title><rect x="13.5231%" y="885" width="0.5542%" height="15" fill="rgb(248,91,46)" fg:x="39820" fg:w="1632"/><text x="13.7731%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,632 samples, 0.55%)</title><rect x="13.5231%" y="869" width="0.5542%" height="15" fill="rgb(244,21,52)" fg:x="39820" fg:w="1632"/><text x="13.7731%" y="879.50"></text></g><g><title>async_executor::Runner::new (486 samples, 0.17%)</title><rect x="13.9123%" y="853" width="0.1650%" height="15" fill="rgb(247,122,20)" fg:x="40966" fg:w="486"/><text x="14.1623%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (452 samples, 0.15%)</title><rect x="13.9238%" y="837" width="0.1535%" height="15" fill="rgb(218,27,9)" fg:x="41000" fg:w="452"/><text x="14.1738%" y="847.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (325 samples, 0.11%)</title><rect x="13.9670%" y="821" width="0.1104%" height="15" fill="rgb(246,7,6)" fg:x="41127" fg:w="325"/><text x="14.2170%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (325 samples, 0.11%)</title><rect x="13.9670%" y="805" width="0.1104%" height="15" fill="rgb(227,135,54)" fg:x="41127" fg:w="325"/><text x="14.2170%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (325 samples, 0.11%)</title><rect x="13.9670%" y="789" width="0.1104%" height="15" fill="rgb(247,14,11)" fg:x="41127" fg:w="325"/><text x="14.2170%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (325 samples, 0.11%)</title><rect x="13.9670%" y="773" width="0.1104%" height="15" fill="rgb(206,149,34)" fg:x="41127" fg:w="325"/><text x="14.2170%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (325 samples, 0.11%)</title><rect x="13.9670%" y="757" width="0.1104%" height="15" fill="rgb(227,228,4)" fg:x="41127" fg:w="325"/><text x="14.2170%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (325 samples, 0.11%)</title><rect x="13.9670%" y="741" width="0.1104%" height="15" fill="rgb(238,218,28)" fg:x="41127" fg:w="325"/><text x="14.2170%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (325 samples, 0.11%)</title><rect x="13.9670%" y="725" width="0.1104%" height="15" fill="rgb(252,86,40)" fg:x="41127" fg:w="325"/><text x="14.2170%" y="735.50"></text></g><g><title>alloc::alloc::alloc (325 samples, 0.11%)</title><rect x="13.9670%" y="709" width="0.1104%" height="15" fill="rgb(251,225,11)" fg:x="41127" fg:w="325"/><text x="14.2170%" y="719.50"></text></g><g><title>malloc (324 samples, 0.11%)</title><rect x="13.9673%" y="693" width="0.1100%" height="15" fill="rgb(206,46,49)" fg:x="41128" fg:w="324"/><text x="14.2173%" y="703.50"></text></g><g><title>__lll_lock_wake_private (58 samples, 0.02%)</title><rect x="14.0576%" y="677" width="0.0197%" height="15" fill="rgb(245,128,24)" fg:x="41394" fg:w="58"/><text x="14.3076%" y="687.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="14.0580%" y="661" width="0.0194%" height="15" fill="rgb(219,177,34)" fg:x="41395" fg:w="57"/><text x="14.3080%" y="671.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="14.0600%" y="645" width="0.0173%" height="15" fill="rgb(218,60,48)" fg:x="41401" fg:w="51"/><text x="14.3100%" y="655.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="14.0600%" y="629" width="0.0173%" height="15" fill="rgb(221,11,5)" fg:x="41401" fg:w="51"/><text x="14.3100%" y="639.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="14.0607%" y="613" width="0.0166%" height="15" fill="rgb(220,148,13)" fg:x="41403" fg:w="49"/><text x="14.3107%" y="623.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="14.0631%" y="597" width="0.0143%" height="15" fill="rgb(210,16,3)" fg:x="41410" fg:w="42"/><text x="14.3131%" y="607.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_left_border (40 samples, 0.01%)</title><rect x="14.0773%" y="853" width="0.0136%" height="15" fill="rgb(236,80,2)" fg:x="41452" fg:w="40"/><text x="14.3273%" y="863.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::fix_left_border_of_left_edge (40 samples, 0.01%)</title><rect x="14.0773%" y="837" width="0.0136%" height="15" fill="rgb(239,129,19)" fg:x="41452" fg:w="40"/><text x="14.3273%" y="847.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::fix_left_child (40 samples, 0.01%)</title><rect x="14.0773%" y="821" width="0.0136%" height="15" fill="rgb(220,106,35)" fg:x="41452" fg:w="40"/><text x="14.3273%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (67 samples, 0.02%)</title><rect x="14.0773%" y="885" width="0.0228%" height="15" fill="rgb(252,139,45)" fg:x="41452" fg:w="67"/><text x="14.3273%" y="895.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (67 samples, 0.02%)</title><rect x="14.0773%" y="869" width="0.0228%" height="15" fill="rgb(229,8,36)" fg:x="41452" fg:w="67"/><text x="14.3273%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.01%)</title><rect x="14.1993%" y="789" width="0.0112%" height="15" fill="rgb(230,126,33)" fg:x="41811" fg:w="33"/><text x="14.4493%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.01%)</title><rect x="14.1996%" y="773" width="0.0109%" height="15" fill="rgb(239,140,21)" fg:x="41812" fg:w="32"/><text x="14.4496%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (479 samples, 0.16%)</title><rect x="14.1137%" y="853" width="0.1627%" height="15" fill="rgb(254,104,9)" fg:x="41559" fg:w="479"/><text x="14.3637%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (470 samples, 0.16%)</title><rect x="14.1167%" y="837" width="0.1596%" height="15" fill="rgb(239,52,14)" fg:x="41568" fg:w="470"/><text x="14.3667%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (441 samples, 0.15%)</title><rect x="14.1266%" y="821" width="0.1498%" height="15" fill="rgb(208,227,44)" fg:x="41597" fg:w="441"/><text x="14.3766%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (441 samples, 0.15%)</title><rect x="14.1266%" y="805" width="0.1498%" height="15" fill="rgb(246,18,19)" fg:x="41597" fg:w="441"/><text x="14.3766%" y="815.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (187 samples, 0.06%)</title><rect x="14.2128%" y="789" width="0.0635%" height="15" fill="rgb(235,228,25)" fg:x="41851" fg:w="187"/><text x="14.4628%" y="799.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (153 samples, 0.05%)</title><rect x="14.2244%" y="773" width="0.0520%" height="15" fill="rgb(240,156,20)" fg:x="41885" fg:w="153"/><text x="14.4744%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (153 samples, 0.05%)</title><rect x="14.2244%" y="757" width="0.0520%" height="15" fill="rgb(224,8,20)" fg:x="41885" fg:w="153"/><text x="14.4744%" y="767.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (153 samples, 0.05%)</title><rect x="14.2244%" y="741" width="0.0520%" height="15" fill="rgb(214,12,52)" fg:x="41885" fg:w="153"/><text x="14.4744%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (82 samples, 0.03%)</title><rect x="14.2485%" y="725" width="0.0278%" height="15" fill="rgb(211,220,47)" fg:x="41956" fg:w="82"/><text x="14.4985%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (508 samples, 0.17%)</title><rect x="14.1065%" y="869" width="0.1725%" height="15" fill="rgb(250,173,5)" fg:x="41538" fg:w="508"/><text x="14.3565%" y="879.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (110 samples, 0.04%)</title><rect x="14.2791%" y="837" width="0.0374%" height="15" fill="rgb(250,125,52)" fg:x="42046" fg:w="110"/><text x="14.5291%" y="847.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (108 samples, 0.04%)</title><rect x="14.2797%" y="821" width="0.0367%" height="15" fill="rgb(209,133,18)" fg:x="42048" fg:w="108"/><text x="14.5297%" y="831.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (55 samples, 0.02%)</title><rect x="14.2977%" y="805" width="0.0187%" height="15" fill="rgb(216,173,22)" fg:x="42101" fg:w="55"/><text x="14.5477%" y="815.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (126 samples, 0.04%)</title><rect x="14.4366%" y="773" width="0.0428%" height="15" fill="rgb(205,3,22)" fg:x="42510" fg:w="126"/><text x="14.6866%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (126 samples, 0.04%)</title><rect x="14.4366%" y="757" width="0.0428%" height="15" fill="rgb(248,22,20)" fg:x="42510" fg:w="126"/><text x="14.6866%" y="767.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (126 samples, 0.04%)</title><rect x="14.4366%" y="741" width="0.0428%" height="15" fill="rgb(233,6,29)" fg:x="42510" fg:w="126"/><text x="14.6866%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (86 samples, 0.03%)</title><rect x="14.4502%" y="725" width="0.0292%" height="15" fill="rgb(240,22,54)" fg:x="42550" fg:w="86"/><text x="14.7002%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (604 samples, 0.21%)</title><rect x="14.2791%" y="869" width="0.2051%" height="15" fill="rgb(231,133,32)" fg:x="42046" fg:w="604"/><text x="14.5291%" y="879.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (604 samples, 0.21%)</title><rect x="14.2791%" y="853" width="0.2051%" height="15" fill="rgb(248,193,4)" fg:x="42046" fg:w="604"/><text x="14.5291%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (494 samples, 0.17%)</title><rect x="14.3164%" y="837" width="0.1678%" height="15" fill="rgb(211,178,46)" fg:x="42156" fg:w="494"/><text x="14.5664%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (456 samples, 0.15%)</title><rect x="14.3293%" y="821" width="0.1549%" height="15" fill="rgb(224,5,42)" fg:x="42194" fg:w="456"/><text x="14.5793%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (456 samples, 0.15%)</title><rect x="14.3293%" y="805" width="0.1549%" height="15" fill="rgb(239,176,25)" fg:x="42194" fg:w="456"/><text x="14.5793%" y="815.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (154 samples, 0.05%)</title><rect x="14.4319%" y="789" width="0.0523%" height="15" fill="rgb(245,187,50)" fg:x="42496" fg:w="154"/><text x="14.6819%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (144 samples, 0.05%)</title><rect x="14.5511%" y="837" width="0.0489%" height="15" fill="rgb(248,24,15)" fg:x="42847" fg:w="144"/><text x="14.8011%" y="847.50"></text></g><g><title>core::ptr::read (144 samples, 0.05%)</title><rect x="14.5511%" y="821" width="0.0489%" height="15" fill="rgb(205,166,13)" fg:x="42847" fg:w="144"/><text x="14.8011%" y="831.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,209 samples, 1.09%)</title><rect x="13.5170%" y="1221" width="1.0898%" height="15" fill="rgb(208,114,23)" fg:x="39802" fg:w="3209"/><text x="13.7670%" y="1231.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1205" width="1.0837%" height="15" fill="rgb(239,127,18)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1215.50"></text></g><g><title>async_std::task::block_on::block_on (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1189" width="1.0837%" height="15" fill="rgb(219,154,28)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1199.50"></text></g><g><title>async_std::task::builder::Builder::blocking (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1173" width="1.0837%" height="15" fill="rgb(225,157,23)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1157" width="1.0837%" height="15" fill="rgb(219,8,6)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1141" width="1.0837%" height="15" fill="rgb(212,47,6)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1125" width="1.0837%" height="15" fill="rgb(224,190,4)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1109" width="1.0837%" height="15" fill="rgb(239,183,29)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1093" width="1.0837%" height="15" fill="rgb(213,57,7)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1077" width="1.0837%" height="15" fill="rgb(216,148,1)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1061" width="1.0837%" height="15" fill="rgb(236,182,29)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1071.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1045" width="1.0837%" height="15" fill="rgb(244,120,48)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1055.50"></text></g><g><title>async_global_executor::executor::block_on (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1029" width="1.0837%" height="15" fill="rgb(206,71,34)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,191 samples, 1.08%)</title><rect x="13.5231%" y="1013" width="1.0837%" height="15" fill="rgb(242,32,6)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,191 samples, 1.08%)</title><rect x="13.5231%" y="997" width="1.0837%" height="15" fill="rgb(241,35,3)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="1007.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (3,191 samples, 1.08%)</title><rect x="13.5231%" y="981" width="1.0837%" height="15" fill="rgb(222,62,19)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="991.50"></text></g><g><title>async_global_executor::reactor::block_on (3,191 samples, 1.08%)</title><rect x="13.5231%" y="965" width="1.0837%" height="15" fill="rgb(223,110,41)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="975.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,191 samples, 1.08%)</title><rect x="13.5231%" y="949" width="1.0837%" height="15" fill="rgb(208,224,4)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="959.50"></text></g><g><title>async_io::driver::block_on (3,191 samples, 1.08%)</title><rect x="13.5231%" y="933" width="1.0837%" height="15" fill="rgb(241,137,19)" fg:x="39820" fg:w="3191"/><text x="13.7731%" y="943.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,559 samples, 0.53%)</title><rect x="14.0773%" y="917" width="0.5294%" height="15" fill="rgb(244,24,17)" fg:x="41452" fg:w="1559"/><text x="14.3273%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (1,559 samples, 0.53%)</title><rect x="14.0773%" y="901" width="0.5294%" height="15" fill="rgb(245,178,49)" fg:x="41452" fg:w="1559"/><text x="14.3273%" y="911.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (1,473 samples, 0.50%)</title><rect x="14.1065%" y="885" width="0.5002%" height="15" fill="rgb(219,160,38)" fg:x="41538" fg:w="1473"/><text x="14.3565%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (361 samples, 0.12%)</title><rect x="14.4842%" y="869" width="0.1226%" height="15" fill="rgb(228,137,14)" fg:x="42650" fg:w="361"/><text x="14.7342%" y="879.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (361 samples, 0.12%)</title><rect x="14.4842%" y="853" width="0.1226%" height="15" fill="rgb(237,134,11)" fg:x="42650" fg:w="361"/><text x="14.7342%" y="863.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (99 samples, 0.03%)</title><rect x="14.8347%" y="565" width="0.0336%" height="15" fill="rgb(211,126,44)" fg:x="43682" fg:w="99"/><text x="15.0847%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (97 samples, 0.03%)</title><rect x="14.8353%" y="549" width="0.0329%" height="15" fill="rgb(226,171,33)" fg:x="43684" fg:w="97"/><text x="15.0853%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::get (169 samples, 0.06%)</title><rect x="14.8690%" y="565" width="0.0574%" height="15" fill="rgb(253,99,13)" fg:x="43783" fg:w="169"/><text x="15.1190%" y="575.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (169 samples, 0.06%)</title><rect x="14.8690%" y="549" width="0.0574%" height="15" fill="rgb(244,48,7)" fg:x="43783" fg:w="169"/><text x="15.1190%" y="559.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (169 samples, 0.06%)</title><rect x="14.8690%" y="533" width="0.0574%" height="15" fill="rgb(244,217,54)" fg:x="43783" fg:w="169"/><text x="15.1190%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (169 samples, 0.06%)</title><rect x="14.8690%" y="517" width="0.0574%" height="15" fill="rgb(224,15,18)" fg:x="43783" fg:w="169"/><text x="15.1190%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (169 samples, 0.06%)</title><rect x="14.8690%" y="501" width="0.0574%" height="15" fill="rgb(244,99,12)" fg:x="43783" fg:w="169"/><text x="15.1190%" y="511.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (169 samples, 0.06%)</title><rect x="14.8690%" y="485" width="0.0574%" height="15" fill="rgb(233,226,8)" fg:x="43783" fg:w="169"/><text x="15.1190%" y="495.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (167 samples, 0.06%)</title><rect x="14.8696%" y="469" width="0.0567%" height="15" fill="rgb(229,211,3)" fg:x="43785" fg:w="167"/><text x="15.1196%" y="479.50"></text></g><g><title>async_io::reactor::Reactor::notify (546 samples, 0.19%)</title><rect x="14.9386%" y="549" width="0.1854%" height="15" fill="rgb(216,140,21)" fg:x="43988" fg:w="546"/><text x="15.1886%" y="559.50"></text></g><g><title>polling::Poller::notify (543 samples, 0.18%)</title><rect x="14.9396%" y="533" width="0.1844%" height="15" fill="rgb(234,122,30)" fg:x="43991" fg:w="543"/><text x="15.1896%" y="543.50"></text></g><g><title>polling::epoll::Poller::notify (387 samples, 0.13%)</title><rect x="14.9926%" y="517" width="0.1314%" height="15" fill="rgb(236,25,46)" fg:x="44147" fg:w="387"/><text x="15.2426%" y="527.50"></text></g><g><title>write (379 samples, 0.13%)</title><rect x="14.9953%" y="501" width="0.1287%" height="15" fill="rgb(217,52,54)" fg:x="44155" fg:w="379"/><text x="15.2453%" y="511.50"></text></g><g><title>[unknown] (337 samples, 0.11%)</title><rect x="15.0096%" y="485" width="0.1144%" height="15" fill="rgb(222,29,26)" fg:x="44197" fg:w="337"/><text x="15.2596%" y="495.50"></text></g><g><title>[unknown] (333 samples, 0.11%)</title><rect x="15.0109%" y="469" width="0.1131%" height="15" fill="rgb(216,177,29)" fg:x="44201" fg:w="333"/><text x="15.2609%" y="479.50"></text></g><g><title>[unknown] (329 samples, 0.11%)</title><rect x="15.0123%" y="453" width="0.1117%" height="15" fill="rgb(247,136,51)" fg:x="44205" fg:w="329"/><text x="15.2623%" y="463.50"></text></g><g><title>[unknown] (316 samples, 0.11%)</title><rect x="15.0167%" y="437" width="0.1073%" height="15" fill="rgb(231,47,47)" fg:x="44218" fg:w="316"/><text x="15.2667%" y="447.50"></text></g><g><title>[unknown] (277 samples, 0.09%)</title><rect x="15.0299%" y="421" width="0.0941%" height="15" fill="rgb(211,192,36)" fg:x="44257" fg:w="277"/><text x="15.2799%" y="431.50"></text></g><g><title>[unknown] (173 samples, 0.06%)</title><rect x="15.0653%" y="405" width="0.0588%" height="15" fill="rgb(229,156,32)" fg:x="44361" fg:w="173"/><text x="15.3153%" y="415.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="15.0850%" y="389" width="0.0391%" height="15" fill="rgb(248,213,20)" fg:x="44419" fg:w="115"/><text x="15.3350%" y="399.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="15.1036%" y="373" width="0.0204%" height="15" fill="rgb(217,64,7)" fg:x="44474" fg:w="60"/><text x="15.3536%" y="383.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="15.1114%" y="357" width="0.0126%" height="15" fill="rgb(232,142,8)" fg:x="44497" fg:w="37"/><text x="15.3614%" y="367.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="15.1131%" y="341" width="0.0109%" height="15" fill="rgb(224,92,44)" fg:x="44502" fg:w="32"/><text x="15.3631%" y="351.50"></text></g><g><title>__sched_yield (74 samples, 0.03%)</title><rect x="15.3064%" y="517" width="0.0251%" height="15" fill="rgb(214,169,17)" fg:x="45071" fg:w="74"/><text x="15.5564%" y="527.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="15.3064%" y="501" width="0.0251%" height="15" fill="rgb(210,59,37)" fg:x="45071" fg:w="74"/><text x="15.5564%" y="511.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="15.3064%" y="485" width="0.0251%" height="15" fill="rgb(214,116,48)" fg:x="45071" fg:w="74"/><text x="15.5564%" y="495.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="15.3064%" y="469" width="0.0251%" height="15" fill="rgb(244,191,6)" fg:x="45071" fg:w="74"/><text x="15.5564%" y="479.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="15.3067%" y="453" width="0.0248%" height="15" fill="rgb(241,50,52)" fg:x="45072" fg:w="73"/><text x="15.5567%" y="463.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="15.3088%" y="437" width="0.0228%" height="15" fill="rgb(236,75,39)" fg:x="45078" fg:w="67"/><text x="15.5588%" y="447.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="15.3135%" y="421" width="0.0180%" height="15" fill="rgb(236,99,0)" fg:x="45092" fg:w="53"/><text x="15.5635%" y="431.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="15.3172%" y="405" width="0.0143%" height="15" fill="rgb(207,202,15)" fg:x="45103" fg:w="42"/><text x="15.5672%" y="415.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (622 samples, 0.21%)</title><rect x="15.1257%" y="549" width="0.2112%" height="15" fill="rgb(233,207,14)" fg:x="44539" fg:w="622"/><text x="15.3757%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (574 samples, 0.19%)</title><rect x="15.1420%" y="533" width="0.1949%" height="15" fill="rgb(226,27,51)" fg:x="44587" fg:w="574"/><text x="15.3920%" y="543.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (1,424 samples, 0.48%)</title><rect x="14.9264%" y="565" width="0.4836%" height="15" fill="rgb(206,104,42)" fg:x="43952" fg:w="1424"/><text x="15.1764%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (215 samples, 0.07%)</title><rect x="15.3369%" y="549" width="0.0730%" height="15" fill="rgb(212,225,4)" fg:x="45161" fg:w="215"/><text x="15.5869%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (215 samples, 0.07%)</title><rect x="15.3369%" y="533" width="0.0730%" height="15" fill="rgb(233,96,42)" fg:x="45161" fg:w="215"/><text x="15.5869%" y="543.50"></text></g><g><title>__sched_yield (115 samples, 0.04%)</title><rect x="15.7176%" y="517" width="0.0391%" height="15" fill="rgb(229,21,32)" fg:x="46282" fg:w="115"/><text x="15.9676%" y="527.50"></text></g><g><title>[unknown] (112 samples, 0.04%)</title><rect x="15.7187%" y="501" width="0.0380%" height="15" fill="rgb(226,216,24)" fg:x="46285" fg:w="112"/><text x="15.9687%" y="511.50"></text></g><g><title>[unknown] (111 samples, 0.04%)</title><rect x="15.7190%" y="485" width="0.0377%" height="15" fill="rgb(221,163,17)" fg:x="46286" fg:w="111"/><text x="15.9690%" y="495.50"></text></g><g><title>[unknown] (108 samples, 0.04%)</title><rect x="15.7200%" y="469" width="0.0367%" height="15" fill="rgb(216,216,42)" fg:x="46289" fg:w="108"/><text x="15.9700%" y="479.50"></text></g><g><title>[unknown] (108 samples, 0.04%)</title><rect x="15.7200%" y="453" width="0.0367%" height="15" fill="rgb(240,118,7)" fg:x="46289" fg:w="108"/><text x="15.9700%" y="463.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="15.7244%" y="437" width="0.0323%" height="15" fill="rgb(221,67,37)" fg:x="46302" fg:w="95"/><text x="15.9744%" y="447.50"></text></g><g><title>[unknown] (77 samples, 0.03%)</title><rect x="15.7305%" y="421" width="0.0261%" height="15" fill="rgb(241,32,44)" fg:x="46320" fg:w="77"/><text x="15.9805%" y="431.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="15.7377%" y="405" width="0.0190%" height="15" fill="rgb(235,204,43)" fg:x="46341" fg:w="56"/><text x="15.9877%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (30 samples, 0.01%)</title><rect x="15.7567%" y="517" width="0.0102%" height="15" fill="rgb(213,116,10)" fg:x="46397" fg:w="30"/><text x="16.0067%" y="527.50"></text></g><g><title>core::ptr::write (30 samples, 0.01%)</title><rect x="15.7567%" y="501" width="0.0102%" height="15" fill="rgb(239,15,48)" fg:x="46397" fg:w="30"/><text x="16.0067%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,047 samples, 0.36%)</title><rect x="15.4134%" y="549" width="0.3556%" height="15" fill="rgb(207,123,36)" fg:x="45386" fg:w="1047"/><text x="15.6634%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (943 samples, 0.32%)</title><rect x="15.4487%" y="533" width="0.3202%" height="15" fill="rgb(209,103,30)" fg:x="45490" fg:w="943"/><text x="15.6987%" y="543.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (1,058 samples, 0.36%)</title><rect x="15.4100%" y="565" width="0.3593%" height="15" fill="rgb(238,100,19)" fg:x="45376" fg:w="1058"/><text x="15.6600%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(usize,core::task::wake::Waker)&gt;&gt; (69 samples, 0.02%)</title><rect x="15.7852%" y="565" width="0.0234%" height="15" fill="rgb(244,30,14)" fg:x="46481" fg:w="69"/><text x="16.0352%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (69 samples, 0.02%)</title><rect x="15.7852%" y="549" width="0.0234%" height="15" fill="rgb(249,174,6)" fg:x="46481" fg:w="69"/><text x="16.0352%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (69 samples, 0.02%)</title><rect x="15.7852%" y="533" width="0.0234%" height="15" fill="rgb(235,213,41)" fg:x="46481" fg:w="69"/><text x="16.0352%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (69 samples, 0.02%)</title><rect x="15.7852%" y="517" width="0.0234%" height="15" fill="rgb(213,118,6)" fg:x="46481" fg:w="69"/><text x="16.0352%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (68 samples, 0.02%)</title><rect x="15.7856%" y="501" width="0.0231%" height="15" fill="rgb(235,44,51)" fg:x="46482" fg:w="68"/><text x="16.0356%" y="511.50"></text></g><g><title>[[vdso]] (186 samples, 0.06%)</title><rect x="15.9740%" y="485" width="0.0632%" height="15" fill="rgb(217,9,53)" fg:x="47037" fg:w="186"/><text x="16.2240%" y="495.50"></text></g><g><title>clock_gettime (612 samples, 0.21%)</title><rect x="15.8304%" y="517" width="0.2078%" height="15" fill="rgb(237,172,34)" fg:x="46614" fg:w="612"/><text x="16.0804%" y="527.50"></text></g><g><title>__vdso_clock_gettime (491 samples, 0.17%)</title><rect x="15.8715%" y="501" width="0.1667%" height="15" fill="rgb(206,206,11)" fg:x="46735" fg:w="491"/><text x="16.1215%" y="511.50"></text></g><g><title>std::time::Instant::now (679 samples, 0.23%)</title><rect x="15.8087%" y="565" width="0.2306%" height="15" fill="rgb(214,149,29)" fg:x="46550" fg:w="679"/><text x="16.0587%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (630 samples, 0.21%)</title><rect x="15.8253%" y="549" width="0.2140%" height="15" fill="rgb(208,123,3)" fg:x="46599" fg:w="630"/><text x="16.0753%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (630 samples, 0.21%)</title><rect x="15.8253%" y="533" width="0.2140%" height="15" fill="rgb(229,126,4)" fg:x="46599" fg:w="630"/><text x="16.0753%" y="543.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (3,929 samples, 1.33%)</title><rect x="14.7161%" y="581" width="1.3343%" height="15" fill="rgb(222,92,36)" fg:x="43333" fg:w="3929"/><text x="14.9661%" y="591.50"></text></g><g><title>std::time::SystemTime::checked_add (33 samples, 0.01%)</title><rect x="16.0392%" y="565" width="0.0112%" height="15" fill="rgb(216,39,41)" fg:x="47229" fg:w="33"/><text x="16.2892%" y="575.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (4,033 samples, 1.37%)</title><rect x="14.6812%" y="597" width="1.3696%" height="15" fill="rgb(253,127,28)" fg:x="43230" fg:w="4033"/><text x="14.9312%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (177 samples, 0.06%)</title><rect x="16.0508%" y="597" width="0.0601%" height="15" fill="rgb(249,152,51)" fg:x="47263" fg:w="177"/><text x="16.3008%" y="607.50"></text></g><g><title>async_std::future::pending::pending::{{closure}} (161 samples, 0.05%)</title><rect x="16.0562%" y="581" width="0.0547%" height="15" fill="rgb(209,123,42)" fg:x="47279" fg:w="161"/><text x="16.3062%" y="591.50"></text></g><g><title>__rdl_alloc (55 samples, 0.02%)</title><rect x="16.1343%" y="341" width="0.0187%" height="15" fill="rgb(241,118,22)" fg:x="47509" fg:w="55"/><text x="16.3843%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (734 samples, 0.25%)</title><rect x="16.1323%" y="437" width="0.2493%" height="15" fill="rgb(208,25,7)" fg:x="47503" fg:w="734"/><text x="16.3823%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (734 samples, 0.25%)</title><rect x="16.1323%" y="421" width="0.2493%" height="15" fill="rgb(243,144,39)" fg:x="47503" fg:w="734"/><text x="16.3823%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (734 samples, 0.25%)</title><rect x="16.1323%" y="405" width="0.2493%" height="15" fill="rgb(250,50,5)" fg:x="47503" fg:w="734"/><text x="16.3823%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (734 samples, 0.25%)</title><rect x="16.1323%" y="389" width="0.2493%" height="15" fill="rgb(207,67,11)" fg:x="47503" fg:w="734"/><text x="16.3823%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (734 samples, 0.25%)</title><rect x="16.1323%" y="373" width="0.2493%" height="15" fill="rgb(245,204,40)" fg:x="47503" fg:w="734"/><text x="16.3823%" y="383.50"></text></g><g><title>alloc::alloc::alloc (733 samples, 0.25%)</title><rect x="16.1326%" y="357" width="0.2489%" height="15" fill="rgb(238,228,24)" fg:x="47504" fg:w="733"/><text x="16.3826%" y="367.50"></text></g><g><title>malloc (652 samples, 0.22%)</title><rect x="16.1601%" y="341" width="0.2214%" height="15" fill="rgb(217,116,22)" fg:x="47585" fg:w="652"/><text x="16.4101%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (771 samples, 0.26%)</title><rect x="16.1323%" y="549" width="0.2618%" height="15" fill="rgb(234,98,12)" fg:x="47503" fg:w="771"/><text x="16.3823%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (771 samples, 0.26%)</title><rect x="16.1323%" y="533" width="0.2618%" height="15" fill="rgb(242,170,50)" fg:x="47503" fg:w="771"/><text x="16.3823%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (771 samples, 0.26%)</title><rect x="16.1323%" y="517" width="0.2618%" height="15" fill="rgb(235,7,5)" fg:x="47503" fg:w="771"/><text x="16.3823%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (771 samples, 0.26%)</title><rect x="16.1323%" y="501" width="0.2618%" height="15" fill="rgb(241,114,28)" fg:x="47503" fg:w="771"/><text x="16.3823%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (771 samples, 0.26%)</title><rect x="16.1323%" y="485" width="0.2618%" height="15" fill="rgb(246,112,42)" fg:x="47503" fg:w="771"/><text x="16.3823%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (771 samples, 0.26%)</title><rect x="16.1323%" y="469" width="0.2618%" height="15" fill="rgb(248,228,14)" fg:x="47503" fg:w="771"/><text x="16.3823%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (771 samples, 0.26%)</title><rect x="16.1323%" y="453" width="0.2618%" height="15" fill="rgb(208,133,18)" fg:x="47503" fg:w="771"/><text x="16.3823%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (37 samples, 0.01%)</title><rect x="16.3816%" y="437" width="0.0126%" height="15" fill="rgb(207,35,49)" fg:x="48237" fg:w="37"/><text x="16.6316%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.01%)</title><rect x="16.3816%" y="421" width="0.0126%" height="15" fill="rgb(205,68,36)" fg:x="48237" fg:w="37"/><text x="16.6316%" y="431.50"></text></g><g><title>[libc.so.6] (37 samples, 0.01%)</title><rect x="16.3816%" y="405" width="0.0126%" height="15" fill="rgb(245,62,40)" fg:x="48237" fg:w="37"/><text x="16.6316%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (961 samples, 0.33%)</title><rect x="16.1170%" y="581" width="0.3264%" height="15" fill="rgb(228,27,24)" fg:x="47458" fg:w="961"/><text x="16.3670%" y="591.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (916 samples, 0.31%)</title><rect x="16.1323%" y="565" width="0.3111%" height="15" fill="rgb(253,19,12)" fg:x="47503" fg:w="916"/><text x="16.3823%" y="575.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (145 samples, 0.05%)</title><rect x="16.3941%" y="549" width="0.0492%" height="15" fill="rgb(232,28,20)" fg:x="48274" fg:w="145"/><text x="16.6441%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (142 samples, 0.05%)</title><rect x="16.3952%" y="533" width="0.0482%" height="15" fill="rgb(218,35,51)" fg:x="48277" fg:w="142"/><text x="16.6452%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (142 samples, 0.05%)</title><rect x="16.3952%" y="517" width="0.0482%" height="15" fill="rgb(212,90,40)" fg:x="48277" fg:w="142"/><text x="16.6452%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (142 samples, 0.05%)</title><rect x="16.3952%" y="501" width="0.0482%" height="15" fill="rgb(220,172,12)" fg:x="48277" fg:w="142"/><text x="16.6452%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (142 samples, 0.05%)</title><rect x="16.3952%" y="485" width="0.0482%" height="15" fill="rgb(226,159,20)" fg:x="48277" fg:w="142"/><text x="16.6452%" y="495.50"></text></g><g><title>alloc::alloc::alloc (140 samples, 0.05%)</title><rect x="16.3958%" y="469" width="0.0475%" height="15" fill="rgb(234,205,16)" fg:x="48279" fg:w="140"/><text x="16.6458%" y="479.50"></text></g><g><title>malloc (128 samples, 0.04%)</title><rect x="16.3999%" y="453" width="0.0435%" height="15" fill="rgb(207,9,39)" fg:x="48291" fg:w="128"/><text x="16.6499%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (242 samples, 0.08%)</title><rect x="16.4777%" y="565" width="0.0822%" height="15" fill="rgb(249,143,15)" fg:x="48520" fg:w="242"/><text x="16.7277%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (206 samples, 0.07%)</title><rect x="16.4899%" y="549" width="0.0700%" height="15" fill="rgb(253,133,29)" fg:x="48556" fg:w="206"/><text x="16.7399%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (204 samples, 0.07%)</title><rect x="16.4906%" y="533" width="0.0693%" height="15" fill="rgb(221,187,0)" fg:x="48558" fg:w="204"/><text x="16.7406%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 0.07%)</title><rect x="16.4906%" y="517" width="0.0693%" height="15" fill="rgb(205,204,26)" fg:x="48558" fg:w="204"/><text x="16.7406%" y="527.50"></text></g><g><title>alloc::alloc::alloc (204 samples, 0.07%)</title><rect x="16.4906%" y="501" width="0.0693%" height="15" fill="rgb(224,68,54)" fg:x="48558" fg:w="204"/><text x="16.7406%" y="511.50"></text></g><g><title>malloc (171 samples, 0.06%)</title><rect x="16.5018%" y="485" width="0.0581%" height="15" fill="rgb(209,67,4)" fg:x="48591" fg:w="171"/><text x="16.7518%" y="495.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (5,538 samples, 1.88%)</title><rect x="14.6795%" y="613" width="1.8807%" height="15" fill="rgb(228,229,18)" fg:x="43225" fg:w="5538"/><text x="14.9295%" y="623.50">&lt;..</text></g><g><title>std::io::error::Error::new (1,320 samples, 0.45%)</title><rect x="16.1119%" y="597" width="0.4483%" height="15" fill="rgb(231,89,13)" fg:x="47443" fg:w="1320"/><text x="16.3619%" y="607.50"></text></g><g><title>std::io::error::Error::_new (344 samples, 0.12%)</title><rect x="16.4434%" y="581" width="0.1168%" height="15" fill="rgb(210,182,18)" fg:x="48419" fg:w="344"/><text x="16.6934%" y="591.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (44 samples, 0.01%)</title><rect x="16.6128%" y="581" width="0.0149%" height="15" fill="rgb(240,105,2)" fg:x="48918" fg:w="44"/><text x="16.8628%" y="591.50"></text></g><g><title>std::time::Instant::checked_add (40 samples, 0.01%)</title><rect x="16.6142%" y="565" width="0.0136%" height="15" fill="rgb(207,170,50)" fg:x="48922" fg:w="40"/><text x="16.8642%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_add_duration (40 samples, 0.01%)</title><rect x="16.6142%" y="549" width="0.0136%" height="15" fill="rgb(232,133,24)" fg:x="48922" fg:w="40"/><text x="16.8642%" y="559.50"></text></g><g><title>std::sys::unix::time::Timespec::checked_add_duration (40 samples, 0.01%)</title><rect x="16.6142%" y="533" width="0.0136%" height="15" fill="rgb(235,166,27)" fg:x="48922" fg:w="40"/><text x="16.8642%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (39 samples, 0.01%)</title><rect x="16.6145%" y="517" width="0.0132%" height="15" fill="rgb(209,19,13)" fg:x="48923" fg:w="39"/><text x="16.8645%" y="527.50"></text></g><g><title>[[vdso]] (141 samples, 0.05%)</title><rect x="16.7575%" y="501" width="0.0479%" height="15" fill="rgb(226,79,39)" fg:x="49344" fg:w="141"/><text x="17.0075%" y="511.50"></text></g><g><title>clock_gettime (478 samples, 0.16%)</title><rect x="16.6441%" y="533" width="0.1623%" height="15" fill="rgb(222,163,10)" fg:x="49010" fg:w="478"/><text x="16.8941%" y="543.50"></text></g><g><title>__vdso_clock_gettime (298 samples, 0.10%)</title><rect x="16.7052%" y="517" width="0.1012%" height="15" fill="rgb(214,44,19)" fg:x="49190" fg:w="298"/><text x="16.9552%" y="527.50"></text></g><g><title>async_std::utils::timer_after (727 samples, 0.25%)</title><rect x="16.5602%" y="613" width="0.2469%" height="15" fill="rgb(210,217,13)" fg:x="48763" fg:w="727"/><text x="16.8102%" y="623.50"></text></g><g><title>async_io::Timer::after (637 samples, 0.22%)</title><rect x="16.5908%" y="597" width="0.2163%" height="15" fill="rgb(237,61,54)" fg:x="48853" fg:w="637"/><text x="16.8408%" y="607.50"></text></g><g><title>std::time::Instant::now (524 samples, 0.18%)</title><rect x="16.6291%" y="581" width="0.1780%" height="15" fill="rgb(226,184,24)" fg:x="48966" fg:w="524"/><text x="16.8791%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (480 samples, 0.16%)</title><rect x="16.6441%" y="565" width="0.1630%" height="15" fill="rgb(223,226,4)" fg:x="49010" fg:w="480"/><text x="16.8941%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (480 samples, 0.16%)</title><rect x="16.6441%" y="549" width="0.1630%" height="15" fill="rgb(210,26,41)" fg:x="49010" fg:w="480"/><text x="16.8941%" y="559.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (52 samples, 0.02%)</title><rect x="16.8081%" y="581" width="0.0177%" height="15" fill="rgb(220,221,6)" fg:x="49493" fg:w="52"/><text x="17.0581%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (41 samples, 0.01%)</title><rect x="16.8118%" y="565" width="0.0139%" height="15" fill="rgb(225,89,49)" fg:x="49504" fg:w="41"/><text x="17.0618%" y="575.50"></text></g><g><title>core::mem::replace (41 samples, 0.01%)</title><rect x="16.8118%" y="549" width="0.0139%" height="15" fill="rgb(218,70,45)" fg:x="49504" fg:w="41"/><text x="17.0618%" y="559.50"></text></g><g><title>core::ptr::read (40 samples, 0.01%)</title><rect x="16.8122%" y="533" width="0.0136%" height="15" fill="rgb(238,166,21)" fg:x="49505" fg:w="40"/><text x="17.0622%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,440 samples, 2.19%)</title><rect x="14.6411%" y="645" width="2.1871%" height="15" fill="rgb(224,141,44)" fg:x="43112" fg:w="6440"/><text x="14.8911%" y="655.50">&lt;..</text></g><g><title>async_std::io::timeout::timeout::{{closure}} (6,437 samples, 2.19%)</title><rect x="14.6421%" y="629" width="2.1860%" height="15" fill="rgb(230,12,49)" fg:x="43115" fg:w="6437"/><text x="14.8921%" y="639.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;async_std::io::timeout::Timeout&lt;core::future::from_generator::GenFuture&lt;async_std::future::pending::pending&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;::{{closure}}&gt;,()&gt;&gt; (62 samples, 0.02%)</title><rect x="16.8071%" y="613" width="0.0211%" height="15" fill="rgb(212,174,12)" fg:x="49490" fg:w="62"/><text x="17.0571%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (62 samples, 0.02%)</title><rect x="16.8071%" y="597" width="0.0211%" height="15" fill="rgb(246,67,9)" fg:x="49490" fg:w="62"/><text x="17.0571%" y="607.50"></text></g><g><title>cfree (75 samples, 0.03%)</title><rect x="16.8356%" y="629" width="0.0255%" height="15" fill="rgb(239,35,23)" fg:x="49574" fg:w="75"/><text x="17.0856%" y="639.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="16.8506%" y="613" width="0.0105%" height="15" fill="rgb(211,167,0)" fg:x="49618" fg:w="31"/><text x="17.1006%" y="623.50"></text></g><g><title>alloc::alloc::box_free (67 samples, 0.02%)</title><rect x="16.8842%" y="517" width="0.0228%" height="15" fill="rgb(225,119,45)" fg:x="49717" fg:w="67"/><text x="17.1342%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (67 samples, 0.02%)</title><rect x="16.8842%" y="501" width="0.0228%" height="15" fill="rgb(210,162,6)" fg:x="49717" fg:w="67"/><text x="17.1342%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (62 samples, 0.02%)</title><rect x="16.8859%" y="485" width="0.0211%" height="15" fill="rgb(208,118,35)" fg:x="49722" fg:w="62"/><text x="17.1359%" y="495.50"></text></g><g><title>cfree (59 samples, 0.02%)</title><rect x="16.8869%" y="469" width="0.0200%" height="15" fill="rgb(239,4,53)" fg:x="49725" fg:w="59"/><text x="17.1369%" y="479.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="16.8937%" y="453" width="0.0132%" height="15" fill="rgb(213,130,21)" fg:x="49745" fg:w="39"/><text x="17.1437%" y="463.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="17.0071%" y="501" width="0.0156%" height="15" fill="rgb(235,148,0)" fg:x="50079" fg:w="46"/><text x="17.2571%" y="511.50"></text></g><g><title>cfree (344 samples, 0.12%)</title><rect x="16.9069%" y="517" width="0.1168%" height="15" fill="rgb(244,224,18)" fg:x="49784" fg:w="344"/><text x="17.1569%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::ErrorData&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt;&gt; (614 samples, 0.21%)</title><rect x="16.8686%" y="581" width="0.2085%" height="15" fill="rgb(211,214,4)" fg:x="49671" fg:w="614"/><text x="17.1186%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt; (614 samples, 0.21%)</title><rect x="16.8686%" y="565" width="0.2085%" height="15" fill="rgb(206,119,25)" fg:x="49671" fg:w="614"/><text x="17.1186%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Custom&gt; (608 samples, 0.21%)</title><rect x="16.8706%" y="549" width="0.2065%" height="15" fill="rgb(243,93,47)" fg:x="49677" fg:w="608"/><text x="17.1206%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt; (608 samples, 0.21%)</title><rect x="16.8706%" y="533" width="0.2065%" height="15" fill="rgb(224,194,6)" fg:x="49677" fg:w="608"/><text x="17.1206%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::error::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from::StringError&gt; (157 samples, 0.05%)</title><rect x="17.0238%" y="517" width="0.0533%" height="15" fill="rgb(243,229,6)" fg:x="50128" fg:w="157"/><text x="17.2738%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (157 samples, 0.05%)</title><rect x="17.0238%" y="501" width="0.0533%" height="15" fill="rgb(207,23,50)" fg:x="50128" fg:w="157"/><text x="17.2738%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (157 samples, 0.05%)</title><rect x="17.0238%" y="485" width="0.0533%" height="15" fill="rgb(253,192,32)" fg:x="50128" fg:w="157"/><text x="17.2738%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (157 samples, 0.05%)</title><rect x="17.0238%" y="469" width="0.0533%" height="15" fill="rgb(213,21,6)" fg:x="50128" fg:w="157"/><text x="17.2738%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (157 samples, 0.05%)</title><rect x="17.0238%" y="453" width="0.0533%" height="15" fill="rgb(243,151,13)" fg:x="50128" fg:w="157"/><text x="17.2738%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (76 samples, 0.03%)</title><rect x="17.0513%" y="437" width="0.0258%" height="15" fill="rgb(233,165,41)" fg:x="50209" fg:w="76"/><text x="17.3013%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,272 samples, 2.47%)</title><rect x="14.6081%" y="677" width="2.4696%" height="15" fill="rgb(246,176,45)" fg:x="43015" fg:w="7272"/><text x="14.8581%" y="687.50">&lt;c..</text></g><g><title>async_std::task::sleep::sleep::{{closure}} (7,262 samples, 2.47%)</title><rect x="14.6115%" y="661" width="2.4662%" height="15" fill="rgb(217,170,52)" fg:x="43025" fg:w="7262"/><text x="14.8615%" y="671.50">as..</text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (732 samples, 0.25%)</title><rect x="16.8292%" y="645" width="0.2486%" height="15" fill="rgb(214,203,54)" fg:x="49555" fg:w="732"/><text x="17.0792%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (638 samples, 0.22%)</title><rect x="16.8611%" y="629" width="0.2167%" height="15" fill="rgb(248,215,49)" fg:x="49649" fg:w="638"/><text x="17.1111%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (616 samples, 0.21%)</title><rect x="16.8686%" y="613" width="0.2092%" height="15" fill="rgb(208,46,10)" fg:x="49671" fg:w="616"/><text x="17.1186%" y="623.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (616 samples, 0.21%)</title><rect x="16.8686%" y="597" width="0.2092%" height="15" fill="rgb(254,5,31)" fg:x="49671" fg:w="616"/><text x="17.1186%" y="607.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as core::convert::AsRef&lt;zenoh_buffers::wbuf::WBuf&gt;&gt;::as_ref (51 samples, 0.02%)</title><rect x="17.1104%" y="629" width="0.0173%" height="15" fill="rgb(222,104,33)" fg:x="50383" fg:w="51"/><text x="17.3604%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (236 samples, 0.08%)</title><rect x="17.1277%" y="597" width="0.0801%" height="15" fill="rgb(248,49,16)" fg:x="50434" fg:w="236"/><text x="17.3777%" y="607.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (528 samples, 0.18%)</title><rect x="17.1277%" y="629" width="0.1793%" height="15" fill="rgb(232,198,41)" fg:x="50434" fg:w="528"/><text x="17.3777%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (528 samples, 0.18%)</title><rect x="17.1277%" y="613" width="0.1793%" height="15" fill="rgb(214,125,3)" fg:x="50434" fg:w="528"/><text x="17.3777%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (292 samples, 0.10%)</title><rect x="17.2078%" y="597" width="0.0992%" height="15" fill="rgb(229,220,28)" fg:x="50670" fg:w="292"/><text x="17.4578%" y="607.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (289 samples, 0.10%)</title><rect x="17.2088%" y="581" width="0.0981%" height="15" fill="rgb(222,64,37)" fg:x="50673" fg:w="289"/><text x="17.4588%" y="591.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (606 samples, 0.21%)</title><rect x="17.1019%" y="645" width="0.2058%" height="15" fill="rgb(249,184,13)" fg:x="50358" fg:w="606"/><text x="17.3519%" y="655.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::is_empty (611 samples, 0.21%)</title><rect x="17.1009%" y="661" width="0.2075%" height="15" fill="rgb(252,176,6)" fg:x="50355" fg:w="611"/><text x="17.3509%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as core::convert::AsMut&lt;zenoh_buffers::wbuf::WBuf&gt;&gt;::as_mut (40 samples, 0.01%)</title><rect x="17.3100%" y="645" width="0.0136%" height="15" fill="rgb(228,153,7)" fg:x="50971" fg:w="40"/><text x="17.5600%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::get_first_slice_mut (38 samples, 0.01%)</title><rect x="17.3301%" y="645" width="0.0129%" height="15" fill="rgb(242,193,5)" fg:x="51030" fg:w="38"/><text x="17.5801%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (31 samples, 0.01%)</title><rect x="17.3325%" y="629" width="0.0105%" height="15" fill="rgb(232,140,9)" fg:x="51037" fg:w="31"/><text x="17.5825%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,106 samples, 2.75%)</title><rect x="14.6068%" y="709" width="2.7528%" height="15" fill="rgb(213,222,16)" fg:x="43011" fg:w="8106"/><text x="14.8568%" y="719.50">&lt;c..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (8,102 samples, 2.75%)</title><rect x="14.6081%" y="693" width="2.7515%" height="15" fill="rgb(222,75,50)" fg:x="43015" fg:w="8102"/><text x="14.8581%" y="703.50">ze..</text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (829 samples, 0.28%)</title><rect x="17.0781%" y="677" width="0.2815%" height="15" fill="rgb(205,180,2)" fg:x="50288" fg:w="829"/><text x="17.3281%" y="687.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::write_len (151 samples, 0.05%)</title><rect x="17.3084%" y="661" width="0.0513%" height="15" fill="rgb(216,34,7)" fg:x="50966" fg:w="151"/><text x="17.5584%" y="671.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (45 samples, 0.02%)</title><rect x="17.3444%" y="645" width="0.0153%" height="15" fill="rgb(253,16,32)" fg:x="51072" fg:w="45"/><text x="17.5944%" y="655.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (75 samples, 0.03%)</title><rect x="17.3933%" y="693" width="0.0255%" height="15" fill="rgb(208,97,28)" fg:x="51216" fg:w="75"/><text x="17.6433%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (75 samples, 0.03%)</title><rect x="17.3933%" y="677" width="0.0255%" height="15" fill="rgb(225,92,11)" fg:x="51216" fg:w="75"/><text x="17.6433%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (106 samples, 0.04%)</title><rect x="17.4194%" y="693" width="0.0360%" height="15" fill="rgb(243,38,12)" fg:x="51293" fg:w="106"/><text x="17.6694%" y="703.50"></text></g><g><title>core::mem::replace (106 samples, 0.04%)</title><rect x="17.4194%" y="677" width="0.0360%" height="15" fill="rgb(208,139,16)" fg:x="51293" fg:w="106"/><text x="17.6694%" y="687.50"></text></g><g><title>core::ptr::read (106 samples, 0.04%)</title><rect x="17.4194%" y="661" width="0.0360%" height="15" fill="rgb(227,24,9)" fg:x="51293" fg:w="106"/><text x="17.6694%" y="671.50"></text></g><g><title>core::mem::drop (53 samples, 0.02%)</title><rect x="17.4571%" y="693" width="0.0180%" height="15" fill="rgb(206,62,11)" fg:x="51404" fg:w="53"/><text x="17.7071%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (53 samples, 0.02%)</title><rect x="17.4571%" y="677" width="0.0180%" height="15" fill="rgb(228,134,27)" fg:x="51404" fg:w="53"/><text x="17.7071%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (49 samples, 0.02%)</title><rect x="17.4585%" y="661" width="0.0166%" height="15" fill="rgb(205,55,33)" fg:x="51408" fg:w="49"/><text x="17.7085%" y="671.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.02%)</title><rect x="17.4585%" y="645" width="0.0166%" height="15" fill="rgb(243,75,43)" fg:x="51408" fg:w="49"/><text x="17.7085%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (40 samples, 0.01%)</title><rect x="17.4615%" y="629" width="0.0136%" height="15" fill="rgb(223,27,42)" fg:x="51417" fg:w="40"/><text x="17.7115%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (40 samples, 0.01%)</title><rect x="17.4615%" y="613" width="0.0136%" height="15" fill="rgb(232,189,33)" fg:x="51417" fg:w="40"/><text x="17.7115%" y="623.50"></text></g><g><title>std::sys::unix::futex::futex_wait (51 samples, 0.02%)</title><rect x="17.5607%" y="613" width="0.0173%" height="15" fill="rgb(210,9,39)" fg:x="51709" fg:w="51"/><text x="17.8107%" y="623.50"></text></g><g><title>syscall (50 samples, 0.02%)</title><rect x="17.5610%" y="597" width="0.0170%" height="15" fill="rgb(242,85,26)" fg:x="51710" fg:w="50"/><text x="17.8110%" y="607.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="17.5610%" y="581" width="0.0170%" height="15" fill="rgb(248,44,4)" fg:x="51710" fg:w="50"/><text x="17.8110%" y="591.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="17.5610%" y="565" width="0.0170%" height="15" fill="rgb(250,96,46)" fg:x="51710" fg:w="50"/><text x="17.8110%" y="575.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="17.5614%" y="549" width="0.0166%" height="15" fill="rgb(229,116,26)" fg:x="51711" fg:w="49"/><text x="17.8114%" y="559.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="17.5617%" y="533" width="0.0163%" height="15" fill="rgb(246,94,34)" fg:x="51712" fg:w="48"/><text x="17.8117%" y="543.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="17.5620%" y="517" width="0.0160%" height="15" fill="rgb(251,73,21)" fg:x="51713" fg:w="47"/><text x="17.8120%" y="527.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="17.5627%" y="501" width="0.0153%" height="15" fill="rgb(254,121,25)" fg:x="51715" fg:w="45"/><text x="17.8127%" y="511.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="17.5627%" y="485" width="0.0153%" height="15" fill="rgb(215,161,49)" fg:x="51715" fg:w="45"/><text x="17.8127%" y="495.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="17.5665%" y="469" width="0.0115%" height="15" fill="rgb(221,43,13)" fg:x="51726" fg:w="34"/><text x="17.8165%" y="479.50"></text></g><g><title>event_listener::Inner::lock (393 samples, 0.13%)</title><rect x="17.4809%" y="693" width="0.1335%" height="15" fill="rgb(249,5,37)" fg:x="51474" fg:w="393"/><text x="17.7309%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (389 samples, 0.13%)</title><rect x="17.4822%" y="677" width="0.1321%" height="15" fill="rgb(226,25,44)" fg:x="51478" fg:w="389"/><text x="17.7322%" y="687.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (386 samples, 0.13%)</title><rect x="17.4832%" y="661" width="0.1311%" height="15" fill="rgb(238,189,16)" fg:x="51481" fg:w="386"/><text x="17.7332%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (386 samples, 0.13%)</title><rect x="17.4832%" y="645" width="0.1311%" height="15" fill="rgb(251,186,8)" fg:x="51481" fg:w="386"/><text x="17.7332%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (160 samples, 0.05%)</title><rect x="17.5600%" y="629" width="0.0543%" height="15" fill="rgb(254,34,31)" fg:x="51707" fg:w="160"/><text x="17.8100%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (107 samples, 0.04%)</title><rect x="17.5780%" y="613" width="0.0363%" height="15" fill="rgb(225,215,27)" fg:x="51760" fg:w="107"/><text x="17.8280%" y="623.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (855 samples, 0.29%)</title><rect x="17.3596%" y="709" width="0.2904%" height="15" fill="rgb(221,192,48)" fg:x="51117" fg:w="855"/><text x="17.6096%" y="719.50"></text></g><g><title>event_listener::List::remove (105 samples, 0.04%)</title><rect x="17.6143%" y="693" width="0.0357%" height="15" fill="rgb(219,137,20)" fg:x="51867" fg:w="105"/><text x="17.8643%" y="703.50"></text></g><g><title>event_listener::State::is_notified (46 samples, 0.02%)</title><rect x="17.6344%" y="677" width="0.0156%" height="15" fill="rgb(219,84,11)" fg:x="51926" fg:w="46"/><text x="17.8844%" y="687.50"></text></g><g><title>zenoh_sync::condition::Condition::waiter (128 samples, 0.04%)</title><rect x="17.6520%" y="709" width="0.0435%" height="15" fill="rgb(224,10,23)" fg:x="51978" fg:w="128"/><text x="17.9020%" y="719.50"></text></g><g><title>event_listener::Event::listen (128 samples, 0.04%)</title><rect x="17.6520%" y="693" width="0.0435%" height="15" fill="rgb(248,22,39)" fg:x="51978" fg:w="128"/><text x="17.9020%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front_mut (53 samples, 0.02%)</title><rect x="17.7003%" y="693" width="0.0180%" height="15" fill="rgb(212,154,20)" fg:x="52120" fg:w="53"/><text x="17.9503%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get_mut (53 samples, 0.02%)</title><rect x="17.7003%" y="677" width="0.0180%" height="15" fill="rgb(236,199,50)" fg:x="52120" fg:w="53"/><text x="17.9503%" y="687.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (52 samples, 0.02%)</title><rect x="17.7006%" y="661" width="0.0177%" height="15" fill="rgb(211,9,17)" fg:x="52121" fg:w="52"/><text x="17.9506%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,029 samples, 0.35%)</title><rect x="17.7610%" y="629" width="0.3495%" height="15" fill="rgb(243,216,36)" fg:x="52299" fg:w="1029"/><text x="18.0110%" y="639.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (1,881 samples, 0.64%)</title><rect x="17.7206%" y="677" width="0.6388%" height="15" fill="rgb(250,2,10)" fg:x="52180" fg:w="1881"/><text x="17.9706%" y="687.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (1,762 samples, 0.60%)</title><rect x="17.7610%" y="661" width="0.5984%" height="15" fill="rgb(226,50,48)" fg:x="52299" fg:w="1762"/><text x="18.0110%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,762 samples, 0.60%)</title><rect x="17.7610%" y="645" width="0.5984%" height="15" fill="rgb(243,81,16)" fg:x="52299" fg:w="1762"/><text x="18.0110%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (733 samples, 0.25%)</title><rect x="18.1105%" y="629" width="0.2489%" height="15" fill="rgb(250,14,2)" fg:x="53328" fg:w="733"/><text x="18.3605%" y="639.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (732 samples, 0.25%)</title><rect x="18.1108%" y="613" width="0.2486%" height="15" fill="rgb(233,135,29)" fg:x="53329" fg:w="732"/><text x="18.3608%" y="623.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (11,052 samples, 3.75%)</title><rect x="14.6068%" y="757" width="3.7533%" height="15" fill="rgb(224,64,43)" fg:x="43011" fg:w="11052"/><text x="14.8568%" y="767.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,052 samples, 3.75%)</title><rect x="14.6068%" y="741" width="3.7533%" height="15" fill="rgb(238,84,13)" fg:x="43011" fg:w="11052"/><text x="14.8568%" y="751.50">&lt;cor..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (11,052 samples, 3.75%)</title><rect x="14.6068%" y="725" width="3.7533%" height="15" fill="rgb(253,48,26)" fg:x="43011" fg:w="11052"/><text x="14.8568%" y="735.50">zeno..</text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (1,957 samples, 0.66%)</title><rect x="17.6955%" y="709" width="0.6646%" height="15" fill="rgb(205,223,31)" fg:x="52106" fg:w="1957"/><text x="17.9455%" y="719.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::is_empty (1,890 samples, 0.64%)</title><rect x="17.7183%" y="693" width="0.6419%" height="15" fill="rgb(221,41,32)" fg:x="52173" fg:w="1890"/><text x="17.9683%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="1125" width="3.7605%" height="15" fill="rgb(213,158,31)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1135.50">&lt;cor..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="1109" width="3.7605%" height="15" fill="rgb(245,126,43)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1119.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="1093" width="3.7605%" height="15" fill="rgb(227,7,22)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1103.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="1077" width="3.7605%" height="15" fill="rgb(252,90,44)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1087.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="1061" width="3.7605%" height="15" fill="rgb(253,91,0)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1071.50">&lt;fut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="1045" width="3.7605%" height="15" fill="rgb(252,175,49)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1055.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,073 samples, 3.76%)</title><rect x="14.6068%" y="1029" width="3.7605%" height="15" fill="rgb(246,150,1)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1039.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,073 samples, 3.76%)</title><rect x="14.6068%" y="1013" width="3.7605%" height="15" fill="rgb(241,192,25)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1023.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,073 samples, 3.76%)</title><rect x="14.6068%" y="997" width="3.7605%" height="15" fill="rgb(239,187,11)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="1007.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="981" width="3.7605%" height="15" fill="rgb(218,202,51)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="991.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="965" width="3.7605%" height="15" fill="rgb(225,176,8)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="975.50">&lt;asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="949" width="3.7605%" height="15" fill="rgb(219,122,41)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="959.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="933" width="3.7605%" height="15" fill="rgb(248,140,20)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="943.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="917" width="3.7605%" height="15" fill="rgb(245,41,37)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="927.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="901" width="3.7605%" height="15" fill="rgb(235,82,39)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="911.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="885" width="3.7605%" height="15" fill="rgb(230,108,42)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="895.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,073 samples, 3.76%)</title><rect x="14.6068%" y="869" width="3.7605%" height="15" fill="rgb(215,150,50)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="879.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="853" width="3.7605%" height="15" fill="rgb(233,212,5)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="863.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="837" width="3.7605%" height="15" fill="rgb(245,80,22)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="847.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="821" width="3.7605%" height="15" fill="rgb(238,129,16)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="831.50">&lt;cor..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="805" width="3.7605%" height="15" fill="rgb(240,19,0)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="815.50">zeno..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,073 samples, 3.76%)</title><rect x="14.6068%" y="789" width="3.7605%" height="15" fill="rgb(232,42,35)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="799.50">&lt;cor..</text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (11,073 samples, 3.76%)</title><rect x="14.6068%" y="773" width="3.7605%" height="15" fill="rgb(223,130,24)" fg:x="43011" fg:w="11073"/><text x="14.8568%" y="783.50">zeno..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (11,078 samples, 3.76%)</title><rect x="14.6068%" y="1189" width="3.7622%" height="15" fill="rgb(237,16,22)" fg:x="43011" fg:w="11078"/><text x="14.8568%" y="1199.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on (11,078 samples, 3.76%)</title><rect x="14.6068%" y="1173" width="3.7622%" height="15" fill="rgb(248,192,20)" fg:x="43011" fg:w="11078"/><text x="14.8568%" y="1183.50">asyn..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,078 samples, 3.76%)</title><rect x="14.6068%" y="1157" width="3.7622%" height="15" fill="rgb(233,167,2)" fg:x="43011" fg:w="11078"/><text x="14.8568%" y="1167.50">asyn..</text></g><g><title>async_io::driver::block_on (11,078 samples, 3.76%)</title><rect x="14.6068%" y="1141" width="3.7622%" height="15" fill="rgb(252,71,44)" fg:x="43011" fg:w="11078"/><text x="14.8568%" y="1151.50">asyn..</text></g><g><title>zenoh_buffers::zbuf::ZBuf::copy_bytes (64 samples, 0.02%)</title><rect x="18.3801%" y="597" width="0.0217%" height="15" fill="rgb(238,37,47)" fg:x="54122" fg:w="64"/><text x="18.6301%" y="607.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_exact (86 samples, 0.03%)</title><rect x="18.3730%" y="613" width="0.0292%" height="15" fill="rgb(214,202,54)" fg:x="54101" fg:w="86"/><text x="18.6230%" y="623.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;usize,R&gt;&gt;::read (34 samples, 0.01%)</title><rect x="18.4022%" y="613" width="0.0115%" height="15" fill="rgb(254,165,40)" fg:x="54187" fg:w="34"/><text x="18.6522%" y="623.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (31 samples, 0.01%)</title><rect x="18.4032%" y="597" width="0.0105%" height="15" fill="rgb(246,173,38)" fg:x="54190" fg:w="31"/><text x="18.6532%" y="607.50"></text></g><g><title>[libc.so.6] (44 samples, 0.01%)</title><rect x="18.4392%" y="485" width="0.0149%" height="15" fill="rgb(215,3,27)" fg:x="54296" fg:w="44"/><text x="18.6892%" y="495.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;u8&gt;,R&gt;&gt;::read (255 samples, 0.09%)</title><rect x="18.3689%" y="629" width="0.0866%" height="15" fill="rgb(239,169,51)" fg:x="54089" fg:w="255"/><text x="18.6189%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (123 samples, 0.04%)</title><rect x="18.4138%" y="613" width="0.0418%" height="15" fill="rgb(212,5,25)" fg:x="54221" fg:w="123"/><text x="18.6638%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (123 samples, 0.04%)</title><rect x="18.4138%" y="597" width="0.0418%" height="15" fill="rgb(243,45,17)" fg:x="54221" fg:w="123"/><text x="18.6638%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (121 samples, 0.04%)</title><rect x="18.4144%" y="581" width="0.0411%" height="15" fill="rgb(242,97,9)" fg:x="54223" fg:w="121"/><text x="18.6644%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (121 samples, 0.04%)</title><rect x="18.4144%" y="565" width="0.0411%" height="15" fill="rgb(228,71,31)" fg:x="54223" fg:w="121"/><text x="18.6644%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (120 samples, 0.04%)</title><rect x="18.4148%" y="549" width="0.0408%" height="15" fill="rgb(252,184,16)" fg:x="54224" fg:w="120"/><text x="18.6648%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (120 samples, 0.04%)</title><rect x="18.4148%" y="533" width="0.0408%" height="15" fill="rgb(236,169,46)" fg:x="54224" fg:w="120"/><text x="18.6648%" y="543.50"></text></g><g><title>alloc::alloc::alloc (118 samples, 0.04%)</title><rect x="18.4155%" y="517" width="0.0401%" height="15" fill="rgb(207,17,47)" fg:x="54226" fg:w="118"/><text x="18.6655%" y="527.50"></text></g><g><title>malloc (103 samples, 0.03%)</title><rect x="18.4206%" y="501" width="0.0350%" height="15" fill="rgb(206,201,28)" fg:x="54241" fg:w="103"/><text x="18.6706%" y="511.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (279 samples, 0.09%)</title><rect x="18.3689%" y="645" width="0.0948%" height="15" fill="rgb(224,184,23)" fg:x="54089" fg:w="279"/><text x="18.6189%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (94 samples, 0.03%)</title><rect x="18.4637%" y="597" width="0.0319%" height="15" fill="rgb(208,139,48)" fg:x="54368" fg:w="94"/><text x="18.7137%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (94 samples, 0.03%)</title><rect x="18.4637%" y="581" width="0.0319%" height="15" fill="rgb(208,130,10)" fg:x="54368" fg:w="94"/><text x="18.7137%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (94 samples, 0.03%)</title><rect x="18.4637%" y="565" width="0.0319%" height="15" fill="rgb(211,213,45)" fg:x="54368" fg:w="94"/><text x="18.7137%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (89 samples, 0.03%)</title><rect x="18.4654%" y="549" width="0.0302%" height="15" fill="rgb(235,100,30)" fg:x="54373" fg:w="89"/><text x="18.7154%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (89 samples, 0.03%)</title><rect x="18.4654%" y="533" width="0.0302%" height="15" fill="rgb(206,144,31)" fg:x="54373" fg:w="89"/><text x="18.7154%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (72 samples, 0.02%)</title><rect x="18.4712%" y="517" width="0.0245%" height="15" fill="rgb(224,200,26)" fg:x="54390" fg:w="72"/><text x="18.7212%" y="527.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (43 samples, 0.01%)</title><rect x="18.4810%" y="501" width="0.0146%" height="15" fill="rgb(247,104,53)" fg:x="54419" fg:w="43"/><text x="18.7310%" y="511.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str::{{closure}} (43 samples, 0.01%)</title><rect x="18.4810%" y="485" width="0.0146%" height="15" fill="rgb(220,14,17)" fg:x="54419" fg:w="43"/><text x="18.7310%" y="495.50"></text></g><g><title>zenoh_protocol_core::split_once (38 samples, 0.01%)</title><rect x="18.4827%" y="469" width="0.0129%" height="15" fill="rgb(230,140,40)" fg:x="54424" fg:w="38"/><text x="18.7327%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (101 samples, 0.03%)</title><rect x="18.4637%" y="629" width="0.0343%" height="15" fill="rgb(229,2,41)" fg:x="54368" fg:w="101"/><text x="18.7137%" y="639.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str (101 samples, 0.03%)</title><rect x="18.4637%" y="613" width="0.0343%" height="15" fill="rgb(232,89,16)" fg:x="54368" fg:w="101"/><text x="18.7137%" y="623.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (443 samples, 0.15%)</title><rect x="18.3689%" y="853" width="0.1504%" height="15" fill="rgb(247,59,52)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (443 samples, 0.15%)</title><rect x="18.3689%" y="837" width="0.1504%" height="15" fill="rgb(226,110,21)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="847.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (443 samples, 0.15%)</title><rect x="18.3689%" y="821" width="0.1504%" height="15" fill="rgb(224,176,43)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (443 samples, 0.15%)</title><rect x="18.3689%" y="805" width="0.1504%" height="15" fill="rgb(221,73,6)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="815.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (443 samples, 0.15%)</title><rect x="18.3689%" y="789" width="0.1504%" height="15" fill="rgb(232,78,19)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="799.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (443 samples, 0.15%)</title><rect x="18.3689%" y="773" width="0.1504%" height="15" fill="rgb(233,112,48)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="783.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (443 samples, 0.15%)</title><rect x="18.3689%" y="757" width="0.1504%" height="15" fill="rgb(243,131,47)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="767.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (443 samples, 0.15%)</title><rect x="18.3689%" y="741" width="0.1504%" height="15" fill="rgb(226,51,1)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="751.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (443 samples, 0.15%)</title><rect x="18.3689%" y="725" width="0.1504%" height="15" fill="rgb(247,58,7)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="735.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (443 samples, 0.15%)</title><rect x="18.3689%" y="709" width="0.1504%" height="15" fill="rgb(209,7,32)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="719.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (443 samples, 0.15%)</title><rect x="18.3689%" y="693" width="0.1504%" height="15" fill="rgb(209,39,41)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="703.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (443 samples, 0.15%)</title><rect x="18.3689%" y="677" width="0.1504%" height="15" fill="rgb(226,182,46)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="687.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;zenoh_protocol_core::locators::Locator,R&gt;&gt;::read (443 samples, 0.15%)</title><rect x="18.3689%" y="661" width="0.1504%" height="15" fill="rgb(230,219,10)" fg:x="54089" fg:w="443"/><text x="18.6189%" y="671.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (164 samples, 0.06%)</title><rect x="18.4637%" y="645" width="0.0557%" height="15" fill="rgb(227,175,30)" fg:x="54368" fg:w="164"/><text x="18.7137%" y="655.50"></text></g><g><title>zenoh_protocol_core::split_once (63 samples, 0.02%)</title><rect x="18.4980%" y="629" width="0.0214%" height="15" fill="rgb(217,2,50)" fg:x="54469" fg:w="63"/><text x="18.7480%" y="639.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (63 samples, 0.02%)</title><rect x="18.4980%" y="613" width="0.0214%" height="15" fill="rgb(229,160,0)" fg:x="54469" fg:w="63"/><text x="18.7480%" y="623.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (63 samples, 0.02%)</title><rect x="18.4980%" y="597" width="0.0214%" height="15" fill="rgb(207,78,37)" fg:x="54469" fg:w="63"/><text x="18.7480%" y="607.50"></text></g><g><title>core::slice::memchr::memchr (47 samples, 0.02%)</title><rect x="18.5034%" y="581" width="0.0160%" height="15" fill="rgb(225,57,0)" fg:x="54485" fg:w="47"/><text x="18.7534%" y="591.50"></text></g><g><title>core::slice::memchr::memchr_general_case (40 samples, 0.01%)</title><rect x="18.5058%" y="565" width="0.0136%" height="15" fill="rgb(232,154,2)" fg:x="54492" fg:w="40"/><text x="18.7558%" y="575.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (56 samples, 0.02%)</title><rect x="18.5194%" y="725" width="0.0190%" height="15" fill="rgb(241,212,25)" fg:x="54532" fg:w="56"/><text x="18.7694%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (36 samples, 0.01%)</title><rect x="18.5384%" y="645" width="0.0122%" height="15" fill="rgb(226,69,20)" fg:x="54588" fg:w="36"/><text x="18.7884%" y="655.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (36 samples, 0.01%)</title><rect x="18.5384%" y="629" width="0.0122%" height="15" fill="rgb(247,184,54)" fg:x="54588" fg:w="36"/><text x="18.7884%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (48 samples, 0.02%)</title><rect x="18.5384%" y="693" width="0.0163%" height="15" fill="rgb(210,145,0)" fg:x="54588" fg:w="48"/><text x="18.7884%" y="703.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (48 samples, 0.02%)</title><rect x="18.5384%" y="677" width="0.0163%" height="15" fill="rgb(253,82,12)" fg:x="54588" fg:w="48"/><text x="18.7884%" y="687.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (48 samples, 0.02%)</title><rect x="18.5384%" y="661" width="0.0163%" height="15" fill="rgb(245,42,11)" fg:x="54588" fg:w="48"/><text x="18.7884%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (132 samples, 0.04%)</title><rect x="18.5194%" y="757" width="0.0448%" height="15" fill="rgb(219,147,32)" fg:x="54532" fg:w="132"/><text x="18.7694%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (132 samples, 0.04%)</title><rect x="18.5194%" y="741" width="0.0448%" height="15" fill="rgb(246,12,7)" fg:x="54532" fg:w="132"/><text x="18.7694%" y="751.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (76 samples, 0.03%)</title><rect x="18.5384%" y="725" width="0.0258%" height="15" fill="rgb(243,50,9)" fg:x="54588" fg:w="76"/><text x="18.7884%" y="735.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (76 samples, 0.03%)</title><rect x="18.5384%" y="709" width="0.0258%" height="15" fill="rgb(219,149,6)" fg:x="54588" fg:w="76"/><text x="18.7884%" y="719.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (136 samples, 0.05%)</title><rect x="18.5194%" y="773" width="0.0462%" height="15" fill="rgb(241,51,42)" fg:x="54532" fg:w="136"/><text x="18.7694%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (159 samples, 0.05%)</title><rect x="18.5194%" y="789" width="0.0540%" height="15" fill="rgb(226,128,27)" fg:x="54532" fg:w="159"/><text x="18.7694%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (604 samples, 0.21%)</title><rect x="18.3689%" y="869" width="0.2051%" height="15" fill="rgb(244,144,4)" fg:x="54089" fg:w="604"/><text x="18.6189%" y="879.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (161 samples, 0.05%)</title><rect x="18.5194%" y="853" width="0.0547%" height="15" fill="rgb(221,4,13)" fg:x="54532" fg:w="161"/><text x="18.7694%" y="863.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (161 samples, 0.05%)</title><rect x="18.5194%" y="837" width="0.0547%" height="15" fill="rgb(208,170,28)" fg:x="54532" fg:w="161"/><text x="18.7694%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (161 samples, 0.05%)</title><rect x="18.5194%" y="821" width="0.0547%" height="15" fill="rgb(226,131,13)" fg:x="54532" fg:w="161"/><text x="18.7694%" y="831.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (161 samples, 0.05%)</title><rect x="18.5194%" y="805" width="0.0547%" height="15" fill="rgb(215,72,41)" fg:x="54532" fg:w="161"/><text x="18.7694%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (40 samples, 0.01%)</title><rect x="18.5744%" y="549" width="0.0136%" height="15" fill="rgb(243,108,20)" fg:x="54694" fg:w="40"/><text x="18.8244%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (40 samples, 0.01%)</title><rect x="18.5744%" y="533" width="0.0136%" height="15" fill="rgb(230,189,17)" fg:x="54694" fg:w="40"/><text x="18.8244%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.01%)</title><rect x="18.5744%" y="517" width="0.0136%" height="15" fill="rgb(220,50,17)" fg:x="54694" fg:w="40"/><text x="18.8244%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.01%)</title><rect x="18.5744%" y="501" width="0.0136%" height="15" fill="rgb(248,152,48)" fg:x="54694" fg:w="40"/><text x="18.8244%" y="511.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.01%)</title><rect x="18.5744%" y="485" width="0.0136%" height="15" fill="rgb(244,91,11)" fg:x="54694" fg:w="40"/><text x="18.8244%" y="495.50"></text></g><g><title>malloc (40 samples, 0.01%)</title><rect x="18.5744%" y="469" width="0.0136%" height="15" fill="rgb(220,157,5)" fg:x="54694" fg:w="40"/><text x="18.8244%" y="479.50"></text></g><g><title>[libc.so.6] (40 samples, 0.01%)</title><rect x="18.5744%" y="453" width="0.0136%" height="15" fill="rgb(253,137,8)" fg:x="54694" fg:w="40"/><text x="18.8244%" y="463.50"></text></g><g><title>polling::Poller::add (133 samples, 0.05%)</title><rect x="18.5880%" y="549" width="0.0452%" height="15" fill="rgb(217,137,51)" fg:x="54734" fg:w="133"/><text x="18.8380%" y="559.50"></text></g><g><title>polling::epoll::Poller::add (133 samples, 0.05%)</title><rect x="18.5880%" y="533" width="0.0452%" height="15" fill="rgb(218,209,53)" fg:x="54734" fg:w="133"/><text x="18.8380%" y="543.50"></text></g><g><title>polling::epoll::Poller::ctl (133 samples, 0.05%)</title><rect x="18.5880%" y="517" width="0.0452%" height="15" fill="rgb(249,137,25)" fg:x="54734" fg:w="133"/><text x="18.8380%" y="527.50"></text></g><g><title>epoll_ctl (132 samples, 0.04%)</title><rect x="18.5883%" y="501" width="0.0448%" height="15" fill="rgb(239,155,26)" fg:x="54735" fg:w="132"/><text x="18.8383%" y="511.50"></text></g><g><title>[unknown] (130 samples, 0.04%)</title><rect x="18.5890%" y="485" width="0.0441%" height="15" fill="rgb(227,85,46)" fg:x="54737" fg:w="130"/><text x="18.8390%" y="495.50"></text></g><g><title>[unknown] (130 samples, 0.04%)</title><rect x="18.5890%" y="469" width="0.0441%" height="15" fill="rgb(251,107,43)" fg:x="54737" fg:w="130"/><text x="18.8390%" y="479.50"></text></g><g><title>[unknown] (128 samples, 0.04%)</title><rect x="18.5897%" y="453" width="0.0435%" height="15" fill="rgb(234,170,33)" fg:x="54739" fg:w="128"/><text x="18.8397%" y="463.50"></text></g><g><title>[unknown] (128 samples, 0.04%)</title><rect x="18.5897%" y="437" width="0.0435%" height="15" fill="rgb(206,29,35)" fg:x="54739" fg:w="128"/><text x="18.8397%" y="447.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="18.6128%" y="421" width="0.0204%" height="15" fill="rgb(227,138,25)" fg:x="54807" fg:w="60"/><text x="18.8628%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (187 samples, 0.06%)</title><rect x="18.5741%" y="645" width="0.0635%" height="15" fill="rgb(249,131,35)" fg:x="54693" fg:w="187"/><text x="18.8241%" y="655.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (187 samples, 0.06%)</title><rect x="18.5741%" y="629" width="0.0635%" height="15" fill="rgb(239,6,40)" fg:x="54693" fg:w="187"/><text x="18.8241%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (187 samples, 0.06%)</title><rect x="18.5741%" y="613" width="0.0635%" height="15" fill="rgb(246,136,47)" fg:x="54693" fg:w="187"/><text x="18.8241%" y="623.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (187 samples, 0.06%)</title><rect x="18.5741%" y="597" width="0.0635%" height="15" fill="rgb(253,58,26)" fg:x="54693" fg:w="187"/><text x="18.8241%" y="607.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (186 samples, 0.06%)</title><rect x="18.5744%" y="581" width="0.0632%" height="15" fill="rgb(237,141,10)" fg:x="54694" fg:w="186"/><text x="18.8244%" y="591.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (186 samples, 0.06%)</title><rect x="18.5744%" y="565" width="0.0632%" height="15" fill="rgb(234,156,12)" fg:x="54694" fg:w="186"/><text x="18.8244%" y="575.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (802 samples, 0.27%)</title><rect x="18.3689%" y="1189" width="0.2724%" height="15" fill="rgb(243,224,36)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1199.50"></text></g><g><title>async_global_executor::reactor::block_on (802 samples, 0.27%)</title><rect x="18.3689%" y="1173" width="0.2724%" height="15" fill="rgb(205,229,51)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1183.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (802 samples, 0.27%)</title><rect x="18.3689%" y="1157" width="0.2724%" height="15" fill="rgb(223,189,4)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1167.50"></text></g><g><title>async_io::driver::block_on (802 samples, 0.27%)</title><rect x="18.3689%" y="1141" width="0.2724%" height="15" fill="rgb(249,167,54)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (802 samples, 0.27%)</title><rect x="18.3689%" y="1125" width="0.2724%" height="15" fill="rgb(218,34,28)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (802 samples, 0.27%)</title><rect x="18.3689%" y="1109" width="0.2724%" height="15" fill="rgb(232,109,42)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (802 samples, 0.27%)</title><rect x="18.3689%" y="1093" width="0.2724%" height="15" fill="rgb(248,214,46)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1103.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (802 samples, 0.27%)</title><rect x="18.3689%" y="1077" width="0.2724%" height="15" fill="rgb(244,216,40)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (802 samples, 0.27%)</title><rect x="18.3689%" y="1061" width="0.2724%" height="15" fill="rgb(231,226,31)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1071.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (802 samples, 0.27%)</title><rect x="18.3689%" y="1045" width="0.2724%" height="15" fill="rgb(238,38,43)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (802 samples, 0.27%)</title><rect x="18.3689%" y="1029" width="0.2724%" height="15" fill="rgb(208,88,43)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (802 samples, 0.27%)</title><rect x="18.3689%" y="1013" width="0.2724%" height="15" fill="rgb(205,136,37)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (802 samples, 0.27%)</title><rect x="18.3689%" y="997" width="0.2724%" height="15" fill="rgb(237,34,14)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="1007.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (802 samples, 0.27%)</title><rect x="18.3689%" y="981" width="0.2724%" height="15" fill="rgb(236,193,44)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="991.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (802 samples, 0.27%)</title><rect x="18.3689%" y="965" width="0.2724%" height="15" fill="rgb(231,48,10)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (802 samples, 0.27%)</title><rect x="18.3689%" y="949" width="0.2724%" height="15" fill="rgb(213,141,34)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (802 samples, 0.27%)</title><rect x="18.3689%" y="933" width="0.2724%" height="15" fill="rgb(249,130,34)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (802 samples, 0.27%)</title><rect x="18.3689%" y="917" width="0.2724%" height="15" fill="rgb(219,42,41)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (802 samples, 0.27%)</title><rect x="18.3689%" y="901" width="0.2724%" height="15" fill="rgb(224,100,54)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="911.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (802 samples, 0.27%)</title><rect x="18.3689%" y="885" width="0.2724%" height="15" fill="rgb(229,200,27)" fg:x="54089" fg:w="802"/><text x="18.6189%" y="895.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (198 samples, 0.07%)</title><rect x="18.5741%" y="869" width="0.0672%" height="15" fill="rgb(217,118,10)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (198 samples, 0.07%)</title><rect x="18.5741%" y="853" width="0.0672%" height="15" fill="rgb(206,22,3)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="863.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (198 samples, 0.07%)</title><rect x="18.5741%" y="837" width="0.0672%" height="15" fill="rgb(232,163,46)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (198 samples, 0.07%)</title><rect x="18.5741%" y="821" width="0.0672%" height="15" fill="rgb(206,95,13)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="831.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (198 samples, 0.07%)</title><rect x="18.5741%" y="805" width="0.0672%" height="15" fill="rgb(253,154,18)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (198 samples, 0.07%)</title><rect x="18.5741%" y="789" width="0.0672%" height="15" fill="rgb(219,32,23)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="799.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (198 samples, 0.07%)</title><rect x="18.5741%" y="773" width="0.0672%" height="15" fill="rgb(230,191,45)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (198 samples, 0.07%)</title><rect x="18.5741%" y="757" width="0.0672%" height="15" fill="rgb(229,64,36)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="767.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (198 samples, 0.07%)</title><rect x="18.5741%" y="741" width="0.0672%" height="15" fill="rgb(205,129,25)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (198 samples, 0.07%)</title><rect x="18.5741%" y="725" width="0.0672%" height="15" fill="rgb(254,112,7)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="735.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (198 samples, 0.07%)</title><rect x="18.5741%" y="709" width="0.0672%" height="15" fill="rgb(226,53,48)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (198 samples, 0.07%)</title><rect x="18.5741%" y="693" width="0.0672%" height="15" fill="rgb(214,153,38)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (198 samples, 0.07%)</title><rect x="18.5741%" y="677" width="0.0672%" height="15" fill="rgb(243,101,7)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="687.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (198 samples, 0.07%)</title><rect x="18.5741%" y="661" width="0.0672%" height="15" fill="rgb(240,140,22)" fg:x="54693" fg:w="198"/><text x="18.8241%" y="671.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (34 samples, 0.01%)</title><rect x="18.7979%" y="613" width="0.0115%" height="15" fill="rgb(235,114,2)" fg:x="55352" fg:w="34"/><text x="19.0479%" y="623.50"></text></g><g><title>[libc.so.6] (34 samples, 0.01%)</title><rect x="18.7979%" y="597" width="0.0115%" height="15" fill="rgb(242,59,12)" fg:x="55352" fg:w="34"/><text x="19.0479%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (36 samples, 0.01%)</title><rect x="18.8094%" y="613" width="0.0122%" height="15" fill="rgb(252,134,9)" fg:x="55386" fg:w="36"/><text x="19.0594%" y="623.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (58 samples, 0.02%)</title><rect x="18.8502%" y="597" width="0.0197%" height="15" fill="rgb(236,4,44)" fg:x="55506" fg:w="58"/><text x="19.1002%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.01%)</title><rect x="18.8699%" y="597" width="0.0119%" height="15" fill="rgb(254,172,41)" fg:x="55564" fg:w="35"/><text x="19.1199%" y="607.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (178 samples, 0.06%)</title><rect x="18.8216%" y="613" width="0.0604%" height="15" fill="rgb(244,63,20)" fg:x="55422" fg:w="178"/><text x="19.0716%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (58 samples, 0.02%)</title><rect x="18.8855%" y="613" width="0.0197%" height="15" fill="rgb(250,73,31)" fg:x="55610" fg:w="58"/><text x="19.1355%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.02%)</title><rect x="18.8855%" y="597" width="0.0197%" height="15" fill="rgb(241,38,36)" fg:x="55610" fg:w="58"/><text x="19.1355%" y="607.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all (67 samples, 0.02%)</title><rect x="18.9052%" y="613" width="0.0228%" height="15" fill="rgb(245,211,2)" fg:x="55668" fg:w="67"/><text x="19.1552%" y="623.50"></text></g><g><title>[libc.so.6] (62 samples, 0.02%)</title><rect x="18.9320%" y="581" width="0.0211%" height="15" fill="rgb(206,120,28)" fg:x="55747" fg:w="62"/><text x="19.1820%" y="591.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (113 samples, 0.04%)</title><rect x="18.9286%" y="613" width="0.0384%" height="15" fill="rgb(211,59,34)" fg:x="55737" fg:w="113"/><text x="19.1786%" y="623.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (113 samples, 0.04%)</title><rect x="18.9286%" y="597" width="0.0384%" height="15" fill="rgb(233,168,5)" fg:x="55737" fg:w="113"/><text x="19.1786%" y="607.50"></text></g><g><title>async_std::utils::timer_after (41 samples, 0.01%)</title><rect x="18.9531%" y="581" width="0.0139%" height="15" fill="rgb(234,33,13)" fg:x="55809" fg:w="41"/><text x="19.2031%" y="591.50"></text></g><g><title>async_io::Timer::after (31 samples, 0.01%)</title><rect x="18.9565%" y="565" width="0.0105%" height="15" fill="rgb(231,150,26)" fg:x="55819" fg:w="31"/><text x="19.2065%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}}&gt;&gt;&gt; (45 samples, 0.02%)</title><rect x="18.9670%" y="613" width="0.0153%" height="15" fill="rgb(217,191,4)" fg:x="55850" fg:w="45"/><text x="19.2170%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (825 samples, 0.28%)</title><rect x="18.7082%" y="645" width="0.2802%" height="15" fill="rgb(246,198,38)" fg:x="55088" fg:w="825"/><text x="18.9582%" y="655.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (821 samples, 0.28%)</title><rect x="18.7096%" y="629" width="0.2788%" height="15" fill="rgb(245,64,37)" fg:x="55092" fg:w="821"/><text x="18.9596%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (906 samples, 0.31%)</title><rect x="18.6824%" y="677" width="0.3077%" height="15" fill="rgb(250,30,36)" fg:x="55012" fg:w="906"/><text x="18.9324%" y="687.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (903 samples, 0.31%)</title><rect x="18.6834%" y="661" width="0.3067%" height="15" fill="rgb(217,86,53)" fg:x="55015" fg:w="903"/><text x="18.9334%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,036 samples, 0.35%)</title><rect x="18.6413%" y="981" width="0.3518%" height="15" fill="rgb(228,157,16)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,036 samples, 0.35%)</title><rect x="18.6413%" y="965" width="0.3518%" height="15" fill="rgb(217,59,31)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,036 samples, 0.35%)</title><rect x="18.6413%" y="949" width="0.3518%" height="15" fill="rgb(237,138,41)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="959.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,036 samples, 0.35%)</title><rect x="18.6413%" y="933" width="0.3518%" height="15" fill="rgb(227,91,49)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="943.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,036 samples, 0.35%)</title><rect x="18.6413%" y="917" width="0.3518%" height="15" fill="rgb(247,21,44)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,036 samples, 0.35%)</title><rect x="18.6413%" y="901" width="0.3518%" height="15" fill="rgb(219,210,51)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,036 samples, 0.35%)</title><rect x="18.6413%" y="885" width="0.3518%" height="15" fill="rgb(209,140,6)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,036 samples, 0.35%)</title><rect x="18.6413%" y="869" width="0.3518%" height="15" fill="rgb(221,188,24)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,036 samples, 0.35%)</title><rect x="18.6413%" y="853" width="0.3518%" height="15" fill="rgb(232,154,20)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,036 samples, 0.35%)</title><rect x="18.6413%" y="837" width="0.3518%" height="15" fill="rgb(244,137,50)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="847.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,036 samples, 0.35%)</title><rect x="18.6413%" y="821" width="0.3518%" height="15" fill="rgb(225,185,43)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,036 samples, 0.35%)</title><rect x="18.6413%" y="805" width="0.3518%" height="15" fill="rgb(213,205,38)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,036 samples, 0.35%)</title><rect x="18.6413%" y="789" width="0.3518%" height="15" fill="rgb(236,73,12)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,036 samples, 0.35%)</title><rect x="18.6413%" y="773" width="0.3518%" height="15" fill="rgb(235,219,13)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,036 samples, 0.35%)</title><rect x="18.6413%" y="757" width="0.3518%" height="15" fill="rgb(218,59,36)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,036 samples, 0.35%)</title><rect x="18.6413%" y="741" width="0.3518%" height="15" fill="rgb(205,110,39)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,036 samples, 0.35%)</title><rect x="18.6413%" y="725" width="0.3518%" height="15" fill="rgb(218,206,42)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,036 samples, 0.35%)</title><rect x="18.6413%" y="709" width="0.3518%" height="15" fill="rgb(248,125,24)" fg:x="54891" fg:w="1036"/><text x="18.8913%" y="719.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,031 samples, 0.35%)</title><rect x="18.6430%" y="693" width="0.3501%" height="15" fill="rgb(242,28,27)" fg:x="54896" fg:w="1031"/><text x="18.8930%" y="703.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1189" width="0.3539%" height="15" fill="rgb(216,228,15)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1199.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1173" width="0.3539%" height="15" fill="rgb(235,116,46)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1157" width="0.3539%" height="15" fill="rgb(224,18,32)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1141" width="0.3539%" height="15" fill="rgb(252,5,12)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1125" width="0.3539%" height="15" fill="rgb(251,36,5)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1109" width="0.3539%" height="15" fill="rgb(217,53,14)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1119.50"></text></g><g><title>async_global_executor::executor::block_on (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1093" width="0.3539%" height="15" fill="rgb(215,86,45)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1077" width="0.3539%" height="15" fill="rgb(242,169,11)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1061" width="0.3539%" height="15" fill="rgb(211,213,45)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1045" width="0.3539%" height="15" fill="rgb(205,88,11)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1055.50"></text></g><g><title>async_global_executor::reactor::block_on (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1029" width="0.3539%" height="15" fill="rgb(252,69,26)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1039.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,042 samples, 0.35%)</title><rect x="18.6413%" y="1013" width="0.3539%" height="15" fill="rgb(246,123,37)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1023.50"></text></g><g><title>async_io::driver::block_on (1,042 samples, 0.35%)</title><rect x="18.6413%" y="997" width="0.3539%" height="15" fill="rgb(212,205,5)" fg:x="54891" fg:w="1042"/><text x="18.8913%" y="1007.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (43 samples, 0.01%)</title><rect x="19.0128%" y="629" width="0.0146%" height="15" fill="rgb(253,148,0)" fg:x="55985" fg:w="43"/><text x="19.2628%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (43 samples, 0.01%)</title><rect x="19.0128%" y="613" width="0.0146%" height="15" fill="rgb(239,22,4)" fg:x="55985" fg:w="43"/><text x="19.2628%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::get (51 samples, 0.02%)</title><rect x="19.0274%" y="629" width="0.0173%" height="15" fill="rgb(226,26,53)" fg:x="56028" fg:w="51"/><text x="19.2774%" y="639.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (51 samples, 0.02%)</title><rect x="19.0274%" y="613" width="0.0173%" height="15" fill="rgb(225,229,45)" fg:x="56028" fg:w="51"/><text x="19.2774%" y="623.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (51 samples, 0.02%)</title><rect x="19.0274%" y="597" width="0.0173%" height="15" fill="rgb(220,60,37)" fg:x="56028" fg:w="51"/><text x="19.2774%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (51 samples, 0.02%)</title><rect x="19.0274%" y="581" width="0.0173%" height="15" fill="rgb(217,180,35)" fg:x="56028" fg:w="51"/><text x="19.2774%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (51 samples, 0.02%)</title><rect x="19.0274%" y="565" width="0.0173%" height="15" fill="rgb(229,7,53)" fg:x="56028" fg:w="51"/><text x="19.2774%" y="575.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (51 samples, 0.02%)</title><rect x="19.0274%" y="549" width="0.0173%" height="15" fill="rgb(254,137,3)" fg:x="56028" fg:w="51"/><text x="19.2774%" y="559.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (50 samples, 0.02%)</title><rect x="19.0278%" y="533" width="0.0170%" height="15" fill="rgb(215,140,41)" fg:x="56029" fg:w="50"/><text x="19.2778%" y="543.50"></text></g><g><title>async_io::reactor::Reactor::notify (493 samples, 0.17%)</title><rect x="19.0499%" y="613" width="0.1674%" height="15" fill="rgb(250,80,15)" fg:x="56094" fg:w="493"/><text x="19.2999%" y="623.50"></text></g><g><title>polling::Poller::notify (488 samples, 0.17%)</title><rect x="19.0515%" y="597" width="0.1657%" height="15" fill="rgb(252,191,6)" fg:x="56099" fg:w="488"/><text x="19.3015%" y="607.50"></text></g><g><title>polling::epoll::Poller::notify (364 samples, 0.12%)</title><rect x="19.0937%" y="581" width="0.1236%" height="15" fill="rgb(246,217,18)" fg:x="56223" fg:w="364"/><text x="19.3437%" y="591.50"></text></g><g><title>write (361 samples, 0.12%)</title><rect x="19.0947%" y="565" width="0.1226%" height="15" fill="rgb(223,93,7)" fg:x="56226" fg:w="361"/><text x="19.3447%" y="575.50"></text></g><g><title>[unknown] (335 samples, 0.11%)</title><rect x="19.1035%" y="549" width="0.1138%" height="15" fill="rgb(225,55,52)" fg:x="56252" fg:w="335"/><text x="19.3535%" y="559.50"></text></g><g><title>[unknown] (332 samples, 0.11%)</title><rect x="19.1045%" y="533" width="0.1127%" height="15" fill="rgb(240,31,24)" fg:x="56255" fg:w="332"/><text x="19.3545%" y="543.50"></text></g><g><title>[unknown] (328 samples, 0.11%)</title><rect x="19.1059%" y="517" width="0.1114%" height="15" fill="rgb(205,56,52)" fg:x="56259" fg:w="328"/><text x="19.3559%" y="527.50"></text></g><g><title>[unknown] (308 samples, 0.10%)</title><rect x="19.1127%" y="501" width="0.1046%" height="15" fill="rgb(246,146,12)" fg:x="56279" fg:w="308"/><text x="19.3627%" y="511.50"></text></g><g><title>[unknown] (276 samples, 0.09%)</title><rect x="19.1235%" y="485" width="0.0937%" height="15" fill="rgb(239,84,36)" fg:x="56311" fg:w="276"/><text x="19.3735%" y="495.50"></text></g><g><title>[unknown] (188 samples, 0.06%)</title><rect x="19.1534%" y="469" width="0.0638%" height="15" fill="rgb(207,41,40)" fg:x="56399" fg:w="188"/><text x="19.4034%" y="479.50"></text></g><g><title>[unknown] (126 samples, 0.04%)</title><rect x="19.1745%" y="453" width="0.0428%" height="15" fill="rgb(241,179,25)" fg:x="56461" fg:w="126"/><text x="19.4245%" y="463.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="19.1942%" y="437" width="0.0231%" height="15" fill="rgb(210,0,34)" fg:x="56519" fg:w="68"/><text x="19.4442%" y="447.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="19.2034%" y="421" width="0.0139%" height="15" fill="rgb(225,217,29)" fg:x="56546" fg:w="41"/><text x="19.4534%" y="431.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="19.2057%" y="405" width="0.0115%" height="15" fill="rgb(216,191,38)" fg:x="56553" fg:w="34"/><text x="19.4557%" y="415.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="19.2061%" y="389" width="0.0112%" height="15" fill="rgb(232,140,52)" fg:x="56554" fg:w="33"/><text x="19.4561%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (327 samples, 0.11%)</title><rect x="19.2173%" y="613" width="0.1111%" height="15" fill="rgb(223,158,51)" fg:x="56587" fg:w="327"/><text x="19.4673%" y="623.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (306 samples, 0.10%)</title><rect x="19.2244%" y="597" width="0.1039%" height="15" fill="rgb(235,29,51)" fg:x="56608" fg:w="306"/><text x="19.4744%" y="607.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (947 samples, 0.32%)</title><rect x="19.0448%" y="629" width="0.3216%" height="15" fill="rgb(215,181,18)" fg:x="56079" fg:w="947"/><text x="19.2948%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (112 samples, 0.04%)</title><rect x="19.3283%" y="613" width="0.0380%" height="15" fill="rgb(227,125,34)" fg:x="56914" fg:w="112"/><text x="19.5783%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (112 samples, 0.04%)</title><rect x="19.3283%" y="597" width="0.0380%" height="15" fill="rgb(230,197,49)" fg:x="56914" fg:w="112"/><text x="19.5783%" y="607.50"></text></g><g><title>clock_gettime (142 samples, 0.05%)</title><rect x="19.3820%" y="581" width="0.0482%" height="15" fill="rgb(239,141,16)" fg:x="57072" fg:w="142"/><text x="19.6320%" y="591.50"></text></g><g><title>__vdso_clock_gettime (133 samples, 0.05%)</title><rect x="19.3850%" y="565" width="0.0452%" height="15" fill="rgb(225,105,43)" fg:x="57081" fg:w="133"/><text x="19.6350%" y="575.50"></text></g><g><title>[[vdso]] (104 samples, 0.04%)</title><rect x="19.3949%" y="549" width="0.0353%" height="15" fill="rgb(214,131,14)" fg:x="57110" fg:w="104"/><text x="19.6449%" y="559.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (1,269 samples, 0.43%)</title><rect x="18.9996%" y="661" width="0.4310%" height="15" fill="rgb(229,177,11)" fg:x="55946" fg:w="1269"/><text x="19.2496%" y="671.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (1,269 samples, 0.43%)</title><rect x="18.9996%" y="645" width="0.4310%" height="15" fill="rgb(231,180,14)" fg:x="55946" fg:w="1269"/><text x="19.2496%" y="655.50"></text></g><g><title>std::time::Instant::now (157 samples, 0.05%)</title><rect x="19.3772%" y="629" width="0.0533%" height="15" fill="rgb(232,88,2)" fg:x="57058" fg:w="157"/><text x="19.6272%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (144 samples, 0.05%)</title><rect x="19.3816%" y="613" width="0.0489%" height="15" fill="rgb(205,220,8)" fg:x="57071" fg:w="144"/><text x="19.6316%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (144 samples, 0.05%)</title><rect x="19.3816%" y="597" width="0.0489%" height="15" fill="rgb(225,23,53)" fg:x="57071" fg:w="144"/><text x="19.6316%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.01%)</title><rect x="19.4462%" y="645" width="0.0136%" height="15" fill="rgb(213,62,29)" fg:x="57261" fg:w="40"/><text x="19.6962%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="19.7100%" y="613" width="0.0109%" height="15" fill="rgb(227,75,7)" fg:x="58038" fg:w="32"/><text x="19.9600%" y="623.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (170 samples, 0.06%)</title><rect x="20.1736%" y="597" width="0.0577%" height="15" fill="rgb(207,105,14)" fg:x="59403" fg:w="170"/><text x="20.4236%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.01%)</title><rect x="20.2313%" y="597" width="0.0132%" height="15" fill="rgb(245,62,29)" fg:x="59573" fg:w="39"/><text x="20.4813%" y="607.50"></text></g><g><title>async_std::task::sleep::sleep (126 samples, 0.04%)</title><rect x="20.2534%" y="597" width="0.0428%" height="15" fill="rgb(236,202,4)" fg:x="59638" fg:w="126"/><text x="20.5034%" y="607.50"></text></g><g><title>core::future::from_generator (66 samples, 0.02%)</title><rect x="20.2738%" y="581" width="0.0224%" height="15" fill="rgb(250,67,1)" fg:x="59698" fg:w="66"/><text x="20.5238%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::boxed::Box&lt;[zenoh_transport::common::pipeline::StageOut]&gt;&gt;&gt; (119 samples, 0.04%)</title><rect x="20.2996%" y="597" width="0.0404%" height="15" fill="rgb(253,115,44)" fg:x="59774" fg:w="119"/><text x="20.5496%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (119 samples, 0.04%)</title><rect x="20.2996%" y="581" width="0.0404%" height="15" fill="rgb(251,139,18)" fg:x="59774" fg:w="119"/><text x="20.5496%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (96 samples, 0.03%)</title><rect x="20.3074%" y="565" width="0.0326%" height="15" fill="rgb(218,22,32)" fg:x="59797" fg:w="96"/><text x="20.5574%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (96 samples, 0.03%)</title><rect x="20.3074%" y="549" width="0.0326%" height="15" fill="rgb(243,53,5)" fg:x="59797" fg:w="96"/><text x="20.5574%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::pipeline::StageIn&gt;&gt; (68 samples, 0.02%)</title><rect x="20.3400%" y="597" width="0.0231%" height="15" fill="rgb(227,56,16)" fg:x="59893" fg:w="68"/><text x="20.5900%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.02%)</title><rect x="20.3400%" y="581" width="0.0231%" height="15" fill="rgb(245,53,0)" fg:x="59893" fg:w="68"/><text x="20.5900%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (60 samples, 0.02%)</title><rect x="20.3427%" y="565" width="0.0204%" height="15" fill="rgb(216,170,35)" fg:x="59901" fg:w="60"/><text x="20.5927%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (60 samples, 0.02%)</title><rect x="20.3427%" y="549" width="0.0204%" height="15" fill="rgb(211,200,8)" fg:x="59901" fg:w="60"/><text x="20.5927%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.01%)</title><rect x="20.3631%" y="597" width="0.0122%" height="15" fill="rgb(228,204,44)" fg:x="59961" fg:w="36"/><text x="20.6131%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.01%)</title><rect x="20.3631%" y="581" width="0.0122%" height="15" fill="rgb(214,121,17)" fg:x="59961" fg:w="36"/><text x="20.6131%" y="591.50"></text></g><g><title>core::time::&lt;impl core::ops::arith::Mul&lt;core::time::Duration&gt; for u32&gt;::mul (136 samples, 0.05%)</title><rect x="20.3753%" y="597" width="0.0462%" height="15" fill="rgb(233,64,38)" fg:x="59997" fg:w="136"/><text x="20.6253%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (284 samples, 0.10%)</title><rect x="20.4215%" y="597" width="0.0964%" height="15" fill="rgb(253,54,19)" fg:x="60133" fg:w="284"/><text x="20.6715%" y="607.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (69 samples, 0.02%)</title><rect x="20.5180%" y="597" width="0.0234%" height="15" fill="rgb(253,94,18)" fg:x="60417" fg:w="69"/><text x="20.7680%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,649 samples, 0.90%)</title><rect x="19.6846%" y="629" width="0.8996%" height="15" fill="rgb(227,57,52)" fg:x="57963" fg:w="2649"/><text x="19.9346%" y="639.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (2,542 samples, 0.86%)</title><rect x="19.7209%" y="613" width="0.8633%" height="15" fill="rgb(230,228,50)" fg:x="58070" fg:w="2542"/><text x="19.9709%" y="623.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::try_pull (126 samples, 0.04%)</title><rect x="20.5414%" y="597" width="0.0428%" height="15" fill="rgb(217,205,27)" fg:x="60486" fg:w="126"/><text x="20.7914%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (126 samples, 0.04%)</title><rect x="20.5414%" y="581" width="0.0428%" height="15" fill="rgb(252,71,50)" fg:x="60486" fg:w="126"/><text x="20.7914%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (126 samples, 0.04%)</title><rect x="20.5414%" y="565" width="0.0428%" height="15" fill="rgb(209,86,4)" fg:x="60486" fg:w="126"/><text x="20.7914%" y="575.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (37 samples, 0.01%)</title><rect x="20.5842%" y="629" width="0.0126%" height="15" fill="rgb(229,94,0)" fg:x="60612" fg:w="37"/><text x="20.8342%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (72 samples, 0.02%)</title><rect x="20.6032%" y="613" width="0.0245%" height="15" fill="rgb(252,223,21)" fg:x="60668" fg:w="72"/><text x="20.8532%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (52 samples, 0.02%)</title><rect x="20.6100%" y="597" width="0.0177%" height="15" fill="rgb(230,210,4)" fg:x="60688" fg:w="52"/><text x="20.8600%" y="607.50"></text></g><g><title>core::mem::replace (52 samples, 0.02%)</title><rect x="20.6100%" y="581" width="0.0177%" height="15" fill="rgb(240,149,38)" fg:x="60688" fg:w="52"/><text x="20.8600%" y="591.50"></text></g><g><title>core::ptr::read (52 samples, 0.02%)</title><rect x="20.6100%" y="565" width="0.0177%" height="15" fill="rgb(254,105,20)" fg:x="60688" fg:w="52"/><text x="20.8600%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (133 samples, 0.05%)</title><rect x="20.6029%" y="629" width="0.0452%" height="15" fill="rgb(253,87,46)" fg:x="60667" fg:w="133"/><text x="20.8529%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (60 samples, 0.02%)</title><rect x="20.6277%" y="613" width="0.0204%" height="15" fill="rgb(253,116,33)" fg:x="60740" fg:w="60"/><text x="20.8777%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.02%)</title><rect x="20.6277%" y="597" width="0.0204%" height="15" fill="rgb(229,198,5)" fg:x="60740" fg:w="60"/><text x="20.8777%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::pipeline::StageIn&gt;&gt; (36 samples, 0.01%)</title><rect x="20.6480%" y="629" width="0.0122%" height="15" fill="rgb(242,38,37)" fg:x="60800" fg:w="36"/><text x="20.8980%" y="639.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="20.6480%" y="613" width="0.0122%" height="15" fill="rgb(242,69,53)" fg:x="60800" fg:w="36"/><text x="20.8980%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (161 samples, 0.05%)</title><rect x="20.6603%" y="629" width="0.0547%" height="15" fill="rgb(249,80,16)" fg:x="60836" fg:w="161"/><text x="20.9103%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (186 samples, 0.06%)</title><rect x="20.7149%" y="629" width="0.0632%" height="15" fill="rgb(206,128,11)" fg:x="60997" fg:w="186"/><text x="20.9649%" y="639.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (35 samples, 0.01%)</title><rect x="20.7818%" y="629" width="0.0119%" height="15" fill="rgb(212,35,20)" fg:x="61194" fg:w="35"/><text x="21.0318%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,098 samples, 1.39%)</title><rect x="19.4305%" y="661" width="1.3917%" height="15" fill="rgb(236,79,13)" fg:x="57215" fg:w="4098"/><text x="19.6805%" y="671.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (4,012 samples, 1.36%)</title><rect x="19.4598%" y="645" width="1.3625%" height="15" fill="rgb(233,123,3)" fg:x="57301" fg:w="4012"/><text x="19.7098%" y="655.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::try_pull (84 samples, 0.03%)</title><rect x="20.7937%" y="629" width="0.0285%" height="15" fill="rgb(214,93,52)" fg:x="61229" fg:w="84"/><text x="21.0437%" y="639.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (84 samples, 0.03%)</title><rect x="20.7937%" y="613" width="0.0285%" height="15" fill="rgb(251,37,40)" fg:x="61229" fg:w="84"/><text x="21.0437%" y="623.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (83 samples, 0.03%)</title><rect x="20.7941%" y="597" width="0.0282%" height="15" fill="rgb(227,80,54)" fg:x="61230" fg:w="83"/><text x="21.0441%" y="607.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (5,387 samples, 1.83%)</title><rect x="18.9996%" y="677" width="1.8295%" height="15" fill="rgb(254,48,11)" fg:x="55946" fg:w="5387"/><text x="19.2496%" y="687.50">&lt;..</text></g><g><title>[libc.so.6] (64 samples, 0.02%)</title><rect x="20.8861%" y="533" width="0.0217%" height="15" fill="rgb(235,193,26)" fg:x="61501" fg:w="64"/><text x="21.1361%" y="543.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (2,314 samples, 0.79%)</title><rect x="20.8756%" y="581" width="0.7858%" height="15" fill="rgb(229,99,21)" fg:x="61470" fg:w="2314"/><text x="21.1256%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2,309 samples, 0.78%)</title><rect x="20.8773%" y="565" width="0.7841%" height="15" fill="rgb(211,140,41)" fg:x="61475" fg:w="2309"/><text x="21.1273%" y="575.50"></text></g><g><title>__send (2,309 samples, 0.78%)</title><rect x="20.8773%" y="549" width="0.7841%" height="15" fill="rgb(240,227,30)" fg:x="61475" fg:w="2309"/><text x="21.1273%" y="559.50"></text></g><g><title>[unknown] (2,219 samples, 0.75%)</title><rect x="20.9078%" y="533" width="0.7536%" height="15" fill="rgb(215,224,45)" fg:x="61565" fg:w="2219"/><text x="21.1578%" y="543.50"></text></g><g><title>[unknown] (2,211 samples, 0.75%)</title><rect x="20.9106%" y="517" width="0.7509%" height="15" fill="rgb(206,123,31)" fg:x="61573" fg:w="2211"/><text x="21.1606%" y="527.50"></text></g><g><title>[unknown] (2,190 samples, 0.74%)</title><rect x="20.9177%" y="501" width="0.7437%" height="15" fill="rgb(210,138,16)" fg:x="61594" fg:w="2190"/><text x="21.1677%" y="511.50"></text></g><g><title>[unknown] (2,102 samples, 0.71%)</title><rect x="20.9476%" y="485" width="0.7139%" height="15" fill="rgb(228,57,28)" fg:x="61682" fg:w="2102"/><text x="21.1976%" y="495.50"></text></g><g><title>[unknown] (1,816 samples, 0.62%)</title><rect x="21.0447%" y="469" width="0.6167%" height="15" fill="rgb(242,170,10)" fg:x="61968" fg:w="1816"/><text x="21.2947%" y="479.50"></text></g><g><title>[unknown] (1,742 samples, 0.59%)</title><rect x="21.0698%" y="453" width="0.5916%" height="15" fill="rgb(228,214,39)" fg:x="62042" fg:w="1742"/><text x="21.3198%" y="463.50"></text></g><g><title>[unknown] (1,134 samples, 0.39%)</title><rect x="21.2763%" y="437" width="0.3851%" height="15" fill="rgb(218,179,33)" fg:x="62650" fg:w="1134"/><text x="21.5263%" y="447.50"></text></g><g><title>[unknown] (866 samples, 0.29%)</title><rect x="21.3673%" y="421" width="0.2941%" height="15" fill="rgb(235,193,39)" fg:x="62918" fg:w="866"/><text x="21.6173%" y="431.50"></text></g><g><title>[unknown] (523 samples, 0.18%)</title><rect x="21.4838%" y="405" width="0.1776%" height="15" fill="rgb(219,221,36)" fg:x="63261" fg:w="523"/><text x="21.7338%" y="415.50"></text></g><g><title>[unknown] (352 samples, 0.12%)</title><rect x="21.5419%" y="389" width="0.1195%" height="15" fill="rgb(248,218,19)" fg:x="63432" fg:w="352"/><text x="21.7919%" y="399.50"></text></g><g><title>[unknown] (169 samples, 0.06%)</title><rect x="21.6040%" y="373" width="0.0574%" height="15" fill="rgb(205,50,9)" fg:x="63615" fg:w="169"/><text x="21.8540%" y="383.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (2,487 samples, 0.84%)</title><rect x="20.8722%" y="597" width="0.8446%" height="15" fill="rgb(238,81,28)" fg:x="61460" fg:w="2487"/><text x="21.1222%" y="607.50"></text></g><g><title>async_io::Async&lt;T&gt;::get_ref (163 samples, 0.06%)</title><rect x="21.6614%" y="581" width="0.0554%" height="15" fill="rgb(235,110,19)" fg:x="63784" fg:w="163"/><text x="21.9114%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (163 samples, 0.06%)</title><rect x="21.6614%" y="565" width="0.0554%" height="15" fill="rgb(214,7,14)" fg:x="63784" fg:w="163"/><text x="21.9114%" y="575.50"></text></g><g><title>&lt;async_std::io::write::write_all::WriteAllFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,753 samples, 0.93%)</title><rect x="20.8593%" y="629" width="0.9349%" height="15" fill="rgb(211,77,3)" fg:x="61422" fg:w="2753"/><text x="21.1093%" y="639.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (2,751 samples, 0.93%)</title><rect x="20.8599%" y="613" width="0.9343%" height="15" fill="rgb(229,5,9)" fg:x="61424" fg:w="2751"/><text x="21.1099%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (228 samples, 0.08%)</title><rect x="21.7168%" y="597" width="0.0774%" height="15" fill="rgb(225,90,11)" fg:x="63947" fg:w="228"/><text x="21.9668%" y="607.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all::{{closure}} (2,841 samples, 0.96%)</title><rect x="20.8307%" y="645" width="0.9648%" height="15" fill="rgb(242,56,8)" fg:x="61338" fg:w="2841"/><text x="21.0807%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,851 samples, 0.97%)</title><rect x="20.8301%" y="677" width="0.9682%" height="15" fill="rgb(249,212,39)" fg:x="61336" fg:w="2851"/><text x="21.0801%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,851 samples, 0.97%)</title><rect x="20.8301%" y="661" width="0.9682%" height="15" fill="rgb(236,90,9)" fg:x="61336" fg:w="2851"/><text x="21.0801%" y="671.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all (108 samples, 0.04%)</title><rect x="21.7983%" y="677" width="0.0367%" height="15" fill="rgb(206,88,35)" fg:x="64187" fg:w="108"/><text x="22.0483%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (108 samples, 0.04%)</title><rect x="21.7983%" y="661" width="0.0367%" height="15" fill="rgb(205,126,30)" fg:x="64187" fg:w="108"/><text x="22.0483%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (108 samples, 0.04%)</title><rect x="21.7983%" y="645" width="0.0367%" height="15" fill="rgb(230,176,12)" fg:x="64187" fg:w="108"/><text x="22.0483%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (108 samples, 0.04%)</title><rect x="21.7983%" y="629" width="0.0367%" height="15" fill="rgb(243,19,9)" fg:x="64187" fg:w="108"/><text x="22.0483%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (108 samples, 0.04%)</title><rect x="21.7983%" y="613" width="0.0367%" height="15" fill="rgb(245,171,17)" fg:x="64187" fg:w="108"/><text x="22.0483%" y="623.50"></text></g><g><title>alloc::alloc::alloc (108 samples, 0.04%)</title><rect x="21.7983%" y="597" width="0.0367%" height="15" fill="rgb(227,52,21)" fg:x="64187" fg:w="108"/><text x="22.0483%" y="607.50"></text></g><g><title>malloc (108 samples, 0.04%)</title><rect x="21.7983%" y="581" width="0.0367%" height="15" fill="rgb(238,69,14)" fg:x="64187" fg:w="108"/><text x="22.0483%" y="591.50"></text></g><g><title>clock_gettime (70 samples, 0.02%)</title><rect x="21.8350%" y="565" width="0.0238%" height="15" fill="rgb(241,156,39)" fg:x="64295" fg:w="70"/><text x="22.0850%" y="575.50"></text></g><g><title>__vdso_clock_gettime (44 samples, 0.01%)</title><rect x="21.8438%" y="549" width="0.0149%" height="15" fill="rgb(212,227,28)" fg:x="64321" fg:w="44"/><text x="22.0938%" y="559.50"></text></g><g><title>async_std::utils::timer_after (71 samples, 0.02%)</title><rect x="21.8350%" y="645" width="0.0241%" height="15" fill="rgb(209,118,27)" fg:x="64295" fg:w="71"/><text x="22.0850%" y="655.50"></text></g><g><title>async_io::Timer::after (71 samples, 0.02%)</title><rect x="21.8350%" y="629" width="0.0241%" height="15" fill="rgb(226,102,5)" fg:x="64295" fg:w="71"/><text x="22.0850%" y="639.50"></text></g><g><title>std::time::Instant::now (71 samples, 0.02%)</title><rect x="21.8350%" y="613" width="0.0241%" height="15" fill="rgb(223,34,3)" fg:x="64295" fg:w="71"/><text x="22.0850%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (71 samples, 0.02%)</title><rect x="21.8350%" y="597" width="0.0241%" height="15" fill="rgb(221,81,38)" fg:x="64295" fg:w="71"/><text x="22.0850%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (71 samples, 0.02%)</title><rect x="21.8350%" y="581" width="0.0241%" height="15" fill="rgb(236,219,28)" fg:x="64295" fg:w="71"/><text x="22.0850%" y="591.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (72 samples, 0.02%)</title><rect x="21.8350%" y="677" width="0.0245%" height="15" fill="rgb(213,200,14)" fg:x="64295" fg:w="72"/><text x="22.0850%" y="687.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (72 samples, 0.02%)</title><rect x="21.8350%" y="661" width="0.0245%" height="15" fill="rgb(240,33,19)" fg:x="64295" fg:w="72"/><text x="22.0850%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::get (58 samples, 0.02%)</title><rect x="21.8706%" y="629" width="0.0197%" height="15" fill="rgb(233,113,27)" fg:x="64400" fg:w="58"/><text x="22.1206%" y="639.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (58 samples, 0.02%)</title><rect x="21.8706%" y="613" width="0.0197%" height="15" fill="rgb(220,221,18)" fg:x="64400" fg:w="58"/><text x="22.1206%" y="623.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (58 samples, 0.02%)</title><rect x="21.8706%" y="597" width="0.0197%" height="15" fill="rgb(238,92,8)" fg:x="64400" fg:w="58"/><text x="22.1206%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (58 samples, 0.02%)</title><rect x="21.8706%" y="581" width="0.0197%" height="15" fill="rgb(222,164,16)" fg:x="64400" fg:w="58"/><text x="22.1206%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (58 samples, 0.02%)</title><rect x="21.8706%" y="565" width="0.0197%" height="15" fill="rgb(241,119,3)" fg:x="64400" fg:w="58"/><text x="22.1206%" y="575.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (58 samples, 0.02%)</title><rect x="21.8706%" y="549" width="0.0197%" height="15" fill="rgb(241,44,8)" fg:x="64400" fg:w="58"/><text x="22.1206%" y="559.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (58 samples, 0.02%)</title><rect x="21.8706%" y="533" width="0.0197%" height="15" fill="rgb(230,36,40)" fg:x="64400" fg:w="58"/><text x="22.1206%" y="543.50"></text></g><g><title>__sched_yield (50 samples, 0.02%)</title><rect x="22.1257%" y="581" width="0.0170%" height="15" fill="rgb(243,16,36)" fg:x="65151" fg:w="50"/><text x="22.3757%" y="591.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="22.1257%" y="565" width="0.0170%" height="15" fill="rgb(231,4,26)" fg:x="65151" fg:w="50"/><text x="22.3757%" y="575.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="22.1257%" y="549" width="0.0170%" height="15" fill="rgb(240,9,31)" fg:x="65151" fg:w="50"/><text x="22.3757%" y="559.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="22.1260%" y="533" width="0.0166%" height="15" fill="rgb(207,173,15)" fg:x="65152" fg:w="49"/><text x="22.3760%" y="543.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="22.1260%" y="517" width="0.0166%" height="15" fill="rgb(224,192,53)" fg:x="65152" fg:w="49"/><text x="22.3760%" y="527.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="22.1267%" y="501" width="0.0160%" height="15" fill="rgb(223,67,28)" fg:x="65154" fg:w="47"/><text x="22.3767%" y="511.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="22.1284%" y="485" width="0.0143%" height="15" fill="rgb(211,20,47)" fg:x="65159" fg:w="42"/><text x="22.3784%" y="495.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="22.1321%" y="469" width="0.0105%" height="15" fill="rgb(240,228,2)" fg:x="65170" fg:w="31"/><text x="22.3821%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (30 samples, 0.01%)</title><rect x="22.1426%" y="581" width="0.0102%" height="15" fill="rgb(248,151,12)" fg:x="65201" fg:w="30"/><text x="22.3926%" y="591.50"></text></g><g><title>core::ptr::write (30 samples, 0.01%)</title><rect x="22.1426%" y="565" width="0.0102%" height="15" fill="rgb(244,8,39)" fg:x="65201" fg:w="30"/><text x="22.3926%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (748 samples, 0.25%)</title><rect x="21.9005%" y="613" width="0.2540%" height="15" fill="rgb(222,26,8)" fg:x="64488" fg:w="748"/><text x="22.1505%" y="623.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (657 samples, 0.22%)</title><rect x="21.9314%" y="597" width="0.2231%" height="15" fill="rgb(213,106,44)" fg:x="64579" fg:w="657"/><text x="22.1814%" y="607.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (781 samples, 0.27%)</title><rect x="21.8903%" y="629" width="0.2652%" height="15" fill="rgb(214,129,20)" fg:x="64458" fg:w="781"/><text x="22.1403%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (31 samples, 0.01%)</title><rect x="22.1555%" y="629" width="0.0105%" height="15" fill="rgb(212,32,13)" fg:x="65239" fg:w="31"/><text x="22.4055%" y="639.50"></text></g><g><title>core::mem::replace (31 samples, 0.01%)</title><rect x="22.1555%" y="613" width="0.0105%" height="15" fill="rgb(208,168,33)" fg:x="65239" fg:w="31"/><text x="22.4055%" y="623.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (904 samples, 0.31%)</title><rect x="21.8594%" y="645" width="0.3070%" height="15" fill="rgb(231,207,8)" fg:x="64367" fg:w="904"/><text x="22.1094%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}}&gt;&gt;&gt; (945 samples, 0.32%)</title><rect x="21.8594%" y="677" width="0.3209%" height="15" fill="rgb(235,219,23)" fg:x="64367" fg:w="945"/><text x="22.1094%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (945 samples, 0.32%)</title><rect x="21.8594%" y="661" width="0.3209%" height="15" fill="rgb(226,216,26)" fg:x="64367" fg:w="945"/><text x="22.1094%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (41 samples, 0.01%)</title><rect x="22.1664%" y="645" width="0.0139%" height="15" fill="rgb(239,137,16)" fg:x="65271" fg:w="41"/><text x="22.4164%" y="655.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (55 samples, 0.02%)</title><rect x="22.1820%" y="661" width="0.0187%" height="15" fill="rgb(207,12,36)" fg:x="65317" fg:w="55"/><text x="22.4320%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (55 samples, 0.02%)</title><rect x="22.1820%" y="645" width="0.0187%" height="15" fill="rgb(210,214,24)" fg:x="65317" fg:w="55"/><text x="22.4320%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (55 samples, 0.02%)</title><rect x="22.1820%" y="629" width="0.0187%" height="15" fill="rgb(206,56,30)" fg:x="65317" fg:w="55"/><text x="22.4320%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wake (54 samples, 0.02%)</title><rect x="22.1824%" y="613" width="0.0183%" height="15" fill="rgb(228,143,26)" fg:x="65318" fg:w="54"/><text x="22.4324%" y="623.50"></text></g><g><title>syscall (238 samples, 0.08%)</title><rect x="22.2014%" y="661" width="0.0808%" height="15" fill="rgb(216,218,46)" fg:x="65374" fg:w="238"/><text x="22.4514%" y="671.50"></text></g><g><title>[unknown] (226 samples, 0.08%)</title><rect x="22.2055%" y="645" width="0.0768%" height="15" fill="rgb(206,6,19)" fg:x="65386" fg:w="226"/><text x="22.4555%" y="655.50"></text></g><g><title>[unknown] (219 samples, 0.07%)</title><rect x="22.2078%" y="629" width="0.0744%" height="15" fill="rgb(239,177,51)" fg:x="65393" fg:w="219"/><text x="22.4578%" y="639.50"></text></g><g><title>[unknown] (216 samples, 0.07%)</title><rect x="22.2089%" y="613" width="0.0734%" height="15" fill="rgb(216,55,25)" fg:x="65396" fg:w="216"/><text x="22.4589%" y="623.50"></text></g><g><title>[unknown] (207 samples, 0.07%)</title><rect x="22.2119%" y="597" width="0.0703%" height="15" fill="rgb(231,163,29)" fg:x="65405" fg:w="207"/><text x="22.4619%" y="607.50"></text></g><g><title>[unknown] (167 samples, 0.06%)</title><rect x="22.2255%" y="581" width="0.0567%" height="15" fill="rgb(232,149,50)" fg:x="65445" fg:w="167"/><text x="22.4755%" y="591.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="22.2707%" y="565" width="0.0115%" height="15" fill="rgb(223,142,48)" fg:x="65578" fg:w="34"/><text x="22.5207%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="1045" width="3.2881%" height="15" fill="rgb(245,83,23)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="1055.50">&lt;co..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="1029" width="3.2881%" height="15" fill="rgb(224,63,2)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="1039.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="1013" width="3.2881%" height="15" fill="rgb(218,65,53)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="1023.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="997" width="3.2881%" height="15" fill="rgb(221,84,29)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="1007.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="981" width="3.2881%" height="15" fill="rgb(234,0,32)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="991.50">&lt;fu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="965" width="3.2881%" height="15" fill="rgb(206,20,16)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="975.50">&lt;as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,682 samples, 3.29%)</title><rect x="18.9996%" y="949" width="3.2881%" height="15" fill="rgb(244,172,18)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="959.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,682 samples, 3.29%)</title><rect x="18.9996%" y="933" width="3.2881%" height="15" fill="rgb(254,133,1)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="943.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,682 samples, 3.29%)</title><rect x="18.9996%" y="917" width="3.2881%" height="15" fill="rgb(222,206,41)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="927.50">std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="901" width="3.2881%" height="15" fill="rgb(212,3,42)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="911.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="885" width="3.2881%" height="15" fill="rgb(241,11,4)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="895.50">&lt;as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="869" width="3.2881%" height="15" fill="rgb(205,19,26)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="879.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="853" width="3.2881%" height="15" fill="rgb(210,179,32)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="863.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="837" width="3.2881%" height="15" fill="rgb(227,116,49)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="847.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="821" width="3.2881%" height="15" fill="rgb(211,146,6)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="831.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="805" width="3.2881%" height="15" fill="rgb(219,44,39)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="815.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,682 samples, 3.29%)</title><rect x="18.9996%" y="789" width="3.2881%" height="15" fill="rgb(234,128,11)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="799.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="773" width="3.2881%" height="15" fill="rgb(220,183,53)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="783.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="757" width="3.2881%" height="15" fill="rgb(213,219,32)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="767.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="741" width="3.2881%" height="15" fill="rgb(232,156,16)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="751.50">&lt;co..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="725" width="3.2881%" height="15" fill="rgb(246,135,34)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="735.50">zen..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,682 samples, 3.29%)</title><rect x="18.9996%" y="709" width="3.2881%" height="15" fill="rgb(241,99,0)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="719.50">&lt;co..</text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (9,682 samples, 3.29%)</title><rect x="18.9996%" y="693" width="3.2881%" height="15" fill="rgb(222,103,45)" fg:x="55946" fg:w="9682"/><text x="19.2496%" y="703.50">zen..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::refill (315 samples, 0.11%)</title><rect x="22.1807%" y="677" width="0.1070%" height="15" fill="rgb(212,57,4)" fg:x="65313" fg:w="315"/><text x="22.4307%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22,638 samples, 7.69%)</title><rect x="14.6068%" y="1221" width="7.6880%" height="15" fill="rgb(215,68,47)" fg:x="43011" fg:w="22638"/><text x="14.8568%" y="1231.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22,638 samples, 7.69%)</title><rect x="14.6068%" y="1205" width="7.6880%" height="15" fill="rgb(230,84,2)" fg:x="43011" fg:w="22638"/><text x="14.8568%" y="1215.50">std::thread..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,716 samples, 3.30%)</title><rect x="18.9952%" y="1189" width="3.2996%" height="15" fill="rgb(220,102,14)" fg:x="55933" fg:w="9716"/><text x="19.2452%" y="1199.50">asy..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (9,703 samples, 3.30%)</title><rect x="18.9996%" y="1173" width="3.2952%" height="15" fill="rgb(240,10,32)" fg:x="55946" fg:w="9703"/><text x="19.2496%" y="1183.50">asy..</text></g><g><title>async_global_executor::executor::block_on (9,703 samples, 3.30%)</title><rect x="18.9996%" y="1157" width="3.2952%" height="15" fill="rgb(215,47,27)" fg:x="55946" fg:w="9703"/><text x="19.2496%" y="1167.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,703 samples, 3.30%)</title><rect x="18.9996%" y="1141" width="3.2952%" height="15" fill="rgb(233,188,43)" fg:x="55946" fg:w="9703"/><text x="19.2496%" y="1151.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,703 samples, 3.30%)</title><rect x="18.9996%" y="1125" width="3.2952%" height="15" fill="rgb(253,190,1)" fg:x="55946" fg:w="9703"/><text x="19.2496%" y="1135.50">std..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (9,703 samples, 3.30%)</title><rect x="18.9996%" y="1109" width="3.2952%" height="15" fill="rgb(206,114,52)" fg:x="55946" fg:w="9703"/><text x="19.2496%" y="1119.50">asy..</text></g><g><title>async_global_executor::reactor::block_on (9,703 samples, 3.30%)</title><rect x="18.9996%" y="1093" width="3.2952%" height="15" fill="rgb(233,120,37)" fg:x="55946" fg:w="9703"/><text x="19.2496%" y="1103.50">asy..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (9,703 samples, 3.30%)</title><rect x="18.9996%" y="1077" width="3.2952%" height="15" fill="rgb(214,52,39)" fg:x="55946" fg:w="9703"/><text x="19.2496%" y="1087.50">asy..</text></g><g><title>async_io::driver::block_on (9,703 samples, 3.30%)</title><rect x="18.9996%" y="1061" width="3.2952%" height="15" fill="rgb(223,80,29)" fg:x="55946" fg:w="9703"/><text x="19.2496%" y="1071.50">asy..</text></g><g><title>recvmsg (44 samples, 0.01%)</title><rect x="22.3019%" y="981" width="0.0149%" height="15" fill="rgb(230,101,40)" fg:x="65670" fg:w="44"/><text x="22.5519%" y="991.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="22.3019%" y="965" width="0.0149%" height="15" fill="rgb(219,211,8)" fg:x="65670" fg:w="44"/><text x="22.5519%" y="975.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="22.3023%" y="949" width="0.0146%" height="15" fill="rgb(252,126,28)" fg:x="65671" fg:w="43"/><text x="22.5523%" y="959.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="22.3023%" y="933" width="0.0146%" height="15" fill="rgb(215,56,38)" fg:x="65671" fg:w="43"/><text x="22.5523%" y="943.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="22.3023%" y="917" width="0.0146%" height="15" fill="rgb(249,55,44)" fg:x="65671" fg:w="43"/><text x="22.5523%" y="927.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="22.3036%" y="901" width="0.0132%" height="15" fill="rgb(220,221,32)" fg:x="65675" fg:w="39"/><text x="22.5536%" y="911.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="22.3060%" y="885" width="0.0109%" height="15" fill="rgb(212,216,41)" fg:x="65682" fg:w="32"/><text x="22.5560%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (71 samples, 0.02%)</title><rect x="22.2961%" y="1205" width="0.0241%" height="15" fill="rgb(228,213,43)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (71 samples, 0.02%)</title><rect x="22.2961%" y="1189" width="0.0241%" height="15" fill="rgb(211,31,26)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (71 samples, 0.02%)</title><rect x="22.2961%" y="1173" width="0.0241%" height="15" fill="rgb(229,202,19)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (71 samples, 0.02%)</title><rect x="22.2961%" y="1157" width="0.0241%" height="15" fill="rgb(229,105,46)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (71 samples, 0.02%)</title><rect x="22.2961%" y="1141" width="0.0241%" height="15" fill="rgb(235,108,1)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (71 samples, 0.02%)</title><rect x="22.2961%" y="1125" width="0.0241%" height="15" fill="rgb(245,111,35)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1135.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (71 samples, 0.02%)</title><rect x="22.2961%" y="1109" width="0.0241%" height="15" fill="rgb(219,185,31)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1119.50"></text></g><g><title>zenoh_util::net::get_local_addresses (71 samples, 0.02%)</title><rect x="22.2961%" y="1093" width="0.0241%" height="15" fill="rgb(214,4,43)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1103.50"></text></g><g><title>pnet_datalink::interfaces (71 samples, 0.02%)</title><rect x="22.2961%" y="1077" width="0.0241%" height="15" fill="rgb(235,227,40)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces (71 samples, 0.02%)</title><rect x="22.2961%" y="1061" width="0.0241%" height="15" fill="rgb(230,88,30)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1071.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (71 samples, 0.02%)</title><rect x="22.2961%" y="1045" width="0.0241%" height="15" fill="rgb(216,217,1)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1055.50"></text></g><g><title>getifaddrs (71 samples, 0.02%)</title><rect x="22.2961%" y="1029" width="0.0241%" height="15" fill="rgb(248,139,50)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1039.50"></text></g><g><title>[libc.so.6] (71 samples, 0.02%)</title><rect x="22.2961%" y="1013" width="0.0241%" height="15" fill="rgb(233,1,21)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1023.50"></text></g><g><title>[libc.so.6] (71 samples, 0.02%)</title><rect x="22.2961%" y="997" width="0.0241%" height="15" fill="rgb(215,183,12)" fg:x="65653" fg:w="71"/><text x="22.5461%" y="1007.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="22.3237%" y="933" width="0.0105%" height="15" fill="rgb(229,104,42)" fg:x="65734" fg:w="31"/><text x="22.5737%" y="943.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="22.3237%" y="917" width="0.0105%" height="15" fill="rgb(243,34,48)" fg:x="65734" fg:w="31"/><text x="22.5737%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (148 samples, 0.05%)</title><rect x="22.2961%" y="1221" width="0.0503%" height="15" fill="rgb(239,11,44)" fg:x="65653" fg:w="148"/><text x="22.5461%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (77 samples, 0.03%)</title><rect x="22.3203%" y="1205" width="0.0261%" height="15" fill="rgb(231,98,35)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (77 samples, 0.03%)</title><rect x="22.3203%" y="1189" width="0.0261%" height="15" fill="rgb(233,28,25)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (77 samples, 0.03%)</title><rect x="22.3203%" y="1173" width="0.0261%" height="15" fill="rgb(234,123,11)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (77 samples, 0.03%)</title><rect x="22.3203%" y="1157" width="0.0261%" height="15" fill="rgb(220,69,3)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (77 samples, 0.03%)</title><rect x="22.3203%" y="1141" width="0.0261%" height="15" fill="rgb(214,64,36)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (77 samples, 0.03%)</title><rect x="22.3203%" y="1125" width="0.0261%" height="15" fill="rgb(211,138,32)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1135.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (77 samples, 0.03%)</title><rect x="22.3203%" y="1109" width="0.0261%" height="15" fill="rgb(213,118,47)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1119.50"></text></g><g><title>zenoh_util::net::get_local_addresses (77 samples, 0.03%)</title><rect x="22.3203%" y="1093" width="0.0261%" height="15" fill="rgb(243,124,49)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1103.50"></text></g><g><title>pnet_datalink::interfaces (77 samples, 0.03%)</title><rect x="22.3203%" y="1077" width="0.0261%" height="15" fill="rgb(221,30,28)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces (77 samples, 0.03%)</title><rect x="22.3203%" y="1061" width="0.0261%" height="15" fill="rgb(246,37,13)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1071.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (77 samples, 0.03%)</title><rect x="22.3203%" y="1045" width="0.0261%" height="15" fill="rgb(249,66,14)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1055.50"></text></g><g><title>getifaddrs (77 samples, 0.03%)</title><rect x="22.3203%" y="1029" width="0.0261%" height="15" fill="rgb(213,166,5)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1039.50"></text></g><g><title>[libc.so.6] (77 samples, 0.03%)</title><rect x="22.3203%" y="1013" width="0.0261%" height="15" fill="rgb(221,66,24)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1023.50"></text></g><g><title>[libc.so.6] (77 samples, 0.03%)</title><rect x="22.3203%" y="997" width="0.0261%" height="15" fill="rgb(210,132,17)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="1007.50"></text></g><g><title>malloc (77 samples, 0.03%)</title><rect x="22.3203%" y="981" width="0.0261%" height="15" fill="rgb(243,202,5)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="991.50"></text></g><g><title>[libc.so.6] (77 samples, 0.03%)</title><rect x="22.3203%" y="965" width="0.0261%" height="15" fill="rgb(233,70,48)" fg:x="65724" fg:w="77"/><text x="22.5703%" y="975.50"></text></g><g><title>[libc.so.6] (72 samples, 0.02%)</title><rect x="22.3220%" y="949" width="0.0245%" height="15" fill="rgb(238,41,26)" fg:x="65729" fg:w="72"/><text x="22.5720%" y="959.50"></text></g><g><title>__mprotect (36 samples, 0.01%)</title><rect x="22.3342%" y="933" width="0.0122%" height="15" fill="rgb(241,19,31)" fg:x="65765" fg:w="36"/><text x="22.5842%" y="943.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="22.3342%" y="917" width="0.0122%" height="15" fill="rgb(214,76,10)" fg:x="65765" fg:w="36"/><text x="22.5842%" y="927.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (73 samples, 0.02%)</title><rect x="22.3895%" y="1141" width="0.0248%" height="15" fill="rgb(254,202,22)" fg:x="65928" fg:w="73"/><text x="22.6395%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (67 samples, 0.02%)</title><rect x="22.3916%" y="1125" width="0.0228%" height="15" fill="rgb(214,72,24)" fg:x="65934" fg:w="67"/><text x="22.6416%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (47 samples, 0.02%)</title><rect x="22.3984%" y="1109" width="0.0160%" height="15" fill="rgb(221,92,46)" fg:x="65954" fg:w="47"/><text x="22.6484%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47 samples, 0.02%)</title><rect x="22.3984%" y="1093" width="0.0160%" height="15" fill="rgb(246,13,50)" fg:x="65954" fg:w="47"/><text x="22.6484%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (47 samples, 0.02%)</title><rect x="22.3984%" y="1077" width="0.0160%" height="15" fill="rgb(240,165,38)" fg:x="65954" fg:w="47"/><text x="22.6484%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47 samples, 0.02%)</title><rect x="22.3984%" y="1061" width="0.0160%" height="15" fill="rgb(241,24,51)" fg:x="65954" fg:w="47"/><text x="22.6484%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (76 samples, 0.03%)</title><rect x="22.4143%" y="1141" width="0.0258%" height="15" fill="rgb(227,51,44)" fg:x="66001" fg:w="76"/><text x="22.6643%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (74 samples, 0.03%)</title><rect x="22.4150%" y="1125" width="0.0251%" height="15" fill="rgb(231,121,3)" fg:x="66003" fg:w="74"/><text x="22.6650%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (74 samples, 0.03%)</title><rect x="22.4150%" y="1109" width="0.0251%" height="15" fill="rgb(245,3,41)" fg:x="66003" fg:w="74"/><text x="22.6650%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (73 samples, 0.02%)</title><rect x="22.4153%" y="1093" width="0.0248%" height="15" fill="rgb(214,13,26)" fg:x="66004" fg:w="73"/><text x="22.6653%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (73 samples, 0.02%)</title><rect x="22.4153%" y="1077" width="0.0248%" height="15" fill="rgb(252,75,11)" fg:x="66004" fg:w="73"/><text x="22.6653%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (72 samples, 0.02%)</title><rect x="22.4157%" y="1061" width="0.0245%" height="15" fill="rgb(218,226,17)" fg:x="66005" fg:w="72"/><text x="22.6657%" y="1071.50"></text></g><g><title>malloc (65 samples, 0.02%)</title><rect x="22.4181%" y="1045" width="0.0221%" height="15" fill="rgb(248,89,38)" fg:x="66012" fg:w="65"/><text x="22.6681%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.03%)</title><rect x="22.4412%" y="1013" width="0.0258%" height="15" fill="rgb(237,73,46)" fg:x="66080" fg:w="76"/><text x="22.6912%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.03%)</title><rect x="22.4412%" y="997" width="0.0258%" height="15" fill="rgb(242,78,33)" fg:x="66080" fg:w="76"/><text x="22.6912%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (74 samples, 0.03%)</title><rect x="22.4418%" y="981" width="0.0251%" height="15" fill="rgb(235,60,3)" fg:x="66082" fg:w="74"/><text x="22.6918%" y="991.50"></text></g><g><title>malloc (72 samples, 0.02%)</title><rect x="22.4425%" y="965" width="0.0245%" height="15" fill="rgb(216,172,19)" fg:x="66084" fg:w="72"/><text x="22.6925%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (79 samples, 0.03%)</title><rect x="22.4408%" y="1061" width="0.0268%" height="15" fill="rgb(227,6,42)" fg:x="66079" fg:w="79"/><text x="22.6908%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (79 samples, 0.03%)</title><rect x="22.4408%" y="1045" width="0.0268%" height="15" fill="rgb(223,207,42)" fg:x="66079" fg:w="79"/><text x="22.6908%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.03%)</title><rect x="22.4412%" y="1029" width="0.0265%" height="15" fill="rgb(246,138,30)" fg:x="66080" fg:w="78"/><text x="22.6912%" y="1039.50"></text></g><g><title>core::clone::Clone::clone (110 samples, 0.04%)</title><rect x="22.4401%" y="1141" width="0.0374%" height="15" fill="rgb(251,199,47)" fg:x="66077" fg:w="110"/><text x="22.6901%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (110 samples, 0.04%)</title><rect x="22.4401%" y="1125" width="0.0374%" height="15" fill="rgb(228,218,44)" fg:x="66077" fg:w="110"/><text x="22.6901%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (108 samples, 0.04%)</title><rect x="22.4408%" y="1109" width="0.0367%" height="15" fill="rgb(220,68,6)" fg:x="66079" fg:w="108"/><text x="22.6908%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (108 samples, 0.04%)</title><rect x="22.4408%" y="1093" width="0.0367%" height="15" fill="rgb(240,60,26)" fg:x="66079" fg:w="108"/><text x="22.6908%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (108 samples, 0.04%)</title><rect x="22.4408%" y="1077" width="0.0367%" height="15" fill="rgb(211,200,19)" fg:x="66079" fg:w="108"/><text x="22.6908%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (281 samples, 0.10%)</title><rect x="22.3858%" y="1205" width="0.0954%" height="15" fill="rgb(242,145,30)" fg:x="65917" fg:w="281"/><text x="22.6358%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (273 samples, 0.09%)</title><rect x="22.3885%" y="1189" width="0.0927%" height="15" fill="rgb(225,64,13)" fg:x="65925" fg:w="273"/><text x="22.6385%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (273 samples, 0.09%)</title><rect x="22.3885%" y="1173" width="0.0927%" height="15" fill="rgb(218,103,35)" fg:x="65925" fg:w="273"/><text x="22.6385%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (273 samples, 0.09%)</title><rect x="22.3885%" y="1157" width="0.0927%" height="15" fill="rgb(216,93,46)" fg:x="65925" fg:w="273"/><text x="22.6385%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (37 samples, 0.01%)</title><rect x="22.4812%" y="1173" width="0.0126%" height="15" fill="rgb(225,159,27)" fg:x="66198" fg:w="37"/><text x="22.7312%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (39 samples, 0.01%)</title><rect x="22.4812%" y="1189" width="0.0132%" height="15" fill="rgb(225,204,11)" fg:x="66198" fg:w="39"/><text x="22.7312%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (70 samples, 0.02%)</title><rect x="22.4812%" y="1205" width="0.0238%" height="15" fill="rgb(205,56,4)" fg:x="66198" fg:w="70"/><text x="22.7312%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (30 samples, 0.01%)</title><rect x="22.5050%" y="1205" width="0.0102%" height="15" fill="rgb(206,6,35)" fg:x="66268" fg:w="30"/><text x="22.7550%" y="1215.50"></text></g><g><title>&lt;vec_map::Values&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.01%)</title><rect x="22.5281%" y="1205" width="0.0136%" height="15" fill="rgb(247,73,52)" fg:x="66336" fg:w="40"/><text x="22.7781%" y="1215.50"></text></g><g><title>&lt;vec_map::Iter&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.01%)</title><rect x="22.5281%" y="1189" width="0.0136%" height="15" fill="rgb(246,97,4)" fg:x="66336" fg:w="40"/><text x="22.7781%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.01%)</title><rect x="22.5556%" y="1125" width="0.0102%" height="15" fill="rgb(212,37,15)" fg:x="66417" fg:w="30"/><text x="22.8056%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.01%)</title><rect x="22.5556%" y="1109" width="0.0102%" height="15" fill="rgb(208,130,40)" fg:x="66417" fg:w="30"/><text x="22.8056%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.01%)</title><rect x="22.5556%" y="1093" width="0.0102%" height="15" fill="rgb(236,55,29)" fg:x="66417" fg:w="30"/><text x="22.8056%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (33 samples, 0.01%)</title><rect x="22.5549%" y="1173" width="0.0112%" height="15" fill="rgb(209,156,45)" fg:x="66415" fg:w="33"/><text x="22.8049%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (33 samples, 0.01%)</title><rect x="22.5549%" y="1157" width="0.0112%" height="15" fill="rgb(249,107,4)" fg:x="66415" fg:w="33"/><text x="22.8049%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.01%)</title><rect x="22.5556%" y="1141" width="0.0105%" height="15" fill="rgb(227,7,13)" fg:x="66417" fg:w="31"/><text x="22.8056%" y="1151.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (64 samples, 0.02%)</title><rect x="22.5468%" y="1189" width="0.0217%" height="15" fill="rgb(250,129,14)" fg:x="66391" fg:w="64"/><text x="22.7968%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (74 samples, 0.03%)</title><rect x="22.5441%" y="1205" width="0.0251%" height="15" fill="rgb(229,92,13)" fg:x="66383" fg:w="74"/><text x="22.7941%" y="1215.50"></text></g><g><title>[libc.so.6] (44 samples, 0.01%)</title><rect x="22.6891%" y="1077" width="0.0149%" height="15" fill="rgb(245,98,39)" fg:x="66810" fg:w="44"/><text x="22.9391%" y="1087.50"></text></g><g><title>cfree (96 samples, 0.03%)</title><rect x="22.6721%" y="1093" width="0.0326%" height="15" fill="rgb(234,135,48)" fg:x="66760" fg:w="96"/><text x="22.9221%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (305 samples, 0.10%)</title><rect x="22.7777%" y="901" width="0.1036%" height="15" fill="rgb(230,98,28)" fg:x="67071" fg:w="305"/><text x="23.0277%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (463 samples, 0.16%)</title><rect x="22.7434%" y="981" width="0.1572%" height="15" fill="rgb(223,121,0)" fg:x="66970" fg:w="463"/><text x="22.9934%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (462 samples, 0.16%)</title><rect x="22.7437%" y="965" width="0.1569%" height="15" fill="rgb(234,173,33)" fg:x="66971" fg:w="462"/><text x="22.9937%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (447 samples, 0.15%)</title><rect x="22.7488%" y="949" width="0.1518%" height="15" fill="rgb(245,47,8)" fg:x="66986" fg:w="447"/><text x="22.9988%" y="959.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (447 samples, 0.15%)</title><rect x="22.7488%" y="933" width="0.1518%" height="15" fill="rgb(205,17,20)" fg:x="66986" fg:w="447"/><text x="22.9988%" y="943.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (362 samples, 0.12%)</title><rect x="22.7777%" y="917" width="0.1229%" height="15" fill="rgb(232,151,16)" fg:x="67071" fg:w="362"/><text x="23.0277%" y="927.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::get (57 samples, 0.02%)</title><rect x="22.8813%" y="901" width="0.0194%" height="15" fill="rgb(208,30,32)" fg:x="67376" fg:w="57"/><text x="23.1313%" y="911.50"></text></g><g><title>[libc.so.6] (76 samples, 0.03%)</title><rect x="23.3078%" y="805" width="0.0258%" height="15" fill="rgb(254,26,3)" fg:x="68632" fg:w="76"/><text x="23.5578%" y="815.50"></text></g><g><title>[libc.so.6] (874 samples, 0.30%)</title><rect x="23.0389%" y="821" width="0.2968%" height="15" fill="rgb(240,177,30)" fg:x="67840" fg:w="874"/><text x="23.2889%" y="831.50"></text></g><g><title>[libc.so.6] (1,030 samples, 0.35%)</title><rect x="22.9862%" y="837" width="0.3498%" height="15" fill="rgb(248,76,44)" fg:x="67685" fg:w="1030"/><text x="23.2362%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,249 samples, 0.42%)</title><rect x="22.9231%" y="901" width="0.4242%" height="15" fill="rgb(241,186,54)" fg:x="67499" fg:w="1249"/><text x="23.1731%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,249 samples, 0.42%)</title><rect x="22.9231%" y="885" width="0.4242%" height="15" fill="rgb(249,171,29)" fg:x="67499" fg:w="1249"/><text x="23.1731%" y="895.50"></text></g><g><title>alloc::alloc::realloc (1,244 samples, 0.42%)</title><rect x="22.9248%" y="869" width="0.4225%" height="15" fill="rgb(237,151,44)" fg:x="67504" fg:w="1244"/><text x="23.1748%" y="879.50"></text></g><g><title>realloc (1,219 samples, 0.41%)</title><rect x="22.9332%" y="853" width="0.4140%" height="15" fill="rgb(228,174,30)" fg:x="67529" fg:w="1219"/><text x="23.1832%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,300 samples, 0.44%)</title><rect x="22.9102%" y="917" width="0.4415%" height="15" fill="rgb(252,14,37)" fg:x="67461" fg:w="1300"/><text x="23.1602%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,341 samples, 0.46%)</title><rect x="22.9034%" y="981" width="0.4554%" height="15" fill="rgb(207,111,40)" fg:x="67441" fg:w="1341"/><text x="23.1534%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,341 samples, 0.46%)</title><rect x="22.9034%" y="965" width="0.4554%" height="15" fill="rgb(248,171,54)" fg:x="67441" fg:w="1341"/><text x="23.1534%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,339 samples, 0.45%)</title><rect x="22.9040%" y="949" width="0.4547%" height="15" fill="rgb(211,127,2)" fg:x="67443" fg:w="1339"/><text x="23.1540%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,337 samples, 0.45%)</title><rect x="22.9047%" y="933" width="0.4541%" height="15" fill="rgb(236,87,47)" fg:x="67445" fg:w="1337"/><text x="23.1547%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,915 samples, 0.65%)</title><rect x="22.7359%" y="1013" width="0.6503%" height="15" fill="rgb(223,190,45)" fg:x="66948" fg:w="1915"/><text x="22.9859%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,915 samples, 0.65%)</title><rect x="22.7359%" y="997" width="0.6503%" height="15" fill="rgb(215,5,16)" fg:x="66948" fg:w="1915"/><text x="22.9859%" y="1007.50"></text></g><g><title>core::ptr::write (75 samples, 0.03%)</title><rect x="23.3608%" y="981" width="0.0255%" height="15" fill="rgb(252,82,33)" fg:x="68788" fg:w="75"/><text x="23.6108%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (110 samples, 0.04%)</title><rect x="23.4002%" y="933" width="0.0374%" height="15" fill="rgb(247,213,44)" fg:x="68904" fg:w="110"/><text x="23.6502%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (355 samples, 0.12%)</title><rect x="23.3863%" y="1013" width="0.1206%" height="15" fill="rgb(205,196,44)" fg:x="68863" fg:w="355"/><text x="23.6363%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (355 samples, 0.12%)</title><rect x="23.3863%" y="997" width="0.1206%" height="15" fill="rgb(237,96,54)" fg:x="68863" fg:w="355"/><text x="23.6363%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (349 samples, 0.12%)</title><rect x="23.3883%" y="981" width="0.1185%" height="15" fill="rgb(230,113,34)" fg:x="68869" fg:w="349"/><text x="23.6383%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (349 samples, 0.12%)</title><rect x="23.3883%" y="965" width="0.1185%" height="15" fill="rgb(221,224,12)" fg:x="68869" fg:w="349"/><text x="23.6383%" y="975.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (314 samples, 0.11%)</title><rect x="23.4002%" y="949" width="0.1066%" height="15" fill="rgb(219,112,44)" fg:x="68904" fg:w="314"/><text x="23.6502%" y="959.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::get (204 samples, 0.07%)</title><rect x="23.4376%" y="933" width="0.0693%" height="15" fill="rgb(210,31,13)" fg:x="69014" fg:w="204"/><text x="23.6876%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (67 samples, 0.02%)</title><rect x="23.5075%" y="1013" width="0.0228%" height="15" fill="rgb(230,25,16)" fg:x="69220" fg:w="67"/><text x="23.7575%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.02%)</title><rect x="23.5075%" y="997" width="0.0228%" height="15" fill="rgb(246,108,53)" fg:x="69220" fg:w="67"/><text x="23.7575%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (67 samples, 0.02%)</title><rect x="23.5075%" y="981" width="0.0228%" height="15" fill="rgb(241,172,50)" fg:x="69220" fg:w="67"/><text x="23.7575%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (67 samples, 0.02%)</title><rect x="23.5075%" y="965" width="0.0228%" height="15" fill="rgb(235,141,10)" fg:x="69220" fg:w="67"/><text x="23.7575%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.02%)</title><rect x="23.5075%" y="949" width="0.0228%" height="15" fill="rgb(220,174,43)" fg:x="69220" fg:w="67"/><text x="23.7575%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.02%)</title><rect x="23.5075%" y="933" width="0.0228%" height="15" fill="rgb(215,181,40)" fg:x="69220" fg:w="67"/><text x="23.7575%" y="943.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.02%)</title><rect x="23.5075%" y="917" width="0.0228%" height="15" fill="rgb(230,97,2)" fg:x="69220" fg:w="67"/><text x="23.7575%" y="927.50"></text></g><g><title>malloc (55 samples, 0.02%)</title><rect x="23.5116%" y="901" width="0.0187%" height="15" fill="rgb(211,25,27)" fg:x="69232" fg:w="55"/><text x="23.7616%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,356 samples, 0.80%)</title><rect x="22.7329%" y="1029" width="0.8001%" height="15" fill="rgb(230,87,26)" fg:x="66939" fg:w="2356"/><text x="22.9829%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,390 samples, 0.81%)</title><rect x="22.7217%" y="1077" width="0.8117%" height="15" fill="rgb(227,160,17)" fg:x="66906" fg:w="2390"/><text x="22.9717%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,390 samples, 0.81%)</title><rect x="22.7217%" y="1061" width="0.8117%" height="15" fill="rgb(244,85,34)" fg:x="66906" fg:w="2390"/><text x="22.9717%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,389 samples, 0.81%)</title><rect x="22.7220%" y="1045" width="0.8113%" height="15" fill="rgb(207,70,0)" fg:x="66907" fg:w="2389"/><text x="22.9720%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,584 samples, 0.88%)</title><rect x="22.6575%" y="1141" width="0.8775%" height="15" fill="rgb(223,129,7)" fg:x="66717" fg:w="2584"/><text x="22.9075%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,584 samples, 0.88%)</title><rect x="22.6575%" y="1125" width="0.8775%" height="15" fill="rgb(246,105,7)" fg:x="66717" fg:w="2584"/><text x="22.9075%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,577 samples, 0.88%)</title><rect x="22.6599%" y="1109" width="0.8752%" height="15" fill="rgb(215,154,42)" fg:x="66724" fg:w="2577"/><text x="22.9099%" y="1119.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (2,440 samples, 0.83%)</title><rect x="22.7064%" y="1093" width="0.8286%" height="15" fill="rgb(220,215,30)" fg:x="66861" fg:w="2440"/><text x="22.9564%" y="1103.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (2,593 samples, 0.88%)</title><rect x="22.6551%" y="1157" width="0.8806%" height="15" fill="rgb(228,81,51)" fg:x="66710" fg:w="2593"/><text x="22.9051%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (177 samples, 0.06%)</title><rect x="23.5917%" y="997" width="0.0601%" height="15" fill="rgb(247,71,54)" fg:x="69468" fg:w="177"/><text x="23.8417%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (157 samples, 0.05%)</title><rect x="23.5985%" y="981" width="0.0533%" height="15" fill="rgb(234,176,34)" fg:x="69488" fg:w="157"/><text x="23.8485%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (157 samples, 0.05%)</title><rect x="23.5985%" y="965" width="0.0533%" height="15" fill="rgb(241,103,54)" fg:x="69488" fg:w="157"/><text x="23.8485%" y="975.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (150 samples, 0.05%)</title><rect x="23.6009%" y="949" width="0.0509%" height="15" fill="rgb(228,22,34)" fg:x="69495" fg:w="150"/><text x="23.8509%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (150 samples, 0.05%)</title><rect x="23.6009%" y="933" width="0.0509%" height="15" fill="rgb(241,179,48)" fg:x="69495" fg:w="150"/><text x="23.8509%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (150 samples, 0.05%)</title><rect x="23.6009%" y="917" width="0.0509%" height="15" fill="rgb(235,167,37)" fg:x="69495" fg:w="150"/><text x="23.8509%" y="927.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (150 samples, 0.05%)</title><rect x="23.6009%" y="901" width="0.0509%" height="15" fill="rgb(213,109,30)" fg:x="69495" fg:w="150"/><text x="23.8509%" y="911.50"></text></g><g><title>[libc.so.6] (139 samples, 0.05%)</title><rect x="23.6046%" y="885" width="0.0472%" height="15" fill="rgb(222,172,16)" fg:x="69506" fg:w="139"/><text x="23.8546%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (185 samples, 0.06%)</title><rect x="23.5917%" y="1013" width="0.0628%" height="15" fill="rgb(233,192,5)" fg:x="69468" fg:w="185"/><text x="23.8417%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (42 samples, 0.01%)</title><rect x="23.6794%" y="949" width="0.0143%" height="15" fill="rgb(247,189,41)" fg:x="69726" fg:w="42"/><text x="23.9294%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (42 samples, 0.01%)</title><rect x="23.6794%" y="933" width="0.0143%" height="15" fill="rgb(218,134,47)" fg:x="69726" fg:w="42"/><text x="23.9294%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (42 samples, 0.01%)</title><rect x="23.6794%" y="917" width="0.0143%" height="15" fill="rgb(216,29,3)" fg:x="69726" fg:w="42"/><text x="23.9294%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 0.01%)</title><rect x="23.6794%" y="901" width="0.0143%" height="15" fill="rgb(246,140,12)" fg:x="69726" fg:w="42"/><text x="23.9294%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.01%)</title><rect x="23.6797%" y="885" width="0.0139%" height="15" fill="rgb(230,136,11)" fg:x="69727" fg:w="41"/><text x="23.9297%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (40 samples, 0.01%)</title><rect x="23.6800%" y="869" width="0.0136%" height="15" fill="rgb(247,22,47)" fg:x="69728" fg:w="40"/><text x="23.9300%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (40 samples, 0.01%)</title><rect x="23.6800%" y="853" width="0.0136%" height="15" fill="rgb(218,84,22)" fg:x="69728" fg:w="40"/><text x="23.9300%" y="863.50"></text></g><g><title>alloc::alloc::realloc (40 samples, 0.01%)</title><rect x="23.6800%" y="837" width="0.0136%" height="15" fill="rgb(216,87,39)" fg:x="69728" fg:w="40"/><text x="23.9300%" y="847.50"></text></g><g><title>realloc (40 samples, 0.01%)</title><rect x="23.6800%" y="821" width="0.0136%" height="15" fill="rgb(221,178,8)" fg:x="69728" fg:w="40"/><text x="23.9300%" y="831.50"></text></g><g><title>[libc.so.6] (35 samples, 0.01%)</title><rect x="23.6817%" y="805" width="0.0119%" height="15" fill="rgb(230,42,11)" fg:x="69733" fg:w="35"/><text x="23.9317%" y="815.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="23.6828%" y="789" width="0.0109%" height="15" fill="rgb(237,229,4)" fg:x="69736" fg:w="32"/><text x="23.9328%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (49 samples, 0.02%)</title><rect x="23.6790%" y="981" width="0.0166%" height="15" fill="rgb(222,31,33)" fg:x="69725" fg:w="49"/><text x="23.9290%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (49 samples, 0.02%)</title><rect x="23.6790%" y="965" width="0.0166%" height="15" fill="rgb(210,17,39)" fg:x="69725" fg:w="49"/><text x="23.9290%" y="975.50"></text></g><g><title>zenoh::net::routing::network::Link::set_pid_mapping (52 samples, 0.02%)</title><rect x="23.6790%" y="1013" width="0.0177%" height="15" fill="rgb(244,93,20)" fg:x="69725" fg:w="52"/><text x="23.9290%" y="1023.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (52 samples, 0.02%)</title><rect x="23.6790%" y="997" width="0.0177%" height="15" fill="rgb(210,40,47)" fg:x="69725" fg:w="52"/><text x="23.9290%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::add_node (41 samples, 0.01%)</title><rect x="23.6967%" y="1013" width="0.0139%" height="15" fill="rgb(239,211,47)" fg:x="69777" fg:w="41"/><text x="23.9467%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (485 samples, 0.16%)</title><rect x="23.5547%" y="1109" width="0.1647%" height="15" fill="rgb(251,223,49)" fg:x="69359" fg:w="485"/><text x="23.8047%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (485 samples, 0.16%)</title><rect x="23.5547%" y="1093" width="0.1647%" height="15" fill="rgb(221,149,5)" fg:x="69359" fg:w="485"/><text x="23.8047%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (485 samples, 0.16%)</title><rect x="23.5547%" y="1077" width="0.1647%" height="15" fill="rgb(219,224,51)" fg:x="69359" fg:w="485"/><text x="23.8047%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (473 samples, 0.16%)</title><rect x="23.5588%" y="1061" width="0.1606%" height="15" fill="rgb(223,7,8)" fg:x="69371" fg:w="473"/><text x="23.8088%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (445 samples, 0.15%)</title><rect x="23.5683%" y="1045" width="0.1511%" height="15" fill="rgb(241,217,22)" fg:x="69399" fg:w="445"/><text x="23.8183%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (411 samples, 0.14%)</title><rect x="23.5799%" y="1029" width="0.1396%" height="15" fill="rgb(248,209,0)" fg:x="69433" fg:w="411"/><text x="23.8299%" y="1039.50"></text></g><g><title>[libc.so.6] (35 samples, 0.01%)</title><rect x="23.7344%" y="933" width="0.0119%" height="15" fill="rgb(217,205,4)" fg:x="69888" fg:w="35"/><text x="23.9844%" y="943.50"></text></g><g><title>[libc.so.6] (61 samples, 0.02%)</title><rect x="23.7272%" y="949" width="0.0207%" height="15" fill="rgb(228,124,39)" fg:x="69867" fg:w="61"/><text x="23.9772%" y="959.50"></text></g><g><title>[libc.so.6] (74 samples, 0.03%)</title><rect x="23.7249%" y="965" width="0.0251%" height="15" fill="rgb(250,116,42)" fg:x="69860" fg:w="74"/><text x="23.9749%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (96 samples, 0.03%)</title><rect x="23.7194%" y="1109" width="0.0326%" height="15" fill="rgb(223,202,9)" fg:x="69844" fg:w="96"/><text x="23.9694%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (96 samples, 0.03%)</title><rect x="23.7194%" y="1093" width="0.0326%" height="15" fill="rgb(242,222,40)" fg:x="69844" fg:w="96"/><text x="23.9694%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (96 samples, 0.03%)</title><rect x="23.7194%" y="1077" width="0.0326%" height="15" fill="rgb(229,99,46)" fg:x="69844" fg:w="96"/><text x="23.9694%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (96 samples, 0.03%)</title><rect x="23.7194%" y="1061" width="0.0326%" height="15" fill="rgb(225,56,46)" fg:x="69844" fg:w="96"/><text x="23.9694%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (93 samples, 0.03%)</title><rect x="23.7205%" y="1045" width="0.0316%" height="15" fill="rgb(227,94,5)" fg:x="69847" fg:w="93"/><text x="23.9705%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (91 samples, 0.03%)</title><rect x="23.7211%" y="1029" width="0.0309%" height="15" fill="rgb(205,112,38)" fg:x="69849" fg:w="91"/><text x="23.9711%" y="1039.50"></text></g><g><title>alloc::alloc::Global::grow_impl (91 samples, 0.03%)</title><rect x="23.7211%" y="1013" width="0.0309%" height="15" fill="rgb(231,133,46)" fg:x="69849" fg:w="91"/><text x="23.9711%" y="1023.50"></text></g><g><title>alloc::alloc::realloc (91 samples, 0.03%)</title><rect x="23.7211%" y="997" width="0.0309%" height="15" fill="rgb(217,16,9)" fg:x="69849" fg:w="91"/><text x="23.9711%" y="1007.50"></text></g><g><title>realloc (89 samples, 0.03%)</title><rect x="23.7218%" y="981" width="0.0302%" height="15" fill="rgb(249,173,9)" fg:x="69851" fg:w="89"/><text x="23.9718%" y="991.50"></text></g><g><title>[libc.so.6] (131 samples, 0.04%)</title><rect x="23.8166%" y="1061" width="0.0445%" height="15" fill="rgb(205,163,53)" fg:x="70130" fg:w="131"/><text x="24.0666%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;zenoh_protocol::proto::msg::LinkState&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (288 samples, 0.10%)</title><rect x="23.7639%" y="1109" width="0.0978%" height="15" fill="rgb(217,54,41)" fg:x="69975" fg:w="288"/><text x="24.0139%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;zenoh_protocol::proto::msg::LinkState&gt;&gt; (288 samples, 0.10%)</title><rect x="23.7639%" y="1093" width="0.0978%" height="15" fill="rgb(228,216,12)" fg:x="69975" fg:w="288"/><text x="24.0139%" y="1103.50"></text></g><g><title>cfree (250 samples, 0.08%)</title><rect x="23.7768%" y="1077" width="0.0849%" height="15" fill="rgb(244,228,15)" fg:x="70013" fg:w="250"/><text x="24.0268%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (920 samples, 0.31%)</title><rect x="23.5534%" y="1125" width="0.3124%" height="15" fill="rgb(221,176,53)" fg:x="69355" fg:w="920"/><text x="23.8034%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (942 samples, 0.32%)</title><rect x="23.5506%" y="1141" width="0.3199%" height="15" fill="rgb(205,94,34)" fg:x="69347" fg:w="942"/><text x="23.8006%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.03%)</title><rect x="23.9443%" y="1093" width="0.0285%" height="15" fill="rgb(213,110,48)" fg:x="70506" fg:w="84"/><text x="24.1943%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.01%)</title><rect x="24.0580%" y="1061" width="0.0102%" height="15" fill="rgb(236,142,28)" fg:x="70841" fg:w="30"/><text x="24.3080%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (56 samples, 0.02%)</title><rect x="24.1130%" y="949" width="0.0190%" height="15" fill="rgb(225,135,29)" fg:x="71003" fg:w="56"/><text x="24.3630%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.02%)</title><rect x="24.1130%" y="933" width="0.0190%" height="15" fill="rgb(252,45,31)" fg:x="71003" fg:w="56"/><text x="24.3630%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.02%)</title><rect x="24.1130%" y="917" width="0.0190%" height="15" fill="rgb(211,187,50)" fg:x="71003" fg:w="56"/><text x="24.3630%" y="927.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.02%)</title><rect x="24.1130%" y="901" width="0.0190%" height="15" fill="rgb(229,109,7)" fg:x="71003" fg:w="56"/><text x="24.3630%" y="911.50"></text></g><g><title>malloc (56 samples, 0.02%)</title><rect x="24.1130%" y="885" width="0.0190%" height="15" fill="rgb(251,131,51)" fg:x="71003" fg:w="56"/><text x="24.3630%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (57 samples, 0.02%)</title><rect x="24.1130%" y="981" width="0.0194%" height="15" fill="rgb(251,180,35)" fg:x="71003" fg:w="57"/><text x="24.3630%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57 samples, 0.02%)</title><rect x="24.1130%" y="965" width="0.0194%" height="15" fill="rgb(211,46,32)" fg:x="71003" fg:w="57"/><text x="24.3630%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.02%)</title><rect x="24.1130%" y="1045" width="0.0234%" height="15" fill="rgb(248,123,17)" fg:x="71003" fg:w="69"/><text x="24.3630%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.02%)</title><rect x="24.1130%" y="1029" width="0.0234%" height="15" fill="rgb(227,141,18)" fg:x="71003" fg:w="69"/><text x="24.3630%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.02%)</title><rect x="24.1130%" y="1013" width="0.0234%" height="15" fill="rgb(216,102,9)" fg:x="71003" fg:w="69"/><text x="24.3630%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.02%)</title><rect x="24.1130%" y="997" width="0.0234%" height="15" fill="rgb(253,47,13)" fg:x="71003" fg:w="69"/><text x="24.3630%" y="1007.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.01%)</title><rect x="24.1555%" y="1013" width="0.0112%" height="15" fill="rgb(226,93,23)" fg:x="71128" fg:w="33"/><text x="24.4055%" y="1023.50"></text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (33 samples, 0.01%)</title><rect x="24.1555%" y="997" width="0.0112%" height="15" fill="rgb(247,104,17)" fg:x="71128" fg:w="33"/><text x="24.4055%" y="1007.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (33 samples, 0.01%)</title><rect x="24.1555%" y="981" width="0.0112%" height="15" fill="rgb(233,203,26)" fg:x="71128" fg:w="33"/><text x="24.4055%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (31 samples, 0.01%)</title><rect x="24.1562%" y="965" width="0.0105%" height="15" fill="rgb(244,98,49)" fg:x="71130" fg:w="31"/><text x="24.4062%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (240 samples, 0.08%)</title><rect x="24.1531%" y="1029" width="0.0815%" height="15" fill="rgb(235,134,22)" fg:x="71121" fg:w="240"/><text x="24.4031%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (200 samples, 0.07%)</title><rect x="24.1667%" y="1013" width="0.0679%" height="15" fill="rgb(221,70,32)" fg:x="71161" fg:w="200"/><text x="24.4167%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (200 samples, 0.07%)</title><rect x="24.1667%" y="997" width="0.0679%" height="15" fill="rgb(238,15,50)" fg:x="71161" fg:w="200"/><text x="24.4167%" y="1007.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (195 samples, 0.07%)</title><rect x="24.1684%" y="981" width="0.0662%" height="15" fill="rgb(215,221,48)" fg:x="71166" fg:w="195"/><text x="24.4184%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (190 samples, 0.06%)</title><rect x="24.1701%" y="965" width="0.0645%" height="15" fill="rgb(236,73,3)" fg:x="71171" fg:w="190"/><text x="24.4201%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (190 samples, 0.06%)</title><rect x="24.1701%" y="949" width="0.0645%" height="15" fill="rgb(250,107,11)" fg:x="71171" fg:w="190"/><text x="24.4201%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (190 samples, 0.06%)</title><rect x="24.1701%" y="933" width="0.0645%" height="15" fill="rgb(242,39,14)" fg:x="71171" fg:w="190"/><text x="24.4201%" y="943.50"></text></g><g><title>[libc.so.6] (180 samples, 0.06%)</title><rect x="24.1735%" y="917" width="0.0611%" height="15" fill="rgb(248,164,37)" fg:x="71181" fg:w="180"/><text x="24.4235%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (247 samples, 0.08%)</title><rect x="24.1531%" y="1045" width="0.0839%" height="15" fill="rgb(217,60,12)" fg:x="71121" fg:w="247"/><text x="24.4031%" y="1055.50"></text></g><g><title>[libc.so.6] (106 samples, 0.04%)</title><rect x="24.2652%" y="949" width="0.0360%" height="15" fill="rgb(240,125,29)" fg:x="71451" fg:w="106"/><text x="24.5152%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (172 samples, 0.06%)</title><rect x="24.2465%" y="997" width="0.0584%" height="15" fill="rgb(208,207,28)" fg:x="71396" fg:w="172"/><text x="24.4965%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (172 samples, 0.06%)</title><rect x="24.2465%" y="981" width="0.0584%" height="15" fill="rgb(209,159,27)" fg:x="71396" fg:w="172"/><text x="24.4965%" y="991.50"></text></g><g><title>cfree (163 samples, 0.06%)</title><rect x="24.2496%" y="965" width="0.0554%" height="15" fill="rgb(251,176,53)" fg:x="71405" fg:w="163"/><text x="24.4996%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;&gt; (179 samples, 0.06%)</title><rect x="24.2455%" y="1045" width="0.0608%" height="15" fill="rgb(211,85,7)" fg:x="71393" fg:w="179"/><text x="24.4955%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::PeerId&gt;&gt; (179 samples, 0.06%)</title><rect x="24.2455%" y="1029" width="0.0608%" height="15" fill="rgb(216,64,54)" fg:x="71393" fg:w="179"/><text x="24.4955%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (179 samples, 0.06%)</title><rect x="24.2455%" y="1013" width="0.0608%" height="15" fill="rgb(217,54,24)" fg:x="71393" fg:w="179"/><text x="24.4955%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (289 samples, 0.10%)</title><rect x="24.3093%" y="901" width="0.0981%" height="15" fill="rgb(208,206,53)" fg:x="71581" fg:w="289"/><text x="24.5593%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (289 samples, 0.10%)</title><rect x="24.3093%" y="885" width="0.0981%" height="15" fill="rgb(251,74,39)" fg:x="71581" fg:w="289"/><text x="24.5593%" y="895.50"></text></g><g><title>cfree (286 samples, 0.10%)</title><rect x="24.3103%" y="869" width="0.0971%" height="15" fill="rgb(226,47,5)" fg:x="71584" fg:w="286"/><text x="24.5603%" y="879.50"></text></g><g><title>[libc.so.6] (73 samples, 0.02%)</title><rect x="24.3827%" y="853" width="0.0248%" height="15" fill="rgb(234,111,33)" fg:x="71797" fg:w="73"/><text x="24.6327%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (370 samples, 0.13%)</title><rect x="24.3090%" y="965" width="0.1257%" height="15" fill="rgb(251,14,10)" fg:x="71580" fg:w="370"/><text x="24.5590%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (370 samples, 0.13%)</title><rect x="24.3090%" y="949" width="0.1257%" height="15" fill="rgb(232,43,0)" fg:x="71580" fg:w="370"/><text x="24.5590%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (370 samples, 0.13%)</title><rect x="24.3090%" y="933" width="0.1257%" height="15" fill="rgb(222,68,43)" fg:x="71580" fg:w="370"/><text x="24.5590%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (369 samples, 0.13%)</title><rect x="24.3093%" y="917" width="0.1253%" height="15" fill="rgb(217,24,23)" fg:x="71581" fg:w="369"/><text x="24.5593%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (80 samples, 0.03%)</title><rect x="24.4075%" y="901" width="0.0272%" height="15" fill="rgb(229,209,14)" fg:x="71870" fg:w="80"/><text x="24.6575%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (402 samples, 0.14%)</title><rect x="24.3080%" y="1013" width="0.1365%" height="15" fill="rgb(250,149,48)" fg:x="71577" fg:w="402"/><text x="24.5580%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (402 samples, 0.14%)</title><rect x="24.3080%" y="997" width="0.1365%" height="15" fill="rgb(210,120,37)" fg:x="71577" fg:w="402"/><text x="24.5580%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (399 samples, 0.14%)</title><rect x="24.3090%" y="981" width="0.1355%" height="15" fill="rgb(210,21,8)" fg:x="71580" fg:w="399"/><text x="24.5590%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (72 samples, 0.02%)</title><rect x="24.4445%" y="981" width="0.0245%" height="15" fill="rgb(243,145,7)" fg:x="71979" fg:w="72"/><text x="24.6945%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (72 samples, 0.02%)</title><rect x="24.4445%" y="965" width="0.0245%" height="15" fill="rgb(238,178,32)" fg:x="71979" fg:w="72"/><text x="24.6945%" y="975.50"></text></g><g><title>cfree (63 samples, 0.02%)</title><rect x="24.4475%" y="949" width="0.0214%" height="15" fill="rgb(222,4,10)" fg:x="71988" fg:w="63"/><text x="24.6975%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;&gt; (485 samples, 0.16%)</title><rect x="24.3063%" y="1045" width="0.1647%" height="15" fill="rgb(239,7,37)" fg:x="71572" fg:w="485"/><text x="24.5563%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (480 samples, 0.16%)</title><rect x="24.3080%" y="1029" width="0.1630%" height="15" fill="rgb(215,31,37)" fg:x="71577" fg:w="480"/><text x="24.5580%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (78 samples, 0.03%)</title><rect x="24.4445%" y="1013" width="0.0265%" height="15" fill="rgb(224,83,33)" fg:x="71979" fg:w="78"/><text x="24.6945%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.03%)</title><rect x="24.4445%" y="997" width="0.0265%" height="15" fill="rgb(239,55,3)" fg:x="71979" fg:w="78"/><text x="24.6945%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (258 samples, 0.09%)</title><rect x="24.4717%" y="1029" width="0.0876%" height="15" fill="rgb(247,92,11)" fg:x="72059" fg:w="258"/><text x="24.7217%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (260 samples, 0.09%)</title><rect x="24.4717%" y="1045" width="0.0883%" height="15" fill="rgb(239,200,7)" fg:x="72059" fg:w="260"/><text x="24.7217%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Link::set_pid_mapping (67 samples, 0.02%)</title><rect x="24.5684%" y="1045" width="0.0228%" height="15" fill="rgb(227,115,8)" fg:x="72344" fg:w="67"/><text x="24.8184%" y="1055.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (67 samples, 0.02%)</title><rect x="24.5684%" y="1029" width="0.0228%" height="15" fill="rgb(215,189,27)" fg:x="72344" fg:w="67"/><text x="24.8184%" y="1039.50"></text></g><g><title>core::mem::replace (35 samples, 0.01%)</title><rect x="24.5793%" y="1013" width="0.0119%" height="15" fill="rgb(251,216,39)" fg:x="72376" fg:w="35"/><text x="24.8293%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::add_node (37 samples, 0.01%)</title><rect x="24.5912%" y="1045" width="0.0126%" height="15" fill="rgb(207,29,47)" fg:x="72411" fg:w="37"/><text x="24.8412%" y="1055.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.06%)</title><rect x="24.6126%" y="997" width="0.0581%" height="15" fill="rgb(210,71,34)" fg:x="72474" fg:w="171"/><text x="24.8626%" y="1007.50"></text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (171 samples, 0.06%)</title><rect x="24.6126%" y="981" width="0.0581%" height="15" fill="rgb(253,217,51)" fg:x="72474" fg:w="171"/><text x="24.8626%" y="991.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (160 samples, 0.05%)</title><rect x="24.6163%" y="965" width="0.0543%" height="15" fill="rgb(222,117,46)" fg:x="72485" fg:w="160"/><text x="24.8663%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (156 samples, 0.05%)</title><rect x="24.6177%" y="949" width="0.0530%" height="15" fill="rgb(226,132,6)" fg:x="72489" fg:w="156"/><text x="24.8677%" y="959.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (52 samples, 0.02%)</title><rect x="24.6720%" y="965" width="0.0177%" height="15" fill="rgb(254,145,51)" fg:x="72649" fg:w="52"/><text x="24.9220%" y="975.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_weight (37 samples, 0.01%)</title><rect x="24.6771%" y="949" width="0.0126%" height="15" fill="rgb(231,199,27)" fg:x="72664" fg:w="37"/><text x="24.9271%" y="959.50"></text></g><g><title>[libc.so.6] (419 samples, 0.14%)</title><rect x="24.7192%" y="901" width="0.1423%" height="15" fill="rgb(245,158,14)" fg:x="72788" fg:w="419"/><text x="24.9692%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (760 samples, 0.26%)</title><rect x="24.6038%" y="1013" width="0.2581%" height="15" fill="rgb(240,113,14)" fg:x="72448" fg:w="760"/><text x="24.8538%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (563 samples, 0.19%)</title><rect x="24.6707%" y="997" width="0.1912%" height="15" fill="rgb(210,20,13)" fg:x="72645" fg:w="563"/><text x="24.9207%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx::{{closure}} (559 samples, 0.19%)</title><rect x="24.6720%" y="981" width="0.1898%" height="15" fill="rgb(241,144,13)" fg:x="72649" fg:w="559"/><text x="24.9220%" y="991.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (507 samples, 0.17%)</title><rect x="24.6897%" y="965" width="0.1722%" height="15" fill="rgb(235,43,34)" fg:x="72701" fg:w="507"/><text x="24.9397%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (490 samples, 0.17%)</title><rect x="24.6955%" y="949" width="0.1664%" height="15" fill="rgb(208,36,20)" fg:x="72718" fg:w="490"/><text x="24.9455%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (490 samples, 0.17%)</title><rect x="24.6955%" y="933" width="0.1664%" height="15" fill="rgb(239,204,10)" fg:x="72718" fg:w="490"/><text x="24.9455%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (490 samples, 0.17%)</title><rect x="24.6955%" y="917" width="0.1664%" height="15" fill="rgb(217,84,43)" fg:x="72718" fg:w="490"/><text x="24.9455%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (780 samples, 0.26%)</title><rect x="24.6038%" y="1029" width="0.2649%" height="15" fill="rgb(241,170,50)" fg:x="72448" fg:w="780"/><text x="24.8538%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,976 samples, 1.01%)</title><rect x="23.8706%" y="1141" width="1.0107%" height="15" fill="rgb(226,205,29)" fg:x="70289" fg:w="2976"/><text x="24.1206%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2,976 samples, 1.01%)</title><rect x="23.8706%" y="1125" width="1.0107%" height="15" fill="rgb(233,113,1)" fg:x="70289" fg:w="2976"/><text x="24.1206%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,976 samples, 1.01%)</title><rect x="23.8706%" y="1109" width="1.0107%" height="15" fill="rgb(253,98,13)" fg:x="70289" fg:w="2976"/><text x="24.1206%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2,671 samples, 0.91%)</title><rect x="23.9741%" y="1093" width="0.9071%" height="15" fill="rgb(211,115,12)" fg:x="70594" fg:w="2671"/><text x="24.2241%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,540 samples, 0.86%)</title><rect x="24.0186%" y="1077" width="0.8626%" height="15" fill="rgb(208,12,16)" fg:x="70725" fg:w="2540"/><text x="24.2686%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (2,394 samples, 0.81%)</title><rect x="24.0682%" y="1061" width="0.8130%" height="15" fill="rgb(237,193,54)" fg:x="70871" fg:w="2394"/><text x="24.3182%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (817 samples, 0.28%)</title><rect x="24.6038%" y="1045" width="0.2775%" height="15" fill="rgb(243,22,42)" fg:x="72448" fg:w="817"/><text x="24.8538%" y="1055.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_indices (37 samples, 0.01%)</title><rect x="24.8687%" y="1029" width="0.0126%" height="15" fill="rgb(233,151,36)" fg:x="73228" fg:w="37"/><text x="25.1187%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (571 samples, 0.19%)</title><rect x="24.8829%" y="1141" width="0.1939%" height="15" fill="rgb(237,57,45)" fg:x="73270" fg:w="571"/><text x="25.1329%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (571 samples, 0.19%)</title><rect x="24.8829%" y="1125" width="0.1939%" height="15" fill="rgb(221,88,17)" fg:x="73270" fg:w="571"/><text x="25.1329%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (570 samples, 0.19%)</title><rect x="24.8833%" y="1109" width="0.1936%" height="15" fill="rgb(230,79,15)" fg:x="73271" fg:w="570"/><text x="25.1333%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (570 samples, 0.19%)</title><rect x="24.8833%" y="1093" width="0.1936%" height="15" fill="rgb(213,57,13)" fg:x="73271" fg:w="570"/><text x="25.1333%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (570 samples, 0.19%)</title><rect x="24.8833%" y="1077" width="0.1936%" height="15" fill="rgb(222,116,39)" fg:x="73271" fg:w="570"/><text x="25.1333%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (570 samples, 0.19%)</title><rect x="24.8833%" y="1061" width="0.1936%" height="15" fill="rgb(245,107,2)" fg:x="73271" fg:w="570"/><text x="25.1333%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (570 samples, 0.19%)</title><rect x="24.8833%" y="1045" width="0.1936%" height="15" fill="rgb(238,1,10)" fg:x="73271" fg:w="570"/><text x="25.1333%" y="1055.50"></text></g><g><title>malloc (549 samples, 0.19%)</title><rect x="24.8904%" y="1029" width="0.1864%" height="15" fill="rgb(249,4,48)" fg:x="73292" fg:w="549"/><text x="25.1404%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;)&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (63 samples, 0.02%)</title><rect x="25.0768%" y="1141" width="0.0214%" height="15" fill="rgb(223,151,18)" fg:x="73841" fg:w="63"/><text x="25.3268%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;)&gt;&gt; (63 samples, 0.02%)</title><rect x="25.0768%" y="1125" width="0.0214%" height="15" fill="rgb(227,65,43)" fg:x="73841" fg:w="63"/><text x="25.3268%" y="1135.50"></text></g><g><title>cfree (39 samples, 0.01%)</title><rect x="25.0850%" y="1109" width="0.0132%" height="15" fill="rgb(218,40,45)" fg:x="73865" fg:w="39"/><text x="25.3350%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,602 samples, 1.56%)</title><rect x="23.5357%" y="1157" width="1.5629%" height="15" fill="rgb(252,121,31)" fg:x="69303" fg:w="4602"/><text x="23.7857%" y="1167.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7,419 samples, 2.52%)</title><rect x="22.5919%" y="1173" width="2.5195%" height="15" fill="rgb(219,158,43)" fg:x="66524" fg:w="7419"/><text x="22.8419%" y="1183.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (7,458 samples, 2.53%)</title><rect x="22.5797%" y="1205" width="2.5328%" height="15" fill="rgb(231,162,42)" fg:x="66488" fg:w="7458"/><text x="22.8297%" y="1215.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7,458 samples, 2.53%)</title><rect x="22.5797%" y="1189" width="2.5328%" height="15" fill="rgb(217,179,25)" fg:x="66488" fg:w="7458"/><text x="22.8297%" y="1199.50">&lt;a..</text></g><g><title>&lt;vec_map::IterMut&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 0.03%)</title><rect x="25.1125%" y="1157" width="0.0316%" height="15" fill="rgb(206,212,31)" fg:x="73946" fg:w="93"/><text x="25.3625%" y="1167.50"></text></g><g><title>&lt;vec_map::ValuesMut&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.04%)</title><rect x="25.1125%" y="1173" width="0.0363%" height="15" fill="rgb(235,144,12)" fg:x="73946" fg:w="107"/><text x="25.3625%" y="1183.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (152 samples, 0.05%)</title><rect x="25.1495%" y="1141" width="0.0516%" height="15" fill="rgb(213,51,10)" fg:x="74055" fg:w="152"/><text x="25.3995%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (152 samples, 0.05%)</title><rect x="25.1495%" y="1125" width="0.0516%" height="15" fill="rgb(231,145,14)" fg:x="74055" fg:w="152"/><text x="25.3995%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (152 samples, 0.05%)</title><rect x="25.1495%" y="1109" width="0.0516%" height="15" fill="rgb(235,15,28)" fg:x="74055" fg:w="152"/><text x="25.3995%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (152 samples, 0.05%)</title><rect x="25.1495%" y="1093" width="0.0516%" height="15" fill="rgb(237,206,10)" fg:x="74055" fg:w="152"/><text x="25.3995%" y="1103.50"></text></g><g><title>[libc.so.6] (134 samples, 0.05%)</title><rect x="25.1556%" y="1077" width="0.0455%" height="15" fill="rgb(236,227,27)" fg:x="74073" fg:w="134"/><text x="25.4056%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (262 samples, 0.09%)</title><rect x="25.1125%" y="1205" width="0.0890%" height="15" fill="rgb(246,83,35)" fg:x="73946" fg:w="262"/><text x="25.3625%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (262 samples, 0.09%)</title><rect x="25.1125%" y="1189" width="0.0890%" height="15" fill="rgb(220,136,24)" fg:x="73946" fg:w="262"/><text x="25.3625%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (155 samples, 0.05%)</title><rect x="25.1488%" y="1173" width="0.0526%" height="15" fill="rgb(217,3,25)" fg:x="74053" fg:w="155"/><text x="25.3988%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (153 samples, 0.05%)</title><rect x="25.1495%" y="1157" width="0.0520%" height="15" fill="rgb(239,24,14)" fg:x="74055" fg:w="153"/><text x="25.3995%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (32 samples, 0.01%)</title><rect x="25.2035%" y="1125" width="0.0109%" height="15" fill="rgb(244,16,53)" fg:x="74214" fg:w="32"/><text x="25.4535%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.01%)</title><rect x="25.2035%" y="1109" width="0.0109%" height="15" fill="rgb(208,175,44)" fg:x="74214" fg:w="32"/><text x="25.4535%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.01%)</title><rect x="25.2035%" y="1093" width="0.0109%" height="15" fill="rgb(252,18,48)" fg:x="74214" fg:w="32"/><text x="25.4535%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition::extend::{{closure}} (37 samples, 0.01%)</title><rect x="25.2028%" y="1173" width="0.0126%" height="15" fill="rgb(234,199,32)" fg:x="74212" fg:w="37"/><text x="25.4528%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_one (37 samples, 0.01%)</title><rect x="25.2028%" y="1157" width="0.0126%" height="15" fill="rgb(225,77,54)" fg:x="74212" fg:w="37"/><text x="25.4528%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (35 samples, 0.01%)</title><rect x="25.2035%" y="1141" width="0.0119%" height="15" fill="rgb(225,42,25)" fg:x="74214" fg:w="35"/><text x="25.4535%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition (49 samples, 0.02%)</title><rect x="25.2015%" y="1205" width="0.0166%" height="15" fill="rgb(242,227,46)" fg:x="74208" fg:w="49"/><text x="25.4515%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (48 samples, 0.02%)</title><rect x="25.2018%" y="1189" width="0.0163%" height="15" fill="rgb(246,197,35)" fg:x="74209" fg:w="48"/><text x="25.4518%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (40 samples, 0.01%)</title><rect x="25.2181%" y="1205" width="0.0136%" height="15" fill="rgb(215,159,26)" fg:x="74257" fg:w="40"/><text x="25.4681%" y="1215.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (398 samples, 0.14%)</title><rect x="25.2443%" y="1157" width="0.1352%" height="15" fill="rgb(212,194,50)" fg:x="74334" fg:w="398"/><text x="25.4943%" y="1167.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (398 samples, 0.14%)</title><rect x="25.2443%" y="1141" width="0.1352%" height="15" fill="rgb(246,132,1)" fg:x="74334" fg:w="398"/><text x="25.4943%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (294 samples, 0.10%)</title><rect x="25.2796%" y="1125" width="0.0998%" height="15" fill="rgb(217,71,7)" fg:x="74438" fg:w="294"/><text x="25.5296%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (294 samples, 0.10%)</title><rect x="25.2796%" y="1109" width="0.0998%" height="15" fill="rgb(252,59,32)" fg:x="74438" fg:w="294"/><text x="25.5296%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (294 samples, 0.10%)</title><rect x="25.2796%" y="1093" width="0.0998%" height="15" fill="rgb(253,204,25)" fg:x="74438" fg:w="294"/><text x="25.5296%" y="1103.50"></text></g><g><title>[libc.so.6] (277 samples, 0.09%)</title><rect x="25.2854%" y="1077" width="0.0941%" height="15" fill="rgb(232,21,16)" fg:x="74455" fg:w="277"/><text x="25.5354%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (420 samples, 0.14%)</title><rect x="25.2392%" y="1205" width="0.1426%" height="15" fill="rgb(248,90,29)" fg:x="74319" fg:w="420"/><text x="25.4892%" y="1215.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (420 samples, 0.14%)</title><rect x="25.2392%" y="1189" width="0.1426%" height="15" fill="rgb(249,223,7)" fg:x="74319" fg:w="420"/><text x="25.4892%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (420 samples, 0.14%)</title><rect x="25.2392%" y="1173" width="0.1426%" height="15" fill="rgb(231,119,42)" fg:x="74319" fg:w="420"/><text x="25.4892%" y="1183.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::find_edge_undirected_from_node (225 samples, 0.08%)</title><rect x="25.4001%" y="1157" width="0.0764%" height="15" fill="rgb(215,41,35)" fg:x="74793" fg:w="225"/><text x="25.6501%" y="1167.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::update_edge (274 samples, 0.09%)</title><rect x="25.3852%" y="1205" width="0.0931%" height="15" fill="rgb(220,44,45)" fg:x="74749" fg:w="274"/><text x="25.6352%" y="1215.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::find_edge (230 samples, 0.08%)</title><rect x="25.4001%" y="1189" width="0.0781%" height="15" fill="rgb(253,197,36)" fg:x="74793" fg:w="230"/><text x="25.6501%" y="1199.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::find_edge_undirected (230 samples, 0.08%)</title><rect x="25.4001%" y="1173" width="0.0781%" height="15" fill="rgb(245,225,54)" fg:x="74793" fg:w="230"/><text x="25.6501%" y="1183.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.02%)</title><rect x="25.4983%" y="1157" width="0.0190%" height="15" fill="rgb(239,94,37)" fg:x="75082" fg:w="56"/><text x="25.7483%" y="1167.50"></text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (56 samples, 0.02%)</title><rect x="25.4983%" y="1141" width="0.0190%" height="15" fill="rgb(242,217,10)" fg:x="75082" fg:w="56"/><text x="25.7483%" y="1151.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (45 samples, 0.02%)</title><rect x="25.5020%" y="1125" width="0.0153%" height="15" fill="rgb(250,193,7)" fg:x="75093" fg:w="45"/><text x="25.7520%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (34 samples, 0.01%)</title><rect x="25.5058%" y="1109" width="0.0115%" height="15" fill="rgb(230,104,19)" fg:x="75104" fg:w="34"/><text x="25.7558%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (33 samples, 0.01%)</title><rect x="25.5231%" y="1093" width="0.0112%" height="15" fill="rgb(230,181,4)" fg:x="75155" fg:w="33"/><text x="25.7731%" y="1103.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_weight (54 samples, 0.02%)</title><rect x="25.5173%" y="1109" width="0.0183%" height="15" fill="rgb(216,219,49)" fg:x="75138" fg:w="54"/><text x="25.7673%" y="1119.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (62 samples, 0.02%)</title><rect x="25.5173%" y="1125" width="0.0211%" height="15" fill="rgb(254,144,0)" fg:x="75138" fg:w="62"/><text x="25.7673%" y="1135.50"></text></g><g><title>[libc.so.6] (600 samples, 0.20%)</title><rect x="25.5713%" y="1061" width="0.2038%" height="15" fill="rgb(205,209,38)" fg:x="75297" fg:w="600"/><text x="25.8213%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (36 samples, 0.01%)</title><rect x="25.7751%" y="1061" width="0.0122%" height="15" fill="rgb(240,21,42)" fg:x="75897" fg:w="36"/><text x="26.0251%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx::{{closure}} (796 samples, 0.27%)</title><rect x="25.5173%" y="1141" width="0.2703%" height="15" fill="rgb(241,132,3)" fg:x="75138" fg:w="796"/><text x="25.7673%" y="1151.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (734 samples, 0.25%)</title><rect x="25.5384%" y="1125" width="0.2493%" height="15" fill="rgb(225,14,2)" fg:x="75200" fg:w="734"/><text x="25.7884%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (723 samples, 0.25%)</title><rect x="25.5421%" y="1109" width="0.2455%" height="15" fill="rgb(210,141,35)" fg:x="75211" fg:w="723"/><text x="25.7921%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (723 samples, 0.25%)</title><rect x="25.5421%" y="1093" width="0.2455%" height="15" fill="rgb(251,14,44)" fg:x="75211" fg:w="723"/><text x="25.7921%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (723 samples, 0.25%)</title><rect x="25.5421%" y="1077" width="0.2455%" height="15" fill="rgb(247,48,18)" fg:x="75211" fg:w="723"/><text x="25.7921%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (899 samples, 0.31%)</title><rect x="25.4840%" y="1173" width="0.3053%" height="15" fill="rgb(225,0,40)" fg:x="75040" fg:w="899"/><text x="25.7340%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (801 samples, 0.27%)</title><rect x="25.5173%" y="1157" width="0.2720%" height="15" fill="rgb(221,31,33)" fg:x="75138" fg:w="801"/><text x="25.7673%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (919 samples, 0.31%)</title><rect x="25.4840%" y="1189" width="0.3121%" height="15" fill="rgb(237,42,40)" fg:x="75040" fg:w="919"/><text x="25.7340%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (931 samples, 0.32%)</title><rect x="25.4840%" y="1205" width="0.3162%" height="15" fill="rgb(233,51,29)" fg:x="75040" fg:w="931"/><text x="25.7340%" y="1215.50"></text></g><g><title>[libc.so.6] (145 samples, 0.05%)</title><rect x="25.8114%" y="1061" width="0.0492%" height="15" fill="rgb(226,58,20)" fg:x="76004" fg:w="145"/><text x="26.0614%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (150 samples, 0.05%)</title><rect x="25.8104%" y="1109" width="0.0509%" height="15" fill="rgb(208,98,7)" fg:x="76001" fg:w="150"/><text x="26.0604%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (150 samples, 0.05%)</title><rect x="25.8104%" y="1093" width="0.0509%" height="15" fill="rgb(228,143,44)" fg:x="76001" fg:w="150"/><text x="26.0604%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (150 samples, 0.05%)</title><rect x="25.8104%" y="1077" width="0.0509%" height="15" fill="rgb(246,55,38)" fg:x="76001" fg:w="150"/><text x="26.0604%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (181 samples, 0.06%)</title><rect x="25.8002%" y="1189" width="0.0615%" height="15" fill="rgb(247,87,16)" fg:x="75971" fg:w="181"/><text x="26.0502%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (181 samples, 0.06%)</title><rect x="25.8002%" y="1173" width="0.0615%" height="15" fill="rgb(234,129,42)" fg:x="75971" fg:w="181"/><text x="26.0502%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (161 samples, 0.05%)</title><rect x="25.8070%" y="1157" width="0.0547%" height="15" fill="rgb(220,82,16)" fg:x="75991" fg:w="161"/><text x="26.0570%" y="1167.50"></text></g><g><title>zenoh::net::routing::network::Network::get_link_from_pid::{{closure}} (153 samples, 0.05%)</title><rect x="25.8097%" y="1141" width="0.0520%" height="15" fill="rgb(211,88,4)" fg:x="75999" fg:w="153"/><text x="26.0597%" y="1151.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (153 samples, 0.05%)</title><rect x="25.8097%" y="1125" width="0.0520%" height="15" fill="rgb(248,151,21)" fg:x="75999" fg:w="153"/><text x="26.0597%" y="1135.50"></text></g><g><title>zenoh::net::routing::network::Network::get_link_from_pid (185 samples, 0.06%)</title><rect x="25.8002%" y="1205" width="0.0628%" height="15" fill="rgb(238,163,6)" fg:x="75971" fg:w="185"/><text x="26.0502%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (586 samples, 0.20%)</title><rect x="25.9303%" y="1189" width="0.1990%" height="15" fill="rgb(209,183,11)" fg:x="76354" fg:w="586"/><text x="26.1803%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (118 samples, 0.04%)</title><rect x="26.4611%" y="1157" width="0.0401%" height="15" fill="rgb(219,37,20)" fg:x="77917" fg:w="118"/><text x="26.7111%" y="1167.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (118 samples, 0.04%)</title><rect x="26.4611%" y="1141" width="0.0401%" height="15" fill="rgb(210,158,4)" fg:x="77917" fg:w="118"/><text x="26.7111%" y="1151.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::is_visited (1,170 samples, 0.40%)</title><rect x="26.1293%" y="1189" width="0.3973%" height="15" fill="rgb(221,167,53)" fg:x="76940" fg:w="1170"/><text x="26.3793%" y="1199.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (1,170 samples, 0.40%)</title><rect x="26.1293%" y="1173" width="0.3973%" height="15" fill="rgb(237,151,45)" fg:x="76940" fg:w="1170"/><text x="26.3793%" y="1183.50"></text></g><g><title>fixedbitset::div_rem (75 samples, 0.03%)</title><rect x="26.5011%" y="1157" width="0.0255%" height="15" fill="rgb(231,39,3)" fg:x="78035" fg:w="75"/><text x="26.7511%" y="1167.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::visit (512 samples, 0.17%)</title><rect x="26.5266%" y="1189" width="0.1739%" height="15" fill="rgb(212,167,28)" fg:x="78110" fg:w="512"/><text x="26.7766%" y="1199.50"></text></g><g><title>fixedbitset::FixedBitSet::put (512 samples, 0.17%)</title><rect x="26.5266%" y="1173" width="0.1739%" height="15" fill="rgb(232,178,8)" fg:x="78110" fg:w="512"/><text x="26.7766%" y="1183.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_weight (44 samples, 0.01%)</title><rect x="26.7005%" y="1173" width="0.0149%" height="15" fill="rgb(225,151,20)" fg:x="78622" fg:w="44"/><text x="26.9505%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (33 samples, 0.01%)</title><rect x="26.7042%" y="1157" width="0.0112%" height="15" fill="rgb(238,3,37)" fg:x="78633" fg:w="33"/><text x="26.9542%" y="1167.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (33 samples, 0.01%)</title><rect x="26.7042%" y="1141" width="0.0112%" height="15" fill="rgb(251,147,42)" fg:x="78633" fg:w="33"/><text x="26.9542%" y="1151.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (74 samples, 0.03%)</title><rect x="26.7005%" y="1189" width="0.0251%" height="15" fill="rgb(208,173,10)" fg:x="78622" fg:w="74"/><text x="26.9505%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (30 samples, 0.01%)</title><rect x="26.7154%" y="1173" width="0.0102%" height="15" fill="rgb(246,225,4)" fg:x="78666" fg:w="30"/><text x="26.9654%" y="1183.50"></text></g><g><title>[libc.so.6] (201 samples, 0.07%)</title><rect x="26.7983%" y="1029" width="0.0683%" height="15" fill="rgb(248,102,6)" fg:x="78910" fg:w="201"/><text x="27.0483%" y="1039.50"></text></g><g><title>__libc_calloc (390 samples, 0.13%)</title><rect x="26.7399%" y="1045" width="0.1324%" height="15" fill="rgb(232,6,21)" fg:x="78738" fg:w="390"/><text x="26.9899%" y="1055.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as petgraph::visit::Visitable&gt;::visit_map (461 samples, 0.16%)</title><rect x="26.7256%" y="1189" width="0.1566%" height="15" fill="rgb(221,179,22)" fg:x="78696" fg:w="461"/><text x="26.9756%" y="1199.50"></text></g><g><title>fixedbitset::FixedBitSet::with_capacity (449 samples, 0.15%)</title><rect x="26.7297%" y="1173" width="0.1525%" height="15" fill="rgb(252,50,20)" fg:x="78708" fg:w="449"/><text x="26.9797%" y="1183.50"></text></g><g><title>alloc::vec::from_elem (422 samples, 0.14%)</title><rect x="26.7389%" y="1157" width="0.1433%" height="15" fill="rgb(222,56,38)" fg:x="78735" fg:w="422"/><text x="26.9889%" y="1167.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (422 samples, 0.14%)</title><rect x="26.7389%" y="1141" width="0.1433%" height="15" fill="rgb(206,193,29)" fg:x="78735" fg:w="422"/><text x="26.9889%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (422 samples, 0.14%)</title><rect x="26.7389%" y="1125" width="0.1433%" height="15" fill="rgb(239,192,45)" fg:x="78735" fg:w="422"/><text x="26.9889%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (422 samples, 0.14%)</title><rect x="26.7389%" y="1109" width="0.1433%" height="15" fill="rgb(254,18,36)" fg:x="78735" fg:w="422"/><text x="26.9889%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (419 samples, 0.14%)</title><rect x="26.7399%" y="1093" width="0.1423%" height="15" fill="rgb(221,127,11)" fg:x="78738" fg:w="419"/><text x="26.9899%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (419 samples, 0.14%)</title><rect x="26.7399%" y="1077" width="0.1423%" height="15" fill="rgb(234,146,35)" fg:x="78738" fg:w="419"/><text x="26.9899%" y="1087.50"></text></g><g><title>alloc::alloc::alloc_zeroed (419 samples, 0.14%)</title><rect x="26.7399%" y="1061" width="0.1423%" height="15" fill="rgb(254,201,37)" fg:x="78738" fg:w="419"/><text x="26.9899%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (53 samples, 0.02%)</title><rect x="26.8822%" y="1189" width="0.0180%" height="15" fill="rgb(211,202,23)" fg:x="79157" fg:w="53"/><text x="27.1322%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.02%)</title><rect x="26.8822%" y="1173" width="0.0180%" height="15" fill="rgb(237,91,2)" fg:x="79157" fg:w="53"/><text x="27.1322%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.02%)</title><rect x="26.8822%" y="1157" width="0.0180%" height="15" fill="rgb(226,228,36)" fg:x="79157" fg:w="53"/><text x="27.1322%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (52 samples, 0.02%)</title><rect x="26.8825%" y="1141" width="0.0177%" height="15" fill="rgb(213,63,50)" fg:x="79158" fg:w="52"/><text x="27.1325%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (362 samples, 0.12%)</title><rect x="26.9073%" y="1189" width="0.1229%" height="15" fill="rgb(235,194,19)" fg:x="79231" fg:w="362"/><text x="27.1573%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (55 samples, 0.02%)</title><rect x="27.0116%" y="1173" width="0.0187%" height="15" fill="rgb(207,204,18)" fg:x="79538" fg:w="55"/><text x="27.2616%" y="1183.50"></text></g><g><title>[libc.so.6] (135 samples, 0.05%)</title><rect x="27.5865%" y="1029" width="0.0458%" height="15" fill="rgb(248,8,7)" fg:x="81231" fg:w="135"/><text x="27.8365%" y="1039.50"></text></g><g><title>[libc.so.6] (680 samples, 0.23%)</title><rect x="27.4028%" y="1045" width="0.2309%" height="15" fill="rgb(223,145,47)" fg:x="80690" fg:w="680"/><text x="27.6528%" y="1055.50"></text></g><g><title>[libc.so.6] (847 samples, 0.29%)</title><rect x="27.3464%" y="1061" width="0.2876%" height="15" fill="rgb(228,84,11)" fg:x="80524" fg:w="847"/><text x="27.5964%" y="1071.50"></text></g><g><title>__lll_lock_wait_private (44 samples, 0.01%)</title><rect x="27.6341%" y="1061" width="0.0149%" height="15" fill="rgb(218,76,45)" fg:x="81371" fg:w="44"/><text x="27.8841%" y="1071.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="27.6341%" y="1045" width="0.0149%" height="15" fill="rgb(223,80,15)" fg:x="81371" fg:w="44"/><text x="27.8841%" y="1055.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="27.6351%" y="1029" width="0.0139%" height="15" fill="rgb(219,218,33)" fg:x="81374" fg:w="41"/><text x="27.8851%" y="1039.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="27.6351%" y="1013" width="0.0139%" height="15" fill="rgb(208,51,11)" fg:x="81374" fg:w="41"/><text x="27.8851%" y="1023.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="27.6351%" y="997" width="0.0139%" height="15" fill="rgb(229,165,39)" fg:x="81374" fg:w="41"/><text x="27.8851%" y="1007.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="27.6354%" y="981" width="0.0136%" height="15" fill="rgb(241,100,24)" fg:x="81375" fg:w="40"/><text x="27.8854%" y="991.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="27.6361%" y="965" width="0.0129%" height="15" fill="rgb(228,14,23)" fg:x="81377" fg:w="38"/><text x="27.8861%" y="975.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="27.6364%" y="949" width="0.0126%" height="15" fill="rgb(247,116,52)" fg:x="81378" fg:w="37"/><text x="27.8864%" y="959.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="27.6368%" y="933" width="0.0122%" height="15" fill="rgb(216,149,33)" fg:x="81379" fg:w="36"/><text x="27.8868%" y="943.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="27.6371%" y="917" width="0.0119%" height="15" fill="rgb(238,142,29)" fg:x="81380" fg:w="35"/><text x="27.8871%" y="927.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="27.6381%" y="901" width="0.0109%" height="15" fill="rgb(224,83,40)" fg:x="81383" fg:w="32"/><text x="27.8881%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,114 samples, 0.38%)</title><rect x="27.2816%" y="1125" width="0.3783%" height="15" fill="rgb(234,165,11)" fg:x="80333" fg:w="1114"/><text x="27.5316%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,114 samples, 0.38%)</title><rect x="27.2816%" y="1109" width="0.3783%" height="15" fill="rgb(215,96,23)" fg:x="80333" fg:w="1114"/><text x="27.5316%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (1,110 samples, 0.38%)</title><rect x="27.2829%" y="1093" width="0.3770%" height="15" fill="rgb(233,179,26)" fg:x="80337" fg:w="1110"/><text x="27.5329%" y="1103.50"></text></g><g><title>realloc (1,069 samples, 0.36%)</title><rect x="27.2968%" y="1077" width="0.3630%" height="15" fill="rgb(225,129,33)" fg:x="80378" fg:w="1069"/><text x="27.5468%" y="1087.50"></text></g><g><title>__lll_lock_wake_private (32 samples, 0.01%)</title><rect x="27.6490%" y="1061" width="0.0109%" height="15" fill="rgb(237,49,13)" fg:x="81415" fg:w="32"/><text x="27.8990%" y="1071.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="27.6490%" y="1045" width="0.0109%" height="15" fill="rgb(211,3,31)" fg:x="81415" fg:w="32"/><text x="27.8990%" y="1055.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="27.6490%" y="1029" width="0.0109%" height="15" fill="rgb(216,152,19)" fg:x="81415" fg:w="32"/><text x="27.8990%" y="1039.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="27.6490%" y="1013" width="0.0109%" height="15" fill="rgb(251,121,35)" fg:x="81415" fg:w="32"/><text x="27.8990%" y="1023.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="27.6494%" y="997" width="0.0105%" height="15" fill="rgb(210,217,47)" fg:x="81416" fg:w="31"/><text x="27.8994%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,157 samples, 0.39%)</title><rect x="27.2693%" y="1141" width="0.3929%" height="15" fill="rgb(244,116,22)" fg:x="80297" fg:w="1157"/><text x="27.5193%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,209 samples, 0.41%)</title><rect x="27.2571%" y="1157" width="0.4106%" height="15" fill="rgb(228,17,21)" fg:x="80261" fg:w="1209"/><text x="27.5071%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,237 samples, 0.42%)</title><rect x="27.2483%" y="1173" width="0.4201%" height="15" fill="rgb(240,149,34)" fg:x="80235" fg:w="1237"/><text x="27.4983%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,938 samples, 0.66%)</title><rect x="27.0302%" y="1189" width="0.6582%" height="15" fill="rgb(208,125,47)" fg:x="79593" fg:w="1938"/><text x="27.2802%" y="1199.50"></text></g><g><title>core::ptr::write (59 samples, 0.02%)</title><rect x="27.6684%" y="1173" width="0.0200%" height="15" fill="rgb(249,186,39)" fg:x="81472" fg:w="59"/><text x="27.9184%" y="1183.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="27.7088%" y="1093" width="0.0187%" height="15" fill="rgb(240,220,33)" fg:x="81591" fg:w="55"/><text x="27.9588%" y="1103.50"></text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (55 samples, 0.02%)</title><rect x="27.7088%" y="1077" width="0.0187%" height="15" fill="rgb(243,110,23)" fg:x="81591" fg:w="55"/><text x="27.9588%" y="1087.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (52 samples, 0.02%)</title><rect x="27.7098%" y="1061" width="0.0177%" height="15" fill="rgb(219,163,46)" fg:x="81594" fg:w="52"/><text x="27.9598%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (42 samples, 0.01%)</title><rect x="27.7132%" y="1045" width="0.0143%" height="15" fill="rgb(216,126,30)" fg:x="81604" fg:w="42"/><text x="27.9632%" y="1055.50"></text></g><g><title>[libc.so.6] (302 samples, 0.10%)</title><rect x="27.7597%" y="949" width="0.1026%" height="15" fill="rgb(208,139,11)" fg:x="81741" fg:w="302"/><text x="28.0097%" y="959.50"></text></g><g><title>[libc.so.6] (248 samples, 0.08%)</title><rect x="27.7781%" y="933" width="0.0842%" height="15" fill="rgb(213,118,36)" fg:x="81795" fg:w="248"/><text x="28.0281%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (376 samples, 0.13%)</title><rect x="27.7414%" y="1013" width="0.1277%" height="15" fill="rgb(226,43,17)" fg:x="81687" fg:w="376"/><text x="27.9914%" y="1023.50"></text></g><g><title>alloc::alloc::Global::grow_impl (376 samples, 0.13%)</title><rect x="27.7414%" y="997" width="0.1277%" height="15" fill="rgb(254,217,4)" fg:x="81687" fg:w="376"/><text x="27.9914%" y="1007.50"></text></g><g><title>alloc::alloc::realloc (376 samples, 0.13%)</title><rect x="27.7414%" y="981" width="0.1277%" height="15" fill="rgb(210,134,47)" fg:x="81687" fg:w="376"/><text x="27.9914%" y="991.50"></text></g><g><title>realloc (367 samples, 0.12%)</title><rect x="27.7444%" y="965" width="0.1246%" height="15" fill="rgb(237,24,49)" fg:x="81696" fg:w="367"/><text x="27.9944%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (394 samples, 0.13%)</title><rect x="27.7359%" y="1029" width="0.1338%" height="15" fill="rgb(251,39,46)" fg:x="81671" fg:w="394"/><text x="27.9859%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (425 samples, 0.14%)</title><rect x="27.7281%" y="1093" width="0.1443%" height="15" fill="rgb(251,220,3)" fg:x="81648" fg:w="425"/><text x="27.9781%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (425 samples, 0.14%)</title><rect x="27.7281%" y="1077" width="0.1443%" height="15" fill="rgb(228,105,12)" fg:x="81648" fg:w="425"/><text x="27.9781%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (418 samples, 0.14%)</title><rect x="27.7305%" y="1061" width="0.1420%" height="15" fill="rgb(215,196,1)" fg:x="81655" fg:w="418"/><text x="27.9805%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (413 samples, 0.14%)</title><rect x="27.7322%" y="1045" width="0.1403%" height="15" fill="rgb(214,33,39)" fg:x="81660" fg:w="413"/><text x="27.9822%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (539 samples, 0.18%)</title><rect x="27.6925%" y="1125" width="0.1830%" height="15" fill="rgb(220,19,52)" fg:x="81543" fg:w="539"/><text x="27.9425%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (535 samples, 0.18%)</title><rect x="27.6938%" y="1109" width="0.1817%" height="15" fill="rgb(221,78,38)" fg:x="81547" fg:w="535"/><text x="27.9438%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (582 samples, 0.20%)</title><rect x="27.6898%" y="1189" width="0.1977%" height="15" fill="rgb(253,30,16)" fg:x="81535" fg:w="582"/><text x="27.9398%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (582 samples, 0.20%)</title><rect x="27.6898%" y="1173" width="0.1977%" height="15" fill="rgb(242,65,0)" fg:x="81535" fg:w="582"/><text x="27.9398%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (582 samples, 0.20%)</title><rect x="27.6898%" y="1157" width="0.1977%" height="15" fill="rgb(235,201,12)" fg:x="81535" fg:w="582"/><text x="27.9398%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (579 samples, 0.20%)</title><rect x="27.6908%" y="1141" width="0.1966%" height="15" fill="rgb(233,161,9)" fg:x="81538" fg:w="579"/><text x="27.9408%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (35 samples, 0.01%)</title><rect x="27.8755%" y="1125" width="0.0119%" height="15" fill="rgb(241,207,41)" fg:x="82082" fg:w="35"/><text x="28.1255%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.01%)</title><rect x="27.8755%" y="1109" width="0.0119%" height="15" fill="rgb(212,69,46)" fg:x="82082" fg:w="35"/><text x="28.1255%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.01%)</title><rect x="27.8755%" y="1093" width="0.0119%" height="15" fill="rgb(239,69,45)" fg:x="82082" fg:w="35"/><text x="28.1255%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.01%)</title><rect x="27.8755%" y="1077" width="0.0119%" height="15" fill="rgb(242,117,48)" fg:x="82082" fg:w="35"/><text x="28.1255%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.01%)</title><rect x="27.8755%" y="1061" width="0.0119%" height="15" fill="rgb(228,41,36)" fg:x="82082" fg:w="35"/><text x="28.1255%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.01%)</title><rect x="27.8755%" y="1045" width="0.0119%" height="15" fill="rgb(212,3,32)" fg:x="82082" fg:w="35"/><text x="28.1255%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.01%)</title><rect x="27.8755%" y="1029" width="0.0119%" height="15" fill="rgb(233,41,49)" fg:x="82082" fg:w="35"/><text x="28.1255%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.01%)</title><rect x="27.8956%" y="1093" width="0.0105%" height="15" fill="rgb(252,170,49)" fg:x="82141" fg:w="31"/><text x="28.1456%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.01%)</title><rect x="27.8956%" y="1077" width="0.0105%" height="15" fill="rgb(229,53,26)" fg:x="82141" fg:w="31"/><text x="28.1456%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (34 samples, 0.01%)</title><rect x="27.8956%" y="1189" width="0.0115%" height="15" fill="rgb(217,157,12)" fg:x="82141" fg:w="34"/><text x="28.1456%" y="1199.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="27.8956%" y="1173" width="0.0115%" height="15" fill="rgb(227,17,9)" fg:x="82141" fg:w="34"/><text x="28.1456%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::NodeIndex,alloc::alloc::Global&gt;&gt; (34 samples, 0.01%)</title><rect x="27.8956%" y="1157" width="0.0115%" height="15" fill="rgb(218,84,12)" fg:x="82141" fg:w="34"/><text x="28.1456%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="27.8956%" y="1141" width="0.0115%" height="15" fill="rgb(212,79,24)" fg:x="82141" fg:w="34"/><text x="28.1456%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (34 samples, 0.01%)</title><rect x="27.8956%" y="1125" width="0.0115%" height="15" fill="rgb(217,222,37)" fg:x="82141" fg:w="34"/><text x="28.1456%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="27.8956%" y="1109" width="0.0115%" height="15" fill="rgb(246,208,8)" fg:x="82141" fg:w="34"/><text x="28.1456%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1,923 samples, 0.65%)</title><rect x="30.2844%" y="1109" width="0.6531%" height="15" fill="rgb(244,133,10)" fg:x="89175" fg:w="1923"/><text x="30.5344%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,923 samples, 0.65%)</title><rect x="30.2844%" y="1093" width="0.6531%" height="15" fill="rgb(209,219,41)" fg:x="89175" fg:w="1923"/><text x="30.5344%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,923 samples, 0.65%)</title><rect x="30.2844%" y="1077" width="0.6531%" height="15" fill="rgb(253,175,45)" fg:x="89175" fg:w="1923"/><text x="30.5344%" y="1087.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,244 samples, 3.14%)</title><rect x="30.2844%" y="1141" width="3.1393%" height="15" fill="rgb(235,100,37)" fg:x="89175" fg:w="9244"/><text x="30.5344%" y="1151.50">&lt;pe..</text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (9,244 samples, 3.14%)</title><rect x="30.2844%" y="1125" width="3.1393%" height="15" fill="rgb(225,87,19)" fg:x="89175" fg:w="9244"/><text x="30.5344%" y="1135.50">pet..</text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (7,321 samples, 2.49%)</title><rect x="30.9374%" y="1109" width="2.4863%" height="15" fill="rgb(217,152,17)" fg:x="91098" fg:w="7321"/><text x="31.1874%" y="1119.50">&lt;p..</text></g><g><title>core::option::Option&lt;T&gt;::is_some (7,183 samples, 2.44%)</title><rect x="30.9843%" y="1093" width="2.4394%" height="15" fill="rgb(235,72,13)" fg:x="91236" fg:w="7183"/><text x="31.2343%" y="1103.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6,874 samples, 2.33%)</title><rect x="33.4519%" y="1077" width="2.3345%" height="15" fill="rgb(233,140,18)" fg:x="98502" fg:w="6874"/><text x="33.7019%" y="1087.50">c..</text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_weight (8,915 samples, 3.03%)</title><rect x="33.4264%" y="1093" width="3.0276%" height="15" fill="rgb(207,212,28)" fg:x="98427" fg:w="8915"/><text x="33.6764%" y="1103.50">pet..</text></g><g><title>petgraph::graph_impl::NodeIndex&lt;Ix&gt;::index (1,949 samples, 0.66%)</title><rect x="35.7921%" y="1077" width="0.6619%" height="15" fill="rgb(220,130,25)" fg:x="105393" fg:w="1949"/><text x="36.0421%" y="1087.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (1,949 samples, 0.66%)</title><rect x="35.7921%" y="1061" width="0.6619%" height="15" fill="rgb(205,55,34)" fg:x="105393" fg:w="1949"/><text x="36.0421%" y="1071.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (11,547 samples, 3.92%)</title><rect x="33.4264%" y="1109" width="3.9214%" height="15" fill="rgb(237,54,35)" fg:x="98427" fg:w="11547"/><text x="33.6764%" y="1119.50">&lt;pet..</text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (2,632 samples, 0.89%)</title><rect x="36.4540%" y="1093" width="0.8938%" height="15" fill="rgb(208,67,23)" fg:x="107342" fg:w="2632"/><text x="36.7040%" y="1103.50"></text></g><g><title>[libc.so.6] (95,882 samples, 32.56%)</title><rect x="44.2765%" y="1045" width="32.5621%" height="15" fill="rgb(206,207,50)" fg:x="130376" fg:w="95882"/><text x="44.5265%" y="1055.50">[libc.so.6]</text></g><g><title>[unknown] (136 samples, 0.05%)</title><rect x="76.7924%" y="1029" width="0.0462%" height="15" fill="rgb(213,211,42)" fg:x="226122" fg:w="136"/><text x="77.0424%" y="1039.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="76.8015%" y="1013" width="0.0370%" height="15" fill="rgb(252,197,50)" fg:x="226149" fg:w="109"/><text x="77.0515%" y="1023.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="76.8042%" y="997" width="0.0343%" height="15" fill="rgb(251,211,41)" fg:x="226157" fg:w="101"/><text x="77.0542%" y="1007.50"></text></g><g><title>[unknown] (89 samples, 0.03%)</title><rect x="76.8083%" y="981" width="0.0302%" height="15" fill="rgb(229,211,5)" fg:x="226169" fg:w="89"/><text x="77.0583%" y="991.50"></text></g><g><title>[unknown] (73 samples, 0.02%)</title><rect x="76.8137%" y="965" width="0.0248%" height="15" fill="rgb(239,36,31)" fg:x="226185" fg:w="73"/><text x="77.0637%" y="975.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="76.8209%" y="949" width="0.0177%" height="15" fill="rgb(248,67,31)" fg:x="226206" fg:w="52"/><text x="77.0709%" y="959.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="76.8256%" y="933" width="0.0129%" height="15" fill="rgb(249,55,44)" fg:x="226220" fg:w="38"/><text x="77.0756%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (114,184 samples, 38.78%)</title><rect x="38.0698%" y="1093" width="38.7776%" height="15" fill="rgb(216,82,12)" fg:x="112100" fg:w="114184"/><text x="38.3198%" y="1103.50">core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (114,184 samples, 38.78%)</title><rect x="38.0698%" y="1077" width="38.7776%" height="15" fill="rgb(242,174,1)" fg:x="112100" fg:w="114184"/><text x="38.3198%" y="1087.50">core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (114,184 samples, 38.78%)</title><rect x="38.0698%" y="1061" width="38.7776%" height="15" fill="rgb(208,120,29)" fg:x="112100" fg:w="114184"/><text x="38.3198%" y="1071.50">&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal</text></g><g><title>zenoh::net::routing::network::Network::get_idx::{{closure}} (127,874 samples, 43.43%)</title><rect x="33.4264%" y="1125" width="43.4268%" height="15" fill="rgb(221,105,43)" fg:x="98427" fg:w="127874"/><text x="33.6764%" y="1135.50">zenoh::net::routing::network::Network::get_idx::{{closure}}</text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (116,327 samples, 39.51%)</title><rect x="37.3478%" y="1109" width="39.5053%" height="15" fill="rgb(234,124,22)" fg:x="109974" fg:w="116327"/><text x="37.5978%" y="1119.50">&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (145,043 samples, 49.26%)</title><rect x="27.9122%" y="1157" width="49.2575%" height="15" fill="rgb(212,23,30)" fg:x="82190" fg:w="145043"/><text x="28.1622%" y="1167.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (128,806 samples, 43.74%)</title><rect x="33.4264%" y="1141" width="43.7433%" height="15" fill="rgb(219,122,53)" fg:x="98427" fg:w="128806"/><text x="33.6764%" y="1151.50">core::iter::traits::iterator::Iterator::find::check::{{closure}}</text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (932 samples, 0.32%)</title><rect x="76.8531%" y="1125" width="0.3165%" height="15" fill="rgb(248,84,24)" fg:x="226301" fg:w="932"/><text x="77.1031%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (148,663 samples, 50.49%)</title><rect x="27.9122%" y="1173" width="50.4868%" height="15" fill="rgb(245,115,18)" fg:x="82190" fg:w="148663"/><text x="28.1622%" y="1183.50">core::iter::traits::iterator::Iterator::find</text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (3,620 samples, 1.23%)</title><rect x="77.1697%" y="1157" width="1.2294%" height="15" fill="rgb(227,176,51)" fg:x="227233" fg:w="3620"/><text x="77.4197%" y="1167.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::raw_nodes (250 samples, 0.08%)</title><rect x="78.4632%" y="1157" width="0.0849%" height="15" fill="rgb(229,63,42)" fg:x="231042" fg:w="250"/><text x="78.7132%" y="1167.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::raw_nodes (250 samples, 0.08%)</title><rect x="78.4632%" y="1141" width="0.0849%" height="15" fill="rgb(247,202,24)" fg:x="231042" fg:w="250"/><text x="78.7132%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (250 samples, 0.08%)</title><rect x="78.4632%" y="1125" width="0.0849%" height="15" fill="rgb(244,173,20)" fg:x="231042" fg:w="250"/><text x="78.7132%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (32 samples, 0.01%)</title><rect x="78.5372%" y="1109" width="0.0109%" height="15" fill="rgb(242,81,47)" fg:x="231260" fg:w="32"/><text x="78.7872%" y="1119.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (150,323 samples, 51.05%)</title><rect x="27.9122%" y="1189" width="51.0506%" height="15" fill="rgb(231,185,54)" fg:x="82190" fg:w="150323"/><text x="28.1622%" y="1199.50">zenoh::net::routing::network::Network::get_idx</text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_indices (1,660 samples, 0.56%)</title><rect x="78.3990%" y="1173" width="0.5637%" height="15" fill="rgb(243,55,32)" fg:x="230853" fg:w="1660"/><text x="78.6490%" y="1183.50"></text></g><g><title>petgraph::util::enumerate (1,221 samples, 0.41%)</title><rect x="78.5481%" y="1157" width="0.4147%" height="15" fill="rgb(208,167,19)" fg:x="231292" fg:w="1221"/><text x="78.7981%" y="1167.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1,221 samples, 0.41%)</title><rect x="78.5481%" y="1141" width="0.4147%" height="15" fill="rgb(231,72,35)" fg:x="231292" fg:w="1221"/><text x="78.7981%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1,221 samples, 0.41%)</title><rect x="78.5481%" y="1125" width="0.4147%" height="15" fill="rgb(250,173,51)" fg:x="231292" fg:w="1221"/><text x="78.7981%" y="1135.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1,221 samples, 0.41%)</title><rect x="78.5481%" y="1109" width="0.4147%" height="15" fill="rgb(209,5,22)" fg:x="231292" fg:w="1221"/><text x="78.7981%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1,221 samples, 0.41%)</title><rect x="78.5481%" y="1093" width="0.4147%" height="15" fill="rgb(250,174,19)" fg:x="231292" fg:w="1221"/><text x="78.7981%" y="1103.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1,221 samples, 0.41%)</title><rect x="78.5481%" y="1077" width="0.4147%" height="15" fill="rgb(217,3,49)" fg:x="231292" fg:w="1221"/><text x="78.7981%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (156,443 samples, 53.13%)</title><rect x="25.8637%" y="1205" width="53.1290%" height="15" fill="rgb(218,225,5)" fg:x="76158" fg:w="156443"/><text x="26.1137%" y="1215.50">zenoh::net::routing::network::Network::remove_detached_nodes</text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (88 samples, 0.03%)</title><rect x="78.9628%" y="1189" width="0.0299%" height="15" fill="rgb(236,89,11)" fg:x="232513" fg:w="88"/><text x="79.2128%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (61 samples, 0.02%)</title><rect x="79.0110%" y="1125" width="0.0207%" height="15" fill="rgb(206,33,28)" fg:x="232655" fg:w="61"/><text x="79.2610%" y="1135.50"></text></g><g><title>malloc (37 samples, 0.01%)</title><rect x="79.0192%" y="1109" width="0.0126%" height="15" fill="rgb(241,56,42)" fg:x="232679" fg:w="37"/><text x="79.2692%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (68 samples, 0.02%)</title><rect x="79.0100%" y="1157" width="0.0231%" height="15" fill="rgb(222,44,11)" fg:x="232652" fg:w="68"/><text x="79.2600%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (67 samples, 0.02%)</title><rect x="79.0103%" y="1141" width="0.0228%" height="15" fill="rgb(234,111,20)" fg:x="232653" fg:w="67"/><text x="79.2603%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (76 samples, 0.03%)</title><rect x="79.0093%" y="1173" width="0.0258%" height="15" fill="rgb(237,77,6)" fg:x="232650" fg:w="76"/><text x="79.2593%" y="1183.50"></text></g><g><title>[libc.so.6] (57 samples, 0.02%)</title><rect x="79.0813%" y="869" width="0.0194%" height="15" fill="rgb(235,111,23)" fg:x="232862" fg:w="57"/><text x="79.3313%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (97 samples, 0.03%)</title><rect x="79.0684%" y="981" width="0.0329%" height="15" fill="rgb(251,135,29)" fg:x="232824" fg:w="97"/><text x="79.3184%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (97 samples, 0.03%)</title><rect x="79.0684%" y="965" width="0.0329%" height="15" fill="rgb(217,57,1)" fg:x="232824" fg:w="97"/><text x="79.3184%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (97 samples, 0.03%)</title><rect x="79.0684%" y="949" width="0.0329%" height="15" fill="rgb(249,119,31)" fg:x="232824" fg:w="97"/><text x="79.3184%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.03%)</title><rect x="79.0694%" y="933" width="0.0319%" height="15" fill="rgb(233,164,33)" fg:x="232827" fg:w="94"/><text x="79.3194%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.03%)</title><rect x="79.0694%" y="917" width="0.0319%" height="15" fill="rgb(250,217,43)" fg:x="232827" fg:w="94"/><text x="79.3194%" y="927.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.03%)</title><rect x="79.0694%" y="901" width="0.0319%" height="15" fill="rgb(232,154,50)" fg:x="232827" fg:w="94"/><text x="79.3194%" y="911.50"></text></g><g><title>malloc (90 samples, 0.03%)</title><rect x="79.0708%" y="885" width="0.0306%" height="15" fill="rgb(227,190,8)" fg:x="232831" fg:w="90"/><text x="79.3208%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (155 samples, 0.05%)</title><rect x="79.0619%" y="1061" width="0.0526%" height="15" fill="rgb(209,217,32)" fg:x="232805" fg:w="155"/><text x="79.3119%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (136 samples, 0.05%)</title><rect x="79.0684%" y="1045" width="0.0462%" height="15" fill="rgb(243,203,50)" fg:x="232824" fg:w="136"/><text x="79.3184%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (136 samples, 0.05%)</title><rect x="79.0684%" y="1029" width="0.0462%" height="15" fill="rgb(232,152,27)" fg:x="232824" fg:w="136"/><text x="79.3184%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (136 samples, 0.05%)</title><rect x="79.0684%" y="1013" width="0.0462%" height="15" fill="rgb(240,34,29)" fg:x="232824" fg:w="136"/><text x="79.3184%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (136 samples, 0.05%)</title><rect x="79.0684%" y="997" width="0.0462%" height="15" fill="rgb(215,185,52)" fg:x="232824" fg:w="136"/><text x="79.3184%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (39 samples, 0.01%)</title><rect x="79.1013%" y="981" width="0.0132%" height="15" fill="rgb(240,89,49)" fg:x="232921" fg:w="39"/><text x="79.3513%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.01%)</title><rect x="79.1013%" y="965" width="0.0132%" height="15" fill="rgb(225,12,52)" fg:x="232921" fg:w="39"/><text x="79.3513%" y="975.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="79.1013%" y="949" width="0.0132%" height="15" fill="rgb(239,128,45)" fg:x="232921" fg:w="39"/><text x="79.3513%" y="959.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (180 samples, 0.06%)</title><rect x="79.0538%" y="1077" width="0.0611%" height="15" fill="rgb(211,78,47)" fg:x="232781" fg:w="180"/><text x="79.3038%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (227 samples, 0.08%)</title><rect x="79.0528%" y="1093" width="0.0771%" height="15" fill="rgb(232,31,21)" fg:x="232778" fg:w="227"/><text x="79.3028%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.01%)</title><rect x="79.1153%" y="1077" width="0.0146%" height="15" fill="rgb(222,168,14)" fg:x="232962" fg:w="43"/><text x="79.3653%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (41 samples, 0.01%)</title><rect x="79.1159%" y="1061" width="0.0139%" height="15" fill="rgb(209,128,24)" fg:x="232964" fg:w="41"/><text x="79.3659%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (41 samples, 0.01%)</title><rect x="79.1159%" y="1045" width="0.0139%" height="15" fill="rgb(249,35,13)" fg:x="232964" fg:w="41"/><text x="79.3659%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (41 samples, 0.01%)</title><rect x="79.1159%" y="1029" width="0.0139%" height="15" fill="rgb(218,7,2)" fg:x="232964" fg:w="41"/><text x="79.3659%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (41 samples, 0.01%)</title><rect x="79.1159%" y="1013" width="0.0139%" height="15" fill="rgb(238,107,27)" fg:x="232964" fg:w="41"/><text x="79.3659%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (41 samples, 0.01%)</title><rect x="79.1159%" y="997" width="0.0139%" height="15" fill="rgb(217,88,38)" fg:x="232964" fg:w="41"/><text x="79.3659%" y="1007.50"></text></g><g><title>malloc (30 samples, 0.01%)</title><rect x="79.1197%" y="981" width="0.0102%" height="15" fill="rgb(230,207,0)" fg:x="232975" fg:w="30"/><text x="79.3697%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (246 samples, 0.08%)</title><rect x="79.0467%" y="1157" width="0.0835%" height="15" fill="rgb(249,64,54)" fg:x="232760" fg:w="246"/><text x="79.2967%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (233 samples, 0.08%)</title><rect x="79.0511%" y="1141" width="0.0791%" height="15" fill="rgb(231,7,11)" fg:x="232773" fg:w="233"/><text x="79.3011%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (228 samples, 0.08%)</title><rect x="79.0528%" y="1125" width="0.0774%" height="15" fill="rgb(205,149,21)" fg:x="232778" fg:w="228"/><text x="79.3028%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (228 samples, 0.08%)</title><rect x="79.0528%" y="1109" width="0.0774%" height="15" fill="rgb(215,126,34)" fg:x="232778" fg:w="228"/><text x="79.3028%" y="1119.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (347 samples, 0.12%)</title><rect x="79.2915%" y="949" width="0.1178%" height="15" fill="rgb(241,132,45)" fg:x="233481" fg:w="347"/><text x="79.5415%" y="959.50"></text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (347 samples, 0.12%)</title><rect x="79.2915%" y="933" width="0.1178%" height="15" fill="rgb(252,69,32)" fg:x="233481" fg:w="347"/><text x="79.5415%" y="943.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (343 samples, 0.12%)</title><rect x="79.2929%" y="917" width="0.1165%" height="15" fill="rgb(232,204,19)" fg:x="233485" fg:w="343"/><text x="79.5429%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (48 samples, 0.02%)</title><rect x="79.4100%" y="933" width="0.0163%" height="15" fill="rgb(249,15,47)" fg:x="233830" fg:w="48"/><text x="79.6600%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (383 samples, 0.13%)</title><rect x="79.4263%" y="901" width="0.1301%" height="15" fill="rgb(209,227,23)" fg:x="233878" fg:w="383"/><text x="79.6763%" y="911.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (484 samples, 0.16%)</title><rect x="79.4263%" y="917" width="0.1644%" height="15" fill="rgb(248,92,24)" fg:x="233878" fg:w="484"/><text x="79.6763%" y="927.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_weight (101 samples, 0.03%)</title><rect x="79.5564%" y="901" width="0.0343%" height="15" fill="rgb(247,59,2)" fg:x="234261" fg:w="101"/><text x="79.8064%" y="911.50"></text></g><g><title>petgraph::graph_impl::NodeIndex&lt;Ix&gt;::index (42 samples, 0.01%)</title><rect x="79.5764%" y="885" width="0.0143%" height="15" fill="rgb(221,30,5)" fg:x="234320" fg:w="42"/><text x="79.8264%" y="895.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (42 samples, 0.01%)</title><rect x="79.5764%" y="869" width="0.0143%" height="15" fill="rgb(208,108,53)" fg:x="234320" fg:w="42"/><text x="79.8264%" y="879.50"></text></g><g><title>[libc.so.6] (3,999 samples, 1.36%)</title><rect x="79.8305%" y="853" width="1.3581%" height="15" fill="rgb(211,183,26)" fg:x="235068" fg:w="3999"/><text x="80.0805%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5,921 samples, 2.01%)</title><rect x="79.1930%" y="965" width="2.0108%" height="15" fill="rgb(232,132,4)" fg:x="233191" fg:w="5921"/><text x="79.4430%" y="975.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5,282 samples, 1.79%)</title><rect x="79.4100%" y="949" width="1.7938%" height="15" fill="rgb(253,128,37)" fg:x="233830" fg:w="5282"/><text x="79.6600%" y="959.50">c..</text></g><g><title>zenoh::net::routing::network::Network::get_idx::{{closure}} (5,234 samples, 1.78%)</title><rect x="79.4263%" y="933" width="1.7775%" height="15" fill="rgb(221,58,24)" fg:x="233878" fg:w="5234"/><text x="79.6763%" y="943.50">z..</text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (4,750 samples, 1.61%)</title><rect x="79.5907%" y="917" width="1.6131%" height="15" fill="rgb(230,54,45)" fg:x="234362" fg:w="4750"/><text x="79.8407%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,726 samples, 1.60%)</title><rect x="79.5989%" y="901" width="1.6050%" height="15" fill="rgb(254,21,18)" fg:x="234386" fg:w="4726"/><text x="79.8489%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4,726 samples, 1.60%)</title><rect x="79.5989%" y="885" width="1.6050%" height="15" fill="rgb(221,108,0)" fg:x="234386" fg:w="4726"/><text x="79.8489%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4,726 samples, 1.60%)</title><rect x="79.5989%" y="869" width="1.6050%" height="15" fill="rgb(206,95,1)" fg:x="234386" fg:w="4726"/><text x="79.8489%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (43 samples, 0.01%)</title><rect x="81.1892%" y="853" width="0.0146%" height="15" fill="rgb(237,52,5)" fg:x="239069" fg:w="43"/><text x="81.4392%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6,135 samples, 2.08%)</title><rect x="79.1930%" y="981" width="2.0835%" height="15" fill="rgb(218,150,34)" fg:x="233191" fg:w="6135"/><text x="79.4430%" y="991.50">c..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (214 samples, 0.07%)</title><rect x="81.2038%" y="965" width="0.0727%" height="15" fill="rgb(235,194,28)" fg:x="239112" fg:w="214"/><text x="81.4538%" y="975.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::raw_nodes (47 samples, 0.02%)</title><rect x="81.2765%" y="965" width="0.0160%" height="15" fill="rgb(245,92,18)" fg:x="239326" fg:w="47"/><text x="81.5265%" y="975.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::raw_nodes (47 samples, 0.02%)</title><rect x="81.2765%" y="949" width="0.0160%" height="15" fill="rgb(253,203,53)" fg:x="239326" fg:w="47"/><text x="81.5265%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (47 samples, 0.02%)</title><rect x="81.2765%" y="933" width="0.0160%" height="15" fill="rgb(249,185,47)" fg:x="239326" fg:w="47"/><text x="81.5265%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,313 samples, 2.14%)</title><rect x="79.1540%" y="1061" width="2.1439%" height="15" fill="rgb(252,194,52)" fg:x="233076" fg:w="6313"/><text x="79.4040%" y="1071.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (6,308 samples, 2.14%)</title><rect x="79.1557%" y="1045" width="2.1422%" height="15" fill="rgb(210,53,36)" fg:x="233081" fg:w="6308"/><text x="79.4057%" y="1055.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6,284 samples, 2.13%)</title><rect x="79.1638%" y="1029" width="2.1341%" height="15" fill="rgb(237,37,25)" fg:x="233105" fg:w="6284"/><text x="79.4138%" y="1039.50">c..</text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (6,217 samples, 2.11%)</title><rect x="79.1866%" y="1013" width="2.1113%" height="15" fill="rgb(242,116,27)" fg:x="233172" fg:w="6217"/><text x="79.4366%" y="1023.50">z..</text></g><g><title>zenoh::net::routing::network::Network::get_idx (6,198 samples, 2.10%)</title><rect x="79.1930%" y="997" width="2.1049%" height="15" fill="rgb(213,185,26)" fg:x="233191" fg:w="6198"/><text x="79.4430%" y="1007.50">z..</text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_indices (63 samples, 0.02%)</title><rect x="81.2765%" y="981" width="0.0214%" height="15" fill="rgb(225,204,8)" fg:x="239326" fg:w="63"/><text x="81.5265%" y="991.50"></text></g><g><title>[libc.so.6] (176 samples, 0.06%)</title><rect x="81.3332%" y="917" width="0.0598%" height="15" fill="rgb(254,111,37)" fg:x="239493" fg:w="176"/><text x="81.5832%" y="927.50"></text></g><g><title>[libc.so.6] (149 samples, 0.05%)</title><rect x="81.3424%" y="901" width="0.0506%" height="15" fill="rgb(242,35,9)" fg:x="239520" fg:w="149"/><text x="81.5924%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (285 samples, 0.10%)</title><rect x="81.3057%" y="981" width="0.0968%" height="15" fill="rgb(232,138,49)" fg:x="239412" fg:w="285"/><text x="81.5557%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (285 samples, 0.10%)</title><rect x="81.3057%" y="965" width="0.0968%" height="15" fill="rgb(247,56,4)" fg:x="239412" fg:w="285"/><text x="81.5557%" y="975.50"></text></g><g><title>alloc::alloc::realloc (283 samples, 0.10%)</title><rect x="81.3064%" y="949" width="0.0961%" height="15" fill="rgb(226,179,17)" fg:x="239414" fg:w="283"/><text x="81.5564%" y="959.50"></text></g><g><title>realloc (262 samples, 0.09%)</title><rect x="81.3135%" y="933" width="0.0890%" height="15" fill="rgb(216,163,45)" fg:x="239435" fg:w="262"/><text x="81.5635%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (297 samples, 0.10%)</title><rect x="81.3023%" y="997" width="0.1009%" height="15" fill="rgb(211,157,3)" fg:x="239402" fg:w="297"/><text x="81.5523%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (322 samples, 0.11%)</title><rect x="81.2982%" y="1061" width="0.1094%" height="15" fill="rgb(234,44,20)" fg:x="239390" fg:w="322"/><text x="81.5482%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (322 samples, 0.11%)</title><rect x="81.2982%" y="1045" width="0.1094%" height="15" fill="rgb(254,138,23)" fg:x="239390" fg:w="322"/><text x="81.5482%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (318 samples, 0.11%)</title><rect x="81.2996%" y="1029" width="0.1080%" height="15" fill="rgb(206,119,39)" fg:x="239394" fg:w="318"/><text x="81.5496%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (317 samples, 0.11%)</title><rect x="81.2999%" y="1013" width="0.1077%" height="15" fill="rgb(231,105,52)" fg:x="239395" fg:w="317"/><text x="81.5499%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6,669 samples, 2.26%)</title><rect x="79.1451%" y="1093" width="2.2648%" height="15" fill="rgb(250,20,5)" fg:x="233050" fg:w="6669"/><text x="79.3951%" y="1103.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6,666 samples, 2.26%)</title><rect x="79.1462%" y="1077" width="2.2638%" height="15" fill="rgb(215,198,30)" fg:x="233053" fg:w="6666"/><text x="79.3962%" y="1087.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 0.01%)</title><rect x="81.4154%" y="997" width="0.0139%" height="15" fill="rgb(246,142,8)" fg:x="239735" fg:w="41"/><text x="81.6654%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (34 samples, 0.01%)</title><rect x="81.4178%" y="981" width="0.0115%" height="15" fill="rgb(243,26,38)" fg:x="239742" fg:w="34"/><text x="81.6678%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx::{{closure}} (34 samples, 0.01%)</title><rect x="81.4178%" y="965" width="0.0115%" height="15" fill="rgb(205,133,28)" fg:x="239742" fg:w="34"/><text x="81.6678%" y="975.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (32 samples, 0.01%)</title><rect x="81.4185%" y="949" width="0.0109%" height="15" fill="rgb(212,34,0)" fg:x="239744" fg:w="32"/><text x="81.6685%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (30 samples, 0.01%)</title><rect x="81.4191%" y="933" width="0.0102%" height="15" fill="rgb(251,226,22)" fg:x="239746" fg:w="30"/><text x="81.6691%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (30 samples, 0.01%)</title><rect x="81.4191%" y="917" width="0.0102%" height="15" fill="rgb(252,119,9)" fg:x="239746" fg:w="30"/><text x="81.6691%" y="927.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (30 samples, 0.01%)</title><rect x="81.4191%" y="901" width="0.0102%" height="15" fill="rgb(213,150,50)" fg:x="239746" fg:w="30"/><text x="81.6691%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (46 samples, 0.02%)</title><rect x="81.4154%" y="1013" width="0.0156%" height="15" fill="rgb(212,24,39)" fg:x="239735" fg:w="46"/><text x="81.6654%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.03%)</title><rect x="81.4103%" y="1093" width="0.0326%" height="15" fill="rgb(213,46,39)" fg:x="239720" fg:w="96"/><text x="81.6603%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (96 samples, 0.03%)</title><rect x="81.4103%" y="1077" width="0.0326%" height="15" fill="rgb(239,106,12)" fg:x="239720" fg:w="96"/><text x="81.6603%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (89 samples, 0.03%)</title><rect x="81.4127%" y="1061" width="0.0302%" height="15" fill="rgb(249,229,21)" fg:x="239727" fg:w="89"/><text x="81.6627%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (81 samples, 0.03%)</title><rect x="81.4154%" y="1045" width="0.0275%" height="15" fill="rgb(212,158,3)" fg:x="239735" fg:w="81"/><text x="81.6654%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (81 samples, 0.03%)</title><rect x="81.4154%" y="1029" width="0.0275%" height="15" fill="rgb(253,26,48)" fg:x="239735" fg:w="81"/><text x="81.6654%" y="1039.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_indices (35 samples, 0.01%)</title><rect x="81.4310%" y="1013" width="0.0119%" height="15" fill="rgb(238,178,20)" fg:x="239781" fg:w="35"/><text x="81.6810%" y="1023.50"></text></g><g><title>petgraph::util::enumerate (34 samples, 0.01%)</title><rect x="81.4314%" y="997" width="0.0115%" height="15" fill="rgb(208,86,15)" fg:x="239782" fg:w="34"/><text x="81.6814%" y="1007.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (34 samples, 0.01%)</title><rect x="81.4314%" y="981" width="0.0115%" height="15" fill="rgb(239,42,53)" fg:x="239782" fg:w="34"/><text x="81.6814%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (34 samples, 0.01%)</title><rect x="81.4314%" y="965" width="0.0115%" height="15" fill="rgb(245,226,8)" fg:x="239782" fg:w="34"/><text x="81.6814%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (34 samples, 0.01%)</title><rect x="81.4314%" y="949" width="0.0115%" height="15" fill="rgb(216,176,32)" fg:x="239782" fg:w="34"/><text x="81.6814%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (34 samples, 0.01%)</title><rect x="81.4314%" y="933" width="0.0115%" height="15" fill="rgb(231,186,21)" fg:x="239782" fg:w="34"/><text x="81.6814%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (34 samples, 0.01%)</title><rect x="81.4314%" y="917" width="0.0115%" height="15" fill="rgb(205,95,49)" fg:x="239782" fg:w="34"/><text x="81.6814%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (7,091 samples, 2.41%)</title><rect x="79.0419%" y="1173" width="2.4081%" height="15" fill="rgb(217,145,8)" fg:x="232746" fg:w="7091"/><text x="79.2919%" y="1183.50">ze..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,811 samples, 2.31%)</title><rect x="79.1370%" y="1157" width="2.3131%" height="15" fill="rgb(239,144,48)" fg:x="233026" fg:w="6811"/><text x="79.3870%" y="1167.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6,811 samples, 2.31%)</title><rect x="79.1370%" y="1141" width="2.3131%" height="15" fill="rgb(214,189,23)" fg:x="233026" fg:w="6811"/><text x="79.3870%" y="1151.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,807 samples, 2.31%)</title><rect x="79.1384%" y="1125" width="2.3117%" height="15" fill="rgb(229,157,17)" fg:x="233030" fg:w="6807"/><text x="79.3884%" y="1135.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6,794 samples, 2.31%)</title><rect x="79.1428%" y="1109" width="2.3073%" height="15" fill="rgb(230,5,48)" fg:x="233043" fg:w="6794"/><text x="79.3928%" y="1119.50">&lt;..</text></g><g><title>zenoh::net::routing::network::Network::make_msg (7,227 samples, 2.45%)</title><rect x="79.0015%" y="1189" width="2.4543%" height="15" fill="rgb(224,156,48)" fg:x="232627" fg:w="7227"/><text x="79.2515%" y="1199.50">ze..</text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (103 samples, 0.03%)</title><rect x="81.4694%" y="1157" width="0.0350%" height="15" fill="rgb(223,14,29)" fg:x="239894" fg:w="103"/><text x="81.7194%" y="1167.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (103 samples, 0.03%)</title><rect x="81.4694%" y="1141" width="0.0350%" height="15" fill="rgb(229,96,36)" fg:x="239894" fg:w="103"/><text x="81.7194%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (30 samples, 0.01%)</title><rect x="81.5203%" y="1125" width="0.0102%" height="15" fill="rgb(231,102,53)" fg:x="240044" fg:w="30"/><text x="81.7703%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (94 samples, 0.03%)</title><rect x="81.5529%" y="1109" width="0.0319%" height="15" fill="rgb(210,77,38)" fg:x="240140" fg:w="94"/><text x="81.8029%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (86 samples, 0.03%)</title><rect x="81.6093%" y="1045" width="0.0292%" height="15" fill="rgb(235,131,6)" fg:x="240306" fg:w="86"/><text x="81.8593%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (86 samples, 0.03%)</title><rect x="81.6093%" y="1029" width="0.0292%" height="15" fill="rgb(252,55,38)" fg:x="240306" fg:w="86"/><text x="81.8593%" y="1039.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::try_read (95 samples, 0.03%)</title><rect x="81.6066%" y="1109" width="0.0323%" height="15" fill="rgb(246,38,14)" fg:x="240298" fg:w="95"/><text x="81.8566%" y="1119.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::try_read (93 samples, 0.03%)</title><rect x="81.6073%" y="1093" width="0.0316%" height="15" fill="rgb(242,27,5)" fg:x="240300" fg:w="93"/><text x="81.8573%" y="1103.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::try_read (93 samples, 0.03%)</title><rect x="81.6073%" y="1077" width="0.0316%" height="15" fill="rgb(228,65,35)" fg:x="240300" fg:w="93"/><text x="81.8573%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_update (93 samples, 0.03%)</title><rect x="81.6073%" y="1061" width="0.0316%" height="15" fill="rgb(245,93,11)" fg:x="240300" fg:w="93"/><text x="81.8573%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (37 samples, 0.01%)</title><rect x="81.7197%" y="981" width="0.0126%" height="15" fill="rgb(213,1,31)" fg:x="240631" fg:w="37"/><text x="81.9697%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (37 samples, 0.01%)</title><rect x="81.7197%" y="965" width="0.0126%" height="15" fill="rgb(237,205,14)" fg:x="240631" fg:w="37"/><text x="81.9697%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.01%)</title><rect x="81.7197%" y="949" width="0.0126%" height="15" fill="rgb(232,118,45)" fg:x="240631" fg:w="37"/><text x="81.9697%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.01%)</title><rect x="81.7197%" y="933" width="0.0126%" height="15" fill="rgb(218,5,6)" fg:x="240631" fg:w="37"/><text x="81.9697%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.01%)</title><rect x="81.7197%" y="917" width="0.0126%" height="15" fill="rgb(251,87,51)" fg:x="240631" fg:w="37"/><text x="81.9697%" y="927.50"></text></g><g><title>cfree (36 samples, 0.01%)</title><rect x="81.7200%" y="901" width="0.0122%" height="15" fill="rgb(207,225,20)" fg:x="240632" fg:w="36"/><text x="81.9700%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.01%)</title><rect x="81.7326%" y="837" width="0.0112%" height="15" fill="rgb(222,78,54)" fg:x="240669" fg:w="33"/><text x="81.9826%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.01%)</title><rect x="81.7326%" y="821" width="0.0112%" height="15" fill="rgb(232,85,16)" fg:x="240669" fg:w="33"/><text x="81.9826%" y="831.50"></text></g><g><title>cfree (32 samples, 0.01%)</title><rect x="81.7329%" y="805" width="0.0109%" height="15" fill="rgb(244,25,33)" fg:x="240670" fg:w="32"/><text x="81.9829%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (36 samples, 0.01%)</title><rect x="81.7326%" y="901" width="0.0122%" height="15" fill="rgb(233,24,36)" fg:x="240669" fg:w="36"/><text x="81.9826%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (36 samples, 0.01%)</title><rect x="81.7326%" y="885" width="0.0122%" height="15" fill="rgb(253,49,54)" fg:x="240669" fg:w="36"/><text x="81.9826%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (36 samples, 0.01%)</title><rect x="81.7326%" y="869" width="0.0122%" height="15" fill="rgb(245,12,22)" fg:x="240669" fg:w="36"/><text x="81.9826%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="81.7326%" y="853" width="0.0122%" height="15" fill="rgb(253,141,28)" fg:x="240669" fg:w="36"/><text x="81.9826%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.01%)</title><rect x="81.7326%" y="949" width="0.0132%" height="15" fill="rgb(225,207,27)" fg:x="240669" fg:w="39"/><text x="81.9826%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (39 samples, 0.01%)</title><rect x="81.7326%" y="933" width="0.0132%" height="15" fill="rgb(220,84,2)" fg:x="240669" fg:w="39"/><text x="81.9826%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (39 samples, 0.01%)</title><rect x="81.7326%" y="917" width="0.0132%" height="15" fill="rgb(224,37,37)" fg:x="240669" fg:w="39"/><text x="81.9826%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::ZenohMessage&gt; (124 samples, 0.04%)</title><rect x="81.7071%" y="1093" width="0.0421%" height="15" fill="rgb(220,143,18)" fg:x="240594" fg:w="124"/><text x="81.9571%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::ZenohBody&gt; (98 samples, 0.03%)</title><rect x="81.7160%" y="1077" width="0.0333%" height="15" fill="rgb(210,88,33)" fg:x="240620" fg:w="98"/><text x="81.9660%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::LinkStateList&gt; (95 samples, 0.03%)</title><rect x="81.7170%" y="1061" width="0.0323%" height="15" fill="rgb(219,87,51)" fg:x="240623" fg:w="95"/><text x="81.9670%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol::proto::msg::LinkState&gt;&gt; (95 samples, 0.03%)</title><rect x="81.7170%" y="1045" width="0.0323%" height="15" fill="rgb(211,7,35)" fg:x="240623" fg:w="95"/><text x="81.9670%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.03%)</title><rect x="81.7173%" y="1029" width="0.0319%" height="15" fill="rgb(232,77,2)" fg:x="240624" fg:w="94"/><text x="81.9673%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol::proto::msg::LinkState]&gt; (89 samples, 0.03%)</title><rect x="81.7190%" y="1013" width="0.0302%" height="15" fill="rgb(249,94,25)" fg:x="240629" fg:w="89"/><text x="81.9690%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::LinkState&gt; (87 samples, 0.03%)</title><rect x="81.7197%" y="997" width="0.0295%" height="15" fill="rgb(215,112,2)" fg:x="240631" fg:w="87"/><text x="81.9697%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;&gt; (50 samples, 0.02%)</title><rect x="81.7323%" y="981" width="0.0170%" height="15" fill="rgb(226,115,48)" fg:x="240668" fg:w="50"/><text x="81.9823%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (49 samples, 0.02%)</title><rect x="81.7326%" y="965" width="0.0166%" height="15" fill="rgb(249,196,10)" fg:x="240669" fg:w="49"/><text x="81.9826%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (167 samples, 0.06%)</title><rect x="81.7523%" y="1093" width="0.0567%" height="15" fill="rgb(237,109,14)" fg:x="240727" fg:w="167"/><text x="82.0023%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (49 samples, 0.02%)</title><rect x="81.8226%" y="1061" width="0.0166%" height="15" fill="rgb(217,103,53)" fg:x="240934" fg:w="49"/><text x="82.0726%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (48 samples, 0.02%)</title><rect x="81.8229%" y="1045" width="0.0163%" height="15" fill="rgb(244,137,9)" fg:x="240935" fg:w="48"/><text x="82.0729%" y="1055.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="81.8229%" y="1029" width="0.0163%" height="15" fill="rgb(227,201,3)" fg:x="240935" fg:w="48"/><text x="82.0729%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (48 samples, 0.02%)</title><rect x="81.8229%" y="1013" width="0.0163%" height="15" fill="rgb(243,94,6)" fg:x="240935" fg:w="48"/><text x="82.0729%" y="1023.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (48 samples, 0.02%)</title><rect x="81.8229%" y="997" width="0.0163%" height="15" fill="rgb(235,118,5)" fg:x="240935" fg:w="48"/><text x="82.0729%" y="1007.50"></text></g><g><title>syscall (45 samples, 0.02%)</title><rect x="81.8240%" y="981" width="0.0153%" height="15" fill="rgb(247,10,30)" fg:x="240938" fg:w="45"/><text x="82.0740%" y="991.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="81.8240%" y="965" width="0.0153%" height="15" fill="rgb(205,26,28)" fg:x="240938" fg:w="45"/><text x="82.0740%" y="975.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="81.8240%" y="949" width="0.0153%" height="15" fill="rgb(206,99,35)" fg:x="240938" fg:w="45"/><text x="82.0740%" y="959.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="81.8240%" y="933" width="0.0153%" height="15" fill="rgb(238,130,40)" fg:x="240938" fg:w="45"/><text x="82.0740%" y="943.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="81.8240%" y="917" width="0.0153%" height="15" fill="rgb(224,126,31)" fg:x="240938" fg:w="45"/><text x="82.0740%" y="927.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="81.8243%" y="901" width="0.0149%" height="15" fill="rgb(254,105,17)" fg:x="240939" fg:w="44"/><text x="82.0743%" y="911.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="81.8253%" y="885" width="0.0139%" height="15" fill="rgb(216,87,36)" fg:x="240942" fg:w="41"/><text x="82.0753%" y="895.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="81.8253%" y="869" width="0.0139%" height="15" fill="rgb(240,21,12)" fg:x="240942" fg:w="41"/><text x="82.0753%" y="879.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="81.8260%" y="853" width="0.0132%" height="15" fill="rgb(245,192,34)" fg:x="240944" fg:w="39"/><text x="82.0760%" y="863.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (224 samples, 0.08%)</title><rect x="81.8752%" y="933" width="0.0761%" height="15" fill="rgb(226,100,49)" fg:x="241089" fg:w="224"/><text x="82.1252%" y="943.50"></text></g><g><title>parking::Unparker::unpark (224 samples, 0.08%)</title><rect x="81.8752%" y="917" width="0.0761%" height="15" fill="rgb(245,188,27)" fg:x="241089" fg:w="224"/><text x="82.1252%" y="927.50"></text></g><g><title>parking::Inner::unpark (210 samples, 0.07%)</title><rect x="81.8800%" y="901" width="0.0713%" height="15" fill="rgb(212,170,8)" fg:x="241103" fg:w="210"/><text x="82.1300%" y="911.50"></text></g><g><title>syscall (194 samples, 0.07%)</title><rect x="81.8854%" y="885" width="0.0659%" height="15" fill="rgb(217,113,29)" fg:x="241119" fg:w="194"/><text x="82.1354%" y="895.50"></text></g><g><title>[unknown] (194 samples, 0.07%)</title><rect x="81.8854%" y="869" width="0.0659%" height="15" fill="rgb(237,30,3)" fg:x="241119" fg:w="194"/><text x="82.1354%" y="879.50"></text></g><g><title>[unknown] (193 samples, 0.07%)</title><rect x="81.8858%" y="853" width="0.0655%" height="15" fill="rgb(227,19,28)" fg:x="241120" fg:w="193"/><text x="82.1358%" y="863.50"></text></g><g><title>[unknown] (190 samples, 0.06%)</title><rect x="81.8868%" y="837" width="0.0645%" height="15" fill="rgb(239,172,45)" fg:x="241123" fg:w="190"/><text x="82.1368%" y="847.50"></text></g><g><title>[unknown] (186 samples, 0.06%)</title><rect x="81.8881%" y="821" width="0.0632%" height="15" fill="rgb(254,55,39)" fg:x="241127" fg:w="186"/><text x="82.1381%" y="831.50"></text></g><g><title>[unknown] (179 samples, 0.06%)</title><rect x="81.8905%" y="805" width="0.0608%" height="15" fill="rgb(249,208,12)" fg:x="241134" fg:w="179"/><text x="82.1405%" y="815.50"></text></g><g><title>[unknown] (128 samples, 0.04%)</title><rect x="81.9078%" y="789" width="0.0435%" height="15" fill="rgb(240,52,13)" fg:x="241185" fg:w="128"/><text x="82.1578%" y="799.50"></text></g><g><title>[unknown] (99 samples, 0.03%)</title><rect x="81.9177%" y="773" width="0.0336%" height="15" fill="rgb(252,149,13)" fg:x="241214" fg:w="99"/><text x="82.1677%" y="783.50"></text></g><g><title>[unknown] (86 samples, 0.03%)</title><rect x="81.9221%" y="757" width="0.0292%" height="15" fill="rgb(232,81,48)" fg:x="241227" fg:w="86"/><text x="82.1721%" y="767.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="81.9330%" y="741" width="0.0183%" height="15" fill="rgb(222,144,2)" fg:x="241259" fg:w="54"/><text x="82.1830%" y="751.50"></text></g><g><title>core::task::wake::Waker::wake (231 samples, 0.08%)</title><rect x="81.8732%" y="965" width="0.0784%" height="15" fill="rgb(216,81,32)" fg:x="241083" fg:w="231"/><text x="82.1232%" y="975.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (230 samples, 0.08%)</title><rect x="81.8735%" y="949" width="0.0781%" height="15" fill="rgb(244,78,51)" fg:x="241084" fg:w="230"/><text x="82.1235%" y="959.50"></text></g><g><title>async_executor::State::notify (256 samples, 0.09%)</title><rect x="81.8661%" y="981" width="0.0869%" height="15" fill="rgb(217,66,21)" fg:x="241062" fg:w="256"/><text x="82.1161%" y="991.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (368 samples, 0.12%)</title><rect x="81.8657%" y="997" width="0.1250%" height="15" fill="rgb(247,101,42)" fg:x="241061" fg:w="368"/><text x="82.1157%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (111 samples, 0.04%)</title><rect x="81.9530%" y="981" width="0.0377%" height="15" fill="rgb(227,81,39)" fg:x="241318" fg:w="111"/><text x="82.2030%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (99 samples, 0.03%)</title><rect x="81.9571%" y="965" width="0.0336%" height="15" fill="rgb(220,223,44)" fg:x="241330" fg:w="99"/><text x="82.2071%" y="975.50"></text></g><g><title>event_listener::List::notify_additional (488 samples, 0.17%)</title><rect x="81.8413%" y="1061" width="0.1657%" height="15" fill="rgb(205,218,2)" fg:x="240989" fg:w="488"/><text x="82.0913%" y="1071.50"></text></g><g><title>core::task::wake::Waker::wake (439 samples, 0.15%)</title><rect x="81.8579%" y="1045" width="0.1491%" height="15" fill="rgb(212,207,28)" fg:x="241038" fg:w="439"/><text x="82.1079%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (439 samples, 0.15%)</title><rect x="81.8579%" y="1029" width="0.1491%" height="15" fill="rgb(224,12,41)" fg:x="241038" fg:w="439"/><text x="82.1079%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (430 samples, 0.15%)</title><rect x="81.8610%" y="1013" width="0.1460%" height="15" fill="rgb(216,118,12)" fg:x="241047" fg:w="430"/><text x="82.1110%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (48 samples, 0.02%)</title><rect x="81.9907%" y="997" width="0.0163%" height="15" fill="rgb(252,97,46)" fg:x="241429" fg:w="48"/><text x="82.2407%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (48 samples, 0.02%)</title><rect x="81.9907%" y="981" width="0.0163%" height="15" fill="rgb(244,206,19)" fg:x="241429" fg:w="48"/><text x="82.2407%" y="991.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (584 samples, 0.20%)</title><rect x="81.8090%" y="1093" width="0.1983%" height="15" fill="rgb(231,84,31)" fg:x="240894" fg:w="584"/><text x="82.0590%" y="1103.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (584 samples, 0.20%)</title><rect x="81.8090%" y="1077" width="0.1983%" height="15" fill="rgb(244,133,0)" fg:x="240894" fg:w="584"/><text x="82.0590%" y="1087.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (99 samples, 0.03%)</title><rect x="82.0073%" y="1093" width="0.0336%" height="15" fill="rgb(223,15,50)" fg:x="241478" fg:w="99"/><text x="82.2573%" y="1103.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (91 samples, 0.03%)</title><rect x="82.0101%" y="1077" width="0.0309%" height="15" fill="rgb(250,118,49)" fg:x="241486" fg:w="91"/><text x="82.2601%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (91 samples, 0.03%)</title><rect x="82.0101%" y="1061" width="0.0309%" height="15" fill="rgb(248,25,38)" fg:x="241486" fg:w="91"/><text x="82.2601%" y="1071.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (89 samples, 0.03%)</title><rect x="82.0107%" y="1045" width="0.0302%" height="15" fill="rgb(215,70,14)" fg:x="241488" fg:w="89"/><text x="82.2607%" y="1055.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (89 samples, 0.03%)</title><rect x="82.0107%" y="1029" width="0.0302%" height="15" fill="rgb(215,28,15)" fg:x="241488" fg:w="89"/><text x="82.2607%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.01%)</title><rect x="82.0607%" y="997" width="0.0102%" height="15" fill="rgb(243,6,28)" fg:x="241635" fg:w="30"/><text x="82.3107%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.01%)</title><rect x="82.0607%" y="981" width="0.0102%" height="15" fill="rgb(222,130,1)" fg:x="241635" fg:w="30"/><text x="82.3107%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.01%)</title><rect x="82.0607%" y="965" width="0.0102%" height="15" fill="rgb(236,166,44)" fg:x="241635" fg:w="30"/><text x="82.3107%" y="975.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (72 samples, 0.02%)</title><rect x="82.0528%" y="1045" width="0.0245%" height="15" fill="rgb(221,108,14)" fg:x="241612" fg:w="72"/><text x="82.3028%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (63 samples, 0.02%)</title><rect x="82.0559%" y="1029" width="0.0214%" height="15" fill="rgb(252,3,45)" fg:x="241621" fg:w="63"/><text x="82.3059%" y="1039.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (50 samples, 0.02%)</title><rect x="82.0603%" y="1013" width="0.0170%" height="15" fill="rgb(237,68,30)" fg:x="241634" fg:w="50"/><text x="82.3103%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (73 samples, 0.02%)</title><rect x="82.0528%" y="1061" width="0.0248%" height="15" fill="rgb(211,79,22)" fg:x="241612" fg:w="73"/><text x="82.3028%" y="1071.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_frame_header (127 samples, 0.04%)</title><rect x="82.0512%" y="1077" width="0.0431%" height="15" fill="rgb(252,185,21)" fg:x="241607" fg:w="127"/><text x="82.3012%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (82 samples, 0.03%)</title><rect x="82.1574%" y="821" width="0.0278%" height="15" fill="rgb(225,189,26)" fg:x="241920" fg:w="82"/><text x="82.4074%" y="831.50"></text></g><g><title>malloc (47 samples, 0.02%)</title><rect x="82.1693%" y="805" width="0.0160%" height="15" fill="rgb(241,30,40)" fg:x="241955" fg:w="47"/><text x="82.4193%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (97 samples, 0.03%)</title><rect x="82.1537%" y="885" width="0.0329%" height="15" fill="rgb(235,215,44)" fg:x="241909" fg:w="97"/><text x="82.4037%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (97 samples, 0.03%)</title><rect x="82.1537%" y="869" width="0.0329%" height="15" fill="rgb(205,8,29)" fg:x="241909" fg:w="97"/><text x="82.4037%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (95 samples, 0.03%)</title><rect x="82.1544%" y="853" width="0.0323%" height="15" fill="rgb(241,137,42)" fg:x="241911" fg:w="95"/><text x="82.4044%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (95 samples, 0.03%)</title><rect x="82.1544%" y="837" width="0.0323%" height="15" fill="rgb(237,155,2)" fg:x="241911" fg:w="95"/><text x="82.4044%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (126 samples, 0.04%)</title><rect x="82.1493%" y="965" width="0.0428%" height="15" fill="rgb(245,29,42)" fg:x="241896" fg:w="126"/><text x="82.3993%" y="975.50"></text></g><g><title>alloc::string::String::push_str (116 samples, 0.04%)</title><rect x="82.1527%" y="949" width="0.0394%" height="15" fill="rgb(234,101,35)" fg:x="241906" fg:w="116"/><text x="82.4027%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (116 samples, 0.04%)</title><rect x="82.1527%" y="933" width="0.0394%" height="15" fill="rgb(228,64,37)" fg:x="241906" fg:w="116"/><text x="82.4027%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (116 samples, 0.04%)</title><rect x="82.1527%" y="917" width="0.0394%" height="15" fill="rgb(217,214,36)" fg:x="241906" fg:w="116"/><text x="82.4027%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (116 samples, 0.04%)</title><rect x="82.1527%" y="901" width="0.0394%" height="15" fill="rgb(243,70,3)" fg:x="241906" fg:w="116"/><text x="82.4027%" y="911.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::fmt::Display&gt;::fmt (185 samples, 0.06%)</title><rect x="82.1378%" y="981" width="0.0628%" height="15" fill="rgb(253,158,52)" fg:x="241862" fg:w="185"/><text x="82.3878%" y="991.50"></text></g><g><title>core::fmt::Formatter::new (36 samples, 0.01%)</title><rect x="82.2023%" y="981" width="0.0122%" height="15" fill="rgb(234,111,54)" fg:x="242052" fg:w="36"/><text x="82.4523%" y="991.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (228 samples, 0.08%)</title><rect x="82.1378%" y="997" width="0.0774%" height="15" fill="rgb(217,70,32)" fg:x="241862" fg:w="228"/><text x="82.3878%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (38 samples, 0.01%)</title><rect x="82.2169%" y="949" width="0.0129%" height="15" fill="rgb(234,18,33)" fg:x="242095" fg:w="38"/><text x="82.4669%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_string (92 samples, 0.03%)</title><rect x="82.2152%" y="997" width="0.0312%" height="15" fill="rgb(234,12,49)" fg:x="242090" fg:w="92"/><text x="82.4652%" y="1007.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;str&gt;&gt;::write (92 samples, 0.03%)</title><rect x="82.2152%" y="981" width="0.0312%" height="15" fill="rgb(236,10,21)" fg:x="242090" fg:w="92"/><text x="82.4652%" y="991.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;[u8]&gt;&gt;::write (92 samples, 0.03%)</title><rect x="82.2152%" y="965" width="0.0312%" height="15" fill="rgb(248,182,45)" fg:x="242090" fg:w="92"/><text x="82.4652%" y="975.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (49 samples, 0.02%)</title><rect x="82.2298%" y="949" width="0.0166%" height="15" fill="rgb(217,95,36)" fg:x="242133" fg:w="49"/><text x="82.4798%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (42 samples, 0.01%)</title><rect x="82.2322%" y="933" width="0.0143%" height="15" fill="rgb(212,110,31)" fg:x="242140" fg:w="42"/><text x="82.4822%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (402 samples, 0.14%)</title><rect x="82.1378%" y="1013" width="0.1365%" height="15" fill="rgb(206,32,53)" fg:x="241862" fg:w="402"/><text x="82.3878%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (79 samples, 0.03%)</title><rect x="82.2474%" y="997" width="0.0268%" height="15" fill="rgb(246,141,37)" fg:x="242185" fg:w="79"/><text x="82.4974%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (79 samples, 0.03%)</title><rect x="82.2474%" y="981" width="0.0268%" height="15" fill="rgb(219,16,7)" fg:x="242185" fg:w="79"/><text x="82.4974%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (79 samples, 0.03%)</title><rect x="82.2474%" y="965" width="0.0268%" height="15" fill="rgb(230,205,45)" fg:x="242185" fg:w="79"/><text x="82.4974%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.03%)</title><rect x="82.2474%" y="949" width="0.0268%" height="15" fill="rgb(231,43,49)" fg:x="242185" fg:w="79"/><text x="82.4974%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.03%)</title><rect x="82.2474%" y="933" width="0.0268%" height="15" fill="rgb(212,106,34)" fg:x="242185" fg:w="79"/><text x="82.4974%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.03%)</title><rect x="82.2474%" y="917" width="0.0268%" height="15" fill="rgb(206,83,17)" fg:x="242185" fg:w="79"/><text x="82.4974%" y="927.50"></text></g><g><title>cfree (69 samples, 0.02%)</title><rect x="82.2508%" y="901" width="0.0234%" height="15" fill="rgb(244,154,49)" fg:x="242195" fg:w="69"/><text x="82.5008%" y="911.50"></text></g><g><title>[libc.so.6] (38 samples, 0.01%)</title><rect x="82.2614%" y="885" width="0.0129%" height="15" fill="rgb(244,149,49)" fg:x="242226" fg:w="38"/><text x="82.5114%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (420 samples, 0.14%)</title><rect x="82.1367%" y="1029" width="0.1426%" height="15" fill="rgb(227,134,18)" fg:x="241859" fg:w="420"/><text x="82.3867%" y="1039.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_usize_as_zint (36 samples, 0.01%)</title><rect x="82.2814%" y="1029" width="0.0122%" height="15" fill="rgb(237,116,36)" fg:x="242285" fg:w="36"/><text x="82.5314%" y="1039.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (35 samples, 0.01%)</title><rect x="82.2817%" y="1013" width="0.0119%" height="15" fill="rgb(205,129,40)" fg:x="242286" fg:w="35"/><text x="82.5317%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (32 samples, 0.01%)</title><rect x="82.2828%" y="997" width="0.0109%" height="15" fill="rgb(236,178,4)" fg:x="242289" fg:w="32"/><text x="82.5328%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (114 samples, 0.04%)</title><rect x="82.3660%" y="965" width="0.0387%" height="15" fill="rgb(251,76,53)" fg:x="242534" fg:w="114"/><text x="82.6160%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (114 samples, 0.04%)</title><rect x="82.3660%" y="949" width="0.0387%" height="15" fill="rgb(242,92,40)" fg:x="242534" fg:w="114"/><text x="82.6160%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (114 samples, 0.04%)</title><rect x="82.3660%" y="933" width="0.0387%" height="15" fill="rgb(209,45,30)" fg:x="242534" fg:w="114"/><text x="82.6160%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (96 samples, 0.03%)</title><rect x="82.3721%" y="917" width="0.0326%" height="15" fill="rgb(218,157,36)" fg:x="242552" fg:w="96"/><text x="82.6221%" y="927.50"></text></g><g><title>[libc.so.6] (86 samples, 0.03%)</title><rect x="82.3755%" y="901" width="0.0292%" height="15" fill="rgb(222,186,16)" fg:x="242562" fg:w="86"/><text x="82.6255%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (276 samples, 0.09%)</title><rect x="82.3198%" y="997" width="0.0937%" height="15" fill="rgb(254,72,35)" fg:x="242398" fg:w="276"/><text x="82.5698%" y="1007.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (152 samples, 0.05%)</title><rect x="82.3619%" y="981" width="0.0516%" height="15" fill="rgb(224,25,35)" fg:x="242522" fg:w="152"/><text x="82.6119%" y="991.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (347 samples, 0.12%)</title><rect x="82.2967%" y="1013" width="0.1178%" height="15" fill="rgb(206,135,52)" fg:x="242330" fg:w="347"/><text x="82.5467%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (364 samples, 0.12%)</title><rect x="82.2936%" y="1029" width="0.1236%" height="15" fill="rgb(229,174,47)" fg:x="242321" fg:w="364"/><text x="82.5436%" y="1039.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (928 samples, 0.32%)</title><rect x="82.1068%" y="1061" width="0.3152%" height="15" fill="rgb(242,184,21)" fg:x="241771" fg:w="928"/><text x="82.3568%" y="1071.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (883 samples, 0.30%)</title><rect x="82.1221%" y="1045" width="0.2999%" height="15" fill="rgb(213,22,45)" fg:x="241816" fg:w="883"/><text x="82.3721%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (971 samples, 0.33%)</title><rect x="82.0943%" y="1077" width="0.3298%" height="15" fill="rgb(237,81,54)" fg:x="241734" fg:w="971"/><text x="82.3443%" y="1087.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as zenoh_buffers::traits::writer::BacktrackableWriter&gt;::mark (32 samples, 0.01%)</title><rect x="82.4271%" y="1077" width="0.0109%" height="15" fill="rgb(248,177,18)" fg:x="242714" fg:w="32"/><text x="82.6771%" y="1087.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (1,178 samples, 0.40%)</title><rect x="82.0410%" y="1093" width="0.4001%" height="15" fill="rgb(254,31,16)" fg:x="241577" fg:w="1178"/><text x="82.2910%" y="1103.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (10,179 samples, 3.46%)</title><rect x="78.9927%" y="1205" width="3.4568%" height="15" fill="rgb(235,20,31)" fg:x="232601" fg:w="10179"/><text x="79.2427%" y="1215.50">zen..</text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (2,926 samples, 0.99%)</title><rect x="81.4558%" y="1189" width="0.9937%" height="15" fill="rgb(240,56,43)" fg:x="239854" fg:w="2926"/><text x="81.7058%" y="1199.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (2,903 samples, 0.99%)</title><rect x="81.4636%" y="1173" width="0.9859%" height="15" fill="rgb(237,197,51)" fg:x="239877" fg:w="2903"/><text x="81.7136%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (2,783 samples, 0.95%)</title><rect x="81.5044%" y="1157" width="0.9451%" height="15" fill="rgb(241,162,44)" fg:x="239997" fg:w="2783"/><text x="81.7544%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (2,745 samples, 0.93%)</title><rect x="81.5173%" y="1141" width="0.9322%" height="15" fill="rgb(224,23,20)" fg:x="240035" fg:w="2745"/><text x="81.7673%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (2,706 samples, 0.92%)</title><rect x="81.5305%" y="1125" width="0.9190%" height="15" fill="rgb(250,109,34)" fg:x="240074" fg:w="2706"/><text x="81.7805%" y="1135.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (2,387 samples, 0.81%)</title><rect x="81.6389%" y="1109" width="0.8106%" height="15" fill="rgb(214,175,50)" fg:x="240393" fg:w="2387"/><text x="81.8889%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (39 samples, 0.01%)</title><rect x="82.4808%" y="1157" width="0.0132%" height="15" fill="rgb(213,182,5)" fg:x="242872" fg:w="39"/><text x="82.7308%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (55 samples, 0.02%)</title><rect x="82.4791%" y="1189" width="0.0187%" height="15" fill="rgb(209,199,19)" fg:x="242867" fg:w="55"/><text x="82.7291%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="82.4808%" y="1173" width="0.0170%" height="15" fill="rgb(236,224,42)" fg:x="242872" fg:w="50"/><text x="82.7308%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::update_edge (159 samples, 0.05%)</title><rect x="82.4495%" y="1205" width="0.0540%" height="15" fill="rgb(246,226,29)" fg:x="242780" fg:w="159"/><text x="82.6995%" y="1215.50"></text></g><g><title>[libc.so.6] (43 samples, 0.01%)</title><rect x="82.5035%" y="1189" width="0.0146%" height="15" fill="rgb(227,223,11)" fg:x="242939" fg:w="43"/><text x="82.7535%" y="1199.50"></text></g><g><title>[libc.so.6] (41 samples, 0.01%)</title><rect x="82.5188%" y="1157" width="0.0139%" height="15" fill="rgb(219,7,51)" fg:x="242984" fg:w="41"/><text x="82.7688%" y="1167.50"></text></g><g><title>[libc.so.6] (62 samples, 0.02%)</title><rect x="82.5364%" y="1125" width="0.0211%" height="15" fill="rgb(245,167,10)" fg:x="243036" fg:w="62"/><text x="82.7864%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::build (43 samples, 0.01%)</title><rect x="82.5674%" y="1125" width="0.0146%" height="15" fill="rgb(237,224,16)" fg:x="243127" fg:w="43"/><text x="82.8174%" y="1135.50"></text></g><g><title>async_std::task::spawn::spawn (148 samples, 0.05%)</title><rect x="82.5327%" y="1157" width="0.0503%" height="15" fill="rgb(226,132,13)" fg:x="243025" fg:w="148"/><text x="82.7827%" y="1167.50"></text></g><g><title>async_std::task::builder::Builder::spawn (138 samples, 0.05%)</title><rect x="82.5361%" y="1141" width="0.0469%" height="15" fill="rgb(214,140,3)" fg:x="243035" fg:w="138"/><text x="82.7861%" y="1151.50"></text></g><g><title>stop_token::future::FutureExt::timeout_at (33 samples, 0.01%)</title><rect x="82.5830%" y="1157" width="0.0112%" height="15" fill="rgb(221,177,4)" fg:x="243173" fg:w="33"/><text x="82.8330%" y="1167.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="82.5837%" y="1141" width="0.0105%" height="15" fill="rgb(238,139,3)" fg:x="243175" fg:w="31"/><text x="82.8337%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (242 samples, 0.08%)</title><rect x="82.5181%" y="1189" width="0.0822%" height="15" fill="rgb(216,17,39)" fg:x="242982" fg:w="242"/><text x="82.7681%" y="1199.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn::{{closure}} (240 samples, 0.08%)</title><rect x="82.5188%" y="1173" width="0.0815%" height="15" fill="rgb(238,120,9)" fg:x="242984" fg:w="240"/><text x="82.7688%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (177,436 samples, 60.26%)</title><rect x="22.3464%" y="1221" width="60.2583%" height="15" fill="rgb(244,92,53)" fg:x="65801" fg:w="177436"/><text x="22.5964%" y="1231.50">zenoh::net::routing::network::Network::link_states</text></g><g><title>zenoh::net::runtime::Runtime::spawn (298 samples, 0.10%)</title><rect x="82.5035%" y="1205" width="0.1012%" height="15" fill="rgb(224,148,33)" fg:x="242939" fg:w="298"/><text x="82.7535%" y="1215.50"></text></g><g><title>recvmsg (143 samples, 0.05%)</title><rect x="82.6251%" y="965" width="0.0486%" height="15" fill="rgb(243,6,36)" fg:x="243297" fg:w="143"/><text x="82.8751%" y="975.50"></text></g><g><title>[unknown] (137 samples, 0.05%)</title><rect x="82.6271%" y="949" width="0.0465%" height="15" fill="rgb(230,102,11)" fg:x="243303" fg:w="137"/><text x="82.8771%" y="959.50"></text></g><g><title>[unknown] (135 samples, 0.05%)</title><rect x="82.6278%" y="933" width="0.0458%" height="15" fill="rgb(234,148,36)" fg:x="243305" fg:w="135"/><text x="82.8778%" y="943.50"></text></g><g><title>[unknown] (134 samples, 0.05%)</title><rect x="82.6281%" y="917" width="0.0455%" height="15" fill="rgb(251,153,25)" fg:x="243306" fg:w="134"/><text x="82.8781%" y="927.50"></text></g><g><title>[unknown] (125 samples, 0.04%)</title><rect x="82.6312%" y="901" width="0.0425%" height="15" fill="rgb(215,129,8)" fg:x="243315" fg:w="125"/><text x="82.8812%" y="911.50"></text></g><g><title>[unknown] (116 samples, 0.04%)</title><rect x="82.6343%" y="885" width="0.0394%" height="15" fill="rgb(224,128,35)" fg:x="243324" fg:w="116"/><text x="82.8843%" y="895.50"></text></g><g><title>[unknown] (91 samples, 0.03%)</title><rect x="82.6427%" y="869" width="0.0309%" height="15" fill="rgb(237,56,52)" fg:x="243349" fg:w="91"/><text x="82.8927%" y="879.50"></text></g><g><title>[unknown] (82 samples, 0.03%)</title><rect x="82.6458%" y="853" width="0.0278%" height="15" fill="rgb(234,213,19)" fg:x="243358" fg:w="82"/><text x="82.8958%" y="863.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="82.6512%" y="837" width="0.0224%" height="15" fill="rgb(252,82,23)" fg:x="243374" fg:w="66"/><text x="82.9012%" y="847.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="82.6590%" y="821" width="0.0146%" height="15" fill="rgb(254,201,21)" fg:x="243397" fg:w="43"/><text x="82.9090%" y="831.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (248 samples, 0.08%)</title><rect x="82.6050%" y="1221" width="0.0842%" height="15" fill="rgb(250,186,11)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (248 samples, 0.08%)</title><rect x="82.6050%" y="1205" width="0.0842%" height="15" fill="rgb(211,174,5)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (248 samples, 0.08%)</title><rect x="82.6050%" y="1189" width="0.0842%" height="15" fill="rgb(214,121,10)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (248 samples, 0.08%)</title><rect x="82.6050%" y="1173" width="0.0842%" height="15" fill="rgb(241,66,2)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (248 samples, 0.08%)</title><rect x="82.6050%" y="1157" width="0.0842%" height="15" fill="rgb(220,167,19)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1167.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (248 samples, 0.08%)</title><rect x="82.6050%" y="1141" width="0.0842%" height="15" fill="rgb(231,54,50)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1151.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (248 samples, 0.08%)</title><rect x="82.6050%" y="1125" width="0.0842%" height="15" fill="rgb(239,217,53)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (248 samples, 0.08%)</title><rect x="82.6050%" y="1109" width="0.0842%" height="15" fill="rgb(248,8,0)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1119.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (248 samples, 0.08%)</title><rect x="82.6050%" y="1093" width="0.0842%" height="15" fill="rgb(229,118,37)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1103.50"></text></g><g><title>zenoh_util::net::get_local_addresses (248 samples, 0.08%)</title><rect x="82.6050%" y="1077" width="0.0842%" height="15" fill="rgb(253,223,43)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1087.50"></text></g><g><title>pnet_datalink::interfaces (248 samples, 0.08%)</title><rect x="82.6050%" y="1061" width="0.0842%" height="15" fill="rgb(211,77,36)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1071.50"></text></g><g><title>pnet_datalink::backend::interfaces (248 samples, 0.08%)</title><rect x="82.6050%" y="1045" width="0.0842%" height="15" fill="rgb(219,3,53)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1055.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (248 samples, 0.08%)</title><rect x="82.6050%" y="1029" width="0.0842%" height="15" fill="rgb(244,45,42)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1039.50"></text></g><g><title>getifaddrs (248 samples, 0.08%)</title><rect x="82.6050%" y="1013" width="0.0842%" height="15" fill="rgb(225,95,27)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1023.50"></text></g><g><title>[libc.so.6] (248 samples, 0.08%)</title><rect x="82.6050%" y="997" width="0.0842%" height="15" fill="rgb(207,74,8)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="1007.50"></text></g><g><title>[libc.so.6] (248 samples, 0.08%)</title><rect x="82.6050%" y="981" width="0.0842%" height="15" fill="rgb(243,63,36)" fg:x="243238" fg:w="248"/><text x="82.8550%" y="991.50"></text></g><g><title>sendto (46 samples, 0.02%)</title><rect x="82.6736%" y="965" width="0.0156%" height="15" fill="rgb(211,180,12)" fg:x="243440" fg:w="46"/><text x="82.9236%" y="975.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="82.6743%" y="949" width="0.0149%" height="15" fill="rgb(254,166,49)" fg:x="243442" fg:w="44"/><text x="82.9243%" y="959.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="82.6743%" y="933" width="0.0149%" height="15" fill="rgb(205,19,0)" fg:x="243442" fg:w="44"/><text x="82.9243%" y="943.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="82.6743%" y="917" width="0.0149%" height="15" fill="rgb(224,172,32)" fg:x="243442" fg:w="44"/><text x="82.9243%" y="927.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="82.6743%" y="901" width="0.0149%" height="15" fill="rgb(254,136,30)" fg:x="243442" fg:w="44"/><text x="82.9243%" y="911.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="82.6747%" y="885" width="0.0146%" height="15" fill="rgb(246,19,35)" fg:x="243443" fg:w="43"/><text x="82.9247%" y="895.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="82.6757%" y="869" width="0.0136%" height="15" fill="rgb(219,24,36)" fg:x="243446" fg:w="40"/><text x="82.9257%" y="879.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="82.6957%" y="1141" width="0.0115%" height="15" fill="rgb(251,55,1)" fg:x="243505" fg:w="34"/><text x="82.9457%" y="1151.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="82.6971%" y="1125" width="0.0102%" height="15" fill="rgb(218,117,39)" fg:x="243509" fg:w="30"/><text x="82.9471%" y="1135.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="82.6971%" y="1109" width="0.0102%" height="15" fill="rgb(248,169,11)" fg:x="243509" fg:w="30"/><text x="82.9471%" y="1119.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="82.6971%" y="1093" width="0.0102%" height="15" fill="rgb(244,40,44)" fg:x="243509" fg:w="30"/><text x="82.9471%" y="1103.50"></text></g><g><title>async_global_executor::executor::spawn (30 samples, 0.01%)</title><rect x="82.7096%" y="1141" width="0.0102%" height="15" fill="rgb(234,62,37)" fg:x="243546" fg:w="30"/><text x="82.9596%" y="1151.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn (112 samples, 0.04%)</title><rect x="82.6893%" y="1221" width="0.0380%" height="15" fill="rgb(207,117,42)" fg:x="243486" fg:w="112"/><text x="82.9393%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (112 samples, 0.04%)</title><rect x="82.6893%" y="1205" width="0.0380%" height="15" fill="rgb(213,43,2)" fg:x="243486" fg:w="112"/><text x="82.9393%" y="1215.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn::{{closure}} (112 samples, 0.04%)</title><rect x="82.6893%" y="1189" width="0.0380%" height="15" fill="rgb(244,202,51)" fg:x="243486" fg:w="112"/><text x="82.9393%" y="1199.50"></text></g><g><title>async_std::task::spawn::spawn (112 samples, 0.04%)</title><rect x="82.6893%" y="1173" width="0.0380%" height="15" fill="rgb(253,174,46)" fg:x="243486" fg:w="112"/><text x="82.9393%" y="1183.50"></text></g><g><title>async_std::task::builder::Builder::spawn (112 samples, 0.04%)</title><rect x="82.6893%" y="1157" width="0.0380%" height="15" fill="rgb(251,23,1)" fg:x="243486" fg:w="112"/><text x="82.9393%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (38 samples, 0.01%)</title><rect x="82.7273%" y="949" width="0.0129%" height="15" fill="rgb(253,26,1)" fg:x="243598" fg:w="38"/><text x="82.9773%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (38 samples, 0.01%)</title><rect x="82.7273%" y="933" width="0.0129%" height="15" fill="rgb(216,89,31)" fg:x="243598" fg:w="38"/><text x="82.9773%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.01%)</title><rect x="82.7273%" y="917" width="0.0129%" height="15" fill="rgb(209,109,5)" fg:x="243598" fg:w="38"/><text x="82.9773%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.01%)</title><rect x="82.7273%" y="901" width="0.0129%" height="15" fill="rgb(229,63,13)" fg:x="243598" fg:w="38"/><text x="82.9773%" y="911.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.01%)</title><rect x="82.7273%" y="885" width="0.0129%" height="15" fill="rgb(238,137,54)" fg:x="243598" fg:w="38"/><text x="82.9773%" y="895.50"></text></g><g><title>malloc (38 samples, 0.01%)</title><rect x="82.7273%" y="869" width="0.0129%" height="15" fill="rgb(228,1,9)" fg:x="243598" fg:w="38"/><text x="82.9773%" y="879.50"></text></g><g><title>polling::Poller::add (35 samples, 0.01%)</title><rect x="82.7402%" y="949" width="0.0119%" height="15" fill="rgb(249,120,48)" fg:x="243636" fg:w="35"/><text x="82.9902%" y="959.50"></text></g><g><title>polling::epoll::Poller::add (35 samples, 0.01%)</title><rect x="82.7402%" y="933" width="0.0119%" height="15" fill="rgb(209,72,36)" fg:x="243636" fg:w="35"/><text x="82.9902%" y="943.50"></text></g><g><title>polling::epoll::Poller::ctl (35 samples, 0.01%)</title><rect x="82.7402%" y="917" width="0.0119%" height="15" fill="rgb(247,98,49)" fg:x="243636" fg:w="35"/><text x="82.9902%" y="927.50"></text></g><g><title>epoll_ctl (35 samples, 0.01%)</title><rect x="82.7402%" y="901" width="0.0119%" height="15" fill="rgb(233,75,36)" fg:x="243636" fg:w="35"/><text x="82.9902%" y="911.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="82.7402%" y="885" width="0.0119%" height="15" fill="rgb(225,14,24)" fg:x="243636" fg:w="35"/><text x="82.9902%" y="895.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="82.7402%" y="869" width="0.0119%" height="15" fill="rgb(237,193,20)" fg:x="243636" fg:w="35"/><text x="82.9902%" y="879.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="82.7402%" y="853" width="0.0119%" height="15" fill="rgb(239,122,19)" fg:x="243636" fg:w="35"/><text x="82.9902%" y="863.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="82.7402%" y="837" width="0.0119%" height="15" fill="rgb(231,220,10)" fg:x="243636" fg:w="35"/><text x="82.9902%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (110 samples, 0.04%)</title><rect x="82.7273%" y="1029" width="0.0374%" height="15" fill="rgb(220,66,15)" fg:x="243598" fg:w="110"/><text x="82.9773%" y="1039.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::bind::{{closure}} (110 samples, 0.04%)</title><rect x="82.7273%" y="1013" width="0.0374%" height="15" fill="rgb(215,171,52)" fg:x="243598" fg:w="110"/><text x="82.9773%" y="1023.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::bind (110 samples, 0.04%)</title><rect x="82.7273%" y="997" width="0.0374%" height="15" fill="rgb(241,169,50)" fg:x="243598" fg:w="110"/><text x="82.9773%" y="1007.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (110 samples, 0.04%)</title><rect x="82.7273%" y="981" width="0.0374%" height="15" fill="rgb(236,189,0)" fg:x="243598" fg:w="110"/><text x="82.9773%" y="991.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (110 samples, 0.04%)</title><rect x="82.7273%" y="965" width="0.0374%" height="15" fill="rgb(217,147,20)" fg:x="243598" fg:w="110"/><text x="82.9773%" y="975.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.01%)</title><rect x="82.7871%" y="933" width="0.0146%" height="15" fill="rgb(206,188,39)" fg:x="243774" fg:w="43"/><text x="83.0371%" y="943.50"></text></g><g><title>malloc (41 samples, 0.01%)</title><rect x="82.7878%" y="917" width="0.0139%" height="15" fill="rgb(227,118,25)" fg:x="243776" fg:w="41"/><text x="83.0378%" y="927.50"></text></g><g><title>[libc.so.6] (35 samples, 0.01%)</title><rect x="82.7898%" y="901" width="0.0119%" height="15" fill="rgb(248,171,40)" fg:x="243782" fg:w="35"/><text x="83.0398%" y="911.50"></text></g><g><title>async_task::runnable::spawn_unchecked (62 samples, 0.02%)</title><rect x="82.7840%" y="965" width="0.0211%" height="15" fill="rgb(251,90,54)" fg:x="243765" fg:w="62"/><text x="83.0340%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (53 samples, 0.02%)</title><rect x="82.7871%" y="949" width="0.0180%" height="15" fill="rgb(234,11,46)" fg:x="243774" fg:w="53"/><text x="83.0371%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (36 samples, 0.01%)</title><rect x="82.8051%" y="965" width="0.0122%" height="15" fill="rgb(229,134,13)" fg:x="243827" fg:w="36"/><text x="83.0551%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="82.8051%" y="949" width="0.0122%" height="15" fill="rgb(223,129,3)" fg:x="243827" fg:w="36"/><text x="83.0551%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (36 samples, 0.01%)</title><rect x="82.8051%" y="933" width="0.0122%" height="15" fill="rgb(221,124,13)" fg:x="243827" fg:w="36"/><text x="83.0551%" y="943.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (36 samples, 0.01%)</title><rect x="82.8051%" y="917" width="0.0122%" height="15" fill="rgb(234,3,18)" fg:x="243827" fg:w="36"/><text x="83.0551%" y="927.50"></text></g><g><title>syscall (34 samples, 0.01%)</title><rect x="82.8058%" y="901" width="0.0115%" height="15" fill="rgb(249,199,20)" fg:x="243829" fg:w="34"/><text x="83.0558%" y="911.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="82.8061%" y="885" width="0.0112%" height="15" fill="rgb(224,134,6)" fg:x="243830" fg:w="33"/><text x="83.0561%" y="895.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="82.8061%" y="869" width="0.0112%" height="15" fill="rgb(254,83,26)" fg:x="243830" fg:w="33"/><text x="83.0561%" y="879.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="82.8068%" y="853" width="0.0105%" height="15" fill="rgb(217,88,9)" fg:x="243832" fg:w="31"/><text x="83.0568%" y="863.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="82.8071%" y="837" width="0.0102%" height="15" fill="rgb(225,73,2)" fg:x="243833" fg:w="30"/><text x="83.0571%" y="847.50"></text></g><g><title>async_executor::Executor::spawn (158 samples, 0.05%)</title><rect x="82.7735%" y="981" width="0.0537%" height="15" fill="rgb(226,44,39)" fg:x="243734" fg:w="158"/><text x="83.0235%" y="991.50"></text></g><g><title>async_global_executor::executor::spawn (160 samples, 0.05%)</title><rect x="82.7732%" y="997" width="0.0543%" height="15" fill="rgb(228,53,17)" fg:x="243733" fg:w="160"/><text x="83.0232%" y="1007.50"></text></g><g><title>async_std::task::spawn::spawn (165 samples, 0.06%)</title><rect x="82.7721%" y="1029" width="0.0560%" height="15" fill="rgb(212,27,27)" fg:x="243730" fg:w="165"/><text x="83.0221%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::spawn (165 samples, 0.06%)</title><rect x="82.7721%" y="1013" width="0.0560%" height="15" fill="rgb(241,50,6)" fg:x="243730" fg:w="165"/><text x="83.0221%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (300 samples, 0.10%)</title><rect x="82.7273%" y="1141" width="0.1019%" height="15" fill="rgb(225,28,51)" fg:x="243598" fg:w="300"/><text x="82.9773%" y="1151.50"></text></g><g><title>zenoh_transport::manager::TransportManager::add_listener::{{closure}} (300 samples, 0.10%)</title><rect x="82.7273%" y="1125" width="0.1019%" height="15" fill="rgb(215,33,16)" fg:x="243598" fg:w="300"/><text x="82.9773%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (300 samples, 0.10%)</title><rect x="82.7273%" y="1109" width="0.1019%" height="15" fill="rgb(243,40,39)" fg:x="243598" fg:w="300"/><text x="82.9773%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::add_listener_unicast::{{closure}} (300 samples, 0.10%)</title><rect x="82.7273%" y="1093" width="0.1019%" height="15" fill="rgb(225,11,42)" fg:x="243598" fg:w="300"/><text x="82.9773%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (300 samples, 0.10%)</title><rect x="82.7273%" y="1077" width="0.1019%" height="15" fill="rgb(241,220,38)" fg:x="243598" fg:w="300"/><text x="82.9773%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (300 samples, 0.10%)</title><rect x="82.7273%" y="1061" width="0.1019%" height="15" fill="rgb(244,52,35)" fg:x="243598" fg:w="300"/><text x="82.9773%" y="1071.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}} (300 samples, 0.10%)</title><rect x="82.7273%" y="1045" width="0.1019%" height="15" fill="rgb(246,42,46)" fg:x="243598" fg:w="300"/><text x="82.9773%" y="1055.50"></text></g><g><title>[libc.so.6] (35 samples, 0.01%)</title><rect x="82.8363%" y="965" width="0.0119%" height="15" fill="rgb(205,184,13)" fg:x="243919" fg:w="35"/><text x="83.0863%" y="975.50"></text></g><g><title>malloc (42 samples, 0.01%)</title><rect x="82.8343%" y="981" width="0.0143%" height="15" fill="rgb(209,48,36)" fg:x="243913" fg:w="42"/><text x="83.0843%" y="991.50"></text></g><g><title>recvmsg (105 samples, 0.04%)</title><rect x="82.8485%" y="981" width="0.0357%" height="15" fill="rgb(244,34,51)" fg:x="243955" fg:w="105"/><text x="83.0985%" y="991.50"></text></g><g><title>[unknown] (101 samples, 0.03%)</title><rect x="82.8499%" y="965" width="0.0343%" height="15" fill="rgb(221,107,33)" fg:x="243959" fg:w="101"/><text x="83.0999%" y="975.50"></text></g><g><title>[unknown] (97 samples, 0.03%)</title><rect x="82.8513%" y="949" width="0.0329%" height="15" fill="rgb(224,203,12)" fg:x="243963" fg:w="97"/><text x="83.1013%" y="959.50"></text></g><g><title>[unknown] (97 samples, 0.03%)</title><rect x="82.8513%" y="933" width="0.0329%" height="15" fill="rgb(230,215,18)" fg:x="243963" fg:w="97"/><text x="83.1013%" y="943.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="82.8526%" y="917" width="0.0316%" height="15" fill="rgb(206,185,35)" fg:x="243967" fg:w="93"/><text x="83.1026%" y="927.50"></text></g><g><title>[unknown] (87 samples, 0.03%)</title><rect x="82.8547%" y="901" width="0.0295%" height="15" fill="rgb(228,140,34)" fg:x="243973" fg:w="87"/><text x="83.1047%" y="911.50"></text></g><g><title>[unknown] (71 samples, 0.02%)</title><rect x="82.8601%" y="885" width="0.0241%" height="15" fill="rgb(208,93,13)" fg:x="243989" fg:w="71"/><text x="83.1101%" y="895.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="82.8625%" y="869" width="0.0217%" height="15" fill="rgb(221,193,39)" fg:x="243996" fg:w="64"/><text x="83.1125%" y="879.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="82.8652%" y="853" width="0.0190%" height="15" fill="rgb(241,132,34)" fg:x="244004" fg:w="56"/><text x="83.1152%" y="863.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="82.8706%" y="837" width="0.0136%" height="15" fill="rgb(221,141,10)" fg:x="244020" fg:w="40"/><text x="83.1206%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (504 samples, 0.17%)</title><rect x="82.7273%" y="1173" width="0.1712%" height="15" fill="rgb(226,90,31)" fg:x="243598" fg:w="504"/><text x="82.9773%" y="1183.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::bind_listeners::{{closure}} (504 samples, 0.17%)</title><rect x="82.7273%" y="1157" width="0.1712%" height="15" fill="rgb(243,75,5)" fg:x="243598" fg:w="504"/><text x="82.9773%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (204 samples, 0.07%)</title><rect x="82.8292%" y="1141" width="0.0693%" height="15" fill="rgb(227,156,21)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (204 samples, 0.07%)</title><rect x="82.8292%" y="1125" width="0.0693%" height="15" fill="rgb(250,195,8)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1135.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (204 samples, 0.07%)</title><rect x="82.8292%" y="1109" width="0.0693%" height="15" fill="rgb(220,134,5)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1119.50"></text></g><g><title>zenoh_util::net::get_local_addresses (204 samples, 0.07%)</title><rect x="82.8292%" y="1093" width="0.0693%" height="15" fill="rgb(246,106,34)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1103.50"></text></g><g><title>pnet_datalink::interfaces (204 samples, 0.07%)</title><rect x="82.8292%" y="1077" width="0.0693%" height="15" fill="rgb(205,1,4)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces (204 samples, 0.07%)</title><rect x="82.8292%" y="1061" width="0.0693%" height="15" fill="rgb(224,151,29)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1071.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (204 samples, 0.07%)</title><rect x="82.8292%" y="1045" width="0.0693%" height="15" fill="rgb(251,196,0)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1055.50"></text></g><g><title>getifaddrs (204 samples, 0.07%)</title><rect x="82.8292%" y="1029" width="0.0693%" height="15" fill="rgb(212,127,0)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1039.50"></text></g><g><title>[libc.so.6] (204 samples, 0.07%)</title><rect x="82.8292%" y="1013" width="0.0693%" height="15" fill="rgb(236,71,53)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1023.50"></text></g><g><title>[libc.so.6] (204 samples, 0.07%)</title><rect x="82.8292%" y="997" width="0.0693%" height="15" fill="rgb(227,99,0)" fg:x="243898" fg:w="204"/><text x="83.0792%" y="1007.50"></text></g><g><title>sendto (42 samples, 0.01%)</title><rect x="82.8842%" y="981" width="0.0143%" height="15" fill="rgb(239,89,21)" fg:x="244060" fg:w="42"/><text x="83.1342%" y="991.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="82.8859%" y="965" width="0.0126%" height="15" fill="rgb(243,122,19)" fg:x="244065" fg:w="37"/><text x="83.1359%" y="975.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="82.8862%" y="949" width="0.0122%" height="15" fill="rgb(229,192,45)" fg:x="244066" fg:w="36"/><text x="83.1362%" y="959.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="82.8862%" y="933" width="0.0122%" height="15" fill="rgb(235,165,35)" fg:x="244066" fg:w="36"/><text x="83.1362%" y="943.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="82.8866%" y="917" width="0.0119%" height="15" fill="rgb(253,202,0)" fg:x="244067" fg:w="35"/><text x="83.1366%" y="927.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="82.8869%" y="901" width="0.0115%" height="15" fill="rgb(235,51,20)" fg:x="244068" fg:w="34"/><text x="83.1369%" y="911.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="82.8869%" y="885" width="0.0115%" height="15" fill="rgb(218,95,46)" fg:x="244068" fg:w="34"/><text x="83.1369%" y="895.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (505 samples, 0.17%)</title><rect x="82.7273%" y="1221" width="0.1715%" height="15" fill="rgb(212,81,10)" fg:x="243598" fg:w="505"/><text x="82.9773%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (505 samples, 0.17%)</title><rect x="82.7273%" y="1205" width="0.1715%" height="15" fill="rgb(240,59,0)" fg:x="243598" fg:w="505"/><text x="82.9773%" y="1215.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}} (505 samples, 0.17%)</title><rect x="82.7273%" y="1189" width="0.1715%" height="15" fill="rgb(212,191,42)" fg:x="243598" fg:w="505"/><text x="82.9773%" y="1199.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (177 samples, 0.06%)</title><rect x="82.9382%" y="1029" width="0.0601%" height="15" fill="rgb(233,140,3)" fg:x="244219" fg:w="177"/><text x="83.1882%" y="1039.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (88 samples, 0.03%)</title><rect x="82.9684%" y="1013" width="0.0299%" height="15" fill="rgb(215,69,23)" fg:x="244308" fg:w="88"/><text x="83.2184%" y="1023.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (312 samples, 0.11%)</title><rect x="82.9083%" y="1045" width="0.1060%" height="15" fill="rgb(240,202,20)" fg:x="244131" fg:w="312"/><text x="83.1583%" y="1055.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::build (339 samples, 0.12%)</title><rect x="82.8995%" y="1221" width="0.1151%" height="15" fill="rgb(209,146,50)" fg:x="244105" fg:w="339"/><text x="83.1495%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (339 samples, 0.12%)</title><rect x="82.8995%" y="1205" width="0.1151%" height="15" fill="rgb(253,102,54)" fg:x="244105" fg:w="339"/><text x="83.1495%" y="1215.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (339 samples, 0.12%)</title><rect x="82.8995%" y="1189" width="0.1151%" height="15" fill="rgb(250,173,47)" fg:x="244105" fg:w="339"/><text x="83.1495%" y="1199.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (339 samples, 0.12%)</title><rect x="82.8995%" y="1173" width="0.1151%" height="15" fill="rgb(232,142,7)" fg:x="244105" fg:w="339"/><text x="83.1495%" y="1183.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (339 samples, 0.12%)</title><rect x="82.8995%" y="1157" width="0.1151%" height="15" fill="rgb(230,157,47)" fg:x="244105" fg:w="339"/><text x="83.1495%" y="1167.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (339 samples, 0.12%)</title><rect x="82.8995%" y="1141" width="0.1151%" height="15" fill="rgb(214,177,35)" fg:x="244105" fg:w="339"/><text x="83.1495%" y="1151.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (339 samples, 0.12%)</title><rect x="82.8995%" y="1125" width="0.1151%" height="15" fill="rgb(234,119,46)" fg:x="244105" fg:w="339"/><text x="83.1495%" y="1135.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (339 samples, 0.12%)</title><rect x="82.8995%" y="1109" width="0.1151%" height="15" fill="rgb(241,180,50)" fg:x="244105" fg:w="339"/><text x="83.1495%" y="1119.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (336 samples, 0.11%)</title><rect x="82.9005%" y="1093" width="0.1141%" height="15" fill="rgb(221,54,25)" fg:x="244108" fg:w="336"/><text x="83.1505%" y="1103.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (336 samples, 0.11%)</title><rect x="82.9005%" y="1077" width="0.1141%" height="15" fill="rgb(209,157,44)" fg:x="244108" fg:w="336"/><text x="83.1505%" y="1087.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (336 samples, 0.11%)</title><rect x="82.9005%" y="1061" width="0.1141%" height="15" fill="rgb(246,115,41)" fg:x="244108" fg:w="336"/><text x="83.1505%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (38 samples, 0.01%)</title><rect x="83.0360%" y="821" width="0.0129%" height="15" fill="rgb(229,86,1)" fg:x="244507" fg:w="38"/><text x="83.2860%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.01%)</title><rect x="83.0363%" y="805" width="0.0126%" height="15" fill="rgb(240,108,53)" fg:x="244508" fg:w="37"/><text x="83.2863%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.01%)</title><rect x="83.0363%" y="789" width="0.0126%" height="15" fill="rgb(227,134,2)" fg:x="244508" fg:w="37"/><text x="83.2863%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.01%)</title><rect x="83.0363%" y="773" width="0.0126%" height="15" fill="rgb(213,129,25)" fg:x="244508" fg:w="37"/><text x="83.2863%" y="783.50"></text></g><g><title>alloc::alloc::alloc (37 samples, 0.01%)</title><rect x="83.0363%" y="757" width="0.0126%" height="15" fill="rgb(226,35,21)" fg:x="244508" fg:w="37"/><text x="83.2863%" y="767.50"></text></g><g><title>__rdl_alloc (36 samples, 0.01%)</title><rect x="83.0367%" y="741" width="0.0122%" height="15" fill="rgb(208,129,26)" fg:x="244509" fg:w="36"/><text x="83.2867%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (34 samples, 0.01%)</title><rect x="83.0374%" y="725" width="0.0115%" height="15" fill="rgb(224,83,6)" fg:x="244511" fg:w="34"/><text x="83.2874%" y="735.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (34 samples, 0.01%)</title><rect x="83.0374%" y="709" width="0.0115%" height="15" fill="rgb(227,52,39)" fg:x="244511" fg:w="34"/><text x="83.2874%" y="719.50"></text></g><g><title>posix_memalign (33 samples, 0.01%)</title><rect x="83.0377%" y="693" width="0.0112%" height="15" fill="rgb(241,30,17)" fg:x="244512" fg:w="33"/><text x="83.2877%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (48 samples, 0.02%)</title><rect x="83.0496%" y="805" width="0.0163%" height="15" fill="rgb(246,186,42)" fg:x="244547" fg:w="48"/><text x="83.2996%" y="815.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (107 samples, 0.04%)</title><rect x="83.0360%" y="837" width="0.0363%" height="15" fill="rgb(221,169,15)" fg:x="244507" fg:w="107"/><text x="83.2860%" y="847.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (69 samples, 0.02%)</title><rect x="83.0489%" y="821" width="0.0234%" height="15" fill="rgb(235,108,21)" fg:x="244545" fg:w="69"/><text x="83.2989%" y="831.50"></text></g><g><title>async_executor::Runner::new (120 samples, 0.04%)</title><rect x="83.0336%" y="853" width="0.0408%" height="15" fill="rgb(219,148,30)" fg:x="244500" fg:w="120"/><text x="83.2836%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.05%)</title><rect x="83.0313%" y="917" width="0.0526%" height="15" fill="rgb(220,109,5)" fg:x="244493" fg:w="155"/><text x="83.2813%" y="927.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (155 samples, 0.05%)</title><rect x="83.0313%" y="901" width="0.0526%" height="15" fill="rgb(213,203,48)" fg:x="244493" fg:w="155"/><text x="83.2813%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.05%)</title><rect x="83.0313%" y="885" width="0.0526%" height="15" fill="rgb(244,71,33)" fg:x="244493" fg:w="155"/><text x="83.2813%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (155 samples, 0.05%)</title><rect x="83.0313%" y="869" width="0.0526%" height="15" fill="rgb(209,23,2)" fg:x="244493" fg:w="155"/><text x="83.2813%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (177 samples, 0.06%)</title><rect x="83.0309%" y="949" width="0.0601%" height="15" fill="rgb(219,97,7)" fg:x="244492" fg:w="177"/><text x="83.2809%" y="959.50"></text></g><g><title>async_io::driver::block_on (176 samples, 0.06%)</title><rect x="83.0313%" y="933" width="0.0598%" height="15" fill="rgb(216,161,23)" fg:x="244493" fg:w="176"/><text x="83.2813%" y="943.50"></text></g><g><title>async_std::task::block_on::block_on (195 samples, 0.07%)</title><rect x="83.0262%" y="1189" width="0.0662%" height="15" fill="rgb(207,45,42)" fg:x="244478" fg:w="195"/><text x="83.2762%" y="1199.50"></text></g><g><title>async_std::task::builder::Builder::blocking (195 samples, 0.07%)</title><rect x="83.0262%" y="1173" width="0.0662%" height="15" fill="rgb(241,61,4)" fg:x="244478" fg:w="195"/><text x="83.2762%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (192 samples, 0.07%)</title><rect x="83.0272%" y="1157" width="0.0652%" height="15" fill="rgb(236,170,1)" fg:x="244481" fg:w="192"/><text x="83.2772%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (190 samples, 0.06%)</title><rect x="83.0279%" y="1141" width="0.0645%" height="15" fill="rgb(239,72,5)" fg:x="244483" fg:w="190"/><text x="83.2779%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (189 samples, 0.06%)</title><rect x="83.0282%" y="1125" width="0.0642%" height="15" fill="rgb(214,13,50)" fg:x="244484" fg:w="189"/><text x="83.2782%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (189 samples, 0.06%)</title><rect x="83.0282%" y="1109" width="0.0642%" height="15" fill="rgb(224,88,9)" fg:x="244484" fg:w="189"/><text x="83.2782%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (187 samples, 0.06%)</title><rect x="83.0289%" y="1093" width="0.0635%" height="15" fill="rgb(238,192,34)" fg:x="244486" fg:w="187"/><text x="83.2789%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (186 samples, 0.06%)</title><rect x="83.0292%" y="1077" width="0.0632%" height="15" fill="rgb(217,203,50)" fg:x="244487" fg:w="186"/><text x="83.2792%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (186 samples, 0.06%)</title><rect x="83.0292%" y="1061" width="0.0632%" height="15" fill="rgb(241,123,32)" fg:x="244487" fg:w="186"/><text x="83.2792%" y="1071.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (186 samples, 0.06%)</title><rect x="83.0292%" y="1045" width="0.0632%" height="15" fill="rgb(248,151,39)" fg:x="244487" fg:w="186"/><text x="83.2792%" y="1055.50"></text></g><g><title>async_global_executor::executor::block_on (186 samples, 0.06%)</title><rect x="83.0292%" y="1029" width="0.0632%" height="15" fill="rgb(208,89,6)" fg:x="244487" fg:w="186"/><text x="83.2792%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (186 samples, 0.06%)</title><rect x="83.0292%" y="1013" width="0.0632%" height="15" fill="rgb(254,43,26)" fg:x="244487" fg:w="186"/><text x="83.2792%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (186 samples, 0.06%)</title><rect x="83.0292%" y="997" width="0.0632%" height="15" fill="rgb(216,158,13)" fg:x="244487" fg:w="186"/><text x="83.2792%" y="1007.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (184 samples, 0.06%)</title><rect x="83.0299%" y="981" width="0.0625%" height="15" fill="rgb(212,47,37)" fg:x="244489" fg:w="184"/><text x="83.2799%" y="991.50"></text></g><g><title>async_global_executor::reactor::block_on (184 samples, 0.06%)</title><rect x="83.0299%" y="965" width="0.0625%" height="15" fill="rgb(254,16,10)" fg:x="244489" fg:w="184"/><text x="83.2799%" y="975.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::from_config::{{closure}} (243 samples, 0.08%)</title><rect x="83.0146%" y="1221" width="0.0825%" height="15" fill="rgb(223,228,16)" fg:x="244444" fg:w="243"/><text x="83.2646%" y="1231.50"></text></g><g><title>&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast as core::default::Default&gt;::default (235 samples, 0.08%)</title><rect x="83.0173%" y="1205" width="0.0798%" height="15" fill="rgb(249,108,50)" fg:x="244452" fg:w="235"/><text x="83.2673%" y="1215.50"></text></g><g><title>[libc.so.6] (33 samples, 0.01%)</title><rect x="83.1012%" y="1141" width="0.0112%" height="15" fill="rgb(208,220,5)" fg:x="244699" fg:w="33"/><text x="83.3512%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx (147 samples, 0.05%)</title><rect x="83.0999%" y="1221" width="0.0499%" height="15" fill="rgb(217,89,48)" fg:x="244695" fg:w="147"/><text x="83.3499%" y="1231.50"></text></g><g><title>async_std::task::spawn::spawn (147 samples, 0.05%)</title><rect x="83.0999%" y="1205" width="0.0499%" height="15" fill="rgb(212,113,41)" fg:x="244695" fg:w="147"/><text x="83.3499%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::spawn (147 samples, 0.05%)</title><rect x="83.0999%" y="1189" width="0.0499%" height="15" fill="rgb(231,127,5)" fg:x="244695" fg:w="147"/><text x="83.3499%" y="1199.50"></text></g><g><title>async_global_executor::executor::spawn (147 samples, 0.05%)</title><rect x="83.0999%" y="1173" width="0.0499%" height="15" fill="rgb(217,141,17)" fg:x="244695" fg:w="147"/><text x="83.3499%" y="1183.50"></text></g><g><title>async_executor::Executor::spawn (147 samples, 0.05%)</title><rect x="83.0999%" y="1157" width="0.0499%" height="15" fill="rgb(245,125,54)" fg:x="244695" fg:w="147"/><text x="83.3499%" y="1167.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (76 samples, 0.03%)</title><rect x="83.1240%" y="1141" width="0.0258%" height="15" fill="rgb(248,125,3)" fg:x="244766" fg:w="76"/><text x="83.3740%" y="1151.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (76 samples, 0.03%)</title><rect x="83.1240%" y="1125" width="0.0258%" height="15" fill="rgb(236,119,51)" fg:x="244766" fg:w="76"/><text x="83.3740%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (76 samples, 0.03%)</title><rect x="83.1240%" y="1109" width="0.0258%" height="15" fill="rgb(239,99,8)" fg:x="244766" fg:w="76"/><text x="83.3740%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (74 samples, 0.03%)</title><rect x="83.1246%" y="1093" width="0.0251%" height="15" fill="rgb(224,228,4)" fg:x="244768" fg:w="74"/><text x="83.3746%" y="1103.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (45 samples, 0.02%)</title><rect x="83.1345%" y="1077" width="0.0153%" height="15" fill="rgb(220,131,45)" fg:x="244797" fg:w="45"/><text x="83.3845%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (123 samples, 0.04%)</title><rect x="83.1569%" y="1221" width="0.0418%" height="15" fill="rgb(215,62,5)" fg:x="244863" fg:w="123"/><text x="83.4069%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (121 samples, 0.04%)</title><rect x="83.1576%" y="1205" width="0.0411%" height="15" fill="rgb(253,12,24)" fg:x="244865" fg:w="121"/><text x="83.4076%" y="1215.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (121 samples, 0.04%)</title><rect x="83.1576%" y="1189" width="0.0411%" height="15" fill="rgb(248,120,50)" fg:x="244865" fg:w="121"/><text x="83.4076%" y="1199.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (121 samples, 0.04%)</title><rect x="83.1576%" y="1173" width="0.0411%" height="15" fill="rgb(245,194,10)" fg:x="244865" fg:w="121"/><text x="83.4076%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (120 samples, 0.04%)</title><rect x="83.1579%" y="1157" width="0.0408%" height="15" fill="rgb(241,149,38)" fg:x="244866" fg:w="120"/><text x="83.4079%" y="1167.50"></text></g><g><title>__rust_probestack (120 samples, 0.04%)</title><rect x="83.1579%" y="1141" width="0.0408%" height="15" fill="rgb(219,215,7)" fg:x="244866" fg:w="120"/><text x="83.4079%" y="1151.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (33 samples, 0.01%)</title><rect x="83.2129%" y="1029" width="0.0112%" height="15" fill="rgb(208,120,31)" fg:x="245028" fg:w="33"/><text x="83.4629%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (33 samples, 0.01%)</title><rect x="83.2129%" y="1013" width="0.0112%" height="15" fill="rgb(244,30,8)" fg:x="245028" fg:w="33"/><text x="83.4629%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (33 samples, 0.01%)</title><rect x="83.2129%" y="997" width="0.0112%" height="15" fill="rgb(238,35,44)" fg:x="245028" fg:w="33"/><text x="83.4629%" y="1007.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (100 samples, 0.03%)</title><rect x="83.1987%" y="1045" width="0.0340%" height="15" fill="rgb(243,218,37)" fg:x="244986" fg:w="100"/><text x="83.4487%" y="1055.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (111 samples, 0.04%)</title><rect x="83.1987%" y="1093" width="0.0377%" height="15" fill="rgb(218,169,10)" fg:x="244986" fg:w="111"/><text x="83.4487%" y="1103.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (111 samples, 0.04%)</title><rect x="83.1987%" y="1077" width="0.0377%" height="15" fill="rgb(221,144,10)" fg:x="244986" fg:w="111"/><text x="83.4487%" y="1087.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (111 samples, 0.04%)</title><rect x="83.1987%" y="1061" width="0.0377%" height="15" fill="rgb(226,41,38)" fg:x="244986" fg:w="111"/><text x="83.4487%" y="1071.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (113 samples, 0.04%)</title><rect x="83.1987%" y="1125" width="0.0384%" height="15" fill="rgb(228,3,1)" fg:x="244986" fg:w="113"/><text x="83.4487%" y="1135.50"></text></g><g><title>zenoh::net::routing::queries::declare_peer_queryable (113 samples, 0.04%)</title><rect x="83.1987%" y="1109" width="0.0384%" height="15" fill="rgb(209,129,12)" fg:x="244986" fg:w="113"/><text x="83.4487%" y="1119.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (58 samples, 0.02%)</title><rect x="83.2371%" y="1125" width="0.0197%" height="15" fill="rgb(213,136,33)" fg:x="245099" fg:w="58"/><text x="83.4871%" y="1135.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (58 samples, 0.02%)</title><rect x="83.2371%" y="1109" width="0.0197%" height="15" fill="rgb(209,181,29)" fg:x="245099" fg:w="58"/><text x="83.4871%" y="1119.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_matches_routes (44 samples, 0.01%)</title><rect x="83.2418%" y="1093" width="0.0149%" height="15" fill="rgb(234,173,18)" fg:x="245113" fg:w="44"/><text x="83.4918%" y="1103.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_routes (44 samples, 0.01%)</title><rect x="83.2418%" y="1077" width="0.0149%" height="15" fill="rgb(227,73,47)" fg:x="245113" fg:w="44"/><text x="83.4918%" y="1087.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (38 samples, 0.01%)</title><rect x="83.2438%" y="1061" width="0.0129%" height="15" fill="rgb(234,9,34)" fg:x="245119" fg:w="38"/><text x="83.4938%" y="1071.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (38 samples, 0.01%)</title><rect x="83.2438%" y="1045" width="0.0129%" height="15" fill="rgb(235,172,15)" fg:x="245119" fg:w="38"/><text x="83.4938%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (185 samples, 0.06%)</title><rect x="83.1987%" y="1221" width="0.0628%" height="15" fill="rgb(245,61,2)" fg:x="244986" fg:w="185"/><text x="83.4487%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (185 samples, 0.06%)</title><rect x="83.1987%" y="1205" width="0.0628%" height="15" fill="rgb(238,39,47)" fg:x="244986" fg:w="185"/><text x="83.4487%" y="1215.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (185 samples, 0.06%)</title><rect x="83.1987%" y="1189" width="0.0628%" height="15" fill="rgb(234,37,24)" fg:x="244986" fg:w="185"/><text x="83.4487%" y="1199.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (185 samples, 0.06%)</title><rect x="83.1987%" y="1173" width="0.0628%" height="15" fill="rgb(248,223,24)" fg:x="244986" fg:w="185"/><text x="83.4487%" y="1183.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (185 samples, 0.06%)</title><rect x="83.1987%" y="1157" width="0.0628%" height="15" fill="rgb(223,12,15)" fg:x="244986" fg:w="185"/><text x="83.4487%" y="1167.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (185 samples, 0.06%)</title><rect x="83.1987%" y="1141" width="0.0628%" height="15" fill="rgb(249,6,3)" fg:x="244986" fg:w="185"/><text x="83.4487%" y="1151.50"></text></g><g><title>[unknown] (241,188 samples, 81.91%)</title><rect x="1.3530%" y="1237" width="81.9089%" height="15" fill="rgb(237,105,33)" fg:x="3984" fg:w="241188"/><text x="1.6030%" y="1247.50">[unknown]</text></g><g><title>[unknown] (369 samples, 0.13%)</title><rect x="83.2924%" y="1205" width="0.1253%" height="15" fill="rgb(252,208,35)" fg:x="245262" fg:w="369"/><text x="83.5424%" y="1215.50"></text></g><g><title>[unknown] (303 samples, 0.10%)</title><rect x="83.3148%" y="1189" width="0.1029%" height="15" fill="rgb(215,181,35)" fg:x="245328" fg:w="303"/><text x="83.5648%" y="1199.50"></text></g><g><title>[unknown] (284 samples, 0.10%)</title><rect x="83.3213%" y="1173" width="0.0964%" height="15" fill="rgb(246,212,3)" fg:x="245347" fg:w="284"/><text x="83.5713%" y="1183.50"></text></g><g><title>[unknown] (234 samples, 0.08%)</title><rect x="83.3383%" y="1157" width="0.0795%" height="15" fill="rgb(247,156,24)" fg:x="245397" fg:w="234"/><text x="83.5883%" y="1167.50"></text></g><g><title>[unknown] (167 samples, 0.06%)</title><rect x="83.3610%" y="1141" width="0.0567%" height="15" fill="rgb(248,9,31)" fg:x="245464" fg:w="167"/><text x="83.6110%" y="1151.50"></text></g><g><title>[unknown] (86 samples, 0.03%)</title><rect x="83.3885%" y="1125" width="0.0292%" height="15" fill="rgb(234,26,45)" fg:x="245545" fg:w="86"/><text x="83.6385%" y="1135.50"></text></g><g><title>prctl (77 samples, 0.03%)</title><rect x="83.4554%" y="1125" width="0.0261%" height="15" fill="rgb(249,11,32)" fg:x="245742" fg:w="77"/><text x="83.7054%" y="1135.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="83.4561%" y="1109" width="0.0255%" height="15" fill="rgb(249,162,33)" fg:x="245744" fg:w="75"/><text x="83.7061%" y="1119.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="83.4564%" y="1093" width="0.0251%" height="15" fill="rgb(232,4,32)" fg:x="245745" fg:w="74"/><text x="83.7064%" y="1103.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="83.4564%" y="1077" width="0.0251%" height="15" fill="rgb(212,5,45)" fg:x="245745" fg:w="74"/><text x="83.7064%" y="1087.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="83.4585%" y="1061" width="0.0231%" height="15" fill="rgb(227,95,13)" fg:x="245751" fg:w="68"/><text x="83.7085%" y="1071.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="83.4670%" y="1045" width="0.0146%" height="15" fill="rgb(223,205,10)" fg:x="245776" fg:w="43"/><text x="83.7170%" y="1055.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="83.4714%" y="1029" width="0.0102%" height="15" fill="rgb(222,178,8)" fg:x="245789" fg:w="30"/><text x="83.7214%" y="1039.50"></text></g><g><title>std::io::stdio::set_output_capture (38 samples, 0.01%)</title><rect x="83.4816%" y="1125" width="0.0129%" height="15" fill="rgb(216,13,22)" fg:x="245819" fg:w="38"/><text x="83.7316%" y="1135.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (62 samples, 0.02%)</title><rect x="83.5417%" y="597" width="0.0211%" height="15" fill="rgb(240,167,12)" fg:x="245996" fg:w="62"/><text x="83.7917%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (46 samples, 0.02%)</title><rect x="83.5471%" y="581" width="0.0156%" height="15" fill="rgb(235,68,35)" fg:x="246012" fg:w="46"/><text x="83.7971%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.02%)</title><rect x="83.5471%" y="565" width="0.0156%" height="15" fill="rgb(253,40,27)" fg:x="246012" fg:w="46"/><text x="83.7971%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (126 samples, 0.04%)</title><rect x="83.5203%" y="613" width="0.0428%" height="15" fill="rgb(214,19,28)" fg:x="245933" fg:w="126"/><text x="83.7703%" y="623.50"></text></g><g><title>async_executor::steal (174 samples, 0.06%)</title><rect x="83.5166%" y="629" width="0.0591%" height="15" fill="rgb(210,167,45)" fg:x="245922" fg:w="174"/><text x="83.7666%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (101 samples, 0.03%)</title><rect x="83.5902%" y="613" width="0.0343%" height="15" fill="rgb(232,97,40)" fg:x="246139" fg:w="101"/><text x="83.8402%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (174 samples, 0.06%)</title><rect x="83.5756%" y="629" width="0.0591%" height="15" fill="rgb(250,35,23)" fg:x="246096" fg:w="174"/><text x="83.8256%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (30 samples, 0.01%)</title><rect x="83.6245%" y="613" width="0.0102%" height="15" fill="rgb(248,47,53)" fg:x="246240" fg:w="30"/><text x="83.8745%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (371 samples, 0.13%)</title><rect x="83.5104%" y="645" width="0.1260%" height="15" fill="rgb(226,58,50)" fg:x="245904" fg:w="371"/><text x="83.7604%" y="655.50"></text></g><g><title>async_executor::State::notify (48 samples, 0.02%)</title><rect x="83.6364%" y="645" width="0.0163%" height="15" fill="rgb(217,105,26)" fg:x="246275" fg:w="48"/><text x="83.8864%" y="655.50"></text></g><g><title>core::task::wake::Waker::wake (30 samples, 0.01%)</title><rect x="83.6425%" y="629" width="0.0102%" height="15" fill="rgb(208,64,1)" fg:x="246293" fg:w="30"/><text x="83.8925%" y="639.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (30 samples, 0.01%)</title><rect x="83.6425%" y="613" width="0.0102%" height="15" fill="rgb(214,80,1)" fg:x="246293" fg:w="30"/><text x="83.8925%" y="623.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (30 samples, 0.01%)</title><rect x="83.6425%" y="597" width="0.0102%" height="15" fill="rgb(206,175,26)" fg:x="246293" fg:w="30"/><text x="83.8925%" y="607.50"></text></g><g><title>parking::Unparker::unpark (30 samples, 0.01%)</title><rect x="83.6425%" y="581" width="0.0102%" height="15" fill="rgb(235,156,37)" fg:x="246293" fg:w="30"/><text x="83.8925%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (444 samples, 0.15%)</title><rect x="83.5081%" y="709" width="0.1508%" height="15" fill="rgb(213,100,9)" fg:x="245897" fg:w="444"/><text x="83.7581%" y="719.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (444 samples, 0.15%)</title><rect x="83.5081%" y="693" width="0.1508%" height="15" fill="rgb(241,15,13)" fg:x="245897" fg:w="444"/><text x="83.7581%" y="703.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (442 samples, 0.15%)</title><rect x="83.5087%" y="677" width="0.1501%" height="15" fill="rgb(205,97,43)" fg:x="245899" fg:w="442"/><text x="83.7587%" y="687.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (439 samples, 0.15%)</title><rect x="83.5098%" y="661" width="0.1491%" height="15" fill="rgb(216,106,32)" fg:x="245902" fg:w="439"/><text x="83.7598%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (504 samples, 0.17%)</title><rect x="83.5009%" y="741" width="0.1712%" height="15" fill="rgb(226,200,8)" fg:x="245876" fg:w="504"/><text x="83.7509%" y="751.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (504 samples, 0.17%)</title><rect x="83.5009%" y="725" width="0.1712%" height="15" fill="rgb(244,54,29)" fg:x="245876" fg:w="504"/><text x="83.7509%" y="735.50"></text></g><g><title>async_executor::steal (39 samples, 0.01%)</title><rect x="83.6588%" y="709" width="0.0132%" height="15" fill="rgb(252,169,12)" fg:x="246341" fg:w="39"/><text x="83.9088%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.02%)</title><rect x="83.6948%" y="389" width="0.0197%" height="15" fill="rgb(231,199,11)" fg:x="246447" fg:w="58"/><text x="83.9448%" y="399.50"></text></g><g><title>async_io::Async&lt;T&gt;::read_with::{{closure}} (58 samples, 0.02%)</title><rect x="83.6948%" y="373" width="0.0197%" height="15" fill="rgb(233,191,18)" fg:x="246447" fg:w="58"/><text x="83.9448%" y="383.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::accept::{{closure}}::{{closure}} (38 samples, 0.01%)</title><rect x="83.7016%" y="357" width="0.0129%" height="15" fill="rgb(215,83,47)" fg:x="246467" fg:w="38"/><text x="83.9516%" y="367.50"></text></g><g><title>std::net::tcp::TcpListener::accept (38 samples, 0.01%)</title><rect x="83.7016%" y="341" width="0.0129%" height="15" fill="rgb(251,67,19)" fg:x="246467" fg:w="38"/><text x="83.9516%" y="351.50"></text></g><g><title>std::sys_common::net::TcpListener::accept (37 samples, 0.01%)</title><rect x="83.7020%" y="325" width="0.0126%" height="15" fill="rgb(240,7,20)" fg:x="246468" fg:w="37"/><text x="83.9520%" y="335.50"></text></g><g><title>std::sys::unix::net::Socket::accept (36 samples, 0.01%)</title><rect x="83.7023%" y="309" width="0.0122%" height="15" fill="rgb(210,150,26)" fg:x="246469" fg:w="36"/><text x="83.9523%" y="319.50"></text></g><g><title>std::sys::unix::cvt_r (36 samples, 0.01%)</title><rect x="83.7023%" y="293" width="0.0122%" height="15" fill="rgb(228,75,42)" fg:x="246469" fg:w="36"/><text x="83.9523%" y="303.50"></text></g><g><title>std::sys::unix::net::Socket::accept::{{closure}} (36 samples, 0.01%)</title><rect x="83.7023%" y="277" width="0.0122%" height="15" fill="rgb(237,134,48)" fg:x="246469" fg:w="36"/><text x="83.9523%" y="287.50"></text></g><g><title>accept4 (36 samples, 0.01%)</title><rect x="83.7023%" y="261" width="0.0122%" height="15" fill="rgb(205,80,50)" fg:x="246469" fg:w="36"/><text x="83.9523%" y="271.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="83.7027%" y="245" width="0.0119%" height="15" fill="rgb(217,74,48)" fg:x="246470" fg:w="35"/><text x="83.9527%" y="255.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="83.7027%" y="229" width="0.0119%" height="15" fill="rgb(205,82,50)" fg:x="246470" fg:w="35"/><text x="83.9527%" y="239.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="83.7027%" y="213" width="0.0119%" height="15" fill="rgb(228,1,33)" fg:x="246470" fg:w="35"/><text x="83.9527%" y="223.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="83.7037%" y="197" width="0.0109%" height="15" fill="rgb(214,50,23)" fg:x="246473" fg:w="32"/><text x="83.9537%" y="207.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="83.7040%" y="181" width="0.0105%" height="15" fill="rgb(210,62,9)" fg:x="246474" fg:w="31"/><text x="83.9540%" y="191.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (132 samples, 0.04%)</title><rect x="83.6945%" y="421" width="0.0448%" height="15" fill="rgb(210,104,37)" fg:x="246446" fg:w="132"/><text x="83.9445%" y="431.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::accept::{{closure}} (132 samples, 0.04%)</title><rect x="83.6945%" y="405" width="0.0448%" height="15" fill="rgb(232,104,43)" fg:x="246446" fg:w="132"/><text x="83.9445%" y="415.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (73 samples, 0.02%)</title><rect x="83.7145%" y="389" width="0.0248%" height="15" fill="rgb(244,52,6)" fg:x="246505" fg:w="73"/><text x="83.9645%" y="399.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (70 samples, 0.02%)</title><rect x="83.7156%" y="373" width="0.0238%" height="15" fill="rgb(211,174,52)" fg:x="246508" fg:w="70"/><text x="83.9656%" y="383.50"></text></g><g><title>zenoh_link_tcp::unicast::accept_task::{{closure}}::accept::{{closure}} (138 samples, 0.05%)</title><rect x="83.6938%" y="469" width="0.0469%" height="15" fill="rgb(229,48,4)" fg:x="246444" fg:w="138"/><text x="83.9438%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (136 samples, 0.05%)</title><rect x="83.6945%" y="453" width="0.0462%" height="15" fill="rgb(205,155,16)" fg:x="246446" fg:w="136"/><text x="83.9445%" y="463.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::accept::{{closure}} (136 samples, 0.05%)</title><rect x="83.6945%" y="437" width="0.0462%" height="15" fill="rgb(211,141,53)" fg:x="246446" fg:w="136"/><text x="83.9445%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (141 samples, 0.05%)</title><rect x="83.6938%" y="485" width="0.0479%" height="15" fill="rgb(240,148,11)" fg:x="246444" fg:w="141"/><text x="83.9438%" y="495.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (144 samples, 0.05%)</title><rect x="83.6931%" y="517" width="0.0489%" height="15" fill="rgb(214,45,23)" fg:x="246442" fg:w="144"/><text x="83.9431%" y="527.50"></text></g><g><title>&lt;async_std::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (144 samples, 0.05%)</title><rect x="83.6931%" y="501" width="0.0489%" height="15" fill="rgb(248,74,26)" fg:x="246442" fg:w="144"/><text x="83.9431%" y="511.50"></text></g><g><title>&lt;async_std::future::future::race::Race&lt;L,R&gt; as core::future::future::Future&gt;::poll (146 samples, 0.05%)</title><rect x="83.6931%" y="533" width="0.0496%" height="15" fill="rgb(218,121,16)" fg:x="246442" fg:w="146"/><text x="83.9431%" y="543.50"></text></g><g><title>alloc::fmt::format (37 samples, 0.01%)</title><rect x="83.7638%" y="501" width="0.0126%" height="15" fill="rgb(218,10,47)" fg:x="246650" fg:w="37"/><text x="84.0138%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (36 samples, 0.01%)</title><rect x="83.7641%" y="485" width="0.0122%" height="15" fill="rgb(227,99,14)" fg:x="246651" fg:w="36"/><text x="84.0141%" y="495.50"></text></g><g><title>core::fmt::write (35 samples, 0.01%)</title><rect x="83.7645%" y="469" width="0.0119%" height="15" fill="rgb(229,83,46)" fg:x="246652" fg:w="35"/><text x="84.0145%" y="479.50"></text></g><g><title>zenoh_protocol_core::locators::Locator::new (47 samples, 0.02%)</title><rect x="83.7607%" y="517" width="0.0160%" height="15" fill="rgb(228,25,1)" fg:x="246641" fg:w="47"/><text x="84.0107%" y="527.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}}::{{closure}} (253 samples, 0.09%)</title><rect x="83.6925%" y="581" width="0.0859%" height="15" fill="rgb(252,190,15)" fg:x="246440" fg:w="253"/><text x="83.9425%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (252 samples, 0.09%)</title><rect x="83.6928%" y="565" width="0.0856%" height="15" fill="rgb(213,103,51)" fg:x="246441" fg:w="252"/><text x="83.9428%" y="575.50"></text></g><g><title>zenoh_link_tcp::unicast::accept_task::{{closure}} (252 samples, 0.09%)</title><rect x="83.6928%" y="549" width="0.0856%" height="15" fill="rgb(220,38,44)" fg:x="246441" fg:w="252"/><text x="83.9428%" y="559.50"></text></g><g><title>zenoh_link_tcp::unicast::LinkUnicastTcp::new (67 samples, 0.02%)</title><rect x="83.7556%" y="533" width="0.0228%" height="15" fill="rgb(210,45,26)" fg:x="246626" fg:w="67"/><text x="84.0056%" y="543.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::Edges&lt;E,Ty,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="83.8334%" y="517" width="0.0187%" height="15" fill="rgb(205,95,48)" fg:x="246855" fg:w="55"/><text x="84.0834%" y="527.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (30 samples, 0.01%)</title><rect x="83.8419%" y="501" width="0.0102%" height="15" fill="rgb(225,179,37)" fg:x="246880" fg:w="30"/><text x="84.0919%" y="511.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (30 samples, 0.01%)</title><rect x="83.8419%" y="485" width="0.0102%" height="15" fill="rgb(230,209,3)" fg:x="246880" fg:w="30"/><text x="84.0919%" y="495.50"></text></g><g><title>petgraph::algo::bellman_ford::bellman_ford (137 samples, 0.05%)</title><rect x="83.8069%" y="549" width="0.0465%" height="15" fill="rgb(248,12,46)" fg:x="246777" fg:w="137"/><text x="84.0569%" y="559.50"></text></g><g><title>petgraph::algo::bellman_ford::bellman_ford_initialize_relax (97 samples, 0.03%)</title><rect x="83.8205%" y="533" width="0.0329%" height="15" fill="rgb(234,18,0)" fg:x="246817" fg:w="97"/><text x="84.0705%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (78 samples, 0.03%)</title><rect x="83.8993%" y="325" width="0.0265%" height="15" fill="rgb(238,197,14)" fg:x="247049" fg:w="78"/><text x="84.1493%" y="335.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::get_node::{{closure}} (65 samples, 0.02%)</title><rect x="83.9037%" y="309" width="0.0221%" height="15" fill="rgb(251,162,48)" fg:x="247062" fg:w="65"/><text x="84.1537%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (65 samples, 0.02%)</title><rect x="83.9037%" y="293" width="0.0221%" height="15" fill="rgb(237,73,42)" fg:x="247062" fg:w="65"/><text x="84.1537%" y="303.50"></text></g><g><title>&lt;&amp;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as petgraph::visit::IntoNeighbors&gt;::neighbors (90 samples, 0.03%)</title><rect x="83.8962%" y="405" width="0.0306%" height="15" fill="rgb(211,108,8)" fg:x="247040" fg:w="90"/><text x="84.1462%" y="415.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors (90 samples, 0.03%)</title><rect x="83.8962%" y="389" width="0.0306%" height="15" fill="rgb(213,45,22)" fg:x="247040" fg:w="90"/><text x="84.1462%" y="399.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors_directed (90 samples, 0.03%)</title><rect x="83.8962%" y="373" width="0.0306%" height="15" fill="rgb(252,154,5)" fg:x="247040" fg:w="90"/><text x="84.1462%" y="383.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors_undirected (90 samples, 0.03%)</title><rect x="83.8962%" y="357" width="0.0306%" height="15" fill="rgb(221,79,52)" fg:x="247040" fg:w="90"/><text x="84.1462%" y="367.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::get_node (81 samples, 0.03%)</title><rect x="83.8993%" y="341" width="0.0275%" height="15" fill="rgb(229,220,36)" fg:x="247049" fg:w="81"/><text x="84.1493%" y="351.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::is_visited (867 samples, 0.29%)</title><rect x="83.9268%" y="405" width="0.2944%" height="15" fill="rgb(211,17,16)" fg:x="247130" fg:w="867"/><text x="84.1768%" y="415.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (867 samples, 0.29%)</title><rect x="83.9268%" y="389" width="0.2944%" height="15" fill="rgb(222,55,31)" fg:x="247130" fg:w="867"/><text x="84.1768%" y="399.50"></text></g><g><title>fixedbitset::div_rem (39 samples, 0.01%)</title><rect x="84.2080%" y="373" width="0.0132%" height="15" fill="rgb(221,221,31)" fg:x="247958" fg:w="39"/><text x="84.4580%" y="383.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::visit (349 samples, 0.12%)</title><rect x="84.2212%" y="405" width="0.1185%" height="15" fill="rgb(227,168,26)" fg:x="247997" fg:w="349"/><text x="84.4712%" y="415.50"></text></g><g><title>fixedbitset::FixedBitSet::put (349 samples, 0.12%)</title><rect x="84.2212%" y="389" width="0.1185%" height="15" fill="rgb(224,139,9)" fg:x="247997" fg:w="349"/><text x="84.4712%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (278 samples, 0.09%)</title><rect x="84.4919%" y="389" width="0.0944%" height="15" fill="rgb(254,172,0)" fg:x="248794" fg:w="278"/><text x="84.7419%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (278 samples, 0.09%)</title><rect x="84.4919%" y="373" width="0.0944%" height="15" fill="rgb(235,203,1)" fg:x="248794" fg:w="278"/><text x="84.7419%" y="383.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::Neighbors&lt;E,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (893 samples, 0.30%)</title><rect x="84.3398%" y="405" width="0.3033%" height="15" fill="rgb(216,205,24)" fg:x="248346" fg:w="893"/><text x="84.5898%" y="415.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (167 samples, 0.06%)</title><rect x="84.5863%" y="389" width="0.0567%" height="15" fill="rgb(233,24,6)" fg:x="249072" fg:w="167"/><text x="84.8363%" y="399.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (167 samples, 0.06%)</title><rect x="84.5863%" y="373" width="0.0567%" height="15" fill="rgb(244,110,9)" fg:x="249072" fg:w="167"/><text x="84.8363%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (154 samples, 0.05%)</title><rect x="84.6430%" y="405" width="0.0523%" height="15" fill="rgb(239,222,42)" fg:x="249239" fg:w="154"/><text x="84.8930%" y="415.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="84.7548%" y="277" width="0.0105%" height="15" fill="rgb(218,145,13)" fg:x="249568" fg:w="31"/><text x="85.0048%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (38 samples, 0.01%)</title><rect x="84.7527%" y="389" width="0.0129%" height="15" fill="rgb(207,69,11)" fg:x="249562" fg:w="38"/><text x="85.0027%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.01%)</title><rect x="84.7527%" y="373" width="0.0129%" height="15" fill="rgb(220,223,22)" fg:x="249562" fg:w="38"/><text x="85.0027%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.01%)</title><rect x="84.7531%" y="357" width="0.0126%" height="15" fill="rgb(245,102,5)" fg:x="249563" fg:w="37"/><text x="85.0031%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (37 samples, 0.01%)</title><rect x="84.7531%" y="341" width="0.0126%" height="15" fill="rgb(211,148,2)" fg:x="249563" fg:w="37"/><text x="85.0031%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (37 samples, 0.01%)</title><rect x="84.7531%" y="325" width="0.0126%" height="15" fill="rgb(241,13,44)" fg:x="249563" fg:w="37"/><text x="85.0031%" y="335.50"></text></g><g><title>alloc::alloc::realloc (37 samples, 0.01%)</title><rect x="84.7531%" y="309" width="0.0126%" height="15" fill="rgb(219,137,21)" fg:x="249563" fg:w="37"/><text x="85.0031%" y="319.50"></text></g><g><title>realloc (35 samples, 0.01%)</title><rect x="84.7537%" y="293" width="0.0119%" height="15" fill="rgb(242,206,5)" fg:x="249565" fg:w="35"/><text x="85.0037%" y="303.50"></text></g><g><title>petgraph::visit::traversal::Dfs&lt;N,VM&gt;::next (2,671 samples, 0.91%)</title><rect x="83.8609%" y="421" width="0.9071%" height="15" fill="rgb(217,114,22)" fg:x="246936" fg:w="2671"/><text x="84.1109%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (214 samples, 0.07%)</title><rect x="84.6953%" y="405" width="0.0727%" height="15" fill="rgb(253,206,42)" fg:x="249393" fg:w="214"/><text x="84.9453%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,734 samples, 0.93%)</title><rect x="83.8534%" y="485" width="0.9285%" height="15" fill="rgb(236,102,18)" fg:x="246914" fg:w="2734"/><text x="84.1034%" y="495.50"></text></g><g><title>&lt;petgraph::visit::traversal::WalkerIter&lt;W,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,712 samples, 0.92%)</title><rect x="83.8609%" y="469" width="0.9210%" height="15" fill="rgb(208,59,49)" fg:x="246936" fg:w="2712"/><text x="84.1109%" y="479.50"></text></g><g><title>&lt;&amp;mut W as petgraph::visit::traversal::Walker&lt;C&gt;&gt;::walk_next (2,712 samples, 0.92%)</title><rect x="83.8609%" y="453" width="0.9210%" height="15" fill="rgb(215,194,28)" fg:x="246936" fg:w="2712"/><text x="84.1109%" y="463.50"></text></g><g><title>&lt;petgraph::visit::traversal::Dfs&lt;&lt;G as petgraph::visit::GraphBase&gt;::NodeId,&lt;G as petgraph::visit::Visitable&gt;::Map&gt; as petgraph::visit::traversal::Walker&lt;G&gt;&gt;::walk_next (2,712 samples, 0.92%)</title><rect x="83.8609%" y="437" width="0.9210%" height="15" fill="rgb(243,207,11)" fg:x="246936" fg:w="2712"/><text x="84.1109%" y="447.50"></text></g><g><title>zenoh::net::routing::network::Network::compute_trees (41 samples, 0.01%)</title><rect x="84.7680%" y="421" width="0.0139%" height="15" fill="rgb(254,179,35)" fg:x="249607" fg:w="41"/><text x="85.0180%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (2,787 samples, 0.95%)</title><rect x="83.8534%" y="501" width="0.9465%" height="15" fill="rgb(235,97,3)" fg:x="246914" fg:w="2787"/><text x="84.1034%" y="511.50"></text></g><g><title>zenoh::net::routing::network::Network::compute_trees (53 samples, 0.02%)</title><rect x="84.7819%" y="485" width="0.0180%" height="15" fill="rgb(215,155,33)" fg:x="249648" fg:w="53"/><text x="85.0319%" y="495.50"></text></g><g><title>petgraph::algo::has_path_connecting::{{closure}} (2,807 samples, 0.95%)</title><rect x="83.8534%" y="517" width="0.9533%" height="15" fill="rgb(223,128,12)" fg:x="246914" fg:w="2807"/><text x="84.1034%" y="527.50"></text></g><g><title>zenoh::net::routing::network::Network::compute_trees (3,045 samples, 1.03%)</title><rect x="83.7808%" y="565" width="1.0341%" height="15" fill="rgb(208,157,18)" fg:x="246700" fg:w="3045"/><text x="84.0308%" y="575.50"></text></g><g><title>petgraph::algo::has_path_connecting (2,831 samples, 0.96%)</title><rect x="83.8534%" y="549" width="0.9614%" height="15" fill="rgb(249,70,54)" fg:x="246914" fg:w="2831"/><text x="84.1034%" y="559.50"></text></g><g><title>petgraph::algo::with_dfs (2,831 samples, 0.96%)</title><rect x="83.8534%" y="533" width="0.9614%" height="15" fill="rgb(244,118,24)" fg:x="246914" fg:w="2831"/><text x="84.1034%" y="543.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (33 samples, 0.01%)</title><rect x="84.8468%" y="421" width="0.0112%" height="15" fill="rgb(211,54,0)" fg:x="249839" fg:w="33"/><text x="85.0968%" y="431.50"></text></g><g><title>zenoh::net::routing::pubsub::insert_faces_for_subs::{{closure}} (33 samples, 0.01%)</title><rect x="84.8468%" y="405" width="0.0112%" height="15" fill="rgb(245,137,45)" fg:x="249839" fg:w="33"/><text x="85.0968%" y="415.50"></text></g><g><title>zenoh::net::routing::pubsub::insert_faces_for_subs (75 samples, 0.03%)</title><rect x="84.8431%" y="437" width="0.0255%" height="15" fill="rgb(232,154,31)" fg:x="249828" fg:w="75"/><text x="85.0931%" y="447.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (131 samples, 0.04%)</title><rect x="84.8329%" y="453" width="0.0445%" height="15" fill="rgb(253,6,39)" fg:x="249798" fg:w="131"/><text x="85.0829%" y="463.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (151 samples, 0.05%)</title><rect x="84.8264%" y="469" width="0.0513%" height="15" fill="rgb(234,183,24)" fg:x="249779" fg:w="151"/><text x="85.0764%" y="479.50"></text></g><g><title>zenoh::net::routing::pubsub::pubsub_tree_change (243 samples, 0.08%)</title><rect x="84.8149%" y="565" width="0.0825%" height="15" fill="rgb(252,84,40)" fg:x="249745" fg:w="243"/><text x="85.0649%" y="575.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (243 samples, 0.08%)</title><rect x="84.8149%" y="549" width="0.0825%" height="15" fill="rgb(224,65,2)" fg:x="249745" fg:w="243"/><text x="85.0649%" y="559.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (243 samples, 0.08%)</title><rect x="84.8149%" y="533" width="0.0825%" height="15" fill="rgb(229,38,24)" fg:x="249745" fg:w="243"/><text x="85.0649%" y="543.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (243 samples, 0.08%)</title><rect x="84.8149%" y="517" width="0.0825%" height="15" fill="rgb(218,131,50)" fg:x="249745" fg:w="243"/><text x="85.0649%" y="527.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (233 samples, 0.08%)</title><rect x="84.8183%" y="501" width="0.0791%" height="15" fill="rgb(233,106,18)" fg:x="249755" fg:w="233"/><text x="85.0683%" y="511.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (209 samples, 0.07%)</title><rect x="84.8264%" y="485" width="0.0710%" height="15" fill="rgb(220,216,11)" fg:x="249779" fg:w="209"/><text x="85.0764%" y="495.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (58 samples, 0.02%)</title><rect x="84.8777%" y="469" width="0.0197%" height="15" fill="rgb(251,100,45)" fg:x="249930" fg:w="58"/><text x="85.1277%" y="479.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (58 samples, 0.02%)</title><rect x="84.8777%" y="453" width="0.0197%" height="15" fill="rgb(235,143,32)" fg:x="249930" fg:w="58"/><text x="85.1277%" y="463.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (51 samples, 0.02%)</title><rect x="84.8801%" y="437" width="0.0173%" height="15" fill="rgb(248,124,34)" fg:x="249937" fg:w="51"/><text x="85.1301%" y="447.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (43 samples, 0.01%)</title><rect x="84.8977%" y="501" width="0.0146%" height="15" fill="rgb(225,221,4)" fg:x="249989" fg:w="43"/><text x="85.1477%" y="511.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (33 samples, 0.01%)</title><rect x="84.9011%" y="485" width="0.0112%" height="15" fill="rgb(242,27,43)" fg:x="249999" fg:w="33"/><text x="85.1511%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (69 samples, 0.02%)</title><rect x="84.9123%" y="485" width="0.0234%" height="15" fill="rgb(227,54,8)" fg:x="250032" fg:w="69"/><text x="85.1623%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (62 samples, 0.02%)</title><rect x="84.9147%" y="469" width="0.0211%" height="15" fill="rgb(253,139,49)" fg:x="250039" fg:w="62"/><text x="85.1647%" y="479.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (39 samples, 0.01%)</title><rect x="84.9558%" y="437" width="0.0132%" height="15" fill="rgb(231,26,43)" fg:x="250160" fg:w="39"/><text x="85.2058%" y="447.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (34 samples, 0.01%)</title><rect x="84.9575%" y="421" width="0.0115%" height="15" fill="rgb(207,121,39)" fg:x="250165" fg:w="34"/><text x="85.2075%" y="431.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (38 samples, 0.01%)</title><rect x="84.9772%" y="405" width="0.0129%" height="15" fill="rgb(223,101,35)" fg:x="250223" fg:w="38"/><text x="85.2272%" y="415.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (167 samples, 0.06%)</title><rect x="84.9358%" y="469" width="0.0567%" height="15" fill="rgb(232,87,23)" fg:x="250101" fg:w="167"/><text x="85.1858%" y="479.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (153 samples, 0.05%)</title><rect x="84.9405%" y="453" width="0.0520%" height="15" fill="rgb(225,180,29)" fg:x="250115" fg:w="153"/><text x="85.1905%" y="463.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (61 samples, 0.02%)</title><rect x="84.9718%" y="437" width="0.0207%" height="15" fill="rgb(225,25,17)" fg:x="250207" fg:w="61"/><text x="85.2218%" y="447.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (61 samples, 0.02%)</title><rect x="84.9718%" y="421" width="0.0207%" height="15" fill="rgb(223,8,52)" fg:x="250207" fg:w="61"/><text x="85.2218%" y="431.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (35 samples, 0.01%)</title><rect x="85.0054%" y="421" width="0.0119%" height="15" fill="rgb(246,42,21)" fg:x="250306" fg:w="35"/><text x="85.2554%" y="431.50"></text></g><g><title>zenoh::net::routing::router::Tables::schedule_compute_trees::{{closure}} (3,684 samples, 1.25%)</title><rect x="83.7784%" y="581" width="1.2511%" height="15" fill="rgb(205,64,43)" fg:x="246693" fg:w="3684"/><text x="84.0284%" y="591.50"></text></g><g><title>zenoh::net::routing::queries::queries_tree_change (389 samples, 0.13%)</title><rect x="84.8974%" y="565" width="0.1321%" height="15" fill="rgb(221,160,13)" fg:x="249988" fg:w="389"/><text x="85.1474%" y="575.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (388 samples, 0.13%)</title><rect x="84.8977%" y="549" width="0.1318%" height="15" fill="rgb(239,58,35)" fg:x="249989" fg:w="388"/><text x="85.1477%" y="559.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (388 samples, 0.13%)</title><rect x="84.8977%" y="533" width="0.1318%" height="15" fill="rgb(251,26,40)" fg:x="249989" fg:w="388"/><text x="85.1477%" y="543.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (388 samples, 0.13%)</title><rect x="84.8977%" y="517" width="0.1318%" height="15" fill="rgb(247,0,4)" fg:x="249989" fg:w="388"/><text x="85.1477%" y="527.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (345 samples, 0.12%)</title><rect x="84.9123%" y="501" width="0.1172%" height="15" fill="rgb(218,130,10)" fg:x="250032" fg:w="345"/><text x="85.1623%" y="511.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (276 samples, 0.09%)</title><rect x="84.9358%" y="485" width="0.0937%" height="15" fill="rgb(239,32,7)" fg:x="250101" fg:w="276"/><text x="85.1858%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (109 samples, 0.04%)</title><rect x="84.9925%" y="469" width="0.0370%" height="15" fill="rgb(210,192,24)" fg:x="250268" fg:w="109"/><text x="85.2425%" y="479.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (109 samples, 0.04%)</title><rect x="84.9925%" y="453" width="0.0370%" height="15" fill="rgb(226,212,17)" fg:x="250268" fg:w="109"/><text x="85.2425%" y="463.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (101 samples, 0.03%)</title><rect x="84.9952%" y="437" width="0.0343%" height="15" fill="rgb(219,201,28)" fg:x="250276" fg:w="101"/><text x="85.2452%" y="447.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (31 samples, 0.01%)</title><rect x="85.0190%" y="421" width="0.0105%" height="15" fill="rgb(235,207,41)" fg:x="250346" fg:w="31"/><text x="85.2690%" y="431.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (31 samples, 0.01%)</title><rect x="85.0190%" y="405" width="0.0105%" height="15" fill="rgb(241,95,54)" fg:x="250346" fg:w="31"/><text x="85.2690%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (47 samples, 0.02%)</title><rect x="85.0597%" y="389" width="0.0160%" height="15" fill="rgb(248,12,23)" fg:x="250466" fg:w="47"/><text x="85.3097%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Async&lt;std::net::tcp::TcpStream&gt;&gt; (44 samples, 0.01%)</title><rect x="85.0607%" y="373" width="0.0149%" height="15" fill="rgb(228,173,4)" fg:x="250469" fg:w="44"/><text x="85.3107%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::net::tcp::stream::TcpStream&gt; (51 samples, 0.02%)</title><rect x="85.0594%" y="437" width="0.0173%" height="15" fill="rgb(254,99,5)" fg:x="250465" fg:w="51"/><text x="85.3094%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::Async&lt;std::net::tcp::TcpStream&gt;&gt;&gt; (51 samples, 0.02%)</title><rect x="85.0594%" y="421" width="0.0173%" height="15" fill="rgb(212,184,17)" fg:x="250465" fg:w="51"/><text x="85.3094%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.02%)</title><rect x="85.0594%" y="405" width="0.0173%" height="15" fill="rgb(252,174,1)" fg:x="250465" fg:w="51"/><text x="85.3094%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (64 samples, 0.02%)</title><rect x="85.0577%" y="485" width="0.0217%" height="15" fill="rgb(241,118,51)" fg:x="250460" fg:w="64"/><text x="85.3077%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::ops::function::Fn&lt;(&amp;str,&amp;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;,&amp;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;)&gt;+Output = core::result::Result&lt;core::option::Option&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Sync+core::marker::Send&gt; (62 samples, 0.02%)</title><rect x="85.0584%" y="469" width="0.0211%" height="15" fill="rgb(227,94,47)" fg:x="250462" fg:w="62"/><text x="85.3084%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_tcp::unicast::LinkUnicastTcp&gt; (62 samples, 0.02%)</title><rect x="85.0584%" y="453" width="0.0211%" height="15" fill="rgb(229,104,2)" fg:x="250462" fg:w="62"/><text x="85.3084%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_commons::LinkUnicast&gt; (71 samples, 0.02%)</title><rect x="85.0577%" y="533" width="0.0241%" height="15" fill="rgb(219,28,31)" fg:x="250460" fg:w="71"/><text x="85.3077%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn zenoh_link_commons::LinkUnicastTrait&gt;&gt; (71 samples, 0.02%)</title><rect x="85.0577%" y="517" width="0.0241%" height="15" fill="rgb(233,109,36)" fg:x="250460" fg:w="71"/><text x="85.3077%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.02%)</title><rect x="85.0577%" y="501" width="0.0241%" height="15" fill="rgb(246,88,11)" fg:x="250460" fg:w="71"/><text x="85.3077%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (152 samples, 0.05%)</title><rect x="85.0305%" y="565" width="0.0516%" height="15" fill="rgb(209,212,17)" fg:x="250380" fg:w="152"/><text x="85.2805%" y="575.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}} (151 samples, 0.05%)</title><rect x="85.0309%" y="549" width="0.0513%" height="15" fill="rgb(243,59,29)" fg:x="250381" fg:w="151"/><text x="85.2809%" y="559.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (4,128 samples, 1.40%)</title><rect x="83.6914%" y="693" width="1.4019%" height="15" fill="rgb(244,205,48)" fg:x="246437" fg:w="4128"/><text x="83.9414%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,128 samples, 1.40%)</title><rect x="83.6914%" y="677" width="1.4019%" height="15" fill="rgb(227,30,6)" fg:x="246437" fg:w="4128"/><text x="83.9414%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,128 samples, 1.40%)</title><rect x="83.6914%" y="661" width="1.4019%" height="15" fill="rgb(220,205,48)" fg:x="246437" fg:w="4128"/><text x="83.9414%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,128 samples, 1.40%)</title><rect x="83.6914%" y="645" width="1.4019%" height="15" fill="rgb(250,94,14)" fg:x="246437" fg:w="4128"/><text x="83.9414%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,127 samples, 1.40%)</title><rect x="83.6918%" y="629" width="1.4016%" height="15" fill="rgb(216,119,42)" fg:x="246438" fg:w="4127"/><text x="83.9418%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (4,127 samples, 1.40%)</title><rect x="83.6918%" y="613" width="1.4016%" height="15" fill="rgb(232,155,0)" fg:x="246438" fg:w="4127"/><text x="83.9418%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,127 samples, 1.40%)</title><rect x="83.6918%" y="597" width="1.4016%" height="15" fill="rgb(212,24,32)" fg:x="246438" fg:w="4127"/><text x="83.9418%" y="607.50"></text></g><g><title>zenoh_transport::manager::TransportManager::new::{{closure}} (188 samples, 0.06%)</title><rect x="85.0295%" y="581" width="0.0638%" height="15" fill="rgb(216,69,20)" fg:x="250377" fg:w="188"/><text x="85.2795%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,153 samples, 1.41%)</title><rect x="83.6908%" y="725" width="1.4104%" height="15" fill="rgb(229,73,31)" fg:x="246435" fg:w="4153"/><text x="83.9408%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,153 samples, 1.41%)</title><rect x="83.6908%" y="709" width="1.4104%" height="15" fill="rgb(224,219,20)" fg:x="246435" fg:w="4153"/><text x="83.9408%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (32 samples, 0.01%)</title><rect x="85.1871%" y="389" width="0.0109%" height="15" fill="rgb(215,146,41)" fg:x="250841" fg:w="32"/><text x="85.4371%" y="399.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (637 samples, 0.22%)</title><rect x="85.2115%" y="277" width="0.2163%" height="15" fill="rgb(244,71,31)" fg:x="250913" fg:w="637"/><text x="85.4615%" y="287.50"></text></g><g><title>std::sys_common::net::TcpStream::read (633 samples, 0.21%)</title><rect x="85.2129%" y="261" width="0.2150%" height="15" fill="rgb(224,24,11)" fg:x="250917" fg:w="633"/><text x="85.4629%" y="271.50"></text></g><g><title>std::sys::unix::net::Socket::read (633 samples, 0.21%)</title><rect x="85.2129%" y="245" width="0.2150%" height="15" fill="rgb(229,76,15)" fg:x="250917" fg:w="633"/><text x="85.4629%" y="255.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (633 samples, 0.21%)</title><rect x="85.2129%" y="229" width="0.2150%" height="15" fill="rgb(209,93,2)" fg:x="250917" fg:w="633"/><text x="85.4629%" y="239.50"></text></g><g><title>recv (633 samples, 0.21%)</title><rect x="85.2129%" y="213" width="0.2150%" height="15" fill="rgb(216,200,50)" fg:x="250917" fg:w="633"/><text x="85.4629%" y="223.50"></text></g><g><title>[unknown] (616 samples, 0.21%)</title><rect x="85.2187%" y="197" width="0.2092%" height="15" fill="rgb(211,67,34)" fg:x="250934" fg:w="616"/><text x="85.4687%" y="207.50"></text></g><g><title>[unknown] (607 samples, 0.21%)</title><rect x="85.2217%" y="181" width="0.2061%" height="15" fill="rgb(225,87,47)" fg:x="250943" fg:w="607"/><text x="85.4717%" y="191.50"></text></g><g><title>[unknown] (603 samples, 0.20%)</title><rect x="85.2231%" y="165" width="0.2048%" height="15" fill="rgb(217,185,16)" fg:x="250947" fg:w="603"/><text x="85.4731%" y="175.50"></text></g><g><title>[unknown] (591 samples, 0.20%)</title><rect x="85.2271%" y="149" width="0.2007%" height="15" fill="rgb(205,0,0)" fg:x="250959" fg:w="591"/><text x="85.4771%" y="159.50"></text></g><g><title>[unknown] (509 samples, 0.17%)</title><rect x="85.2550%" y="133" width="0.1729%" height="15" fill="rgb(207,116,45)" fg:x="251041" fg:w="509"/><text x="85.5050%" y="143.50"></text></g><g><title>[unknown] (457 samples, 0.16%)</title><rect x="85.2727%" y="117" width="0.1552%" height="15" fill="rgb(221,156,26)" fg:x="251093" fg:w="457"/><text x="85.5227%" y="127.50"></text></g><g><title>[unknown] (309 samples, 0.10%)</title><rect x="85.3229%" y="101" width="0.1049%" height="15" fill="rgb(213,140,4)" fg:x="251241" fg:w="309"/><text x="85.5729%" y="111.50"></text></g><g><title>[unknown] (221 samples, 0.08%)</title><rect x="85.3528%" y="85" width="0.0751%" height="15" fill="rgb(231,224,15)" fg:x="251329" fg:w="221"/><text x="85.6028%" y="95.50"></text></g><g><title>[unknown] (182 samples, 0.06%)</title><rect x="85.3660%" y="69" width="0.0618%" height="15" fill="rgb(244,76,20)" fg:x="251368" fg:w="182"/><text x="85.6160%" y="79.50"></text></g><g><title>[unknown] (113 samples, 0.04%)</title><rect x="85.3895%" y="53" width="0.0384%" height="15" fill="rgb(238,117,7)" fg:x="251437" fg:w="113"/><text x="85.6395%" y="63.50"></text></g><g><title>[unknown] (106 samples, 0.04%)</title><rect x="85.3919%" y="37" width="0.0360%" height="15" fill="rgb(235,1,10)" fg:x="251444" fg:w="106"/><text x="85.6419%" y="47.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (678 samples, 0.23%)</title><rect x="85.2102%" y="293" width="0.2303%" height="15" fill="rgb(216,165,6)" fg:x="250909" fg:w="678"/><text x="85.4602%" y="303.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (715 samples, 0.24%)</title><rect x="85.2068%" y="341" width="0.2428%" height="15" fill="rgb(246,91,35)" fg:x="250899" fg:w="715"/><text x="85.4568%" y="351.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (713 samples, 0.24%)</title><rect x="85.2074%" y="325" width="0.2421%" height="15" fill="rgb(228,96,24)" fg:x="250901" fg:w="713"/><text x="85.4574%" y="335.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (712 samples, 0.24%)</title><rect x="85.2078%" y="309" width="0.2418%" height="15" fill="rgb(254,217,53)" fg:x="250902" fg:w="712"/><text x="85.4578%" y="319.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (741 samples, 0.25%)</title><rect x="85.1983%" y="357" width="0.2516%" height="15" fill="rgb(209,60,0)" fg:x="250874" fg:w="741"/><text x="85.4483%" y="367.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (743 samples, 0.25%)</title><rect x="85.1979%" y="389" width="0.2523%" height="15" fill="rgb(250,93,26)" fg:x="250873" fg:w="743"/><text x="85.4479%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (743 samples, 0.25%)</title><rect x="85.1979%" y="373" width="0.2523%" height="15" fill="rgb(211,9,40)" fg:x="250873" fg:w="743"/><text x="85.4479%" y="383.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact (73 samples, 0.02%)</title><rect x="85.4503%" y="389" width="0.0248%" height="15" fill="rgb(242,57,20)" fg:x="251616" fg:w="73"/><text x="85.7003%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (58 samples, 0.02%)</title><rect x="85.4554%" y="373" width="0.0197%" height="15" fill="rgb(248,85,48)" fg:x="251631" fg:w="58"/><text x="85.7054%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (57 samples, 0.02%)</title><rect x="85.4557%" y="357" width="0.0194%" height="15" fill="rgb(212,117,2)" fg:x="251632" fg:w="57"/><text x="85.7057%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.02%)</title><rect x="85.4557%" y="341" width="0.0194%" height="15" fill="rgb(243,19,3)" fg:x="251632" fg:w="57"/><text x="85.7057%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.02%)</title><rect x="85.4557%" y="325" width="0.0194%" height="15" fill="rgb(232,217,24)" fg:x="251632" fg:w="57"/><text x="85.7057%" y="335.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.02%)</title><rect x="85.4557%" y="309" width="0.0194%" height="15" fill="rgb(224,175,40)" fg:x="251632" fg:w="57"/><text x="85.7057%" y="319.50"></text></g><g><title>malloc (48 samples, 0.02%)</title><rect x="85.4588%" y="293" width="0.0163%" height="15" fill="rgb(212,162,32)" fg:x="251641" fg:w="48"/><text x="85.7088%" y="303.50"></text></g><g><title>&lt;async_std::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (893 samples, 0.30%)</title><rect x="85.1748%" y="437" width="0.3033%" height="15" fill="rgb(215,9,4)" fg:x="250805" fg:w="893"/><text x="85.4248%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (887 samples, 0.30%)</title><rect x="85.1769%" y="421" width="0.3012%" height="15" fill="rgb(242,42,7)" fg:x="250811" fg:w="887"/><text x="85.4269%" y="431.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}}::read::{{closure}} (876 samples, 0.30%)</title><rect x="85.1806%" y="405" width="0.2975%" height="15" fill="rgb(242,184,45)" fg:x="250822" fg:w="876"/><text x="85.4306%" y="415.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (899 samples, 0.31%)</title><rect x="85.1748%" y="453" width="0.3053%" height="15" fill="rgb(228,111,51)" fg:x="250805" fg:w="899"/><text x="85.4248%" y="463.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (921 samples, 0.31%)</title><rect x="85.1681%" y="485" width="0.3128%" height="15" fill="rgb(236,147,17)" fg:x="250785" fg:w="921"/><text x="85.4181%" y="495.50"></text></g><g><title>&lt;async_std::future::future::race::Race&lt;L,R&gt; as core::future::future::Future&gt;::poll (907 samples, 0.31%)</title><rect x="85.1728%" y="469" width="0.3080%" height="15" fill="rgb(210,75,22)" fg:x="250799" fg:w="907"/><text x="85.4228%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.01%)</title><rect x="85.5572%" y="357" width="0.0102%" height="15" fill="rgb(217,159,45)" fg:x="251931" fg:w="30"/><text x="85.8072%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.01%)</title><rect x="85.5572%" y="341" width="0.0102%" height="15" fill="rgb(245,165,53)" fg:x="251931" fg:w="30"/><text x="85.8072%" y="351.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.01%)</title><rect x="85.5572%" y="325" width="0.0102%" height="15" fill="rgb(251,190,50)" fg:x="251931" fg:w="30"/><text x="85.8072%" y="335.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (83 samples, 0.03%)</title><rect x="85.5396%" y="437" width="0.0282%" height="15" fill="rgb(208,203,29)" fg:x="251879" fg:w="83"/><text x="85.7896%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (31 samples, 0.01%)</title><rect x="85.5572%" y="421" width="0.0105%" height="15" fill="rgb(207,209,35)" fg:x="251931" fg:w="31"/><text x="85.8072%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.01%)</title><rect x="85.5572%" y="405" width="0.0105%" height="15" fill="rgb(230,144,49)" fg:x="251931" fg:w="31"/><text x="85.8072%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.01%)</title><rect x="85.5572%" y="389" width="0.0105%" height="15" fill="rgb(229,31,6)" fg:x="251931" fg:w="31"/><text x="85.8072%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.01%)</title><rect x="85.5572%" y="373" width="0.0105%" height="15" fill="rgb(251,129,24)" fg:x="251931" fg:w="31"/><text x="85.8072%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (171 samples, 0.06%)</title><rect x="85.5131%" y="453" width="0.0581%" height="15" fill="rgb(235,105,15)" fg:x="251801" fg:w="171"/><text x="85.7631%" y="463.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="85.5759%" y="325" width="0.0109%" height="15" fill="rgb(216,52,43)" fg:x="251986" fg:w="32"/><text x="85.8259%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (42 samples, 0.01%)</title><rect x="85.5749%" y="437" width="0.0143%" height="15" fill="rgb(238,144,41)" fg:x="251983" fg:w="42"/><text x="85.8249%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 0.01%)</title><rect x="85.5749%" y="421" width="0.0143%" height="15" fill="rgb(243,63,9)" fg:x="251983" fg:w="42"/><text x="85.8249%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (42 samples, 0.01%)</title><rect x="85.5749%" y="405" width="0.0143%" height="15" fill="rgb(246,208,1)" fg:x="251983" fg:w="42"/><text x="85.8249%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (41 samples, 0.01%)</title><rect x="85.5752%" y="389" width="0.0139%" height="15" fill="rgb(233,182,18)" fg:x="251984" fg:w="41"/><text x="85.8252%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (41 samples, 0.01%)</title><rect x="85.5752%" y="373" width="0.0139%" height="15" fill="rgb(242,224,8)" fg:x="251984" fg:w="41"/><text x="85.8252%" y="383.50"></text></g><g><title>alloc::alloc::realloc (41 samples, 0.01%)</title><rect x="85.5752%" y="357" width="0.0139%" height="15" fill="rgb(243,54,37)" fg:x="251984" fg:w="41"/><text x="85.8252%" y="367.50"></text></g><g><title>realloc (41 samples, 0.01%)</title><rect x="85.5752%" y="341" width="0.0139%" height="15" fill="rgb(233,192,12)" fg:x="251984" fg:w="41"/><text x="85.8252%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (66 samples, 0.02%)</title><rect x="85.5742%" y="453" width="0.0224%" height="15" fill="rgb(251,192,53)" fg:x="251981" fg:w="66"/><text x="85.8242%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (312 samples, 0.11%)</title><rect x="85.4995%" y="469" width="0.1060%" height="15" fill="rgb(246,141,26)" fg:x="251761" fg:w="312"/><text x="85.7495%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (360 samples, 0.12%)</title><rect x="85.4849%" y="485" width="0.1223%" height="15" fill="rgb(239,195,19)" fg:x="251718" fg:w="360"/><text x="85.7349%" y="495.50"></text></g><g><title>&lt;zenoh_sync::signal::Signal as core::clone::Clone&gt;::clone (31 samples, 0.01%)</title><rect x="85.6099%" y="485" width="0.0105%" height="15" fill="rgb(241,16,39)" fg:x="252086" fg:w="31"/><text x="85.8599%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.01%)</title><rect x="85.6099%" y="469" width="0.0105%" height="15" fill="rgb(223,13,53)" fg:x="252086" fg:w="31"/><text x="85.8599%" y="479.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (96 samples, 0.03%)</title><rect x="85.6218%" y="485" width="0.0326%" height="15" fill="rgb(214,227,0)" fg:x="252121" fg:w="96"/><text x="85.8718%" y="495.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (96 samples, 0.03%)</title><rect x="85.6218%" y="469" width="0.0326%" height="15" fill="rgb(228,103,26)" fg:x="252121" fg:w="96"/><text x="85.8718%" y="479.50"></text></g><g><title>async_std::utils::timer_after (77 samples, 0.03%)</title><rect x="85.6282%" y="453" width="0.0261%" height="15" fill="rgb(254,177,53)" fg:x="252140" fg:w="77"/><text x="85.8782%" y="463.50"></text></g><g><title>async_io::Timer::after (73 samples, 0.02%)</title><rect x="85.6296%" y="437" width="0.0248%" height="15" fill="rgb(208,201,34)" fg:x="252144" fg:w="73"/><text x="85.8796%" y="447.50"></text></g><g><title>std::time::Instant::now (59 samples, 0.02%)</title><rect x="85.6343%" y="421" width="0.0200%" height="15" fill="rgb(212,39,5)" fg:x="252158" fg:w="59"/><text x="85.8843%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (54 samples, 0.02%)</title><rect x="85.6360%" y="405" width="0.0183%" height="15" fill="rgb(246,117,3)" fg:x="252163" fg:w="54"/><text x="85.8860%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (54 samples, 0.02%)</title><rect x="85.6360%" y="389" width="0.0183%" height="15" fill="rgb(244,118,39)" fg:x="252163" fg:w="54"/><text x="85.8860%" y="399.50"></text></g><g><title>clock_gettime (54 samples, 0.02%)</title><rect x="85.6360%" y="373" width="0.0183%" height="15" fill="rgb(241,64,10)" fg:x="252163" fg:w="54"/><text x="85.8860%" y="383.50"></text></g><g><title>zenoh_buffers::traits::reader::Reader::can_read (35 samples, 0.01%)</title><rect x="85.6595%" y="485" width="0.0119%" height="15" fill="rgb(229,39,44)" fg:x="252232" fg:w="35"/><text x="85.9095%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::remaining (35 samples, 0.01%)</title><rect x="85.6595%" y="469" width="0.0119%" height="15" fill="rgb(230,226,3)" fg:x="252232" fg:w="35"/><text x="85.9095%" y="479.50"></text></g><g><title>async_std::task::task::Task::new (33 samples, 0.01%)</title><rect x="85.7009%" y="373" width="0.0112%" height="15" fill="rgb(222,13,42)" fg:x="252354" fg:w="33"/><text x="85.9509%" y="383.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (33 samples, 0.01%)</title><rect x="85.7009%" y="357" width="0.0112%" height="15" fill="rgb(247,180,54)" fg:x="252354" fg:w="33"/><text x="85.9509%" y="367.50"></text></g><g><title>async_std::task::builder::Builder::build (47 samples, 0.02%)</title><rect x="85.7002%" y="389" width="0.0160%" height="15" fill="rgb(205,96,16)" fg:x="252352" fg:w="47"/><text x="85.9502%" y="399.50"></text></g><g><title>async_global_executor::executor::block_on (55 samples, 0.02%)</title><rect x="85.7457%" y="261" width="0.0187%" height="15" fill="rgb(205,100,21)" fg:x="252486" fg:w="55"/><text x="85.9957%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (43 samples, 0.01%)</title><rect x="85.7498%" y="245" width="0.0146%" height="15" fill="rgb(248,51,4)" fg:x="252498" fg:w="43"/><text x="85.9998%" y="255.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (66 samples, 0.02%)</title><rect x="85.7430%" y="277" width="0.0224%" height="15" fill="rgb(217,197,30)" fg:x="252478" fg:w="66"/><text x="85.9930%" y="287.50"></text></g><g><title>async_std::task::block_on::block_on (226 samples, 0.08%)</title><rect x="85.6890%" y="421" width="0.0768%" height="15" fill="rgb(240,179,40)" fg:x="252319" fg:w="226"/><text x="85.9390%" y="431.50"></text></g><g><title>async_std::task::builder::Builder::blocking (224 samples, 0.08%)</title><rect x="85.6897%" y="405" width="0.0761%" height="15" fill="rgb(212,185,35)" fg:x="252321" fg:w="224"/><text x="85.9397%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (146 samples, 0.05%)</title><rect x="85.7162%" y="389" width="0.0496%" height="15" fill="rgb(251,222,31)" fg:x="252399" fg:w="146"/><text x="85.9662%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (133 samples, 0.05%)</title><rect x="85.7206%" y="373" width="0.0452%" height="15" fill="rgb(208,140,36)" fg:x="252412" fg:w="133"/><text x="85.9706%" y="383.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (113 samples, 0.04%)</title><rect x="85.7274%" y="357" width="0.0384%" height="15" fill="rgb(220,148,1)" fg:x="252432" fg:w="113"/><text x="85.9774%" y="367.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (110 samples, 0.04%)</title><rect x="85.7284%" y="341" width="0.0374%" height="15" fill="rgb(254,4,28)" fg:x="252435" fg:w="110"/><text x="85.9784%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (102 samples, 0.03%)</title><rect x="85.7311%" y="325" width="0.0346%" height="15" fill="rgb(222,185,44)" fg:x="252443" fg:w="102"/><text x="85.9811%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (90 samples, 0.03%)</title><rect x="85.7352%" y="309" width="0.0306%" height="15" fill="rgb(215,74,39)" fg:x="252455" fg:w="90"/><text x="85.9852%" y="319.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (67 samples, 0.02%)</title><rect x="85.7430%" y="293" width="0.0228%" height="15" fill="rgb(247,86,4)" fg:x="252478" fg:w="67"/><text x="85.9930%" y="303.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (266 samples, 0.09%)</title><rect x="85.6788%" y="437" width="0.0903%" height="15" fill="rgb(231,105,32)" fg:x="252289" fg:w="266"/><text x="85.9288%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (310 samples, 0.11%)</title><rect x="85.6713%" y="469" width="0.1053%" height="15" fill="rgb(222,65,35)" fg:x="252267" fg:w="310"/><text x="85.9213%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (288 samples, 0.10%)</title><rect x="85.6788%" y="453" width="0.0978%" height="15" fill="rgb(218,145,35)" fg:x="252289" fg:w="288"/><text x="85.9288%" y="463.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (361 samples, 0.12%)</title><rect x="85.6713%" y="485" width="0.1226%" height="15" fill="rgb(208,7,15)" fg:x="252267" fg:w="361"/><text x="85.9213%" y="495.50"></text></g><g><title>[libc.so.6] (57 samples, 0.02%)</title><rect x="85.7997%" y="341" width="0.0194%" height="15" fill="rgb(209,83,13)" fg:x="252645" fg:w="57"/><text x="86.0497%" y="351.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="85.8055%" y="325" width="0.0136%" height="15" fill="rgb(218,3,10)" fg:x="252662" fg:w="40"/><text x="86.0555%" y="335.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="85.8055%" y="309" width="0.0136%" height="15" fill="rgb(211,219,4)" fg:x="252662" fg:w="40"/><text x="86.0555%" y="319.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="85.8055%" y="293" width="0.0136%" height="15" fill="rgb(228,194,12)" fg:x="252662" fg:w="40"/><text x="86.0555%" y="303.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="85.8058%" y="277" width="0.0132%" height="15" fill="rgb(210,175,7)" fg:x="252663" fg:w="39"/><text x="86.0558%" y="287.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="85.8075%" y="261" width="0.0115%" height="15" fill="rgb(243,132,6)" fg:x="252668" fg:w="34"/><text x="86.0575%" y="271.50"></text></g><g><title>[libc.so.6] (37 samples, 0.01%)</title><rect x="85.8194%" y="325" width="0.0126%" height="15" fill="rgb(207,72,18)" fg:x="252703" fg:w="37"/><text x="86.0694%" y="335.50"></text></g><g><title>[libc.so.6] (37 samples, 0.01%)</title><rect x="85.8194%" y="309" width="0.0126%" height="15" fill="rgb(236,1,18)" fg:x="252703" fg:w="37"/><text x="86.0694%" y="319.50"></text></g><g><title>zenoh_collections::object_pool::RecyclingObjectPool&lt;T,F&gt;::new (104 samples, 0.04%)</title><rect x="85.7973%" y="485" width="0.0353%" height="15" fill="rgb(227,0,18)" fg:x="252638" fg:w="104"/><text x="86.0473%" y="495.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}}::{{closure}} (97 samples, 0.03%)</title><rect x="85.7997%" y="469" width="0.0329%" height="15" fill="rgb(247,37,5)" fg:x="252645" fg:w="97"/><text x="86.0497%" y="479.50"></text></g><g><title>alloc::vec::from_elem (97 samples, 0.03%)</title><rect x="85.7997%" y="453" width="0.0329%" height="15" fill="rgb(237,179,24)" fg:x="252645" fg:w="97"/><text x="86.0497%" y="463.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (97 samples, 0.03%)</title><rect x="85.7997%" y="437" width="0.0329%" height="15" fill="rgb(226,53,20)" fg:x="252645" fg:w="97"/><text x="86.0497%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (97 samples, 0.03%)</title><rect x="85.7997%" y="421" width="0.0329%" height="15" fill="rgb(247,75,7)" fg:x="252645" fg:w="97"/><text x="86.0497%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (97 samples, 0.03%)</title><rect x="85.7997%" y="405" width="0.0329%" height="15" fill="rgb(233,96,12)" fg:x="252645" fg:w="97"/><text x="86.0497%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (97 samples, 0.03%)</title><rect x="85.7997%" y="389" width="0.0329%" height="15" fill="rgb(224,125,0)" fg:x="252645" fg:w="97"/><text x="86.0497%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (97 samples, 0.03%)</title><rect x="85.7997%" y="373" width="0.0329%" height="15" fill="rgb(224,92,25)" fg:x="252645" fg:w="97"/><text x="86.0497%" y="383.50"></text></g><g><title>alloc::alloc::alloc_zeroed (97 samples, 0.03%)</title><rect x="85.7997%" y="357" width="0.0329%" height="15" fill="rgb(224,42,24)" fg:x="252645" fg:w="97"/><text x="86.0497%" y="367.50"></text></g><g><title>__libc_calloc (40 samples, 0.01%)</title><rect x="85.8191%" y="341" width="0.0136%" height="15" fill="rgb(234,132,49)" fg:x="252702" fg:w="40"/><text x="86.0691%" y="351.50"></text></g><g><title>zenoh_collections::object_pool::RecyclingObjectPool&lt;T,F&gt;::try_take (33 samples, 0.01%)</title><rect x="85.8327%" y="485" width="0.0112%" height="15" fill="rgb(248,100,35)" fg:x="252742" fg:w="33"/><text x="86.0827%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol::proto::msg::ZenohMessage&gt;&gt; (34 samples, 0.01%)</title><rect x="85.8935%" y="453" width="0.0115%" height="15" fill="rgb(239,94,40)" fg:x="252921" fg:w="34"/><text x="86.1435%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="85.9257%" y="437" width="0.0109%" height="15" fill="rgb(235,139,28)" fg:x="253016" fg:w="32"/><text x="86.1757%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.01%)</title><rect x="85.9257%" y="421" width="0.0109%" height="15" fill="rgb(217,144,7)" fg:x="253016" fg:w="32"/><text x="86.1757%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.01%)</title><rect x="85.9257%" y="405" width="0.0109%" height="15" fill="rgb(227,55,4)" fg:x="253016" fg:w="32"/><text x="86.1757%" y="415.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (2,418 samples, 0.82%)</title><rect x="85.1531%" y="565" width="0.8212%" height="15" fill="rgb(252,82,54)" fg:x="250741" fg:w="2418"/><text x="85.4031%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,418 samples, 0.82%)</title><rect x="85.1531%" y="549" width="0.8212%" height="15" fill="rgb(245,172,4)" fg:x="250741" fg:w="2418"/><text x="85.4031%" y="559.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (2,418 samples, 0.82%)</title><rect x="85.1531%" y="533" width="0.8212%" height="15" fill="rgb(207,26,27)" fg:x="250741" fg:w="2418"/><text x="85.4031%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,418 samples, 0.82%)</title><rect x="85.1531%" y="517" width="0.8212%" height="15" fill="rgb(252,98,18)" fg:x="250741" fg:w="2418"/><text x="85.4031%" y="527.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (2,418 samples, 0.82%)</title><rect x="85.1531%" y="501" width="0.8212%" height="15" fill="rgb(244,8,26)" fg:x="250741" fg:w="2418"/><text x="85.4031%" y="511.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (358 samples, 0.12%)</title><rect x="85.8527%" y="485" width="0.1216%" height="15" fill="rgb(237,173,45)" fg:x="252801" fg:w="358"/><text x="86.1027%" y="495.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (275 samples, 0.09%)</title><rect x="85.8809%" y="469" width="0.0934%" height="15" fill="rgb(208,213,49)" fg:x="252884" fg:w="275"/><text x="86.1309%" y="479.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (164 samples, 0.06%)</title><rect x="85.9186%" y="453" width="0.0557%" height="15" fill="rgb(212,122,37)" fg:x="252995" fg:w="164"/><text x="86.1686%" y="463.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (78 samples, 0.03%)</title><rect x="85.9930%" y="469" width="0.0265%" height="15" fill="rgb(213,80,17)" fg:x="253214" fg:w="78"/><text x="86.2430%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (78 samples, 0.03%)</title><rect x="85.9930%" y="453" width="0.0265%" height="15" fill="rgb(206,210,43)" fg:x="253214" fg:w="78"/><text x="86.2430%" y="463.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (75 samples, 0.03%)</title><rect x="85.9940%" y="437" width="0.0255%" height="15" fill="rgb(229,214,3)" fg:x="253217" fg:w="75"/><text x="86.2440%" y="447.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (159 samples, 0.05%)</title><rect x="85.9831%" y="485" width="0.0540%" height="15" fill="rgb(235,213,29)" fg:x="253185" fg:w="159"/><text x="86.2331%" y="495.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (34 samples, 0.01%)</title><rect x="86.0453%" y="469" width="0.0115%" height="15" fill="rgb(248,135,26)" fg:x="253368" fg:w="34"/><text x="86.2953%" y="479.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (31 samples, 0.01%)</title><rect x="86.0463%" y="453" width="0.0105%" height="15" fill="rgb(242,188,12)" fg:x="253371" fg:w="31"/><text x="86.2963%" y="463.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (50 samples, 0.02%)</title><rect x="86.0453%" y="485" width="0.0170%" height="15" fill="rgb(245,38,12)" fg:x="253368" fg:w="50"/><text x="86.2953%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (237 samples, 0.08%)</title><rect x="85.9828%" y="501" width="0.0805%" height="15" fill="rgb(218,42,13)" fg:x="253184" fg:w="237"/><text x="86.2328%" y="511.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (251 samples, 0.09%)</title><rect x="85.9790%" y="549" width="0.0852%" height="15" fill="rgb(238,132,49)" fg:x="253173" fg:w="251"/><text x="86.2290%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (248 samples, 0.08%)</title><rect x="85.9801%" y="533" width="0.0842%" height="15" fill="rgb(209,196,19)" fg:x="253176" fg:w="248"/><text x="86.2301%" y="543.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (248 samples, 0.08%)</title><rect x="85.9801%" y="517" width="0.0842%" height="15" fill="rgb(244,131,22)" fg:x="253176" fg:w="248"/><text x="86.2301%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,711 samples, 0.92%)</title><rect x="85.1511%" y="581" width="0.9207%" height="15" fill="rgb(223,18,34)" fg:x="250735" fg:w="2711"/><text x="85.4011%" y="591.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (287 samples, 0.10%)</title><rect x="85.9743%" y="565" width="0.0975%" height="15" fill="rgb(252,124,54)" fg:x="253159" fg:w="287"/><text x="86.2243%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (32 samples, 0.01%)</title><rect x="86.0870%" y="533" width="0.0109%" height="15" fill="rgb(229,106,42)" fg:x="253491" fg:w="32"/><text x="86.3370%" y="543.50"></text></g><g><title>core::mem::replace (32 samples, 0.01%)</title><rect x="86.0870%" y="517" width="0.0109%" height="15" fill="rgb(221,129,1)" fg:x="253491" fg:w="32"/><text x="86.3370%" y="527.50"></text></g><g><title>core::ptr::read (32 samples, 0.01%)</title><rect x="86.0870%" y="501" width="0.0109%" height="15" fill="rgb(229,74,15)" fg:x="253491" fg:w="32"/><text x="86.3370%" y="511.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (94 samples, 0.03%)</title><rect x="86.0806%" y="549" width="0.0319%" height="15" fill="rgb(210,206,50)" fg:x="253472" fg:w="94"/><text x="86.3306%" y="559.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (224 samples, 0.08%)</title><rect x="86.0741%" y="565" width="0.0761%" height="15" fill="rgb(251,114,31)" fg:x="253453" fg:w="224"/><text x="86.3241%" y="575.50"></text></g><g><title>event_listener::Event::listen (79 samples, 0.03%)</title><rect x="86.1234%" y="549" width="0.0268%" height="15" fill="rgb(215,225,28)" fg:x="253598" fg:w="79"/><text x="86.3734%" y="559.50"></text></g><g><title>event_listener::List::insert (31 samples, 0.01%)</title><rect x="86.1397%" y="533" width="0.0105%" height="15" fill="rgb(237,109,14)" fg:x="253646" fg:w="31"/><text x="86.3897%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (30 samples, 0.01%)</title><rect x="86.2025%" y="405" width="0.0102%" height="15" fill="rgb(230,13,37)" fg:x="253831" fg:w="30"/><text x="86.4525%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (87 samples, 0.03%)</title><rect x="86.1855%" y="421" width="0.0295%" height="15" fill="rgb(231,40,28)" fg:x="253781" fg:w="87"/><text x="86.4355%" y="431.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (46 samples, 0.02%)</title><rect x="86.2151%" y="421" width="0.0156%" height="15" fill="rgb(231,202,18)" fg:x="253868" fg:w="46"/><text x="86.4651%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (45 samples, 0.02%)</title><rect x="86.2154%" y="405" width="0.0153%" height="15" fill="rgb(225,33,18)" fg:x="253869" fg:w="45"/><text x="86.4654%" y="415.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (36 samples, 0.01%)</title><rect x="86.2185%" y="389" width="0.0122%" height="15" fill="rgb(223,64,47)" fg:x="253878" fg:w="36"/><text x="86.4685%" y="399.50"></text></g><g><title>std::time::Instant::now (31 samples, 0.01%)</title><rect x="86.2324%" y="421" width="0.0105%" height="15" fill="rgb(234,114,13)" fg:x="253919" fg:w="31"/><text x="86.4824%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (30 samples, 0.01%)</title><rect x="86.2327%" y="405" width="0.0102%" height="15" fill="rgb(248,56,40)" fg:x="253920" fg:w="30"/><text x="86.4827%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (30 samples, 0.01%)</title><rect x="86.2327%" y="389" width="0.0102%" height="15" fill="rgb(221,194,21)" fg:x="253920" fg:w="30"/><text x="86.4827%" y="399.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (200 samples, 0.07%)</title><rect x="86.1753%" y="453" width="0.0679%" height="15" fill="rgb(242,108,46)" fg:x="253751" fg:w="200"/><text x="86.4253%" y="463.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (189 samples, 0.06%)</title><rect x="86.1791%" y="437" width="0.0642%" height="15" fill="rgb(220,106,10)" fg:x="253762" fg:w="189"/><text x="86.4291%" y="447.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (258 samples, 0.09%)</title><rect x="86.1753%" y="469" width="0.0876%" height="15" fill="rgb(211,88,4)" fg:x="253751" fg:w="258"/><text x="86.4253%" y="479.50"></text></g><g><title>std::io::error::Error::new (39 samples, 0.01%)</title><rect x="86.2497%" y="453" width="0.0132%" height="15" fill="rgb(214,95,34)" fg:x="253970" fg:w="39"/><text x="86.4997%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (34 samples, 0.01%)</title><rect x="86.2514%" y="437" width="0.0115%" height="15" fill="rgb(250,160,33)" fg:x="253975" fg:w="34"/><text x="86.5014%" y="447.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (34 samples, 0.01%)</title><rect x="86.2514%" y="421" width="0.0115%" height="15" fill="rgb(225,29,10)" fg:x="253975" fg:w="34"/><text x="86.5014%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (284 samples, 0.10%)</title><rect x="86.1740%" y="501" width="0.0964%" height="15" fill="rgb(224,28,30)" fg:x="253747" fg:w="284"/><text x="86.4240%" y="511.50"></text></g><g><title>async_std::io::timeout::timeout::{{closure}} (284 samples, 0.10%)</title><rect x="86.1740%" y="485" width="0.0964%" height="15" fill="rgb(231,77,4)" fg:x="253747" fg:w="284"/><text x="86.4240%" y="495.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (327 samples, 0.11%)</title><rect x="86.1679%" y="517" width="0.1111%" height="15" fill="rgb(209,63,21)" fg:x="253729" fg:w="327"/><text x="86.4179%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="86.3288%" y="325" width="0.0180%" height="15" fill="rgb(226,22,11)" fg:x="254203" fg:w="53"/><text x="86.5788%" y="335.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (53 samples, 0.02%)</title><rect x="86.3288%" y="309" width="0.0180%" height="15" fill="rgb(216,82,30)" fg:x="254203" fg:w="53"/><text x="86.5788%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (61 samples, 0.02%)</title><rect x="86.3268%" y="357" width="0.0207%" height="15" fill="rgb(246,227,38)" fg:x="254197" fg:w="61"/><text x="86.5768%" y="367.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (60 samples, 0.02%)</title><rect x="86.3271%" y="341" width="0.0204%" height="15" fill="rgb(251,203,53)" fg:x="254198" fg:w="60"/><text x="86.5771%" y="351.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (99 samples, 0.03%)</title><rect x="86.3180%" y="405" width="0.0336%" height="15" fill="rgb(254,101,1)" fg:x="254171" fg:w="99"/><text x="86.5680%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (99 samples, 0.03%)</title><rect x="86.3180%" y="389" width="0.0336%" height="15" fill="rgb(241,180,5)" fg:x="254171" fg:w="99"/><text x="86.5680%" y="399.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (93 samples, 0.03%)</title><rect x="86.3200%" y="373" width="0.0316%" height="15" fill="rgb(218,168,4)" fg:x="254177" fg:w="93"/><text x="86.5700%" y="383.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link (35 samples, 0.01%)</title><rect x="86.3516%" y="405" width="0.0119%" height="15" fill="rgb(224,223,32)" fg:x="254270" fg:w="35"/><text x="86.6016%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (34 samples, 0.01%)</title><rect x="86.3519%" y="389" width="0.0115%" height="15" fill="rgb(236,106,22)" fg:x="254271" fg:w="34"/><text x="86.6019%" y="399.50"></text></g><g><title>alloc::alloc::box_free (32 samples, 0.01%)</title><rect x="86.3645%" y="373" width="0.0109%" height="15" fill="rgb(206,121,5)" fg:x="254308" fg:w="32"/><text x="86.6145%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.01%)</title><rect x="86.3645%" y="357" width="0.0109%" height="15" fill="rgb(233,87,28)" fg:x="254308" fg:w="32"/><text x="86.6145%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.01%)</title><rect x="86.3645%" y="341" width="0.0109%" height="15" fill="rgb(236,137,17)" fg:x="254308" fg:w="32"/><text x="86.6145%" y="351.50"></text></g><g><title>cfree (32 samples, 0.01%)</title><rect x="86.3645%" y="325" width="0.0109%" height="15" fill="rgb(209,183,38)" fg:x="254308" fg:w="32"/><text x="86.6145%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;zenoh_link_commons::LinkUnicast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Send&gt;&gt;&gt; (33 samples, 0.01%)</title><rect x="86.3645%" y="405" width="0.0112%" height="15" fill="rgb(206,162,44)" fg:x="254308" fg:w="33"/><text x="86.6145%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;zenoh_link_commons::LinkUnicast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Send&gt;&gt; (33 samples, 0.01%)</title><rect x="86.3645%" y="389" width="0.0112%" height="15" fill="rgb(237,70,39)" fg:x="254308" fg:w="33"/><text x="86.6145%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (323 samples, 0.11%)</title><rect x="86.3000%" y="437" width="0.1097%" height="15" fill="rgb(212,176,5)" fg:x="254118" fg:w="323"/><text x="86.5500%" y="447.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (308 samples, 0.10%)</title><rect x="86.3051%" y="421" width="0.1046%" height="15" fill="rgb(232,95,16)" fg:x="254133" fg:w="308"/><text x="86.5551%" y="431.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::new_link_manager_unicast (71 samples, 0.02%)</title><rect x="86.3855%" y="405" width="0.0241%" height="15" fill="rgb(219,115,35)" fg:x="254370" fg:w="71"/><text x="86.6355%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (353 samples, 0.12%)</title><rect x="86.2925%" y="469" width="0.1199%" height="15" fill="rgb(251,67,27)" fg:x="254096" fg:w="353"/><text x="86.5425%" y="479.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (347 samples, 0.12%)</title><rect x="86.2945%" y="453" width="0.1178%" height="15" fill="rgb(222,95,40)" fg:x="254102" fg:w="347"/><text x="86.5445%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (419 samples, 0.14%)</title><rect x="86.2799%" y="501" width="0.1423%" height="15" fill="rgb(250,35,16)" fg:x="254059" fg:w="419"/><text x="86.5299%" y="511.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (415 samples, 0.14%)</title><rect x="86.2813%" y="485" width="0.1409%" height="15" fill="rgb(224,86,44)" fg:x="254063" fg:w="415"/><text x="86.5313%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (852 samples, 0.29%)</title><rect x="86.1668%" y="533" width="0.2893%" height="15" fill="rgb(237,53,53)" fg:x="253726" fg:w="852"/><text x="86.4168%" y="543.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (522 samples, 0.18%)</title><rect x="86.2789%" y="517" width="0.1773%" height="15" fill="rgb(208,171,33)" fg:x="254056" fg:w="522"/><text x="86.5289%" y="527.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_transport_unicast (61 samples, 0.02%)</title><rect x="86.4355%" y="501" width="0.0207%" height="15" fill="rgb(222,64,27)" fg:x="254517" fg:w="61"/><text x="86.6855%" y="511.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (949 samples, 0.32%)</title><rect x="86.1509%" y="549" width="0.3223%" height="15" fill="rgb(221,121,35)" fg:x="253679" fg:w="949"/><text x="86.4009%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (967 samples, 0.33%)</title><rect x="86.1502%" y="565" width="0.3284%" height="15" fill="rgb(228,137,42)" fg:x="253677" fg:w="967"/><text x="86.4002%" y="575.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (1,203 samples, 0.41%)</title><rect x="86.0717%" y="581" width="0.4085%" height="15" fill="rgb(227,54,21)" fg:x="253446" fg:w="1203"/><text x="86.3217%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,929 samples, 1.33%)</title><rect x="85.1470%" y="677" width="1.3343%" height="15" fill="rgb(240,168,33)" fg:x="250723" fg:w="3929"/><text x="85.3970%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,929 samples, 1.33%)</title><rect x="85.1470%" y="661" width="1.3343%" height="15" fill="rgb(243,159,6)" fg:x="250723" fg:w="3929"/><text x="85.3970%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,929 samples, 1.33%)</title><rect x="85.1470%" y="645" width="1.3343%" height="15" fill="rgb(205,211,41)" fg:x="250723" fg:w="3929"/><text x="85.3970%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,927 samples, 1.33%)</title><rect x="85.1477%" y="629" width="1.3336%" height="15" fill="rgb(253,30,1)" fg:x="250725" fg:w="3927"/><text x="85.3977%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,919 samples, 1.33%)</title><rect x="85.1504%" y="613" width="1.3309%" height="15" fill="rgb(226,80,18)" fg:x="250733" fg:w="3919"/><text x="85.4004%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,918 samples, 1.33%)</title><rect x="85.1507%" y="597" width="1.3306%" height="15" fill="rgb(253,156,46)" fg:x="250734" fg:w="3918"/><text x="85.4007%" y="607.50"></text></g><g><title>[libc.so.6] (144 samples, 0.05%)</title><rect x="86.4813%" y="677" width="0.0489%" height="15" fill="rgb(248,87,27)" fg:x="254652" fg:w="144"/><text x="86.7313%" y="687.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="86.5306%" y="661" width="0.0122%" height="15" fill="rgb(227,122,2)" fg:x="254797" fg:w="36"/><text x="86.7806%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (36 samples, 0.01%)</title><rect x="86.5306%" y="645" width="0.0122%" height="15" fill="rgb(229,94,39)" fg:x="254797" fg:w="36"/><text x="86.7806%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (47 samples, 0.02%)</title><rect x="86.5306%" y="677" width="0.0160%" height="15" fill="rgb(225,173,31)" fg:x="254797" fg:w="47"/><text x="86.7806%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (60 samples, 0.02%)</title><rect x="86.5655%" y="581" width="0.0204%" height="15" fill="rgb(239,176,30)" fg:x="254900" fg:w="60"/><text x="86.8155%" y="591.50"></text></g><g><title>core::mem::drop (63 samples, 0.02%)</title><rect x="86.5655%" y="629" width="0.0214%" height="15" fill="rgb(212,104,21)" fg:x="254900" fg:w="63"/><text x="86.8155%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (63 samples, 0.02%)</title><rect x="86.5655%" y="613" width="0.0214%" height="15" fill="rgb(240,209,40)" fg:x="254900" fg:w="63"/><text x="86.8155%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (63 samples, 0.02%)</title><rect x="86.5655%" y="597" width="0.0214%" height="15" fill="rgb(234,195,5)" fg:x="254900" fg:w="63"/><text x="86.8155%" y="607.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (37 samples, 0.01%)</title><rect x="86.5886%" y="629" width="0.0126%" height="15" fill="rgb(238,213,1)" fg:x="254968" fg:w="37"/><text x="86.8386%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (37 samples, 0.01%)</title><rect x="86.5886%" y="613" width="0.0126%" height="15" fill="rgb(235,182,54)" fg:x="254968" fg:w="37"/><text x="86.8386%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (37 samples, 0.01%)</title><rect x="86.5886%" y="597" width="0.0126%" height="15" fill="rgb(229,50,46)" fg:x="254968" fg:w="37"/><text x="86.8386%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (95 samples, 0.03%)</title><rect x="86.6090%" y="565" width="0.0323%" height="15" fill="rgb(219,145,13)" fg:x="255028" fg:w="95"/><text x="86.8590%" y="575.50"></text></g><g><title>syscall (94 samples, 0.03%)</title><rect x="86.6093%" y="549" width="0.0319%" height="15" fill="rgb(220,226,10)" fg:x="255029" fg:w="94"/><text x="86.8593%" y="559.50"></text></g><g><title>[unknown] (94 samples, 0.03%)</title><rect x="86.6093%" y="533" width="0.0319%" height="15" fill="rgb(248,47,30)" fg:x="255029" fg:w="94"/><text x="86.8593%" y="543.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="86.6097%" y="517" width="0.0316%" height="15" fill="rgb(231,209,44)" fg:x="255030" fg:w="93"/><text x="86.8597%" y="527.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="86.6097%" y="501" width="0.0316%" height="15" fill="rgb(209,80,30)" fg:x="255030" fg:w="93"/><text x="86.8597%" y="511.50"></text></g><g><title>[unknown] (91 samples, 0.03%)</title><rect x="86.6104%" y="485" width="0.0309%" height="15" fill="rgb(232,9,14)" fg:x="255032" fg:w="91"/><text x="86.8604%" y="495.50"></text></g><g><title>[unknown] (84 samples, 0.03%)</title><rect x="86.6127%" y="469" width="0.0285%" height="15" fill="rgb(243,91,43)" fg:x="255039" fg:w="84"/><text x="86.8627%" y="479.50"></text></g><g><title>[unknown] (72 samples, 0.02%)</title><rect x="86.6168%" y="453" width="0.0245%" height="15" fill="rgb(231,90,52)" fg:x="255051" fg:w="72"/><text x="86.8668%" y="463.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="86.6182%" y="437" width="0.0231%" height="15" fill="rgb(253,192,44)" fg:x="255055" fg:w="68"/><text x="86.8682%" y="447.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="86.6209%" y="421" width="0.0204%" height="15" fill="rgb(241,66,31)" fg:x="255063" fg:w="60"/><text x="86.8709%" y="431.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="86.6277%" y="405" width="0.0136%" height="15" fill="rgb(235,81,37)" fg:x="255083" fg:w="40"/><text x="86.8777%" y="415.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (455 samples, 0.15%)</title><rect x="86.5465%" y="661" width="0.1545%" height="15" fill="rgb(223,221,9)" fg:x="254844" fg:w="455"/><text x="86.7965%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (455 samples, 0.15%)</title><rect x="86.5465%" y="645" width="0.1545%" height="15" fill="rgb(242,180,7)" fg:x="254844" fg:w="455"/><text x="86.7965%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (290 samples, 0.10%)</title><rect x="86.6025%" y="629" width="0.0985%" height="15" fill="rgb(243,78,19)" fg:x="255009" fg:w="290"/><text x="86.8525%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (284 samples, 0.10%)</title><rect x="86.6046%" y="613" width="0.0964%" height="15" fill="rgb(233,23,17)" fg:x="255015" fg:w="284"/><text x="86.8546%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (284 samples, 0.10%)</title><rect x="86.6046%" y="597" width="0.0964%" height="15" fill="rgb(252,122,45)" fg:x="255015" fg:w="284"/><text x="86.8546%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (283 samples, 0.10%)</title><rect x="86.6049%" y="581" width="0.0961%" height="15" fill="rgb(247,108,20)" fg:x="255016" fg:w="283"/><text x="86.8549%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (176 samples, 0.06%)</title><rect x="86.6413%" y="565" width="0.0598%" height="15" fill="rgb(235,84,21)" fg:x="255123" fg:w="176"/><text x="86.8913%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (686 samples, 0.23%)</title><rect x="86.5465%" y="677" width="0.2330%" height="15" fill="rgb(247,129,10)" fg:x="254844" fg:w="686"/><text x="86.7965%" y="687.50"></text></g><g><title>syscall (224 samples, 0.08%)</title><rect x="86.7034%" y="661" width="0.0761%" height="15" fill="rgb(208,173,14)" fg:x="255306" fg:w="224"/><text x="86.9534%" y="671.50"></text></g><g><title>[unknown] (222 samples, 0.08%)</title><rect x="86.7041%" y="645" width="0.0754%" height="15" fill="rgb(236,31,38)" fg:x="255308" fg:w="222"/><text x="86.9541%" y="655.50"></text></g><g><title>[unknown] (222 samples, 0.08%)</title><rect x="86.7041%" y="629" width="0.0754%" height="15" fill="rgb(232,65,17)" fg:x="255308" fg:w="222"/><text x="86.9541%" y="639.50"></text></g><g><title>[unknown] (221 samples, 0.08%)</title><rect x="86.7044%" y="613" width="0.0751%" height="15" fill="rgb(224,45,49)" fg:x="255309" fg:w="221"/><text x="86.9544%" y="623.50"></text></g><g><title>[unknown] (213 samples, 0.07%)</title><rect x="86.7071%" y="597" width="0.0723%" height="15" fill="rgb(225,2,53)" fg:x="255317" fg:w="213"/><text x="86.9571%" y="607.50"></text></g><g><title>[unknown] (192 samples, 0.07%)</title><rect x="86.7143%" y="581" width="0.0652%" height="15" fill="rgb(248,210,53)" fg:x="255338" fg:w="192"/><text x="86.9643%" y="591.50"></text></g><g><title>[unknown] (148 samples, 0.05%)</title><rect x="86.7292%" y="565" width="0.0503%" height="15" fill="rgb(211,1,30)" fg:x="255382" fg:w="148"/><text x="86.9792%" y="575.50"></text></g><g><title>[unknown] (94 samples, 0.03%)</title><rect x="86.7476%" y="549" width="0.0319%" height="15" fill="rgb(224,96,15)" fg:x="255436" fg:w="94"/><text x="86.9976%" y="559.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="86.7564%" y="533" width="0.0231%" height="15" fill="rgb(252,45,11)" fg:x="255462" fg:w="68"/><text x="87.0064%" y="543.50"></text></g><g><title>[unknown] (44 samples, 0.01%)</title><rect x="86.7645%" y="517" width="0.0149%" height="15" fill="rgb(220,125,38)" fg:x="255486" fg:w="44"/><text x="87.0145%" y="527.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="86.7795%" y="661" width="0.0122%" height="15" fill="rgb(243,161,33)" fg:x="255530" fg:w="36"/><text x="87.0295%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (36 samples, 0.01%)</title><rect x="86.7795%" y="645" width="0.0122%" height="15" fill="rgb(248,197,34)" fg:x="255530" fg:w="36"/><text x="87.0295%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (50 samples, 0.02%)</title><rect x="86.7795%" y="677" width="0.0170%" height="15" fill="rgb(228,165,23)" fg:x="255530" fg:w="50"/><text x="87.0295%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt; (33 samples, 0.01%)</title><rect x="86.7975%" y="677" width="0.0112%" height="15" fill="rgb(236,94,38)" fg:x="255583" fg:w="33"/><text x="87.0475%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,031 samples, 1.71%)</title><rect x="85.1012%" y="709" width="1.7086%" height="15" fill="rgb(220,13,23)" fg:x="250588" fg:w="5031"/><text x="85.3512%" y="719.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,023 samples, 1.71%)</title><rect x="85.1039%" y="693" width="1.7058%" height="15" fill="rgb(234,26,39)" fg:x="250596" fg:w="5023"/><text x="85.3539%" y="703.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,040 samples, 1.71%)</title><rect x="85.1012%" y="725" width="1.7116%" height="15" fill="rgb(205,117,44)" fg:x="250588" fg:w="5040"/><text x="85.3512%" y="735.50"></text></g><g><title>[libc.so.6] (120 samples, 0.04%)</title><rect x="86.8223%" y="565" width="0.0408%" height="15" fill="rgb(250,42,2)" fg:x="255656" fg:w="120"/><text x="87.0723%" y="575.50"></text></g><g><title>__lll_lock_wait_private (53 samples, 0.02%)</title><rect x="86.8450%" y="549" width="0.0180%" height="15" fill="rgb(223,83,14)" fg:x="255723" fg:w="53"/><text x="87.0950%" y="559.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="86.8450%" y="533" width="0.0180%" height="15" fill="rgb(241,147,50)" fg:x="255723" fg:w="53"/><text x="87.0950%" y="543.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="86.8454%" y="517" width="0.0177%" height="15" fill="rgb(218,90,6)" fg:x="255724" fg:w="52"/><text x="87.0954%" y="527.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="86.8454%" y="501" width="0.0177%" height="15" fill="rgb(210,191,5)" fg:x="255724" fg:w="52"/><text x="87.0954%" y="511.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="86.8454%" y="485" width="0.0177%" height="15" fill="rgb(225,139,19)" fg:x="255724" fg:w="52"/><text x="87.0954%" y="495.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="86.8454%" y="469" width="0.0177%" height="15" fill="rgb(210,1,33)" fg:x="255724" fg:w="52"/><text x="87.0954%" y="479.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="86.8457%" y="453" width="0.0173%" height="15" fill="rgb(213,50,3)" fg:x="255725" fg:w="51"/><text x="87.0957%" y="463.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="86.8457%" y="437" width="0.0173%" height="15" fill="rgb(234,227,4)" fg:x="255725" fg:w="51"/><text x="87.0957%" y="447.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="86.8471%" y="421" width="0.0160%" height="15" fill="rgb(246,63,5)" fg:x="255729" fg:w="47"/><text x="87.0971%" y="431.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="86.8498%" y="405" width="0.0132%" height="15" fill="rgb(245,136,27)" fg:x="255737" fg:w="39"/><text x="87.0998%" y="415.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="86.8518%" y="389" width="0.0112%" height="15" fill="rgb(247,199,27)" fg:x="255743" fg:w="33"/><text x="87.1018%" y="399.50"></text></g><g><title>alloc::alloc::box_free (148 samples, 0.05%)</title><rect x="86.8165%" y="629" width="0.0503%" height="15" fill="rgb(252,158,49)" fg:x="255639" fg:w="148"/><text x="87.0665%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (148 samples, 0.05%)</title><rect x="86.8165%" y="613" width="0.0503%" height="15" fill="rgb(254,73,1)" fg:x="255639" fg:w="148"/><text x="87.0665%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (148 samples, 0.05%)</title><rect x="86.8165%" y="597" width="0.0503%" height="15" fill="rgb(248,93,19)" fg:x="255639" fg:w="148"/><text x="87.0665%" y="607.50"></text></g><g><title>cfree (148 samples, 0.05%)</title><rect x="86.8165%" y="581" width="0.0503%" height="15" fill="rgb(206,67,5)" fg:x="255639" fg:w="148"/><text x="87.0665%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt;&gt; (151 samples, 0.05%)</title><rect x="86.8162%" y="661" width="0.0513%" height="15" fill="rgb(209,210,4)" fg:x="255638" fg:w="151"/><text x="87.0662%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt; (151 samples, 0.05%)</title><rect x="86.8162%" y="645" width="0.0513%" height="15" fill="rgb(214,185,36)" fg:x="255638" fg:w="151"/><text x="87.0662%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (168 samples, 0.06%)</title><rect x="86.8128%" y="725" width="0.0571%" height="15" fill="rgb(233,191,26)" fg:x="255628" fg:w="168"/><text x="87.0628%" y="735.50"></text></g><g><title>async_task::utils::abort_on_panic (168 samples, 0.06%)</title><rect x="86.8128%" y="709" width="0.0571%" height="15" fill="rgb(248,94,17)" fg:x="255628" fg:w="168"/><text x="87.0628%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future::{{closure}} (168 samples, 0.06%)</title><rect x="86.8128%" y="693" width="0.0571%" height="15" fill="rgb(250,64,4)" fg:x="255628" fg:w="168"/><text x="87.0628%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (168 samples, 0.06%)</title><rect x="86.8128%" y="677" width="0.0571%" height="15" fill="rgb(218,41,53)" fg:x="255628" fg:w="168"/><text x="87.0628%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 0.02%)</title><rect x="86.8715%" y="693" width="0.0177%" height="15" fill="rgb(251,176,28)" fg:x="255801" fg:w="52"/><text x="87.1215%" y="703.50"></text></g><g><title>cfree (52 samples, 0.02%)</title><rect x="86.8715%" y="677" width="0.0177%" height="15" fill="rgb(247,22,9)" fg:x="255801" fg:w="52"/><text x="87.1215%" y="687.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="86.8759%" y="661" width="0.0132%" height="15" fill="rgb(218,201,14)" fg:x="255814" fg:w="39"/><text x="87.1259%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (64 samples, 0.02%)</title><rect x="86.8698%" y="725" width="0.0217%" height="15" fill="rgb(218,94,10)" fg:x="255796" fg:w="64"/><text x="87.1198%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (59 samples, 0.02%)</title><rect x="86.8715%" y="709" width="0.0200%" height="15" fill="rgb(222,183,52)" fg:x="255801" fg:w="59"/><text x="87.1215%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,481 samples, 3.22%)</title><rect x="83.6765%" y="741" width="3.2198%" height="15" fill="rgb(242,140,25)" fg:x="246393" fg:w="9481"/><text x="83.9265%" y="751.50">asy..</text></g><g><title>async_task::runnable::Runnable::run (107 samples, 0.04%)</title><rect x="86.8963%" y="741" width="0.0363%" height="15" fill="rgb(235,197,38)" fg:x="255874" fg:w="107"/><text x="87.1463%" y="751.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,133 samples, 3.44%)</title><rect x="83.4982%" y="789" width="3.4412%" height="15" fill="rgb(237,136,15)" fg:x="245868" fg:w="10133"/><text x="83.7482%" y="799.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,133 samples, 3.44%)</title><rect x="83.4982%" y="773" width="3.4412%" height="15" fill="rgb(223,44,49)" fg:x="245868" fg:w="10133"/><text x="83.7482%" y="783.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (10,133 samples, 3.44%)</title><rect x="83.4982%" y="757" width="3.4412%" height="15" fill="rgb(227,71,15)" fg:x="245868" fg:w="10133"/><text x="83.7482%" y="767.50">asy..</text></g><g><title>async_executor::Executor::run::{{closure}} (10,157 samples, 3.45%)</title><rect x="83.4982%" y="805" width="3.4494%" height="15" fill="rgb(225,153,20)" fg:x="245868" fg:w="10157"/><text x="83.7482%" y="815.50">asy..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (33 samples, 0.01%)</title><rect x="86.9523%" y="597" width="0.0112%" height="15" fill="rgb(210,190,26)" fg:x="256039" fg:w="33"/><text x="87.2023%" y="607.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (53 samples, 0.02%)</title><rect x="86.9517%" y="613" width="0.0180%" height="15" fill="rgb(223,147,5)" fg:x="256037" fg:w="53"/><text x="87.2017%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.02%)</title><rect x="86.9510%" y="709" width="0.0214%" height="15" fill="rgb(207,14,23)" fg:x="256035" fg:w="63"/><text x="87.2010%" y="719.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (63 samples, 0.02%)</title><rect x="86.9510%" y="693" width="0.0214%" height="15" fill="rgb(211,195,53)" fg:x="256035" fg:w="63"/><text x="87.2010%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.02%)</title><rect x="86.9510%" y="677" width="0.0214%" height="15" fill="rgb(237,75,46)" fg:x="256035" fg:w="63"/><text x="87.2010%" y="687.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (63 samples, 0.02%)</title><rect x="86.9510%" y="661" width="0.0214%" height="15" fill="rgb(254,55,14)" fg:x="256035" fg:w="63"/><text x="87.2010%" y="671.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (62 samples, 0.02%)</title><rect x="86.9513%" y="645" width="0.0211%" height="15" fill="rgb(230,185,30)" fg:x="256036" fg:w="62"/><text x="87.2013%" y="655.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (61 samples, 0.02%)</title><rect x="86.9517%" y="629" width="0.0207%" height="15" fill="rgb(220,14,11)" fg:x="256037" fg:w="61"/><text x="87.2017%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (64 samples, 0.02%)</title><rect x="86.9510%" y="725" width="0.0217%" height="15" fill="rgb(215,169,44)" fg:x="256035" fg:w="64"/><text x="87.2010%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (93 samples, 0.03%)</title><rect x="86.9503%" y="741" width="0.0316%" height="15" fill="rgb(253,203,20)" fg:x="256033" fg:w="93"/><text x="87.2003%" y="751.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (94 samples, 0.03%)</title><rect x="86.9503%" y="757" width="0.0319%" height="15" fill="rgb(229,225,17)" fg:x="256033" fg:w="94"/><text x="87.2003%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (135 samples, 0.05%)</title><rect x="86.9503%" y="789" width="0.0458%" height="15" fill="rgb(236,76,26)" fg:x="256033" fg:w="135"/><text x="87.2003%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (135 samples, 0.05%)</title><rect x="86.9503%" y="773" width="0.0458%" height="15" fill="rgb(234,15,30)" fg:x="256033" fg:w="135"/><text x="87.2003%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,302 samples, 3.50%)</title><rect x="83.4982%" y="821" width="3.4986%" height="15" fill="rgb(211,113,48)" fg:x="245868" fg:w="10302"/><text x="83.7482%" y="831.50">&lt;co..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (145 samples, 0.05%)</title><rect x="86.9476%" y="805" width="0.0492%" height="15" fill="rgb(221,31,36)" fg:x="256025" fg:w="145"/><text x="87.1976%" y="815.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (10,304 samples, 3.50%)</title><rect x="83.4979%" y="837" width="3.4993%" height="15" fill="rgb(215,118,52)" fg:x="245867" fg:w="10304"/><text x="83.7479%" y="847.50">&lt;fu..</text></g><g><title>async_io::reactor::ReactorLock::react (46 samples, 0.02%)</title><rect x="86.9995%" y="837" width="0.0156%" height="15" fill="rgb(241,151,27)" fg:x="256178" fg:w="46"/><text x="87.2495%" y="847.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (10,379 samples, 3.52%)</title><rect x="83.4975%" y="869" width="3.5248%" height="15" fill="rgb(253,51,3)" fg:x="245866" fg:w="10379"/><text x="83.7475%" y="879.50">asy..</text></g><g><title>async_io::driver::block_on (10,378 samples, 3.52%)</title><rect x="83.4979%" y="853" width="3.5244%" height="15" fill="rgb(216,201,24)" fg:x="245867" fg:w="10378"/><text x="83.7479%" y="863.50">asy..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (10,383 samples, 3.53%)</title><rect x="83.4972%" y="901" width="3.5261%" height="15" fill="rgb(231,107,4)" fg:x="245865" fg:w="10383"/><text x="83.7472%" y="911.50">asy..</text></g><g><title>async_global_executor::reactor::block_on (10,383 samples, 3.53%)</title><rect x="83.4972%" y="885" width="3.5261%" height="15" fill="rgb(243,97,54)" fg:x="245865" fg:w="10383"/><text x="83.7472%" y="895.50">asy..</text></g><g><title>std::panic::catch_unwind (10,394 samples, 3.53%)</title><rect x="83.4969%" y="997" width="3.5299%" height="15" fill="rgb(221,32,51)" fg:x="245864" fg:w="10394"/><text x="83.7469%" y="1007.50">std..</text></g><g><title>std::panicking::try (10,394 samples, 3.53%)</title><rect x="83.4969%" y="981" width="3.5299%" height="15" fill="rgb(218,171,35)" fg:x="245864" fg:w="10394"/><text x="83.7469%" y="991.50">std..</text></g><g><title>std::panicking::try::do_call (10,394 samples, 3.53%)</title><rect x="83.4969%" y="965" width="3.5299%" height="15" fill="rgb(214,20,53)" fg:x="245864" fg:w="10394"/><text x="83.7469%" y="975.50">std..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (10,394 samples, 3.53%)</title><rect x="83.4969%" y="949" width="3.5299%" height="15" fill="rgb(239,9,52)" fg:x="245864" fg:w="10394"/><text x="83.7469%" y="959.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10,394 samples, 3.53%)</title><rect x="83.4969%" y="933" width="3.5299%" height="15" fill="rgb(215,114,45)" fg:x="245864" fg:w="10394"/><text x="83.7469%" y="943.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10,394 samples, 3.53%)</title><rect x="83.4969%" y="917" width="3.5299%" height="15" fill="rgb(208,118,9)" fg:x="245864" fg:w="10394"/><text x="83.7469%" y="927.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (10,403 samples, 3.53%)</title><rect x="83.4952%" y="1029" width="3.5329%" height="15" fill="rgb(235,7,39)" fg:x="245859" fg:w="10403"/><text x="83.7452%" y="1039.50">cor..</text></g><g><title>async_global_executor::threading::thread_main_loop (10,403 samples, 3.53%)</title><rect x="83.4952%" y="1013" width="3.5329%" height="15" fill="rgb(243,225,15)" fg:x="245859" fg:w="10403"/><text x="83.7452%" y="1023.50">asy..</text></g><g><title>async_std::task::builder::Builder::build (34 samples, 0.01%)</title><rect x="87.0335%" y="981" width="0.0115%" height="15" fill="rgb(225,216,18)" fg:x="256278" fg:w="34"/><text x="87.2835%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (676 samples, 0.23%)</title><rect x="87.4485%" y="597" width="0.2296%" height="15" fill="rgb(233,36,38)" fg:x="257500" fg:w="676"/><text x="87.6985%" y="607.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (542 samples, 0.18%)</title><rect x="87.4940%" y="581" width="0.1841%" height="15" fill="rgb(239,88,23)" fg:x="257634" fg:w="542"/><text x="87.7440%" y="591.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (164 samples, 0.06%)</title><rect x="87.6224%" y="565" width="0.0557%" height="15" fill="rgb(219,181,35)" fg:x="258012" fg:w="164"/><text x="87.8724%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (164 samples, 0.06%)</title><rect x="87.6224%" y="549" width="0.0557%" height="15" fill="rgb(215,18,46)" fg:x="258012" fg:w="164"/><text x="87.8724%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (101 samples, 0.03%)</title><rect x="87.9396%" y="485" width="0.0343%" height="15" fill="rgb(241,38,11)" fg:x="258946" fg:w="101"/><text x="88.1896%" y="495.50"></text></g><g><title>core::mem::replace (101 samples, 0.03%)</title><rect x="87.9396%" y="469" width="0.0343%" height="15" fill="rgb(248,169,45)" fg:x="258946" fg:w="101"/><text x="88.1896%" y="479.50"></text></g><g><title>core::ptr::read (100 samples, 0.03%)</title><rect x="87.9399%" y="453" width="0.0340%" height="15" fill="rgb(239,50,49)" fg:x="258947" fg:w="100"/><text x="88.1899%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (281 samples, 0.10%)</title><rect x="87.9824%" y="469" width="0.0954%" height="15" fill="rgb(231,96,31)" fg:x="259072" fg:w="281"/><text x="88.2324%" y="479.50"></text></g><g><title>core::mem::replace (281 samples, 0.10%)</title><rect x="87.9824%" y="453" width="0.0954%" height="15" fill="rgb(224,193,37)" fg:x="259072" fg:w="281"/><text x="88.2324%" y="463.50"></text></g><g><title>core::ptr::read (262 samples, 0.09%)</title><rect x="87.9888%" y="437" width="0.0890%" height="15" fill="rgb(227,153,50)" fg:x="259091" fg:w="262"/><text x="88.2388%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (319 samples, 0.11%)</title><rect x="87.9739%" y="485" width="0.1083%" height="15" fill="rgb(249,228,3)" fg:x="259047" fg:w="319"/><text x="88.2239%" y="495.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (102 samples, 0.03%)</title><rect x="88.0822%" y="469" width="0.0346%" height="15" fill="rgb(219,164,43)" fg:x="259366" fg:w="102"/><text x="88.3322%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (130 samples, 0.04%)</title><rect x="88.0822%" y="485" width="0.0441%" height="15" fill="rgb(216,45,41)" fg:x="259366" fg:w="130"/><text x="88.3322%" y="495.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (227 samples, 0.08%)</title><rect x="88.1274%" y="437" width="0.0771%" height="15" fill="rgb(210,226,51)" fg:x="259499" fg:w="227"/><text x="88.3774%" y="447.50"></text></g><g><title>core::task::wake::Waker::will_wake (230 samples, 0.08%)</title><rect x="88.1267%" y="485" width="0.0781%" height="15" fill="rgb(209,117,49)" fg:x="259497" fg:w="230"/><text x="88.3767%" y="495.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (230 samples, 0.08%)</title><rect x="88.1267%" y="469" width="0.0781%" height="15" fill="rgb(206,196,24)" fg:x="259497" fg:w="230"/><text x="88.3767%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (228 samples, 0.08%)</title><rect x="88.1274%" y="453" width="0.0774%" height="15" fill="rgb(253,218,3)" fg:x="259499" fg:w="228"/><text x="88.3774%" y="463.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,523 samples, 0.52%)</title><rect x="87.8516%" y="501" width="0.5172%" height="15" fill="rgb(252,166,2)" fg:x="258687" fg:w="1523"/><text x="88.1016%" y="511.50"></text></g><g><title>event_listener::Inner::lock (483 samples, 0.16%)</title><rect x="88.2048%" y="485" width="0.1640%" height="15" fill="rgb(236,218,26)" fg:x="259727" fg:w="483"/><text x="88.4548%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (477 samples, 0.16%)</title><rect x="88.2068%" y="469" width="0.1620%" height="15" fill="rgb(254,84,19)" fg:x="259733" fg:w="477"/><text x="88.4568%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (472 samples, 0.16%)</title><rect x="88.2085%" y="453" width="0.1603%" height="15" fill="rgb(219,137,29)" fg:x="259738" fg:w="472"/><text x="88.4585%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (472 samples, 0.16%)</title><rect x="88.2085%" y="437" width="0.1603%" height="15" fill="rgb(227,47,52)" fg:x="259738" fg:w="472"/><text x="88.4585%" y="447.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (614 samples, 0.21%)</title><rect x="88.3722%" y="501" width="0.2085%" height="15" fill="rgb(229,167,24)" fg:x="260220" fg:w="614"/><text x="88.6222%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (611 samples, 0.21%)</title><rect x="88.3733%" y="485" width="0.2075%" height="15" fill="rgb(233,164,1)" fg:x="260223" fg:w="611"/><text x="88.6233%" y="495.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (47 samples, 0.02%)</title><rect x="88.5648%" y="469" width="0.0160%" height="15" fill="rgb(218,88,48)" fg:x="260787" fg:w="47"/><text x="88.8148%" y="479.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (2,576 samples, 0.87%)</title><rect x="87.7331%" y="517" width="0.8748%" height="15" fill="rgb(226,214,24)" fg:x="258338" fg:w="2576"/><text x="87.9831%" y="527.50"></text></g><g><title>event_listener::Event::listen (80 samples, 0.03%)</title><rect x="88.5808%" y="501" width="0.0272%" height="15" fill="rgb(233,29,12)" fg:x="260834" fg:w="80"/><text x="88.8308%" y="511.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (40 samples, 0.01%)</title><rect x="88.6534%" y="485" width="0.0136%" height="15" fill="rgb(219,120,34)" fg:x="261048" fg:w="40"/><text x="88.9034%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (66 samples, 0.02%)</title><rect x="88.9272%" y="373" width="0.0224%" height="15" fill="rgb(226,78,44)" fg:x="261854" fg:w="66"/><text x="89.1772%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (30 samples, 0.01%)</title><rect x="89.0012%" y="277" width="0.0102%" height="15" fill="rgb(240,15,48)" fg:x="262072" fg:w="30"/><text x="89.2512%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.01%)</title><rect x="89.0114%" y="277" width="0.0143%" height="15" fill="rgb(253,176,7)" fg:x="262102" fg:w="42"/><text x="89.2614%" y="287.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (30 samples, 0.01%)</title><rect x="89.0256%" y="277" width="0.0102%" height="15" fill="rgb(206,166,28)" fg:x="262144" fg:w="30"/><text x="89.2756%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (126 samples, 0.04%)</title><rect x="89.0368%" y="261" width="0.0428%" height="15" fill="rgb(241,53,51)" fg:x="262177" fg:w="126"/><text x="89.2868%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (393 samples, 0.13%)</title><rect x="88.9513%" y="325" width="0.1335%" height="15" fill="rgb(249,112,30)" fg:x="261925" fg:w="393"/><text x="89.2013%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (372 samples, 0.13%)</title><rect x="88.9584%" y="309" width="0.1263%" height="15" fill="rgb(217,85,30)" fg:x="261946" fg:w="372"/><text x="89.2084%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (305 samples, 0.10%)</title><rect x="88.9811%" y="293" width="0.1036%" height="15" fill="rgb(233,49,7)" fg:x="262013" fg:w="305"/><text x="89.2311%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (141 samples, 0.05%)</title><rect x="89.0368%" y="277" width="0.0479%" height="15" fill="rgb(234,109,9)" fg:x="262177" fg:w="141"/><text x="89.2868%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (423 samples, 0.14%)</title><rect x="88.9496%" y="373" width="0.1437%" height="15" fill="rgb(253,95,22)" fg:x="261920" fg:w="423"/><text x="89.1996%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (423 samples, 0.14%)</title><rect x="88.9496%" y="357" width="0.1437%" height="15" fill="rgb(233,176,25)" fg:x="261920" fg:w="423"/><text x="89.1996%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (423 samples, 0.14%)</title><rect x="88.9496%" y="341" width="0.1437%" height="15" fill="rgb(236,33,39)" fg:x="261920" fg:w="423"/><text x="89.1996%" y="351.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="89.9028%" y="341" width="0.0109%" height="15" fill="rgb(223,226,42)" fg:x="264727" fg:w="32"/><text x="90.1528%" y="351.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="89.9032%" y="325" width="0.0105%" height="15" fill="rgb(216,99,33)" fg:x="264728" fg:w="31"/><text x="90.1532%" y="335.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="89.9032%" y="309" width="0.0105%" height="15" fill="rgb(235,84,23)" fg:x="264728" fg:w="31"/><text x="90.1532%" y="319.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1,636 samples, 0.56%)</title><rect x="89.9137%" y="341" width="0.5556%" height="15" fill="rgb(232,2,27)" fg:x="264759" fg:w="1636"/><text x="90.1637%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,411 samples, 0.48%)</title><rect x="89.9901%" y="325" width="0.4792%" height="15" fill="rgb(241,23,22)" fg:x="264984" fg:w="1411"/><text x="90.2401%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (1,411 samples, 0.48%)</title><rect x="89.9901%" y="309" width="0.4792%" height="15" fill="rgb(211,73,27)" fg:x="264984" fg:w="1411"/><text x="90.2401%" y="319.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (3,780 samples, 1.28%)</title><rect x="89.2033%" y="357" width="1.2837%" height="15" fill="rgb(235,109,49)" fg:x="262667" fg:w="3780"/><text x="89.4533%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (52 samples, 0.02%)</title><rect x="90.4693%" y="341" width="0.0177%" height="15" fill="rgb(230,99,29)" fg:x="266395" fg:w="52"/><text x="90.7193%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (31 samples, 0.01%)</title><rect x="90.4870%" y="357" width="0.0105%" height="15" fill="rgb(245,199,7)" fg:x="266447" fg:w="31"/><text x="90.7370%" y="367.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (33 samples, 0.01%)</title><rect x="90.4975%" y="357" width="0.0112%" height="15" fill="rgb(217,179,10)" fg:x="266478" fg:w="33"/><text x="90.7475%" y="367.50"></text></g><g><title>async_executor::steal (4,181 samples, 1.42%)</title><rect x="89.0939%" y="373" width="1.4199%" height="15" fill="rgb(254,99,47)" fg:x="262345" fg:w="4181"/><text x="89.3439%" y="383.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="91.2405%" y="341" width="0.0156%" height="15" fill="rgb(251,121,7)" fg:x="268666" fg:w="46"/><text x="91.4905%" y="351.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="91.2419%" y="325" width="0.0143%" height="15" fill="rgb(250,177,26)" fg:x="268670" fg:w="42"/><text x="91.4919%" y="335.50"></text></g><g><title>[unknown] (42 samples, 0.01%)</title><rect x="91.2419%" y="309" width="0.0143%" height="15" fill="rgb(232,88,15)" fg:x="268670" fg:w="42"/><text x="91.4919%" y="319.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="91.2450%" y="293" width="0.0112%" height="15" fill="rgb(251,54,54)" fg:x="268679" fg:w="33"/><text x="91.4950%" y="303.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,057 samples, 0.70%)</title><rect x="90.6870%" y="357" width="0.6986%" height="15" fill="rgb(208,177,15)" fg:x="267036" fg:w="2057"/><text x="90.9370%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (354 samples, 0.12%)</title><rect x="91.2653%" y="341" width="0.1202%" height="15" fill="rgb(205,97,32)" fg:x="268739" fg:w="354"/><text x="91.5153%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (330 samples, 0.11%)</title><rect x="91.2735%" y="325" width="0.1121%" height="15" fill="rgb(217,192,13)" fg:x="268763" fg:w="330"/><text x="91.5235%" y="335.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (556 samples, 0.19%)</title><rect x="91.6559%" y="341" width="0.1888%" height="15" fill="rgb(215,163,41)" fg:x="269889" fg:w="556"/><text x="91.9059%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (34 samples, 0.01%)</title><rect x="91.8450%" y="341" width="0.0115%" height="15" fill="rgb(246,83,29)" fg:x="270446" fg:w="34"/><text x="92.0950%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (34 samples, 0.01%)</title><rect x="91.8450%" y="325" width="0.0115%" height="15" fill="rgb(219,2,45)" fg:x="270446" fg:w="34"/><text x="92.0950%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (69 samples, 0.02%)</title><rect x="91.8566%" y="341" width="0.0234%" height="15" fill="rgb(242,215,33)" fg:x="270480" fg:w="69"/><text x="92.1066%" y="351.50"></text></g><g><title>core::ptr::read (69 samples, 0.02%)</title><rect x="91.8566%" y="325" width="0.0234%" height="15" fill="rgb(217,1,6)" fg:x="270480" fg:w="69"/><text x="92.1066%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (413 samples, 0.14%)</title><rect x="91.8848%" y="341" width="0.1403%" height="15" fill="rgb(207,85,52)" fg:x="270563" fg:w="413"/><text x="92.1348%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (413 samples, 0.14%)</title><rect x="91.8848%" y="325" width="0.1403%" height="15" fill="rgb(231,171,19)" fg:x="270563" fg:w="413"/><text x="92.1348%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (48 samples, 0.02%)</title><rect x="92.0250%" y="341" width="0.0163%" height="15" fill="rgb(207,128,4)" fg:x="270976" fg:w="48"/><text x="92.2750%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_or (48 samples, 0.02%)</title><rect x="92.0250%" y="325" width="0.0163%" height="15" fill="rgb(219,208,4)" fg:x="270976" fg:w="48"/><text x="92.2750%" y="335.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4,640 samples, 1.58%)</title><rect x="90.5138%" y="373" width="1.5758%" height="15" fill="rgb(235,161,42)" fg:x="266526" fg:w="4640"/><text x="90.7638%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2,073 samples, 0.70%)</title><rect x="91.3856%" y="357" width="0.7040%" height="15" fill="rgb(247,218,18)" fg:x="269093" fg:w="2073"/><text x="91.6356%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (142 samples, 0.05%)</title><rect x="92.0413%" y="341" width="0.0482%" height="15" fill="rgb(232,114,51)" fg:x="271024" fg:w="142"/><text x="92.2913%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (142 samples, 0.05%)</title><rect x="92.0413%" y="325" width="0.0482%" height="15" fill="rgb(222,95,3)" fg:x="271024" fg:w="142"/><text x="92.2913%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (134 samples, 0.05%)</title><rect x="92.0902%" y="373" width="0.0455%" height="15" fill="rgb(240,65,29)" fg:x="271168" fg:w="134"/><text x="92.3402%" y="383.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (134 samples, 0.05%)</title><rect x="92.0902%" y="357" width="0.0455%" height="15" fill="rgb(249,209,20)" fg:x="271168" fg:w="134"/><text x="92.3402%" y="367.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (129 samples, 0.04%)</title><rect x="92.0919%" y="341" width="0.0438%" height="15" fill="rgb(241,48,37)" fg:x="271173" fg:w="129"/><text x="92.3419%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (129 samples, 0.04%)</title><rect x="92.0919%" y="325" width="0.0438%" height="15" fill="rgb(230,140,42)" fg:x="271173" fg:w="129"/><text x="92.3419%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (9,907 samples, 3.36%)</title><rect x="88.8670%" y="389" width="3.3645%" height="15" fill="rgb(230,176,45)" fg:x="261677" fg:w="9907"/><text x="89.1170%" y="399.50">asy..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (268 samples, 0.09%)</title><rect x="92.1405%" y="373" width="0.0910%" height="15" fill="rgb(245,112,21)" fg:x="271316" fg:w="268"/><text x="92.3905%" y="383.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (253 samples, 0.09%)</title><rect x="92.1456%" y="357" width="0.0859%" height="15" fill="rgb(207,183,35)" fg:x="271331" fg:w="253"/><text x="92.3956%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (253 samples, 0.09%)</title><rect x="92.1456%" y="341" width="0.0859%" height="15" fill="rgb(227,44,33)" fg:x="271331" fg:w="253"/><text x="92.3956%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (68 samples, 0.02%)</title><rect x="92.2084%" y="325" width="0.0231%" height="15" fill="rgb(246,120,21)" fg:x="271516" fg:w="68"/><text x="92.4584%" y="335.50"></text></g><g><title>async_executor::Sleepers::notify (156 samples, 0.05%)</title><rect x="92.2712%" y="373" width="0.0530%" height="15" fill="rgb(235,57,52)" fg:x="271701" fg:w="156"/><text x="92.5212%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (59 samples, 0.02%)</title><rect x="92.3242%" y="373" width="0.0200%" height="15" fill="rgb(238,84,10)" fg:x="271857" fg:w="59"/><text x="92.5742%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.02%)</title><rect x="92.3242%" y="357" width="0.0200%" height="15" fill="rgb(251,200,32)" fg:x="271857" fg:w="59"/><text x="92.5742%" y="367.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (43 samples, 0.01%)</title><rect x="92.3297%" y="341" width="0.0146%" height="15" fill="rgb(247,159,13)" fg:x="271873" fg:w="43"/><text x="92.5797%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (43 samples, 0.01%)</title><rect x="92.3297%" y="325" width="0.0146%" height="15" fill="rgb(238,64,4)" fg:x="271873" fg:w="43"/><text x="92.5797%" y="335.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (32 samples, 0.01%)</title><rect x="92.3534%" y="357" width="0.0109%" height="15" fill="rgb(221,131,51)" fg:x="271943" fg:w="32"/><text x="92.6034%" y="367.50"></text></g><g><title>core::mem::drop (31 samples, 0.01%)</title><rect x="92.6227%" y="293" width="0.0105%" height="15" fill="rgb(242,5,29)" fg:x="272736" fg:w="31"/><text x="92.8727%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (31 samples, 0.01%)</title><rect x="92.6227%" y="277" width="0.0105%" height="15" fill="rgb(214,130,32)" fg:x="272736" fg:w="31"/><text x="92.8727%" y="287.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="92.6227%" y="261" width="0.0105%" height="15" fill="rgb(244,210,16)" fg:x="272736" fg:w="31"/><text x="92.8727%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (430 samples, 0.15%)</title><rect x="92.6333%" y="293" width="0.1460%" height="15" fill="rgb(234,48,26)" fg:x="272767" fg:w="430"/><text x="92.8833%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (430 samples, 0.15%)</title><rect x="92.6333%" y="277" width="0.1460%" height="15" fill="rgb(231,82,38)" fg:x="272767" fg:w="430"/><text x="92.8833%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (48 samples, 0.02%)</title><rect x="92.7868%" y="245" width="0.0163%" height="15" fill="rgb(254,128,41)" fg:x="273219" fg:w="48"/><text x="93.0368%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.02%)</title><rect x="92.7868%" y="229" width="0.0163%" height="15" fill="rgb(212,73,49)" fg:x="273219" fg:w="48"/><text x="93.0368%" y="239.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (101 samples, 0.03%)</title><rect x="92.7793%" y="293" width="0.0343%" height="15" fill="rgb(205,62,54)" fg:x="273197" fg:w="101"/><text x="93.0293%" y="303.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (79 samples, 0.03%)</title><rect x="92.7868%" y="277" width="0.0268%" height="15" fill="rgb(228,0,8)" fg:x="273219" fg:w="79"/><text x="93.0368%" y="287.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (79 samples, 0.03%)</title><rect x="92.7868%" y="261" width="0.0268%" height="15" fill="rgb(251,28,17)" fg:x="273219" fg:w="79"/><text x="93.0368%" y="271.50"></text></g><g><title>std::sys::unix::futex::futex_wake (31 samples, 0.01%)</title><rect x="92.8031%" y="245" width="0.0105%" height="15" fill="rgb(238,105,27)" fg:x="273267" fg:w="31"/><text x="93.0531%" y="255.50"></text></g><g><title>syscall (6,269 samples, 2.13%)</title><rect x="92.8207%" y="293" width="2.1290%" height="15" fill="rgb(237,216,33)" fg:x="273319" fg:w="6269"/><text x="93.0707%" y="303.50">s..</text></g><g><title>[unknown] (6,226 samples, 2.11%)</title><rect x="92.8353%" y="277" width="2.1144%" height="15" fill="rgb(229,228,25)" fg:x="273362" fg:w="6226"/><text x="93.0853%" y="287.50">[..</text></g><g><title>[unknown] (6,198 samples, 2.10%)</title><rect x="92.8448%" y="261" width="2.1049%" height="15" fill="rgb(233,75,23)" fg:x="273390" fg:w="6198"/><text x="93.0948%" y="271.50">[..</text></g><g><title>[unknown] (6,164 samples, 2.09%)</title><rect x="92.8564%" y="245" width="2.0933%" height="15" fill="rgb(231,207,16)" fg:x="273424" fg:w="6164"/><text x="93.1064%" y="255.50">[..</text></g><g><title>[unknown] (5,976 samples, 2.03%)</title><rect x="92.9202%" y="229" width="2.0295%" height="15" fill="rgb(231,191,45)" fg:x="273612" fg:w="5976"/><text x="93.1702%" y="239.50">[..</text></g><g><title>[unknown] (5,569 samples, 1.89%)</title><rect x="93.0585%" y="213" width="1.8913%" height="15" fill="rgb(224,133,17)" fg:x="274019" fg:w="5569"/><text x="93.3085%" y="223.50">[..</text></g><g><title>[unknown] (4,084 samples, 1.39%)</title><rect x="93.5628%" y="197" width="1.3870%" height="15" fill="rgb(209,178,27)" fg:x="275504" fg:w="4084"/><text x="93.8128%" y="207.50"></text></g><g><title>[unknown] (3,016 samples, 1.02%)</title><rect x="93.9255%" y="181" width="1.0243%" height="15" fill="rgb(218,37,11)" fg:x="276572" fg:w="3016"/><text x="94.1755%" y="191.50"></text></g><g><title>[unknown] (2,612 samples, 0.89%)</title><rect x="94.0627%" y="165" width="0.8871%" height="15" fill="rgb(251,226,25)" fg:x="276976" fg:w="2612"/><text x="94.3127%" y="175.50"></text></g><g><title>[unknown] (1,472 samples, 0.50%)</title><rect x="94.4498%" y="149" width="0.4999%" height="15" fill="rgb(209,222,27)" fg:x="278116" fg:w="1472"/><text x="94.6998%" y="159.50"></text></g><g><title>[unknown] (483 samples, 0.16%)</title><rect x="94.7857%" y="133" width="0.1640%" height="15" fill="rgb(238,22,21)" fg:x="279105" fg:w="483"/><text x="95.0357%" y="143.50"></text></g><g><title>[unknown] (228 samples, 0.08%)</title><rect x="94.8723%" y="117" width="0.0774%" height="15" fill="rgb(233,161,25)" fg:x="279360" fg:w="228"/><text x="95.1223%" y="127.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="94.9304%" y="101" width="0.0194%" height="15" fill="rgb(226,122,53)" fg:x="279531" fg:w="57"/><text x="95.1804%" y="111.50"></text></g><g><title>parking::Unparker::unpark (7,482 samples, 2.54%)</title><rect x="92.4091%" y="325" width="2.5409%" height="15" fill="rgb(220,123,17)" fg:x="272107" fg:w="7482"/><text x="92.6591%" y="335.50">pa..</text></g><g><title>parking::Inner::unpark (6,882 samples, 2.34%)</title><rect x="92.6129%" y="309" width="2.3372%" height="15" fill="rgb(230,224,35)" fg:x="272707" fg:w="6882"/><text x="92.8629%" y="319.50">p..</text></g><g><title>async_io::driver::block_on::{{closure}} (7,519 samples, 2.55%)</title><rect x="92.4006%" y="341" width="2.5535%" height="15" fill="rgb(246,83,8)" fg:x="272082" fg:w="7519"/><text x="92.6506%" y="351.50">as..</text></g><g><title>core::task::wake::Waker::wake (7,687 samples, 2.61%)</title><rect x="92.3446%" y="373" width="2.6106%" height="15" fill="rgb(230,214,17)" fg:x="271917" fg:w="7687"/><text x="92.5946%" y="383.50">co..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (7,628 samples, 2.59%)</title><rect x="92.3646%" y="357" width="2.5905%" height="15" fill="rgb(222,97,18)" fg:x="271976" fg:w="7628"/><text x="92.6146%" y="367.50">wa..</text></g><g><title>async_executor::State::notify (8,069 samples, 2.74%)</title><rect x="92.2315%" y="389" width="2.7403%" height="15" fill="rgb(206,79,1)" fg:x="271584" fg:w="8069"/><text x="92.4815%" y="399.50">as..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (49 samples, 0.02%)</title><rect x="94.9552%" y="373" width="0.0166%" height="15" fill="rgb(214,121,34)" fg:x="279604" fg:w="49"/><text x="95.2052%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (42 samples, 0.01%)</title><rect x="94.9575%" y="357" width="0.0143%" height="15" fill="rgb(249,199,46)" fg:x="279611" fg:w="42"/><text x="95.2075%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (42 samples, 0.01%)</title><rect x="94.9575%" y="341" width="0.0143%" height="15" fill="rgb(214,222,46)" fg:x="279611" fg:w="42"/><text x="95.2075%" y="351.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (62 samples, 0.02%)</title><rect x="95.0346%" y="357" width="0.0211%" height="15" fill="rgb(248,168,30)" fg:x="279838" fg:w="62"/><text x="95.2846%" y="367.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (61 samples, 0.02%)</title><rect x="95.0350%" y="341" width="0.0207%" height="15" fill="rgb(226,14,28)" fg:x="279839" fg:w="61"/><text x="95.2850%" y="351.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (61 samples, 0.02%)</title><rect x="95.0350%" y="325" width="0.0207%" height="15" fill="rgb(253,123,1)" fg:x="279839" fg:w="61"/><text x="95.2850%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (61 samples, 0.02%)</title><rect x="95.0350%" y="309" width="0.0207%" height="15" fill="rgb(225,24,42)" fg:x="279839" fg:w="61"/><text x="95.2850%" y="319.50"></text></g><g><title>async_executor::Sleepers::insert (139 samples, 0.05%)</title><rect x="95.0224%" y="373" width="0.0472%" height="15" fill="rgb(216,161,37)" fg:x="279802" fg:w="139"/><text x="95.2724%" y="383.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (51 samples, 0.02%)</title><rect x="95.1484%" y="357" width="0.0173%" height="15" fill="rgb(251,164,26)" fg:x="280173" fg:w="51"/><text x="95.3984%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (51 samples, 0.02%)</title><rect x="95.1484%" y="341" width="0.0173%" height="15" fill="rgb(219,177,3)" fg:x="280173" fg:w="51"/><text x="95.3984%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="95.1657%" y="357" width="0.0187%" height="15" fill="rgb(222,65,0)" fg:x="280224" fg:w="55"/><text x="95.4157%" y="367.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (170 samples, 0.06%)</title><rect x="95.1844%" y="357" width="0.0577%" height="15" fill="rgb(223,69,54)" fg:x="280279" fg:w="170"/><text x="95.4344%" y="367.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (144 samples, 0.05%)</title><rect x="95.1932%" y="341" width="0.0489%" height="15" fill="rgb(235,30,27)" fg:x="280305" fg:w="144"/><text x="95.4432%" y="351.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (144 samples, 0.05%)</title><rect x="95.1932%" y="325" width="0.0489%" height="15" fill="rgb(220,183,50)" fg:x="280305" fg:w="144"/><text x="95.4432%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (144 samples, 0.05%)</title><rect x="95.1932%" y="309" width="0.0489%" height="15" fill="rgb(248,198,15)" fg:x="280305" fg:w="144"/><text x="95.4432%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.01%)</title><rect x="95.2442%" y="357" width="0.0109%" height="15" fill="rgb(222,211,4)" fg:x="280455" fg:w="32"/><text x="95.4942%" y="367.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (39 samples, 0.01%)</title><rect x="95.2713%" y="309" width="0.0132%" height="15" fill="rgb(214,102,34)" fg:x="280535" fg:w="39"/><text x="95.5213%" y="319.50"></text></g><g><title>async_executor::Sleepers::update (628 samples, 0.21%)</title><rect x="95.0716%" y="373" width="0.2133%" height="15" fill="rgb(245,92,5)" fg:x="279947" fg:w="628"/><text x="95.3216%" y="383.50"></text></g><g><title>core::task::wake::Waker::will_wake (88 samples, 0.03%)</title><rect x="95.2550%" y="357" width="0.0299%" height="15" fill="rgb(252,72,51)" fg:x="280487" fg:w="88"/><text x="95.5050%" y="367.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (88 samples, 0.03%)</title><rect x="95.2550%" y="341" width="0.0299%" height="15" fill="rgb(252,208,19)" fg:x="280487" fg:w="88"/><text x="95.5050%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (40 samples, 0.01%)</title><rect x="95.2713%" y="325" width="0.0136%" height="15" fill="rgb(211,69,7)" fg:x="280535" fg:w="40"/><text x="95.5213%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (356 samples, 0.12%)</title><rect x="95.2849%" y="373" width="0.1209%" height="15" fill="rgb(211,27,16)" fg:x="280575" fg:w="356"/><text x="95.5349%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (356 samples, 0.12%)</title><rect x="95.2849%" y="357" width="0.1209%" height="15" fill="rgb(219,216,14)" fg:x="280575" fg:w="356"/><text x="95.5349%" y="367.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (211 samples, 0.07%)</title><rect x="95.3342%" y="341" width="0.0717%" height="15" fill="rgb(219,71,8)" fg:x="280720" fg:w="211"/><text x="95.5842%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (211 samples, 0.07%)</title><rect x="95.3342%" y="325" width="0.0717%" height="15" fill="rgb(223,170,53)" fg:x="280720" fg:w="211"/><text x="95.5842%" y="335.50"></text></g><g><title>syscall (84 samples, 0.03%)</title><rect x="95.3773%" y="309" width="0.0285%" height="15" fill="rgb(246,21,26)" fg:x="280847" fg:w="84"/><text x="95.6273%" y="319.50"></text></g><g><title>[unknown] (84 samples, 0.03%)</title><rect x="95.3773%" y="293" width="0.0285%" height="15" fill="rgb(248,20,46)" fg:x="280847" fg:w="84"/><text x="95.6273%" y="303.50"></text></g><g><title>[unknown] (84 samples, 0.03%)</title><rect x="95.3773%" y="277" width="0.0285%" height="15" fill="rgb(252,94,11)" fg:x="280847" fg:w="84"/><text x="95.6273%" y="287.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="95.3776%" y="261" width="0.0282%" height="15" fill="rgb(236,163,8)" fg:x="280848" fg:w="83"/><text x="95.6276%" y="271.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="95.3776%" y="245" width="0.0282%" height="15" fill="rgb(217,221,45)" fg:x="280848" fg:w="83"/><text x="95.6276%" y="255.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="95.3793%" y="229" width="0.0265%" height="15" fill="rgb(238,38,17)" fg:x="280853" fg:w="78"/><text x="95.6293%" y="239.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="95.3834%" y="213" width="0.0224%" height="15" fill="rgb(242,210,23)" fg:x="280865" fg:w="66"/><text x="95.6334%" y="223.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="95.3899%" y="197" width="0.0160%" height="15" fill="rgb(250,86,53)" fg:x="280884" fg:w="47"/><text x="95.6399%" y="207.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="95.3922%" y="181" width="0.0136%" height="15" fill="rgb(223,168,25)" fg:x="280891" fg:w="40"/><text x="95.6422%" y="191.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="95.3956%" y="165" width="0.0102%" height="15" fill="rgb(251,189,4)" fg:x="280901" fg:w="30"/><text x="95.6456%" y="175.50"></text></g><g><title>async_executor::Ticker::sleep (1,359 samples, 0.46%)</title><rect x="94.9718%" y="389" width="0.4615%" height="15" fill="rgb(245,19,28)" fg:x="279653" fg:w="1359"/><text x="95.2218%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (79 samples, 0.03%)</title><rect x="95.4065%" y="373" width="0.0268%" height="15" fill="rgb(207,10,34)" fg:x="280933" fg:w="79"/><text x="95.6565%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (66 samples, 0.02%)</title><rect x="95.4109%" y="357" width="0.0224%" height="15" fill="rgb(235,153,31)" fg:x="280946" fg:w="66"/><text x="95.6609%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (66 samples, 0.02%)</title><rect x="95.4109%" y="341" width="0.0224%" height="15" fill="rgb(228,72,37)" fg:x="280946" fg:w="66"/><text x="95.6609%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.02%)</title><rect x="95.6333%" y="357" width="0.0197%" height="15" fill="rgb(215,15,16)" fg:x="281601" fg:w="58"/><text x="95.8833%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (58 samples, 0.02%)</title><rect x="95.6333%" y="341" width="0.0197%" height="15" fill="rgb(250,119,29)" fg:x="281601" fg:w="58"/><text x="95.8833%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (58 samples, 0.02%)</title><rect x="95.6333%" y="325" width="0.0197%" height="15" fill="rgb(214,59,1)" fg:x="281601" fg:w="58"/><text x="95.8833%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (50 samples, 0.02%)</title><rect x="95.6361%" y="309" width="0.0170%" height="15" fill="rgb(223,109,25)" fg:x="281609" fg:w="50"/><text x="95.8861%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (344 samples, 0.12%)</title><rect x="95.6571%" y="357" width="0.1168%" height="15" fill="rgb(230,198,22)" fg:x="281671" fg:w="344"/><text x="95.9071%" y="367.50"></text></g><g><title>async_executor::Sleepers::remove (789 samples, 0.27%)</title><rect x="95.5192%" y="373" width="0.2679%" height="15" fill="rgb(245,184,46)" fg:x="281265" fg:w="789"/><text x="95.7692%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (367 samples, 0.12%)</title><rect x="95.7872%" y="373" width="0.1246%" height="15" fill="rgb(253,73,16)" fg:x="282054" fg:w="367"/><text x="96.0372%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (367 samples, 0.12%)</title><rect x="95.7872%" y="357" width="0.1246%" height="15" fill="rgb(206,94,45)" fg:x="282054" fg:w="367"/><text x="96.0372%" y="367.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (216 samples, 0.07%)</title><rect x="95.8385%" y="341" width="0.0734%" height="15" fill="rgb(236,83,27)" fg:x="282205" fg:w="216"/><text x="96.0885%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (216 samples, 0.07%)</title><rect x="95.8385%" y="325" width="0.0734%" height="15" fill="rgb(220,196,8)" fg:x="282205" fg:w="216"/><text x="96.0885%" y="335.50"></text></g><g><title>syscall (54 samples, 0.02%)</title><rect x="95.8935%" y="309" width="0.0183%" height="15" fill="rgb(254,185,14)" fg:x="282367" fg:w="54"/><text x="96.1435%" y="319.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="95.8935%" y="293" width="0.0183%" height="15" fill="rgb(226,50,22)" fg:x="282367" fg:w="54"/><text x="96.1435%" y="303.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="95.8935%" y="277" width="0.0183%" height="15" fill="rgb(253,147,0)" fg:x="282367" fg:w="54"/><text x="96.1435%" y="287.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="95.8935%" y="261" width="0.0183%" height="15" fill="rgb(252,46,33)" fg:x="282367" fg:w="54"/><text x="96.1435%" y="271.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="95.8938%" y="245" width="0.0180%" height="15" fill="rgb(242,22,54)" fg:x="282368" fg:w="53"/><text x="96.1438%" y="255.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="95.8938%" y="229" width="0.0180%" height="15" fill="rgb(223,178,32)" fg:x="282368" fg:w="53"/><text x="96.1438%" y="239.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="95.8979%" y="213" width="0.0139%" height="15" fill="rgb(214,106,53)" fg:x="282380" fg:w="41"/><text x="96.1479%" y="223.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="95.9013%" y="197" width="0.0105%" height="15" fill="rgb(232,65,50)" fg:x="282390" fg:w="31"/><text x="96.1513%" y="207.50"></text></g><g><title>async_executor::Ticker::wake (1,655 samples, 0.56%)</title><rect x="95.4333%" y="389" width="0.5620%" height="15" fill="rgb(231,110,28)" fg:x="281012" fg:w="1655"/><text x="95.6833%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (240 samples, 0.08%)</title><rect x="95.9139%" y="373" width="0.0815%" height="15" fill="rgb(216,71,40)" fg:x="282427" fg:w="240"/><text x="96.1639%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (230 samples, 0.08%)</title><rect x="95.9173%" y="357" width="0.0781%" height="15" fill="rgb(229,89,53)" fg:x="282437" fg:w="230"/><text x="96.1673%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (230 samples, 0.08%)</title><rect x="95.9173%" y="341" width="0.0781%" height="15" fill="rgb(210,124,14)" fg:x="282437" fg:w="230"/><text x="96.1673%" y="351.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (21,271 samples, 7.22%)</title><rect x="88.7720%" y="421" width="7.2238%" height="15" fill="rgb(236,213,6)" fg:x="261397" fg:w="21271"/><text x="89.0220%" y="431.50">&lt;futures_l..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (21,059 samples, 7.15%)</title><rect x="88.8439%" y="405" width="7.1518%" height="15" fill="rgb(228,41,5)" fg:x="261609" fg:w="21059"/><text x="89.0939%" y="415.50">async_exec..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21,328 samples, 7.24%)</title><rect x="88.7529%" y="453" width="7.2431%" height="15" fill="rgb(221,167,25)" fg:x="261341" fg:w="21328"/><text x="89.0029%" y="463.50">&lt;core::fut..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (21,327 samples, 7.24%)</title><rect x="88.7533%" y="437" width="7.2428%" height="15" fill="rgb(228,144,37)" fg:x="261342" fg:w="21327"/><text x="89.0033%" y="447.50">async_exec..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21,609 samples, 7.34%)</title><rect x="88.6670%" y="485" width="7.3385%" height="15" fill="rgb(227,189,38)" fg:x="261088" fg:w="21609"/><text x="88.9170%" y="495.50">&lt;core::fut..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (21,507 samples, 7.30%)</title><rect x="88.7017%" y="469" width="7.3039%" height="15" fill="rgb(218,8,2)" fg:x="261190" fg:w="21507"/><text x="88.9517%" y="479.50">async_exec..</text></g><g><title>async_executor::Runner::runnable (51 samples, 0.02%)</title><rect x="96.0069%" y="485" width="0.0173%" height="15" fill="rgb(209,61,28)" fg:x="282701" fg:w="51"/><text x="96.2569%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.01%)</title><rect x="96.0714%" y="469" width="0.0105%" height="15" fill="rgb(233,140,39)" fg:x="282891" fg:w="31"/><text x="96.3214%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.01%)</title><rect x="96.0714%" y="453" width="0.0105%" height="15" fill="rgb(251,66,48)" fg:x="282891" fg:w="31"/><text x="96.3214%" y="463.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (171 samples, 0.06%)</title><rect x="96.0242%" y="485" width="0.0581%" height="15" fill="rgb(210,44,45)" fg:x="282752" fg:w="171"/><text x="96.2742%" y="495.50"></text></g><g><title>async_task::runnable::Runnable::run (213 samples, 0.07%)</title><rect x="96.0823%" y="485" width="0.0723%" height="15" fill="rgb(214,136,46)" fg:x="282923" fg:w="213"/><text x="96.3323%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,261 samples, 7.56%)</title><rect x="88.6079%" y="517" width="7.5600%" height="15" fill="rgb(207,130,50)" fg:x="260914" fg:w="22261"/><text x="88.8579%" y="527.50">&lt;core::fut..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (22,202 samples, 7.54%)</title><rect x="88.6280%" y="501" width="7.5399%" height="15" fill="rgb(228,102,49)" fg:x="260973" fg:w="22202"/><text x="88.8780%" y="511.50">async_exec..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (39 samples, 0.01%)</title><rect x="96.1546%" y="485" width="0.0132%" height="15" fill="rgb(253,55,1)" fg:x="283136" fg:w="39"/><text x="96.4046%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (39 samples, 0.01%)</title><rect x="96.1546%" y="469" width="0.0132%" height="15" fill="rgb(238,222,9)" fg:x="283136" fg:w="39"/><text x="96.4046%" y="479.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24,850 samples, 8.44%)</title><rect x="87.7294%" y="533" width="8.4392%" height="15" fill="rgb(246,99,6)" fg:x="258327" fg:w="24850"/><text x="87.9794%" y="543.50">&lt;futures_lit..</text></g><g><title>async_executor::Executor::state (31 samples, 0.01%)</title><rect x="96.1692%" y="533" width="0.0105%" height="15" fill="rgb(219,110,26)" fg:x="283179" fg:w="31"/><text x="96.4192%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,033 samples, 8.50%)</title><rect x="87.6798%" y="565" width="8.5014%" height="15" fill="rgb(239,160,33)" fg:x="258181" fg:w="25033"/><text x="87.9298%" y="575.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}} (24,978 samples, 8.48%)</title><rect x="87.6985%" y="549" width="8.4827%" height="15" fill="rgb(220,202,23)" fg:x="258236" fg:w="24978"/><text x="87.9485%" y="559.50">async_execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (25,040 samples, 8.50%)</title><rect x="87.6788%" y="581" width="8.5037%" height="15" fill="rgb(208,80,26)" fg:x="258178" fg:w="25040"/><text x="87.9288%" y="591.50">&lt;async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (25,914 samples, 8.80%)</title><rect x="87.3932%" y="661" width="8.8005%" height="15" fill="rgb(243,85,7)" fg:x="257337" fg:w="25914"/><text x="87.6432%" y="671.50">&lt;async_std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (25,914 samples, 8.80%)</title><rect x="87.3932%" y="645" width="8.8005%" height="15" fill="rgb(228,77,47)" fg:x="257337" fg:w="25914"/><text x="87.6432%" y="655.50">async_std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (25,910 samples, 8.80%)</title><rect x="87.3945%" y="629" width="8.7992%" height="15" fill="rgb(212,226,8)" fg:x="257341" fg:w="25910"/><text x="87.6445%" y="639.50">std::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25,851 samples, 8.78%)</title><rect x="87.4145%" y="613" width="8.7792%" height="15" fill="rgb(241,120,54)" fg:x="257400" fg:w="25851"/><text x="87.6645%" y="623.50">std::thread:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (25,075 samples, 8.52%)</title><rect x="87.6781%" y="597" width="8.5156%" height="15" fill="rgb(226,80,16)" fg:x="258176" fg:w="25075"/><text x="87.9281%" y="607.50">async_std::t..</text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current&lt;&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt; as core::future::future::Future&gt;::poll::{{closure}},core::task::poll::Poll&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (33 samples, 0.01%)</title><rect x="96.1825%" y="581" width="0.0112%" height="15" fill="rgb(240,76,13)" fg:x="283218" fg:w="33"/><text x="96.4325%" y="591.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;F&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="96.1825%" y="565" width="0.0112%" height="15" fill="rgb(252,74,8)" fg:x="283218" fg:w="33"/><text x="96.4325%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (33 samples, 0.01%)</title><rect x="96.1825%" y="549" width="0.0112%" height="15" fill="rgb(244,155,2)" fg:x="283218" fg:w="33"/><text x="96.4325%" y="559.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;F&gt; as core::ops::drop::Drop&gt;::drop::{{closure}} (33 samples, 0.01%)</title><rect x="96.1825%" y="533" width="0.0112%" height="15" fill="rgb(215,81,35)" fg:x="283218" fg:w="33"/><text x="96.4325%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (33 samples, 0.01%)</title><rect x="96.1825%" y="517" width="0.0112%" height="15" fill="rgb(206,55,2)" fg:x="283218" fg:w="33"/><text x="96.4325%" y="527.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::{{closure}} (33 samples, 0.01%)</title><rect x="96.1825%" y="501" width="0.0112%" height="15" fill="rgb(231,2,34)" fg:x="283218" fg:w="33"/><text x="96.4325%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (36 samples, 0.01%)</title><rect x="96.2531%" y="405" width="0.0122%" height="15" fill="rgb(242,176,48)" fg:x="283426" fg:w="36"/><text x="96.5031%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 0.01%)</title><rect x="96.2514%" y="469" width="0.0149%" height="15" fill="rgb(249,31,36)" fg:x="283421" fg:w="44"/><text x="96.5014%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (44 samples, 0.01%)</title><rect x="96.2514%" y="453" width="0.0149%" height="15" fill="rgb(205,18,17)" fg:x="283421" fg:w="44"/><text x="96.5014%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (43 samples, 0.01%)</title><rect x="96.2518%" y="437" width="0.0146%" height="15" fill="rgb(254,130,5)" fg:x="283422" fg:w="43"/><text x="96.5018%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39 samples, 0.01%)</title><rect x="96.2531%" y="421" width="0.0132%" height="15" fill="rgb(229,42,45)" fg:x="283426" fg:w="39"/><text x="96.5031%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.02%)</title><rect x="96.2511%" y="517" width="0.0156%" height="15" fill="rgb(245,95,25)" fg:x="283420" fg:w="46"/><text x="96.5011%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (46 samples, 0.02%)</title><rect x="96.2511%" y="501" width="0.0156%" height="15" fill="rgb(249,193,38)" fg:x="283420" fg:w="46"/><text x="96.5011%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.02%)</title><rect x="96.2511%" y="485" width="0.0156%" height="15" fill="rgb(241,140,43)" fg:x="283420" fg:w="46"/><text x="96.5011%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (492 samples, 0.17%)</title><rect x="96.3435%" y="501" width="0.1671%" height="15" fill="rgb(245,78,48)" fg:x="283692" fg:w="492"/><text x="96.5935%" y="511.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (781 samples, 0.27%)</title><rect x="96.2671%" y="517" width="0.2652%" height="15" fill="rgb(214,92,39)" fg:x="283467" fg:w="781"/><text x="96.5171%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (64 samples, 0.02%)</title><rect x="96.5105%" y="501" width="0.0217%" height="15" fill="rgb(211,189,14)" fg:x="284184" fg:w="64"/><text x="96.7605%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (43 samples, 0.01%)</title><rect x="96.5323%" y="517" width="0.0146%" height="15" fill="rgb(218,7,24)" fg:x="284248" fg:w="43"/><text x="96.7823%" y="527.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.01%)</title><rect x="96.5323%" y="501" width="0.0146%" height="15" fill="rgb(224,200,49)" fg:x="284248" fg:w="43"/><text x="96.7823%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (41 samples, 0.01%)</title><rect x="96.5330%" y="485" width="0.0139%" height="15" fill="rgb(218,210,14)" fg:x="284250" fg:w="41"/><text x="96.7830%" y="495.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (41 samples, 0.01%)</title><rect x="96.5330%" y="469" width="0.0139%" height="15" fill="rgb(234,142,31)" fg:x="284250" fg:w="41"/><text x="96.7830%" y="479.50"></text></g><g><title>fastrand::usize (40 samples, 0.01%)</title><rect x="96.5479%" y="517" width="0.0136%" height="15" fill="rgb(227,165,2)" fg:x="284294" fg:w="40"/><text x="96.7979%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (989 samples, 0.34%)</title><rect x="96.2460%" y="533" width="0.3359%" height="15" fill="rgb(232,44,46)" fg:x="283405" fg:w="989"/><text x="96.4960%" y="543.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (60 samples, 0.02%)</title><rect x="96.5615%" y="517" width="0.0204%" height="15" fill="rgb(236,149,47)" fg:x="284334" fg:w="60"/><text x="96.8115%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (34 samples, 0.01%)</title><rect x="96.5703%" y="501" width="0.0115%" height="15" fill="rgb(227,45,31)" fg:x="284360" fg:w="34"/><text x="96.8203%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (34 samples, 0.01%)</title><rect x="96.5703%" y="485" width="0.0115%" height="15" fill="rgb(240,176,51)" fg:x="284360" fg:w="34"/><text x="96.8203%" y="495.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (46 samples, 0.02%)</title><rect x="96.6270%" y="501" width="0.0156%" height="15" fill="rgb(249,146,41)" fg:x="284527" fg:w="46"/><text x="96.8770%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (46 samples, 0.02%)</title><rect x="96.6270%" y="485" width="0.0156%" height="15" fill="rgb(213,208,4)" fg:x="284527" fg:w="46"/><text x="96.8770%" y="495.50"></text></g><g><title>async_executor::Sleepers::update (194 samples, 0.07%)</title><rect x="96.5863%" y="517" width="0.0659%" height="15" fill="rgb(245,84,36)" fg:x="284407" fg:w="194"/><text x="96.8363%" y="527.50"></text></g><g><title>async_executor::Ticker::sleep (268 samples, 0.09%)</title><rect x="96.5819%" y="533" width="0.0910%" height="15" fill="rgb(254,84,18)" fg:x="284394" fg:w="268"/><text x="96.8319%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (43 samples, 0.01%)</title><rect x="96.6583%" y="517" width="0.0146%" height="15" fill="rgb(225,38,54)" fg:x="284619" fg:w="43"/><text x="96.9083%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.01%)</title><rect x="96.6596%" y="501" width="0.0132%" height="15" fill="rgb(246,50,30)" fg:x="284623" fg:w="39"/><text x="96.9096%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (39 samples, 0.01%)</title><rect x="96.6596%" y="485" width="0.0132%" height="15" fill="rgb(246,148,9)" fg:x="284623" fg:w="39"/><text x="96.9096%" y="495.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (27,338 samples, 9.28%)</title><rect x="87.3891%" y="677" width="9.2841%" height="15" fill="rgb(223,75,4)" fg:x="257325" fg:w="27338"/><text x="87.6391%" y="687.50">&lt;futures_lite..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,412 samples, 0.48%)</title><rect x="96.1937%" y="661" width="0.4795%" height="15" fill="rgb(239,148,41)" fg:x="283251" fg:w="1412"/><text x="96.4437%" y="671.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,375 samples, 0.47%)</title><rect x="96.2063%" y="645" width="0.4670%" height="15" fill="rgb(205,195,3)" fg:x="283288" fg:w="1375"/><text x="96.4563%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,303 samples, 0.44%)</title><rect x="96.2307%" y="629" width="0.4425%" height="15" fill="rgb(254,161,1)" fg:x="283360" fg:w="1303"/><text x="96.4807%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1,296 samples, 0.44%)</title><rect x="96.2331%" y="613" width="0.4401%" height="15" fill="rgb(211,229,8)" fg:x="283367" fg:w="1296"/><text x="96.4831%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,288 samples, 0.44%)</title><rect x="96.2358%" y="597" width="0.4374%" height="15" fill="rgb(220,97,9)" fg:x="283375" fg:w="1288"/><text x="96.4858%" y="607.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1,288 samples, 0.44%)</title><rect x="96.2358%" y="581" width="0.4374%" height="15" fill="rgb(240,218,8)" fg:x="283375" fg:w="1288"/><text x="96.4858%" y="591.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,281 samples, 0.44%)</title><rect x="96.2382%" y="565" width="0.4350%" height="15" fill="rgb(250,44,0)" fg:x="283382" fg:w="1281"/><text x="96.4882%" y="575.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1,266 samples, 0.43%)</title><rect x="96.2433%" y="549" width="0.4299%" height="15" fill="rgb(236,41,53)" fg:x="283397" fg:w="1266"/><text x="96.4933%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (37 samples, 0.01%)</title><rect x="96.6841%" y="597" width="0.0126%" height="15" fill="rgb(218,227,13)" fg:x="284695" fg:w="37"/><text x="96.9341%" y="607.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (37 samples, 0.01%)</title><rect x="96.6841%" y="581" width="0.0126%" height="15" fill="rgb(217,94,32)" fg:x="284695" fg:w="37"/><text x="96.9341%" y="591.50"></text></g><g><title>async_executor::Executor::state (63 samples, 0.02%)</title><rect x="96.6793%" y="677" width="0.0214%" height="15" fill="rgb(213,217,12)" fg:x="284681" fg:w="63"/><text x="96.9293%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (60 samples, 0.02%)</title><rect x="96.6804%" y="661" width="0.0204%" height="15" fill="rgb(229,13,46)" fg:x="284684" fg:w="60"/><text x="96.9304%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (60 samples, 0.02%)</title><rect x="96.6804%" y="645" width="0.0204%" height="15" fill="rgb(243,139,5)" fg:x="284684" fg:w="60"/><text x="96.9304%" y="655.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (60 samples, 0.02%)</title><rect x="96.6804%" y="629" width="0.0204%" height="15" fill="rgb(249,38,45)" fg:x="284684" fg:w="60"/><text x="96.9304%" y="639.50"></text></g><g><title>once_cell::imp::initialize_or_wait (55 samples, 0.02%)</title><rect x="96.6821%" y="613" width="0.0187%" height="15" fill="rgb(216,70,11)" fg:x="284689" fg:w="55"/><text x="96.9321%" y="623.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (27,487 samples, 9.33%)</title><rect x="87.3704%" y="693" width="9.3347%" height="15" fill="rgb(253,101,25)" fg:x="257270" fg:w="27487"/><text x="87.6204%" y="703.50">async_executo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,523 samples, 9.35%)</title><rect x="87.3704%" y="709" width="9.3470%" height="15" fill="rgb(207,197,30)" fg:x="257270" fg:w="27523"/><text x="87.6204%" y="719.50">&lt;core::future..</text></g><g><title>async_io::driver::block_on (36 samples, 0.01%)</title><rect x="96.7051%" y="693" width="0.0122%" height="15" fill="rgb(238,87,13)" fg:x="284757" fg:w="36"/><text x="96.9551%" y="703.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (28,337 samples, 9.62%)</title><rect x="87.1106%" y="725" width="9.6234%" height="15" fill="rgb(215,155,8)" fg:x="256505" fg:w="28337"/><text x="87.3606%" y="735.50">async_executor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28,341 samples, 9.62%)</title><rect x="87.1096%" y="741" width="9.6248%" height="15" fill="rgb(239,166,38)" fg:x="256502" fg:w="28341"/><text x="87.3596%" y="751.50">&lt;core::future:..</text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="96.7371%" y="741" width="0.0105%" height="15" fill="rgb(240,194,35)" fg:x="284851" fg:w="31"/><text x="96.9871%" y="751.50"></text></g><g><title>[libc.so.6] (40 samples, 0.01%)</title><rect x="96.7591%" y="645" width="0.0136%" height="15" fill="rgb(219,10,44)" fg:x="284916" fg:w="40"/><text x="97.0091%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (65 samples, 0.02%)</title><rect x="96.7520%" y="741" width="0.0221%" height="15" fill="rgb(251,220,35)" fg:x="284895" fg:w="65"/><text x="97.0020%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (63 samples, 0.02%)</title><rect x="96.7527%" y="725" width="0.0214%" height="15" fill="rgb(218,117,13)" fg:x="284897" fg:w="63"/><text x="97.0027%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.02%)</title><rect x="96.7527%" y="709" width="0.0214%" height="15" fill="rgb(221,213,40)" fg:x="284897" fg:w="63"/><text x="97.0027%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.02%)</title><rect x="96.7527%" y="693" width="0.0214%" height="15" fill="rgb(251,224,35)" fg:x="284897" fg:w="63"/><text x="97.0027%" y="703.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.02%)</title><rect x="96.7527%" y="677" width="0.0214%" height="15" fill="rgb(241,33,39)" fg:x="284897" fg:w="63"/><text x="97.0027%" y="687.50"></text></g><g><title>malloc (62 samples, 0.02%)</title><rect x="96.7530%" y="661" width="0.0211%" height="15" fill="rgb(222,74,17)" fg:x="284898" fg:w="62"/><text x="97.0030%" y="671.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (148 samples, 0.05%)</title><rect x="96.8043%" y="725" width="0.0503%" height="15" fill="rgb(225,103,0)" fg:x="285049" fg:w="148"/><text x="97.0543%" y="735.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (148 samples, 0.05%)</title><rect x="96.8043%" y="709" width="0.0503%" height="15" fill="rgb(240,0,12)" fg:x="285049" fg:w="148"/><text x="97.0543%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (148 samples, 0.05%)</title><rect x="96.8043%" y="693" width="0.0503%" height="15" fill="rgb(233,213,37)" fg:x="285049" fg:w="148"/><text x="97.0543%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (148 samples, 0.05%)</title><rect x="96.8043%" y="677" width="0.0503%" height="15" fill="rgb(225,84,52)" fg:x="285049" fg:w="148"/><text x="97.0543%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (148 samples, 0.05%)</title><rect x="96.8043%" y="661" width="0.0503%" height="15" fill="rgb(247,160,51)" fg:x="285049" fg:w="148"/><text x="97.0543%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (148 samples, 0.05%)</title><rect x="96.8043%" y="645" width="0.0503%" height="15" fill="rgb(244,60,51)" fg:x="285049" fg:w="148"/><text x="97.0543%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::get (239 samples, 0.08%)</title><rect x="96.7741%" y="741" width="0.0812%" height="15" fill="rgb(233,114,7)" fg:x="284960" fg:w="239"/><text x="97.0241%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (301 samples, 0.10%)</title><rect x="96.8552%" y="741" width="0.1022%" height="15" fill="rgb(246,136,16)" fg:x="285199" fg:w="301"/><text x="97.1052%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (254 samples, 0.09%)</title><rect x="96.8712%" y="725" width="0.0863%" height="15" fill="rgb(243,114,45)" fg:x="285246" fg:w="254"/><text x="97.1212%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (254 samples, 0.09%)</title><rect x="96.8712%" y="709" width="0.0863%" height="15" fill="rgb(247,183,43)" fg:x="285246" fg:w="254"/><text x="97.1212%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (254 samples, 0.09%)</title><rect x="96.8712%" y="693" width="0.0863%" height="15" fill="rgb(251,210,42)" fg:x="285246" fg:w="254"/><text x="97.1212%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (254 samples, 0.09%)</title><rect x="96.8712%" y="677" width="0.0863%" height="15" fill="rgb(221,88,35)" fg:x="285246" fg:w="254"/><text x="97.1212%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (254 samples, 0.09%)</title><rect x="96.8712%" y="661" width="0.0863%" height="15" fill="rgb(242,21,20)" fg:x="285246" fg:w="254"/><text x="97.1212%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.01%)</title><rect x="96.9751%" y="661" width="0.0132%" height="15" fill="rgb(233,226,36)" fg:x="285552" fg:w="39"/><text x="97.2251%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (42 samples, 0.01%)</title><rect x="96.9751%" y="709" width="0.0143%" height="15" fill="rgb(243,189,34)" fg:x="285552" fg:w="42"/><text x="97.2251%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (42 samples, 0.01%)</title><rect x="96.9751%" y="693" width="0.0143%" height="15" fill="rgb(207,145,50)" fg:x="285552" fg:w="42"/><text x="97.2251%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 0.01%)</title><rect x="96.9751%" y="677" width="0.0143%" height="15" fill="rgb(242,1,50)" fg:x="285552" fg:w="42"/><text x="97.2251%" y="687.50"></text></g><g><title>async_io::reactor::Direction::drain_into (78 samples, 0.03%)</title><rect x="96.9687%" y="725" width="0.0265%" height="15" fill="rgb(231,65,32)" fg:x="285533" fg:w="78"/><text x="97.2187%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (125 samples, 0.04%)</title><rect x="96.9999%" y="725" width="0.0425%" height="15" fill="rgb(208,68,49)" fg:x="285625" fg:w="125"/><text x="97.2499%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (33 samples, 0.01%)</title><rect x="97.0556%" y="725" width="0.0112%" height="15" fill="rgb(253,54,49)" fg:x="285789" fg:w="33"/><text x="97.3056%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (33 samples, 0.01%)</title><rect x="97.0556%" y="709" width="0.0112%" height="15" fill="rgb(245,186,24)" fg:x="285789" fg:w="33"/><text x="97.3056%" y="719.50"></text></g><g><title>polling::epoll::Events::iter (30 samples, 0.01%)</title><rect x="97.1049%" y="709" width="0.0102%" height="15" fill="rgb(209,2,41)" fg:x="285934" fg:w="30"/><text x="97.3549%" y="719.50"></text></g><g><title>polling::Poller::wait (177 samples, 0.06%)</title><rect x="97.0668%" y="725" width="0.0601%" height="15" fill="rgb(242,208,54)" fg:x="285822" fg:w="177"/><text x="97.3168%" y="735.50"></text></g><g><title>core::task::wake::Waker::wake (129 samples, 0.04%)</title><rect x="97.1483%" y="581" width="0.0438%" height="15" fill="rgb(225,9,51)" fg:x="286062" fg:w="129"/><text x="97.3983%" y="591.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (129 samples, 0.04%)</title><rect x="97.1483%" y="565" width="0.0438%" height="15" fill="rgb(207,207,25)" fg:x="286062" fg:w="129"/><text x="97.3983%" y="575.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (127 samples, 0.04%)</title><rect x="97.1490%" y="549" width="0.0431%" height="15" fill="rgb(253,96,18)" fg:x="286064" fg:w="127"/><text x="97.3990%" y="559.50"></text></g><g><title>parking::Unparker::unpark (127 samples, 0.04%)</title><rect x="97.1490%" y="533" width="0.0431%" height="15" fill="rgb(252,215,20)" fg:x="286064" fg:w="127"/><text x="97.3990%" y="543.50"></text></g><g><title>parking::Inner::unpark (116 samples, 0.04%)</title><rect x="97.1527%" y="517" width="0.0394%" height="15" fill="rgb(245,227,26)" fg:x="286075" fg:w="116"/><text x="97.4027%" y="527.50"></text></g><g><title>syscall (105 samples, 0.04%)</title><rect x="97.1565%" y="501" width="0.0357%" height="15" fill="rgb(241,208,0)" fg:x="286086" fg:w="105"/><text x="97.4065%" y="511.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="97.1568%" y="485" width="0.0353%" height="15" fill="rgb(224,130,10)" fg:x="286087" fg:w="104"/><text x="97.4068%" y="495.50"></text></g><g><title>[unknown] (103 samples, 0.03%)</title><rect x="97.1572%" y="469" width="0.0350%" height="15" fill="rgb(237,29,0)" fg:x="286088" fg:w="103"/><text x="97.4072%" y="479.50"></text></g><g><title>[unknown] (103 samples, 0.03%)</title><rect x="97.1572%" y="453" width="0.0350%" height="15" fill="rgb(219,27,41)" fg:x="286088" fg:w="103"/><text x="97.4072%" y="463.50"></text></g><g><title>[unknown] (100 samples, 0.03%)</title><rect x="97.1582%" y="437" width="0.0340%" height="15" fill="rgb(245,101,19)" fg:x="286091" fg:w="100"/><text x="97.4082%" y="447.50"></text></g><g><title>[unknown] (98 samples, 0.03%)</title><rect x="97.1589%" y="421" width="0.0333%" height="15" fill="rgb(243,44,37)" fg:x="286093" fg:w="98"/><text x="97.4089%" y="431.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="97.1697%" y="405" width="0.0224%" height="15" fill="rgb(228,213,43)" fg:x="286125" fg:w="66"/><text x="97.4197%" y="415.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="97.1748%" y="389" width="0.0173%" height="15" fill="rgb(219,163,21)" fg:x="286140" fg:w="51"/><text x="97.4248%" y="399.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="97.1782%" y="373" width="0.0139%" height="15" fill="rgb(234,86,24)" fg:x="286150" fg:w="41"/><text x="97.4282%" y="383.50"></text></g><g><title>async_executor::State::notify (151 samples, 0.05%)</title><rect x="97.1415%" y="597" width="0.0513%" height="15" fill="rgb(225,10,24)" fg:x="286042" fg:w="151"/><text x="97.3915%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (146 samples, 0.05%)</title><rect x="97.1928%" y="597" width="0.0496%" height="15" fill="rgb(218,109,7)" fg:x="286193" fg:w="146"/><text x="97.4428%" y="607.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (123 samples, 0.04%)</title><rect x="97.2006%" y="581" width="0.0418%" height="15" fill="rgb(210,20,26)" fg:x="286216" fg:w="123"/><text x="97.4506%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (56 samples, 0.02%)</title><rect x="97.2234%" y="565" width="0.0190%" height="15" fill="rgb(216,18,1)" fg:x="286283" fg:w="56"/><text x="97.4734%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_or (56 samples, 0.02%)</title><rect x="97.2234%" y="549" width="0.0190%" height="15" fill="rgb(206,163,23)" fg:x="286283" fg:w="56"/><text x="97.4734%" y="559.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (301 samples, 0.10%)</title><rect x="97.1405%" y="613" width="0.1022%" height="15" fill="rgb(229,150,31)" fg:x="286039" fg:w="301"/><text x="97.3905%" y="623.50"></text></g><g><title>std::panic::catch_unwind (430 samples, 0.15%)</title><rect x="97.1327%" y="725" width="0.1460%" height="15" fill="rgb(231,10,5)" fg:x="286016" fg:w="430"/><text x="97.3827%" y="735.50"></text></g><g><title>std::panicking::try (430 samples, 0.15%)</title><rect x="97.1327%" y="709" width="0.1460%" height="15" fill="rgb(250,40,50)" fg:x="286016" fg:w="430"/><text x="97.3827%" y="719.50"></text></g><g><title>std::panicking::try::do_call (430 samples, 0.15%)</title><rect x="97.1327%" y="693" width="0.1460%" height="15" fill="rgb(217,119,7)" fg:x="286016" fg:w="430"/><text x="97.3827%" y="703.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (430 samples, 0.15%)</title><rect x="97.1327%" y="677" width="0.1460%" height="15" fill="rgb(245,214,40)" fg:x="286016" fg:w="430"/><text x="97.3827%" y="687.50"></text></g><g><title>core::task::wake::Waker::wake (430 samples, 0.15%)</title><rect x="97.1327%" y="661" width="0.1460%" height="15" fill="rgb(216,187,1)" fg:x="286016" fg:w="430"/><text x="97.3827%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (430 samples, 0.15%)</title><rect x="97.1327%" y="645" width="0.1460%" height="15" fill="rgb(237,146,21)" fg:x="286016" fg:w="430"/><text x="97.3827%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (411 samples, 0.14%)</title><rect x="97.1392%" y="629" width="0.1396%" height="15" fill="rgb(210,174,47)" fg:x="286035" fg:w="411"/><text x="97.3892%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (106 samples, 0.04%)</title><rect x="97.2427%" y="613" width="0.0360%" height="15" fill="rgb(218,111,39)" fg:x="286340" fg:w="106"/><text x="97.4927%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (106 samples, 0.04%)</title><rect x="97.2427%" y="597" width="0.0360%" height="15" fill="rgb(224,95,19)" fg:x="286340" fg:w="106"/><text x="97.4927%" y="607.50"></text></g><g><title>async_io::reactor::ReactorLock::react (982 samples, 0.33%)</title><rect x="96.9575%" y="741" width="0.3335%" height="15" fill="rgb(234,15,38)" fg:x="285500" fg:w="982"/><text x="97.2075%" y="751.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (36 samples, 0.01%)</title><rect x="97.2787%" y="725" width="0.0122%" height="15" fill="rgb(246,56,12)" fg:x="286446" fg:w="36"/><text x="97.5287%" y="735.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (34 samples, 0.01%)</title><rect x="97.2794%" y="709" width="0.0115%" height="15" fill="rgb(247,16,17)" fg:x="286448" fg:w="34"/><text x="97.5294%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (34 samples, 0.01%)</title><rect x="97.2794%" y="693" width="0.0115%" height="15" fill="rgb(215,151,11)" fg:x="286448" fg:w="34"/><text x="97.5294%" y="703.50"></text></g><g><title>std::sync::poison::Flag::done (94 samples, 0.03%)</title><rect x="97.3555%" y="677" width="0.0319%" height="15" fill="rgb(225,16,24)" fg:x="286672" fg:w="94"/><text x="97.6055%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (96 samples, 0.03%)</title><rect x="97.3555%" y="709" width="0.0326%" height="15" fill="rgb(217,117,5)" fg:x="286672" fg:w="96"/><text x="97.6055%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (96 samples, 0.03%)</title><rect x="97.3555%" y="693" width="0.0326%" height="15" fill="rgb(246,187,53)" fg:x="286672" fg:w="96"/><text x="97.6055%" y="703.50"></text></g><g><title>std::sys::unix::futex::futex_wait (3,560 samples, 1.21%)</title><rect x="97.4370%" y="645" width="1.2090%" height="15" fill="rgb(241,71,40)" fg:x="286912" fg:w="3560"/><text x="97.6870%" y="655.50"></text></g><g><title>syscall (3,443 samples, 1.17%)</title><rect x="97.4767%" y="629" width="1.1693%" height="15" fill="rgb(231,67,39)" fg:x="287029" fg:w="3443"/><text x="97.7267%" y="639.50"></text></g><g><title>[unknown] (3,408 samples, 1.16%)</title><rect x="97.4886%" y="613" width="1.1574%" height="15" fill="rgb(222,120,24)" fg:x="287064" fg:w="3408"/><text x="97.7386%" y="623.50"></text></g><g><title>[unknown] (3,366 samples, 1.14%)</title><rect x="97.5029%" y="597" width="1.1431%" height="15" fill="rgb(248,3,3)" fg:x="287106" fg:w="3366"/><text x="97.7529%" y="607.50"></text></g><g><title>[unknown] (3,349 samples, 1.14%)</title><rect x="97.5087%" y="581" width="1.1373%" height="15" fill="rgb(228,218,5)" fg:x="287123" fg:w="3349"/><text x="97.7587%" y="591.50"></text></g><g><title>[unknown] (3,258 samples, 1.11%)</title><rect x="97.5396%" y="565" width="1.1064%" height="15" fill="rgb(212,202,43)" fg:x="287214" fg:w="3258"/><text x="97.7896%" y="575.50"></text></g><g><title>[unknown] (3,047 samples, 1.03%)</title><rect x="97.6112%" y="549" width="1.0348%" height="15" fill="rgb(235,183,2)" fg:x="287425" fg:w="3047"/><text x="97.8612%" y="559.50"></text></g><g><title>[unknown] (2,808 samples, 0.95%)</title><rect x="97.6924%" y="533" width="0.9536%" height="15" fill="rgb(230,165,10)" fg:x="287664" fg:w="2808"/><text x="97.9424%" y="543.50"></text></g><g><title>[unknown] (2,724 samples, 0.93%)</title><rect x="97.7209%" y="517" width="0.9251%" height="15" fill="rgb(219,54,40)" fg:x="287748" fg:w="2724"/><text x="97.9709%" y="527.50"></text></g><g><title>[unknown] (2,301 samples, 0.78%)</title><rect x="97.8646%" y="501" width="0.7814%" height="15" fill="rgb(244,73,9)" fg:x="288171" fg:w="2301"/><text x="98.1146%" y="511.50"></text></g><g><title>[unknown] (1,820 samples, 0.62%)</title><rect x="98.0279%" y="485" width="0.6181%" height="15" fill="rgb(212,32,45)" fg:x="288652" fg:w="1820"/><text x="98.2779%" y="495.50"></text></g><g><title>[unknown] (1,451 samples, 0.49%)</title><rect x="98.1532%" y="469" width="0.4928%" height="15" fill="rgb(205,58,31)" fg:x="289021" fg:w="1451"/><text x="98.4032%" y="479.50"></text></g><g><title>[unknown] (934 samples, 0.32%)</title><rect x="98.3288%" y="453" width="0.3172%" height="15" fill="rgb(250,120,43)" fg:x="289538" fg:w="934"/><text x="98.5788%" y="463.50"></text></g><g><title>[unknown] (450 samples, 0.15%)</title><rect x="98.4932%" y="437" width="0.1528%" height="15" fill="rgb(235,13,10)" fg:x="290022" fg:w="450"/><text x="98.7432%" y="447.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="98.6253%" y="421" width="0.0207%" height="15" fill="rgb(232,219,31)" fg:x="290411" fg:w="61"/><text x="98.8753%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (55 samples, 0.02%)</title><rect x="98.6460%" y="645" width="0.0187%" height="15" fill="rgb(218,157,51)" fg:x="290472" fg:w="55"/><text x="98.8960%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (3,723 samples, 1.26%)</title><rect x="97.4024%" y="677" width="1.2644%" height="15" fill="rgb(211,91,52)" fg:x="286810" fg:w="3723"/><text x="97.6524%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (3,648 samples, 1.24%)</title><rect x="97.4278%" y="661" width="1.2389%" height="15" fill="rgb(240,173,1)" fg:x="286885" fg:w="3648"/><text x="97.6778%" y="671.50"></text></g><g><title>std::sync::condvar::Condvar::wait (3,821 samples, 1.30%)</title><rect x="97.3898%" y="709" width="1.2976%" height="15" fill="rgb(248,20,47)" fg:x="286773" fg:w="3821"/><text x="97.6398%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (3,815 samples, 1.30%)</title><rect x="97.3918%" y="693" width="1.2956%" height="15" fill="rgb(217,221,40)" fg:x="286779" fg:w="3815"/><text x="97.6418%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw (32 samples, 0.01%)</title><rect x="98.6766%" y="677" width="0.0109%" height="15" fill="rgb(226,149,51)" fg:x="290562" fg:w="32"/><text x="98.9266%" y="687.50"></text></g><g><title>parking::Parker::park (4,093 samples, 1.39%)</title><rect x="97.3052%" y="741" width="1.3900%" height="15" fill="rgb(252,193,7)" fg:x="286524" fg:w="4093"/><text x="97.5552%" y="751.50"></text></g><g><title>parking::Inner::park (4,070 samples, 1.38%)</title><rect x="97.3130%" y="725" width="1.3822%" height="15" fill="rgb(205,123,0)" fg:x="286547" fg:w="4070"/><text x="97.5630%" y="735.50"></text></g><g><title>parking::Parker::park_timeout (160 samples, 0.05%)</title><rect x="98.6952%" y="741" width="0.0543%" height="15" fill="rgb(233,173,25)" fg:x="290617" fg:w="160"/><text x="98.9452%" y="751.50"></text></g><g><title>parking::Inner::park (101 samples, 0.03%)</title><rect x="98.7153%" y="725" width="0.0343%" height="15" fill="rgb(216,63,32)" fg:x="290676" fg:w="101"/><text x="98.9653%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (60 samples, 0.02%)</title><rect x="98.7292%" y="709" width="0.0204%" height="15" fill="rgb(209,56,45)" fg:x="290717" fg:w="60"/><text x="98.9792%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (60 samples, 0.02%)</title><rect x="98.7292%" y="693" width="0.0204%" height="15" fill="rgb(226,111,49)" fg:x="290717" fg:w="60"/><text x="98.9792%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (69 samples, 0.02%)</title><rect x="98.7553%" y="709" width="0.0234%" height="15" fill="rgb(244,181,21)" fg:x="290794" fg:w="69"/><text x="99.0053%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (67 samples, 0.02%)</title><rect x="98.7560%" y="693" width="0.0228%" height="15" fill="rgb(222,126,15)" fg:x="290796" fg:w="67"/><text x="99.0060%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.02%)</title><rect x="98.7560%" y="677" width="0.0228%" height="15" fill="rgb(222,95,17)" fg:x="290796" fg:w="67"/><text x="99.0060%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.02%)</title><rect x="98.7560%" y="661" width="0.0228%" height="15" fill="rgb(254,46,5)" fg:x="290796" fg:w="67"/><text x="99.0060%" y="671.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.02%)</title><rect x="98.7560%" y="645" width="0.0228%" height="15" fill="rgb(236,216,35)" fg:x="290796" fg:w="67"/><text x="99.0060%" y="655.50"></text></g><g><title>malloc (67 samples, 0.02%)</title><rect x="98.7560%" y="629" width="0.0228%" height="15" fill="rgb(217,187,26)" fg:x="290796" fg:w="67"/><text x="99.0060%" y="639.50"></text></g><g><title>parking::Parker::new (70 samples, 0.02%)</title><rect x="98.7553%" y="725" width="0.0238%" height="15" fill="rgb(207,192,25)" fg:x="290794" fg:w="70"/><text x="99.0053%" y="735.50"></text></g><g><title>parking::pair (73 samples, 0.02%)</title><rect x="98.7553%" y="741" width="0.0248%" height="15" fill="rgb(253,135,27)" fg:x="290794" fg:w="73"/><text x="99.0053%" y="751.50"></text></g><g><title>std::time::Instant::elapsed (44 samples, 0.01%)</title><rect x="98.7835%" y="741" width="0.0149%" height="15" fill="rgb(211,122,29)" fg:x="290877" fg:w="44"/><text x="99.0335%" y="751.50"></text></g><g><title>async_io::driver::block_on (34,485 samples, 11.71%)</title><rect x="87.0997%" y="757" width="11.7113%" height="15" fill="rgb(233,162,40)" fg:x="256473" fg:w="34485"/><text x="87.3497%" y="767.50">async_io::driver:..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (34,495 samples, 11.71%)</title><rect x="87.0970%" y="773" width="11.7147%" height="15" fill="rgb(222,184,47)" fg:x="256465" fg:w="34495"/><text x="87.3470%" y="783.50">async_global_exec..</text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (58 samples, 0.02%)</title><rect x="98.8236%" y="661" width="0.0197%" height="15" fill="rgb(249,99,23)" fg:x="290995" fg:w="58"/><text x="99.0736%" y="671.50"></text></g><g><title>__cxa_thread_atexit_impl (58 samples, 0.02%)</title><rect x="98.8236%" y="645" width="0.0197%" height="15" fill="rgb(214,60,12)" fg:x="290995" fg:w="58"/><text x="99.0736%" y="655.50"></text></g><g><title>async_global_executor::reactor::block_on (34,619 samples, 11.76%)</title><rect x="87.0878%" y="789" width="11.7568%" height="15" fill="rgb(250,229,36)" fg:x="256438" fg:w="34619"/><text x="87.3378%" y="799.50">async_global_exec..</text></g><g><title>tokio::runtime::handle::Handle::enter (94 samples, 0.03%)</title><rect x="98.8127%" y="773" width="0.0319%" height="15" fill="rgb(232,195,10)" fg:x="290963" fg:w="94"/><text x="99.0627%" y="783.50"></text></g><g><title>tokio::runtime::context::enter (66 samples, 0.02%)</title><rect x="98.8222%" y="757" width="0.0224%" height="15" fill="rgb(205,213,31)" fg:x="290991" fg:w="66"/><text x="99.0722%" y="767.50"></text></g><g><title>tokio::runtime::context::try_enter (64 samples, 0.02%)</title><rect x="98.8229%" y="741" width="0.0217%" height="15" fill="rgb(237,43,8)" fg:x="290993" fg:w="64"/><text x="99.0729%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (63 samples, 0.02%)</title><rect x="98.8233%" y="725" width="0.0214%" height="15" fill="rgb(216,208,3)" fg:x="290994" fg:w="63"/><text x="99.0733%" y="735.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (63 samples, 0.02%)</title><rect x="98.8233%" y="709" width="0.0214%" height="15" fill="rgb(228,179,44)" fg:x="290994" fg:w="63"/><text x="99.0733%" y="719.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (63 samples, 0.02%)</title><rect x="98.8233%" y="693" width="0.0214%" height="15" fill="rgb(230,192,27)" fg:x="290994" fg:w="63"/><text x="99.0733%" y="703.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (62 samples, 0.02%)</title><rect x="98.8236%" y="677" width="0.0211%" height="15" fill="rgb(251,30,38)" fg:x="290995" fg:w="62"/><text x="99.0736%" y="687.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (34,626 samples, 11.76%)</title><rect x="87.0865%" y="805" width="11.7592%" height="15" fill="rgb(246,55,52)" fg:x="256434" fg:w="34626"/><text x="87.3365%" y="815.50">async_global_exec..</text></g><g><title>__libc_calloc (91 samples, 0.03%)</title><rect x="98.8633%" y="757" width="0.0309%" height="15" fill="rgb(249,79,26)" fg:x="291112" fg:w="91"/><text x="99.1133%" y="767.50"></text></g><g><title>__cxa_thread_atexit_impl (189 samples, 0.06%)</title><rect x="98.8498%" y="773" width="0.0642%" height="15" fill="rgb(220,202,16)" fg:x="291072" fg:w="189"/><text x="99.0998%" y="783.50"></text></g><g><title>pthread_mutex_lock (42 samples, 0.01%)</title><rect x="98.8997%" y="757" width="0.0143%" height="15" fill="rgb(250,170,23)" fg:x="291219" fg:w="42"/><text x="99.1497%" y="767.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (208 samples, 0.07%)</title><rect x="98.8457%" y="805" width="0.0706%" height="15" fill="rgb(230,7,37)" fg:x="291060" fg:w="208"/><text x="99.0957%" y="815.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (206 samples, 0.07%)</title><rect x="98.8464%" y="789" width="0.0700%" height="15" fill="rgb(213,71,1)" fg:x="291062" fg:w="206"/><text x="99.0964%" y="799.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (34,884 samples, 11.85%)</title><rect x="87.0732%" y="869" width="11.8468%" height="15" fill="rgb(227,87,39)" fg:x="256395" fg:w="34884"/><text x="87.3232%" y="879.50">async_std::task::b..</text></g><g><title>async_global_executor::executor::block_on (34,884 samples, 11.85%)</title><rect x="87.0732%" y="853" width="11.8468%" height="15" fill="rgb(210,41,29)" fg:x="256395" fg:w="34884"/><text x="87.3232%" y="863.50">async_global_execu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34,880 samples, 11.85%)</title><rect x="87.0746%" y="837" width="11.8455%" height="15" fill="rgb(206,191,31)" fg:x="256399" fg:w="34880"/><text x="87.3246%" y="847.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34,854 samples, 11.84%)</title><rect x="87.0834%" y="821" width="11.8366%" height="15" fill="rgb(247,75,54)" fg:x="256425" fg:w="34854"/><text x="87.3334%" y="831.50">std::thread::local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (34,885 samples, 11.85%)</title><rect x="87.0732%" y="885" width="11.8472%" height="15" fill="rgb(208,54,50)" fg:x="256395" fg:w="34885"/><text x="87.3232%" y="895.50">async_std::task::t..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (34,935 samples, 11.86%)</title><rect x="87.0566%" y="949" width="11.8641%" height="15" fill="rgb(214,90,37)" fg:x="256346" fg:w="34935"/><text x="87.3066%" y="959.50">async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (34,933 samples, 11.86%)</title><rect x="87.0573%" y="933" width="11.8635%" height="15" fill="rgb(220,132,6)" fg:x="256348" fg:w="34933"/><text x="87.3073%" y="943.50">async_std::task::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34,919 samples, 11.86%)</title><rect x="87.0620%" y="917" width="11.8587%" height="15" fill="rgb(213,167,7)" fg:x="256362" fg:w="34919"/><text x="87.3120%" y="927.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34,909 samples, 11.86%)</title><rect x="87.0654%" y="901" width="11.8553%" height="15" fill="rgb(243,36,27)" fg:x="256372" fg:w="34909"/><text x="87.3154%" y="911.50">std::thread::local..</text></g><g><title>async_std::task::builder::Builder::blocking (35,019 samples, 11.89%)</title><rect x="87.0288%" y="997" width="11.8927%" height="15" fill="rgb(235,147,12)" fg:x="256264" fg:w="35019"/><text x="87.2788%" y="1007.50">async_std::task::b..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34,971 samples, 11.88%)</title><rect x="87.0451%" y="981" width="11.8764%" height="15" fill="rgb(212,198,44)" fg:x="256312" fg:w="34971"/><text x="87.2951%" y="991.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34,963 samples, 11.87%)</title><rect x="87.0478%" y="965" width="11.8736%" height="15" fill="rgb(218,68,50)" fg:x="256320" fg:w="34963"/><text x="87.2978%" y="975.50">std::thread::local..</text></g><g><title>std::panic::catch_unwind (45,427 samples, 15.43%)</title><rect x="83.4945%" y="1125" width="15.4273%" height="15" fill="rgb(224,79,48)" fg:x="245857" fg:w="45427"/><text x="83.7445%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (45,427 samples, 15.43%)</title><rect x="83.4945%" y="1109" width="15.4273%" height="15" fill="rgb(213,191,50)" fg:x="245857" fg:w="45427"/><text x="83.7445%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (45,427 samples, 15.43%)</title><rect x="83.4945%" y="1093" width="15.4273%" height="15" fill="rgb(254,146,10)" fg:x="245857" fg:w="45427"/><text x="83.7445%" y="1103.50">std::panicking::try::do_..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45,427 samples, 15.43%)</title><rect x="83.4945%" y="1077" width="15.4273%" height="15" fill="rgb(215,175,11)" fg:x="245857" fg:w="45427"/><text x="83.7445%" y="1087.50">&lt;core::panic::unwind_saf..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (45,427 samples, 15.43%)</title><rect x="83.4945%" y="1061" width="15.4273%" height="15" fill="rgb(207,49,7)" fg:x="245857" fg:w="45427"/><text x="83.7445%" y="1071.50">std::thread::Builder::sp..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45,426 samples, 15.43%)</title><rect x="83.4948%" y="1045" width="15.4269%" height="15" fill="rgb(234,144,29)" fg:x="245858" fg:w="45426"/><text x="83.7448%" y="1055.50">std::sys_common::backtra..</text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (35,022 samples, 11.89%)</title><rect x="87.0281%" y="1029" width="11.8937%" height="15" fill="rgb(213,222,48)" fg:x="256262" fg:w="35022"/><text x="87.2781%" y="1039.50">zenoh_transport::m..</text></g><g><title>async_std::task::block_on::block_on (35,022 samples, 11.89%)</title><rect x="87.0281%" y="1013" width="11.8937%" height="15" fill="rgb(222,8,6)" fg:x="256262" fg:w="35022"/><text x="87.2781%" y="1023.50">async_std::task::b..</text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="99.0725%" y="1029" width="0.0146%" height="15" fill="rgb(221,114,49)" fg:x="291728" fg:w="43"/><text x="99.3225%" y="1039.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="99.0725%" y="1013" width="0.0146%" height="15" fill="rgb(250,140,42)" fg:x="291728" fg:w="43"/><text x="99.3225%" y="1023.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="99.0725%" y="997" width="0.0146%" height="15" fill="rgb(250,150,27)" fg:x="291728" fg:w="43"/><text x="99.3225%" y="1007.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="99.0725%" y="981" width="0.0146%" height="15" fill="rgb(252,159,3)" fg:x="291728" fg:w="43"/><text x="99.3225%" y="991.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="99.0732%" y="965" width="0.0139%" height="15" fill="rgb(241,182,3)" fg:x="291730" fg:w="41"/><text x="99.3232%" y="975.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="99.0732%" y="949" width="0.0139%" height="15" fill="rgb(236,3,9)" fg:x="291730" fg:w="41"/><text x="99.3232%" y="959.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="99.0736%" y="933" width="0.0136%" height="15" fill="rgb(223,227,51)" fg:x="291731" fg:w="40"/><text x="99.3236%" y="943.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="99.0739%" y="917" width="0.0132%" height="15" fill="rgb(232,133,30)" fg:x="291732" fg:w="39"/><text x="99.3239%" y="927.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="99.0753%" y="901" width="0.0119%" height="15" fill="rgb(209,93,27)" fg:x="291736" fg:w="35"/><text x="99.3253%" y="911.50"></text></g><g><title>__mmap (130 samples, 0.04%)</title><rect x="99.0871%" y="1029" width="0.0441%" height="15" fill="rgb(208,108,34)" fg:x="291771" fg:w="130"/><text x="99.3371%" y="1039.50"></text></g><g><title>[unknown] (130 samples, 0.04%)</title><rect x="99.0871%" y="1013" width="0.0441%" height="15" fill="rgb(215,189,13)" fg:x="291771" fg:w="130"/><text x="99.3371%" y="1023.50"></text></g><g><title>[unknown] (129 samples, 0.04%)</title><rect x="99.0875%" y="997" width="0.0438%" height="15" fill="rgb(206,88,23)" fg:x="291772" fg:w="129"/><text x="99.3375%" y="1007.50"></text></g><g><title>[unknown] (129 samples, 0.04%)</title><rect x="99.0875%" y="981" width="0.0438%" height="15" fill="rgb(240,173,0)" fg:x="291772" fg:w="129"/><text x="99.3375%" y="991.50"></text></g><g><title>[unknown] (123 samples, 0.04%)</title><rect x="99.0895%" y="965" width="0.0418%" height="15" fill="rgb(223,106,52)" fg:x="291778" fg:w="123"/><text x="99.3395%" y="975.50"></text></g><g><title>[unknown] (102 samples, 0.03%)</title><rect x="99.0966%" y="949" width="0.0346%" height="15" fill="rgb(206,130,16)" fg:x="291799" fg:w="102"/><text x="99.3466%" y="959.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="99.1048%" y="933" width="0.0265%" height="15" fill="rgb(220,54,25)" fg:x="291823" fg:w="78"/><text x="99.3548%" y="943.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="99.1187%" y="917" width="0.0126%" height="15" fill="rgb(210,4,38)" fg:x="291864" fg:w="37"/><text x="99.3687%" y="927.50"></text></g><g><title>__mprotect (31 samples, 0.01%)</title><rect x="99.1313%" y="1029" width="0.0105%" height="15" fill="rgb(238,94,39)" fg:x="291901" fg:w="31"/><text x="99.3813%" y="1039.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="99.1313%" y="1013" width="0.0105%" height="15" fill="rgb(234,124,34)" fg:x="291901" fg:w="31"/><text x="99.3813%" y="1023.50"></text></g><g><title>[libc.so.6] (233 samples, 0.08%)</title><rect x="99.0691%" y="1045" width="0.0791%" height="15" fill="rgb(221,91,40)" fg:x="291718" fg:w="233"/><text x="99.3191%" y="1055.50"></text></g><g><title>[libc.so.6] (498 samples, 0.17%)</title><rect x="98.9900%" y="1061" width="0.1691%" height="15" fill="rgb(246,53,28)" fg:x="291485" fg:w="498"/><text x="99.2400%" y="1071.50"></text></g><g><title>[libc.so.6] (615 samples, 0.21%)</title><rect x="98.9533%" y="1077" width="0.2089%" height="15" fill="rgb(229,109,7)" fg:x="291377" fg:w="615"/><text x="99.2033%" y="1087.50"></text></g><g><title>malloc (643 samples, 0.22%)</title><rect x="98.9452%" y="1093" width="0.2184%" height="15" fill="rgb(249,117,8)" fg:x="291353" fg:w="643"/><text x="99.1952%" y="1103.50"></text></g><g><title>[libc.so.6] (55 samples, 0.02%)</title><rect x="99.1883%" y="1045" width="0.0187%" height="15" fill="rgb(210,181,1)" fg:x="292069" fg:w="55"/><text x="99.4383%" y="1055.50"></text></g><g><title>[libc.so.6] (100 samples, 0.03%)</title><rect x="99.1748%" y="1077" width="0.0340%" height="15" fill="rgb(211,66,1)" fg:x="292029" fg:w="100"/><text x="99.4248%" y="1087.50"></text></g><g><title>__libc_calloc (81 samples, 0.03%)</title><rect x="99.1812%" y="1061" width="0.0275%" height="15" fill="rgb(221,90,14)" fg:x="292048" fg:w="81"/><text x="99.4312%" y="1071.50"></text></g><g><title>pthread_attr_setaffinity_np (121 samples, 0.04%)</title><rect x="99.1734%" y="1093" width="0.0411%" height="15" fill="rgb(219,222,44)" fg:x="292025" fg:w="121"/><text x="99.4234%" y="1103.50"></text></g><g><title>pthread_getaffinity_np (226 samples, 0.08%)</title><rect x="99.2145%" y="1093" width="0.0768%" height="15" fill="rgb(246,34,33)" fg:x="292146" fg:w="226"/><text x="99.4645%" y="1103.50"></text></g><g><title>[unknown] (201 samples, 0.07%)</title><rect x="99.2230%" y="1077" width="0.0683%" height="15" fill="rgb(227,135,41)" fg:x="292171" fg:w="201"/><text x="99.4730%" y="1087.50"></text></g><g><title>[unknown] (191 samples, 0.06%)</title><rect x="99.2264%" y="1061" width="0.0649%" height="15" fill="rgb(226,15,14)" fg:x="292181" fg:w="191"/><text x="99.4764%" y="1071.50"></text></g><g><title>[unknown] (189 samples, 0.06%)</title><rect x="99.2271%" y="1045" width="0.0642%" height="15" fill="rgb(236,148,47)" fg:x="292183" fg:w="189"/><text x="99.4771%" y="1055.50"></text></g><g><title>[unknown] (179 samples, 0.06%)</title><rect x="99.2305%" y="1029" width="0.0608%" height="15" fill="rgb(233,162,52)" fg:x="292193" fg:w="179"/><text x="99.4805%" y="1039.50"></text></g><g><title>[unknown] (163 samples, 0.06%)</title><rect x="99.2359%" y="1013" width="0.0554%" height="15" fill="rgb(244,35,28)" fg:x="292209" fg:w="163"/><text x="99.4859%" y="1023.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="99.2522%" y="997" width="0.0391%" height="15" fill="rgb(205,121,10)" fg:x="292257" fg:w="115"/><text x="99.5022%" y="1007.50"></text></g><g><title>pthread_getattr_np (1,092 samples, 0.37%)</title><rect x="98.9296%" y="1109" width="0.3708%" height="15" fill="rgb(250,58,18)" fg:x="291307" fg:w="1092"/><text x="99.1796%" y="1119.50"></text></g><g><title>std::sys::unix::thread::guard::current (1,129 samples, 0.38%)</title><rect x="98.9218%" y="1125" width="0.3834%" height="15" fill="rgb(216,37,13)" fg:x="291284" fg:w="1129"/><text x="99.1718%" y="1135.50"></text></g><g><title>__cxa_thread_atexit_impl (90 samples, 0.03%)</title><rect x="99.3075%" y="1045" width="0.0306%" height="15" fill="rgb(221,215,42)" fg:x="292420" fg:w="90"/><text x="99.5575%" y="1055.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (98 samples, 0.03%)</title><rect x="99.3065%" y="1077" width="0.0333%" height="15" fill="rgb(217,214,19)" fg:x="292417" fg:w="98"/><text x="99.5565%" y="1087.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (95 samples, 0.03%)</title><rect x="99.3075%" y="1061" width="0.0323%" height="15" fill="rgb(233,139,13)" fg:x="292420" fg:w="95"/><text x="99.5575%" y="1071.50"></text></g><g><title>std::sys_common::thread_info::set (105 samples, 0.04%)</title><rect x="99.3052%" y="1125" width="0.0357%" height="15" fill="rgb(247,168,23)" fg:x="292413" fg:w="105"/><text x="99.5552%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (103 samples, 0.03%)</title><rect x="99.3058%" y="1109" width="0.0350%" height="15" fill="rgb(207,202,1)" fg:x="292415" fg:w="103"/><text x="99.5558%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (102 samples, 0.03%)</title><rect x="99.3062%" y="1093" width="0.0346%" height="15" fill="rgb(220,155,48)" fg:x="292416" fg:w="102"/><text x="99.5562%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (46,889 samples, 15.92%)</title><rect x="83.4446%" y="1189" width="15.9238%" height="15" fill="rgb(250,43,26)" fg:x="245710" fg:w="46889"/><text x="83.6946%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; ..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (46,880 samples, 15.92%)</title><rect x="83.4476%" y="1173" width="15.9207%" height="15" fill="rgb(212,190,23)" fg:x="245719" fg:w="46880"/><text x="83.6976%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; ..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (46,880 samples, 15.92%)</title><rect x="83.4476%" y="1157" width="15.9207%" height="15" fill="rgb(216,39,24)" fg:x="245719" fg:w="46880"/><text x="83.6976%" y="1167.50">core::ops::function::FnO..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (46,872 samples, 15.92%)</title><rect x="83.4503%" y="1141" width="15.9180%" height="15" fill="rgb(252,113,16)" fg:x="245727" fg:w="46872"/><text x="83.7003%" y="1151.50">std::thread::Builder::sp..</text></g><g><title>std::thread::Thread::cname (81 samples, 0.03%)</title><rect x="99.3408%" y="1125" width="0.0275%" height="15" fill="rgb(208,113,19)" fg:x="292518" fg:w="81"/><text x="99.5908%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (79 samples, 0.03%)</title><rect x="99.3415%" y="1109" width="0.0268%" height="15" fill="rgb(234,107,25)" fg:x="292520" fg:w="79"/><text x="99.5915%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (37 samples, 0.01%)</title><rect x="99.3558%" y="1093" width="0.0126%" height="15" fill="rgb(234,217,51)" fg:x="292562" fg:w="37"/><text x="99.6058%" y="1103.50"></text></g><g><title>sigaltstack (135 samples, 0.05%)</title><rect x="99.3785%" y="1157" width="0.0458%" height="15" fill="rgb(251,29,42)" fg:x="292629" fg:w="135"/><text x="99.6285%" y="1167.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="99.3890%" y="1141" width="0.0353%" height="15" fill="rgb(221,62,51)" fg:x="292660" fg:w="104"/><text x="99.6390%" y="1151.50"></text></g><g><title>[unknown] (98 samples, 0.03%)</title><rect x="99.3911%" y="1125" width="0.0333%" height="15" fill="rgb(240,192,43)" fg:x="292666" fg:w="98"/><text x="99.6411%" y="1135.50"></text></g><g><title>[unknown] (91 samples, 0.03%)</title><rect x="99.3935%" y="1109" width="0.0309%" height="15" fill="rgb(224,157,47)" fg:x="292673" fg:w="91"/><text x="99.6435%" y="1119.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="99.4016%" y="1093" width="0.0228%" height="15" fill="rgb(226,84,45)" fg:x="292697" fg:w="67"/><text x="99.6516%" y="1103.50"></text></g><g><title>__mmap (556 samples, 0.19%)</title><rect x="99.4244%" y="1125" width="0.1888%" height="15" fill="rgb(208,207,23)" fg:x="292764" fg:w="556"/><text x="99.6744%" y="1135.50"></text></g><g><title>[unknown] (554 samples, 0.19%)</title><rect x="99.4250%" y="1109" width="0.1881%" height="15" fill="rgb(253,34,51)" fg:x="292766" fg:w="554"/><text x="99.6750%" y="1119.50"></text></g><g><title>[unknown] (554 samples, 0.19%)</title><rect x="99.4250%" y="1093" width="0.1881%" height="15" fill="rgb(227,26,34)" fg:x="292766" fg:w="554"/><text x="99.6750%" y="1103.50"></text></g><g><title>[unknown] (548 samples, 0.19%)</title><rect x="99.4271%" y="1077" width="0.1861%" height="15" fill="rgb(245,75,19)" fg:x="292772" fg:w="548"/><text x="99.6771%" y="1087.50"></text></g><g><title>[unknown] (523 samples, 0.18%)</title><rect x="99.4356%" y="1061" width="0.1776%" height="15" fill="rgb(250,191,31)" fg:x="292797" fg:w="523"/><text x="99.6856%" y="1071.50"></text></g><g><title>[unknown] (411 samples, 0.14%)</title><rect x="99.4736%" y="1045" width="0.1396%" height="15" fill="rgb(224,11,50)" fg:x="292909" fg:w="411"/><text x="99.7236%" y="1055.50"></text></g><g><title>[unknown] (321 samples, 0.11%)</title><rect x="99.5042%" y="1029" width="0.1090%" height="15" fill="rgb(231,171,7)" fg:x="292999" fg:w="321"/><text x="99.7542%" y="1039.50"></text></g><g><title>[unknown] (129 samples, 0.04%)</title><rect x="99.5694%" y="1013" width="0.0438%" height="15" fill="rgb(252,214,10)" fg:x="293191" fg:w="129"/><text x="99.8194%" y="1023.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="99.5945%" y="997" width="0.0187%" height="15" fill="rgb(249,45,46)" fg:x="293265" fg:w="55"/><text x="99.8445%" y="1007.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="99.6010%" y="981" width="0.0122%" height="15" fill="rgb(240,173,7)" fg:x="293284" fg:w="36"/><text x="99.8510%" y="991.50"></text></g><g><title>__mprotect (572 samples, 0.19%)</title><rect x="99.6132%" y="1125" width="0.1943%" height="15" fill="rgb(235,214,13)" fg:x="293320" fg:w="572"/><text x="99.8632%" y="1135.50"></text></g><g><title>[unknown] (571 samples, 0.19%)</title><rect x="99.6135%" y="1109" width="0.1939%" height="15" fill="rgb(245,156,8)" fg:x="293321" fg:w="571"/><text x="99.8635%" y="1119.50"></text></g><g><title>[unknown] (571 samples, 0.19%)</title><rect x="99.6135%" y="1093" width="0.1939%" height="15" fill="rgb(235,46,12)" fg:x="293321" fg:w="571"/><text x="99.8635%" y="1103.50"></text></g><g><title>[unknown] (571 samples, 0.19%)</title><rect x="99.6135%" y="1077" width="0.1939%" height="15" fill="rgb(221,81,14)" fg:x="293321" fg:w="571"/><text x="99.8635%" y="1087.50"></text></g><g><title>[unknown] (571 samples, 0.19%)</title><rect x="99.6135%" y="1061" width="0.1939%" height="15" fill="rgb(238,207,9)" fg:x="293321" fg:w="571"/><text x="99.8635%" y="1071.50"></text></g><g><title>[unknown] (562 samples, 0.19%)</title><rect x="99.6166%" y="1045" width="0.1909%" height="15" fill="rgb(224,129,35)" fg:x="293330" fg:w="562"/><text x="99.8666%" y="1055.50"></text></g><g><title>[unknown] (533 samples, 0.18%)</title><rect x="99.6264%" y="1029" width="0.1810%" height="15" fill="rgb(243,218,34)" fg:x="293359" fg:w="533"/><text x="99.8764%" y="1039.50"></text></g><g><title>[unknown] (437 samples, 0.15%)</title><rect x="99.6590%" y="1013" width="0.1484%" height="15" fill="rgb(220,166,13)" fg:x="293455" fg:w="437"/><text x="99.9090%" y="1023.50"></text></g><g><title>[unknown] (95 samples, 0.03%)</title><rect x="99.7752%" y="997" width="0.0323%" height="15" fill="rgb(227,167,49)" fg:x="293797" fg:w="95"/><text x="100.0252%" y="1007.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="99.7871%" y="981" width="0.0204%" height="15" fill="rgb(234,142,12)" fg:x="293832" fg:w="60"/><text x="100.0371%" y="991.50"></text></g><g><title>[libc.so.6] (48,837 samples, 16.59%)</title><rect x="83.2646%" y="1221" width="16.5853%" height="15" fill="rgb(207,100,48)" fg:x="245180" fg:w="48837"/><text x="83.5146%" y="1231.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (48,342 samples, 16.42%)</title><rect x="83.4327%" y="1205" width="16.4172%" height="15" fill="rgb(210,25,14)" fg:x="245675" fg:w="48342"/><text x="83.6827%" y="1215.50">std::sys::unix::thread::T..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1,417 samples, 0.48%)</title><rect x="99.3687%" y="1189" width="0.4812%" height="15" fill="rgb(246,116,27)" fg:x="292600" fg:w="1417"/><text x="99.6187%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1,417 samples, 0.48%)</title><rect x="99.3687%" y="1173" width="0.4812%" height="15" fill="rgb(214,193,42)" fg:x="292600" fg:w="1417"/><text x="99.6187%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1,253 samples, 0.43%)</title><rect x="99.4244%" y="1157" width="0.4255%" height="15" fill="rgb(214,122,8)" fg:x="292764" fg:w="1253"/><text x="99.6744%" y="1167.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1,253 samples, 0.43%)</title><rect x="99.4244%" y="1141" width="0.4255%" height="15" fill="rgb(244,173,18)" fg:x="292764" fg:w="1253"/><text x="99.6744%" y="1151.50"></text></g><g><title>std::sys::unix::os::page_size (117 samples, 0.04%)</title><rect x="99.8102%" y="1125" width="0.0397%" height="15" fill="rgb(232,68,19)" fg:x="293900" fg:w="117"/><text x="100.0602%" y="1135.50"></text></g><g><title>__sysconf (116 samples, 0.04%)</title><rect x="99.8105%" y="1109" width="0.0394%" height="15" fill="rgb(236,224,1)" fg:x="293901" fg:w="116"/><text x="100.0605%" y="1119.50"></text></g><g><title>__clone (48,848 samples, 16.59%)</title><rect x="83.2618%" y="1237" width="16.5891%" height="15" fill="rgb(240,11,8)" fg:x="245172" fg:w="48848"/><text x="83.5118%" y="1247.50">__clone</text></g><g><title>async_executor::steal (30 samples, 0.01%)</title><rect x="99.8574%" y="1237" width="0.0102%" height="15" fill="rgb(244,159,20)" fg:x="294039" fg:w="30"/><text x="100.1074%" y="1247.50"></text></g><g><title>async-std/runti (290,456 samples, 98.64%)</title><rect x="1.2402%" y="1253" width="98.6406%" height="15" fill="rgb(240,223,54)" fg:x="3652" fg:w="290456"/><text x="1.4902%" y="1263.50">async-std/runti</text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="99.8893%" y="1205" width="0.0102%" height="15" fill="rgb(237,146,5)" fg:x="294133" fg:w="30"/><text x="100.1393%" y="1215.50"></text></g><g><title>prctl (36 samples, 0.01%)</title><rect x="99.9029%" y="1125" width="0.0122%" height="15" fill="rgb(218,221,32)" fg:x="294173" fg:w="36"/><text x="100.1529%" y="1135.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="99.9032%" y="1109" width="0.0119%" height="15" fill="rgb(244,96,26)" fg:x="294174" fg:w="35"/><text x="100.1532%" y="1119.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="99.9032%" y="1093" width="0.0119%" height="15" fill="rgb(245,184,37)" fg:x="294174" fg:w="35"/><text x="100.1532%" y="1103.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="99.9032%" y="1077" width="0.0119%" height="15" fill="rgb(248,91,47)" fg:x="294174" fg:w="35"/><text x="100.1532%" y="1087.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="99.9036%" y="1061" width="0.0115%" height="15" fill="rgb(243,199,8)" fg:x="294175" fg:w="34"/><text x="100.1536%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42 samples, 0.01%)</title><rect x="99.9025%" y="1189" width="0.0143%" height="15" fill="rgb(249,12,15)" fg:x="294172" fg:w="42"/><text x="100.1525%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42 samples, 0.01%)</title><rect x="99.9025%" y="1173" width="0.0143%" height="15" fill="rgb(245,97,12)" fg:x="294172" fg:w="42"/><text x="100.1525%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (42 samples, 0.01%)</title><rect x="99.9025%" y="1157" width="0.0143%" height="15" fill="rgb(244,61,1)" fg:x="294172" fg:w="42"/><text x="100.1525%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (41 samples, 0.01%)</title><rect x="99.9029%" y="1141" width="0.0139%" height="15" fill="rgb(222,194,10)" fg:x="294173" fg:w="41"/><text x="100.1529%" y="1151.50"></text></g><g><title>__mmap (63 samples, 0.02%)</title><rect x="99.9256%" y="1125" width="0.0214%" height="15" fill="rgb(226,178,8)" fg:x="294240" fg:w="63"/><text x="100.1756%" y="1135.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="99.9256%" y="1109" width="0.0214%" height="15" fill="rgb(241,32,34)" fg:x="294240" fg:w="63"/><text x="100.1756%" y="1119.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="99.9256%" y="1093" width="0.0214%" height="15" fill="rgb(254,26,6)" fg:x="294240" fg:w="63"/><text x="100.1756%" y="1103.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="99.9256%" y="1077" width="0.0214%" height="15" fill="rgb(249,71,11)" fg:x="294240" fg:w="63"/><text x="100.1756%" y="1087.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="99.9277%" y="1061" width="0.0194%" height="15" fill="rgb(232,170,27)" fg:x="294246" fg:w="57"/><text x="100.1777%" y="1071.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.9307%" y="1045" width="0.0163%" height="15" fill="rgb(214,223,17)" fg:x="294255" fg:w="48"/><text x="100.1807%" y="1055.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="99.9355%" y="1029" width="0.0115%" height="15" fill="rgb(250,18,15)" fg:x="294269" fg:w="34"/><text x="100.1855%" y="1039.50"></text></g><g><title>__mprotect (63 samples, 0.02%)</title><rect x="99.9470%" y="1125" width="0.0214%" height="15" fill="rgb(212,153,51)" fg:x="294303" fg:w="63"/><text x="100.1970%" y="1135.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="99.9470%" y="1109" width="0.0214%" height="15" fill="rgb(219,194,12)" fg:x="294303" fg:w="63"/><text x="100.1970%" y="1119.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="99.9470%" y="1093" width="0.0214%" height="15" fill="rgb(212,58,17)" fg:x="294303" fg:w="63"/><text x="100.1970%" y="1103.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="99.9470%" y="1077" width="0.0214%" height="15" fill="rgb(254,5,10)" fg:x="294303" fg:w="63"/><text x="100.1970%" y="1087.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="99.9470%" y="1061" width="0.0214%" height="15" fill="rgb(246,91,7)" fg:x="294303" fg:w="63"/><text x="100.1970%" y="1071.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="99.9474%" y="1045" width="0.0211%" height="15" fill="rgb(218,108,49)" fg:x="294304" fg:w="62"/><text x="100.1974%" y="1055.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="99.9477%" y="1029" width="0.0207%" height="15" fill="rgb(238,123,20)" fg:x="294305" fg:w="61"/><text x="100.1977%" y="1039.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="99.9575%" y="1013" width="0.0109%" height="15" fill="rgb(231,69,23)" fg:x="294334" fg:w="32"/><text x="100.2075%" y="1023.50"></text></g><g><title>[libc.so.6] (243 samples, 0.08%)</title><rect x="99.8893%" y="1221" width="0.0825%" height="15" fill="rgb(230,209,3)" fg:x="294133" fg:w="243"/><text x="100.1393%" y="1231.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (211 samples, 0.07%)</title><rect x="99.9002%" y="1205" width="0.0717%" height="15" fill="rgb(231,19,0)" fg:x="294165" fg:w="211"/><text x="100.1502%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (162 samples, 0.06%)</title><rect x="99.9168%" y="1189" width="0.0550%" height="15" fill="rgb(226,192,25)" fg:x="294214" fg:w="162"/><text x="100.1668%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (162 samples, 0.06%)</title><rect x="99.9168%" y="1173" width="0.0550%" height="15" fill="rgb(223,175,53)" fg:x="294214" fg:w="162"/><text x="100.1668%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (136 samples, 0.05%)</title><rect x="99.9256%" y="1157" width="0.0462%" height="15" fill="rgb(248,35,51)" fg:x="294240" fg:w="136"/><text x="100.1756%" y="1167.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (136 samples, 0.05%)</title><rect x="99.9256%" y="1141" width="0.0462%" height="15" fill="rgb(230,37,26)" fg:x="294240" fg:w="136"/><text x="100.1756%" y="1151.50"></text></g><g><title>__clone (246 samples, 0.08%)</title><rect x="99.8886%" y="1237" width="0.0835%" height="15" fill="rgb(206,120,22)" fg:x="294131" fg:w="246"/><text x="100.1386%" y="1247.50"></text></g><g><title>router-eval-tes (273 samples, 0.09%)</title><rect x="99.8808%" y="1253" width="0.0927%" height="15" fill="rgb(207,165,28)" fg:x="294108" fg:w="273"/><text x="100.1308%" y="1263.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (39 samples, 0.01%)</title><rect x="99.9759%" y="1013" width="0.0132%" height="15" fill="rgb(226,23,46)" fg:x="294388" fg:w="39"/><text x="100.2259%" y="1023.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.01%)</title><rect x="99.9755%" y="1125" width="0.0139%" height="15" fill="rgb(208,130,44)" fg:x="294387" fg:w="41"/><text x="100.2255%" y="1135.50"></text></g><g><title>std::panicking::try (41 samples, 0.01%)</title><rect x="99.9755%" y="1109" width="0.0139%" height="15" fill="rgb(231,67,8)" fg:x="294387" fg:w="41"/><text x="100.2255%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.01%)</title><rect x="99.9755%" y="1093" width="0.0139%" height="15" fill="rgb(205,183,22)" fg:x="294387" fg:w="41"/><text x="100.2255%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41 samples, 0.01%)</title><rect x="99.9755%" y="1077" width="0.0139%" height="15" fill="rgb(224,47,9)" fg:x="294387" fg:w="41"/><text x="100.2255%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (41 samples, 0.01%)</title><rect x="99.9755%" y="1061" width="0.0139%" height="15" fill="rgb(250,183,49)" fg:x="294387" fg:w="41"/><text x="100.2255%" y="1071.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (41 samples, 0.01%)</title><rect x="99.9755%" y="1045" width="0.0139%" height="15" fill="rgb(220,151,39)" fg:x="294387" fg:w="41"/><text x="100.2255%" y="1055.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (41 samples, 0.01%)</title><rect x="99.9755%" y="1029" width="0.0139%" height="15" fill="rgb(220,118,20)" fg:x="294387" fg:w="41"/><text x="100.2255%" y="1039.50"></text></g><g><title>all (294,459 samples, 100%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(231,65,51)" fg:x="0" fg:w="294459"/><text x="0.2500%" y="1279.50"></text></g><g><title>tokio-runtime-w (78 samples, 0.03%)</title><rect x="99.9735%" y="1253" width="0.0265%" height="15" fill="rgb(253,125,37)" fg:x="294381" fg:w="78"/><text x="100.2235%" y="1263.50"></text></g><g><title>__clone (75 samples, 0.03%)</title><rect x="99.9745%" y="1237" width="0.0255%" height="15" fill="rgb(232,102,6)" fg:x="294384" fg:w="75"/><text x="100.2245%" y="1247.50"></text></g><g><title>[libc.so.6] (75 samples, 0.03%)</title><rect x="99.9745%" y="1221" width="0.0255%" height="15" fill="rgb(251,105,13)" fg:x="294384" fg:w="75"/><text x="100.2245%" y="1231.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (75 samples, 0.03%)</title><rect x="99.9745%" y="1205" width="0.0255%" height="15" fill="rgb(222,179,29)" fg:x="294384" fg:w="75"/><text x="100.2245%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75 samples, 0.03%)</title><rect x="99.9745%" y="1189" width="0.0255%" height="15" fill="rgb(229,180,53)" fg:x="294384" fg:w="75"/><text x="100.2245%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75 samples, 0.03%)</title><rect x="99.9745%" y="1173" width="0.0255%" height="15" fill="rgb(238,104,13)" fg:x="294384" fg:w="75"/><text x="100.2245%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (75 samples, 0.03%)</title><rect x="99.9745%" y="1157" width="0.0255%" height="15" fill="rgb(210,130,5)" fg:x="294384" fg:w="75"/><text x="100.2245%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (75 samples, 0.03%)</title><rect x="99.9745%" y="1141" width="0.0255%" height="15" fill="rgb(233,87,49)" fg:x="294384" fg:w="75"/><text x="100.2245%" y="1151.50"></text></g></svg></svg>