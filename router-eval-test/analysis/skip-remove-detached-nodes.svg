<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1334" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1317.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1317.00"> </text><svg id="frames" x="10" width="1180" total_samples="210664"><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (44 samples, 0.02%)</title><rect x="0.0736%" y="885" width="0.0209%" height="15" fill="rgb(227,0,7)" fg:x="155" fg:w="44"/><text x="0.3236%" y="895.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (43 samples, 0.02%)</title><rect x="0.0741%" y="869" width="0.0204%" height="15" fill="rgb(217,0,24)" fg:x="156" fg:w="43"/><text x="0.3241%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (43 samples, 0.02%)</title><rect x="0.0741%" y="853" width="0.0204%" height="15" fill="rgb(221,193,54)" fg:x="156" fg:w="43"/><text x="0.3241%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (43 samples, 0.02%)</title><rect x="0.0741%" y="837" width="0.0204%" height="15" fill="rgb(248,212,6)" fg:x="156" fg:w="43"/><text x="0.3241%" y="847.50"></text></g><g><title>cfree (43 samples, 0.02%)</title><rect x="0.0741%" y="821" width="0.0204%" height="15" fill="rgb(208,68,35)" fg:x="156" fg:w="43"/><text x="0.3241%" y="831.50"></text></g><g><title>[libc.so.6] (37 samples, 0.02%)</title><rect x="0.0769%" y="805" width="0.0176%" height="15" fill="rgb(232,128,0)" fg:x="162" fg:w="37"/><text x="0.3269%" y="815.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (45 samples, 0.02%)</title><rect x="0.0736%" y="901" width="0.0214%" height="15" fill="rgb(207,160,47)" fg:x="155" fg:w="45"/><text x="0.3236%" y="911.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (54 samples, 0.03%)</title><rect x="0.0698%" y="933" width="0.0256%" height="15" fill="rgb(228,23,34)" fg:x="147" fg:w="54"/><text x="0.3198%" y="943.50"></text></g><g><title>alloc::collections::btree::mem::replace (49 samples, 0.02%)</title><rect x="0.0722%" y="917" width="0.0233%" height="15" fill="rgb(218,30,26)" fg:x="152" fg:w="49"/><text x="0.3222%" y="927.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (69 samples, 0.03%)</title><rect x="0.0631%" y="965" width="0.0328%" height="15" fill="rgb(220,122,19)" fg:x="133" fg:w="69"/><text x="0.3131%" y="975.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (56 samples, 0.03%)</title><rect x="0.0693%" y="949" width="0.0266%" height="15" fill="rgb(250,228,42)" fg:x="146" fg:w="56"/><text x="0.3193%" y="959.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (101 samples, 0.05%)</title><rect x="0.0593%" y="981" width="0.0479%" height="15" fill="rgb(240,193,28)" fg:x="125" fg:w="101"/><text x="0.3093%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.01%)</title><rect x="0.0959%" y="965" width="0.0114%" height="15" fill="rgb(216,20,37)" fg:x="202" fg:w="24"/><text x="0.3459%" y="975.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (24 samples, 0.01%)</title><rect x="0.0959%" y="949" width="0.0114%" height="15" fill="rgb(206,188,39)" fg:x="202" fg:w="24"/><text x="0.3459%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_key_val (24 samples, 0.01%)</title><rect x="0.0959%" y="933" width="0.0114%" height="15" fill="rgb(217,207,13)" fg:x="202" fg:w="24"/><text x="0.3459%" y="943.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_right_border (22 samples, 0.01%)</title><rect x="0.1206%" y="949" width="0.0104%" height="15" fill="rgb(231,73,38)" fg:x="254" fg:w="22"/><text x="0.3706%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (37 samples, 0.02%)</title><rect x="0.1310%" y="949" width="0.0176%" height="15" fill="rgb(225,20,46)" fg:x="276" fg:w="37"/><text x="0.3810%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (25 samples, 0.01%)</title><rect x="0.1524%" y="933" width="0.0119%" height="15" fill="rgb(210,31,41)" fg:x="321" fg:w="25"/><text x="0.4024%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (25 samples, 0.01%)</title><rect x="0.1524%" y="917" width="0.0119%" height="15" fill="rgb(221,200,47)" fg:x="321" fg:w="25"/><text x="0.4024%" y="927.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (25 samples, 0.01%)</title><rect x="0.1524%" y="901" width="0.0119%" height="15" fill="rgb(226,26,5)" fg:x="321" fg:w="25"/><text x="0.4024%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (25 samples, 0.01%)</title><rect x="0.1524%" y="885" width="0.0119%" height="15" fill="rgb(249,33,26)" fg:x="321" fg:w="25"/><text x="0.4024%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (25 samples, 0.01%)</title><rect x="0.1524%" y="869" width="0.0119%" height="15" fill="rgb(235,183,28)" fg:x="321" fg:w="25"/><text x="0.4024%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (25 samples, 0.01%)</title><rect x="0.1524%" y="853" width="0.0119%" height="15" fill="rgb(221,5,38)" fg:x="321" fg:w="25"/><text x="0.4024%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.01%)</title><rect x="0.1524%" y="837" width="0.0119%" height="15" fill="rgb(247,18,42)" fg:x="321" fg:w="25"/><text x="0.4024%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.01%)</title><rect x="0.1524%" y="821" width="0.0119%" height="15" fill="rgb(241,131,45)" fg:x="321" fg:w="25"/><text x="0.4024%" y="831.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.01%)</title><rect x="0.1524%" y="805" width="0.0119%" height="15" fill="rgb(249,31,29)" fg:x="321" fg:w="25"/><text x="0.4024%" y="815.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="0.1538%" y="789" width="0.0104%" height="15" fill="rgb(225,111,53)" fg:x="324" fg:w="22"/><text x="0.4038%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (136 samples, 0.06%)</title><rect x="0.1087%" y="981" width="0.0646%" height="15" fill="rgb(238,160,17)" fg:x="229" fg:w="136"/><text x="0.3587%" y="991.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (130 samples, 0.06%)</title><rect x="0.1116%" y="965" width="0.0617%" height="15" fill="rgb(214,148,48)" fg:x="235" fg:w="130"/><text x="0.3616%" y="975.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (44 samples, 0.02%)</title><rect x="0.1524%" y="949" width="0.0209%" height="15" fill="rgb(232,36,49)" fg:x="321" fg:w="44"/><text x="0.4024%" y="959.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="0.1756%" y="853" width="0.0114%" height="15" fill="rgb(209,103,24)" fg:x="370" fg:w="24"/><text x="0.4256%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.02%)</title><rect x="0.1737%" y="917" width="0.0157%" height="15" fill="rgb(229,88,8)" fg:x="366" fg:w="33"/><text x="0.4237%" y="927.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.02%)</title><rect x="0.1737%" y="901" width="0.0157%" height="15" fill="rgb(213,181,19)" fg:x="366" fg:w="33"/><text x="0.4237%" y="911.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.02%)</title><rect x="0.1737%" y="885" width="0.0157%" height="15" fill="rgb(254,191,54)" fg:x="366" fg:w="33"/><text x="0.4237%" y="895.50"></text></g><g><title>realloc (33 samples, 0.02%)</title><rect x="0.1737%" y="869" width="0.0157%" height="15" fill="rgb(241,83,37)" fg:x="366" fg:w="33"/><text x="0.4237%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.02%)</title><rect x="0.1737%" y="933" width="0.0185%" height="15" fill="rgb(233,36,39)" fg:x="366" fg:w="39"/><text x="0.4237%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43 samples, 0.02%)</title><rect x="0.1733%" y="981" width="0.0204%" height="15" fill="rgb(226,3,54)" fg:x="365" fg:w="43"/><text x="0.4233%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (42 samples, 0.02%)</title><rect x="0.1737%" y="965" width="0.0199%" height="15" fill="rgb(245,192,40)" fg:x="366" fg:w="42"/><text x="0.4237%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (42 samples, 0.02%)</title><rect x="0.1737%" y="949" width="0.0199%" height="15" fill="rgb(238,167,29)" fg:x="366" fg:w="42"/><text x="0.4237%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (265 samples, 0.13%)</title><rect x="0.2207%" y="949" width="0.1258%" height="15" fill="rgb(232,182,51)" fg:x="465" fg:w="265"/><text x="0.4707%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (241 samples, 0.11%)</title><rect x="0.2321%" y="933" width="0.1144%" height="15" fill="rgb(231,60,39)" fg:x="489" fg:w="241"/><text x="0.4821%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (217 samples, 0.10%)</title><rect x="0.2435%" y="917" width="0.1030%" height="15" fill="rgb(208,69,12)" fg:x="513" fg:w="217"/><text x="0.4935%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (217 samples, 0.10%)</title><rect x="0.2435%" y="901" width="0.1030%" height="15" fill="rgb(235,93,37)" fg:x="513" fg:w="217"/><text x="0.4935%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (128 samples, 0.06%)</title><rect x="0.2858%" y="885" width="0.0608%" height="15" fill="rgb(213,116,39)" fg:x="602" fg:w="128"/><text x="0.5358%" y="895.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (90 samples, 0.04%)</title><rect x="0.3038%" y="869" width="0.0427%" height="15" fill="rgb(222,207,29)" fg:x="640" fg:w="90"/><text x="0.5538%" y="879.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (90 samples, 0.04%)</title><rect x="0.3038%" y="853" width="0.0427%" height="15" fill="rgb(206,96,30)" fg:x="640" fg:w="90"/><text x="0.5538%" y="863.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (90 samples, 0.04%)</title><rect x="0.3038%" y="837" width="0.0427%" height="15" fill="rgb(218,138,4)" fg:x="640" fg:w="90"/><text x="0.5538%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (45 samples, 0.02%)</title><rect x="0.3252%" y="821" width="0.0214%" height="15" fill="rgb(250,191,14)" fg:x="685" fg:w="45"/><text x="0.5752%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (27 samples, 0.01%)</title><rect x="0.4059%" y="917" width="0.0128%" height="15" fill="rgb(239,60,40)" fg:x="855" fg:w="27"/><text x="0.6559%" y="927.50"></text></g><g><title>core::intrinsics::copy (41 samples, 0.02%)</title><rect x="0.4244%" y="869" width="0.0195%" height="15" fill="rgb(206,27,48)" fg:x="894" fg:w="41"/><text x="0.6744%" y="879.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="0.4248%" y="853" width="0.0190%" height="15" fill="rgb(225,35,8)" fg:x="895" fg:w="40"/><text x="0.6748%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (58 samples, 0.03%)</title><rect x="0.4210%" y="901" width="0.0275%" height="15" fill="rgb(250,213,24)" fg:x="887" fg:w="58"/><text x="0.6710%" y="911.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (53 samples, 0.03%)</title><rect x="0.4234%" y="885" width="0.0252%" height="15" fill="rgb(247,123,22)" fg:x="892" fg:w="53"/><text x="0.6734%" y="895.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="0.4614%" y="757" width="0.0104%" height="15" fill="rgb(231,138,38)" fg:x="972" fg:w="22"/><text x="0.7114%" y="767.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (49 samples, 0.02%)</title><rect x="0.4491%" y="901" width="0.0233%" height="15" fill="rgb(231,145,46)" fg:x="946" fg:w="49"/><text x="0.6991%" y="911.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (40 samples, 0.02%)</title><rect x="0.4533%" y="885" width="0.0190%" height="15" fill="rgb(251,118,11)" fg:x="955" fg:w="40"/><text x="0.7033%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (40 samples, 0.02%)</title><rect x="0.4533%" y="869" width="0.0190%" height="15" fill="rgb(217,147,25)" fg:x="955" fg:w="40"/><text x="0.7033%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (40 samples, 0.02%)</title><rect x="0.4533%" y="853" width="0.0190%" height="15" fill="rgb(247,81,37)" fg:x="955" fg:w="40"/><text x="0.7033%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (40 samples, 0.02%)</title><rect x="0.4533%" y="837" width="0.0190%" height="15" fill="rgb(209,12,38)" fg:x="955" fg:w="40"/><text x="0.7033%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.02%)</title><rect x="0.4533%" y="821" width="0.0190%" height="15" fill="rgb(227,1,9)" fg:x="955" fg:w="40"/><text x="0.7033%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.02%)</title><rect x="0.4533%" y="805" width="0.0190%" height="15" fill="rgb(248,47,43)" fg:x="955" fg:w="40"/><text x="0.7033%" y="815.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.02%)</title><rect x="0.4533%" y="789" width="0.0190%" height="15" fill="rgb(221,10,30)" fg:x="955" fg:w="40"/><text x="0.7033%" y="799.50"></text></g><g><title>malloc (40 samples, 0.02%)</title><rect x="0.4533%" y="773" width="0.0190%" height="15" fill="rgb(210,229,1)" fg:x="955" fg:w="40"/><text x="0.7033%" y="783.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (118 samples, 0.06%)</title><rect x="0.4187%" y="917" width="0.0560%" height="15" fill="rgb(222,148,37)" fg:x="882" fg:w="118"/><text x="0.6687%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (160 samples, 0.08%)</title><rect x="0.4002%" y="933" width="0.0760%" height="15" fill="rgb(234,67,33)" fg:x="843" fg:w="160"/><text x="0.6502%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (568 samples, 0.27%)</title><rect x="0.2074%" y="965" width="0.2696%" height="15" fill="rgb(247,98,35)" fg:x="437" fg:w="568"/><text x="0.4574%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (275 samples, 0.13%)</title><rect x="0.3465%" y="949" width="0.1305%" height="15" fill="rgb(247,138,52)" fg:x="730" fg:w="275"/><text x="0.5965%" y="959.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (32 samples, 0.02%)</title><rect x="0.5392%" y="869" width="0.0152%" height="15" fill="rgb(213,79,30)" fg:x="1136" fg:w="32"/><text x="0.7892%" y="879.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (32 samples, 0.02%)</title><rect x="0.5392%" y="853" width="0.0152%" height="15" fill="rgb(246,177,23)" fg:x="1136" fg:w="32"/><text x="0.7892%" y="863.50"></text></g><g><title>core::intrinsics::copy (34 samples, 0.02%)</title><rect x="0.5592%" y="837" width="0.0161%" height="15" fill="rgb(230,62,27)" fg:x="1178" fg:w="34"/><text x="0.8092%" y="847.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="0.5611%" y="821" width="0.0142%" height="15" fill="rgb(216,154,8)" fg:x="1182" fg:w="30"/><text x="0.8111%" y="831.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (212 samples, 0.10%)</title><rect x="0.4809%" y="933" width="0.1006%" height="15" fill="rgb(244,35,45)" fg:x="1013" fg:w="212"/><text x="0.7309%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (210 samples, 0.10%)</title><rect x="0.4818%" y="917" width="0.0997%" height="15" fill="rgb(251,115,12)" fg:x="1015" fg:w="210"/><text x="0.7318%" y="927.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (145 samples, 0.07%)</title><rect x="0.5127%" y="901" width="0.0688%" height="15" fill="rgb(240,54,50)" fg:x="1080" fg:w="145"/><text x="0.7627%" y="911.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (118 samples, 0.06%)</title><rect x="0.5255%" y="885" width="0.0560%" height="15" fill="rgb(233,84,52)" fg:x="1107" fg:w="118"/><text x="0.7755%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (49 samples, 0.02%)</title><rect x="0.5582%" y="869" width="0.0233%" height="15" fill="rgb(207,117,47)" fg:x="1176" fg:w="49"/><text x="0.8082%" y="879.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (48 samples, 0.02%)</title><rect x="0.5587%" y="853" width="0.0228%" height="15" fill="rgb(249,43,39)" fg:x="1177" fg:w="48"/><text x="0.8087%" y="863.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (75 samples, 0.04%)</title><rect x="0.6442%" y="869" width="0.0356%" height="15" fill="rgb(209,38,44)" fg:x="1357" fg:w="75"/><text x="0.8942%" y="879.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (75 samples, 0.04%)</title><rect x="0.6442%" y="853" width="0.0356%" height="15" fill="rgb(236,212,23)" fg:x="1357" fg:w="75"/><text x="0.8942%" y="863.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (75 samples, 0.04%)</title><rect x="0.6442%" y="837" width="0.0356%" height="15" fill="rgb(242,79,21)" fg:x="1357" fg:w="75"/><text x="0.8942%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (39 samples, 0.02%)</title><rect x="0.6612%" y="821" width="0.0185%" height="15" fill="rgb(211,96,35)" fg:x="1393" fg:w="39"/><text x="0.9112%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (213 samples, 0.10%)</title><rect x="0.5815%" y="933" width="0.1011%" height="15" fill="rgb(253,215,40)" fg:x="1225" fg:w="213"/><text x="0.8315%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (184 samples, 0.09%)</title><rect x="0.5953%" y="917" width="0.0873%" height="15" fill="rgb(211,81,21)" fg:x="1254" fg:w="184"/><text x="0.8453%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (184 samples, 0.09%)</title><rect x="0.5953%" y="901" width="0.0873%" height="15" fill="rgb(208,190,38)" fg:x="1254" fg:w="184"/><text x="0.8453%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (95 samples, 0.05%)</title><rect x="0.6375%" y="885" width="0.0451%" height="15" fill="rgb(235,213,38)" fg:x="1343" fg:w="95"/><text x="0.8875%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (452 samples, 0.21%)</title><rect x="0.4771%" y="965" width="0.2146%" height="15" fill="rgb(237,122,38)" fg:x="1005" fg:w="452"/><text x="0.7271%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (452 samples, 0.21%)</title><rect x="0.4771%" y="949" width="0.2146%" height="15" fill="rgb(244,218,35)" fg:x="1005" fg:w="452"/><text x="0.7271%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (170 samples, 0.08%)</title><rect x="0.7894%" y="933" width="0.0807%" height="15" fill="rgb(240,68,47)" fg:x="1663" fg:w="170"/><text x="1.0394%" y="943.50"></text></g><g><title>core::ptr::read (170 samples, 0.08%)</title><rect x="0.7894%" y="917" width="0.0807%" height="15" fill="rgb(210,16,53)" fg:x="1663" fg:w="170"/><text x="1.0394%" y="927.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (383 samples, 0.18%)</title><rect x="0.6926%" y="965" width="0.1818%" height="15" fill="rgb(235,124,12)" fg:x="1459" fg:w="383"/><text x="0.9426%" y="975.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (332 samples, 0.16%)</title><rect x="0.7168%" y="949" width="0.1576%" height="15" fill="rgb(224,169,11)" fg:x="1510" fg:w="332"/><text x="0.9668%" y="959.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (1,570 samples, 0.75%)</title><rect x="0.1937%" y="981" width="0.7453%" height="15" fill="rgb(250,166,2)" fg:x="408" fg:w="1570"/><text x="0.4437%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (135 samples, 0.06%)</title><rect x="0.8749%" y="965" width="0.0641%" height="15" fill="rgb(242,216,29)" fg:x="1843" fg:w="135"/><text x="1.1249%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (135 samples, 0.06%)</title><rect x="0.8749%" y="949" width="0.0641%" height="15" fill="rgb(230,116,27)" fg:x="1843" fg:w="135"/><text x="1.1249%" y="959.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (135 samples, 0.06%)</title><rect x="0.8749%" y="933" width="0.0641%" height="15" fill="rgb(228,99,48)" fg:x="1843" fg:w="135"/><text x="1.1249%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (134 samples, 0.06%)</title><rect x="0.8753%" y="917" width="0.0636%" height="15" fill="rgb(253,11,6)" fg:x="1844" fg:w="134"/><text x="1.1253%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (1,889 samples, 0.90%)</title><rect x="0.0565%" y="997" width="0.8967%" height="15" fill="rgb(247,143,39)" fg:x="119" fg:w="1889"/><text x="0.3065%" y="1007.50"></text></g><g><title>polling::epoll::Poller::modify (49 samples, 0.02%)</title><rect x="0.9874%" y="965" width="0.0233%" height="15" fill="rgb(236,97,10)" fg:x="2080" fg:w="49"/><text x="1.2374%" y="975.50"></text></g><g><title>polling::epoll::Poller::ctl (47 samples, 0.02%)</title><rect x="0.9883%" y="949" width="0.0223%" height="15" fill="rgb(233,208,19)" fg:x="2082" fg:w="47"/><text x="1.2383%" y="959.50"></text></g><g><title>epoll_ctl (46 samples, 0.02%)</title><rect x="0.9888%" y="933" width="0.0218%" height="15" fill="rgb(216,164,2)" fg:x="2083" fg:w="46"/><text x="1.2388%" y="943.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="0.9897%" y="917" width="0.0209%" height="15" fill="rgb(220,129,5)" fg:x="2085" fg:w="44"/><text x="1.2397%" y="927.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="0.9902%" y="901" width="0.0204%" height="15" fill="rgb(242,17,10)" fg:x="2086" fg:w="43"/><text x="1.2402%" y="911.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="0.9907%" y="885" width="0.0199%" height="15" fill="rgb(242,107,0)" fg:x="2087" fg:w="42"/><text x="1.2407%" y="895.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="0.9912%" y="869" width="0.0195%" height="15" fill="rgb(251,28,31)" fg:x="2088" fg:w="41"/><text x="1.2412%" y="879.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="0.9987%" y="853" width="0.0119%" height="15" fill="rgb(233,223,10)" fg:x="2104" fg:w="25"/><text x="1.2487%" y="863.50"></text></g><g><title>polling::epoll::Poller::wait (172 samples, 0.08%)</title><rect x="0.9722%" y="981" width="0.0816%" height="15" fill="rgb(215,21,27)" fg:x="2048" fg:w="172"/><text x="1.2222%" y="991.50"></text></g><g><title>syscall (71 samples, 0.03%)</title><rect x="1.0201%" y="965" width="0.0337%" height="15" fill="rgb(232,23,21)" fg:x="2149" fg:w="71"/><text x="1.2701%" y="975.50"></text></g><g><title>[unknown] (67 samples, 0.03%)</title><rect x="1.0220%" y="949" width="0.0318%" height="15" fill="rgb(244,5,23)" fg:x="2153" fg:w="67"/><text x="1.2720%" y="959.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="1.0230%" y="933" width="0.0309%" height="15" fill="rgb(226,81,46)" fg:x="2155" fg:w="65"/><text x="1.2730%" y="943.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="1.0230%" y="917" width="0.0309%" height="15" fill="rgb(247,70,30)" fg:x="2155" fg:w="65"/><text x="1.2730%" y="927.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="1.0253%" y="901" width="0.0285%" height="15" fill="rgb(212,68,19)" fg:x="2160" fg:w="60"/><text x="1.2753%" y="911.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="1.0296%" y="885" width="0.0242%" height="15" fill="rgb(240,187,13)" fg:x="2169" fg:w="51"/><text x="1.2796%" y="895.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="1.0415%" y="869" width="0.0123%" height="15" fill="rgb(223,113,26)" fg:x="2194" fg:w="26"/><text x="1.2915%" y="879.50"></text></g><g><title>polling::Poller::wait (191 samples, 0.09%)</title><rect x="0.9679%" y="997" width="0.0907%" height="15" fill="rgb(206,192,2)" fg:x="2039" fg:w="191"/><text x="1.2179%" y="1007.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (115 samples, 0.05%)</title><rect x="1.0818%" y="821" width="0.0546%" height="15" fill="rgb(241,108,4)" fg:x="2279" fg:w="115"/><text x="1.3318%" y="831.50"></text></g><g><title>parking::Unparker::unpark (115 samples, 0.05%)</title><rect x="1.0818%" y="805" width="0.0546%" height="15" fill="rgb(247,173,49)" fg:x="2279" fg:w="115"/><text x="1.3318%" y="815.50"></text></g><g><title>parking::Inner::unpark (106 samples, 0.05%)</title><rect x="1.0861%" y="789" width="0.0503%" height="15" fill="rgb(224,114,35)" fg:x="2288" fg:w="106"/><text x="1.3361%" y="799.50"></text></g><g><title>syscall (95 samples, 0.05%)</title><rect x="1.0913%" y="773" width="0.0451%" height="15" fill="rgb(245,159,27)" fg:x="2299" fg:w="95"/><text x="1.3413%" y="783.50"></text></g><g><title>[unknown] (95 samples, 0.05%)</title><rect x="1.0913%" y="757" width="0.0451%" height="15" fill="rgb(245,172,44)" fg:x="2299" fg:w="95"/><text x="1.3413%" y="767.50"></text></g><g><title>[unknown] (92 samples, 0.04%)</title><rect x="1.0927%" y="741" width="0.0437%" height="15" fill="rgb(236,23,11)" fg:x="2302" fg:w="92"/><text x="1.3427%" y="751.50"></text></g><g><title>[unknown] (91 samples, 0.04%)</title><rect x="1.0932%" y="725" width="0.0432%" height="15" fill="rgb(205,117,38)" fg:x="2303" fg:w="91"/><text x="1.3432%" y="735.50"></text></g><g><title>[unknown] (89 samples, 0.04%)</title><rect x="1.0942%" y="709" width="0.0422%" height="15" fill="rgb(237,72,25)" fg:x="2305" fg:w="89"/><text x="1.3442%" y="719.50"></text></g><g><title>[unknown] (87 samples, 0.04%)</title><rect x="1.0951%" y="693" width="0.0413%" height="15" fill="rgb(244,70,9)" fg:x="2307" fg:w="87"/><text x="1.3451%" y="703.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="1.1070%" y="677" width="0.0294%" height="15" fill="rgb(217,125,39)" fg:x="2332" fg:w="62"/><text x="1.3570%" y="687.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="1.1136%" y="661" width="0.0228%" height="15" fill="rgb(235,36,10)" fg:x="2346" fg:w="48"/><text x="1.3636%" y="671.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="1.1203%" y="645" width="0.0161%" height="15" fill="rgb(251,123,47)" fg:x="2360" fg:w="34"/><text x="1.3703%" y="655.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="1.1260%" y="629" width="0.0104%" height="15" fill="rgb(221,13,13)" fg:x="2372" fg:w="22"/><text x="1.3760%" y="639.50"></text></g><g><title>core::task::wake::Waker::wake (117 samples, 0.06%)</title><rect x="1.0813%" y="853" width="0.0555%" height="15" fill="rgb(238,131,9)" fg:x="2278" fg:w="117"/><text x="1.3313%" y="863.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (117 samples, 0.06%)</title><rect x="1.0813%" y="837" width="0.0555%" height="15" fill="rgb(211,50,8)" fg:x="2278" fg:w="117"/><text x="1.3313%" y="847.50"></text></g><g><title>async_executor::State::notify (141 samples, 0.07%)</title><rect x="1.0714%" y="869" width="0.0669%" height="15" fill="rgb(245,182,24)" fg:x="2257" fg:w="141"/><text x="1.3214%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (137 samples, 0.07%)</title><rect x="1.1383%" y="869" width="0.0650%" height="15" fill="rgb(242,14,37)" fg:x="2398" fg:w="137"/><text x="1.3883%" y="879.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (129 samples, 0.06%)</title><rect x="1.1421%" y="853" width="0.0612%" height="15" fill="rgb(246,228,12)" fg:x="2406" fg:w="129"/><text x="1.3921%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (43 samples, 0.02%)</title><rect x="1.1829%" y="837" width="0.0204%" height="15" fill="rgb(213,55,15)" fg:x="2492" fg:w="43"/><text x="1.4329%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (43 samples, 0.02%)</title><rect x="1.1829%" y="821" width="0.0204%" height="15" fill="rgb(209,9,3)" fg:x="2492" fg:w="43"/><text x="1.4329%" y="831.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (279 samples, 0.13%)</title><rect x="1.0714%" y="885" width="0.1324%" height="15" fill="rgb(230,59,30)" fg:x="2257" fg:w="279"/><text x="1.3214%" y="895.50"></text></g><g><title>std::panic::catch_unwind (435 samples, 0.21%)</title><rect x="1.0614%" y="997" width="0.2065%" height="15" fill="rgb(209,121,21)" fg:x="2236" fg:w="435"/><text x="1.3114%" y="1007.50"></text></g><g><title>std::panicking::try (435 samples, 0.21%)</title><rect x="1.0614%" y="981" width="0.2065%" height="15" fill="rgb(220,109,13)" fg:x="2236" fg:w="435"/><text x="1.3114%" y="991.50"></text></g><g><title>std::panicking::try::do_call (435 samples, 0.21%)</title><rect x="1.0614%" y="965" width="0.2065%" height="15" fill="rgb(232,18,1)" fg:x="2236" fg:w="435"/><text x="1.3114%" y="975.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (435 samples, 0.21%)</title><rect x="1.0614%" y="949" width="0.2065%" height="15" fill="rgb(215,41,42)" fg:x="2236" fg:w="435"/><text x="1.3114%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (435 samples, 0.21%)</title><rect x="1.0614%" y="933" width="0.2065%" height="15" fill="rgb(224,123,36)" fg:x="2236" fg:w="435"/><text x="1.3114%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (435 samples, 0.21%)</title><rect x="1.0614%" y="917" width="0.2065%" height="15" fill="rgb(240,125,3)" fg:x="2236" fg:w="435"/><text x="1.3114%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (424 samples, 0.20%)</title><rect x="1.0666%" y="901" width="0.2013%" height="15" fill="rgb(205,98,50)" fg:x="2247" fg:w="424"/><text x="1.3166%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (135 samples, 0.06%)</title><rect x="1.2038%" y="885" width="0.0641%" height="15" fill="rgb(205,185,37)" fg:x="2536" fg:w="135"/><text x="1.4538%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (135 samples, 0.06%)</title><rect x="1.2038%" y="869" width="0.0641%" height="15" fill="rgb(238,207,15)" fg:x="2536" fg:w="135"/><text x="1.4538%" y="879.50"></text></g><g><title>async_io::reactor::ReactorLock::react (2,590 samples, 1.23%)</title><rect x="0.0460%" y="1013" width="1.2294%" height="15" fill="rgb(213,199,42)" fg:x="97" fg:w="2590"/><text x="0.2960%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (63 samples, 0.03%)</title><rect x="1.2988%" y="901" width="0.0299%" height="15" fill="rgb(235,201,11)" fg:x="2736" fg:w="63"/><text x="1.5488%" y="911.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (63 samples, 0.03%)</title><rect x="1.2988%" y="885" width="0.0299%" height="15" fill="rgb(207,46,11)" fg:x="2736" fg:w="63"/><text x="1.5488%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (58 samples, 0.03%)</title><rect x="1.3011%" y="869" width="0.0275%" height="15" fill="rgb(241,35,35)" fg:x="2741" fg:w="58"/><text x="1.5511%" y="879.50"></text></g><g><title>clock_gettime (58 samples, 0.03%)</title><rect x="1.3011%" y="853" width="0.0275%" height="15" fill="rgb(243,32,47)" fg:x="2741" fg:w="58"/><text x="1.5511%" y="863.50"></text></g><g><title>__vdso_clock_gettime (40 samples, 0.02%)</title><rect x="1.3097%" y="837" width="0.0190%" height="15" fill="rgb(247,202,23)" fg:x="2759" fg:w="40"/><text x="1.5597%" y="847.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1,382 samples, 0.66%)</title><rect x="1.2940%" y="917" width="0.6560%" height="15" fill="rgb(219,102,11)" fg:x="2726" fg:w="1382"/><text x="1.5440%" y="927.50"></text></g><g><title>syscall (1,306 samples, 0.62%)</title><rect x="1.3301%" y="901" width="0.6199%" height="15" fill="rgb(243,110,44)" fg:x="2802" fg:w="1306"/><text x="1.5801%" y="911.50"></text></g><g><title>[unknown] (1,301 samples, 0.62%)</title><rect x="1.3325%" y="885" width="0.6176%" height="15" fill="rgb(222,74,54)" fg:x="2807" fg:w="1301"/><text x="1.5825%" y="895.50"></text></g><g><title>[unknown] (1,283 samples, 0.61%)</title><rect x="1.3410%" y="869" width="0.6090%" height="15" fill="rgb(216,99,12)" fg:x="2825" fg:w="1283"/><text x="1.5910%" y="879.50"></text></g><g><title>[unknown] (1,280 samples, 0.61%)</title><rect x="1.3424%" y="853" width="0.6076%" height="15" fill="rgb(226,22,26)" fg:x="2828" fg:w="1280"/><text x="1.5924%" y="863.50"></text></g><g><title>[unknown] (1,233 samples, 0.59%)</title><rect x="1.3647%" y="837" width="0.5853%" height="15" fill="rgb(217,163,10)" fg:x="2875" fg:w="1233"/><text x="1.6147%" y="847.50"></text></g><g><title>[unknown] (1,201 samples, 0.57%)</title><rect x="1.3799%" y="821" width="0.5701%" height="15" fill="rgb(213,25,53)" fg:x="2907" fg:w="1201"/><text x="1.6299%" y="831.50"></text></g><g><title>[unknown] (1,152 samples, 0.55%)</title><rect x="1.4032%" y="805" width="0.5468%" height="15" fill="rgb(252,105,26)" fg:x="2956" fg:w="1152"/><text x="1.6532%" y="815.50"></text></g><g><title>[unknown] (1,099 samples, 0.52%)</title><rect x="1.4283%" y="789" width="0.5217%" height="15" fill="rgb(220,39,43)" fg:x="3009" fg:w="1099"/><text x="1.6783%" y="799.50"></text></g><g><title>[unknown] (847 samples, 0.40%)</title><rect x="1.5480%" y="773" width="0.4021%" height="15" fill="rgb(229,68,48)" fg:x="3261" fg:w="847"/><text x="1.7980%" y="783.50"></text></g><g><title>[unknown] (632 samples, 0.30%)</title><rect x="1.6500%" y="757" width="0.3000%" height="15" fill="rgb(252,8,32)" fg:x="3476" fg:w="632"/><text x="1.9000%" y="767.50"></text></g><g><title>[unknown] (387 samples, 0.18%)</title><rect x="1.7663%" y="741" width="0.1837%" height="15" fill="rgb(223,20,43)" fg:x="3721" fg:w="387"/><text x="2.0163%" y="751.50"></text></g><g><title>[unknown] (219 samples, 0.10%)</title><rect x="1.8461%" y="725" width="0.1040%" height="15" fill="rgb(229,81,49)" fg:x="3889" fg:w="219"/><text x="2.0961%" y="735.50"></text></g><g><title>[unknown] (129 samples, 0.06%)</title><rect x="1.8888%" y="709" width="0.0612%" height="15" fill="rgb(236,28,36)" fg:x="3979" fg:w="129"/><text x="2.1388%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (1,385 samples, 0.66%)</title><rect x="1.2935%" y="949" width="0.6574%" height="15" fill="rgb(249,185,26)" fg:x="2725" fg:w="1385"/><text x="1.5435%" y="959.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (1,384 samples, 0.66%)</title><rect x="1.2940%" y="933" width="0.6570%" height="15" fill="rgb(249,174,33)" fg:x="2726" fg:w="1384"/><text x="1.5440%" y="943.50"></text></g><g><title>std::panic::catch_unwind (4,096 samples, 1.94%)</title><rect x="0.0076%" y="1141" width="1.9443%" height="15" fill="rgb(233,201,37)" fg:x="16" fg:w="4096"/><text x="0.2576%" y="1151.50">s..</text></g><g><title>std::panicking::try (4,096 samples, 1.94%)</title><rect x="0.0076%" y="1125" width="1.9443%" height="15" fill="rgb(221,78,26)" fg:x="16" fg:w="4096"/><text x="0.2576%" y="1135.50">s..</text></g><g><title>std::panicking::try::do_call (4,096 samples, 1.94%)</title><rect x="0.0076%" y="1109" width="1.9443%" height="15" fill="rgb(250,127,30)" fg:x="16" fg:w="4096"/><text x="0.2576%" y="1119.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,096 samples, 1.94%)</title><rect x="0.0076%" y="1093" width="1.9443%" height="15" fill="rgb(230,49,44)" fg:x="16" fg:w="4096"/><text x="0.2576%" y="1103.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (4,096 samples, 1.94%)</title><rect x="0.0076%" y="1077" width="1.9443%" height="15" fill="rgb(229,67,23)" fg:x="16" fg:w="4096"/><text x="0.2576%" y="1087.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,096 samples, 1.94%)</title><rect x="0.0076%" y="1061" width="1.9443%" height="15" fill="rgb(249,83,47)" fg:x="16" fg:w="4096"/><text x="0.2576%" y="1071.50">s..</text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (4,096 samples, 1.94%)</title><rect x="0.0076%" y="1045" width="1.9443%" height="15" fill="rgb(215,43,3)" fg:x="16" fg:w="4096"/><text x="0.2576%" y="1055.50">a..</text></g><g><title>async_io::driver::main_loop (4,096 samples, 1.94%)</title><rect x="0.0076%" y="1029" width="1.9443%" height="15" fill="rgb(238,154,13)" fg:x="16" fg:w="4096"/><text x="0.2576%" y="1039.50">a..</text></g><g><title>parking::Parker::park_timeout (1,411 samples, 0.67%)</title><rect x="1.2821%" y="1013" width="0.6698%" height="15" fill="rgb(219,56,2)" fg:x="2701" fg:w="1411"/><text x="1.5321%" y="1023.50"></text></g><g><title>parking::Inner::park (1,406 samples, 0.67%)</title><rect x="1.2845%" y="997" width="0.6674%" height="15" fill="rgb(233,0,4)" fg:x="2706" fg:w="1406"/><text x="1.5345%" y="1007.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (1,392 samples, 0.66%)</title><rect x="1.2912%" y="981" width="0.6608%" height="15" fill="rgb(235,30,7)" fg:x="2720" fg:w="1392"/><text x="1.5412%" y="991.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (1,392 samples, 0.66%)</title><rect x="1.2912%" y="965" width="0.6608%" height="15" fill="rgb(250,79,13)" fg:x="2720" fg:w="1392"/><text x="1.5412%" y="975.50"></text></g><g><title>async-io (4,108 samples, 1.95%)</title><rect x="0.0024%" y="1269" width="1.9500%" height="15" fill="rgb(211,146,34)" fg:x="5" fg:w="4108"/><text x="0.2524%" y="1279.50">a..</text></g><g><title>__clone (4,097 samples, 1.94%)</title><rect x="0.0076%" y="1253" width="1.9448%" height="15" fill="rgb(228,22,38)" fg:x="16" fg:w="4097"/><text x="0.2576%" y="1263.50">_..</text></g><g><title>[libc.so.6] (4,097 samples, 1.94%)</title><rect x="0.0076%" y="1237" width="1.9448%" height="15" fill="rgb(235,168,5)" fg:x="16" fg:w="4097"/><text x="0.2576%" y="1247.50">[..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,097 samples, 1.94%)</title><rect x="0.0076%" y="1221" width="1.9448%" height="15" fill="rgb(221,155,16)" fg:x="16" fg:w="4097"/><text x="0.2576%" y="1231.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,097 samples, 1.94%)</title><rect x="0.0076%" y="1205" width="1.9448%" height="15" fill="rgb(215,215,53)" fg:x="16" fg:w="4097"/><text x="0.2576%" y="1215.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,097 samples, 1.94%)</title><rect x="0.0076%" y="1189" width="1.9448%" height="15" fill="rgb(223,4,10)" fg:x="16" fg:w="4097"/><text x="0.2576%" y="1199.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,097 samples, 1.94%)</title><rect x="0.0076%" y="1173" width="1.9448%" height="15" fill="rgb(234,103,6)" fg:x="16" fg:w="4097"/><text x="0.2576%" y="1183.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (4,097 samples, 1.94%)</title><rect x="0.0076%" y="1157" width="1.9448%" height="15" fill="rgb(227,97,0)" fg:x="16" fg:w="4097"/><text x="0.2576%" y="1167.50">s..</text></g><g><title>async_executor::State::notify (46 samples, 0.02%)</title><rect x="1.9576%" y="1205" width="0.0218%" height="15" fill="rgb(234,150,53)" fg:x="4124" fg:w="46"/><text x="2.2076%" y="1215.50"></text></g><g><title>core::task::wake::Waker::wake (46 samples, 0.02%)</title><rect x="1.9576%" y="1189" width="0.0218%" height="15" fill="rgb(228,201,54)" fg:x="4124" fg:w="46"/><text x="2.2076%" y="1199.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (46 samples, 0.02%)</title><rect x="1.9576%" y="1173" width="0.0218%" height="15" fill="rgb(222,22,37)" fg:x="4124" fg:w="46"/><text x="2.2076%" y="1183.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (46 samples, 0.02%)</title><rect x="1.9576%" y="1157" width="0.0218%" height="15" fill="rgb(237,53,32)" fg:x="4124" fg:w="46"/><text x="2.2076%" y="1167.50"></text></g><g><title>parking::Unparker::unpark (46 samples, 0.02%)</title><rect x="1.9576%" y="1141" width="0.0218%" height="15" fill="rgb(233,25,53)" fg:x="4124" fg:w="46"/><text x="2.2076%" y="1151.50"></text></g><g><title>parking::Inner::unpark (46 samples, 0.02%)</title><rect x="1.9576%" y="1125" width="0.0218%" height="15" fill="rgb(210,40,34)" fg:x="4124" fg:w="46"/><text x="2.2076%" y="1135.50"></text></g><g><title>syscall (46 samples, 0.02%)</title><rect x="1.9576%" y="1109" width="0.0218%" height="15" fill="rgb(241,220,44)" fg:x="4124" fg:w="46"/><text x="2.2076%" y="1119.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="1.9576%" y="1093" width="0.0218%" height="15" fill="rgb(235,28,35)" fg:x="4124" fg:w="46"/><text x="2.2076%" y="1103.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (55 samples, 0.03%)</title><rect x="1.9576%" y="1237" width="0.0261%" height="15" fill="rgb(210,56,17)" fg:x="4124" fg:w="55"/><text x="2.2076%" y="1247.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (55 samples, 0.03%)</title><rect x="1.9576%" y="1221" width="0.0261%" height="15" fill="rgb(224,130,29)" fg:x="4124" fg:w="55"/><text x="2.2076%" y="1231.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="1.9913%" y="1237" width="0.0123%" height="15" fill="rgb(235,212,8)" fg:x="4195" fg:w="26"/><text x="2.2413%" y="1247.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="1.9923%" y="1221" width="0.0114%" height="15" fill="rgb(223,33,50)" fg:x="4197" fg:w="24"/><text x="2.2423%" y="1231.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (37 samples, 0.02%)</title><rect x="2.0321%" y="1237" width="0.0176%" height="15" fill="rgb(219,149,13)" fg:x="4281" fg:w="37"/><text x="2.2821%" y="1247.50"></text></g><g><title>once_cell::imp::initialize_or_wait (37 samples, 0.02%)</title><rect x="2.0321%" y="1221" width="0.0176%" height="15" fill="rgb(250,156,29)" fg:x="4281" fg:w="37"/><text x="2.2821%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;once_cell::imp::Guard&gt; (36 samples, 0.02%)</title><rect x="2.0326%" y="1205" width="0.0171%" height="15" fill="rgb(216,193,19)" fg:x="4282" fg:w="36"/><text x="2.2826%" y="1215.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (34 samples, 0.02%)</title><rect x="2.0336%" y="1189" width="0.0161%" height="15" fill="rgb(216,135,14)" fg:x="4284" fg:w="34"/><text x="2.2836%" y="1199.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (33 samples, 0.02%)</title><rect x="2.0340%" y="1173" width="0.0157%" height="15" fill="rgb(241,47,5)" fg:x="4285" fg:w="33"/><text x="2.2840%" y="1183.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (33 samples, 0.02%)</title><rect x="2.0340%" y="1157" width="0.0157%" height="15" fill="rgb(233,42,35)" fg:x="4285" fg:w="33"/><text x="2.2840%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (33 samples, 0.02%)</title><rect x="2.0340%" y="1141" width="0.0157%" height="15" fill="rgb(231,13,6)" fg:x="4285" fg:w="33"/><text x="2.2840%" y="1151.50"></text></g><g><title>syscall (189 samples, 0.09%)</title><rect x="2.0739%" y="1237" width="0.0897%" height="15" fill="rgb(207,181,40)" fg:x="4369" fg:w="189"/><text x="2.3239%" y="1247.50"></text></g><g><title>[unknown] (189 samples, 0.09%)</title><rect x="2.0739%" y="1221" width="0.0897%" height="15" fill="rgb(254,173,49)" fg:x="4369" fg:w="189"/><text x="2.3239%" y="1231.50"></text></g><g><title>[anon] (452 samples, 0.21%)</title><rect x="1.9533%" y="1253" width="0.2146%" height="15" fill="rgb(221,1,38)" fg:x="4115" fg:w="452"/><text x="2.2033%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 0.04%)</title><rect x="2.3255%" y="405" width="0.0418%" height="15" fill="rgb(206,124,46)" fg:x="4899" fg:w="88"/><text x="2.5755%" y="415.50"></text></g><g><title>async_lock::mutex::Mutex&lt;T&gt;::lock::{{closure}} (83 samples, 0.04%)</title><rect x="2.3279%" y="389" width="0.0394%" height="15" fill="rgb(249,21,11)" fg:x="4904" fg:w="83"/><text x="2.5779%" y="399.50"></text></g><g><title>core::mem::drop (80 samples, 0.04%)</title><rect x="2.3673%" y="405" width="0.0380%" height="15" fill="rgb(222,201,40)" fg:x="4987" fg:w="80"/><text x="2.6173%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::mutex::MutexGuard&lt;zenoh_collections::stack_buffer::StackBuffer&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;&gt; (80 samples, 0.04%)</title><rect x="2.3673%" y="389" width="0.0380%" height="15" fill="rgb(235,61,29)" fg:x="4987" fg:w="80"/><text x="2.6173%" y="399.50"></text></g><g><title>&lt;async_lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.04%)</title><rect x="2.3673%" y="373" width="0.0380%" height="15" fill="rgb(219,207,3)" fg:x="4987" fg:w="80"/><text x="2.6173%" y="383.50"></text></g><g><title>event_listener::Event::notify (67 samples, 0.03%)</title><rect x="2.3734%" y="357" width="0.0318%" height="15" fill="rgb(222,56,46)" fg:x="5000" fg:w="67"/><text x="2.6234%" y="367.50"></text></g><g><title>event_listener::full_fence (65 samples, 0.03%)</title><rect x="2.3744%" y="341" width="0.0309%" height="15" fill="rgb(239,76,54)" fg:x="5002" fg:w="65"/><text x="2.6244%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (59 samples, 0.03%)</title><rect x="2.3772%" y="325" width="0.0280%" height="15" fill="rgb(231,124,27)" fg:x="5008" fg:w="59"/><text x="2.6272%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.03%)</title><rect x="2.3772%" y="309" width="0.0280%" height="15" fill="rgb(249,195,6)" fg:x="5008" fg:w="59"/><text x="2.6272%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (42 samples, 0.02%)</title><rect x="2.4176%" y="373" width="0.0199%" height="15" fill="rgb(237,174,47)" fg:x="5093" fg:w="42"/><text x="2.6676%" y="383.50"></text></g><g><title>core::ptr::write (42 samples, 0.02%)</title><rect x="2.4176%" y="357" width="0.0199%" height="15" fill="rgb(206,201,31)" fg:x="5093" fg:w="42"/><text x="2.6676%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (51 samples, 0.02%)</title><rect x="2.4166%" y="389" width="0.0242%" height="15" fill="rgb(231,57,52)" fg:x="5091" fg:w="51"/><text x="2.6666%" y="399.50"></text></g><g><title>zenoh_collections::stack_buffer::StackBuffer&lt;T&gt;::push (56 samples, 0.03%)</title><rect x="2.4152%" y="405" width="0.0266%" height="15" fill="rgb(248,177,22)" fg:x="5088" fg:w="56"/><text x="2.6652%" y="415.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (309 samples, 0.15%)</title><rect x="2.3018%" y="549" width="0.1467%" height="15" fill="rgb(215,211,37)" fg:x="4849" fg:w="309"/><text x="2.5518%" y="559.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (309 samples, 0.15%)</title><rect x="2.3018%" y="533" width="0.1467%" height="15" fill="rgb(241,128,51)" fg:x="4849" fg:w="309"/><text x="2.5518%" y="543.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (309 samples, 0.15%)</title><rect x="2.3018%" y="517" width="0.1467%" height="15" fill="rgb(227,165,31)" fg:x="4849" fg:w="309"/><text x="2.5518%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (309 samples, 0.15%)</title><rect x="2.3018%" y="501" width="0.1467%" height="15" fill="rgb(228,167,24)" fg:x="4849" fg:w="309"/><text x="2.5518%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (309 samples, 0.15%)</title><rect x="2.3018%" y="485" width="0.1467%" height="15" fill="rgb(228,143,12)" fg:x="4849" fg:w="309"/><text x="2.5518%" y="495.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (309 samples, 0.15%)</title><rect x="2.3018%" y="469" width="0.1467%" height="15" fill="rgb(249,149,8)" fg:x="4849" fg:w="309"/><text x="2.5518%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (309 samples, 0.15%)</title><rect x="2.3018%" y="453" width="0.1467%" height="15" fill="rgb(243,35,44)" fg:x="4849" fg:w="309"/><text x="2.5518%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (309 samples, 0.15%)</title><rect x="2.3018%" y="437" width="0.1467%" height="15" fill="rgb(246,89,9)" fg:x="4849" fg:w="309"/><text x="2.5518%" y="447.50"></text></g><g><title>zenoh_collections::lifo_queue::LifoQueue&lt;T&gt;::push::{{closure}} (302 samples, 0.14%)</title><rect x="2.3051%" y="421" width="0.1434%" height="15" fill="rgb(233,213,13)" fg:x="4856" fg:w="302"/><text x="2.5551%" y="431.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (64 samples, 0.03%)</title><rect x="2.4484%" y="533" width="0.0304%" height="15" fill="rgb(233,141,41)" fg:x="5158" fg:w="64"/><text x="2.6984%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (64 samples, 0.03%)</title><rect x="2.4484%" y="517" width="0.0304%" height="15" fill="rgb(239,167,4)" fg:x="5158" fg:w="64"/><text x="2.6984%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (63 samples, 0.03%)</title><rect x="2.4489%" y="501" width="0.0299%" height="15" fill="rgb(209,217,16)" fg:x="5159" fg:w="63"/><text x="2.6989%" y="511.50"></text></g><g><title>core::mem::drop (25 samples, 0.01%)</title><rect x="2.4670%" y="485" width="0.0119%" height="15" fill="rgb(219,88,35)" fg:x="5197" fg:w="25"/><text x="2.7170%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;,alloc::alloc::Global&gt;&gt; (25 samples, 0.01%)</title><rect x="2.4670%" y="469" width="0.0119%" height="15" fill="rgb(220,193,23)" fg:x="5197" fg:w="25"/><text x="2.7170%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="2.4670%" y="453" width="0.0119%" height="15" fill="rgb(230,90,52)" fg:x="5197" fg:w="25"/><text x="2.7170%" y="463.50"></text></g><g><title>cfree (75 samples, 0.04%)</title><rect x="2.4788%" y="485" width="0.0356%" height="15" fill="rgb(252,106,19)" fg:x="5222" fg:w="75"/><text x="2.7288%" y="495.50"></text></g><g><title>[libc.so.6] (75 samples, 0.04%)</title><rect x="2.4788%" y="469" width="0.0356%" height="15" fill="rgb(206,74,20)" fg:x="5222" fg:w="75"/><text x="2.7288%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (168 samples, 0.08%)</title><rect x="2.4788%" y="501" width="0.0797%" height="15" fill="rgb(230,138,44)" fg:x="5222" fg:w="168"/><text x="2.7288%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (93 samples, 0.04%)</title><rect x="2.5144%" y="485" width="0.0441%" height="15" fill="rgb(235,182,43)" fg:x="5297" fg:w="93"/><text x="2.7644%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (93 samples, 0.04%)</title><rect x="2.5144%" y="469" width="0.0441%" height="15" fill="rgb(242,16,51)" fg:x="5297" fg:w="93"/><text x="2.7644%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (93 samples, 0.04%)</title><rect x="2.5144%" y="453" width="0.0441%" height="15" fill="rgb(248,9,4)" fg:x="5297" fg:w="93"/><text x="2.7644%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (93 samples, 0.04%)</title><rect x="2.5144%" y="437" width="0.0441%" height="15" fill="rgb(210,31,22)" fg:x="5297" fg:w="93"/><text x="2.7644%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (72 samples, 0.03%)</title><rect x="2.5244%" y="421" width="0.0342%" height="15" fill="rgb(239,54,39)" fg:x="5318" fg:w="72"/><text x="2.7744%" y="431.50"></text></g><g><title>alloc::alloc::box_free (72 samples, 0.03%)</title><rect x="2.5244%" y="405" width="0.0342%" height="15" fill="rgb(230,99,41)" fg:x="5318" fg:w="72"/><text x="2.7744%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (72 samples, 0.03%)</title><rect x="2.5244%" y="389" width="0.0342%" height="15" fill="rgb(253,106,12)" fg:x="5318" fg:w="72"/><text x="2.7744%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (72 samples, 0.03%)</title><rect x="2.5244%" y="373" width="0.0342%" height="15" fill="rgb(213,46,41)" fg:x="5318" fg:w="72"/><text x="2.7744%" y="383.50"></text></g><g><title>cfree (72 samples, 0.03%)</title><rect x="2.5244%" y="357" width="0.0342%" height="15" fill="rgb(215,133,35)" fg:x="5318" fg:w="72"/><text x="2.7744%" y="367.50"></text></g><g><title>[libc.so.6] (72 samples, 0.03%)</title><rect x="2.5244%" y="341" width="0.0342%" height="15" fill="rgb(213,28,5)" fg:x="5318" fg:w="72"/><text x="2.7744%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (249 samples, 0.12%)</title><rect x="2.4484%" y="549" width="0.1182%" height="15" fill="rgb(215,77,49)" fg:x="5158" fg:w="249"/><text x="2.6984%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (185 samples, 0.09%)</title><rect x="2.4788%" y="533" width="0.0878%" height="15" fill="rgb(248,100,22)" fg:x="5222" fg:w="185"/><text x="2.7288%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (185 samples, 0.09%)</title><rect x="2.4788%" y="517" width="0.0878%" height="15" fill="rgb(208,67,9)" fg:x="5222" fg:w="185"/><text x="2.7288%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (584 samples, 0.28%)</title><rect x="2.3018%" y="613" width="0.2772%" height="15" fill="rgb(219,133,21)" fg:x="4849" fg:w="584"/><text x="2.5518%" y="623.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (584 samples, 0.28%)</title><rect x="2.3018%" y="597" width="0.2772%" height="15" fill="rgb(246,46,29)" fg:x="4849" fg:w="584"/><text x="2.5518%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (584 samples, 0.28%)</title><rect x="2.3018%" y="581" width="0.2772%" height="15" fill="rgb(246,185,52)" fg:x="4849" fg:w="584"/><text x="2.5518%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (584 samples, 0.28%)</title><rect x="2.3018%" y="565" width="0.2772%" height="15" fill="rgb(252,136,11)" fg:x="4849" fg:w="584"/><text x="2.5518%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::Or&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="2.5666%" y="549" width="0.0123%" height="15" fill="rgb(219,138,53)" fg:x="5407" fg:w="26"/><text x="2.8166%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="2.5666%" y="533" width="0.0123%" height="15" fill="rgb(211,51,23)" fg:x="5407" fg:w="26"/><text x="2.8166%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (26 samples, 0.01%)</title><rect x="2.5666%" y="517" width="0.0123%" height="15" fill="rgb(247,221,28)" fg:x="5407" fg:w="26"/><text x="2.8166%" y="527.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="2.5666%" y="501" width="0.0123%" height="15" fill="rgb(251,222,45)" fg:x="5407" fg:w="26"/><text x="2.8166%" y="511.50"></text></g><g><title>async_std::utils::abort_on_panic (26 samples, 0.01%)</title><rect x="2.5666%" y="485" width="0.0123%" height="15" fill="rgb(217,162,53)" fg:x="5407" fg:w="26"/><text x="2.8166%" y="495.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop::{{closure}} (26 samples, 0.01%)</title><rect x="2.5666%" y="469" width="0.0123%" height="15" fill="rgb(229,93,14)" fg:x="5407" fg:w="26"/><text x="2.8166%" y="479.50"></text></g><g><title>async_std::task::task_local::LocalsMap::clear (26 samples, 0.01%)</title><rect x="2.5666%" y="453" width="0.0123%" height="15" fill="rgb(209,67,49)" fg:x="5407" fg:w="26"/><text x="2.8166%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Parker&gt; (22 samples, 0.01%)</title><rect x="2.5918%" y="613" width="0.0104%" height="15" fill="rgb(213,87,29)" fg:x="5460" fg:w="22"/><text x="2.8418%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (22 samples, 0.01%)</title><rect x="2.5918%" y="597" width="0.0104%" height="15" fill="rgb(205,151,52)" fg:x="5460" fg:w="22"/><text x="2.8418%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (22 samples, 0.01%)</title><rect x="2.5918%" y="581" width="0.0104%" height="15" fill="rgb(253,215,39)" fg:x="5460" fg:w="22"/><text x="2.8418%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="2.5918%" y="565" width="0.0104%" height="15" fill="rgb(221,220,41)" fg:x="5460" fg:w="22"/><text x="2.8418%" y="575.50"></text></g><g><title>cfree (22 samples, 0.01%)</title><rect x="2.5918%" y="549" width="0.0104%" height="15" fill="rgb(218,133,21)" fg:x="5460" fg:w="22"/><text x="2.8418%" y="559.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="2.5918%" y="533" width="0.0104%" height="15" fill="rgb(221,193,43)" fg:x="5460" fg:w="22"/><text x="2.8418%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (635 samples, 0.30%)</title><rect x="2.3018%" y="1029" width="0.3014%" height="15" fill="rgb(240,128,52)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (635 samples, 0.30%)</title><rect x="2.3018%" y="1013" width="0.3014%" height="15" fill="rgb(253,114,12)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (635 samples, 0.30%)</title><rect x="2.3018%" y="997" width="0.3014%" height="15" fill="rgb(215,223,47)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (635 samples, 0.30%)</title><rect x="2.3018%" y="981" width="0.3014%" height="15" fill="rgb(248,225,23)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="991.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (635 samples, 0.30%)</title><rect x="2.3018%" y="965" width="0.3014%" height="15" fill="rgb(250,108,0)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="975.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (635 samples, 0.30%)</title><rect x="2.3018%" y="949" width="0.3014%" height="15" fill="rgb(228,208,7)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (635 samples, 0.30%)</title><rect x="2.3018%" y="933" width="0.3014%" height="15" fill="rgb(244,45,10)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (635 samples, 0.30%)</title><rect x="2.3018%" y="917" width="0.3014%" height="15" fill="rgb(207,125,25)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="927.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (635 samples, 0.30%)</title><rect x="2.3018%" y="901" width="0.3014%" height="15" fill="rgb(210,195,18)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="911.50"></text></g><g><title>async_std::task::block_on::block_on (635 samples, 0.30%)</title><rect x="2.3018%" y="885" width="0.3014%" height="15" fill="rgb(249,80,12)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="895.50"></text></g><g><title>async_std::task::builder::Builder::blocking (635 samples, 0.30%)</title><rect x="2.3018%" y="869" width="0.3014%" height="15" fill="rgb(221,65,9)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (635 samples, 0.30%)</title><rect x="2.3018%" y="853" width="0.3014%" height="15" fill="rgb(235,49,36)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (635 samples, 0.30%)</title><rect x="2.3018%" y="837" width="0.3014%" height="15" fill="rgb(225,32,20)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="847.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (635 samples, 0.30%)</title><rect x="2.3018%" y="821" width="0.3014%" height="15" fill="rgb(215,141,46)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="831.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (635 samples, 0.30%)</title><rect x="2.3018%" y="805" width="0.3014%" height="15" fill="rgb(250,160,47)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (635 samples, 0.30%)</title><rect x="2.3018%" y="789" width="0.3014%" height="15" fill="rgb(216,222,40)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (635 samples, 0.30%)</title><rect x="2.3018%" y="773" width="0.3014%" height="15" fill="rgb(234,217,39)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (635 samples, 0.30%)</title><rect x="2.3018%" y="757" width="0.3014%" height="15" fill="rgb(207,178,40)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="767.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (635 samples, 0.30%)</title><rect x="2.3018%" y="741" width="0.3014%" height="15" fill="rgb(221,136,13)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="751.50"></text></g><g><title>async_global_executor::executor::block_on (635 samples, 0.30%)</title><rect x="2.3018%" y="725" width="0.3014%" height="15" fill="rgb(249,199,10)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (635 samples, 0.30%)</title><rect x="2.3018%" y="709" width="0.3014%" height="15" fill="rgb(249,222,13)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (635 samples, 0.30%)</title><rect x="2.3018%" y="693" width="0.3014%" height="15" fill="rgb(244,185,38)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="703.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (635 samples, 0.30%)</title><rect x="2.3018%" y="677" width="0.3014%" height="15" fill="rgb(236,202,9)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="687.50"></text></g><g><title>async_global_executor::reactor::block_on (635 samples, 0.30%)</title><rect x="2.3018%" y="661" width="0.3014%" height="15" fill="rgb(250,229,37)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="671.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (635 samples, 0.30%)</title><rect x="2.3018%" y="645" width="0.3014%" height="15" fill="rgb(206,174,23)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="655.50"></text></g><g><title>async_io::driver::block_on (635 samples, 0.30%)</title><rect x="2.3018%" y="629" width="0.3014%" height="15" fill="rgb(211,33,43)" fg:x="4849" fg:w="635"/><text x="2.5518%" y="639.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (65 samples, 0.03%)</title><rect x="2.6146%" y="933" width="0.0309%" height="15" fill="rgb(245,58,50)" fg:x="5508" fg:w="65"/><text x="2.8646%" y="943.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (65 samples, 0.03%)</title><rect x="2.6146%" y="917" width="0.0309%" height="15" fill="rgb(244,68,36)" fg:x="5508" fg:w="65"/><text x="2.8646%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (65 samples, 0.03%)</title><rect x="2.6146%" y="901" width="0.0309%" height="15" fill="rgb(232,229,15)" fg:x="5508" fg:w="65"/><text x="2.8646%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (65 samples, 0.03%)</title><rect x="2.6146%" y="885" width="0.0309%" height="15" fill="rgb(254,30,23)" fg:x="5508" fg:w="65"/><text x="2.8646%" y="895.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (52 samples, 0.02%)</title><rect x="2.6208%" y="869" width="0.0247%" height="15" fill="rgb(235,160,14)" fg:x="5521" fg:w="52"/><text x="2.8708%" y="879.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (52 samples, 0.02%)</title><rect x="2.6208%" y="853" width="0.0247%" height="15" fill="rgb(212,155,44)" fg:x="5521" fg:w="52"/><text x="2.8708%" y="863.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (52 samples, 0.02%)</title><rect x="2.6208%" y="837" width="0.0247%" height="15" fill="rgb(226,2,50)" fg:x="5521" fg:w="52"/><text x="2.8708%" y="847.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (52 samples, 0.02%)</title><rect x="2.6208%" y="821" width="0.0247%" height="15" fill="rgb(234,177,6)" fg:x="5521" fg:w="52"/><text x="2.8708%" y="831.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (48 samples, 0.02%)</title><rect x="2.6227%" y="805" width="0.0228%" height="15" fill="rgb(217,24,9)" fg:x="5525" fg:w="48"/><text x="2.8727%" y="815.50"></text></g><g><title>[unknown] (363 samples, 0.17%)</title><rect x="2.6564%" y="485" width="0.1723%" height="15" fill="rgb(220,13,46)" fg:x="5596" fg:w="363"/><text x="2.9064%" y="495.50"></text></g><g><title>[unknown] (359 samples, 0.17%)</title><rect x="2.6583%" y="469" width="0.1704%" height="15" fill="rgb(239,221,27)" fg:x="5600" fg:w="359"/><text x="2.9083%" y="479.50"></text></g><g><title>[unknown] (355 samples, 0.17%)</title><rect x="2.6602%" y="453" width="0.1685%" height="15" fill="rgb(222,198,25)" fg:x="5604" fg:w="355"/><text x="2.9102%" y="463.50"></text></g><g><title>[unknown] (354 samples, 0.17%)</title><rect x="2.6606%" y="437" width="0.1680%" height="15" fill="rgb(211,99,13)" fg:x="5605" fg:w="354"/><text x="2.9106%" y="447.50"></text></g><g><title>[unknown] (331 samples, 0.16%)</title><rect x="2.6716%" y="421" width="0.1571%" height="15" fill="rgb(232,111,31)" fg:x="5628" fg:w="331"/><text x="2.9216%" y="431.50"></text></g><g><title>[unknown] (279 samples, 0.13%)</title><rect x="2.6962%" y="405" width="0.1324%" height="15" fill="rgb(245,82,37)" fg:x="5680" fg:w="279"/><text x="2.9462%" y="415.50"></text></g><g><title>[unknown] (249 samples, 0.12%)</title><rect x="2.7105%" y="389" width="0.1182%" height="15" fill="rgb(227,149,46)" fg:x="5710" fg:w="249"/><text x="2.9605%" y="399.50"></text></g><g><title>[unknown] (228 samples, 0.11%)</title><rect x="2.7204%" y="373" width="0.1082%" height="15" fill="rgb(218,36,50)" fg:x="5731" fg:w="228"/><text x="2.9704%" y="383.50"></text></g><g><title>[unknown] (181 samples, 0.09%)</title><rect x="2.7428%" y="357" width="0.0859%" height="15" fill="rgb(226,80,48)" fg:x="5778" fg:w="181"/><text x="2.9928%" y="367.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="2.8102%" y="341" width="0.0185%" height="15" fill="rgb(238,224,15)" fg:x="5920" fg:w="39"/><text x="3.0602%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,586 samples, 0.75%)</title><rect x="2.3018%" y="1045" width="0.7529%" height="15" fill="rgb(241,136,10)" fg:x="4849" fg:w="1586"/><text x="2.5518%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (951 samples, 0.45%)</title><rect x="2.6032%" y="1029" width="0.4514%" height="15" fill="rgb(208,32,45)" fg:x="5484" fg:w="951"/><text x="2.8532%" y="1039.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (951 samples, 0.45%)</title><rect x="2.6032%" y="1013" width="0.4514%" height="15" fill="rgb(207,135,9)" fg:x="5484" fg:w="951"/><text x="2.8532%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (951 samples, 0.45%)</title><rect x="2.6032%" y="997" width="0.4514%" height="15" fill="rgb(206,86,44)" fg:x="5484" fg:w="951"/><text x="2.8532%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (951 samples, 0.45%)</title><rect x="2.6032%" y="981" width="0.4514%" height="15" fill="rgb(245,177,15)" fg:x="5484" fg:w="951"/><text x="2.8532%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (951 samples, 0.45%)</title><rect x="2.6032%" y="965" width="0.4514%" height="15" fill="rgb(206,64,50)" fg:x="5484" fg:w="951"/><text x="2.8532%" y="975.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (927 samples, 0.44%)</title><rect x="2.6146%" y="949" width="0.4400%" height="15" fill="rgb(234,36,40)" fg:x="5508" fg:w="927"/><text x="2.8646%" y="959.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (862 samples, 0.41%)</title><rect x="2.6454%" y="933" width="0.4092%" height="15" fill="rgb(213,64,8)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="943.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (862 samples, 0.41%)</title><rect x="2.6454%" y="917" width="0.4092%" height="15" fill="rgb(210,75,36)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="927.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (862 samples, 0.41%)</title><rect x="2.6454%" y="901" width="0.4092%" height="15" fill="rgb(229,88,21)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (862 samples, 0.41%)</title><rect x="2.6454%" y="885" width="0.4092%" height="15" fill="rgb(252,204,47)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (862 samples, 0.41%)</title><rect x="2.6454%" y="869" width="0.4092%" height="15" fill="rgb(208,77,27)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (862 samples, 0.41%)</title><rect x="2.6454%" y="853" width="0.4092%" height="15" fill="rgb(221,76,26)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (862 samples, 0.41%)</title><rect x="2.6454%" y="837" width="0.4092%" height="15" fill="rgb(225,139,18)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (862 samples, 0.41%)</title><rect x="2.6454%" y="821" width="0.4092%" height="15" fill="rgb(230,137,11)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (862 samples, 0.41%)</title><rect x="2.6454%" y="805" width="0.4092%" height="15" fill="rgb(212,28,1)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (862 samples, 0.41%)</title><rect x="2.6454%" y="789" width="0.4092%" height="15" fill="rgb(248,164,17)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (862 samples, 0.41%)</title><rect x="2.6454%" y="773" width="0.4092%" height="15" fill="rgb(222,171,42)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (862 samples, 0.41%)</title><rect x="2.6454%" y="757" width="0.4092%" height="15" fill="rgb(243,84,45)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (862 samples, 0.41%)</title><rect x="2.6454%" y="741" width="0.4092%" height="15" fill="rgb(252,49,23)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (862 samples, 0.41%)</title><rect x="2.6454%" y="725" width="0.4092%" height="15" fill="rgb(215,19,7)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="735.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (862 samples, 0.41%)</title><rect x="2.6454%" y="709" width="0.4092%" height="15" fill="rgb(238,81,41)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="719.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (862 samples, 0.41%)</title><rect x="2.6454%" y="693" width="0.4092%" height="15" fill="rgb(210,199,37)" fg:x="5573" fg:w="862"/><text x="2.8954%" y="703.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (861 samples, 0.41%)</title><rect x="2.6459%" y="677" width="0.4087%" height="15" fill="rgb(244,192,49)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="687.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (861 samples, 0.41%)</title><rect x="2.6459%" y="661" width="0.4087%" height="15" fill="rgb(226,211,11)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (861 samples, 0.41%)</title><rect x="2.6459%" y="645" width="0.4087%" height="15" fill="rgb(236,162,54)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (861 samples, 0.41%)</title><rect x="2.6459%" y="629" width="0.4087%" height="15" fill="rgb(220,229,9)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (861 samples, 0.41%)</title><rect x="2.6459%" y="613" width="0.4087%" height="15" fill="rgb(250,87,22)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (861 samples, 0.41%)</title><rect x="2.6459%" y="597" width="0.4087%" height="15" fill="rgb(239,43,17)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (861 samples, 0.41%)</title><rect x="2.6459%" y="581" width="0.4087%" height="15" fill="rgb(231,177,25)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (861 samples, 0.41%)</title><rect x="2.6459%" y="565" width="0.4087%" height="15" fill="rgb(219,179,1)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="575.50"></text></g><g><title>alloc::alloc::alloc (861 samples, 0.41%)</title><rect x="2.6459%" y="549" width="0.4087%" height="15" fill="rgb(238,219,53)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="559.50"></text></g><g><title>malloc (861 samples, 0.41%)</title><rect x="2.6459%" y="533" width="0.4087%" height="15" fill="rgb(232,167,36)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="543.50"></text></g><g><title>[libc.so.6] (861 samples, 0.41%)</title><rect x="2.6459%" y="517" width="0.4087%" height="15" fill="rgb(244,19,51)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="527.50"></text></g><g><title>[libc.so.6] (861 samples, 0.41%)</title><rect x="2.6459%" y="501" width="0.4087%" height="15" fill="rgb(224,6,22)" fg:x="5574" fg:w="861"/><text x="2.8959%" y="511.50"></text></g><g><title>__mprotect (476 samples, 0.23%)</title><rect x="2.8287%" y="485" width="0.2260%" height="15" fill="rgb(224,145,5)" fg:x="5959" fg:w="476"/><text x="3.0787%" y="495.50"></text></g><g><title>[unknown] (475 samples, 0.23%)</title><rect x="2.8291%" y="469" width="0.2255%" height="15" fill="rgb(234,130,49)" fg:x="5960" fg:w="475"/><text x="3.0791%" y="479.50"></text></g><g><title>[unknown] (470 samples, 0.22%)</title><rect x="2.8315%" y="453" width="0.2231%" height="15" fill="rgb(254,6,2)" fg:x="5965" fg:w="470"/><text x="3.0815%" y="463.50"></text></g><g><title>[unknown] (467 samples, 0.22%)</title><rect x="2.8329%" y="437" width="0.2217%" height="15" fill="rgb(208,96,46)" fg:x="5968" fg:w="467"/><text x="3.0829%" y="447.50"></text></g><g><title>[unknown] (463 samples, 0.22%)</title><rect x="2.8348%" y="421" width="0.2198%" height="15" fill="rgb(239,3,39)" fg:x="5972" fg:w="463"/><text x="3.0848%" y="431.50"></text></g><g><title>[unknown] (427 samples, 0.20%)</title><rect x="2.8519%" y="405" width="0.2027%" height="15" fill="rgb(233,210,1)" fg:x="6008" fg:w="427"/><text x="3.1019%" y="415.50"></text></g><g><title>[unknown] (367 samples, 0.17%)</title><rect x="2.8804%" y="389" width="0.1742%" height="15" fill="rgb(244,137,37)" fg:x="6068" fg:w="367"/><text x="3.1304%" y="399.50"></text></g><g><title>[unknown] (253 samples, 0.12%)</title><rect x="2.9345%" y="373" width="0.1201%" height="15" fill="rgb(240,136,2)" fg:x="6182" fg:w="253"/><text x="3.1845%" y="383.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="3.0200%" y="357" width="0.0347%" height="15" fill="rgb(239,18,37)" fg:x="6362" fg:w="73"/><text x="3.2700%" y="367.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="3.0366%" y="341" width="0.0180%" height="15" fill="rgb(218,185,22)" fg:x="6397" fg:w="38"/><text x="3.2866%" y="351.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="3.0418%" y="325" width="0.0128%" height="15" fill="rgb(225,218,4)" fg:x="6408" fg:w="27"/><text x="3.2918%" y="335.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1221" width="0.7643%" height="15" fill="rgb(230,182,32)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1231.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1205" width="0.7643%" height="15" fill="rgb(242,56,43)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1189" width="0.7643%" height="15" fill="rgb(233,99,24)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1173" width="0.7643%" height="15" fill="rgb(234,209,42)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1183.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1157" width="0.7643%" height="15" fill="rgb(227,7,12)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1167.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1141" width="0.7643%" height="15" fill="rgb(245,203,43)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1125" width="0.7643%" height="15" fill="rgb(238,205,33)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1109" width="0.7643%" height="15" fill="rgb(231,56,7)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1093" width="0.7643%" height="15" fill="rgb(244,186,29)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1077" width="0.7643%" height="15" fill="rgb(234,111,31)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1087.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,610 samples, 0.76%)</title><rect x="2.3018%" y="1061" width="0.7643%" height="15" fill="rgb(241,149,10)" fg:x="4849" fg:w="1610"/><text x="2.5518%" y="1071.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="3.0546%" y="1045" width="0.0114%" height="15" fill="rgb(249,206,44)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="3.0546%" y="1029" width="0.0114%" height="15" fill="rgb(251,153,30)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (24 samples, 0.01%)</title><rect x="3.0546%" y="1013" width="0.0114%" height="15" fill="rgb(239,152,38)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="3.0546%" y="997" width="0.0114%" height="15" fill="rgb(249,139,47)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="1007.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (24 samples, 0.01%)</title><rect x="3.0546%" y="981" width="0.0114%" height="15" fill="rgb(244,64,35)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="3.0546%" y="965" width="0.0114%" height="15" fill="rgb(216,46,15)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="975.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (24 samples, 0.01%)</title><rect x="3.0546%" y="949" width="0.0114%" height="15" fill="rgb(250,74,19)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="3.0546%" y="933" width="0.0114%" height="15" fill="rgb(249,42,33)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="943.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (24 samples, 0.01%)</title><rect x="3.0546%" y="917" width="0.0114%" height="15" fill="rgb(242,149,17)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="3.0546%" y="901" width="0.0114%" height="15" fill="rgb(244,29,21)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="911.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (24 samples, 0.01%)</title><rect x="3.0546%" y="885" width="0.0114%" height="15" fill="rgb(220,130,37)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="3.0546%" y="869" width="0.0114%" height="15" fill="rgb(211,67,2)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="879.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (24 samples, 0.01%)</title><rect x="3.0546%" y="853" width="0.0114%" height="15" fill="rgb(235,68,52)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="3.0546%" y="837" width="0.0114%" height="15" fill="rgb(246,142,3)" fg:x="6435" fg:w="24"/><text x="3.3046%" y="847.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (41 samples, 0.02%)</title><rect x="3.0693%" y="485" width="0.0195%" height="15" fill="rgb(241,25,7)" fg:x="6466" fg:w="41"/><text x="3.3193%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (41 samples, 0.02%)</title><rect x="3.0693%" y="469" width="0.0195%" height="15" fill="rgb(242,119,39)" fg:x="6466" fg:w="41"/><text x="3.3193%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (41 samples, 0.02%)</title><rect x="3.0693%" y="453" width="0.0195%" height="15" fill="rgb(241,98,45)" fg:x="6466" fg:w="41"/><text x="3.3193%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (81 samples, 0.04%)</title><rect x="3.0693%" y="501" width="0.0384%" height="15" fill="rgb(254,28,30)" fg:x="6466" fg:w="81"/><text x="3.3193%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (40 samples, 0.02%)</title><rect x="3.0888%" y="485" width="0.0190%" height="15" fill="rgb(241,142,54)" fg:x="6507" fg:w="40"/><text x="3.3388%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="3.0888%" y="469" width="0.0190%" height="15" fill="rgb(222,85,15)" fg:x="6507" fg:w="40"/><text x="3.3388%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (40 samples, 0.02%)</title><rect x="3.0888%" y="453" width="0.0190%" height="15" fill="rgb(210,85,47)" fg:x="6507" fg:w="40"/><text x="3.3388%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (40 samples, 0.02%)</title><rect x="3.0888%" y="437" width="0.0190%" height="15" fill="rgb(224,206,25)" fg:x="6507" fg:w="40"/><text x="3.3388%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (40 samples, 0.02%)</title><rect x="3.0888%" y="421" width="0.0190%" height="15" fill="rgb(243,201,19)" fg:x="6507" fg:w="40"/><text x="3.3388%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (40 samples, 0.02%)</title><rect x="3.0888%" y="405" width="0.0190%" height="15" fill="rgb(236,59,4)" fg:x="6507" fg:w="40"/><text x="3.3388%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (40 samples, 0.02%)</title><rect x="3.0888%" y="389" width="0.0190%" height="15" fill="rgb(254,179,45)" fg:x="6507" fg:w="40"/><text x="3.3388%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (32 samples, 0.02%)</title><rect x="3.0926%" y="373" width="0.0152%" height="15" fill="rgb(226,14,10)" fg:x="6515" fg:w="32"/><text x="3.3426%" y="383.50"></text></g><g><title>alloc::alloc::box_free (32 samples, 0.02%)</title><rect x="3.0926%" y="357" width="0.0152%" height="15" fill="rgb(244,27,41)" fg:x="6515" fg:w="32"/><text x="3.3426%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.02%)</title><rect x="3.0926%" y="341" width="0.0152%" height="15" fill="rgb(235,35,32)" fg:x="6515" fg:w="32"/><text x="3.3426%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.02%)</title><rect x="3.0926%" y="325" width="0.0152%" height="15" fill="rgb(218,68,31)" fg:x="6515" fg:w="32"/><text x="3.3426%" y="335.50"></text></g><g><title>cfree (32 samples, 0.02%)</title><rect x="3.0926%" y="309" width="0.0152%" height="15" fill="rgb(207,120,37)" fg:x="6515" fg:w="32"/><text x="3.3426%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.04%)</title><rect x="3.0679%" y="565" width="0.0432%" height="15" fill="rgb(227,98,0)" fg:x="6463" fg:w="91"/><text x="3.3179%" y="575.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (91 samples, 0.04%)</title><rect x="3.0679%" y="549" width="0.0432%" height="15" fill="rgb(207,7,3)" fg:x="6463" fg:w="91"/><text x="3.3179%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.04%)</title><rect x="3.0679%" y="533" width="0.0432%" height="15" fill="rgb(206,98,19)" fg:x="6463" fg:w="91"/><text x="3.3179%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (91 samples, 0.04%)</title><rect x="3.0679%" y="517" width="0.0432%" height="15" fill="rgb(217,5,26)" fg:x="6463" fg:w="91"/><text x="3.3179%" y="527.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (114 samples, 0.05%)</title><rect x="3.0679%" y="901" width="0.0541%" height="15" fill="rgb(235,190,38)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (114 samples, 0.05%)</title><rect x="3.0679%" y="885" width="0.0541%" height="15" fill="rgb(247,86,24)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (114 samples, 0.05%)</title><rect x="3.0679%" y="869" width="0.0541%" height="15" fill="rgb(205,101,16)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="879.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (114 samples, 0.05%)</title><rect x="3.0679%" y="853" width="0.0541%" height="15" fill="rgb(246,168,33)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="863.50"></text></g><g><title>async_std::task::block_on::block_on (114 samples, 0.05%)</title><rect x="3.0679%" y="837" width="0.0541%" height="15" fill="rgb(231,114,1)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="847.50"></text></g><g><title>async_std::task::builder::Builder::blocking (114 samples, 0.05%)</title><rect x="3.0679%" y="821" width="0.0541%" height="15" fill="rgb(207,184,53)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (114 samples, 0.05%)</title><rect x="3.0679%" y="805" width="0.0541%" height="15" fill="rgb(224,95,51)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (114 samples, 0.05%)</title><rect x="3.0679%" y="789" width="0.0541%" height="15" fill="rgb(212,188,45)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="799.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (114 samples, 0.05%)</title><rect x="3.0679%" y="773" width="0.0541%" height="15" fill="rgb(223,154,38)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (114 samples, 0.05%)</title><rect x="3.0679%" y="757" width="0.0541%" height="15" fill="rgb(251,22,52)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (114 samples, 0.05%)</title><rect x="3.0679%" y="741" width="0.0541%" height="15" fill="rgb(229,209,22)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (114 samples, 0.05%)</title><rect x="3.0679%" y="725" width="0.0541%" height="15" fill="rgb(234,138,34)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (114 samples, 0.05%)</title><rect x="3.0679%" y="709" width="0.0541%" height="15" fill="rgb(212,95,11)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="719.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (114 samples, 0.05%)</title><rect x="3.0679%" y="693" width="0.0541%" height="15" fill="rgb(240,179,47)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="703.50"></text></g><g><title>async_global_executor::executor::block_on (114 samples, 0.05%)</title><rect x="3.0679%" y="677" width="0.0541%" height="15" fill="rgb(240,163,11)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (114 samples, 0.05%)</title><rect x="3.0679%" y="661" width="0.0541%" height="15" fill="rgb(236,37,12)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (114 samples, 0.05%)</title><rect x="3.0679%" y="645" width="0.0541%" height="15" fill="rgb(232,164,16)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="655.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (114 samples, 0.05%)</title><rect x="3.0679%" y="629" width="0.0541%" height="15" fill="rgb(244,205,15)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="639.50"></text></g><g><title>async_global_executor::reactor::block_on (114 samples, 0.05%)</title><rect x="3.0679%" y="613" width="0.0541%" height="15" fill="rgb(223,117,47)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="623.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (114 samples, 0.05%)</title><rect x="3.0679%" y="597" width="0.0541%" height="15" fill="rgb(244,107,35)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="607.50"></text></g><g><title>async_io::driver::block_on (114 samples, 0.05%)</title><rect x="3.0679%" y="581" width="0.0541%" height="15" fill="rgb(205,140,8)" fg:x="6463" fg:w="114"/><text x="3.3179%" y="591.50"></text></g><g><title>parking::pair (22 samples, 0.01%)</title><rect x="3.1116%" y="565" width="0.0104%" height="15" fill="rgb(228,84,46)" fg:x="6555" fg:w="22"/><text x="3.3616%" y="575.50"></text></g><g><title>parking::Parker::new (22 samples, 0.01%)</title><rect x="3.1116%" y="549" width="0.0104%" height="15" fill="rgb(254,188,9)" fg:x="6555" fg:w="22"/><text x="3.3616%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (22 samples, 0.01%)</title><rect x="3.1116%" y="533" width="0.0104%" height="15" fill="rgb(206,112,54)" fg:x="6555" fg:w="22"/><text x="3.3616%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.01%)</title><rect x="3.1116%" y="517" width="0.0104%" height="15" fill="rgb(216,84,49)" fg:x="6555" fg:w="22"/><text x="3.3616%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.01%)</title><rect x="3.1116%" y="501" width="0.0104%" height="15" fill="rgb(214,194,35)" fg:x="6555" fg:w="22"/><text x="3.3616%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.01%)</title><rect x="3.1116%" y="485" width="0.0104%" height="15" fill="rgb(249,28,3)" fg:x="6555" fg:w="22"/><text x="3.3616%" y="495.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.01%)</title><rect x="3.1116%" y="469" width="0.0104%" height="15" fill="rgb(222,56,52)" fg:x="6555" fg:w="22"/><text x="3.3616%" y="479.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="3.1116%" y="453" width="0.0104%" height="15" fill="rgb(245,217,50)" fg:x="6555" fg:w="22"/><text x="3.3616%" y="463.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (162 samples, 0.08%)</title><rect x="3.0679%" y="981" width="0.0769%" height="15" fill="rgb(213,201,24)" fg:x="6463" fg:w="162"/><text x="3.3179%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (162 samples, 0.08%)</title><rect x="3.0679%" y="965" width="0.0769%" height="15" fill="rgb(248,116,28)" fg:x="6463" fg:w="162"/><text x="3.3179%" y="975.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (162 samples, 0.08%)</title><rect x="3.0679%" y="949" width="0.0769%" height="15" fill="rgb(219,72,43)" fg:x="6463" fg:w="162"/><text x="3.3179%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (162 samples, 0.08%)</title><rect x="3.0679%" y="933" width="0.0769%" height="15" fill="rgb(209,138,14)" fg:x="6463" fg:w="162"/><text x="3.3179%" y="943.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (162 samples, 0.08%)</title><rect x="3.0679%" y="917" width="0.0769%" height="15" fill="rgb(222,18,33)" fg:x="6463" fg:w="162"/><text x="3.3179%" y="927.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (48 samples, 0.02%)</title><rect x="3.1220%" y="901" width="0.0228%" height="15" fill="rgb(213,199,7)" fg:x="6577" fg:w="48"/><text x="3.3720%" y="911.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (48 samples, 0.02%)</title><rect x="3.1220%" y="885" width="0.0228%" height="15" fill="rgb(250,110,10)" fg:x="6577" fg:w="48"/><text x="3.3720%" y="895.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (48 samples, 0.02%)</title><rect x="3.1220%" y="869" width="0.0228%" height="15" fill="rgb(248,123,6)" fg:x="6577" fg:w="48"/><text x="3.3720%" y="879.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (48 samples, 0.02%)</title><rect x="3.1220%" y="853" width="0.0228%" height="15" fill="rgb(206,91,31)" fg:x="6577" fg:w="48"/><text x="3.3720%" y="863.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (48 samples, 0.02%)</title><rect x="3.1220%" y="837" width="0.0228%" height="15" fill="rgb(211,154,13)" fg:x="6577" fg:w="48"/><text x="3.3720%" y="847.50"></text></g><g><title>zenoh::net::routing::router::Tables::schedule_compute_trees (48 samples, 0.02%)</title><rect x="3.1220%" y="821" width="0.0228%" height="15" fill="rgb(225,148,7)" fg:x="6577" fg:w="48"/><text x="3.3720%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 0.08%)</title><rect x="3.0679%" y="997" width="0.0850%" height="15" fill="rgb(220,160,43)" fg:x="6463" fg:w="179"/><text x="3.3179%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (194 samples, 0.09%)</title><rect x="3.0660%" y="1221" width="0.0921%" height="15" fill="rgb(213,52,39)" fg:x="6459" fg:w="194"/><text x="3.3160%" y="1231.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (194 samples, 0.09%)</title><rect x="3.0660%" y="1205" width="0.0921%" height="15" fill="rgb(243,137,7)" fg:x="6459" fg:w="194"/><text x="3.3160%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (194 samples, 0.09%)</title><rect x="3.0660%" y="1189" width="0.0921%" height="15" fill="rgb(230,79,13)" fg:x="6459" fg:w="194"/><text x="3.3160%" y="1199.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (194 samples, 0.09%)</title><rect x="3.0660%" y="1173" width="0.0921%" height="15" fill="rgb(247,105,23)" fg:x="6459" fg:w="194"/><text x="3.3160%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (194 samples, 0.09%)</title><rect x="3.0660%" y="1157" width="0.0921%" height="15" fill="rgb(223,179,41)" fg:x="6459" fg:w="194"/><text x="3.3160%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (190 samples, 0.09%)</title><rect x="3.0679%" y="1141" width="0.0902%" height="15" fill="rgb(218,9,34)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (190 samples, 0.09%)</title><rect x="3.0679%" y="1125" width="0.0902%" height="15" fill="rgb(222,106,8)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1135.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (190 samples, 0.09%)</title><rect x="3.0679%" y="1109" width="0.0902%" height="15" fill="rgb(211,220,0)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1119.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (190 samples, 0.09%)</title><rect x="3.0679%" y="1093" width="0.0902%" height="15" fill="rgb(229,52,16)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (190 samples, 0.09%)</title><rect x="3.0679%" y="1077" width="0.0902%" height="15" fill="rgb(212,155,18)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (190 samples, 0.09%)</title><rect x="3.0679%" y="1061" width="0.0902%" height="15" fill="rgb(242,21,14)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (190 samples, 0.09%)</title><rect x="3.0679%" y="1045" width="0.0902%" height="15" fill="rgb(222,19,48)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1055.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (190 samples, 0.09%)</title><rect x="3.0679%" y="1029" width="0.0902%" height="15" fill="rgb(232,45,27)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1039.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (190 samples, 0.09%)</title><rect x="3.0679%" y="1013" width="0.0902%" height="15" fill="rgb(249,103,42)" fg:x="6463" fg:w="190"/><text x="3.3179%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (36 samples, 0.02%)</title><rect x="3.1581%" y="1205" width="0.0171%" height="15" fill="rgb(246,81,33)" fg:x="6653" fg:w="36"/><text x="3.4081%" y="1215.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (36 samples, 0.02%)</title><rect x="3.1581%" y="1189" width="0.0171%" height="15" fill="rgb(252,33,42)" fg:x="6653" fg:w="36"/><text x="3.4081%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.02%)</title><rect x="3.1581%" y="1173" width="0.0171%" height="15" fill="rgb(209,212,41)" fg:x="6653" fg:w="36"/><text x="3.4081%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.02%)</title><rect x="3.1581%" y="1157" width="0.0171%" height="15" fill="rgb(207,154,6)" fg:x="6653" fg:w="36"/><text x="3.4081%" y="1167.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (36 samples, 0.02%)</title><rect x="3.1581%" y="1141" width="0.0171%" height="15" fill="rgb(223,64,47)" fg:x="6653" fg:w="36"/><text x="3.4081%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (36 samples, 0.02%)</title><rect x="3.1581%" y="1125" width="0.0171%" height="15" fill="rgb(211,161,38)" fg:x="6653" fg:w="36"/><text x="3.4081%" y="1135.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (23 samples, 0.01%)</title><rect x="3.1643%" y="1109" width="0.0109%" height="15" fill="rgb(219,138,40)" fg:x="6666" fg:w="23"/><text x="3.4143%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.01%)</title><rect x="3.1643%" y="1093" width="0.0109%" height="15" fill="rgb(241,228,46)" fg:x="6666" fg:w="23"/><text x="3.4143%" y="1103.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (37 samples, 0.02%)</title><rect x="3.1581%" y="1221" width="0.0176%" height="15" fill="rgb(223,209,38)" fg:x="6653" fg:w="37"/><text x="3.4081%" y="1231.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (23 samples, 0.01%)</title><rect x="3.1771%" y="1141" width="0.0109%" height="15" fill="rgb(236,164,45)" fg:x="6693" fg:w="23"/><text x="3.4271%" y="1151.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (23 samples, 0.01%)</title><rect x="3.1771%" y="1125" width="0.0109%" height="15" fill="rgb(231,15,5)" fg:x="6693" fg:w="23"/><text x="3.4271%" y="1135.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (23 samples, 0.01%)</title><rect x="3.1771%" y="1109" width="0.0109%" height="15" fill="rgb(252,35,15)" fg:x="6693" fg:w="23"/><text x="3.4271%" y="1119.50"></text></g><g><title>&lt;zenoh::queryable::QueryableBuilder as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="3.1771%" y="1205" width="0.0133%" height="15" fill="rgb(248,181,18)" fg:x="6693" fg:w="28"/><text x="3.4271%" y="1215.50"></text></g><g><title>&lt;zenoh::queryable::QueryableBuilder as zenoh_sync::Runnable&gt;::run (28 samples, 0.01%)</title><rect x="3.1771%" y="1189" width="0.0133%" height="15" fill="rgb(233,39,42)" fg:x="6693" fg:w="28"/><text x="3.4271%" y="1199.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (28 samples, 0.01%)</title><rect x="3.1771%" y="1173" width="0.0133%" height="15" fill="rgb(238,110,33)" fg:x="6693" fg:w="28"/><text x="3.4271%" y="1183.50"></text></g><g><title>zenoh::net::routing::queries::declare_client_queryable (28 samples, 0.01%)</title><rect x="3.1771%" y="1157" width="0.0133%" height="15" fill="rgb(233,195,10)" fg:x="6693" fg:w="28"/><text x="3.4271%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.03%)</title><rect x="3.1999%" y="1093" width="0.0252%" height="15" fill="rgb(254,105,3)" fg:x="6741" fg:w="53"/><text x="3.4499%" y="1103.50"></text></g><g><title>async_global_executor::threading::spawn_more_threads::{{closure}} (51 samples, 0.02%)</title><rect x="3.2008%" y="1077" width="0.0242%" height="15" fill="rgb(221,225,9)" fg:x="6743" fg:w="51"/><text x="3.4508%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn (36 samples, 0.02%)</title><rect x="3.2080%" y="1061" width="0.0171%" height="15" fill="rgb(224,227,45)" fg:x="6758" fg:w="36"/><text x="3.4580%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (36 samples, 0.02%)</title><rect x="3.2080%" y="1045" width="0.0171%" height="15" fill="rgb(229,198,43)" fg:x="6758" fg:w="36"/><text x="3.4580%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (36 samples, 0.02%)</title><rect x="3.2080%" y="1029" width="0.0171%" height="15" fill="rgb(206,209,35)" fg:x="6758" fg:w="36"/><text x="3.4580%" y="1039.50"></text></g><g><title>std::sys::unix::thread::Thread::new (30 samples, 0.01%)</title><rect x="3.2108%" y="1013" width="0.0142%" height="15" fill="rgb(245,195,53)" fg:x="6764" fg:w="30"/><text x="3.4608%" y="1023.50"></text></g><g><title>pthread_create (27 samples, 0.01%)</title><rect x="3.2122%" y="997" width="0.0128%" height="15" fill="rgb(240,92,26)" fg:x="6767" fg:w="27"/><text x="3.4622%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (78 samples, 0.04%)</title><rect x="3.1975%" y="1125" width="0.0370%" height="15" fill="rgb(207,40,23)" fg:x="6736" fg:w="78"/><text x="3.4475%" y="1135.50"></text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}} (78 samples, 0.04%)</title><rect x="3.1975%" y="1109" width="0.0370%" height="15" fill="rgb(223,111,35)" fg:x="6736" fg:w="78"/><text x="3.4475%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (84 samples, 0.04%)</title><rect x="3.1951%" y="1157" width="0.0399%" height="15" fill="rgb(229,147,28)" fg:x="6731" fg:w="84"/><text x="3.4451%" y="1167.50"></text></g><g><title>zenoh::session::Session::new::{{closure}} (80 samples, 0.04%)</title><rect x="3.1970%" y="1141" width="0.0380%" height="15" fill="rgb(211,29,28)" fg:x="6735" fg:w="80"/><text x="3.4470%" y="1151.50"></text></g><g><title>&lt;zenoh_sync::ZPinBoxFuture&lt;T&gt; as core::future::future::Future&gt;::poll (85 samples, 0.04%)</title><rect x="3.1951%" y="1205" width="0.0403%" height="15" fill="rgb(228,72,33)" fg:x="6731" fg:w="85"/><text x="3.4451%" y="1215.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (85 samples, 0.04%)</title><rect x="3.1951%" y="1189" width="0.0403%" height="15" fill="rgb(205,214,31)" fg:x="6731" fg:w="85"/><text x="3.4451%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (85 samples, 0.04%)</title><rect x="3.1951%" y="1173" width="0.0403%" height="15" fill="rgb(224,111,15)" fg:x="6731" fg:w="85"/><text x="3.4451%" y="1183.50"></text></g><g><title>router_eval_test::main::main::{{closure}}::{{closure}}::{{closure}} (128 samples, 0.06%)</title><rect x="3.1757%" y="1221" width="0.0608%" height="15" fill="rgb(253,21,26)" fg:x="6690" fg:w="128"/><text x="3.4257%" y="1231.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (37 samples, 0.02%)</title><rect x="3.2910%" y="901" width="0.0176%" height="15" fill="rgb(245,139,43)" fg:x="6933" fg:w="37"/><text x="3.5410%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (37 samples, 0.02%)</title><rect x="3.2910%" y="885" width="0.0176%" height="15" fill="rgb(252,170,7)" fg:x="6933" fg:w="37"/><text x="3.5410%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (152 samples, 0.07%)</title><rect x="3.2682%" y="917" width="0.0722%" height="15" fill="rgb(231,118,14)" fg:x="6885" fg:w="152"/><text x="3.5182%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (67 samples, 0.03%)</title><rect x="3.3086%" y="901" width="0.0318%" height="15" fill="rgb(238,83,0)" fg:x="6970" fg:w="67"/><text x="3.5586%" y="911.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (239 samples, 0.11%)</title><rect x="3.2402%" y="1029" width="0.1135%" height="15" fill="rgb(221,39,39)" fg:x="6826" fg:w="239"/><text x="3.4902%" y="1039.50"></text></g><g><title>rsa::pkcs1v15::encrypt (239 samples, 0.11%)</title><rect x="3.2402%" y="1013" width="0.1135%" height="15" fill="rgb(222,119,46)" fg:x="6826" fg:w="239"/><text x="3.4902%" y="1023.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::raw::EncryptionPrimitive&gt;::raw_encryption_primitive (239 samples, 0.11%)</title><rect x="3.2402%" y="997" width="0.1135%" height="15" fill="rgb(222,165,49)" fg:x="6826" fg:w="239"/><text x="3.4902%" y="1007.50"></text></g><g><title>rsa::internals::encrypt (239 samples, 0.11%)</title><rect x="3.2402%" y="981" width="0.1135%" height="15" fill="rgb(219,113,52)" fg:x="6826" fg:w="239"/><text x="3.4902%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (239 samples, 0.11%)</title><rect x="3.2402%" y="965" width="0.1135%" height="15" fill="rgb(214,7,15)" fg:x="6826" fg:w="239"/><text x="3.4902%" y="975.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (239 samples, 0.11%)</title><rect x="3.2402%" y="949" width="0.1135%" height="15" fill="rgb(235,32,4)" fg:x="6826" fg:w="239"/><text x="3.4902%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (215 samples, 0.10%)</title><rect x="3.2516%" y="933" width="0.1021%" height="15" fill="rgb(238,90,54)" fg:x="6850" fg:w="215"/><text x="3.5016%" y="943.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (27 samples, 0.01%)</title><rect x="3.3409%" y="917" width="0.0128%" height="15" fill="rgb(213,208,19)" fg:x="7038" fg:w="27"/><text x="3.5909%" y="927.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (25 samples, 0.01%)</title><rect x="3.3418%" y="901" width="0.0119%" height="15" fill="rgb(233,156,4)" fg:x="7040" fg:w="25"/><text x="3.5918%" y="911.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (31 samples, 0.01%)</title><rect x="3.3779%" y="901" width="0.0147%" height="15" fill="rgb(207,194,5)" fg:x="7116" fg:w="31"/><text x="3.6279%" y="911.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (31 samples, 0.01%)</title><rect x="3.3779%" y="885" width="0.0147%" height="15" fill="rgb(206,111,30)" fg:x="7116" fg:w="31"/><text x="3.6279%" y="895.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (31 samples, 0.01%)</title><rect x="3.3779%" y="869" width="0.0147%" height="15" fill="rgb(243,70,54)" fg:x="7116" fg:w="31"/><text x="3.6279%" y="879.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (31 samples, 0.01%)</title><rect x="3.3779%" y="853" width="0.0147%" height="15" fill="rgb(242,28,8)" fg:x="7116" fg:w="31"/><text x="3.6279%" y="863.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (63 samples, 0.03%)</title><rect x="3.3926%" y="885" width="0.0299%" height="15" fill="rgb(219,106,18)" fg:x="7147" fg:w="63"/><text x="3.6426%" y="895.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (63 samples, 0.03%)</title><rect x="3.3926%" y="869" width="0.0299%" height="15" fill="rgb(244,222,10)" fg:x="7147" fg:w="63"/><text x="3.6426%" y="879.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (63 samples, 0.03%)</title><rect x="3.3926%" y="853" width="0.0299%" height="15" fill="rgb(236,179,52)" fg:x="7147" fg:w="63"/><text x="3.6426%" y="863.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::RemAssign&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem_assign (64 samples, 0.03%)</title><rect x="3.3926%" y="901" width="0.0304%" height="15" fill="rgb(213,23,39)" fg:x="7147" fg:w="64"/><text x="3.6426%" y="911.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (24 samples, 0.01%)</title><rect x="3.4629%" y="885" width="0.0114%" height="15" fill="rgb(238,48,10)" fg:x="7295" fg:w="24"/><text x="3.7129%" y="895.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (24 samples, 0.01%)</title><rect x="3.4629%" y="869" width="0.0114%" height="15" fill="rgb(251,196,23)" fg:x="7295" fg:w="24"/><text x="3.7129%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (25 samples, 0.01%)</title><rect x="3.4894%" y="885" width="0.0119%" height="15" fill="rgb(250,152,24)" fg:x="7351" fg:w="25"/><text x="3.7394%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap_with_slice (28 samples, 0.01%)</title><rect x="3.5042%" y="885" width="0.0133%" height="15" fill="rgb(209,150,17)" fg:x="7382" fg:w="28"/><text x="3.7542%" y="895.50"></text></g><g><title>core::ptr::swap_nonoverlapping (26 samples, 0.01%)</title><rect x="3.5051%" y="869" width="0.0123%" height="15" fill="rgb(234,202,34)" fg:x="7384" fg:w="26"/><text x="3.7551%" y="879.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple (26 samples, 0.01%)</title><rect x="3.5051%" y="853" width="0.0123%" height="15" fill="rgb(253,148,53)" fg:x="7384" fg:w="26"/><text x="3.7551%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.02%)</title><rect x="3.5450%" y="869" width="0.0161%" height="15" fill="rgb(218,129,16)" fg:x="7468" fg:w="34"/><text x="3.7950%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (34 samples, 0.02%)</title><rect x="3.5450%" y="853" width="0.0161%" height="15" fill="rgb(216,85,19)" fg:x="7468" fg:w="34"/><text x="3.7950%" y="863.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (57 samples, 0.03%)</title><rect x="3.5654%" y="869" width="0.0271%" height="15" fill="rgb(235,228,7)" fg:x="7511" fg:w="57"/><text x="3.8154%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (57 samples, 0.03%)</title><rect x="3.5654%" y="853" width="0.0271%" height="15" fill="rgb(245,175,0)" fg:x="7511" fg:w="57"/><text x="3.8154%" y="863.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (324 samples, 0.15%)</title><rect x="3.5174%" y="885" width="0.1538%" height="15" fill="rgb(208,168,36)" fg:x="7410" fg:w="324"/><text x="3.7674%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (166 samples, 0.08%)</title><rect x="3.5925%" y="869" width="0.0788%" height="15" fill="rgb(246,171,24)" fg:x="7568" fg:w="166"/><text x="3.8425%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (59 samples, 0.03%)</title><rect x="3.6869%" y="869" width="0.0280%" height="15" fill="rgb(215,142,24)" fg:x="7767" fg:w="59"/><text x="3.9369%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (26 samples, 0.01%)</title><rect x="3.7026%" y="853" width="0.0123%" height="15" fill="rgb(250,187,7)" fg:x="7800" fg:w="26"/><text x="3.9526%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (26 samples, 0.01%)</title><rect x="3.7026%" y="837" width="0.0123%" height="15" fill="rgb(228,66,33)" fg:x="7800" fg:w="26"/><text x="3.9526%" y="847.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (75 samples, 0.04%)</title><rect x="3.6803%" y="885" width="0.0356%" height="15" fill="rgb(234,215,21)" fg:x="7753" fg:w="75"/><text x="3.9303%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (585 samples, 0.28%)</title><rect x="3.4387%" y="901" width="0.2777%" height="15" fill="rgb(222,191,20)" fg:x="7244" fg:w="585"/><text x="3.6887%" y="911.50"></text></g><g><title>rsa::internals::decrypt (757 samples, 0.36%)</title><rect x="3.3580%" y="949" width="0.3593%" height="15" fill="rgb(245,79,54)" fg:x="7074" fg:w="757"/><text x="3.6080%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (732 samples, 0.35%)</title><rect x="3.3698%" y="933" width="0.3475%" height="15" fill="rgb(240,10,37)" fg:x="7099" fg:w="732"/><text x="3.6198%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (726 samples, 0.34%)</title><rect x="3.3727%" y="917" width="0.3446%" height="15" fill="rgb(214,192,32)" fg:x="7105" fg:w="726"/><text x="3.6227%" y="927.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (23 samples, 0.01%)</title><rect x="3.7197%" y="885" width="0.0109%" height="15" fill="rgb(209,36,54)" fg:x="7836" fg:w="23"/><text x="3.9697%" y="895.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (22 samples, 0.01%)</title><rect x="3.7201%" y="869" width="0.0104%" height="15" fill="rgb(220,10,11)" fg:x="7837" fg:w="22"/><text x="3.9701%" y="879.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (22 samples, 0.01%)</title><rect x="3.7201%" y="853" width="0.0104%" height="15" fill="rgb(221,106,17)" fg:x="7837" fg:w="22"/><text x="3.9701%" y="863.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (25 samples, 0.01%)</title><rect x="3.7197%" y="901" width="0.0119%" height="15" fill="rgb(251,142,44)" fg:x="7836" fg:w="25"/><text x="3.9697%" y="911.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (37 samples, 0.02%)</title><rect x="3.7913%" y="869" width="0.0176%" height="15" fill="rgb(238,13,15)" fg:x="7987" fg:w="37"/><text x="4.0413%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (37 samples, 0.02%)</title><rect x="3.7913%" y="853" width="0.0176%" height="15" fill="rgb(208,107,27)" fg:x="7987" fg:w="37"/><text x="4.0413%" y="863.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (182 samples, 0.09%)</title><rect x="3.7619%" y="885" width="0.0864%" height="15" fill="rgb(205,136,37)" fg:x="7925" fg:w="182"/><text x="4.0119%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (83 samples, 0.04%)</title><rect x="3.8089%" y="869" width="0.0394%" height="15" fill="rgb(250,205,27)" fg:x="8024" fg:w="83"/><text x="4.0589%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (273 samples, 0.13%)</title><rect x="3.7406%" y="901" width="0.1296%" height="15" fill="rgb(210,80,43)" fg:x="7880" fg:w="273"/><text x="3.9906%" y="911.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (46 samples, 0.02%)</title><rect x="3.8483%" y="885" width="0.0218%" height="15" fill="rgb(247,160,36)" fg:x="8107" fg:w="46"/><text x="4.0983%" y="895.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (42 samples, 0.02%)</title><rect x="3.8502%" y="869" width="0.0199%" height="15" fill="rgb(234,13,49)" fg:x="8111" fg:w="42"/><text x="4.1002%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (30 samples, 0.01%)</title><rect x="3.8559%" y="853" width="0.0142%" height="15" fill="rgb(234,122,0)" fg:x="8123" fg:w="30"/><text x="4.1059%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (30 samples, 0.01%)</title><rect x="3.8559%" y="837" width="0.0142%" height="15" fill="rgb(207,146,38)" fg:x="8123" fg:w="30"/><text x="4.1059%" y="847.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (30 samples, 0.01%)</title><rect x="3.8559%" y="821" width="0.0142%" height="15" fill="rgb(207,177,25)" fg:x="8123" fg:w="30"/><text x="4.1059%" y="831.50"></text></g><g><title>rsa::internals::decrypt_and_check (1,081 samples, 0.51%)</title><rect x="3.3580%" y="965" width="0.5131%" height="15" fill="rgb(211,178,42)" fg:x="7074" fg:w="1081"/><text x="3.6080%" y="975.50"></text></g><g><title>rsa::internals::encrypt (324 samples, 0.15%)</title><rect x="3.7173%" y="949" width="0.1538%" height="15" fill="rgb(230,69,54)" fg:x="7831" fg:w="324"/><text x="3.9673%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (324 samples, 0.15%)</title><rect x="3.7173%" y="933" width="0.1538%" height="15" fill="rgb(214,135,41)" fg:x="7831" fg:w="324"/><text x="3.9673%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (324 samples, 0.15%)</title><rect x="3.7173%" y="917" width="0.1538%" height="15" fill="rgb(237,67,25)" fg:x="7831" fg:w="324"/><text x="3.9673%" y="927.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (1,330 samples, 0.63%)</title><rect x="3.2402%" y="1045" width="0.6313%" height="15" fill="rgb(222,189,50)" fg:x="6826" fg:w="1330"/><text x="3.4902%" y="1055.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (1,091 samples, 0.52%)</title><rect x="3.3537%" y="1029" width="0.5179%" height="15" fill="rgb(245,148,34)" fg:x="7065" fg:w="1091"/><text x="3.6037%" y="1039.50"></text></g><g><title>rsa::pkcs1v15::decrypt (1,091 samples, 0.52%)</title><rect x="3.3537%" y="1013" width="0.5179%" height="15" fill="rgb(222,29,6)" fg:x="7065" fg:w="1091"/><text x="3.6037%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (1,091 samples, 0.52%)</title><rect x="3.3537%" y="997" width="0.5179%" height="15" fill="rgb(221,189,43)" fg:x="7065" fg:w="1091"/><text x="3.6037%" y="1007.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (1,091 samples, 0.52%)</title><rect x="3.3537%" y="981" width="0.5179%" height="15" fill="rgb(207,36,27)" fg:x="7065" fg:w="1091"/><text x="3.6037%" y="991.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (1,352 samples, 0.64%)</title><rect x="3.2369%" y="1093" width="0.6418%" height="15" fill="rgb(217,90,24)" fg:x="6819" fg:w="1352"/><text x="3.4869%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,345 samples, 0.64%)</title><rect x="3.2402%" y="1077" width="0.6385%" height="15" fill="rgb(224,66,35)" fg:x="6826" fg:w="1345"/><text x="3.4902%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,345 samples, 0.64%)</title><rect x="3.2402%" y="1061" width="0.6385%" height="15" fill="rgb(221,13,50)" fg:x="6826" fg:w="1345"/><text x="3.4902%" y="1071.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (25 samples, 0.01%)</title><rect x="3.9057%" y="1029" width="0.0119%" height="15" fill="rgb(236,68,49)" fg:x="8228" fg:w="25"/><text x="4.1557%" y="1039.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (97 samples, 0.05%)</title><rect x="3.9314%" y="901" width="0.0460%" height="15" fill="rgb(229,146,28)" fg:x="8282" fg:w="97"/><text x="4.1814%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (92 samples, 0.04%)</title><rect x="3.9338%" y="885" width="0.0437%" height="15" fill="rgb(225,31,38)" fg:x="8287" fg:w="92"/><text x="4.1838%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (64 samples, 0.03%)</title><rect x="3.9470%" y="869" width="0.0304%" height="15" fill="rgb(250,208,3)" fg:x="8315" fg:w="64"/><text x="4.1970%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (64 samples, 0.03%)</title><rect x="3.9470%" y="853" width="0.0304%" height="15" fill="rgb(246,54,23)" fg:x="8315" fg:w="64"/><text x="4.1970%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (64 samples, 0.03%)</title><rect x="3.9470%" y="837" width="0.0304%" height="15" fill="rgb(243,76,11)" fg:x="8315" fg:w="64"/><text x="4.1970%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64 samples, 0.03%)</title><rect x="3.9470%" y="821" width="0.0304%" height="15" fill="rgb(245,21,50)" fg:x="8315" fg:w="64"/><text x="4.1970%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (58 samples, 0.03%)</title><rect x="3.9499%" y="805" width="0.0275%" height="15" fill="rgb(228,9,43)" fg:x="8321" fg:w="58"/><text x="4.1999%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.03%)</title><rect x="3.9499%" y="789" width="0.0275%" height="15" fill="rgb(208,100,47)" fg:x="8321" fg:w="58"/><text x="4.1999%" y="799.50"></text></g><g><title>[libc.so.6] (58 samples, 0.03%)</title><rect x="3.9499%" y="773" width="0.0275%" height="15" fill="rgb(232,26,8)" fg:x="8321" fg:w="58"/><text x="4.1999%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (104 samples, 0.05%)</title><rect x="3.9304%" y="981" width="0.0494%" height="15" fill="rgb(216,166,38)" fg:x="8280" fg:w="104"/><text x="4.1804%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (103 samples, 0.05%)</title><rect x="3.9309%" y="965" width="0.0489%" height="15" fill="rgb(251,202,51)" fg:x="8281" fg:w="103"/><text x="4.1809%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (102 samples, 0.05%)</title><rect x="3.9314%" y="949" width="0.0484%" height="15" fill="rgb(254,216,34)" fg:x="8282" fg:w="102"/><text x="4.1814%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (102 samples, 0.05%)</title><rect x="3.9314%" y="933" width="0.0484%" height="15" fill="rgb(251,32,27)" fg:x="8282" fg:w="102"/><text x="4.1814%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (102 samples, 0.05%)</title><rect x="3.9314%" y="917" width="0.0484%" height="15" fill="rgb(208,127,28)" fg:x="8282" fg:w="102"/><text x="4.1814%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (128 samples, 0.06%)</title><rect x="3.9257%" y="1013" width="0.0608%" height="15" fill="rgb(224,137,22)" fg:x="8270" fg:w="128"/><text x="4.1757%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (121 samples, 0.06%)</title><rect x="3.9290%" y="997" width="0.0574%" height="15" fill="rgb(254,70,32)" fg:x="8277" fg:w="121"/><text x="4.1790%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (130 samples, 0.06%)</title><rect x="3.9252%" y="1029" width="0.0617%" height="15" fill="rgb(229,75,37)" fg:x="8269" fg:w="130"/><text x="4.1752%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.01%)</title><rect x="3.9931%" y="917" width="0.0114%" height="15" fill="rgb(252,64,23)" fg:x="8412" fg:w="24"/><text x="4.2431%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (23 samples, 0.01%)</title><rect x="3.9936%" y="901" width="0.0109%" height="15" fill="rgb(232,162,48)" fg:x="8413" fg:w="23"/><text x="4.2436%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.02%)</title><rect x="3.9921%" y="981" width="0.0228%" height="15" fill="rgb(246,160,12)" fg:x="8410" fg:w="48"/><text x="4.2421%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.02%)</title><rect x="3.9921%" y="965" width="0.0228%" height="15" fill="rgb(247,166,0)" fg:x="8410" fg:w="48"/><text x="4.2421%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.02%)</title><rect x="3.9921%" y="949" width="0.0228%" height="15" fill="rgb(249,219,21)" fg:x="8410" fg:w="48"/><text x="4.2421%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (48 samples, 0.02%)</title><rect x="3.9921%" y="933" width="0.0228%" height="15" fill="rgb(205,209,3)" fg:x="8410" fg:w="48"/><text x="4.2421%" y="943.50"></text></g><g><title>getifaddrs (44 samples, 0.02%)</title><rect x="4.0377%" y="853" width="0.0209%" height="15" fill="rgb(243,44,1)" fg:x="8506" fg:w="44"/><text x="4.2877%" y="863.50"></text></g><g><title>[libc.so.6] (44 samples, 0.02%)</title><rect x="4.0377%" y="837" width="0.0209%" height="15" fill="rgb(206,159,16)" fg:x="8506" fg:w="44"/><text x="4.2877%" y="847.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (101 samples, 0.05%)</title><rect x="4.0163%" y="933" width="0.0479%" height="15" fill="rgb(244,77,30)" fg:x="8461" fg:w="101"/><text x="4.2663%" y="943.50"></text></g><g><title>zenoh_util::net::get_local_addresses (81 samples, 0.04%)</title><rect x="4.0258%" y="917" width="0.0384%" height="15" fill="rgb(218,69,12)" fg:x="8481" fg:w="81"/><text x="4.2758%" y="927.50"></text></g><g><title>pnet_datalink::interfaces (79 samples, 0.04%)</title><rect x="4.0268%" y="901" width="0.0375%" height="15" fill="rgb(212,87,7)" fg:x="8483" fg:w="79"/><text x="4.2768%" y="911.50"></text></g><g><title>pnet_datalink::backend::interfaces (79 samples, 0.04%)</title><rect x="4.0268%" y="885" width="0.0375%" height="15" fill="rgb(245,114,25)" fg:x="8483" fg:w="79"/><text x="4.2768%" y="895.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (79 samples, 0.04%)</title><rect x="4.0268%" y="869" width="0.0375%" height="15" fill="rgb(210,61,42)" fg:x="8483" fg:w="79"/><text x="4.2768%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (159 samples, 0.08%)</title><rect x="3.9912%" y="1013" width="0.0755%" height="15" fill="rgb(211,52,33)" fg:x="8408" fg:w="159"/><text x="4.2412%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (157 samples, 0.07%)</title><rect x="3.9921%" y="997" width="0.0745%" height="15" fill="rgb(234,58,33)" fg:x="8410" fg:w="157"/><text x="4.2421%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (109 samples, 0.05%)</title><rect x="4.0149%" y="981" width="0.0517%" height="15" fill="rgb(220,115,36)" fg:x="8458" fg:w="109"/><text x="4.2649%" y="991.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (109 samples, 0.05%)</title><rect x="4.0149%" y="965" width="0.0517%" height="15" fill="rgb(243,153,54)" fg:x="8458" fg:w="109"/><text x="4.2649%" y="975.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (107 samples, 0.05%)</title><rect x="4.0159%" y="949" width="0.0508%" height="15" fill="rgb(251,47,18)" fg:x="8460" fg:w="107"/><text x="4.2659%" y="959.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (203 samples, 0.10%)</title><rect x="3.9869%" y="1029" width="0.0964%" height="15" fill="rgb(242,102,42)" fg:x="8399" fg:w="203"/><text x="4.2369%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (35 samples, 0.02%)</title><rect x="4.0667%" y="1013" width="0.0166%" height="15" fill="rgb(234,31,38)" fg:x="8567" fg:w="35"/><text x="4.3167%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (35 samples, 0.02%)</title><rect x="4.0667%" y="997" width="0.0166%" height="15" fill="rgb(221,117,51)" fg:x="8567" fg:w="35"/><text x="4.3167%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (26 samples, 0.01%)</title><rect x="4.0709%" y="981" width="0.0123%" height="15" fill="rgb(212,20,18)" fg:x="8576" fg:w="26"/><text x="4.3209%" y="991.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (24 samples, 0.01%)</title><rect x="4.0719%" y="965" width="0.0114%" height="15" fill="rgb(245,133,36)" fg:x="8578" fg:w="24"/><text x="4.3219%" y="975.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (24 samples, 0.01%)</title><rect x="4.0719%" y="949" width="0.0114%" height="15" fill="rgb(212,6,19)" fg:x="8578" fg:w="24"/><text x="4.3219%" y="959.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (434 samples, 0.21%)</title><rect x="3.8787%" y="1077" width="0.2060%" height="15" fill="rgb(218,1,36)" fg:x="8171" fg:w="434"/><text x="4.1287%" y="1087.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (434 samples, 0.21%)</title><rect x="3.8787%" y="1061" width="0.2060%" height="15" fill="rgb(246,84,54)" fg:x="8171" fg:w="434"/><text x="4.1287%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (434 samples, 0.21%)</title><rect x="3.8787%" y="1045" width="0.2060%" height="15" fill="rgb(242,110,6)" fg:x="8171" fg:w="434"/><text x="4.1287%" y="1055.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="4.1251%" y="677" width="0.0138%" height="15" fill="rgb(214,47,5)" fg:x="8690" fg:w="29"/><text x="4.3751%" y="687.50"></text></g><g><title>[libc.so.6] (47 samples, 0.02%)</title><rect x="4.1175%" y="693" width="0.0223%" height="15" fill="rgb(218,159,25)" fg:x="8674" fg:w="47"/><text x="4.3675%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (62 samples, 0.03%)</title><rect x="4.1113%" y="821" width="0.0294%" height="15" fill="rgb(215,211,28)" fg:x="8661" fg:w="62"/><text x="4.3613%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (62 samples, 0.03%)</title><rect x="4.1113%" y="805" width="0.0294%" height="15" fill="rgb(238,59,32)" fg:x="8661" fg:w="62"/><text x="4.3613%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (61 samples, 0.03%)</title><rect x="4.1118%" y="789" width="0.0290%" height="15" fill="rgb(226,82,3)" fg:x="8662" fg:w="61"/><text x="4.3618%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (61 samples, 0.03%)</title><rect x="4.1118%" y="773" width="0.0290%" height="15" fill="rgb(240,164,32)" fg:x="8662" fg:w="61"/><text x="4.3618%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.03%)</title><rect x="4.1118%" y="757" width="0.0290%" height="15" fill="rgb(232,46,7)" fg:x="8662" fg:w="61"/><text x="4.3618%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.03%)</title><rect x="4.1118%" y="741" width="0.0290%" height="15" fill="rgb(229,129,53)" fg:x="8662" fg:w="61"/><text x="4.3618%" y="751.50"></text></g><g><title>alloc::alloc::alloc (59 samples, 0.03%)</title><rect x="4.1127%" y="725" width="0.0280%" height="15" fill="rgb(234,188,29)" fg:x="8664" fg:w="59"/><text x="4.3627%" y="735.50"></text></g><g><title>malloc (55 samples, 0.03%)</title><rect x="4.1146%" y="709" width="0.0261%" height="15" fill="rgb(246,141,4)" fg:x="8668" fg:w="55"/><text x="4.3646%" y="719.50"></text></g><g><title>[unknown] (119 samples, 0.06%)</title><rect x="4.1573%" y="645" width="0.0565%" height="15" fill="rgb(229,23,39)" fg:x="8758" fg:w="119"/><text x="4.4073%" y="655.50"></text></g><g><title>[unknown] (118 samples, 0.06%)</title><rect x="4.1578%" y="629" width="0.0560%" height="15" fill="rgb(206,12,3)" fg:x="8759" fg:w="118"/><text x="4.4078%" y="639.50"></text></g><g><title>[unknown] (118 samples, 0.06%)</title><rect x="4.1578%" y="613" width="0.0560%" height="15" fill="rgb(252,226,20)" fg:x="8759" fg:w="118"/><text x="4.4078%" y="623.50"></text></g><g><title>[unknown] (118 samples, 0.06%)</title><rect x="4.1578%" y="597" width="0.0560%" height="15" fill="rgb(216,123,35)" fg:x="8759" fg:w="118"/><text x="4.4078%" y="607.50"></text></g><g><title>[unknown] (102 samples, 0.05%)</title><rect x="4.1654%" y="581" width="0.0484%" height="15" fill="rgb(212,68,40)" fg:x="8775" fg:w="102"/><text x="4.4154%" y="591.50"></text></g><g><title>[unknown] (85 samples, 0.04%)</title><rect x="4.1735%" y="565" width="0.0403%" height="15" fill="rgb(254,125,32)" fg:x="8792" fg:w="85"/><text x="4.4235%" y="575.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="4.1768%" y="549" width="0.0370%" height="15" fill="rgb(253,97,22)" fg:x="8799" fg:w="78"/><text x="4.4268%" y="559.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="4.1811%" y="533" width="0.0328%" height="15" fill="rgb(241,101,14)" fg:x="8808" fg:w="69"/><text x="4.4311%" y="543.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="4.1887%" y="517" width="0.0252%" height="15" fill="rgb(238,103,29)" fg:x="8824" fg:w="53"/><text x="4.4387%" y="527.50"></text></g><g><title>[libc.so.6] (295 samples, 0.14%)</title><rect x="4.1516%" y="661" width="0.1400%" height="15" fill="rgb(233,195,47)" fg:x="8746" fg:w="295"/><text x="4.4016%" y="671.50"></text></g><g><title>__mprotect (163 samples, 0.08%)</title><rect x="4.2143%" y="645" width="0.0774%" height="15" fill="rgb(246,218,30)" fg:x="8878" fg:w="163"/><text x="4.4643%" y="655.50"></text></g><g><title>[unknown] (163 samples, 0.08%)</title><rect x="4.2143%" y="629" width="0.0774%" height="15" fill="rgb(219,145,47)" fg:x="8878" fg:w="163"/><text x="4.4643%" y="639.50"></text></g><g><title>[unknown] (160 samples, 0.08%)</title><rect x="4.2157%" y="613" width="0.0760%" height="15" fill="rgb(243,12,26)" fg:x="8881" fg:w="160"/><text x="4.4657%" y="623.50"></text></g><g><title>[unknown] (156 samples, 0.07%)</title><rect x="4.2176%" y="597" width="0.0741%" height="15" fill="rgb(214,87,16)" fg:x="8885" fg:w="156"/><text x="4.4676%" y="607.50"></text></g><g><title>[unknown] (153 samples, 0.07%)</title><rect x="4.2190%" y="581" width="0.0726%" height="15" fill="rgb(208,99,42)" fg:x="8888" fg:w="153"/><text x="4.4690%" y="591.50"></text></g><g><title>[unknown] (145 samples, 0.07%)</title><rect x="4.2228%" y="565" width="0.0688%" height="15" fill="rgb(253,99,2)" fg:x="8896" fg:w="145"/><text x="4.4728%" y="575.50"></text></g><g><title>[unknown] (123 samples, 0.06%)</title><rect x="4.2333%" y="549" width="0.0584%" height="15" fill="rgb(220,168,23)" fg:x="8918" fg:w="123"/><text x="4.4833%" y="559.50"></text></g><g><title>[unknown] (89 samples, 0.04%)</title><rect x="4.2494%" y="533" width="0.0422%" height="15" fill="rgb(242,38,24)" fg:x="8952" fg:w="89"/><text x="4.4994%" y="543.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="4.2784%" y="517" width="0.0133%" height="15" fill="rgb(225,182,9)" fg:x="9013" fg:w="28"/><text x="4.5284%" y="527.50"></text></g><g><title>[libc.so.6] (301 samples, 0.14%)</title><rect x="4.1493%" y="677" width="0.1429%" height="15" fill="rgb(243,178,37)" fg:x="8741" fg:w="301"/><text x="4.3993%" y="687.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (337 samples, 0.16%)</title><rect x="4.1417%" y="821" width="0.1600%" height="15" fill="rgb(232,139,19)" fg:x="8725" fg:w="337"/><text x="4.3917%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (324 samples, 0.15%)</title><rect x="4.1478%" y="805" width="0.1538%" height="15" fill="rgb(225,201,24)" fg:x="8738" fg:w="324"/><text x="4.3978%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (324 samples, 0.15%)</title><rect x="4.1478%" y="789" width="0.1538%" height="15" fill="rgb(221,47,46)" fg:x="8738" fg:w="324"/><text x="4.3978%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (324 samples, 0.15%)</title><rect x="4.1478%" y="773" width="0.1538%" height="15" fill="rgb(249,23,13)" fg:x="8738" fg:w="324"/><text x="4.3978%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (324 samples, 0.15%)</title><rect x="4.1478%" y="757" width="0.1538%" height="15" fill="rgb(219,9,5)" fg:x="8738" fg:w="324"/><text x="4.3978%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (324 samples, 0.15%)</title><rect x="4.1478%" y="741" width="0.1538%" height="15" fill="rgb(254,171,16)" fg:x="8738" fg:w="324"/><text x="4.3978%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (324 samples, 0.15%)</title><rect x="4.1478%" y="725" width="0.1538%" height="15" fill="rgb(230,171,20)" fg:x="8738" fg:w="324"/><text x="4.3978%" y="735.50"></text></g><g><title>alloc::alloc::alloc (324 samples, 0.15%)</title><rect x="4.1478%" y="709" width="0.1538%" height="15" fill="rgb(210,71,41)" fg:x="8738" fg:w="324"/><text x="4.3978%" y="719.50"></text></g><g><title>malloc (324 samples, 0.15%)</title><rect x="4.1478%" y="693" width="0.1538%" height="15" fill="rgb(206,173,20)" fg:x="8738" fg:w="324"/><text x="4.3978%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (22 samples, 0.01%)</title><rect x="4.3178%" y="789" width="0.0104%" height="15" fill="rgb(233,88,34)" fg:x="9096" fg:w="22"/><text x="4.5678%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.01%)</title><rect x="4.3178%" y="773" width="0.0104%" height="15" fill="rgb(223,209,46)" fg:x="9096" fg:w="22"/><text x="4.5678%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.01%)</title><rect x="4.3178%" y="757" width="0.0104%" height="15" fill="rgb(250,43,18)" fg:x="9096" fg:w="22"/><text x="4.5678%" y="767.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.01%)</title><rect x="4.3178%" y="741" width="0.0104%" height="15" fill="rgb(208,13,10)" fg:x="9096" fg:w="22"/><text x="4.5678%" y="751.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="4.3178%" y="725" width="0.0104%" height="15" fill="rgb(212,200,36)" fg:x="9096" fg:w="22"/><text x="4.5678%" y="735.50"></text></g><g><title>[unknown] (268 samples, 0.13%)</title><rect x="4.3543%" y="629" width="0.1272%" height="15" fill="rgb(225,90,30)" fg:x="9173" fg:w="268"/><text x="4.6043%" y="639.50"></text></g><g><title>[unknown] (264 samples, 0.13%)</title><rect x="4.3562%" y="613" width="0.1253%" height="15" fill="rgb(236,182,39)" fg:x="9177" fg:w="264"/><text x="4.6062%" y="623.50"></text></g><g><title>[unknown] (264 samples, 0.13%)</title><rect x="4.3562%" y="597" width="0.1253%" height="15" fill="rgb(212,144,35)" fg:x="9177" fg:w="264"/><text x="4.6062%" y="607.50"></text></g><g><title>[unknown] (264 samples, 0.13%)</title><rect x="4.3562%" y="581" width="0.1253%" height="15" fill="rgb(228,63,44)" fg:x="9177" fg:w="264"/><text x="4.6062%" y="591.50"></text></g><g><title>[unknown] (245 samples, 0.12%)</title><rect x="4.3652%" y="565" width="0.1163%" height="15" fill="rgb(228,109,6)" fg:x="9196" fg:w="245"/><text x="4.6152%" y="575.50"></text></g><g><title>[unknown] (211 samples, 0.10%)</title><rect x="4.3814%" y="549" width="0.1002%" height="15" fill="rgb(238,117,24)" fg:x="9230" fg:w="211"/><text x="4.6314%" y="559.50"></text></g><g><title>[unknown] (186 samples, 0.09%)</title><rect x="4.3933%" y="533" width="0.0883%" height="15" fill="rgb(242,26,26)" fg:x="9255" fg:w="186"/><text x="4.6433%" y="543.50"></text></g><g><title>[unknown] (160 samples, 0.08%)</title><rect x="4.4056%" y="517" width="0.0760%" height="15" fill="rgb(221,92,48)" fg:x="9281" fg:w="160"/><text x="4.6556%" y="527.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="4.4227%" y="501" width="0.0589%" height="15" fill="rgb(209,209,32)" fg:x="9317" fg:w="124"/><text x="4.6727%" y="511.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="4.4664%" y="485" width="0.0152%" height="15" fill="rgb(221,70,22)" fg:x="9409" fg:w="32"/><text x="4.7164%" y="495.50"></text></g><g><title>[libc.so.6] (616 samples, 0.29%)</title><rect x="4.3425%" y="645" width="0.2924%" height="15" fill="rgb(248,145,5)" fg:x="9148" fg:w="616"/><text x="4.5925%" y="655.50"></text></g><g><title>__mprotect (322 samples, 0.15%)</title><rect x="4.4820%" y="629" width="0.1529%" height="15" fill="rgb(226,116,26)" fg:x="9442" fg:w="322"/><text x="4.7320%" y="639.50"></text></g><g><title>[unknown] (322 samples, 0.15%)</title><rect x="4.4820%" y="613" width="0.1529%" height="15" fill="rgb(244,5,17)" fg:x="9442" fg:w="322"/><text x="4.7320%" y="623.50"></text></g><g><title>[unknown] (312 samples, 0.15%)</title><rect x="4.4868%" y="597" width="0.1481%" height="15" fill="rgb(252,159,33)" fg:x="9452" fg:w="312"/><text x="4.7368%" y="607.50"></text></g><g><title>[unknown] (308 samples, 0.15%)</title><rect x="4.4887%" y="581" width="0.1462%" height="15" fill="rgb(206,71,0)" fg:x="9456" fg:w="308"/><text x="4.7387%" y="591.50"></text></g><g><title>[unknown] (305 samples, 0.14%)</title><rect x="4.4901%" y="565" width="0.1448%" height="15" fill="rgb(233,118,54)" fg:x="9459" fg:w="305"/><text x="4.7401%" y="575.50"></text></g><g><title>[unknown] (279 samples, 0.13%)</title><rect x="4.5024%" y="549" width="0.1324%" height="15" fill="rgb(234,83,48)" fg:x="9485" fg:w="279"/><text x="4.7524%" y="559.50"></text></g><g><title>[unknown] (230 samples, 0.11%)</title><rect x="4.5257%" y="533" width="0.1092%" height="15" fill="rgb(228,3,54)" fg:x="9534" fg:w="230"/><text x="4.7757%" y="543.50"></text></g><g><title>[unknown] (169 samples, 0.08%)</title><rect x="4.5546%" y="517" width="0.0802%" height="15" fill="rgb(226,155,13)" fg:x="9595" fg:w="169"/><text x="4.8046%" y="527.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="4.6064%" y="501" width="0.0285%" height="15" fill="rgb(241,28,37)" fg:x="9704" fg:w="60"/><text x="4.8564%" y="511.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="4.6206%" y="485" width="0.0142%" height="15" fill="rgb(233,93,10)" fg:x="9734" fg:w="30"/><text x="4.8706%" y="495.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="4.6235%" y="469" width="0.0114%" height="15" fill="rgb(225,113,19)" fg:x="9740" fg:w="24"/><text x="4.8735%" y="479.50"></text></g><g><title>[libc.so.6] (645 samples, 0.31%)</title><rect x="4.3325%" y="661" width="0.3062%" height="15" fill="rgb(241,2,18)" fg:x="9127" fg:w="645"/><text x="4.5825%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (729 samples, 0.35%)</title><rect x="4.3140%" y="805" width="0.3460%" height="15" fill="rgb(228,207,21)" fg:x="9088" fg:w="729"/><text x="4.5640%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (699 samples, 0.33%)</title><rect x="4.3282%" y="789" width="0.3318%" height="15" fill="rgb(213,211,35)" fg:x="9118" fg:w="699"/><text x="4.5782%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (699 samples, 0.33%)</title><rect x="4.3282%" y="773" width="0.3318%" height="15" fill="rgb(209,83,10)" fg:x="9118" fg:w="699"/><text x="4.5782%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (699 samples, 0.33%)</title><rect x="4.3282%" y="757" width="0.3318%" height="15" fill="rgb(209,164,1)" fg:x="9118" fg:w="699"/><text x="4.5782%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (699 samples, 0.33%)</title><rect x="4.3282%" y="741" width="0.3318%" height="15" fill="rgb(213,184,43)" fg:x="9118" fg:w="699"/><text x="4.5782%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (699 samples, 0.33%)</title><rect x="4.3282%" y="725" width="0.3318%" height="15" fill="rgb(231,61,34)" fg:x="9118" fg:w="699"/><text x="4.5782%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (699 samples, 0.33%)</title><rect x="4.3282%" y="709" width="0.3318%" height="15" fill="rgb(235,75,3)" fg:x="9118" fg:w="699"/><text x="4.5782%" y="719.50"></text></g><g><title>alloc::alloc::alloc (699 samples, 0.33%)</title><rect x="4.3282%" y="693" width="0.3318%" height="15" fill="rgb(220,106,47)" fg:x="9118" fg:w="699"/><text x="4.5782%" y="703.50"></text></g><g><title>malloc (696 samples, 0.33%)</title><rect x="4.3296%" y="677" width="0.3304%" height="15" fill="rgb(210,196,33)" fg:x="9121" fg:w="696"/><text x="4.5796%" y="687.50"></text></g><g><title>__lll_lock_wake_private (42 samples, 0.02%)</title><rect x="4.6401%" y="661" width="0.0199%" height="15" fill="rgb(229,154,42)" fg:x="9775" fg:w="42"/><text x="4.8901%" y="671.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="4.6401%" y="645" width="0.0199%" height="15" fill="rgb(228,114,26)" fg:x="9775" fg:w="42"/><text x="4.8901%" y="655.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="4.6401%" y="629" width="0.0199%" height="15" fill="rgb(208,144,1)" fg:x="9775" fg:w="42"/><text x="4.8901%" y="639.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="4.6401%" y="613" width="0.0199%" height="15" fill="rgb(239,112,37)" fg:x="9775" fg:w="42"/><text x="4.8901%" y="623.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="4.6401%" y="597" width="0.0199%" height="15" fill="rgb(210,96,50)" fg:x="9775" fg:w="42"/><text x="4.8901%" y="607.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="4.6406%" y="581" width="0.0195%" height="15" fill="rgb(222,178,2)" fg:x="9776" fg:w="41"/><text x="4.8906%" y="591.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="4.6425%" y="565" width="0.0176%" height="15" fill="rgb(226,74,18)" fg:x="9780" fg:w="37"/><text x="4.8925%" y="575.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="4.6453%" y="549" width="0.0147%" height="15" fill="rgb(225,67,54)" fg:x="9786" fg:w="31"/><text x="4.8953%" y="559.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="4.6467%" y="533" width="0.0133%" height="15" fill="rgb(251,92,32)" fg:x="9789" fg:w="28"/><text x="4.8967%" y="543.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (1,223 samples, 0.58%)</title><rect x="4.0947%" y="837" width="0.5805%" height="15" fill="rgb(228,149,22)" fg:x="8626" fg:w="1223"/><text x="4.3447%" y="847.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (787 samples, 0.37%)</title><rect x="4.3016%" y="821" width="0.3736%" height="15" fill="rgb(243,54,13)" fg:x="9062" fg:w="787"/><text x="4.5516%" y="831.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::clear (32 samples, 0.02%)</title><rect x="4.6600%" y="805" width="0.0152%" height="15" fill="rgb(243,180,28)" fg:x="9817" fg:w="32"/><text x="4.9100%" y="815.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="4.6804%" y="693" width="0.0133%" height="15" fill="rgb(208,167,24)" fg:x="9860" fg:w="28"/><text x="4.9304%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (36 samples, 0.02%)</title><rect x="4.6771%" y="773" width="0.0171%" height="15" fill="rgb(245,73,45)" fg:x="9853" fg:w="36"/><text x="4.9271%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.02%)</title><rect x="4.6771%" y="757" width="0.0171%" height="15" fill="rgb(237,203,48)" fg:x="9853" fg:w="36"/><text x="4.9271%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.02%)</title><rect x="4.6771%" y="741" width="0.0171%" height="15" fill="rgb(211,197,16)" fg:x="9853" fg:w="36"/><text x="4.9271%" y="751.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.02%)</title><rect x="4.6776%" y="725" width="0.0166%" height="15" fill="rgb(243,99,51)" fg:x="9854" fg:w="35"/><text x="4.9276%" y="735.50"></text></g><g><title>malloc (34 samples, 0.02%)</title><rect x="4.6781%" y="709" width="0.0161%" height="15" fill="rgb(215,123,29)" fg:x="9855" fg:w="34"/><text x="4.9281%" y="719.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::new (41 samples, 0.02%)</title><rect x="4.6752%" y="837" width="0.0195%" height="15" fill="rgb(239,186,37)" fg:x="9849" fg:w="41"/><text x="4.9252%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (39 samples, 0.02%)</title><rect x="4.6762%" y="821" width="0.0185%" height="15" fill="rgb(252,136,39)" fg:x="9851" fg:w="39"/><text x="4.9262%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (39 samples, 0.02%)</title><rect x="4.6762%" y="805" width="0.0185%" height="15" fill="rgb(223,213,32)" fg:x="9851" fg:w="39"/><text x="4.9262%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.02%)</title><rect x="4.6771%" y="789" width="0.0176%" height="15" fill="rgb(233,115,5)" fg:x="9853" fg:w="37"/><text x="4.9271%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,298 samples, 0.62%)</title><rect x="4.0852%" y="965" width="0.6161%" height="15" fill="rgb(207,226,44)" fg:x="8606" fg:w="1298"/><text x="4.3352%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,298 samples, 0.62%)</title><rect x="4.0852%" y="949" width="0.6161%" height="15" fill="rgb(208,126,0)" fg:x="8606" fg:w="1298"/><text x="4.3352%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,298 samples, 0.62%)</title><rect x="4.0852%" y="933" width="0.6161%" height="15" fill="rgb(244,66,21)" fg:x="8606" fg:w="1298"/><text x="4.3352%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,298 samples, 0.62%)</title><rect x="4.0852%" y="917" width="0.6161%" height="15" fill="rgb(222,97,12)" fg:x="8606" fg:w="1298"/><text x="4.3352%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,296 samples, 0.62%)</title><rect x="4.0861%" y="901" width="0.6152%" height="15" fill="rgb(219,213,19)" fg:x="8608" fg:w="1296"/><text x="4.3361%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1,293 samples, 0.61%)</title><rect x="4.0876%" y="885" width="0.6138%" height="15" fill="rgb(252,169,30)" fg:x="8611" fg:w="1293"/><text x="4.3376%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,293 samples, 0.61%)</title><rect x="4.0876%" y="869" width="0.6138%" height="15" fill="rgb(206,32,51)" fg:x="8611" fg:w="1293"/><text x="4.3376%" y="879.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (1,284 samples, 0.61%)</title><rect x="4.0918%" y="853" width="0.6095%" height="15" fill="rgb(250,172,42)" fg:x="8620" fg:w="1284"/><text x="4.3418%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,317 samples, 0.63%)</title><rect x="4.0852%" y="997" width="0.6252%" height="15" fill="rgb(209,34,43)" fg:x="8606" fg:w="1317"/><text x="4.3352%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,317 samples, 0.63%)</title><rect x="4.0852%" y="981" width="0.6252%" height="15" fill="rgb(223,11,35)" fg:x="8606" fg:w="1317"/><text x="4.3352%" y="991.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (3,106 samples, 1.47%)</title><rect x="3.2364%" y="1221" width="1.4744%" height="15" fill="rgb(251,219,26)" fg:x="6818" fg:w="3106"/><text x="3.4864%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,106 samples, 1.47%)</title><rect x="3.2364%" y="1205" width="1.4744%" height="15" fill="rgb(231,119,3)" fg:x="6818" fg:w="3106"/><text x="3.4864%" y="1215.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (3,106 samples, 1.47%)</title><rect x="3.2364%" y="1189" width="1.4744%" height="15" fill="rgb(216,97,11)" fg:x="6818" fg:w="3106"/><text x="3.4864%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,106 samples, 1.47%)</title><rect x="3.2364%" y="1173" width="1.4744%" height="15" fill="rgb(223,59,9)" fg:x="6818" fg:w="3106"/><text x="3.4864%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (3,106 samples, 1.47%)</title><rect x="3.2364%" y="1157" width="1.4744%" height="15" fill="rgb(233,93,31)" fg:x="6818" fg:w="3106"/><text x="3.4864%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,106 samples, 1.47%)</title><rect x="3.2364%" y="1141" width="1.4744%" height="15" fill="rgb(239,81,33)" fg:x="6818" fg:w="3106"/><text x="3.4864%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (3,106 samples, 1.47%)</title><rect x="3.2364%" y="1125" width="1.4744%" height="15" fill="rgb(213,120,34)" fg:x="6818" fg:w="3106"/><text x="3.4864%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,106 samples, 1.47%)</title><rect x="3.2364%" y="1109" width="1.4744%" height="15" fill="rgb(243,49,53)" fg:x="6818" fg:w="3106"/><text x="3.4864%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (1,753 samples, 0.83%)</title><rect x="3.8787%" y="1093" width="0.8321%" height="15" fill="rgb(247,216,33)" fg:x="8171" fg:w="1753"/><text x="4.1287%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (1,319 samples, 0.63%)</title><rect x="4.0847%" y="1077" width="0.6261%" height="15" fill="rgb(226,26,14)" fg:x="8605" fg:w="1319"/><text x="4.3347%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (1,319 samples, 0.63%)</title><rect x="4.0847%" y="1061" width="0.6261%" height="15" fill="rgb(215,49,53)" fg:x="8605" fg:w="1319"/><text x="4.3347%" y="1071.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (1,319 samples, 0.63%)</title><rect x="4.0847%" y="1045" width="0.6261%" height="15" fill="rgb(245,162,40)" fg:x="8605" fg:w="1319"/><text x="4.3347%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,318 samples, 0.63%)</title><rect x="4.0852%" y="1029" width="0.6256%" height="15" fill="rgb(229,68,17)" fg:x="8606" fg:w="1318"/><text x="4.3352%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,318 samples, 0.63%)</title><rect x="4.0852%" y="1013" width="0.6256%" height="15" fill="rgb(213,182,10)" fg:x="8606" fg:w="1318"/><text x="4.3352%" y="1023.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (28 samples, 0.01%)</title><rect x="4.7303%" y="885" width="0.0133%" height="15" fill="rgb(245,125,30)" fg:x="9965" fg:w="28"/><text x="4.9803%" y="895.50"></text></g><g><title>rsa::internals::decrypt (74 samples, 0.04%)</title><rect x="4.7108%" y="949" width="0.0351%" height="15" fill="rgb(232,202,2)" fg:x="9924" fg:w="74"/><text x="4.9608%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (74 samples, 0.04%)</title><rect x="4.7108%" y="933" width="0.0351%" height="15" fill="rgb(237,140,51)" fg:x="9924" fg:w="74"/><text x="4.9608%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (74 samples, 0.04%)</title><rect x="4.7108%" y="917" width="0.0351%" height="15" fill="rgb(236,157,25)" fg:x="9924" fg:w="74"/><text x="4.9608%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (42 samples, 0.02%)</title><rect x="4.7260%" y="901" width="0.0199%" height="15" fill="rgb(219,209,0)" fg:x="9956" fg:w="42"/><text x="4.9760%" y="911.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (105 samples, 0.05%)</title><rect x="4.7108%" y="1093" width="0.0498%" height="15" fill="rgb(240,116,54)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (105 samples, 0.05%)</title><rect x="4.7108%" y="1077" width="0.0498%" height="15" fill="rgb(216,10,36)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (105 samples, 0.05%)</title><rect x="4.7108%" y="1061" width="0.0498%" height="15" fill="rgb(222,72,44)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="1071.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (105 samples, 0.05%)</title><rect x="4.7108%" y="1045" width="0.0498%" height="15" fill="rgb(232,159,9)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="1055.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (105 samples, 0.05%)</title><rect x="4.7108%" y="1029" width="0.0498%" height="15" fill="rgb(210,39,32)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="1039.50"></text></g><g><title>rsa::pkcs1v15::decrypt (105 samples, 0.05%)</title><rect x="4.7108%" y="1013" width="0.0498%" height="15" fill="rgb(216,194,45)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (105 samples, 0.05%)</title><rect x="4.7108%" y="997" width="0.0498%" height="15" fill="rgb(218,18,35)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="1007.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (105 samples, 0.05%)</title><rect x="4.7108%" y="981" width="0.0498%" height="15" fill="rgb(207,83,51)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="991.50"></text></g><g><title>rsa::internals::decrypt_and_check (105 samples, 0.05%)</title><rect x="4.7108%" y="965" width="0.0498%" height="15" fill="rgb(225,63,43)" fg:x="9924" fg:w="105"/><text x="4.9608%" y="975.50"></text></g><g><title>rsa::internals::encrypt (31 samples, 0.01%)</title><rect x="4.7459%" y="949" width="0.0147%" height="15" fill="rgb(207,57,36)" fg:x="9998" fg:w="31"/><text x="4.9959%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (31 samples, 0.01%)</title><rect x="4.7459%" y="933" width="0.0147%" height="15" fill="rgb(216,99,33)" fg:x="9998" fg:w="31"/><text x="4.9959%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (31 samples, 0.01%)</title><rect x="4.7459%" y="917" width="0.0147%" height="15" fill="rgb(225,42,16)" fg:x="9998" fg:w="31"/><text x="4.9959%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (23 samples, 0.01%)</title><rect x="4.7497%" y="901" width="0.0109%" height="15" fill="rgb(220,201,45)" fg:x="10006" fg:w="23"/><text x="4.9997%" y="911.50"></text></g><g><title>getifaddrs (44 samples, 0.02%)</title><rect x="4.7749%" y="853" width="0.0209%" height="15" fill="rgb(225,33,4)" fg:x="10059" fg:w="44"/><text x="5.0249%" y="863.50"></text></g><g><title>[libc.so.6] (44 samples, 0.02%)</title><rect x="4.7749%" y="837" width="0.0209%" height="15" fill="rgb(224,33,50)" fg:x="10059" fg:w="44"/><text x="5.0249%" y="847.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (65 samples, 0.03%)</title><rect x="4.7659%" y="933" width="0.0309%" height="15" fill="rgb(246,198,51)" fg:x="10040" fg:w="65"/><text x="5.0159%" y="943.50"></text></g><g><title>zenoh_util::net::get_local_addresses (55 samples, 0.03%)</title><rect x="4.7706%" y="917" width="0.0261%" height="15" fill="rgb(205,22,4)" fg:x="10050" fg:w="55"/><text x="5.0206%" y="927.50"></text></g><g><title>pnet_datalink::interfaces (54 samples, 0.03%)</title><rect x="4.7711%" y="901" width="0.0256%" height="15" fill="rgb(206,3,8)" fg:x="10051" fg:w="54"/><text x="5.0211%" y="911.50"></text></g><g><title>pnet_datalink::backend::interfaces (54 samples, 0.03%)</title><rect x="4.7711%" y="885" width="0.0256%" height="15" fill="rgb(251,23,15)" fg:x="10051" fg:w="54"/><text x="5.0211%" y="895.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (53 samples, 0.03%)</title><rect x="4.7716%" y="869" width="0.0252%" height="15" fill="rgb(252,88,28)" fg:x="10052" fg:w="53"/><text x="5.0216%" y="879.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (79 samples, 0.04%)</title><rect x="4.7607%" y="1077" width="0.0375%" height="15" fill="rgb(212,127,14)" fg:x="10029" fg:w="79"/><text x="5.0107%" y="1087.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (79 samples, 0.04%)</title><rect x="4.7607%" y="1061" width="0.0375%" height="15" fill="rgb(247,145,37)" fg:x="10029" fg:w="79"/><text x="5.0107%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (79 samples, 0.04%)</title><rect x="4.7607%" y="1045" width="0.0375%" height="15" fill="rgb(209,117,53)" fg:x="10029" fg:w="79"/><text x="5.0107%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (72 samples, 0.03%)</title><rect x="4.7640%" y="1029" width="0.0342%" height="15" fill="rgb(212,90,42)" fg:x="10036" fg:w="72"/><text x="5.0140%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (72 samples, 0.03%)</title><rect x="4.7640%" y="1013" width="0.0342%" height="15" fill="rgb(218,164,37)" fg:x="10036" fg:w="72"/><text x="5.0140%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (70 samples, 0.03%)</title><rect x="4.7649%" y="997" width="0.0332%" height="15" fill="rgb(246,65,34)" fg:x="10038" fg:w="70"/><text x="5.0149%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (70 samples, 0.03%)</title><rect x="4.7649%" y="981" width="0.0332%" height="15" fill="rgb(231,100,33)" fg:x="10038" fg:w="70"/><text x="5.0149%" y="991.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (70 samples, 0.03%)</title><rect x="4.7649%" y="965" width="0.0332%" height="15" fill="rgb(228,126,14)" fg:x="10038" fg:w="70"/><text x="5.0149%" y="975.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (70 samples, 0.03%)</title><rect x="4.7649%" y="949" width="0.0332%" height="15" fill="rgb(215,173,21)" fg:x="10038" fg:w="70"/><text x="5.0149%" y="959.50"></text></g><g><title>malloc (24 samples, 0.01%)</title><rect x="4.8043%" y="709" width="0.0114%" height="15" fill="rgb(210,6,40)" fg:x="10121" fg:w="24"/><text x="5.0543%" y="719.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="4.8053%" y="693" width="0.0104%" height="15" fill="rgb(212,48,18)" fg:x="10123" fg:w="22"/><text x="5.0553%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (28 samples, 0.01%)</title><rect x="4.8029%" y="821" width="0.0133%" height="15" fill="rgb(230,214,11)" fg:x="10118" fg:w="28"/><text x="5.0529%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (28 samples, 0.01%)</title><rect x="4.8029%" y="805" width="0.0133%" height="15" fill="rgb(254,105,39)" fg:x="10118" fg:w="28"/><text x="5.0529%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.01%)</title><rect x="4.8029%" y="789" width="0.0133%" height="15" fill="rgb(245,158,5)" fg:x="10118" fg:w="28"/><text x="5.0529%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.01%)</title><rect x="4.8029%" y="773" width="0.0133%" height="15" fill="rgb(249,208,11)" fg:x="10118" fg:w="28"/><text x="5.0529%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="4.8029%" y="757" width="0.0133%" height="15" fill="rgb(210,39,28)" fg:x="10118" fg:w="28"/><text x="5.0529%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="4.8029%" y="741" width="0.0133%" height="15" fill="rgb(211,56,53)" fg:x="10118" fg:w="28"/><text x="5.0529%" y="751.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="4.8029%" y="725" width="0.0133%" height="15" fill="rgb(226,201,30)" fg:x="10118" fg:w="28"/><text x="5.0529%" y="735.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="4.8271%" y="645" width="0.0280%" height="15" fill="rgb(239,101,34)" fg:x="10169" fg:w="59"/><text x="5.0771%" y="655.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="4.8271%" y="629" width="0.0280%" height="15" fill="rgb(226,209,5)" fg:x="10169" fg:w="59"/><text x="5.0771%" y="639.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="4.8276%" y="613" width="0.0275%" height="15" fill="rgb(250,105,47)" fg:x="10170" fg:w="58"/><text x="5.0776%" y="623.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="4.8276%" y="597" width="0.0275%" height="15" fill="rgb(230,72,3)" fg:x="10170" fg:w="58"/><text x="5.0776%" y="607.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="4.8295%" y="581" width="0.0256%" height="15" fill="rgb(232,218,39)" fg:x="10174" fg:w="54"/><text x="5.0795%" y="591.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="4.8333%" y="565" width="0.0218%" height="15" fill="rgb(248,166,6)" fg:x="10182" fg:w="46"/><text x="5.0833%" y="575.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="4.8342%" y="549" width="0.0209%" height="15" fill="rgb(247,89,20)" fg:x="10184" fg:w="44"/><text x="5.0842%" y="559.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="4.8390%" y="533" width="0.0161%" height="15" fill="rgb(248,130,54)" fg:x="10194" fg:w="34"/><text x="5.0890%" y="543.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="4.8428%" y="517" width="0.0123%" height="15" fill="rgb(234,196,4)" fg:x="10202" fg:w="26"/><text x="5.0928%" y="527.50"></text></g><g><title>[libc.so.6] (139 samples, 0.07%)</title><rect x="4.8238%" y="661" width="0.0660%" height="15" fill="rgb(250,143,31)" fg:x="10162" fg:w="139"/><text x="5.0738%" y="671.50"></text></g><g><title>__mprotect (73 samples, 0.03%)</title><rect x="4.8551%" y="645" width="0.0347%" height="15" fill="rgb(211,110,34)" fg:x="10228" fg:w="73"/><text x="5.1051%" y="655.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="4.8551%" y="629" width="0.0347%" height="15" fill="rgb(215,124,48)" fg:x="10228" fg:w="73"/><text x="5.1051%" y="639.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="4.8556%" y="613" width="0.0342%" height="15" fill="rgb(216,46,13)" fg:x="10229" fg:w="72"/><text x="5.1056%" y="623.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="4.8556%" y="597" width="0.0342%" height="15" fill="rgb(205,184,25)" fg:x="10229" fg:w="72"/><text x="5.1056%" y="607.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="4.8561%" y="581" width="0.0337%" height="15" fill="rgb(228,1,10)" fg:x="10230" fg:w="71"/><text x="5.1061%" y="591.50"></text></g><g><title>[unknown] (63 samples, 0.03%)</title><rect x="4.8599%" y="565" width="0.0299%" height="15" fill="rgb(213,116,27)" fg:x="10238" fg:w="63"/><text x="5.1099%" y="575.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="4.8656%" y="549" width="0.0242%" height="15" fill="rgb(241,95,50)" fg:x="10250" fg:w="51"/><text x="5.1156%" y="559.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="4.8751%" y="533" width="0.0147%" height="15" fill="rgb(238,48,32)" fg:x="10270" fg:w="31"/><text x="5.1251%" y="543.50"></text></g><g><title>[libc.so.6] (147 samples, 0.07%)</title><rect x="4.8205%" y="677" width="0.0698%" height="15" fill="rgb(235,113,49)" fg:x="10155" fg:w="147"/><text x="5.0705%" y="687.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (161 samples, 0.08%)</title><rect x="4.8162%" y="821" width="0.0764%" height="15" fill="rgb(205,127,43)" fg:x="10146" fg:w="161"/><text x="5.0662%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (156 samples, 0.07%)</title><rect x="4.8186%" y="805" width="0.0741%" height="15" fill="rgb(250,162,2)" fg:x="10151" fg:w="156"/><text x="5.0686%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (156 samples, 0.07%)</title><rect x="4.8186%" y="789" width="0.0741%" height="15" fill="rgb(220,13,41)" fg:x="10151" fg:w="156"/><text x="5.0686%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (156 samples, 0.07%)</title><rect x="4.8186%" y="773" width="0.0741%" height="15" fill="rgb(249,221,25)" fg:x="10151" fg:w="156"/><text x="5.0686%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (156 samples, 0.07%)</title><rect x="4.8186%" y="757" width="0.0741%" height="15" fill="rgb(215,208,19)" fg:x="10151" fg:w="156"/><text x="5.0686%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (156 samples, 0.07%)</title><rect x="4.8186%" y="741" width="0.0741%" height="15" fill="rgb(236,175,2)" fg:x="10151" fg:w="156"/><text x="5.0686%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (156 samples, 0.07%)</title><rect x="4.8186%" y="725" width="0.0741%" height="15" fill="rgb(241,52,2)" fg:x="10151" fg:w="156"/><text x="5.0686%" y="735.50"></text></g><g><title>alloc::alloc::alloc (156 samples, 0.07%)</title><rect x="4.8186%" y="709" width="0.0741%" height="15" fill="rgb(248,140,14)" fg:x="10151" fg:w="156"/><text x="5.0686%" y="719.50"></text></g><g><title>malloc (155 samples, 0.07%)</title><rect x="4.8190%" y="693" width="0.0736%" height="15" fill="rgb(253,22,42)" fg:x="10152" fg:w="155"/><text x="5.0690%" y="703.50"></text></g><g><title>[unknown] (100 samples, 0.05%)</title><rect x="4.9187%" y="629" width="0.0475%" height="15" fill="rgb(234,61,47)" fg:x="10362" fg:w="100"/><text x="5.1687%" y="639.50"></text></g><g><title>[unknown] (100 samples, 0.05%)</title><rect x="4.9187%" y="613" width="0.0475%" height="15" fill="rgb(208,226,15)" fg:x="10362" fg:w="100"/><text x="5.1687%" y="623.50"></text></g><g><title>[unknown] (99 samples, 0.05%)</title><rect x="4.9192%" y="597" width="0.0470%" height="15" fill="rgb(217,221,4)" fg:x="10363" fg:w="99"/><text x="5.1692%" y="607.50"></text></g><g><title>[unknown] (97 samples, 0.05%)</title><rect x="4.9202%" y="581" width="0.0460%" height="15" fill="rgb(212,174,34)" fg:x="10365" fg:w="97"/><text x="5.1702%" y="591.50"></text></g><g><title>[unknown] (89 samples, 0.04%)</title><rect x="4.9240%" y="565" width="0.0422%" height="15" fill="rgb(253,83,4)" fg:x="10373" fg:w="89"/><text x="5.1740%" y="575.50"></text></g><g><title>[unknown] (79 samples, 0.04%)</title><rect x="4.9287%" y="549" width="0.0375%" height="15" fill="rgb(250,195,49)" fg:x="10383" fg:w="79"/><text x="5.1787%" y="559.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="4.9334%" y="533" width="0.0328%" height="15" fill="rgb(241,192,25)" fg:x="10393" fg:w="69"/><text x="5.1834%" y="543.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="4.9377%" y="517" width="0.0285%" height="15" fill="rgb(208,124,10)" fg:x="10402" fg:w="60"/><text x="5.1877%" y="527.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="4.9434%" y="501" width="0.0228%" height="15" fill="rgb(222,33,0)" fg:x="10414" fg:w="48"/><text x="5.1934%" y="511.50"></text></g><g><title>[libc.so.6] (248 samples, 0.12%)</title><rect x="4.9116%" y="645" width="0.1177%" height="15" fill="rgb(234,209,28)" fg:x="10347" fg:w="248"/><text x="5.1616%" y="655.50"></text></g><g><title>__mprotect (133 samples, 0.06%)</title><rect x="4.9662%" y="629" width="0.0631%" height="15" fill="rgb(224,11,23)" fg:x="10462" fg:w="133"/><text x="5.2162%" y="639.50"></text></g><g><title>[unknown] (133 samples, 0.06%)</title><rect x="4.9662%" y="613" width="0.0631%" height="15" fill="rgb(232,99,1)" fg:x="10462" fg:w="133"/><text x="5.2162%" y="623.50"></text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="4.9672%" y="597" width="0.0622%" height="15" fill="rgb(237,95,45)" fg:x="10464" fg:w="131"/><text x="5.2172%" y="607.50"></text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="4.9672%" y="581" width="0.0622%" height="15" fill="rgb(208,109,11)" fg:x="10464" fg:w="131"/><text x="5.2172%" y="591.50"></text></g><g><title>[unknown] (130 samples, 0.06%)</title><rect x="4.9676%" y="565" width="0.0617%" height="15" fill="rgb(216,190,48)" fg:x="10465" fg:w="130"/><text x="5.2176%" y="575.50"></text></g><g><title>[unknown] (114 samples, 0.05%)</title><rect x="4.9752%" y="549" width="0.0541%" height="15" fill="rgb(251,171,36)" fg:x="10481" fg:w="114"/><text x="5.2252%" y="559.50"></text></g><g><title>[unknown] (102 samples, 0.05%)</title><rect x="4.9809%" y="533" width="0.0484%" height="15" fill="rgb(230,62,22)" fg:x="10493" fg:w="102"/><text x="5.2309%" y="543.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="4.9923%" y="517" width="0.0370%" height="15" fill="rgb(225,114,35)" fg:x="10517" fg:w="78"/><text x="5.2423%" y="527.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="5.0141%" y="501" width="0.0152%" height="15" fill="rgb(215,118,42)" fg:x="10563" fg:w="32"/><text x="5.2641%" y="511.50"></text></g><g><title>[libc.so.6] (257 samples, 0.12%)</title><rect x="4.9083%" y="661" width="0.1220%" height="15" fill="rgb(243,119,21)" fg:x="10340" fg:w="257"/><text x="5.1583%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (285 samples, 0.14%)</title><rect x="4.9012%" y="805" width="0.1353%" height="15" fill="rgb(252,177,53)" fg:x="10325" fg:w="285"/><text x="5.1512%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (275 samples, 0.13%)</title><rect x="4.9059%" y="789" width="0.1305%" height="15" fill="rgb(237,209,29)" fg:x="10335" fg:w="275"/><text x="5.1559%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (275 samples, 0.13%)</title><rect x="4.9059%" y="773" width="0.1305%" height="15" fill="rgb(212,65,23)" fg:x="10335" fg:w="275"/><text x="5.1559%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (275 samples, 0.13%)</title><rect x="4.9059%" y="757" width="0.1305%" height="15" fill="rgb(230,222,46)" fg:x="10335" fg:w="275"/><text x="5.1559%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (275 samples, 0.13%)</title><rect x="4.9059%" y="741" width="0.1305%" height="15" fill="rgb(215,135,32)" fg:x="10335" fg:w="275"/><text x="5.1559%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (275 samples, 0.13%)</title><rect x="4.9059%" y="725" width="0.1305%" height="15" fill="rgb(246,101,22)" fg:x="10335" fg:w="275"/><text x="5.1559%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (275 samples, 0.13%)</title><rect x="4.9059%" y="709" width="0.1305%" height="15" fill="rgb(206,107,13)" fg:x="10335" fg:w="275"/><text x="5.1559%" y="719.50"></text></g><g><title>alloc::alloc::alloc (275 samples, 0.13%)</title><rect x="4.9059%" y="693" width="0.1305%" height="15" fill="rgb(250,100,44)" fg:x="10335" fg:w="275"/><text x="5.1559%" y="703.50"></text></g><g><title>malloc (272 samples, 0.13%)</title><rect x="4.9073%" y="677" width="0.1291%" height="15" fill="rgb(231,147,38)" fg:x="10338" fg:w="272"/><text x="5.1573%" y="687.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (508 samples, 0.24%)</title><rect x="4.7982%" y="837" width="0.2411%" height="15" fill="rgb(229,8,40)" fg:x="10108" fg:w="508"/><text x="5.0482%" y="847.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (309 samples, 0.15%)</title><rect x="4.8926%" y="821" width="0.1467%" height="15" fill="rgb(221,135,30)" fg:x="10307" fg:w="309"/><text x="5.1426%" y="831.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (518 samples, 0.25%)</title><rect x="4.7982%" y="1045" width="0.2459%" height="15" fill="rgb(249,193,18)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (518 samples, 0.25%)</title><rect x="4.7982%" y="1029" width="0.2459%" height="15" fill="rgb(209,133,39)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (518 samples, 0.25%)</title><rect x="4.7982%" y="1013" width="0.2459%" height="15" fill="rgb(232,100,14)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (518 samples, 0.25%)</title><rect x="4.7982%" y="997" width="0.2459%" height="15" fill="rgb(224,185,1)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (518 samples, 0.25%)</title><rect x="4.7982%" y="981" width="0.2459%" height="15" fill="rgb(223,139,8)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (518 samples, 0.25%)</title><rect x="4.7982%" y="965" width="0.2459%" height="15" fill="rgb(232,213,38)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (518 samples, 0.25%)</title><rect x="4.7982%" y="949" width="0.2459%" height="15" fill="rgb(207,94,22)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (518 samples, 0.25%)</title><rect x="4.7982%" y="933" width="0.2459%" height="15" fill="rgb(219,183,54)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (518 samples, 0.25%)</title><rect x="4.7982%" y="917" width="0.2459%" height="15" fill="rgb(216,185,54)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (518 samples, 0.25%)</title><rect x="4.7982%" y="901" width="0.2459%" height="15" fill="rgb(254,217,39)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (518 samples, 0.25%)</title><rect x="4.7982%" y="885" width="0.2459%" height="15" fill="rgb(240,178,23)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (518 samples, 0.25%)</title><rect x="4.7982%" y="869" width="0.2459%" height="15" fill="rgb(218,11,47)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="879.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (518 samples, 0.25%)</title><rect x="4.7982%" y="853" width="0.2459%" height="15" fill="rgb(218,51,51)" fg:x="10108" fg:w="518"/><text x="5.0482%" y="863.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (703 samples, 0.33%)</title><rect x="4.7108%" y="1221" width="0.3337%" height="15" fill="rgb(238,126,27)" fg:x="9924" fg:w="703"/><text x="4.9608%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (703 samples, 0.33%)</title><rect x="4.7108%" y="1205" width="0.3337%" height="15" fill="rgb(249,202,22)" fg:x="9924" fg:w="703"/><text x="4.9608%" y="1215.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (703 samples, 0.33%)</title><rect x="4.7108%" y="1189" width="0.3337%" height="15" fill="rgb(254,195,49)" fg:x="9924" fg:w="703"/><text x="4.9608%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (703 samples, 0.33%)</title><rect x="4.7108%" y="1173" width="0.3337%" height="15" fill="rgb(208,123,14)" fg:x="9924" fg:w="703"/><text x="4.9608%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (703 samples, 0.33%)</title><rect x="4.7108%" y="1157" width="0.3337%" height="15" fill="rgb(224,200,8)" fg:x="9924" fg:w="703"/><text x="4.9608%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (703 samples, 0.33%)</title><rect x="4.7108%" y="1141" width="0.3337%" height="15" fill="rgb(217,61,36)" fg:x="9924" fg:w="703"/><text x="4.9608%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (703 samples, 0.33%)</title><rect x="4.7108%" y="1125" width="0.3337%" height="15" fill="rgb(206,35,45)" fg:x="9924" fg:w="703"/><text x="4.9608%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (703 samples, 0.33%)</title><rect x="4.7108%" y="1109" width="0.3337%" height="15" fill="rgb(217,65,33)" fg:x="9924" fg:w="703"/><text x="4.9608%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (598 samples, 0.28%)</title><rect x="4.7607%" y="1093" width="0.2839%" height="15" fill="rgb(222,158,48)" fg:x="10029" fg:w="598"/><text x="5.0107%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (519 samples, 0.25%)</title><rect x="4.7982%" y="1077" width="0.2464%" height="15" fill="rgb(254,2,54)" fg:x="10108" fg:w="519"/><text x="5.0482%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (519 samples, 0.25%)</title><rect x="4.7982%" y="1061" width="0.2464%" height="15" fill="rgb(250,143,38)" fg:x="10108" fg:w="519"/><text x="5.0482%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.01%)</title><rect x="5.0445%" y="1045" width="0.0128%" height="15" fill="rgb(248,25,0)" fg:x="10627" fg:w="27"/><text x="5.2945%" y="1055.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (27 samples, 0.01%)</title><rect x="5.0445%" y="1029" width="0.0128%" height="15" fill="rgb(206,152,27)" fg:x="10627" fg:w="27"/><text x="5.2945%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="5.0573%" y="1045" width="0.0247%" height="15" fill="rgb(240,77,30)" fg:x="10654" fg:w="52"/><text x="5.3073%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="5.0573%" y="1029" width="0.0247%" height="15" fill="rgb(231,5,3)" fg:x="10654" fg:w="52"/><text x="5.3073%" y="1039.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (33 samples, 0.02%)</title><rect x="5.0664%" y="1013" width="0.0157%" height="15" fill="rgb(207,226,32)" fg:x="10673" fg:w="33"/><text x="5.3164%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (83 samples, 0.04%)</title><rect x="5.0445%" y="1061" width="0.0394%" height="15" fill="rgb(222,207,47)" fg:x="10627" fg:w="83"/><text x="5.2945%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_syn::send::{{closure}} (27 samples, 0.01%)</title><rect x="5.0839%" y="1061" width="0.0128%" height="15" fill="rgb(229,115,45)" fg:x="10710" fg:w="27"/><text x="5.3339%" y="1071.50"></text></g><g><title>async_global_executor::executor::spawn (46 samples, 0.02%)</title><rect x="5.1167%" y="965" width="0.0218%" height="15" fill="rgb(224,191,6)" fg:x="10779" fg:w="46"/><text x="5.3667%" y="975.50"></text></g><g><title>async_executor::Executor::spawn (46 samples, 0.02%)</title><rect x="5.1167%" y="949" width="0.0218%" height="15" fill="rgb(230,227,24)" fg:x="10779" fg:w="46"/><text x="5.3667%" y="959.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (61 samples, 0.03%)</title><rect x="5.1100%" y="1045" width="0.0290%" height="15" fill="rgb(228,80,19)" fg:x="10765" fg:w="61"/><text x="5.3600%" y="1055.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (52 samples, 0.02%)</title><rect x="5.1143%" y="1029" width="0.0247%" height="15" fill="rgb(247,229,0)" fg:x="10774" fg:w="52"/><text x="5.3643%" y="1039.50"></text></g><g><title>zenoh::net::routing::router::Tables::schedule_compute_trees (47 samples, 0.02%)</title><rect x="5.1167%" y="1013" width="0.0223%" height="15" fill="rgb(237,194,15)" fg:x="10779" fg:w="47"/><text x="5.3667%" y="1023.50"></text></g><g><title>async_std::task::spawn::spawn (47 samples, 0.02%)</title><rect x="5.1167%" y="997" width="0.0223%" height="15" fill="rgb(219,203,20)" fg:x="10779" fg:w="47"/><text x="5.3667%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::spawn (47 samples, 0.02%)</title><rect x="5.1167%" y="981" width="0.0223%" height="15" fill="rgb(234,128,8)" fg:x="10779" fg:w="47"/><text x="5.3667%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (34 samples, 0.02%)</title><rect x="5.1542%" y="933" width="0.0161%" height="15" fill="rgb(248,202,8)" fg:x="10858" fg:w="34"/><text x="5.4042%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (34 samples, 0.02%)</title><rect x="5.1542%" y="917" width="0.0161%" height="15" fill="rgb(206,104,37)" fg:x="10858" fg:w="34"/><text x="5.4042%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.02%)</title><rect x="5.1542%" y="901" width="0.0161%" height="15" fill="rgb(223,8,27)" fg:x="10858" fg:w="34"/><text x="5.4042%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.02%)</title><rect x="5.1542%" y="885" width="0.0161%" height="15" fill="rgb(216,217,28)" fg:x="10858" fg:w="34"/><text x="5.4042%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (34 samples, 0.02%)</title><rect x="5.1542%" y="869" width="0.0161%" height="15" fill="rgb(249,199,1)" fg:x="10858" fg:w="34"/><text x="5.4042%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (31 samples, 0.01%)</title><rect x="5.1556%" y="853" width="0.0147%" height="15" fill="rgb(240,85,17)" fg:x="10861" fg:w="31"/><text x="5.4056%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (31 samples, 0.01%)</title><rect x="5.1556%" y="837" width="0.0147%" height="15" fill="rgb(206,108,45)" fg:x="10861" fg:w="31"/><text x="5.4056%" y="847.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (29 samples, 0.01%)</title><rect x="5.1566%" y="821" width="0.0138%" height="15" fill="rgb(245,210,41)" fg:x="10863" fg:w="29"/><text x="5.4066%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (44 samples, 0.02%)</title><rect x="5.1542%" y="949" width="0.0209%" height="15" fill="rgb(206,13,37)" fg:x="10858" fg:w="44"/><text x="5.4042%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.02%)</title><rect x="5.1532%" y="965" width="0.0223%" height="15" fill="rgb(250,61,18)" fg:x="10856" fg:w="47"/><text x="5.4032%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (49 samples, 0.02%)</title><rect x="5.1532%" y="997" width="0.0233%" height="15" fill="rgb(235,172,48)" fg:x="10856" fg:w="49"/><text x="5.4032%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (49 samples, 0.02%)</title><rect x="5.1532%" y="981" width="0.0233%" height="15" fill="rgb(249,201,17)" fg:x="10856" fg:w="49"/><text x="5.4032%" y="991.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (141 samples, 0.07%)</title><rect x="5.1100%" y="1061" width="0.0669%" height="15" fill="rgb(219,208,6)" fg:x="10765" fg:w="141"/><text x="5.3600%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (72 samples, 0.03%)</title><rect x="5.1428%" y="1045" width="0.0342%" height="15" fill="rgb(248,31,23)" fg:x="10834" fg:w="72"/><text x="5.3928%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (72 samples, 0.03%)</title><rect x="5.1428%" y="1029" width="0.0342%" height="15" fill="rgb(245,15,42)" fg:x="10834" fg:w="72"/><text x="5.3928%" y="1039.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (68 samples, 0.03%)</title><rect x="5.1447%" y="1013" width="0.0323%" height="15" fill="rgb(222,217,39)" fg:x="10838" fg:w="68"/><text x="5.3947%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (301 samples, 0.14%)</title><rect x="5.0445%" y="1077" width="0.1429%" height="15" fill="rgb(210,219,27)" fg:x="10627" fg:w="301"/><text x="5.2945%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_init::{{closure}} (22 samples, 0.01%)</title><rect x="5.1770%" y="1061" width="0.0104%" height="15" fill="rgb(252,166,36)" fg:x="10906" fg:w="22"/><text x="5.4270%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::init_transport_unicast (22 samples, 0.01%)</title><rect x="5.1770%" y="1045" width="0.0104%" height="15" fill="rgb(245,132,34)" fg:x="10906" fg:w="22"/><text x="5.4270%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (303 samples, 0.14%)</title><rect x="5.0445%" y="1109" width="0.1438%" height="15" fill="rgb(236,54,3)" fg:x="10627" fg:w="303"/><text x="5.2945%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (303 samples, 0.14%)</title><rect x="5.0445%" y="1093" width="0.1438%" height="15" fill="rgb(241,173,43)" fg:x="10627" fg:w="303"/><text x="5.2945%" y="1103.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (308 samples, 0.15%)</title><rect x="5.0445%" y="1221" width="0.1462%" height="15" fill="rgb(215,190,9)" fg:x="10627" fg:w="308"/><text x="5.2945%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (308 samples, 0.15%)</title><rect x="5.0445%" y="1205" width="0.1462%" height="15" fill="rgb(242,101,16)" fg:x="10627" fg:w="308"/><text x="5.2945%" y="1215.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (308 samples, 0.15%)</title><rect x="5.0445%" y="1189" width="0.1462%" height="15" fill="rgb(223,190,21)" fg:x="10627" fg:w="308"/><text x="5.2945%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (308 samples, 0.15%)</title><rect x="5.0445%" y="1173" width="0.1462%" height="15" fill="rgb(215,228,25)" fg:x="10627" fg:w="308"/><text x="5.2945%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (308 samples, 0.15%)</title><rect x="5.0445%" y="1157" width="0.1462%" height="15" fill="rgb(225,36,22)" fg:x="10627" fg:w="308"/><text x="5.2945%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (308 samples, 0.15%)</title><rect x="5.0445%" y="1141" width="0.1462%" height="15" fill="rgb(251,106,46)" fg:x="10627" fg:w="308"/><text x="5.2945%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (308 samples, 0.15%)</title><rect x="5.0445%" y="1125" width="0.1462%" height="15" fill="rgb(208,90,1)" fg:x="10627" fg:w="308"/><text x="5.2945%" y="1135.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (32 samples, 0.02%)</title><rect x="5.2045%" y="917" width="0.0152%" height="15" fill="rgb(243,10,4)" fg:x="10964" fg:w="32"/><text x="5.4545%" y="927.50"></text></g><g><title>core::ops::function::FnMut::call_mut (42 samples, 0.02%)</title><rect x="5.2197%" y="885" width="0.0199%" height="15" fill="rgb(212,137,27)" fg:x="10996" fg:w="42"/><text x="5.4697%" y="895.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (42 samples, 0.02%)</title><rect x="5.2197%" y="869" width="0.0199%" height="15" fill="rgb(231,220,49)" fg:x="10996" fg:w="42"/><text x="5.4697%" y="879.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::bind::{{closure}} (76 samples, 0.04%)</title><rect x="5.2045%" y="949" width="0.0361%" height="15" fill="rgb(237,96,20)" fg:x="10964" fg:w="76"/><text x="5.4545%" y="959.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::bind (76 samples, 0.04%)</title><rect x="5.2045%" y="933" width="0.0361%" height="15" fill="rgb(239,229,30)" fg:x="10964" fg:w="76"/><text x="5.4545%" y="943.50"></text></g><g><title>std::net::tcp::TcpListener::bind (44 samples, 0.02%)</title><rect x="5.2197%" y="917" width="0.0209%" height="15" fill="rgb(219,65,33)" fg:x="10996" fg:w="44"/><text x="5.4697%" y="927.50"></text></g><g><title>std::net::each_addr (44 samples, 0.02%)</title><rect x="5.2197%" y="901" width="0.0209%" height="15" fill="rgb(243,134,7)" fg:x="10996" fg:w="44"/><text x="5.4697%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (79 samples, 0.04%)</title><rect x="5.2040%" y="965" width="0.0375%" height="15" fill="rgb(216,177,54)" fg:x="10963" fg:w="79"/><text x="5.4540%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (100 samples, 0.05%)</title><rect x="5.2035%" y="1013" width="0.0475%" height="15" fill="rgb(211,160,20)" fg:x="10962" fg:w="100"/><text x="5.4535%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (100 samples, 0.05%)</title><rect x="5.2035%" y="997" width="0.0475%" height="15" fill="rgb(239,85,39)" fg:x="10962" fg:w="100"/><text x="5.4535%" y="1007.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}} (100 samples, 0.05%)</title><rect x="5.2035%" y="981" width="0.0475%" height="15" fill="rgb(232,125,22)" fg:x="10962" fg:w="100"/><text x="5.4535%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (106 samples, 0.05%)</title><rect x="5.2031%" y="1077" width="0.0503%" height="15" fill="rgb(244,57,34)" fg:x="10961" fg:w="106"/><text x="5.4531%" y="1087.50"></text></g><g><title>zenoh_transport::manager::TransportManager::add_listener::{{closure}} (106 samples, 0.05%)</title><rect x="5.2031%" y="1061" width="0.0503%" height="15" fill="rgb(214,203,32)" fg:x="10961" fg:w="106"/><text x="5.4531%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (106 samples, 0.05%)</title><rect x="5.2031%" y="1045" width="0.0503%" height="15" fill="rgb(207,58,43)" fg:x="10961" fg:w="106"/><text x="5.4531%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::add_listener_unicast::{{closure}} (106 samples, 0.05%)</title><rect x="5.2031%" y="1029" width="0.0503%" height="15" fill="rgb(215,193,15)" fg:x="10961" fg:w="106"/><text x="5.4531%" y="1039.50"></text></g><g><title>getifaddrs (71 samples, 0.03%)</title><rect x="5.2672%" y="965" width="0.0337%" height="15" fill="rgb(232,15,44)" fg:x="11096" fg:w="71"/><text x="5.5172%" y="975.50"></text></g><g><title>[libc.so.6] (71 samples, 0.03%)</title><rect x="5.2672%" y="949" width="0.0337%" height="15" fill="rgb(212,3,48)" fg:x="11096" fg:w="71"/><text x="5.5172%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (241 samples, 0.11%)</title><rect x="5.1931%" y="1109" width="0.1144%" height="15" fill="rgb(218,128,7)" fg:x="10940" fg:w="241"/><text x="5.4431%" y="1119.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::bind_listeners::{{closure}} (220 samples, 0.10%)</title><rect x="5.2031%" y="1093" width="0.1044%" height="15" fill="rgb(226,216,39)" fg:x="10961" fg:w="220"/><text x="5.4531%" y="1103.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (109 samples, 0.05%)</title><rect x="5.2558%" y="1077" width="0.0517%" height="15" fill="rgb(243,47,51)" fg:x="11072" fg:w="109"/><text x="5.5058%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (109 samples, 0.05%)</title><rect x="5.2558%" y="1061" width="0.0517%" height="15" fill="rgb(241,183,40)" fg:x="11072" fg:w="109"/><text x="5.5058%" y="1071.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (107 samples, 0.05%)</title><rect x="5.2567%" y="1045" width="0.0508%" height="15" fill="rgb(231,217,32)" fg:x="11074" fg:w="107"/><text x="5.5067%" y="1055.50"></text></g><g><title>zenoh_util::net::get_local_addresses (99 samples, 0.05%)</title><rect x="5.2605%" y="1029" width="0.0470%" height="15" fill="rgb(229,61,38)" fg:x="11082" fg:w="99"/><text x="5.5105%" y="1039.50"></text></g><g><title>pnet_datalink::interfaces (97 samples, 0.05%)</title><rect x="5.2615%" y="1013" width="0.0460%" height="15" fill="rgb(225,210,5)" fg:x="11084" fg:w="97"/><text x="5.5115%" y="1023.50"></text></g><g><title>pnet_datalink::backend::interfaces (97 samples, 0.05%)</title><rect x="5.2615%" y="997" width="0.0460%" height="15" fill="rgb(231,79,45)" fg:x="11084" fg:w="97"/><text x="5.5115%" y="1007.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (97 samples, 0.05%)</title><rect x="5.2615%" y="981" width="0.0460%" height="15" fill="rgb(224,100,7)" fg:x="11084" fg:w="97"/><text x="5.5115%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (249 samples, 0.12%)</title><rect x="5.1912%" y="1141" width="0.1182%" height="15" fill="rgb(241,198,18)" fg:x="10936" fg:w="249"/><text x="5.4412%" y="1151.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}} (249 samples, 0.12%)</title><rect x="5.1912%" y="1125" width="0.1182%" height="15" fill="rgb(252,97,53)" fg:x="10936" fg:w="249"/><text x="5.4412%" y="1135.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (252 samples, 0.12%)</title><rect x="5.1907%" y="1157" width="0.1196%" height="15" fill="rgb(220,88,7)" fg:x="10935" fg:w="252"/><text x="5.4407%" y="1167.50"></text></g><g><title>shared_memory::unix::create_mapping (32 samples, 0.02%)</title><rect x="5.3388%" y="1013" width="0.0152%" height="15" fill="rgb(213,176,14)" fg:x="11247" fg:w="32"/><text x="5.5888%" y="1023.50"></text></g><g><title>std::fs::OpenOptions::open (28 samples, 0.01%)</title><rect x="5.3540%" y="1013" width="0.0133%" height="15" fill="rgb(246,73,7)" fg:x="11279" fg:w="28"/><text x="5.6040%" y="1023.50"></text></g><g><title>std::fs::OpenOptions::_open (28 samples, 0.01%)</title><rect x="5.3540%" y="997" width="0.0133%" height="15" fill="rgb(245,64,36)" fg:x="11279" fg:w="28"/><text x="5.6040%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::open (27 samples, 0.01%)</title><rect x="5.3545%" y="981" width="0.0128%" height="15" fill="rgb(245,80,10)" fg:x="11280" fg:w="27"/><text x="5.6045%" y="991.50"></text></g><g><title>shared_memory::ShmemConf::create (76 samples, 0.04%)</title><rect x="5.3355%" y="1029" width="0.0361%" height="15" fill="rgb(232,107,50)" fg:x="11240" fg:w="76"/><text x="5.5855%" y="1039.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryManager::make (86 samples, 0.04%)</title><rect x="5.3312%" y="1045" width="0.0408%" height="15" fill="rgb(253,3,0)" fg:x="11231" fg:w="86"/><text x="5.5812%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (110 samples, 0.05%)</title><rect x="5.3213%" y="1077" width="0.0522%" height="15" fill="rgb(212,99,53)" fg:x="11210" fg:w="110"/><text x="5.5713%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator::from_config::{{closure}} (109 samples, 0.05%)</title><rect x="5.3217%" y="1061" width="0.0517%" height="15" fill="rgb(249,111,54)" fg:x="11211" fg:w="109"/><text x="5.5717%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (143 samples, 0.07%)</title><rect x="5.3132%" y="1109" width="0.0679%" height="15" fill="rgb(249,55,30)" fg:x="11193" fg:w="143"/><text x="5.5632%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator::from_config::{{closure}} (143 samples, 0.07%)</title><rect x="5.3132%" y="1093" width="0.0679%" height="15" fill="rgb(237,47,42)" fg:x="11193" fg:w="143"/><text x="5.5632%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (165 samples, 0.08%)</title><rect x="5.3104%" y="1141" width="0.0783%" height="15" fill="rgb(211,20,18)" fg:x="11187" fg:w="165"/><text x="5.5604%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::from_config::{{closure}} (161 samples, 0.08%)</title><rect x="5.3123%" y="1125" width="0.0764%" height="15" fill="rgb(231,203,46)" fg:x="11191" fg:w="161"/><text x="5.5623%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (433 samples, 0.21%)</title><rect x="5.1907%" y="1173" width="0.2055%" height="15" fill="rgb(237,142,3)" fg:x="10935" fg:w="433"/><text x="5.4407%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::from_config::{{closure}} (181 samples, 0.09%)</title><rect x="5.3104%" y="1157" width="0.0859%" height="15" fill="rgb(241,107,1)" fg:x="11187" fg:w="181"/><text x="5.5604%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::builder (29 samples, 0.01%)</title><rect x="5.3986%" y="1173" width="0.0138%" height="15" fill="rgb(229,83,13)" fg:x="11373" fg:w="29"/><text x="5.6486%" y="1183.50"></text></g><g><title>&lt;zenoh_transport::manager::TransportManagerBuilder as core::default::Default&gt;::default (29 samples, 0.01%)</title><rect x="5.3986%" y="1157" width="0.0138%" height="15" fill="rgb(241,91,40)" fg:x="11373" fg:w="29"/><text x="5.6486%" y="1167.50"></text></g><g><title>&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast as core::default::Default&gt;::default (29 samples, 0.01%)</title><rect x="5.3986%" y="1141" width="0.0138%" height="15" fill="rgb(225,3,45)" fg:x="11373" fg:w="29"/><text x="5.6486%" y="1151.50"></text></g><g><title>async_std::task::block_on::block_on (27 samples, 0.01%)</title><rect x="5.3996%" y="1125" width="0.0128%" height="15" fill="rgb(244,223,14)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::blocking (27 samples, 0.01%)</title><rect x="5.3996%" y="1109" width="0.0128%" height="15" fill="rgb(224,124,37)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.01%)</title><rect x="5.3996%" y="1093" width="0.0128%" height="15" fill="rgb(251,171,30)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.01%)</title><rect x="5.3996%" y="1077" width="0.0128%" height="15" fill="rgb(236,46,54)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (27 samples, 0.01%)</title><rect x="5.3996%" y="1061" width="0.0128%" height="15" fill="rgb(245,213,5)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1071.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (27 samples, 0.01%)</title><rect x="5.3996%" y="1045" width="0.0128%" height="15" fill="rgb(230,144,27)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.01%)</title><rect x="5.3996%" y="1029" width="0.0128%" height="15" fill="rgb(220,86,6)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.01%)</title><rect x="5.3996%" y="1013" width="0.0128%" height="15" fill="rgb(240,20,13)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (27 samples, 0.01%)</title><rect x="5.3996%" y="997" width="0.0128%" height="15" fill="rgb(217,89,34)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (27 samples, 0.01%)</title><rect x="5.3996%" y="981" width="0.0128%" height="15" fill="rgb(229,13,5)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="991.50"></text></g><g><title>async_global_executor::executor::block_on (27 samples, 0.01%)</title><rect x="5.3996%" y="965" width="0.0128%" height="15" fill="rgb(244,67,35)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.01%)</title><rect x="5.3996%" y="949" width="0.0128%" height="15" fill="rgb(221,40,2)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.01%)</title><rect x="5.3996%" y="933" width="0.0128%" height="15" fill="rgb(237,157,21)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="943.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (27 samples, 0.01%)</title><rect x="5.3996%" y="917" width="0.0128%" height="15" fill="rgb(222,94,11)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on (27 samples, 0.01%)</title><rect x="5.3996%" y="901" width="0.0128%" height="15" fill="rgb(249,113,6)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (27 samples, 0.01%)</title><rect x="5.3996%" y="885" width="0.0128%" height="15" fill="rgb(238,137,36)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="895.50"></text></g><g><title>async_io::driver::block_on (27 samples, 0.01%)</title><rect x="5.3996%" y="869" width="0.0128%" height="15" fill="rgb(210,102,26)" fg:x="11375" fg:w="27"/><text x="5.6496%" y="879.50"></text></g><g><title>async_task::runnable::spawn_unchecked (22 samples, 0.01%)</title><rect x="5.4205%" y="1077" width="0.0104%" height="15" fill="rgb(218,30,30)" fg:x="11419" fg:w="22"/><text x="5.6705%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn (55 samples, 0.03%)</title><rect x="5.4153%" y="1093" width="0.0261%" height="15" fill="rgb(214,67,26)" fg:x="11408" fg:w="55"/><text x="5.6653%" y="1103.50"></text></g><g><title>async_global_executor::executor::spawn (57 samples, 0.03%)</title><rect x="5.4148%" y="1109" width="0.0271%" height="15" fill="rgb(251,9,53)" fg:x="11407" fg:w="57"/><text x="5.6648%" y="1119.50"></text></g><g><title>async_std::task::spawn::spawn (66 samples, 0.03%)</title><rect x="5.4134%" y="1141" width="0.0313%" height="15" fill="rgb(228,204,25)" fg:x="11404" fg:w="66"/><text x="5.6634%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::spawn (65 samples, 0.03%)</title><rect x="5.4138%" y="1125" width="0.0309%" height="15" fill="rgb(207,153,8)" fg:x="11405" fg:w="65"/><text x="5.6638%" y="1135.50"></text></g><g><title>[libc.so.6] (86 samples, 0.04%)</title><rect x="5.5695%" y="1013" width="0.0408%" height="15" fill="rgb(242,9,16)" fg:x="11733" fg:w="86"/><text x="5.8195%" y="1023.50"></text></g><g><title>__clone (85 samples, 0.04%)</title><rect x="5.5700%" y="997" width="0.0403%" height="15" fill="rgb(217,211,10)" fg:x="11734" fg:w="85"/><text x="5.8200%" y="1007.50"></text></g><g><title>[unknown] (84 samples, 0.04%)</title><rect x="5.5705%" y="981" width="0.0399%" height="15" fill="rgb(219,228,52)" fg:x="11735" fg:w="84"/><text x="5.8205%" y="991.50"></text></g><g><title>[unknown] (84 samples, 0.04%)</title><rect x="5.5705%" y="965" width="0.0399%" height="15" fill="rgb(231,92,29)" fg:x="11735" fg:w="84"/><text x="5.8205%" y="975.50"></text></g><g><title>[unknown] (83 samples, 0.04%)</title><rect x="5.5710%" y="949" width="0.0394%" height="15" fill="rgb(232,8,23)" fg:x="11736" fg:w="83"/><text x="5.8210%" y="959.50"></text></g><g><title>[unknown] (81 samples, 0.04%)</title><rect x="5.5719%" y="933" width="0.0384%" height="15" fill="rgb(216,211,34)" fg:x="11738" fg:w="81"/><text x="5.8219%" y="943.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="5.5852%" y="917" width="0.0252%" height="15" fill="rgb(236,151,0)" fg:x="11766" fg:w="53"/><text x="5.8352%" y="927.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="5.5914%" y="901" width="0.0190%" height="15" fill="rgb(209,168,3)" fg:x="11779" fg:w="40"/><text x="5.8414%" y="911.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="5.5966%" y="885" width="0.0138%" height="15" fill="rgb(208,129,28)" fg:x="11790" fg:w="29"/><text x="5.8466%" y="895.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="5.5985%" y="869" width="0.0119%" height="15" fill="rgb(229,78,22)" fg:x="11794" fg:w="25"/><text x="5.8485%" y="879.50"></text></g><g><title>[libc.so.6] (121 samples, 0.06%)</title><rect x="5.5534%" y="1029" width="0.0574%" height="15" fill="rgb(228,187,13)" fg:x="11699" fg:w="121"/><text x="5.8034%" y="1039.50"></text></g><g><title>[unknown] (206 samples, 0.10%)</title><rect x="5.6108%" y="1029" width="0.0978%" height="15" fill="rgb(240,119,24)" fg:x="11820" fg:w="206"/><text x="5.8608%" y="1039.50"></text></g><g><title>[unknown] (170 samples, 0.08%)</title><rect x="5.6279%" y="1013" width="0.0807%" height="15" fill="rgb(209,194,42)" fg:x="11856" fg:w="170"/><text x="5.8779%" y="1023.50"></text></g><g><title>[unknown] (164 samples, 0.08%)</title><rect x="5.6308%" y="997" width="0.0778%" height="15" fill="rgb(247,200,46)" fg:x="11862" fg:w="164"/><text x="5.8808%" y="1007.50"></text></g><g><title>[unknown] (158 samples, 0.08%)</title><rect x="5.6336%" y="981" width="0.0750%" height="15" fill="rgb(218,76,16)" fg:x="11868" fg:w="158"/><text x="5.8836%" y="991.50"></text></g><g><title>[unknown] (133 samples, 0.06%)</title><rect x="5.6455%" y="965" width="0.0631%" height="15" fill="rgb(225,21,48)" fg:x="11893" fg:w="133"/><text x="5.8955%" y="975.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="5.6792%" y="949" width="0.0294%" height="15" fill="rgb(239,223,50)" fg:x="11964" fg:w="62"/><text x="5.9292%" y="959.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="5.6839%" y="933" width="0.0247%" height="15" fill="rgb(244,45,21)" fg:x="11974" fg:w="52"/><text x="5.9339%" y="943.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="5.6863%" y="917" width="0.0223%" height="15" fill="rgb(232,33,43)" fg:x="11979" fg:w="47"/><text x="5.9363%" y="927.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="5.6896%" y="901" width="0.0190%" height="15" fill="rgb(209,8,3)" fg:x="11986" fg:w="40"/><text x="5.9396%" y="911.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="5.6967%" y="885" width="0.0119%" height="15" fill="rgb(214,25,53)" fg:x="12001" fg:w="25"/><text x="5.9467%" y="895.50"></text></g><g><title>__mmap (104 samples, 0.05%)</title><rect x="5.7162%" y="1029" width="0.0494%" height="15" fill="rgb(254,186,54)" fg:x="12042" fg:w="104"/><text x="5.9662%" y="1039.50"></text></g><g><title>[unknown] (103 samples, 0.05%)</title><rect x="5.7167%" y="1013" width="0.0489%" height="15" fill="rgb(208,174,49)" fg:x="12043" fg:w="103"/><text x="5.9667%" y="1023.50"></text></g><g><title>[unknown] (102 samples, 0.05%)</title><rect x="5.7172%" y="997" width="0.0484%" height="15" fill="rgb(233,191,51)" fg:x="12044" fg:w="102"/><text x="5.9672%" y="1007.50"></text></g><g><title>[unknown] (102 samples, 0.05%)</title><rect x="5.7172%" y="981" width="0.0484%" height="15" fill="rgb(222,134,10)" fg:x="12044" fg:w="102"/><text x="5.9672%" y="991.50"></text></g><g><title>[unknown] (95 samples, 0.05%)</title><rect x="5.7205%" y="965" width="0.0451%" height="15" fill="rgb(230,226,20)" fg:x="12051" fg:w="95"/><text x="5.9705%" y="975.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="5.7309%" y="949" width="0.0347%" height="15" fill="rgb(251,111,25)" fg:x="12073" fg:w="73"/><text x="5.9809%" y="959.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="5.7366%" y="933" width="0.0290%" height="15" fill="rgb(224,40,46)" fg:x="12085" fg:w="61"/><text x="5.9866%" y="943.50"></text></g><g><title>__mprotect (74 samples, 0.04%)</title><rect x="5.7656%" y="1029" width="0.0351%" height="15" fill="rgb(236,108,47)" fg:x="12146" fg:w="74"/><text x="6.0156%" y="1039.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="5.7656%" y="1013" width="0.0351%" height="15" fill="rgb(234,93,0)" fg:x="12146" fg:w="74"/><text x="6.0156%" y="1023.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="5.7661%" y="997" width="0.0347%" height="15" fill="rgb(224,213,32)" fg:x="12147" fg:w="73"/><text x="6.0161%" y="1007.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="5.7661%" y="981" width="0.0347%" height="15" fill="rgb(251,11,48)" fg:x="12147" fg:w="73"/><text x="6.0161%" y="991.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="5.7661%" y="965" width="0.0347%" height="15" fill="rgb(236,173,5)" fg:x="12147" fg:w="73"/><text x="6.0161%" y="975.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="5.7661%" y="949" width="0.0347%" height="15" fill="rgb(230,95,12)" fg:x="12147" fg:w="73"/><text x="6.0161%" y="959.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="5.7680%" y="933" width="0.0328%" height="15" fill="rgb(232,209,1)" fg:x="12151" fg:w="69"/><text x="6.0180%" y="943.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="5.7727%" y="917" width="0.0280%" height="15" fill="rgb(232,6,1)" fg:x="12161" fg:w="59"/><text x="6.0227%" y="927.50"></text></g><g><title>_dl_allocate_tls (52 samples, 0.02%)</title><rect x="5.8007%" y="1029" width="0.0247%" height="15" fill="rgb(210,224,50)" fg:x="12220" fg:w="52"/><text x="6.0507%" y="1039.50"></text></g><g><title>[ld-linux-x86-64.so.2] (52 samples, 0.02%)</title><rect x="5.8007%" y="1013" width="0.0247%" height="15" fill="rgb(228,127,35)" fg:x="12220" fg:w="52"/><text x="6.0507%" y="1023.50"></text></g><g><title>__libc_calloc (42 samples, 0.02%)</title><rect x="5.8055%" y="997" width="0.0199%" height="15" fill="rgb(245,102,45)" fg:x="12230" fg:w="42"/><text x="6.0555%" y="1007.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="5.8344%" y="1013" width="0.0104%" height="15" fill="rgb(214,1,49)" fg:x="12291" fg:w="22"/><text x="6.0844%" y="1023.50"></text></g><g><title>pthread_mutex_lock (27 samples, 0.01%)</title><rect x="5.8449%" y="1013" width="0.0128%" height="15" fill="rgb(226,163,40)" fg:x="12313" fg:w="27"/><text x="6.0949%" y="1023.50"></text></g><g><title>pthread_create (746 samples, 0.35%)</title><rect x="5.5054%" y="1045" width="0.3541%" height="15" fill="rgb(239,212,28)" fg:x="11598" fg:w="746"/><text x="5.7554%" y="1055.50"></text></g><g><title>_dl_allocate_tls_init (72 samples, 0.03%)</title><rect x="5.8254%" y="1029" width="0.0342%" height="15" fill="rgb(220,20,13)" fg:x="12272" fg:w="72"/><text x="6.0754%" y="1039.50"></text></g><g><title>std::sys::unix::thread::Thread::new (796 samples, 0.38%)</title><rect x="5.4822%" y="1061" width="0.3779%" height="15" fill="rgb(210,164,35)" fg:x="11549" fg:w="796"/><text x="5.7322%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit::{{closure}} (35 samples, 0.02%)</title><rect x="5.8615%" y="997" width="0.0166%" height="15" fill="rgb(248,109,41)" fg:x="12348" fg:w="35"/><text x="6.1115%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.02%)</title><rect x="5.8615%" y="981" width="0.0166%" height="15" fill="rgb(238,23,50)" fg:x="12348" fg:w="35"/><text x="6.1115%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.02%)</title><rect x="5.8615%" y="965" width="0.0166%" height="15" fill="rgb(211,48,49)" fg:x="12348" fg:w="35"/><text x="6.1115%" y="975.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.02%)</title><rect x="5.8615%" y="949" width="0.0166%" height="15" fill="rgb(223,36,21)" fg:x="12348" fg:w="35"/><text x="6.1115%" y="959.50"></text></g><g><title>malloc (30 samples, 0.01%)</title><rect x="5.8638%" y="933" width="0.0142%" height="15" fill="rgb(207,123,46)" fg:x="12353" fg:w="30"/><text x="6.1138%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (36 samples, 0.02%)</title><rect x="5.8615%" y="1045" width="0.0171%" height="15" fill="rgb(240,218,32)" fg:x="12348" fg:w="36"/><text x="6.1115%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (36 samples, 0.02%)</title><rect x="5.8615%" y="1029" width="0.0171%" height="15" fill="rgb(252,5,43)" fg:x="12348" fg:w="36"/><text x="6.1115%" y="1039.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (36 samples, 0.02%)</title><rect x="5.8615%" y="1013" width="0.0171%" height="15" fill="rgb(252,84,19)" fg:x="12348" fg:w="36"/><text x="6.1115%" y="1023.50"></text></g><g><title>zenoh_transport::manager::TransportManager::new (1,002 samples, 0.48%)</title><rect x="5.4124%" y="1157" width="0.4756%" height="15" fill="rgb(243,152,39)" fg:x="11402" fg:w="1002"/><text x="5.6624%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new (934 samples, 0.44%)</title><rect x="5.4447%" y="1141" width="0.4434%" height="15" fill="rgb(234,160,15)" fg:x="11470" fg:w="934"/><text x="5.6947%" y="1151.50"></text></g><g><title>std::thread::spawn (910 samples, 0.43%)</title><rect x="5.4561%" y="1125" width="0.4320%" height="15" fill="rgb(237,34,20)" fg:x="11494" fg:w="910"/><text x="5.7061%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn (908 samples, 0.43%)</title><rect x="5.4570%" y="1109" width="0.4310%" height="15" fill="rgb(229,97,13)" fg:x="11496" fg:w="908"/><text x="5.7070%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (908 samples, 0.43%)</title><rect x="5.4570%" y="1093" width="0.4310%" height="15" fill="rgb(234,71,50)" fg:x="11496" fg:w="908"/><text x="5.7070%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (907 samples, 0.43%)</title><rect x="5.4575%" y="1077" width="0.4305%" height="15" fill="rgb(253,155,4)" fg:x="11497" fg:w="907"/><text x="5.7075%" y="1087.50"></text></g><g><title>std::thread::Thread::new (59 samples, 0.03%)</title><rect x="5.8600%" y="1061" width="0.0280%" height="15" fill="rgb(222,185,37)" fg:x="12345" fg:w="59"/><text x="6.1100%" y="1071.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (43 samples, 0.02%)</title><rect x="5.8942%" y="1029" width="0.0204%" height="15" fill="rgb(251,177,13)" fg:x="12417" fg:w="43"/><text x="6.1442%" y="1039.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (43 samples, 0.02%)</title><rect x="5.8942%" y="1013" width="0.0204%" height="15" fill="rgb(250,179,40)" fg:x="12417" fg:w="43"/><text x="6.1442%" y="1023.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (43 samples, 0.02%)</title><rect x="5.8942%" y="997" width="0.0204%" height="15" fill="rgb(242,44,2)" fg:x="12417" fg:w="43"/><text x="6.1442%" y="1007.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_lucas (48 samples, 0.02%)</title><rect x="5.8923%" y="1045" width="0.0228%" height="15" fill="rgb(216,177,13)" fg:x="12413" fg:w="48"/><text x="6.1423%" y="1055.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::build (1,066 samples, 0.51%)</title><rect x="5.4124%" y="1173" width="0.5060%" height="15" fill="rgb(216,106,43)" fg:x="11402" fg:w="1066"/><text x="5.6624%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (64 samples, 0.03%)</title><rect x="5.8880%" y="1157" width="0.0304%" height="15" fill="rgb(216,183,2)" fg:x="12404" fg:w="64"/><text x="6.1380%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (63 samples, 0.03%)</title><rect x="5.8885%" y="1141" width="0.0299%" height="15" fill="rgb(249,75,3)" fg:x="12405" fg:w="63"/><text x="6.1385%" y="1151.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (60 samples, 0.03%)</title><rect x="5.8899%" y="1125" width="0.0285%" height="15" fill="rgb(219,67,39)" fg:x="12408" fg:w="60"/><text x="6.1399%" y="1135.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (60 samples, 0.03%)</title><rect x="5.8899%" y="1109" width="0.0285%" height="15" fill="rgb(253,228,2)" fg:x="12408" fg:w="60"/><text x="6.1399%" y="1119.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (60 samples, 0.03%)</title><rect x="5.8899%" y="1093" width="0.0285%" height="15" fill="rgb(235,138,27)" fg:x="12408" fg:w="60"/><text x="6.1399%" y="1103.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (60 samples, 0.03%)</title><rect x="5.8899%" y="1077" width="0.0285%" height="15" fill="rgb(236,97,51)" fg:x="12408" fg:w="60"/><text x="6.1399%" y="1087.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (56 samples, 0.03%)</title><rect x="5.8918%" y="1061" width="0.0266%" height="15" fill="rgb(240,80,30)" fg:x="12412" fg:w="56"/><text x="6.1418%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,534 samples, 0.73%)</title><rect x="5.1907%" y="1205" width="0.7282%" height="15" fill="rgb(230,178,19)" fg:x="10935" fg:w="1534"/><text x="5.4407%" y="1215.50"></text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}} (1,534 samples, 0.73%)</title><rect x="5.1907%" y="1189" width="0.7282%" height="15" fill="rgb(210,190,27)" fg:x="10935" fg:w="1534"/><text x="5.4407%" y="1199.50"></text></g><g><title>zenoh::session::Session::new::{{closure}} (1,544 samples, 0.73%)</title><rect x="5.1907%" y="1221" width="0.7329%" height="15" fill="rgb(222,107,31)" fg:x="10935" fg:w="1544"/><text x="5.4407%" y="1231.50"></text></g><g><title>zenoh_transport::manager::TransportManager::new::{{closure}} (40 samples, 0.02%)</title><rect x="5.9237%" y="1221" width="0.0190%" height="15" fill="rgb(216,127,34)" fg:x="12479" fg:w="40"/><text x="6.1737%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.02%)</title><rect x="5.9237%" y="1205" width="0.0190%" height="15" fill="rgb(234,116,52)" fg:x="12479" fg:w="40"/><text x="6.1737%" y="1215.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}} (40 samples, 0.02%)</title><rect x="5.9237%" y="1189" width="0.0190%" height="15" fill="rgb(222,124,15)" fg:x="12479" fg:w="40"/><text x="6.1737%" y="1199.50"></text></g><g><title>async_std::task::spawn::spawn (40 samples, 0.02%)</title><rect x="5.9237%" y="1173" width="0.0190%" height="15" fill="rgb(231,179,28)" fg:x="12479" fg:w="40"/><text x="6.1737%" y="1183.50"></text></g><g><title>async_std::task::builder::Builder::spawn (40 samples, 0.02%)</title><rect x="5.9237%" y="1157" width="0.0190%" height="15" fill="rgb(226,93,45)" fg:x="12479" fg:w="40"/><text x="6.1737%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.01%)</title><rect x="5.9507%" y="1029" width="0.0147%" height="15" fill="rgb(215,8,51)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (31 samples, 0.01%)</title><rect x="5.9507%" y="1013" width="0.0147%" height="15" fill="rgb(223,106,5)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.01%)</title><rect x="5.9507%" y="997" width="0.0147%" height="15" fill="rgb(250,191,5)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.01%)</title><rect x="5.9507%" y="981" width="0.0147%" height="15" fill="rgb(242,132,44)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (31 samples, 0.01%)</title><rect x="5.9507%" y="965" width="0.0147%" height="15" fill="rgb(251,152,29)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="975.50"></text></g><g><title>alloc::alloc::Global::grow_impl (31 samples, 0.01%)</title><rect x="5.9507%" y="949" width="0.0147%" height="15" fill="rgb(218,179,5)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="959.50"></text></g><g><title>alloc::alloc::realloc (31 samples, 0.01%)</title><rect x="5.9507%" y="933" width="0.0147%" height="15" fill="rgb(227,67,19)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="943.50"></text></g><g><title>realloc (31 samples, 0.01%)</title><rect x="5.9507%" y="917" width="0.0147%" height="15" fill="rgb(233,119,31)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="927.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="5.9507%" y="901" width="0.0147%" height="15" fill="rgb(241,120,22)" fg:x="12536" fg:w="31"/><text x="6.2007%" y="911.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="5.9517%" y="885" width="0.0138%" height="15" fill="rgb(224,102,30)" fg:x="12538" fg:w="29"/><text x="6.2017%" y="895.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (22 samples, 0.01%)</title><rect x="5.9654%" y="933" width="0.0104%" height="15" fill="rgb(210,164,37)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (22 samples, 0.01%)</title><rect x="5.9654%" y="917" width="0.0104%" height="15" fill="rgb(226,191,16)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.01%)</title><rect x="5.9654%" y="901" width="0.0104%" height="15" fill="rgb(214,40,45)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.01%)</title><rect x="5.9654%" y="885" width="0.0104%" height="15" fill="rgb(244,29,26)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.01%)</title><rect x="5.9654%" y="869" width="0.0104%" height="15" fill="rgb(216,16,5)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.01%)</title><rect x="5.9654%" y="853" width="0.0104%" height="15" fill="rgb(249,76,35)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.01%)</title><rect x="5.9654%" y="837" width="0.0104%" height="15" fill="rgb(207,11,44)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.01%)</title><rect x="5.9654%" y="821" width="0.0104%" height="15" fill="rgb(228,190,49)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.01%)</title><rect x="5.9654%" y="805" width="0.0104%" height="15" fill="rgb(214,173,12)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.01%)</title><rect x="5.9654%" y="789" width="0.0104%" height="15" fill="rgb(218,26,35)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.01%)</title><rect x="5.9654%" y="773" width="0.0104%" height="15" fill="rgb(220,200,19)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="783.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.01%)</title><rect x="5.9654%" y="757" width="0.0104%" height="15" fill="rgb(239,95,49)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="767.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="5.9654%" y="741" width="0.0104%" height="15" fill="rgb(235,85,53)" fg:x="12567" fg:w="22"/><text x="6.2154%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.01%)</title><rect x="5.9654%" y="1013" width="0.0133%" height="15" fill="rgb(233,133,31)" fg:x="12567" fg:w="28"/><text x="6.2154%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.01%)</title><rect x="5.9654%" y="997" width="0.0133%" height="15" fill="rgb(218,25,20)" fg:x="12567" fg:w="28"/><text x="6.2154%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.01%)</title><rect x="5.9654%" y="981" width="0.0133%" height="15" fill="rgb(252,210,38)" fg:x="12567" fg:w="28"/><text x="6.2154%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.01%)</title><rect x="5.9654%" y="965" width="0.0133%" height="15" fill="rgb(242,134,21)" fg:x="12567" fg:w="28"/><text x="6.2154%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.01%)</title><rect x="5.9654%" y="949" width="0.0133%" height="15" fill="rgb(213,28,48)" fg:x="12567" fg:w="28"/><text x="6.2154%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (65 samples, 0.03%)</title><rect x="5.9806%" y="789" width="0.0309%" height="15" fill="rgb(250,196,2)" fg:x="12599" fg:w="65"/><text x="6.2306%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (65 samples, 0.03%)</title><rect x="5.9806%" y="773" width="0.0309%" height="15" fill="rgb(227,5,17)" fg:x="12599" fg:w="65"/><text x="6.2306%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (36 samples, 0.02%)</title><rect x="5.9944%" y="757" width="0.0171%" height="15" fill="rgb(221,226,24)" fg:x="12628" fg:w="36"/><text x="6.2444%" y="767.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (36 samples, 0.02%)</title><rect x="5.9944%" y="741" width="0.0171%" height="15" fill="rgb(211,5,48)" fg:x="12628" fg:w="36"/><text x="6.2444%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (36 samples, 0.02%)</title><rect x="5.9944%" y="725" width="0.0171%" height="15" fill="rgb(219,150,6)" fg:x="12628" fg:w="36"/><text x="6.2444%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (23 samples, 0.01%)</title><rect x="6.0006%" y="709" width="0.0109%" height="15" fill="rgb(251,46,16)" fg:x="12641" fg:w="23"/><text x="6.2506%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.01%)</title><rect x="6.0006%" y="693" width="0.0109%" height="15" fill="rgb(220,204,40)" fg:x="12641" fg:w="23"/><text x="6.2506%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (22 samples, 0.01%)</title><rect x="6.0010%" y="677" width="0.0104%" height="15" fill="rgb(211,85,2)" fg:x="12642" fg:w="22"/><text x="6.2510%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (33 samples, 0.02%)</title><rect x="6.0124%" y="741" width="0.0157%" height="15" fill="rgb(229,17,7)" fg:x="12666" fg:w="33"/><text x="6.2624%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (33 samples, 0.02%)</title><rect x="6.0124%" y="725" width="0.0157%" height="15" fill="rgb(239,72,28)" fg:x="12666" fg:w="33"/><text x="6.2624%" y="735.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (33 samples, 0.02%)</title><rect x="6.0124%" y="709" width="0.0157%" height="15" fill="rgb(230,47,54)" fg:x="12666" fg:w="33"/><text x="6.2624%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (44 samples, 0.02%)</title><rect x="6.0115%" y="789" width="0.0209%" height="15" fill="rgb(214,50,8)" fg:x="12664" fg:w="44"/><text x="6.2615%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (44 samples, 0.02%)</title><rect x="6.0115%" y="773" width="0.0209%" height="15" fill="rgb(216,198,43)" fg:x="12664" fg:w="44"/><text x="6.2615%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (44 samples, 0.02%)</title><rect x="6.0115%" y="757" width="0.0209%" height="15" fill="rgb(234,20,35)" fg:x="12664" fg:w="44"/><text x="6.2615%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (116 samples, 0.06%)</title><rect x="5.9787%" y="917" width="0.0551%" height="15" fill="rgb(254,45,19)" fg:x="12595" fg:w="116"/><text x="6.2287%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (116 samples, 0.06%)</title><rect x="5.9787%" y="901" width="0.0551%" height="15" fill="rgb(219,14,44)" fg:x="12595" fg:w="116"/><text x="6.2287%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (116 samples, 0.06%)</title><rect x="5.9787%" y="885" width="0.0551%" height="15" fill="rgb(217,220,26)" fg:x="12595" fg:w="116"/><text x="6.2287%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (116 samples, 0.06%)</title><rect x="5.9787%" y="869" width="0.0551%" height="15" fill="rgb(213,158,28)" fg:x="12595" fg:w="116"/><text x="6.2287%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (116 samples, 0.06%)</title><rect x="5.9787%" y="853" width="0.0551%" height="15" fill="rgb(252,51,52)" fg:x="12595" fg:w="116"/><text x="6.2287%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (116 samples, 0.06%)</title><rect x="5.9787%" y="837" width="0.0551%" height="15" fill="rgb(246,89,16)" fg:x="12595" fg:w="116"/><text x="6.2287%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (116 samples, 0.06%)</title><rect x="5.9787%" y="821" width="0.0551%" height="15" fill="rgb(216,158,49)" fg:x="12595" fg:w="116"/><text x="6.2287%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (114 samples, 0.05%)</title><rect x="5.9797%" y="805" width="0.0541%" height="15" fill="rgb(236,107,19)" fg:x="12597" fg:w="114"/><text x="6.2297%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (37 samples, 0.02%)</title><rect x="6.0347%" y="837" width="0.0176%" height="15" fill="rgb(228,185,30)" fg:x="12713" fg:w="37"/><text x="6.2847%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (37 samples, 0.02%)</title><rect x="6.0347%" y="821" width="0.0176%" height="15" fill="rgb(246,134,8)" fg:x="12713" fg:w="37"/><text x="6.2847%" y="831.50"></text></g><g><title>alloc::alloc::realloc (37 samples, 0.02%)</title><rect x="6.0347%" y="805" width="0.0176%" height="15" fill="rgb(214,143,50)" fg:x="12713" fg:w="37"/><text x="6.2847%" y="815.50"></text></g><g><title>realloc (37 samples, 0.02%)</title><rect x="6.0347%" y="789" width="0.0176%" height="15" fill="rgb(228,75,8)" fg:x="12713" fg:w="37"/><text x="6.2847%" y="799.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="6.0376%" y="773" width="0.0147%" height="15" fill="rgb(207,175,4)" fg:x="12719" fg:w="31"/><text x="6.2876%" y="783.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="6.0399%" y="757" width="0.0123%" height="15" fill="rgb(205,108,24)" fg:x="12724" fg:w="26"/><text x="6.2899%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.02%)</title><rect x="6.0343%" y="853" width="0.0185%" height="15" fill="rgb(244,120,49)" fg:x="12712" fg:w="39"/><text x="6.2843%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (157 samples, 0.07%)</title><rect x="5.9787%" y="949" width="0.0745%" height="15" fill="rgb(223,47,38)" fg:x="12595" fg:w="157"/><text x="6.2287%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (157 samples, 0.07%)</title><rect x="5.9787%" y="933" width="0.0745%" height="15" fill="rgb(229,179,11)" fg:x="12595" fg:w="157"/><text x="6.2287%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (41 samples, 0.02%)</title><rect x="6.0338%" y="917" width="0.0195%" height="15" fill="rgb(231,122,1)" fg:x="12711" fg:w="41"/><text x="6.2838%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (41 samples, 0.02%)</title><rect x="6.0338%" y="901" width="0.0195%" height="15" fill="rgb(245,119,9)" fg:x="12711" fg:w="41"/><text x="6.2838%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.02%)</title><rect x="6.0338%" y="885" width="0.0195%" height="15" fill="rgb(241,163,25)" fg:x="12711" fg:w="41"/><text x="6.2838%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.02%)</title><rect x="6.0338%" y="869" width="0.0195%" height="15" fill="rgb(217,214,3)" fg:x="12711" fg:w="41"/><text x="6.2838%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.01%)</title><rect x="6.0532%" y="821" width="0.0133%" height="15" fill="rgb(240,86,28)" fg:x="12752" fg:w="28"/><text x="6.3032%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.01%)</title><rect x="6.0532%" y="805" width="0.0133%" height="15" fill="rgb(215,47,9)" fg:x="12752" fg:w="28"/><text x="6.3032%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (28 samples, 0.01%)</title><rect x="6.0532%" y="789" width="0.0133%" height="15" fill="rgb(252,25,45)" fg:x="12752" fg:w="28"/><text x="6.3032%" y="799.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (28 samples, 0.01%)</title><rect x="6.0532%" y="773" width="0.0133%" height="15" fill="rgb(251,164,9)" fg:x="12752" fg:w="28"/><text x="6.3032%" y="783.50"></text></g><g><title>zenoh_protocol_core::PeerId::as_slice (25 samples, 0.01%)</title><rect x="6.0547%" y="757" width="0.0119%" height="15" fill="rgb(233,194,0)" fg:x="12755" fg:w="25"/><text x="6.3047%" y="767.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (25 samples, 0.01%)</title><rect x="6.0547%" y="741" width="0.0119%" height="15" fill="rgb(249,111,24)" fg:x="12755" fg:w="25"/><text x="6.3047%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (25 samples, 0.01%)</title><rect x="6.0547%" y="725" width="0.0119%" height="15" fill="rgb(250,223,3)" fg:x="12755" fg:w="25"/><text x="6.3047%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (25 samples, 0.01%)</title><rect x="6.0547%" y="709" width="0.0119%" height="15" fill="rgb(236,178,37)" fg:x="12755" fg:w="25"/><text x="6.3047%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (25 samples, 0.01%)</title><rect x="6.0547%" y="693" width="0.0119%" height="15" fill="rgb(241,158,50)" fg:x="12755" fg:w="25"/><text x="6.3047%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.02%)</title><rect x="6.0532%" y="949" width="0.0171%" height="15" fill="rgb(213,121,41)" fg:x="12752" fg:w="36"/><text x="6.3032%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (36 samples, 0.02%)</title><rect x="6.0532%" y="933" width="0.0171%" height="15" fill="rgb(240,92,3)" fg:x="12752" fg:w="36"/><text x="6.3032%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.02%)</title><rect x="6.0532%" y="917" width="0.0171%" height="15" fill="rgb(205,123,3)" fg:x="12752" fg:w="36"/><text x="6.3032%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (36 samples, 0.02%)</title><rect x="6.0532%" y="901" width="0.0171%" height="15" fill="rgb(205,97,47)" fg:x="12752" fg:w="36"/><text x="6.3032%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (36 samples, 0.02%)</title><rect x="6.0532%" y="885" width="0.0171%" height="15" fill="rgb(247,152,14)" fg:x="12752" fg:w="36"/><text x="6.3032%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.02%)</title><rect x="6.0532%" y="869" width="0.0171%" height="15" fill="rgb(248,195,53)" fg:x="12752" fg:w="36"/><text x="6.3032%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.02%)</title><rect x="6.0532%" y="853" width="0.0171%" height="15" fill="rgb(226,201,16)" fg:x="12752" fg:w="36"/><text x="6.3032%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.02%)</title><rect x="6.0532%" y="837" width="0.0171%" height="15" fill="rgb(205,98,0)" fg:x="12752" fg:w="36"/><text x="6.3032%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (202 samples, 0.10%)</title><rect x="5.9787%" y="1013" width="0.0959%" height="15" fill="rgb(214,191,48)" fg:x="12595" fg:w="202"/><text x="6.2287%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (202 samples, 0.10%)</title><rect x="5.9787%" y="997" width="0.0959%" height="15" fill="rgb(237,112,39)" fg:x="12595" fg:w="202"/><text x="6.2287%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (202 samples, 0.10%)</title><rect x="5.9787%" y="981" width="0.0959%" height="15" fill="rgb(247,203,27)" fg:x="12595" fg:w="202"/><text x="6.2287%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (202 samples, 0.10%)</title><rect x="5.9787%" y="965" width="0.0959%" height="15" fill="rgb(235,124,28)" fg:x="12595" fg:w="202"/><text x="6.2287%" y="975.50"></text></g><g><title>getifaddrs (52 samples, 0.02%)</title><rect x="6.0836%" y="885" width="0.0247%" height="15" fill="rgb(208,207,46)" fg:x="12816" fg:w="52"/><text x="6.3336%" y="895.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="6.0841%" y="869" width="0.0242%" height="15" fill="rgb(234,176,4)" fg:x="12817" fg:w="51"/><text x="6.3341%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (345 samples, 0.16%)</title><rect x="5.9507%" y="1045" width="0.1638%" height="15" fill="rgb(230,133,28)" fg:x="12536" fg:w="345"/><text x="6.2007%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (314 samples, 0.15%)</title><rect x="5.9654%" y="1029" width="0.1491%" height="15" fill="rgb(211,137,40)" fg:x="12567" fg:w="314"/><text x="6.2154%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (84 samples, 0.04%)</title><rect x="6.0746%" y="1013" width="0.0399%" height="15" fill="rgb(254,35,13)" fg:x="12797" fg:w="84"/><text x="6.3246%" y="1023.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (84 samples, 0.04%)</title><rect x="6.0746%" y="997" width="0.0399%" height="15" fill="rgb(225,49,51)" fg:x="12797" fg:w="84"/><text x="6.3246%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (84 samples, 0.04%)</title><rect x="6.0746%" y="981" width="0.0399%" height="15" fill="rgb(251,10,15)" fg:x="12797" fg:w="84"/><text x="6.3246%" y="991.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (84 samples, 0.04%)</title><rect x="6.0746%" y="965" width="0.0399%" height="15" fill="rgb(228,207,15)" fg:x="12797" fg:w="84"/><text x="6.3246%" y="975.50"></text></g><g><title>zenoh_util::net::get_local_addresses (74 samples, 0.04%)</title><rect x="6.0793%" y="949" width="0.0351%" height="15" fill="rgb(241,99,19)" fg:x="12807" fg:w="74"/><text x="6.3293%" y="959.50"></text></g><g><title>pnet_datalink::interfaces (71 samples, 0.03%)</title><rect x="6.0808%" y="933" width="0.0337%" height="15" fill="rgb(207,104,49)" fg:x="12810" fg:w="71"/><text x="6.3308%" y="943.50"></text></g><g><title>pnet_datalink::backend::interfaces (71 samples, 0.03%)</title><rect x="6.0808%" y="917" width="0.0337%" height="15" fill="rgb(234,99,18)" fg:x="12810" fg:w="71"/><text x="6.3308%" y="927.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (71 samples, 0.03%)</title><rect x="6.0808%" y="901" width="0.0337%" height="15" fill="rgb(213,191,49)" fg:x="12810" fg:w="71"/><text x="6.3308%" y="911.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::fmt::Display&gt;::fmt (25 samples, 0.01%)</title><rect x="6.1330%" y="837" width="0.0119%" height="15" fill="rgb(210,226,19)" fg:x="12920" fg:w="25"/><text x="6.3830%" y="847.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (28 samples, 0.01%)</title><rect x="6.1330%" y="853" width="0.0133%" height="15" fill="rgb(229,97,18)" fg:x="12920" fg:w="28"/><text x="6.3830%" y="863.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (57 samples, 0.03%)</title><rect x="6.1330%" y="885" width="0.0271%" height="15" fill="rgb(211,167,15)" fg:x="12920" fg:w="57"/><text x="6.3830%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (57 samples, 0.03%)</title><rect x="6.1330%" y="869" width="0.0271%" height="15" fill="rgb(210,169,34)" fg:x="12920" fg:w="57"/><text x="6.3830%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (52 samples, 0.02%)</title><rect x="6.1624%" y="885" width="0.0247%" height="15" fill="rgb(241,121,31)" fg:x="12982" fg:w="52"/><text x="6.4124%" y="895.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (48 samples, 0.02%)</title><rect x="6.1643%" y="869" width="0.0228%" height="15" fill="rgb(232,40,11)" fg:x="12986" fg:w="48"/><text x="6.4143%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (38 samples, 0.02%)</title><rect x="6.1691%" y="853" width="0.0180%" height="15" fill="rgb(205,86,26)" fg:x="12996" fg:w="38"/><text x="6.4191%" y="863.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (501 samples, 0.24%)</title><rect x="5.9507%" y="1061" width="0.2378%" height="15" fill="rgb(231,126,28)" fg:x="12536" fg:w="501"/><text x="6.2007%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (156 samples, 0.07%)</title><rect x="6.1145%" y="1045" width="0.0741%" height="15" fill="rgb(219,221,18)" fg:x="12881" fg:w="156"/><text x="6.3645%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (156 samples, 0.07%)</title><rect x="6.1145%" y="1029" width="0.0741%" height="15" fill="rgb(211,40,0)" fg:x="12881" fg:w="156"/><text x="6.3645%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (156 samples, 0.07%)</title><rect x="6.1145%" y="1013" width="0.0741%" height="15" fill="rgb(239,85,43)" fg:x="12881" fg:w="156"/><text x="6.3645%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (156 samples, 0.07%)</title><rect x="6.1145%" y="997" width="0.0741%" height="15" fill="rgb(231,55,21)" fg:x="12881" fg:w="156"/><text x="6.3645%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (156 samples, 0.07%)</title><rect x="6.1145%" y="981" width="0.0741%" height="15" fill="rgb(225,184,43)" fg:x="12881" fg:w="156"/><text x="6.3645%" y="991.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (154 samples, 0.07%)</title><rect x="6.1154%" y="965" width="0.0731%" height="15" fill="rgb(251,158,41)" fg:x="12883" fg:w="154"/><text x="6.3654%" y="975.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (122 samples, 0.06%)</title><rect x="6.1306%" y="949" width="0.0579%" height="15" fill="rgb(234,159,37)" fg:x="12915" fg:w="122"/><text x="6.3806%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (120 samples, 0.06%)</title><rect x="6.1316%" y="933" width="0.0570%" height="15" fill="rgb(216,204,22)" fg:x="12917" fg:w="120"/><text x="6.3816%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (120 samples, 0.06%)</title><rect x="6.1316%" y="917" width="0.0570%" height="15" fill="rgb(214,17,3)" fg:x="12917" fg:w="120"/><text x="6.3816%" y="927.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (118 samples, 0.06%)</title><rect x="6.1325%" y="901" width="0.0560%" height="15" fill="rgb(212,111,17)" fg:x="12919" fg:w="118"/><text x="6.3825%" y="911.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (22 samples, 0.01%)</title><rect x="6.2094%" y="949" width="0.0104%" height="15" fill="rgb(221,157,24)" fg:x="13081" fg:w="22"/><text x="6.4594%" y="959.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (22 samples, 0.01%)</title><rect x="6.2094%" y="933" width="0.0104%" height="15" fill="rgb(252,16,13)" fg:x="13081" fg:w="22"/><text x="6.4594%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (25 samples, 0.01%)</title><rect x="6.2317%" y="869" width="0.0119%" height="15" fill="rgb(221,62,2)" fg:x="13128" fg:w="25"/><text x="6.4817%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (26 samples, 0.01%)</title><rect x="6.2317%" y="885" width="0.0123%" height="15" fill="rgb(247,87,22)" fg:x="13128" fg:w="26"/><text x="6.4817%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (59 samples, 0.03%)</title><rect x="6.2279%" y="933" width="0.0280%" height="15" fill="rgb(215,73,9)" fg:x="13120" fg:w="59"/><text x="6.4779%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (58 samples, 0.03%)</title><rect x="6.2284%" y="917" width="0.0275%" height="15" fill="rgb(207,175,33)" fg:x="13121" fg:w="58"/><text x="6.4784%" y="927.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (56 samples, 0.03%)</title><rect x="6.2294%" y="901" width="0.0266%" height="15" fill="rgb(243,129,54)" fg:x="13123" fg:w="56"/><text x="6.4794%" y="911.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (73 samples, 0.03%)</title><rect x="6.2232%" y="949" width="0.0347%" height="15" fill="rgb(227,119,45)" fg:x="13110" fg:w="73"/><text x="6.4732%" y="959.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (651 samples, 0.31%)</title><rect x="5.9507%" y="1109" width="0.3090%" height="15" fill="rgb(205,109,36)" fg:x="12536" fg:w="651"/><text x="6.2007%" y="1119.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (651 samples, 0.31%)</title><rect x="5.9507%" y="1093" width="0.3090%" height="15" fill="rgb(205,6,39)" fg:x="12536" fg:w="651"/><text x="6.2007%" y="1103.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (651 samples, 0.31%)</title><rect x="5.9507%" y="1077" width="0.3090%" height="15" fill="rgb(221,32,16)" fg:x="12536" fg:w="651"/><text x="6.2007%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (150 samples, 0.07%)</title><rect x="6.1885%" y="1061" width="0.0712%" height="15" fill="rgb(228,144,50)" fg:x="13037" fg:w="150"/><text x="6.4385%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (137 samples, 0.07%)</title><rect x="6.1947%" y="1045" width="0.0650%" height="15" fill="rgb(229,201,53)" fg:x="13050" fg:w="137"/><text x="6.4447%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (137 samples, 0.07%)</title><rect x="6.1947%" y="1029" width="0.0650%" height="15" fill="rgb(249,153,27)" fg:x="13050" fg:w="137"/><text x="6.4447%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (137 samples, 0.07%)</title><rect x="6.1947%" y="1013" width="0.0650%" height="15" fill="rgb(227,106,25)" fg:x="13050" fg:w="137"/><text x="6.4447%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (137 samples, 0.07%)</title><rect x="6.1947%" y="997" width="0.0650%" height="15" fill="rgb(230,65,29)" fg:x="13050" fg:w="137"/><text x="6.4447%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (137 samples, 0.07%)</title><rect x="6.1947%" y="981" width="0.0650%" height="15" fill="rgb(221,57,46)" fg:x="13050" fg:w="137"/><text x="6.4447%" y="991.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (137 samples, 0.07%)</title><rect x="6.1947%" y="965" width="0.0650%" height="15" fill="rgb(229,161,17)" fg:x="13050" fg:w="137"/><text x="6.4447%" y="975.50"></text></g><g><title>async_task::runnable::spawn_unchecked (23 samples, 0.01%)</title><rect x="6.2754%" y="1045" width="0.0109%" height="15" fill="rgb(222,213,11)" fg:x="13220" fg:w="23"/><text x="6.5254%" y="1055.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (733 samples, 0.35%)</title><rect x="5.9426%" y="1221" width="0.3479%" height="15" fill="rgb(235,35,13)" fg:x="12519" fg:w="733"/><text x="6.1926%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (733 samples, 0.35%)</title><rect x="5.9426%" y="1205" width="0.3479%" height="15" fill="rgb(233,158,34)" fg:x="12519" fg:w="733"/><text x="6.1926%" y="1215.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (733 samples, 0.35%)</title><rect x="5.9426%" y="1189" width="0.3479%" height="15" fill="rgb(215,151,48)" fg:x="12519" fg:w="733"/><text x="6.1926%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (733 samples, 0.35%)</title><rect x="5.9426%" y="1173" width="0.3479%" height="15" fill="rgb(229,84,14)" fg:x="12519" fg:w="733"/><text x="6.1926%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (733 samples, 0.35%)</title><rect x="5.9426%" y="1157" width="0.3479%" height="15" fill="rgb(229,68,14)" fg:x="12519" fg:w="733"/><text x="6.1926%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (733 samples, 0.35%)</title><rect x="5.9426%" y="1141" width="0.3479%" height="15" fill="rgb(243,106,26)" fg:x="12519" fg:w="733"/><text x="6.1926%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (716 samples, 0.34%)</title><rect x="5.9507%" y="1125" width="0.3399%" height="15" fill="rgb(206,45,38)" fg:x="12536" fg:w="716"/><text x="6.2007%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (59 samples, 0.03%)</title><rect x="6.2626%" y="1109" width="0.0280%" height="15" fill="rgb(226,6,15)" fg:x="13193" fg:w="59"/><text x="6.5126%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (59 samples, 0.03%)</title><rect x="6.2626%" y="1093" width="0.0280%" height="15" fill="rgb(232,22,54)" fg:x="13193" fg:w="59"/><text x="6.5126%" y="1103.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::spawn (59 samples, 0.03%)</title><rect x="6.2626%" y="1077" width="0.0280%" height="15" fill="rgb(229,222,32)" fg:x="13193" fg:w="59"/><text x="6.5126%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn (59 samples, 0.03%)</title><rect x="6.2626%" y="1061" width="0.0280%" height="15" fill="rgb(228,62,29)" fg:x="13193" fg:w="59"/><text x="6.5126%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.01%)</title><rect x="6.2968%" y="725" width="0.0109%" height="15" fill="rgb(251,103,34)" fg:x="13265" fg:w="23"/><text x="6.5468%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (148 samples, 0.07%)</title><rect x="6.3077%" y="725" width="0.0703%" height="15" fill="rgb(233,12,30)" fg:x="13288" fg:w="148"/><text x="6.5577%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (126 samples, 0.06%)</title><rect x="6.3181%" y="709" width="0.0598%" height="15" fill="rgb(238,52,0)" fg:x="13310" fg:w="126"/><text x="6.5681%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (126 samples, 0.06%)</title><rect x="6.3181%" y="693" width="0.0598%" height="15" fill="rgb(223,98,5)" fg:x="13310" fg:w="126"/><text x="6.5681%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (126 samples, 0.06%)</title><rect x="6.3181%" y="677" width="0.0598%" height="15" fill="rgb(228,75,37)" fg:x="13310" fg:w="126"/><text x="6.5681%" y="687.50"></text></g><g><title>alloc::alloc::alloc (125 samples, 0.06%)</title><rect x="6.3186%" y="661" width="0.0593%" height="15" fill="rgb(205,115,49)" fg:x="13311" fg:w="125"/><text x="6.5686%" y="671.50"></text></g><g><title>malloc (112 samples, 0.05%)</title><rect x="6.3248%" y="645" width="0.0532%" height="15" fill="rgb(250,154,43)" fg:x="13324" fg:w="112"/><text x="6.5748%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.01%)</title><rect x="6.3779%" y="725" width="0.0114%" height="15" fill="rgb(226,43,29)" fg:x="13436" fg:w="24"/><text x="6.6279%" y="735.50"></text></g><g><title>[libc.so.6] (132 samples, 0.06%)</title><rect x="6.3941%" y="693" width="0.0627%" height="15" fill="rgb(249,228,39)" fg:x="13470" fg:w="132"/><text x="6.6441%" y="703.50"></text></g><g><title>[libc.so.6] (105 samples, 0.05%)</title><rect x="6.7909%" y="517" width="0.0498%" height="15" fill="rgb(216,79,43)" fg:x="14306" fg:w="105"/><text x="7.0409%" y="527.50"></text></g><g><title>[libc.so.6] (505 samples, 0.24%)</title><rect x="6.6063%" y="533" width="0.2397%" height="15" fill="rgb(228,95,12)" fg:x="13917" fg:w="505"/><text x="6.8563%" y="543.50"></text></g><g><title>[libc.so.6] (562 samples, 0.27%)</title><rect x="6.5797%" y="549" width="0.2668%" height="15" fill="rgb(249,221,15)" fg:x="13861" fg:w="562"/><text x="6.8297%" y="559.50"></text></g><g><title>__rdl_alloc (827 samples, 0.39%)</title><rect x="6.4686%" y="629" width="0.3926%" height="15" fill="rgb(233,34,13)" fg:x="13627" fg:w="827"/><text x="6.7186%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (809 samples, 0.38%)</title><rect x="6.4771%" y="613" width="0.3840%" height="15" fill="rgb(214,103,39)" fg:x="13645" fg:w="809"/><text x="6.7271%" y="623.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (809 samples, 0.38%)</title><rect x="6.4771%" y="597" width="0.3840%" height="15" fill="rgb(251,126,39)" fg:x="13645" fg:w="809"/><text x="6.7271%" y="607.50"></text></g><g><title>posix_memalign (802 samples, 0.38%)</title><rect x="6.4805%" y="581" width="0.3807%" height="15" fill="rgb(214,216,36)" fg:x="13652" fg:w="802"/><text x="6.7305%" y="591.50"></text></g><g><title>[libc.so.6] (732 samples, 0.35%)</title><rect x="6.5137%" y="565" width="0.3475%" height="15" fill="rgb(220,221,8)" fg:x="13722" fg:w="732"/><text x="6.7637%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (997 samples, 0.47%)</title><rect x="6.3936%" y="709" width="0.4733%" height="15" fill="rgb(240,216,3)" fg:x="13469" fg:w="997"/><text x="6.6436%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (864 samples, 0.41%)</title><rect x="6.4567%" y="693" width="0.4101%" height="15" fill="rgb(232,218,17)" fg:x="13602" fg:w="864"/><text x="6.7067%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (864 samples, 0.41%)</title><rect x="6.4567%" y="677" width="0.4101%" height="15" fill="rgb(229,163,45)" fg:x="13602" fg:w="864"/><text x="6.7067%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (864 samples, 0.41%)</title><rect x="6.4567%" y="661" width="0.4101%" height="15" fill="rgb(231,110,42)" fg:x="13602" fg:w="864"/><text x="6.7067%" y="671.50"></text></g><g><title>alloc::alloc::alloc (864 samples, 0.41%)</title><rect x="6.4567%" y="645" width="0.4101%" height="15" fill="rgb(208,170,48)" fg:x="13602" fg:w="864"/><text x="6.7067%" y="655.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="7.7061%" y="677" width="0.0109%" height="15" fill="rgb(239,116,25)" fg:x="16234" fg:w="23"/><text x="7.9561%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (127 samples, 0.06%)</title><rect x="7.7170%" y="677" width="0.0603%" height="15" fill="rgb(219,200,50)" fg:x="16257" fg:w="127"/><text x="7.9670%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,220 samples, 1.05%)</title><rect x="6.9167%" y="693" width="1.0538%" height="15" fill="rgb(245,200,0)" fg:x="14571" fg:w="2220"/><text x="7.1667%" y="703.50"></text></g><g><title>core::ptr::write (407 samples, 0.19%)</title><rect x="7.7773%" y="677" width="0.1932%" height="15" fill="rgb(245,119,33)" fg:x="16384" fg:w="407"/><text x="8.0273%" y="687.50"></text></g><g><title>[unknown] (177 samples, 0.08%)</title><rect x="7.8865%" y="661" width="0.0840%" height="15" fill="rgb(231,125,12)" fg:x="16614" fg:w="177"/><text x="8.1365%" y="671.50"></text></g><g><title>[unknown] (177 samples, 0.08%)</title><rect x="7.8865%" y="645" width="0.0840%" height="15" fill="rgb(216,96,41)" fg:x="16614" fg:w="177"/><text x="8.1365%" y="655.50"></text></g><g><title>[unknown] (172 samples, 0.08%)</title><rect x="7.8889%" y="629" width="0.0816%" height="15" fill="rgb(248,43,45)" fg:x="16619" fg:w="172"/><text x="8.1389%" y="639.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="7.8908%" y="613" width="0.0797%" height="15" fill="rgb(217,222,7)" fg:x="16623" fg:w="168"/><text x="8.1408%" y="623.50"></text></g><g><title>[unknown] (123 samples, 0.06%)</title><rect x="7.9121%" y="597" width="0.0584%" height="15" fill="rgb(233,28,6)" fg:x="16668" fg:w="123"/><text x="8.1621%" y="607.50"></text></g><g><title>[unknown] (85 samples, 0.04%)</title><rect x="7.9302%" y="581" width="0.0403%" height="15" fill="rgb(231,218,15)" fg:x="16706" fg:w="85"/><text x="8.1802%" y="591.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="7.9368%" y="565" width="0.0337%" height="15" fill="rgb(226,171,48)" fg:x="16720" fg:w="71"/><text x="8.1868%" y="575.50"></text></g><g><title>[unknown] (66 samples, 0.03%)</title><rect x="7.9392%" y="549" width="0.0313%" height="15" fill="rgb(235,201,9)" fg:x="16725" fg:w="66"/><text x="8.1892%" y="559.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="7.9487%" y="533" width="0.0218%" height="15" fill="rgb(217,80,15)" fg:x="16745" fg:w="46"/><text x="8.1987%" y="543.50"></text></g><g><title>__rdl_alloc (55 samples, 0.03%)</title><rect x="7.9715%" y="581" width="0.0261%" height="15" fill="rgb(219,152,8)" fg:x="16793" fg:w="55"/><text x="8.2215%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (52 samples, 0.02%)</title><rect x="7.9729%" y="565" width="0.0247%" height="15" fill="rgb(243,107,38)" fg:x="16796" fg:w="52"/><text x="8.2229%" y="575.50"></text></g><g><title>[libc.so.6] (27 samples, 0.01%)</title><rect x="8.2700%" y="533" width="0.0128%" height="15" fill="rgb(231,17,5)" fg:x="17422" fg:w="27"/><text x="8.5200%" y="543.50"></text></g><g><title>[unknown] (336 samples, 0.16%)</title><rect x="8.2829%" y="533" width="0.1595%" height="15" fill="rgb(209,25,54)" fg:x="17449" fg:w="336"/><text x="8.5329%" y="543.50"></text></g><g><title>[unknown] (324 samples, 0.15%)</title><rect x="8.2886%" y="517" width="0.1538%" height="15" fill="rgb(219,0,2)" fg:x="17461" fg:w="324"/><text x="8.5386%" y="527.50"></text></g><g><title>[unknown] (312 samples, 0.15%)</title><rect x="8.2943%" y="501" width="0.1481%" height="15" fill="rgb(246,9,5)" fg:x="17473" fg:w="312"/><text x="8.5443%" y="511.50"></text></g><g><title>[unknown] (306 samples, 0.15%)</title><rect x="8.2971%" y="485" width="0.1453%" height="15" fill="rgb(226,159,4)" fg:x="17479" fg:w="306"/><text x="8.5471%" y="495.50"></text></g><g><title>[unknown] (253 samples, 0.12%)</title><rect x="8.3223%" y="469" width="0.1201%" height="15" fill="rgb(219,175,34)" fg:x="17532" fg:w="253"/><text x="8.5723%" y="479.50"></text></g><g><title>[unknown] (171 samples, 0.08%)</title><rect x="8.3612%" y="453" width="0.0812%" height="15" fill="rgb(236,10,46)" fg:x="17614" fg:w="171"/><text x="8.6112%" y="463.50"></text></g><g><title>[unknown] (125 samples, 0.06%)</title><rect x="8.3830%" y="437" width="0.0593%" height="15" fill="rgb(240,211,16)" fg:x="17660" fg:w="125"/><text x="8.6330%" y="447.50"></text></g><g><title>[unknown] (104 samples, 0.05%)</title><rect x="8.3930%" y="421" width="0.0494%" height="15" fill="rgb(205,3,43)" fg:x="17681" fg:w="104"/><text x="8.6430%" y="431.50"></text></g><g><title>[unknown] (66 samples, 0.03%)</title><rect x="8.4110%" y="405" width="0.0313%" height="15" fill="rgb(245,7,22)" fg:x="17719" fg:w="66"/><text x="8.6610%" y="415.50"></text></g><g><title>[libc.so.6] (791 samples, 0.38%)</title><rect x="8.1348%" y="549" width="0.3755%" height="15" fill="rgb(239,132,32)" fg:x="17137" fg:w="791"/><text x="8.3848%" y="559.50"></text></g><g><title>__mprotect (143 samples, 0.07%)</title><rect x="8.4424%" y="533" width="0.0679%" height="15" fill="rgb(228,202,34)" fg:x="17785" fg:w="143"/><text x="8.6924%" y="543.50"></text></g><g><title>[unknown] (143 samples, 0.07%)</title><rect x="8.4424%" y="517" width="0.0679%" height="15" fill="rgb(254,200,22)" fg:x="17785" fg:w="143"/><text x="8.6924%" y="527.50"></text></g><g><title>[unknown] (129 samples, 0.06%)</title><rect x="8.4490%" y="501" width="0.0612%" height="15" fill="rgb(219,10,39)" fg:x="17799" fg:w="129"/><text x="8.6990%" y="511.50"></text></g><g><title>[unknown] (128 samples, 0.06%)</title><rect x="8.4495%" y="485" width="0.0608%" height="15" fill="rgb(226,210,39)" fg:x="17800" fg:w="128"/><text x="8.6995%" y="495.50"></text></g><g><title>[unknown] (126 samples, 0.06%)</title><rect x="8.4504%" y="469" width="0.0598%" height="15" fill="rgb(208,219,16)" fg:x="17802" fg:w="126"/><text x="8.7004%" y="479.50"></text></g><g><title>[unknown] (118 samples, 0.06%)</title><rect x="8.4542%" y="453" width="0.0560%" height="15" fill="rgb(216,158,51)" fg:x="17810" fg:w="118"/><text x="8.7042%" y="463.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="8.4732%" y="437" width="0.0370%" height="15" fill="rgb(233,14,44)" fg:x="17850" fg:w="78"/><text x="8.7232%" y="447.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="8.4884%" y="421" width="0.0218%" height="15" fill="rgb(237,97,39)" fg:x="17882" fg:w="46"/><text x="8.7384%" y="431.50"></text></g><g><title>[libc.so.6] (1,036 samples, 0.49%)</title><rect x="8.0227%" y="565" width="0.4918%" height="15" fill="rgb(218,198,43)" fg:x="16901" fg:w="1036"/><text x="8.2727%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,233 samples, 0.59%)</title><rect x="7.9705%" y="693" width="0.5853%" height="15" fill="rgb(231,104,20)" fg:x="16791" fg:w="1233"/><text x="8.2205%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,233 samples, 0.59%)</title><rect x="7.9705%" y="677" width="0.5853%" height="15" fill="rgb(254,36,13)" fg:x="16791" fg:w="1233"/><text x="8.2205%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,233 samples, 0.59%)</title><rect x="7.9705%" y="661" width="0.5853%" height="15" fill="rgb(248,14,50)" fg:x="16791" fg:w="1233"/><text x="8.2205%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,233 samples, 0.59%)</title><rect x="7.9705%" y="645" width="0.5853%" height="15" fill="rgb(217,107,29)" fg:x="16791" fg:w="1233"/><text x="8.2205%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,233 samples, 0.59%)</title><rect x="7.9705%" y="629" width="0.5853%" height="15" fill="rgb(251,169,33)" fg:x="16791" fg:w="1233"/><text x="8.2205%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,233 samples, 0.59%)</title><rect x="7.9705%" y="613" width="0.5853%" height="15" fill="rgb(217,108,32)" fg:x="16791" fg:w="1233"/><text x="8.2205%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1,231 samples, 0.58%)</title><rect x="7.9715%" y="597" width="0.5843%" height="15" fill="rgb(219,66,42)" fg:x="16793" fg:w="1231"/><text x="8.2215%" y="607.50"></text></g><g><title>malloc (1,173 samples, 0.56%)</title><rect x="7.9990%" y="581" width="0.5568%" height="15" fill="rgb(206,180,7)" fg:x="16851" fg:w="1173"/><text x="8.2490%" y="591.50"></text></g><g><title>__lll_lock_wake_private (83 samples, 0.04%)</title><rect x="8.5164%" y="565" width="0.0394%" height="15" fill="rgb(208,226,31)" fg:x="17941" fg:w="83"/><text x="8.7664%" y="575.50"></text></g><g><title>[unknown] (83 samples, 0.04%)</title><rect x="8.5164%" y="549" width="0.0394%" height="15" fill="rgb(218,26,49)" fg:x="17941" fg:w="83"/><text x="8.7664%" y="559.50"></text></g><g><title>[unknown] (80 samples, 0.04%)</title><rect x="8.5178%" y="533" width="0.0380%" height="15" fill="rgb(233,197,48)" fg:x="17944" fg:w="80"/><text x="8.7678%" y="543.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="8.5188%" y="517" width="0.0370%" height="15" fill="rgb(252,181,51)" fg:x="17946" fg:w="78"/><text x="8.7688%" y="527.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="8.5193%" y="501" width="0.0366%" height="15" fill="rgb(253,90,19)" fg:x="17947" fg:w="77"/><text x="8.7693%" y="511.50"></text></g><g><title>[unknown] (76 samples, 0.04%)</title><rect x="8.5197%" y="485" width="0.0361%" height="15" fill="rgb(215,171,30)" fg:x="17948" fg:w="76"/><text x="8.7697%" y="495.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="8.5249%" y="469" width="0.0309%" height="15" fill="rgb(214,222,9)" fg:x="17959" fg:w="65"/><text x="8.7749%" y="479.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="8.5292%" y="453" width="0.0266%" height="15" fill="rgb(223,3,22)" fg:x="17968" fg:w="56"/><text x="8.7792%" y="463.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="8.5325%" y="437" width="0.0233%" height="15" fill="rgb(225,196,46)" fg:x="17975" fg:w="49"/><text x="8.7825%" y="447.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="8.5411%" y="421" width="0.0147%" height="15" fill="rgb(209,110,37)" fg:x="17993" fg:w="31"/><text x="8.7911%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (100 samples, 0.05%)</title><rect x="8.5587%" y="661" width="0.0475%" height="15" fill="rgb(249,89,12)" fg:x="18030" fg:w="100"/><text x="8.8087%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (100 samples, 0.05%)</title><rect x="8.5587%" y="645" width="0.0475%" height="15" fill="rgb(226,27,33)" fg:x="18030" fg:w="100"/><text x="8.8087%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (232 samples, 0.11%)</title><rect x="8.5558%" y="693" width="0.1101%" height="15" fill="rgb(213,82,22)" fg:x="18024" fg:w="232"/><text x="8.8058%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (232 samples, 0.11%)</title><rect x="8.5558%" y="677" width="0.1101%" height="15" fill="rgb(248,140,0)" fg:x="18024" fg:w="232"/><text x="8.8058%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (126 samples, 0.06%)</title><rect x="8.6061%" y="661" width="0.0598%" height="15" fill="rgb(228,106,3)" fg:x="18130" fg:w="126"/><text x="8.8561%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (4,796 samples, 2.28%)</title><rect x="6.3931%" y="725" width="2.2766%" height="15" fill="rgb(209,23,37)" fg:x="13468" fg:w="4796"/><text x="6.6431%" y="735.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (3,798 samples, 1.80%)</title><rect x="6.8669%" y="709" width="1.8029%" height="15" fill="rgb(241,93,50)" fg:x="14466" fg:w="3798"/><text x="7.1169%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (49 samples, 0.02%)</title><rect x="8.6697%" y="725" width="0.0233%" height="15" fill="rgb(253,46,43)" fg:x="18264" fg:w="49"/><text x="8.9197%" y="735.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.02%)</title><rect x="8.6697%" y="709" width="0.0233%" height="15" fill="rgb(226,206,43)" fg:x="18264" fg:w="49"/><text x="8.9197%" y="719.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (49 samples, 0.02%)</title><rect x="8.6697%" y="693" width="0.0233%" height="15" fill="rgb(217,54,7)" fg:x="18264" fg:w="49"/><text x="8.9197%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (49 samples, 0.02%)</title><rect x="8.6697%" y="677" width="0.0233%" height="15" fill="rgb(223,5,52)" fg:x="18264" fg:w="49"/><text x="8.9197%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,098 samples, 2.42%)</title><rect x="6.2906%" y="805" width="2.4200%" height="15" fill="rgb(206,52,46)" fg:x="13252" fg:w="5098"/><text x="6.5406%" y="815.50">&lt;c..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (5,098 samples, 2.42%)</title><rect x="6.2906%" y="789" width="2.4200%" height="15" fill="rgb(253,136,11)" fg:x="13252" fg:w="5098"/><text x="6.5406%" y="799.50">as..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,098 samples, 2.42%)</title><rect x="6.2906%" y="773" width="2.4200%" height="15" fill="rgb(208,106,33)" fg:x="13252" fg:w="5098"/><text x="6.5406%" y="783.50">&lt;c..</text></g><g><title>async_executor::Executor::run::{{closure}} (5,098 samples, 2.42%)</title><rect x="6.2906%" y="757" width="2.4200%" height="15" fill="rgb(206,54,4)" fg:x="13252" fg:w="5098"/><text x="6.5406%" y="767.50">as..</text></g><g><title>async_executor::Runner::new (5,098 samples, 2.42%)</title><rect x="6.2906%" y="741" width="2.4200%" height="15" fill="rgb(213,3,15)" fg:x="13252" fg:w="5098"/><text x="6.5406%" y="751.50">as..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (37 samples, 0.02%)</title><rect x="8.6930%" y="725" width="0.0176%" height="15" fill="rgb(252,211,39)" fg:x="18313" fg:w="37"/><text x="8.9430%" y="735.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (29 samples, 0.01%)</title><rect x="8.6968%" y="709" width="0.0138%" height="15" fill="rgb(223,6,36)" fg:x="18321" fg:w="29"/><text x="8.9468%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (29 samples, 0.01%)</title><rect x="8.6968%" y="693" width="0.0138%" height="15" fill="rgb(252,169,45)" fg:x="18321" fg:w="29"/><text x="8.9468%" y="703.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1141" width="2.4204%" height="15" fill="rgb(212,48,26)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1151.50">ze..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1125" width="2.4204%" height="15" fill="rgb(251,102,48)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1135.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1109" width="2.4204%" height="15" fill="rgb(243,208,16)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1119.50">co..</text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1093" width="2.4204%" height="15" fill="rgb(219,96,24)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1103.50">&lt;z..</text></g><g><title>async_std::task::block_on::block_on (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1077" width="2.4204%" height="15" fill="rgb(219,33,29)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1087.50">as..</text></g><g><title>async_std::task::builder::Builder::blocking (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1061" width="2.4204%" height="15" fill="rgb(223,176,5)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1071.50">as..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1045" width="2.4204%" height="15" fill="rgb(228,140,14)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1055.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1029" width="2.4204%" height="15" fill="rgb(217,179,31)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1039.50">st..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (5,099 samples, 2.42%)</title><rect x="6.2906%" y="1013" width="2.4204%" height="15" fill="rgb(230,9,30)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1023.50">as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5,099 samples, 2.42%)</title><rect x="6.2906%" y="997" width="2.4204%" height="15" fill="rgb(230,136,20)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="1007.50">as..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,099 samples, 2.42%)</title><rect x="6.2906%" y="981" width="2.4204%" height="15" fill="rgb(215,210,22)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="991.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,099 samples, 2.42%)</title><rect x="6.2906%" y="965" width="2.4204%" height="15" fill="rgb(218,43,5)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="975.50">st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5,099 samples, 2.42%)</title><rect x="6.2906%" y="949" width="2.4204%" height="15" fill="rgb(216,11,5)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="959.50">as..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (5,099 samples, 2.42%)</title><rect x="6.2906%" y="933" width="2.4204%" height="15" fill="rgb(209,82,29)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="943.50">as..</text></g><g><title>async_global_executor::executor::block_on (5,099 samples, 2.42%)</title><rect x="6.2906%" y="917" width="2.4204%" height="15" fill="rgb(244,115,12)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="927.50">as..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,099 samples, 2.42%)</title><rect x="6.2906%" y="901" width="2.4204%" height="15" fill="rgb(222,82,18)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="911.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,099 samples, 2.42%)</title><rect x="6.2906%" y="885" width="2.4204%" height="15" fill="rgb(249,227,8)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="895.50">st..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (5,099 samples, 2.42%)</title><rect x="6.2906%" y="869" width="2.4204%" height="15" fill="rgb(253,141,45)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="879.50">as..</text></g><g><title>async_global_executor::reactor::block_on (5,099 samples, 2.42%)</title><rect x="6.2906%" y="853" width="2.4204%" height="15" fill="rgb(234,184,4)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="863.50">as..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (5,099 samples, 2.42%)</title><rect x="6.2906%" y="837" width="2.4204%" height="15" fill="rgb(218,194,23)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="847.50">as..</text></g><g><title>async_io::driver::block_on (5,099 samples, 2.42%)</title><rect x="6.2906%" y="821" width="2.4204%" height="15" fill="rgb(235,66,41)" fg:x="13252" fg:w="5099"/><text x="6.5406%" y="831.50">as..</text></g><g><title>core::iter::traits::iterator::Iterator::find (41 samples, 0.02%)</title><rect x="8.7604%" y="933" width="0.0195%" height="15" fill="rgb(245,217,1)" fg:x="18455" fg:w="41"/><text x="9.0104%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (41 samples, 0.02%)</title><rect x="8.7604%" y="917" width="0.0195%" height="15" fill="rgb(229,91,1)" fg:x="18455" fg:w="41"/><text x="9.0104%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (33 samples, 0.02%)</title><rect x="8.7642%" y="901" width="0.0157%" height="15" fill="rgb(207,101,30)" fg:x="18463" fg:w="33"/><text x="9.0142%" y="911.50"></text></g><g><title>zenoh::net::routing::router::Tables::get_face::{{closure}} (33 samples, 0.02%)</title><rect x="8.7642%" y="885" width="0.0157%" height="15" fill="rgb(223,82,49)" fg:x="18463" fg:w="33"/><text x="9.0142%" y="895.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (33 samples, 0.02%)</title><rect x="8.7642%" y="869" width="0.0157%" height="15" fill="rgb(218,167,17)" fg:x="18463" fg:w="33"/><text x="9.0142%" y="879.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (90 samples, 0.04%)</title><rect x="8.7376%" y="965" width="0.0427%" height="15" fill="rgb(208,103,14)" fg:x="18407" fg:w="90"/><text x="8.9876%" y="975.50"></text></g><g><title>zenoh::net::routing::router::Tables::get_face (42 samples, 0.02%)</title><rect x="8.7604%" y="949" width="0.0199%" height="15" fill="rgb(238,20,8)" fg:x="18455" fg:w="42"/><text x="9.0104%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (44 samples, 0.02%)</title><rect x="8.7803%" y="965" width="0.0209%" height="15" fill="rgb(218,80,54)" fg:x="18497" fg:w="44"/><text x="9.0303%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (23 samples, 0.01%)</title><rect x="8.7903%" y="949" width="0.0109%" height="15" fill="rgb(240,144,17)" fg:x="18518" fg:w="23"/><text x="9.0403%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (28 samples, 0.01%)</title><rect x="8.8140%" y="933" width="0.0133%" height="15" fill="rgb(245,27,50)" fg:x="18568" fg:w="28"/><text x="9.0640%" y="943.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (244 samples, 0.12%)</title><rect x="8.7139%" y="1013" width="0.1158%" height="15" fill="rgb(251,51,7)" fg:x="18357" fg:w="244"/><text x="8.9639%" y="1023.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (244 samples, 0.12%)</title><rect x="8.7139%" y="997" width="0.1158%" height="15" fill="rgb(245,217,29)" fg:x="18357" fg:w="244"/><text x="8.9639%" y="1007.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (226 samples, 0.11%)</title><rect x="8.7224%" y="981" width="0.1073%" height="15" fill="rgb(221,176,29)" fg:x="18375" fg:w="226"/><text x="8.9724%" y="991.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (44 samples, 0.02%)</title><rect x="8.8088%" y="965" width="0.0209%" height="15" fill="rgb(212,180,24)" fg:x="18557" fg:w="44"/><text x="9.0588%" y="975.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (44 samples, 0.02%)</title><rect x="8.8088%" y="949" width="0.0209%" height="15" fill="rgb(254,24,2)" fg:x="18557" fg:w="44"/><text x="9.0588%" y="959.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (265 samples, 0.13%)</title><rect x="8.7115%" y="1045" width="0.1258%" height="15" fill="rgb(230,100,2)" fg:x="18352" fg:w="265"/><text x="8.9615%" y="1055.50"></text></g><g><title>zenoh::net::routing::queries::declare_peer_queryable (261 samples, 0.12%)</title><rect x="8.7134%" y="1029" width="0.1239%" height="15" fill="rgb(219,142,25)" fg:x="18356" fg:w="261"/><text x="8.9634%" y="1039.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches (45 samples, 0.02%)</title><rect x="8.8468%" y="997" width="0.0214%" height="15" fill="rgb(240,73,43)" fg:x="18637" fg:w="45"/><text x="9.0968%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (45 samples, 0.02%)</title><rect x="8.8468%" y="981" width="0.0214%" height="15" fill="rgb(214,114,15)" fg:x="18637" fg:w="45"/><text x="9.0968%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (45 samples, 0.02%)</title><rect x="8.8468%" y="965" width="0.0214%" height="15" fill="rgb(207,130,4)" fg:x="18637" fg:w="45"/><text x="9.0968%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (38 samples, 0.02%)</title><rect x="8.8501%" y="949" width="0.0180%" height="15" fill="rgb(221,25,40)" fg:x="18644" fg:w="38"/><text x="9.1001%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (48 samples, 0.02%)</title><rect x="8.8463%" y="1013" width="0.0228%" height="15" fill="rgb(241,184,7)" fg:x="18636" fg:w="48"/><text x="9.0963%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (23 samples, 0.01%)</title><rect x="8.8786%" y="901" width="0.0109%" height="15" fill="rgb(235,159,4)" fg:x="18704" fg:w="23"/><text x="9.1286%" y="911.50"></text></g><g><title>&lt;alloc::vec::ExtendFunc&lt;F&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (24 samples, 0.01%)</title><rect x="8.8786%" y="933" width="0.0114%" height="15" fill="rgb(214,87,48)" fg:x="18704" fg:w="24"/><text x="9.1286%" y="943.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes::{{closure}} (24 samples, 0.01%)</title><rect x="8.8786%" y="917" width="0.0114%" height="15" fill="rgb(246,198,24)" fg:x="18704" fg:w="24"/><text x="9.1286%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (25 samples, 0.01%)</title><rect x="8.8786%" y="965" width="0.0119%" height="15" fill="rgb(209,66,40)" fg:x="18704" fg:w="25"/><text x="9.1286%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (25 samples, 0.01%)</title><rect x="8.8786%" y="949" width="0.0119%" height="15" fill="rgb(233,147,39)" fg:x="18704" fg:w="25"/><text x="9.1286%" y="959.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (47 samples, 0.02%)</title><rect x="8.9004%" y="965" width="0.0223%" height="15" fill="rgb(231,145,52)" fg:x="18750" fg:w="47"/><text x="9.1504%" y="975.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (111 samples, 0.05%)</title><rect x="8.8705%" y="981" width="0.0527%" height="15" fill="rgb(206,20,26)" fg:x="18687" fg:w="111"/><text x="9.1205%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.02%)</title><rect x="8.9275%" y="869" width="0.0152%" height="15" fill="rgb(238,220,4)" fg:x="18807" fg:w="32"/><text x="9.1775%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh::net::routing::resource::TargetQabl]&gt; (31 samples, 0.01%)</title><rect x="8.9280%" y="853" width="0.0147%" height="15" fill="rgb(252,195,42)" fg:x="18808" fg:w="31"/><text x="9.1780%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh::net::routing::resource::TargetQabl&gt; (30 samples, 0.01%)</title><rect x="8.9284%" y="837" width="0.0142%" height="15" fill="rgb(209,10,6)" fg:x="18809" fg:w="30"/><text x="9.1784%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::sync::Arc&lt;zenoh::net::routing::face::FaceState&gt;,zenoh_protocol_core::key_expr::KeyExpr,core::option::Option&lt;zenoh_protocol::proto::msg::RoutingContext&gt;)&gt; (30 samples, 0.01%)</title><rect x="8.9284%" y="821" width="0.0142%" height="15" fill="rgb(229,3,52)" fg:x="18809" fg:w="30"/><text x="9.1784%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (47 samples, 0.02%)</title><rect x="8.9270%" y="901" width="0.0223%" height="15" fill="rgb(253,49,37)" fg:x="18806" fg:w="47"/><text x="9.1770%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt; (46 samples, 0.02%)</title><rect x="8.9275%" y="885" width="0.0218%" height="15" fill="rgb(240,103,49)" fg:x="18807" fg:w="46"/><text x="9.1775%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (58 samples, 0.03%)</title><rect x="8.9242%" y="965" width="0.0275%" height="15" fill="rgb(250,182,30)" fg:x="18800" fg:w="58"/><text x="9.1742%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;]&gt; (58 samples, 0.03%)</title><rect x="8.9242%" y="949" width="0.0275%" height="15" fill="rgb(248,8,30)" fg:x="18800" fg:w="58"/><text x="9.1742%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt; (58 samples, 0.03%)</title><rect x="8.9242%" y="933" width="0.0275%" height="15" fill="rgb(237,120,30)" fg:x="18800" fg:w="58"/><text x="9.1742%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.03%)</title><rect x="8.9242%" y="917" width="0.0275%" height="15" fill="rgb(221,146,34)" fg:x="18800" fg:w="58"/><text x="9.1742%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (22 samples, 0.01%)</title><rect x="8.9517%" y="965" width="0.0104%" height="15" fill="rgb(242,55,13)" fg:x="18858" fg:w="22"/><text x="9.2017%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (22 samples, 0.01%)</title><rect x="8.9517%" y="949" width="0.0104%" height="15" fill="rgb(242,112,31)" fg:x="18858" fg:w="22"/><text x="9.2017%" y="959.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (387 samples, 0.18%)</title><rect x="8.8373%" y="1045" width="0.1837%" height="15" fill="rgb(249,192,27)" fg:x="18617" fg:w="387"/><text x="9.0873%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (381 samples, 0.18%)</title><rect x="8.8401%" y="1029" width="0.1809%" height="15" fill="rgb(208,204,44)" fg:x="18623" fg:w="381"/><text x="9.0901%" y="1039.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_matches_routes (320 samples, 0.15%)</title><rect x="8.8691%" y="1013" width="0.1519%" height="15" fill="rgb(208,93,54)" fg:x="18684" fg:w="320"/><text x="9.1191%" y="1023.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_routes (317 samples, 0.15%)</title><rect x="8.8705%" y="997" width="0.1505%" height="15" fill="rgb(242,1,31)" fg:x="18687" fg:w="317"/><text x="9.1205%" y="1007.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (206 samples, 0.10%)</title><rect x="8.9232%" y="981" width="0.0978%" height="15" fill="rgb(241,83,25)" fg:x="18798" fg:w="206"/><text x="9.1732%" y="991.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (112 samples, 0.05%)</title><rect x="8.9678%" y="965" width="0.0532%" height="15" fill="rgb(205,169,50)" fg:x="18892" fg:w="112"/><text x="9.2178%" y="975.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (39 samples, 0.02%)</title><rect x="9.0025%" y="949" width="0.0185%" height="15" fill="rgb(239,186,37)" fg:x="18965" fg:w="39"/><text x="9.2525%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (39 samples, 0.02%)</title><rect x="9.0025%" y="933" width="0.0185%" height="15" fill="rgb(205,221,10)" fg:x="18965" fg:w="39"/><text x="9.2525%" y="943.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_subscriber (23 samples, 0.01%)</title><rect x="9.0210%" y="1045" width="0.0109%" height="15" fill="rgb(218,196,15)" fg:x="19004" fg:w="23"/><text x="9.2710%" y="1055.50"></text></g><g><title>zenoh::net::routing::pubsub::declare_peer_subscription (22 samples, 0.01%)</title><rect x="9.0215%" y="1029" width="0.0104%" height="15" fill="rgb(218,196,35)" fg:x="19005" fg:w="22"/><text x="9.2715%" y="1039.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (677 samples, 0.32%)</title><rect x="8.7110%" y="1061" width="0.3214%" height="15" fill="rgb(233,63,24)" fg:x="18351" fg:w="677"/><text x="8.9610%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,791 samples, 2.75%)</title><rect x="6.2906%" y="1205" width="2.7489%" height="15" fill="rgb(225,8,4)" fg:x="13252" fg:w="5791"/><text x="6.5406%" y="1215.50">&lt;c..</text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (5,791 samples, 2.75%)</title><rect x="6.2906%" y="1189" width="2.7489%" height="15" fill="rgb(234,105,35)" fg:x="13252" fg:w="5791"/><text x="6.5406%" y="1199.50">ze..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,791 samples, 2.75%)</title><rect x="6.2906%" y="1173" width="2.7489%" height="15" fill="rgb(236,21,32)" fg:x="13252" fg:w="5791"/><text x="6.5406%" y="1183.50">&lt;c..</text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (5,791 samples, 2.75%)</title><rect x="6.2906%" y="1157" width="2.7489%" height="15" fill="rgb(228,109,6)" fg:x="13252" fg:w="5791"/><text x="6.5406%" y="1167.50">ze..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (692 samples, 0.33%)</title><rect x="8.7110%" y="1141" width="0.3285%" height="15" fill="rgb(229,215,31)" fg:x="18351" fg:w="692"/><text x="8.9610%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (692 samples, 0.33%)</title><rect x="8.7110%" y="1125" width="0.3285%" height="15" fill="rgb(221,52,54)" fg:x="18351" fg:w="692"/><text x="8.9610%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (692 samples, 0.33%)</title><rect x="8.7110%" y="1109" width="0.3285%" height="15" fill="rgb(252,129,43)" fg:x="18351" fg:w="692"/><text x="8.9610%" y="1119.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (692 samples, 0.33%)</title><rect x="8.7110%" y="1093" width="0.3285%" height="15" fill="rgb(248,183,27)" fg:x="18351" fg:w="692"/><text x="8.9610%" y="1103.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (692 samples, 0.33%)</title><rect x="8.7110%" y="1077" width="0.3285%" height="15" fill="rgb(250,0,22)" fg:x="18351" fg:w="692"/><text x="8.9610%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (5,792 samples, 2.75%)</title><rect x="6.2906%" y="1221" width="2.7494%" height="15" fill="rgb(213,166,10)" fg:x="13252" fg:w="5792"/><text x="6.5406%" y="1231.50">ze..</text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (23 samples, 0.01%)</title><rect x="9.0462%" y="949" width="0.0109%" height="15" fill="rgb(207,163,36)" fg:x="19057" fg:w="23"/><text x="9.2962%" y="959.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (23 samples, 0.01%)</title><rect x="9.0462%" y="933" width="0.0109%" height="15" fill="rgb(208,122,22)" fg:x="19057" fg:w="23"/><text x="9.2962%" y="943.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (23 samples, 0.01%)</title><rect x="9.0462%" y="917" width="0.0109%" height="15" fill="rgb(207,104,49)" fg:x="19057" fg:w="23"/><text x="9.2962%" y="927.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (23 samples, 0.01%)</title><rect x="9.0462%" y="901" width="0.0109%" height="15" fill="rgb(248,211,50)" fg:x="19057" fg:w="23"/><text x="9.2962%" y="911.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::RemAssign&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem_assign (38 samples, 0.02%)</title><rect x="9.0571%" y="949" width="0.0180%" height="15" fill="rgb(217,13,45)" fg:x="19080" fg:w="38"/><text x="9.3071%" y="959.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (38 samples, 0.02%)</title><rect x="9.0571%" y="933" width="0.0180%" height="15" fill="rgb(211,216,49)" fg:x="19080" fg:w="38"/><text x="9.3071%" y="943.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (38 samples, 0.02%)</title><rect x="9.0571%" y="917" width="0.0180%" height="15" fill="rgb(221,58,53)" fg:x="19080" fg:w="38"/><text x="9.3071%" y="927.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (38 samples, 0.02%)</title><rect x="9.0571%" y="901" width="0.0180%" height="15" fill="rgb(220,112,41)" fg:x="19080" fg:w="38"/><text x="9.3071%" y="911.50"></text></g><g><title>rsa::internals::decrypt (76 samples, 0.04%)</title><rect x="9.0462%" y="997" width="0.0361%" height="15" fill="rgb(236,38,28)" fg:x="19057" fg:w="76"/><text x="9.2962%" y="1007.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (76 samples, 0.04%)</title><rect x="9.0462%" y="981" width="0.0361%" height="15" fill="rgb(227,195,22)" fg:x="19057" fg:w="76"/><text x="9.2962%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (76 samples, 0.04%)</title><rect x="9.0462%" y="965" width="0.0361%" height="15" fill="rgb(214,55,33)" fg:x="19057" fg:w="76"/><text x="9.2962%" y="975.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (23 samples, 0.01%)</title><rect x="9.0822%" y="949" width="0.0109%" height="15" fill="rgb(248,80,13)" fg:x="19133" fg:w="23"/><text x="9.3322%" y="959.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (23 samples, 0.01%)</title><rect x="9.0822%" y="933" width="0.0109%" height="15" fill="rgb(238,52,6)" fg:x="19133" fg:w="23"/><text x="9.3322%" y="943.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (23 samples, 0.01%)</title><rect x="9.0822%" y="917" width="0.0109%" height="15" fill="rgb(224,198,47)" fg:x="19133" fg:w="23"/><text x="9.3322%" y="927.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (23 samples, 0.01%)</title><rect x="9.0822%" y="901" width="0.0109%" height="15" fill="rgb(233,171,20)" fg:x="19133" fg:w="23"/><text x="9.3322%" y="911.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (110 samples, 0.05%)</title><rect x="9.0462%" y="1141" width="0.0522%" height="15" fill="rgb(241,30,25)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (110 samples, 0.05%)</title><rect x="9.0462%" y="1125" width="0.0522%" height="15" fill="rgb(207,171,38)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (110 samples, 0.05%)</title><rect x="9.0462%" y="1109" width="0.0522%" height="15" fill="rgb(234,70,1)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1119.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (110 samples, 0.05%)</title><rect x="9.0462%" y="1093" width="0.0522%" height="15" fill="rgb(232,178,18)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1103.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (110 samples, 0.05%)</title><rect x="9.0462%" y="1077" width="0.0522%" height="15" fill="rgb(241,78,40)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1087.50"></text></g><g><title>rsa::pkcs1v15::decrypt (110 samples, 0.05%)</title><rect x="9.0462%" y="1061" width="0.0522%" height="15" fill="rgb(222,35,25)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1071.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (110 samples, 0.05%)</title><rect x="9.0462%" y="1045" width="0.0522%" height="15" fill="rgb(207,92,16)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1055.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (110 samples, 0.05%)</title><rect x="9.0462%" y="1029" width="0.0522%" height="15" fill="rgb(216,59,51)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1039.50"></text></g><g><title>rsa::internals::decrypt_and_check (110 samples, 0.05%)</title><rect x="9.0462%" y="1013" width="0.0522%" height="15" fill="rgb(213,80,28)" fg:x="19057" fg:w="110"/><text x="9.2962%" y="1023.50"></text></g><g><title>rsa::internals::encrypt (34 samples, 0.02%)</title><rect x="9.0822%" y="997" width="0.0161%" height="15" fill="rgb(220,93,7)" fg:x="19133" fg:w="34"/><text x="9.3322%" y="1007.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (34 samples, 0.02%)</title><rect x="9.0822%" y="981" width="0.0161%" height="15" fill="rgb(225,24,44)" fg:x="19133" fg:w="34"/><text x="9.3322%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (34 samples, 0.02%)</title><rect x="9.0822%" y="965" width="0.0161%" height="15" fill="rgb(243,74,40)" fg:x="19133" fg:w="34"/><text x="9.3322%" y="975.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="9.1022%" y="917" width="0.0119%" height="15" fill="rgb(228,39,7)" fg:x="19175" fg:w="25"/><text x="9.3522%" y="927.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="9.1026%" y="901" width="0.0114%" height="15" fill="rgb(227,79,8)" fg:x="19176" fg:w="24"/><text x="9.3526%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.01%)</title><rect x="9.1017%" y="981" width="0.0133%" height="15" fill="rgb(236,58,11)" fg:x="19174" fg:w="28"/><text x="9.3517%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.01%)</title><rect x="9.1017%" y="965" width="0.0133%" height="15" fill="rgb(249,63,35)" fg:x="19174" fg:w="28"/><text x="9.3517%" y="975.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.01%)</title><rect x="9.1017%" y="949" width="0.0133%" height="15" fill="rgb(252,114,16)" fg:x="19174" fg:w="28"/><text x="9.3517%" y="959.50"></text></g><g><title>realloc (28 samples, 0.01%)</title><rect x="9.1017%" y="933" width="0.0133%" height="15" fill="rgb(254,151,24)" fg:x="19174" fg:w="28"/><text x="9.3517%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (34 samples, 0.02%)</title><rect x="9.0993%" y="1029" width="0.0161%" height="15" fill="rgb(253,54,39)" fg:x="19169" fg:w="34"/><text x="9.3493%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.02%)</title><rect x="9.0993%" y="1013" width="0.0161%" height="15" fill="rgb(243,25,45)" fg:x="19169" fg:w="34"/><text x="9.3493%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.02%)</title><rect x="9.0993%" y="997" width="0.0161%" height="15" fill="rgb(234,134,9)" fg:x="19169" fg:w="34"/><text x="9.3493%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 0.02%)</title><rect x="9.0988%" y="1045" width="0.0185%" height="15" fill="rgb(227,166,31)" fg:x="19168" fg:w="39"/><text x="9.3488%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.02%)</title><rect x="9.1525%" y="853" width="0.0228%" height="15" fill="rgb(245,143,41)" fg:x="19281" fg:w="48"/><text x="9.4025%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.02%)</title><rect x="9.1525%" y="837" width="0.0228%" height="15" fill="rgb(238,181,32)" fg:x="19281" fg:w="48"/><text x="9.4025%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.02%)</title><rect x="9.1525%" y="821" width="0.0228%" height="15" fill="rgb(224,113,18)" fg:x="19281" fg:w="48"/><text x="9.4025%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.02%)</title><rect x="9.1544%" y="805" width="0.0209%" height="15" fill="rgb(240,229,28)" fg:x="19285" fg:w="44"/><text x="9.4044%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.02%)</title><rect x="9.1544%" y="789" width="0.0209%" height="15" fill="rgb(250,185,3)" fg:x="19285" fg:w="44"/><text x="9.4044%" y="799.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.02%)</title><rect x="9.1544%" y="773" width="0.0209%" height="15" fill="rgb(212,59,25)" fg:x="19285" fg:w="44"/><text x="9.4044%" y="783.50"></text></g><g><title>malloc (43 samples, 0.02%)</title><rect x="9.1549%" y="757" width="0.0204%" height="15" fill="rgb(221,87,20)" fg:x="19286" fg:w="43"/><text x="9.4049%" y="767.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="9.1587%" y="741" width="0.0166%" height="15" fill="rgb(213,74,28)" fg:x="19294" fg:w="35"/><text x="9.4087%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (201 samples, 0.10%)</title><rect x="9.1254%" y="933" width="0.0954%" height="15" fill="rgb(224,132,34)" fg:x="19224" fg:w="201"/><text x="9.3754%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (144 samples, 0.07%)</title><rect x="9.1525%" y="917" width="0.0684%" height="15" fill="rgb(222,101,24)" fg:x="19281" fg:w="144"/><text x="9.4025%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (144 samples, 0.07%)</title><rect x="9.1525%" y="901" width="0.0684%" height="15" fill="rgb(254,142,4)" fg:x="19281" fg:w="144"/><text x="9.4025%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (144 samples, 0.07%)</title><rect x="9.1525%" y="885" width="0.0684%" height="15" fill="rgb(230,229,49)" fg:x="19281" fg:w="144"/><text x="9.4025%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (144 samples, 0.07%)</title><rect x="9.1525%" y="869" width="0.0684%" height="15" fill="rgb(238,70,47)" fg:x="19281" fg:w="144"/><text x="9.4025%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (96 samples, 0.05%)</title><rect x="9.1753%" y="853" width="0.0456%" height="15" fill="rgb(231,160,17)" fg:x="19329" fg:w="96"/><text x="9.4253%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (96 samples, 0.05%)</title><rect x="9.1753%" y="837" width="0.0456%" height="15" fill="rgb(218,68,53)" fg:x="19329" fg:w="96"/><text x="9.4253%" y="847.50"></text></g><g><title>[libc.so.6] (96 samples, 0.05%)</title><rect x="9.1753%" y="821" width="0.0456%" height="15" fill="rgb(236,111,10)" fg:x="19329" fg:w="96"/><text x="9.4253%" y="831.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (207 samples, 0.10%)</title><rect x="9.1231%" y="949" width="0.0983%" height="15" fill="rgb(224,34,41)" fg:x="19219" fg:w="207"/><text x="9.3731%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (230 samples, 0.11%)</title><rect x="9.1221%" y="1029" width="0.1092%" height="15" fill="rgb(241,118,19)" fg:x="19217" fg:w="230"/><text x="9.3721%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (228 samples, 0.11%)</title><rect x="9.1231%" y="1013" width="0.1082%" height="15" fill="rgb(238,129,25)" fg:x="19219" fg:w="228"/><text x="9.3731%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (228 samples, 0.11%)</title><rect x="9.1231%" y="997" width="0.1082%" height="15" fill="rgb(238,22,31)" fg:x="19219" fg:w="228"/><text x="9.3731%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (228 samples, 0.11%)</title><rect x="9.1231%" y="981" width="0.1082%" height="15" fill="rgb(222,174,48)" fg:x="19219" fg:w="228"/><text x="9.3731%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (228 samples, 0.11%)</title><rect x="9.1231%" y="965" width="0.1082%" height="15" fill="rgb(206,152,40)" fg:x="19219" fg:w="228"/><text x="9.3731%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (33 samples, 0.02%)</title><rect x="9.2389%" y="773" width="0.0157%" height="15" fill="rgb(218,99,54)" fg:x="19463" fg:w="33"/><text x="9.4889%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (33 samples, 0.02%)</title><rect x="9.2389%" y="757" width="0.0157%" height="15" fill="rgb(220,174,26)" fg:x="19463" fg:w="33"/><text x="9.4889%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (33 samples, 0.02%)</title><rect x="9.2389%" y="741" width="0.0157%" height="15" fill="rgb(245,116,9)" fg:x="19463" fg:w="33"/><text x="9.4889%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.01%)</title><rect x="9.2579%" y="661" width="0.0123%" height="15" fill="rgb(209,72,35)" fg:x="19503" fg:w="26"/><text x="9.5079%" y="671.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (27 samples, 0.01%)</title><rect x="9.2579%" y="725" width="0.0128%" height="15" fill="rgb(226,126,21)" fg:x="19503" fg:w="27"/><text x="9.5079%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (27 samples, 0.01%)</title><rect x="9.2579%" y="709" width="0.0128%" height="15" fill="rgb(227,192,1)" fg:x="19503" fg:w="27"/><text x="9.5079%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="9.2579%" y="693" width="0.0128%" height="15" fill="rgb(237,180,29)" fg:x="19503" fg:w="27"/><text x="9.5079%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="9.2579%" y="677" width="0.0128%" height="15" fill="rgb(230,197,35)" fg:x="19503" fg:w="27"/><text x="9.5079%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.01%)</title><rect x="9.2726%" y="677" width="0.0142%" height="15" fill="rgb(246,193,31)" fg:x="19534" fg:w="30"/><text x="9.5226%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (66 samples, 0.03%)</title><rect x="9.2579%" y="741" width="0.0313%" height="15" fill="rgb(241,36,4)" fg:x="19503" fg:w="66"/><text x="9.5079%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (39 samples, 0.02%)</title><rect x="9.2707%" y="725" width="0.0185%" height="15" fill="rgb(241,130,17)" fg:x="19530" fg:w="39"/><text x="9.5207%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (37 samples, 0.02%)</title><rect x="9.2716%" y="709" width="0.0176%" height="15" fill="rgb(206,137,32)" fg:x="19532" fg:w="37"/><text x="9.5216%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (35 samples, 0.02%)</title><rect x="9.2726%" y="693" width="0.0166%" height="15" fill="rgb(237,228,51)" fg:x="19534" fg:w="35"/><text x="9.5226%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (110 samples, 0.05%)</title><rect x="9.2375%" y="805" width="0.0522%" height="15" fill="rgb(243,6,42)" fg:x="19460" fg:w="110"/><text x="9.4875%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (110 samples, 0.05%)</title><rect x="9.2375%" y="789" width="0.0522%" height="15" fill="rgb(251,74,28)" fg:x="19460" fg:w="110"/><text x="9.4875%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (67 samples, 0.03%)</title><rect x="9.2579%" y="773" width="0.0318%" height="15" fill="rgb(218,20,49)" fg:x="19503" fg:w="67"/><text x="9.5079%" y="783.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (67 samples, 0.03%)</title><rect x="9.2579%" y="757" width="0.0318%" height="15" fill="rgb(238,28,14)" fg:x="19503" fg:w="67"/><text x="9.5079%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (58 samples, 0.03%)</title><rect x="9.2920%" y="741" width="0.0275%" height="15" fill="rgb(229,40,46)" fg:x="19575" fg:w="58"/><text x="9.5420%" y="751.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (58 samples, 0.03%)</title><rect x="9.2920%" y="725" width="0.0275%" height="15" fill="rgb(244,195,20)" fg:x="19575" fg:w="58"/><text x="9.5420%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (38 samples, 0.02%)</title><rect x="9.3015%" y="709" width="0.0180%" height="15" fill="rgb(253,56,35)" fg:x="19595" fg:w="38"/><text x="9.5515%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (38 samples, 0.02%)</title><rect x="9.3015%" y="693" width="0.0180%" height="15" fill="rgb(210,149,44)" fg:x="19595" fg:w="38"/><text x="9.5515%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (38 samples, 0.02%)</title><rect x="9.3015%" y="677" width="0.0180%" height="15" fill="rgb(240,135,12)" fg:x="19595" fg:w="38"/><text x="9.5515%" y="687.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="9.3015%" y="661" width="0.0180%" height="15" fill="rgb(251,24,50)" fg:x="19595" fg:w="38"/><text x="9.5515%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (59 samples, 0.03%)</title><rect x="9.2920%" y="757" width="0.0280%" height="15" fill="rgb(243,200,47)" fg:x="19575" fg:w="59"/><text x="9.5420%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (80 samples, 0.04%)</title><rect x="9.2897%" y="805" width="0.0380%" height="15" fill="rgb(224,166,26)" fg:x="19570" fg:w="80"/><text x="9.5397%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (80 samples, 0.04%)</title><rect x="9.2897%" y="789" width="0.0380%" height="15" fill="rgb(233,0,47)" fg:x="19570" fg:w="80"/><text x="9.5397%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (80 samples, 0.04%)</title><rect x="9.2897%" y="773" width="0.0380%" height="15" fill="rgb(253,80,5)" fg:x="19570" fg:w="80"/><text x="9.5397%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (192 samples, 0.09%)</title><rect x="9.2370%" y="821" width="0.0911%" height="15" fill="rgb(214,133,25)" fg:x="19459" fg:w="192"/><text x="9.4870%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (199 samples, 0.09%)</title><rect x="9.2341%" y="933" width="0.0945%" height="15" fill="rgb(209,27,14)" fg:x="19453" fg:w="199"/><text x="9.4841%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (198 samples, 0.09%)</title><rect x="9.2346%" y="917" width="0.0940%" height="15" fill="rgb(219,102,51)" fg:x="19454" fg:w="198"/><text x="9.4846%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (195 samples, 0.09%)</title><rect x="9.2360%" y="901" width="0.0926%" height="15" fill="rgb(237,18,16)" fg:x="19457" fg:w="195"/><text x="9.4860%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (195 samples, 0.09%)</title><rect x="9.2360%" y="885" width="0.0926%" height="15" fill="rgb(241,85,17)" fg:x="19457" fg:w="195"/><text x="9.4860%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (195 samples, 0.09%)</title><rect x="9.2360%" y="869" width="0.0926%" height="15" fill="rgb(236,90,42)" fg:x="19457" fg:w="195"/><text x="9.4860%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (194 samples, 0.09%)</title><rect x="9.2365%" y="853" width="0.0921%" height="15" fill="rgb(249,57,21)" fg:x="19458" fg:w="194"/><text x="9.4865%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (194 samples, 0.09%)</title><rect x="9.2365%" y="837" width="0.0921%" height="15" fill="rgb(243,12,36)" fg:x="19458" fg:w="194"/><text x="9.4865%" y="847.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="9.3352%" y="789" width="0.0166%" height="15" fill="rgb(253,128,47)" fg:x="19666" fg:w="35"/><text x="9.5852%" y="799.50"></text></g><g><title>[libc.so.6] (32 samples, 0.02%)</title><rect x="9.3367%" y="773" width="0.0152%" height="15" fill="rgb(207,33,20)" fg:x="19669" fg:w="32"/><text x="9.5867%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (50 samples, 0.02%)</title><rect x="9.3295%" y="869" width="0.0237%" height="15" fill="rgb(233,215,35)" fg:x="19654" fg:w="50"/><text x="9.5795%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (47 samples, 0.02%)</title><rect x="9.3310%" y="853" width="0.0223%" height="15" fill="rgb(249,188,52)" fg:x="19657" fg:w="47"/><text x="9.5810%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (47 samples, 0.02%)</title><rect x="9.3310%" y="837" width="0.0223%" height="15" fill="rgb(225,12,32)" fg:x="19657" fg:w="47"/><text x="9.5810%" y="847.50"></text></g><g><title>alloc::alloc::realloc (47 samples, 0.02%)</title><rect x="9.3310%" y="821" width="0.0223%" height="15" fill="rgb(247,98,14)" fg:x="19657" fg:w="47"/><text x="9.5810%" y="831.50"></text></g><g><title>realloc (45 samples, 0.02%)</title><rect x="9.3319%" y="805" width="0.0214%" height="15" fill="rgb(247,219,48)" fg:x="19659" fg:w="45"/><text x="9.5819%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (253 samples, 0.12%)</title><rect x="9.2337%" y="965" width="0.1201%" height="15" fill="rgb(253,60,48)" fg:x="19452" fg:w="253"/><text x="9.4837%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (252 samples, 0.12%)</title><rect x="9.2341%" y="949" width="0.1196%" height="15" fill="rgb(245,15,52)" fg:x="19453" fg:w="252"/><text x="9.4841%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (53 samples, 0.03%)</title><rect x="9.3286%" y="933" width="0.0252%" height="15" fill="rgb(220,133,28)" fg:x="19652" fg:w="53"/><text x="9.5786%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (53 samples, 0.03%)</title><rect x="9.3286%" y="917" width="0.0252%" height="15" fill="rgb(217,180,4)" fg:x="19652" fg:w="53"/><text x="9.5786%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.03%)</title><rect x="9.3286%" y="901" width="0.0252%" height="15" fill="rgb(251,24,1)" fg:x="19652" fg:w="53"/><text x="9.5786%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52 samples, 0.02%)</title><rect x="9.3291%" y="885" width="0.0247%" height="15" fill="rgb(212,185,49)" fg:x="19653" fg:w="52"/><text x="9.5791%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (65 samples, 0.03%)</title><rect x="9.3552%" y="837" width="0.0309%" height="15" fill="rgb(215,175,22)" fg:x="19708" fg:w="65"/><text x="9.6052%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (65 samples, 0.03%)</title><rect x="9.3552%" y="821" width="0.0309%" height="15" fill="rgb(250,205,14)" fg:x="19708" fg:w="65"/><text x="9.6052%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (59 samples, 0.03%)</title><rect x="9.3580%" y="805" width="0.0280%" height="15" fill="rgb(225,211,22)" fg:x="19714" fg:w="59"/><text x="9.6080%" y="815.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (59 samples, 0.03%)</title><rect x="9.3580%" y="789" width="0.0280%" height="15" fill="rgb(251,179,42)" fg:x="19714" fg:w="59"/><text x="9.6080%" y="799.50"></text></g><g><title>zenoh_protocol_core::PeerId::as_slice (50 samples, 0.02%)</title><rect x="9.3623%" y="773" width="0.0237%" height="15" fill="rgb(208,216,51)" fg:x="19723" fg:w="50"/><text x="9.6123%" y="783.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (50 samples, 0.02%)</title><rect x="9.3623%" y="757" width="0.0237%" height="15" fill="rgb(235,36,11)" fg:x="19723" fg:w="50"/><text x="9.6123%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (50 samples, 0.02%)</title><rect x="9.3623%" y="741" width="0.0237%" height="15" fill="rgb(213,189,28)" fg:x="19723" fg:w="50"/><text x="9.6123%" y="751.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (50 samples, 0.02%)</title><rect x="9.3623%" y="725" width="0.0237%" height="15" fill="rgb(227,203,42)" fg:x="19723" fg:w="50"/><text x="9.6123%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (50 samples, 0.02%)</title><rect x="9.3623%" y="709" width="0.0237%" height="15" fill="rgb(244,72,36)" fg:x="19723" fg:w="50"/><text x="9.6123%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.04%)</title><rect x="9.3538%" y="965" width="0.0384%" height="15" fill="rgb(213,53,17)" fg:x="19705" fg:w="81"/><text x="9.6038%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (81 samples, 0.04%)</title><rect x="9.3538%" y="949" width="0.0384%" height="15" fill="rgb(207,167,3)" fg:x="19705" fg:w="81"/><text x="9.6038%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (80 samples, 0.04%)</title><rect x="9.3542%" y="933" width="0.0380%" height="15" fill="rgb(216,98,30)" fg:x="19706" fg:w="80"/><text x="9.6042%" y="943.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (80 samples, 0.04%)</title><rect x="9.3542%" y="917" width="0.0380%" height="15" fill="rgb(236,123,15)" fg:x="19706" fg:w="80"/><text x="9.6042%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (79 samples, 0.04%)</title><rect x="9.3547%" y="901" width="0.0375%" height="15" fill="rgb(248,81,50)" fg:x="19707" fg:w="79"/><text x="9.6047%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (79 samples, 0.04%)</title><rect x="9.3547%" y="885" width="0.0375%" height="15" fill="rgb(214,120,4)" fg:x="19707" fg:w="79"/><text x="9.6047%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (79 samples, 0.04%)</title><rect x="9.3547%" y="869" width="0.0375%" height="15" fill="rgb(208,179,34)" fg:x="19707" fg:w="79"/><text x="9.6047%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (79 samples, 0.04%)</title><rect x="9.3547%" y="853" width="0.0375%" height="15" fill="rgb(227,140,7)" fg:x="19707" fg:w="79"/><text x="9.6047%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (350 samples, 0.17%)</title><rect x="9.2318%" y="1029" width="0.1661%" height="15" fill="rgb(214,22,6)" fg:x="19448" fg:w="350"/><text x="9.4818%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (350 samples, 0.17%)</title><rect x="9.2318%" y="1013" width="0.1661%" height="15" fill="rgb(207,137,27)" fg:x="19448" fg:w="350"/><text x="9.4818%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (350 samples, 0.17%)</title><rect x="9.2318%" y="997" width="0.1661%" height="15" fill="rgb(210,8,46)" fg:x="19448" fg:w="350"/><text x="9.4818%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (350 samples, 0.17%)</title><rect x="9.2318%" y="981" width="0.1661%" height="15" fill="rgb(240,16,54)" fg:x="19448" fg:w="350"/><text x="9.4818%" y="991.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="9.4307%" y="869" width="0.0109%" height="15" fill="rgb(211,209,29)" fg:x="19867" fg:w="23"/><text x="9.6807%" y="879.50"></text></g><g><title>getifaddrs (77 samples, 0.04%)</title><rect x="9.4155%" y="901" width="0.0366%" height="15" fill="rgb(226,228,24)" fg:x="19835" fg:w="77"/><text x="9.6655%" y="911.50"></text></g><g><title>[libc.so.6] (76 samples, 0.04%)</title><rect x="9.4159%" y="885" width="0.0361%" height="15" fill="rgb(222,84,9)" fg:x="19836" fg:w="76"/><text x="9.6659%" y="895.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (132 samples, 0.06%)</title><rect x="9.3979%" y="981" width="0.0627%" height="15" fill="rgb(234,203,30)" fg:x="19798" fg:w="132"/><text x="9.6479%" y="991.50"></text></g><g><title>zenoh_util::net::get_local_addresses (120 samples, 0.06%)</title><rect x="9.4036%" y="965" width="0.0570%" height="15" fill="rgb(238,109,14)" fg:x="19810" fg:w="120"/><text x="9.6536%" y="975.50"></text></g><g><title>pnet_datalink::interfaces (120 samples, 0.06%)</title><rect x="9.4036%" y="949" width="0.0570%" height="15" fill="rgb(233,206,34)" fg:x="19810" fg:w="120"/><text x="9.6536%" y="959.50"></text></g><g><title>pnet_datalink::backend::interfaces (119 samples, 0.06%)</title><rect x="9.4041%" y="933" width="0.0565%" height="15" fill="rgb(220,167,47)" fg:x="19811" fg:w="119"/><text x="9.6541%" y="943.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (119 samples, 0.06%)</title><rect x="9.4041%" y="917" width="0.0565%" height="15" fill="rgb(238,105,10)" fg:x="19811" fg:w="119"/><text x="9.6541%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (766 samples, 0.36%)</title><rect x="9.0984%" y="1061" width="0.3636%" height="15" fill="rgb(213,227,17)" fg:x="19167" fg:w="766"/><text x="9.3484%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (724 samples, 0.34%)</title><rect x="9.1183%" y="1045" width="0.3437%" height="15" fill="rgb(217,132,38)" fg:x="19209" fg:w="724"/><text x="9.3683%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (135 samples, 0.06%)</title><rect x="9.3979%" y="1029" width="0.0641%" height="15" fill="rgb(242,146,4)" fg:x="19798" fg:w="135"/><text x="9.6479%" y="1039.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (135 samples, 0.06%)</title><rect x="9.3979%" y="1013" width="0.0641%" height="15" fill="rgb(212,61,9)" fg:x="19798" fg:w="135"/><text x="9.6479%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (135 samples, 0.06%)</title><rect x="9.3979%" y="997" width="0.0641%" height="15" fill="rgb(247,126,22)" fg:x="19798" fg:w="135"/><text x="9.6479%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27 samples, 0.01%)</title><rect x="9.4814%" y="837" width="0.0128%" height="15" fill="rgb(220,196,2)" fg:x="19974" fg:w="27"/><text x="9.7314%" y="847.50"></text></g><g><title>alloc::string::String::push_str (27 samples, 0.01%)</title><rect x="9.4814%" y="821" width="0.0128%" height="15" fill="rgb(208,46,4)" fg:x="19974" fg:w="27"/><text x="9.7314%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.01%)</title><rect x="9.4814%" y="805" width="0.0128%" height="15" fill="rgb(252,104,46)" fg:x="19974" fg:w="27"/><text x="9.7314%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.01%)</title><rect x="9.4814%" y="789" width="0.0128%" height="15" fill="rgb(237,152,48)" fg:x="19974" fg:w="27"/><text x="9.7314%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.01%)</title><rect x="9.4814%" y="773" width="0.0128%" height="15" fill="rgb(221,59,37)" fg:x="19974" fg:w="27"/><text x="9.7314%" y="783.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::fmt::Display&gt;::fmt (39 samples, 0.02%)</title><rect x="9.4810%" y="853" width="0.0185%" height="15" fill="rgb(209,202,51)" fg:x="19973" fg:w="39"/><text x="9.7310%" y="863.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (43 samples, 0.02%)</title><rect x="9.4810%" y="869" width="0.0204%" height="15" fill="rgb(228,81,30)" fg:x="19973" fg:w="43"/><text x="9.7310%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (73 samples, 0.03%)</title><rect x="9.4810%" y="885" width="0.0347%" height="15" fill="rgb(227,42,39)" fg:x="19973" fg:w="73"/><text x="9.7310%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (78 samples, 0.04%)</title><rect x="9.4810%" y="901" width="0.0370%" height="15" fill="rgb(221,26,2)" fg:x="19973" fg:w="78"/><text x="9.7310%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (69 samples, 0.03%)</title><rect x="9.5256%" y="901" width="0.0328%" height="15" fill="rgb(254,61,31)" fg:x="20067" fg:w="69"/><text x="9.7756%" y="911.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (64 samples, 0.03%)</title><rect x="9.5280%" y="885" width="0.0304%" height="15" fill="rgb(222,173,38)" fg:x="20072" fg:w="64"/><text x="9.7780%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (46 samples, 0.02%)</title><rect x="9.5365%" y="869" width="0.0218%" height="15" fill="rgb(218,50,12)" fg:x="20090" fg:w="46"/><text x="9.7865%" y="879.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (24 samples, 0.01%)</title><rect x="9.5470%" y="853" width="0.0114%" height="15" fill="rgb(223,88,40)" fg:x="20112" fg:w="24"/><text x="9.7970%" y="863.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (169 samples, 0.08%)</title><rect x="9.4791%" y="949" width="0.0802%" height="15" fill="rgb(237,54,19)" fg:x="19969" fg:w="169"/><text x="9.7291%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (168 samples, 0.08%)</title><rect x="9.4796%" y="933" width="0.0797%" height="15" fill="rgb(251,129,25)" fg:x="19970" fg:w="168"/><text x="9.7296%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (168 samples, 0.08%)</title><rect x="9.4796%" y="917" width="0.0797%" height="15" fill="rgb(238,97,19)" fg:x="19970" fg:w="168"/><text x="9.7296%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (972 samples, 0.46%)</title><rect x="9.0984%" y="1077" width="0.4614%" height="15" fill="rgb(240,169,18)" fg:x="19167" fg:w="972"/><text x="9.3484%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (206 samples, 0.10%)</title><rect x="9.4620%" y="1061" width="0.0978%" height="15" fill="rgb(230,187,49)" fg:x="19933" fg:w="206"/><text x="9.7120%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (206 samples, 0.10%)</title><rect x="9.4620%" y="1045" width="0.0978%" height="15" fill="rgb(209,44,26)" fg:x="19933" fg:w="206"/><text x="9.7120%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (205 samples, 0.10%)</title><rect x="9.4625%" y="1029" width="0.0973%" height="15" fill="rgb(244,0,6)" fg:x="19934" fg:w="205"/><text x="9.7125%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (204 samples, 0.10%)</title><rect x="9.4629%" y="1013" width="0.0968%" height="15" fill="rgb(248,18,21)" fg:x="19935" fg:w="204"/><text x="9.7129%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (203 samples, 0.10%)</title><rect x="9.4634%" y="997" width="0.0964%" height="15" fill="rgb(245,180,19)" fg:x="19936" fg:w="203"/><text x="9.7134%" y="1007.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (199 samples, 0.09%)</title><rect x="9.4653%" y="981" width="0.0945%" height="15" fill="rgb(252,118,36)" fg:x="19940" fg:w="199"/><text x="9.7153%" y="991.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (173 samples, 0.08%)</title><rect x="9.4777%" y="965" width="0.0821%" height="15" fill="rgb(210,224,19)" fg:x="19966" fg:w="173"/><text x="9.7277%" y="975.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="9.6125%" y="869" width="0.0114%" height="15" fill="rgb(218,30,24)" fg:x="20250" fg:w="24"/><text x="9.8625%" y="879.50"></text></g><g><title>__libc_calloc (22 samples, 0.01%)</title><rect x="9.6319%" y="869" width="0.0104%" height="15" fill="rgb(219,75,50)" fg:x="20291" fg:w="22"/><text x="9.8819%" y="879.50"></text></g><g><title>getifaddrs (120 samples, 0.06%)</title><rect x="9.5887%" y="901" width="0.0570%" height="15" fill="rgb(234,72,50)" fg:x="20200" fg:w="120"/><text x="9.8387%" y="911.50"></text></g><g><title>[libc.so.6] (120 samples, 0.06%)</title><rect x="9.5887%" y="885" width="0.0570%" height="15" fill="rgb(219,100,48)" fg:x="20200" fg:w="120"/><text x="9.8387%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (190 samples, 0.09%)</title><rect x="9.5655%" y="1061" width="0.0902%" height="15" fill="rgb(253,5,41)" fg:x="20151" fg:w="190"/><text x="9.8155%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (190 samples, 0.09%)</title><rect x="9.5655%" y="1045" width="0.0902%" height="15" fill="rgb(247,181,11)" fg:x="20151" fg:w="190"/><text x="9.8155%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (190 samples, 0.09%)</title><rect x="9.5655%" y="1029" width="0.0902%" height="15" fill="rgb(222,223,25)" fg:x="20151" fg:w="190"/><text x="9.8155%" y="1039.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (190 samples, 0.09%)</title><rect x="9.5655%" y="1013" width="0.0902%" height="15" fill="rgb(214,198,28)" fg:x="20151" fg:w="190"/><text x="9.8155%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (190 samples, 0.09%)</title><rect x="9.5655%" y="997" width="0.0902%" height="15" fill="rgb(230,46,43)" fg:x="20151" fg:w="190"/><text x="9.8155%" y="1007.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (190 samples, 0.09%)</title><rect x="9.5655%" y="981" width="0.0902%" height="15" fill="rgb(233,65,53)" fg:x="20151" fg:w="190"/><text x="9.8155%" y="991.50"></text></g><g><title>zenoh_util::net::get_local_addresses (176 samples, 0.08%)</title><rect x="9.5721%" y="965" width="0.0835%" height="15" fill="rgb(221,121,27)" fg:x="20165" fg:w="176"/><text x="9.8221%" y="975.50"></text></g><g><title>pnet_datalink::interfaces (173 samples, 0.08%)</title><rect x="9.5735%" y="949" width="0.0821%" height="15" fill="rgb(247,70,47)" fg:x="20168" fg:w="173"/><text x="9.8235%" y="959.50"></text></g><g><title>pnet_datalink::backend::interfaces (173 samples, 0.08%)</title><rect x="9.5735%" y="933" width="0.0821%" height="15" fill="rgb(228,85,35)" fg:x="20168" fg:w="173"/><text x="9.8235%" y="943.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (173 samples, 0.08%)</title><rect x="9.5735%" y="917" width="0.0821%" height="15" fill="rgb(209,50,18)" fg:x="20168" fg:w="173"/><text x="9.8235%" y="927.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (26 samples, 0.01%)</title><rect x="9.6822%" y="869" width="0.0123%" height="15" fill="rgb(250,19,35)" fg:x="20397" fg:w="26"/><text x="9.9322%" y="879.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (46 samples, 0.02%)</title><rect x="9.6770%" y="965" width="0.0218%" height="15" fill="rgb(253,107,29)" fg:x="20386" fg:w="46"/><text x="9.9270%" y="975.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (46 samples, 0.02%)</title><rect x="9.6770%" y="949" width="0.0218%" height="15" fill="rgb(252,179,29)" fg:x="20386" fg:w="46"/><text x="9.9270%" y="959.50"></text></g><g><title>event_listener::List::notify_additional (42 samples, 0.02%)</title><rect x="9.6789%" y="933" width="0.0199%" height="15" fill="rgb(238,194,6)" fg:x="20390" fg:w="42"/><text x="9.9289%" y="943.50"></text></g><g><title>core::task::wake::Waker::wake (36 samples, 0.02%)</title><rect x="9.6818%" y="917" width="0.0171%" height="15" fill="rgb(238,164,29)" fg:x="20396" fg:w="36"/><text x="9.9318%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (36 samples, 0.02%)</title><rect x="9.6818%" y="901" width="0.0171%" height="15" fill="rgb(224,25,9)" fg:x="20396" fg:w="36"/><text x="9.9318%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (35 samples, 0.02%)</title><rect x="9.6822%" y="885" width="0.0166%" height="15" fill="rgb(244,153,23)" fg:x="20397" fg:w="35"/><text x="9.9322%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_frame_header (22 samples, 0.01%)</title><rect x="9.7093%" y="949" width="0.0104%" height="15" fill="rgb(212,203,14)" fg:x="20454" fg:w="22"/><text x="9.9593%" y="959.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (23 samples, 0.01%)</title><rect x="9.7259%" y="869" width="0.0109%" height="15" fill="rgb(220,164,20)" fg:x="20489" fg:w="23"/><text x="9.9759%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (36 samples, 0.02%)</title><rect x="9.7259%" y="885" width="0.0171%" height="15" fill="rgb(222,203,48)" fg:x="20489" fg:w="36"/><text x="9.9759%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (37 samples, 0.02%)</title><rect x="9.7259%" y="901" width="0.0176%" height="15" fill="rgb(215,159,22)" fg:x="20489" fg:w="37"/><text x="9.9759%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (28 samples, 0.01%)</title><rect x="9.7511%" y="869" width="0.0133%" height="15" fill="rgb(216,183,47)" fg:x="20542" fg:w="28"/><text x="10.0011%" y="879.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (37 samples, 0.02%)</title><rect x="9.7473%" y="885" width="0.0176%" height="15" fill="rgb(229,195,25)" fg:x="20534" fg:w="37"/><text x="9.9973%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (39 samples, 0.02%)</title><rect x="9.7468%" y="901" width="0.0185%" height="15" fill="rgb(224,132,51)" fg:x="20533" fg:w="39"/><text x="9.9968%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (93 samples, 0.04%)</title><rect x="9.7216%" y="933" width="0.0441%" height="15" fill="rgb(240,63,7)" fg:x="20480" fg:w="93"/><text x="9.9716%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (86 samples, 0.04%)</title><rect x="9.7250%" y="917" width="0.0408%" height="15" fill="rgb(249,182,41)" fg:x="20487" fg:w="86"/><text x="9.9750%" y="927.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (98 samples, 0.05%)</title><rect x="9.7197%" y="949" width="0.0465%" height="15" fill="rgb(243,47,26)" fg:x="20476" fg:w="98"/><text x="9.9697%" y="959.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (130 samples, 0.06%)</title><rect x="9.7065%" y="965" width="0.0617%" height="15" fill="rgb(233,48,2)" fg:x="20448" fg:w="130"/><text x="9.9565%" y="975.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (1,416 samples, 0.67%)</title><rect x="9.0984%" y="1125" width="0.6722%" height="15" fill="rgb(244,165,34)" fg:x="19167" fg:w="1416"/><text x="9.3484%" y="1135.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (1,416 samples, 0.67%)</title><rect x="9.0984%" y="1109" width="0.6722%" height="15" fill="rgb(207,89,7)" fg:x="19167" fg:w="1416"/><text x="9.3484%" y="1119.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (1,416 samples, 0.67%)</title><rect x="9.0984%" y="1093" width="0.6722%" height="15" fill="rgb(244,117,36)" fg:x="19167" fg:w="1416"/><text x="9.3484%" y="1103.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (444 samples, 0.21%)</title><rect x="9.5598%" y="1077" width="0.2108%" height="15" fill="rgb(226,144,34)" fg:x="20139" fg:w="444"/><text x="9.8098%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (242 samples, 0.11%)</title><rect x="9.6557%" y="1061" width="0.1149%" height="15" fill="rgb(213,23,19)" fg:x="20341" fg:w="242"/><text x="9.9057%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (242 samples, 0.11%)</title><rect x="9.6557%" y="1045" width="0.1149%" height="15" fill="rgb(217,75,12)" fg:x="20341" fg:w="242"/><text x="9.9057%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (242 samples, 0.11%)</title><rect x="9.6557%" y="1029" width="0.1149%" height="15" fill="rgb(224,159,17)" fg:x="20341" fg:w="242"/><text x="9.9057%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (242 samples, 0.11%)</title><rect x="9.6557%" y="1013" width="0.1149%" height="15" fill="rgb(217,118,1)" fg:x="20341" fg:w="242"/><text x="9.9057%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (242 samples, 0.11%)</title><rect x="9.6557%" y="997" width="0.1149%" height="15" fill="rgb(232,180,48)" fg:x="20341" fg:w="242"/><text x="9.9057%" y="1007.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (242 samples, 0.11%)</title><rect x="9.6557%" y="981" width="0.1149%" height="15" fill="rgb(230,27,33)" fg:x="20341" fg:w="242"/><text x="9.9057%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (30 samples, 0.01%)</title><rect x="9.7739%" y="1061" width="0.0142%" height="15" fill="rgb(205,31,21)" fg:x="20590" fg:w="30"/><text x="10.0239%" y="1071.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (28 samples, 0.01%)</title><rect x="9.7748%" y="1045" width="0.0133%" height="15" fill="rgb(253,59,4)" fg:x="20592" fg:w="28"/><text x="10.0248%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="9.7886%" y="1029" width="0.0123%" height="15" fill="rgb(224,201,9)" fg:x="20621" fg:w="26"/><text x="10.0386%" y="1039.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="9.7905%" y="1013" width="0.0104%" height="15" fill="rgb(229,206,30)" fg:x="20625" fg:w="22"/><text x="10.0405%" y="1023.50"></text></g><g><title>async_task::runnable::spawn_unchecked (31 samples, 0.01%)</title><rect x="9.7881%" y="1061" width="0.0147%" height="15" fill="rgb(212,67,47)" fg:x="20620" fg:w="31"/><text x="10.0381%" y="1071.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (30 samples, 0.01%)</title><rect x="9.7886%" y="1045" width="0.0142%" height="15" fill="rgb(211,96,50)" fg:x="20621" fg:w="30"/><text x="10.0386%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,818 samples, 7.51%)</title><rect x="2.2984%" y="1237" width="7.5086%" height="15" fill="rgb(252,114,18)" fg:x="4842" fg:w="15818"/><text x="2.5484%" y="1247.50">&lt;core::fut..</text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (1,616 samples, 0.77%)</title><rect x="9.0400%" y="1221" width="0.7671%" height="15" fill="rgb(223,58,37)" fg:x="19044" fg:w="1616"/><text x="9.2900%" y="1231.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,616 samples, 0.77%)</title><rect x="9.0400%" y="1205" width="0.7671%" height="15" fill="rgb(237,70,4)" fg:x="19044" fg:w="1616"/><text x="9.2900%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,616 samples, 0.77%)</title><rect x="9.0400%" y="1189" width="0.7671%" height="15" fill="rgb(244,85,46)" fg:x="19044" fg:w="1616"/><text x="9.2900%" y="1199.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (1,616 samples, 0.77%)</title><rect x="9.0400%" y="1173" width="0.7671%" height="15" fill="rgb(223,39,52)" fg:x="19044" fg:w="1616"/><text x="9.2900%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,616 samples, 0.77%)</title><rect x="9.0400%" y="1157" width="0.7671%" height="15" fill="rgb(218,200,14)" fg:x="19044" fg:w="1616"/><text x="9.2900%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (1,493 samples, 0.71%)</title><rect x="9.0984%" y="1141" width="0.7087%" height="15" fill="rgb(208,171,16)" fg:x="19167" fg:w="1493"/><text x="9.3484%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (77 samples, 0.04%)</title><rect x="9.7705%" y="1125" width="0.0366%" height="15" fill="rgb(234,200,18)" fg:x="20583" fg:w="77"/><text x="10.0205%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (77 samples, 0.04%)</title><rect x="9.7705%" y="1109" width="0.0366%" height="15" fill="rgb(228,45,11)" fg:x="20583" fg:w="77"/><text x="10.0205%" y="1119.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::spawn (77 samples, 0.04%)</title><rect x="9.7705%" y="1093" width="0.0366%" height="15" fill="rgb(237,182,11)" fg:x="20583" fg:w="77"/><text x="10.0205%" y="1103.50"></text></g><g><title>async_executor::Executor::spawn (77 samples, 0.04%)</title><rect x="9.7705%" y="1077" width="0.0366%" height="15" fill="rgb(241,175,49)" fg:x="20583" fg:w="77"/><text x="10.0205%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (65 samples, 0.03%)</title><rect x="9.8142%" y="1013" width="0.0309%" height="15" fill="rgb(247,38,35)" fg:x="20675" fg:w="65"/><text x="10.0642%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (63 samples, 0.03%)</title><rect x="9.8152%" y="997" width="0.0299%" height="15" fill="rgb(228,39,49)" fg:x="20677" fg:w="63"/><text x="10.0652%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (63 samples, 0.03%)</title><rect x="9.8152%" y="981" width="0.0299%" height="15" fill="rgb(226,101,26)" fg:x="20677" fg:w="63"/><text x="10.0652%" y="991.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (45 samples, 0.02%)</title><rect x="9.8237%" y="965" width="0.0214%" height="15" fill="rgb(206,141,19)" fg:x="20695" fg:w="45"/><text x="10.0737%" y="975.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (45 samples, 0.02%)</title><rect x="9.8237%" y="949" width="0.0214%" height="15" fill="rgb(211,200,13)" fg:x="20695" fg:w="45"/><text x="10.0737%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (45 samples, 0.02%)</title><rect x="9.8237%" y="933" width="0.0214%" height="15" fill="rgb(241,121,6)" fg:x="20695" fg:w="45"/><text x="10.0737%" y="943.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (45 samples, 0.02%)</title><rect x="9.8237%" y="917" width="0.0214%" height="15" fill="rgb(234,221,29)" fg:x="20695" fg:w="45"/><text x="10.0737%" y="927.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (45 samples, 0.02%)</title><rect x="9.8237%" y="901" width="0.0214%" height="15" fill="rgb(229,136,5)" fg:x="20695" fg:w="45"/><text x="10.0737%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (45 samples, 0.02%)</title><rect x="9.8237%" y="885" width="0.0214%" height="15" fill="rgb(238,36,11)" fg:x="20695" fg:w="45"/><text x="10.0737%" y="895.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (45 samples, 0.02%)</title><rect x="9.8237%" y="869" width="0.0214%" height="15" fill="rgb(251,55,41)" fg:x="20695" fg:w="45"/><text x="10.0737%" y="879.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::connect_map_to_shm (45 samples, 0.02%)</title><rect x="9.8237%" y="853" width="0.0214%" height="15" fill="rgb(242,34,40)" fg:x="20695" fg:w="45"/><text x="10.0737%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (27 samples, 0.01%)</title><rect x="9.8322%" y="837" width="0.0128%" height="15" fill="rgb(215,42,17)" fg:x="20713" fg:w="27"/><text x="10.0822%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.01%)</title><rect x="9.8322%" y="821" width="0.0128%" height="15" fill="rgb(207,44,46)" fg:x="20713" fg:w="27"/><text x="10.0822%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (27 samples, 0.01%)</title><rect x="9.8322%" y="805" width="0.0128%" height="15" fill="rgb(211,206,28)" fg:x="20713" fg:w="27"/><text x="10.0822%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (27 samples, 0.01%)</title><rect x="9.8322%" y="789" width="0.0128%" height="15" fill="rgb(237,167,16)" fg:x="20713" fg:w="27"/><text x="10.0822%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (27 samples, 0.01%)</title><rect x="9.8322%" y="773" width="0.0128%" height="15" fill="rgb(233,66,6)" fg:x="20713" fg:w="27"/><text x="10.0822%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (27 samples, 0.01%)</title><rect x="9.8322%" y="757" width="0.0128%" height="15" fill="rgb(246,123,29)" fg:x="20713" fg:w="27"/><text x="10.0822%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (27 samples, 0.01%)</title><rect x="9.8322%" y="741" width="0.0128%" height="15" fill="rgb(209,62,40)" fg:x="20713" fg:w="27"/><text x="10.0822%" y="751.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (113 samples, 0.05%)</title><rect x="9.8137%" y="1237" width="0.0536%" height="15" fill="rgb(218,4,25)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (113 samples, 0.05%)</title><rect x="9.8137%" y="1221" width="0.0536%" height="15" fill="rgb(253,91,49)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (113 samples, 0.05%)</title><rect x="9.8137%" y="1205" width="0.0536%" height="15" fill="rgb(228,155,29)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (113 samples, 0.05%)</title><rect x="9.8137%" y="1189" width="0.0536%" height="15" fill="rgb(243,57,37)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1199.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (113 samples, 0.05%)</title><rect x="9.8137%" y="1173" width="0.0536%" height="15" fill="rgb(244,167,17)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (113 samples, 0.05%)</title><rect x="9.8137%" y="1157" width="0.0536%" height="15" fill="rgb(207,181,38)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1167.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (113 samples, 0.05%)</title><rect x="9.8137%" y="1141" width="0.0536%" height="15" fill="rgb(211,8,23)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (113 samples, 0.05%)</title><rect x="9.8137%" y="1125" width="0.0536%" height="15" fill="rgb(235,11,44)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1135.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (113 samples, 0.05%)</title><rect x="9.8137%" y="1109" width="0.0536%" height="15" fill="rgb(248,18,52)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (113 samples, 0.05%)</title><rect x="9.8137%" y="1093" width="0.0536%" height="15" fill="rgb(208,4,7)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (113 samples, 0.05%)</title><rect x="9.8137%" y="1077" width="0.0536%" height="15" fill="rgb(240,17,39)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (113 samples, 0.05%)</title><rect x="9.8137%" y="1061" width="0.0536%" height="15" fill="rgb(207,170,3)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (113 samples, 0.05%)</title><rect x="9.8137%" y="1045" width="0.0536%" height="15" fill="rgb(236,100,52)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (113 samples, 0.05%)</title><rect x="9.8137%" y="1029" width="0.0536%" height="15" fill="rgb(246,78,51)" fg:x="20674" fg:w="113"/><text x="10.0637%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (46 samples, 0.02%)</title><rect x="9.8455%" y="1013" width="0.0218%" height="15" fill="rgb(211,17,15)" fg:x="20741" fg:w="46"/><text x="10.0955%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (40 samples, 0.02%)</title><rect x="9.8484%" y="997" width="0.0190%" height="15" fill="rgb(209,59,46)" fg:x="20747" fg:w="40"/><text x="10.0984%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (40 samples, 0.02%)</title><rect x="9.8484%" y="981" width="0.0190%" height="15" fill="rgb(210,92,25)" fg:x="20747" fg:w="40"/><text x="10.0984%" y="991.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (40 samples, 0.02%)</title><rect x="9.8484%" y="965" width="0.0190%" height="15" fill="rgb(238,174,52)" fg:x="20747" fg:w="40"/><text x="10.0984%" y="975.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (37 samples, 0.02%)</title><rect x="10.1489%" y="1061" width="0.0176%" height="15" fill="rgb(230,73,7)" fg:x="21380" fg:w="37"/><text x="10.3989%" y="1071.50"></text></g><g><title>core::ptr::write (36 samples, 0.02%)</title><rect x="10.1493%" y="1045" width="0.0171%" height="15" fill="rgb(243,124,40)" fg:x="21381" fg:w="36"/><text x="10.3993%" y="1055.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (41 samples, 0.02%)</title><rect x="10.1474%" y="1077" width="0.0195%" height="15" fill="rgb(244,170,11)" fg:x="21377" fg:w="41"/><text x="10.3974%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::conduit::TransportChannelTx&gt;&gt; (54 samples, 0.03%)</title><rect x="10.1683%" y="1077" width="0.0256%" height="15" fill="rgb(207,114,54)" fg:x="21421" fg:w="54"/><text x="10.4183%" y="1087.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.03%)</title><rect x="10.1683%" y="1061" width="0.0256%" height="15" fill="rgb(205,42,20)" fg:x="21421" fg:w="54"/><text x="10.4183%" y="1071.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (48 samples, 0.02%)</title><rect x="10.1712%" y="1045" width="0.0228%" height="15" fill="rgb(230,30,28)" fg:x="21427" fg:w="48"/><text x="10.4212%" y="1055.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (48 samples, 0.02%)</title><rect x="10.1712%" y="1029" width="0.0228%" height="15" fill="rgb(205,73,54)" fg:x="21427" fg:w="48"/><text x="10.4212%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::pipeline::StageIn&gt;&gt; (24 samples, 0.01%)</title><rect x="10.1940%" y="1077" width="0.0114%" height="15" fill="rgb(254,227,23)" fg:x="21475" fg:w="24"/><text x="10.4440%" y="1087.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.01%)</title><rect x="10.1940%" y="1061" width="0.0114%" height="15" fill="rgb(228,202,34)" fg:x="21475" fg:w="24"/><text x="10.4440%" y="1071.50"></text></g><g><title>cfree (62 samples, 0.03%)</title><rect x="10.2158%" y="1061" width="0.0294%" height="15" fill="rgb(222,225,37)" fg:x="21521" fg:w="62"/><text x="10.4658%" y="1071.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="10.2319%" y="1045" width="0.0133%" height="15" fill="rgb(221,14,54)" fg:x="21555" fg:w="28"/><text x="10.4819%" y="1055.50"></text></g><g><title>[libc.so.6] (180 samples, 0.09%)</title><rect x="10.2785%" y="869" width="0.0854%" height="15" fill="rgb(254,102,2)" fg:x="21653" fg:w="180"/><text x="10.5285%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (223 samples, 0.11%)</title><rect x="10.2609%" y="917" width="0.1059%" height="15" fill="rgb(232,104,17)" fg:x="21616" fg:w="223"/><text x="10.5109%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (223 samples, 0.11%)</title><rect x="10.2609%" y="901" width="0.1059%" height="15" fill="rgb(250,220,14)" fg:x="21616" fg:w="223"/><text x="10.5109%" y="911.50"></text></g><g><title>cfree (219 samples, 0.10%)</title><rect x="10.2628%" y="885" width="0.1040%" height="15" fill="rgb(241,158,9)" fg:x="21620" fg:w="219"/><text x="10.5128%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (225 samples, 0.11%)</title><rect x="10.2609%" y="965" width="0.1068%" height="15" fill="rgb(246,9,43)" fg:x="21616" fg:w="225"/><text x="10.5109%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (225 samples, 0.11%)</title><rect x="10.2609%" y="949" width="0.1068%" height="15" fill="rgb(206,73,33)" fg:x="21616" fg:w="225"/><text x="10.5109%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (225 samples, 0.11%)</title><rect x="10.2609%" y="933" width="0.1068%" height="15" fill="rgb(222,79,8)" fg:x="21616" fg:w="225"/><text x="10.5109%" y="943.50"></text></g><g><title>[libc.so.6] (86 samples, 0.04%)</title><rect x="10.4156%" y="773" width="0.0408%" height="15" fill="rgb(234,8,54)" fg:x="21942" fg:w="86"/><text x="10.6656%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (176 samples, 0.08%)</title><rect x="10.3734%" y="821" width="0.0835%" height="15" fill="rgb(209,134,38)" fg:x="21853" fg:w="176"/><text x="10.6234%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (176 samples, 0.08%)</title><rect x="10.3734%" y="805" width="0.0835%" height="15" fill="rgb(230,127,29)" fg:x="21853" fg:w="176"/><text x="10.6234%" y="815.50"></text></g><g><title>cfree (172 samples, 0.08%)</title><rect x="10.3753%" y="789" width="0.0816%" height="15" fill="rgb(242,44,41)" fg:x="21857" fg:w="172"/><text x="10.6253%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (191 samples, 0.09%)</title><rect x="10.3729%" y="885" width="0.0907%" height="15" fill="rgb(222,56,43)" fg:x="21852" fg:w="191"/><text x="10.6229%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (191 samples, 0.09%)</title><rect x="10.3729%" y="869" width="0.0907%" height="15" fill="rgb(238,39,47)" fg:x="21852" fg:w="191"/><text x="10.6229%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (191 samples, 0.09%)</title><rect x="10.3729%" y="853" width="0.0907%" height="15" fill="rgb(226,79,43)" fg:x="21852" fg:w="191"/><text x="10.6229%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.09%)</title><rect x="10.3734%" y="837" width="0.0902%" height="15" fill="rgb(242,105,53)" fg:x="21853" fg:w="190"/><text x="10.6234%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (207 samples, 0.10%)</title><rect x="10.3715%" y="933" width="0.0983%" height="15" fill="rgb(251,132,46)" fg:x="21849" fg:w="207"/><text x="10.6215%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (206 samples, 0.10%)</title><rect x="10.3720%" y="917" width="0.0978%" height="15" fill="rgb(231,77,14)" fg:x="21850" fg:w="206"/><text x="10.6220%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (204 samples, 0.10%)</title><rect x="10.3729%" y="901" width="0.0968%" height="15" fill="rgb(240,135,9)" fg:x="21852" fg:w="204"/><text x="10.6229%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (61 samples, 0.03%)</title><rect x="10.4698%" y="901" width="0.0290%" height="15" fill="rgb(248,109,14)" fg:x="22056" fg:w="61"/><text x="10.7198%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (61 samples, 0.03%)</title><rect x="10.4698%" y="885" width="0.0290%" height="15" fill="rgb(227,146,52)" fg:x="22056" fg:w="61"/><text x="10.7198%" y="895.50"></text></g><g><title>cfree (48 samples, 0.02%)</title><rect x="10.4759%" y="869" width="0.0228%" height="15" fill="rgb(232,54,3)" fg:x="22069" fg:w="48"/><text x="10.7259%" y="879.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="10.4868%" y="853" width="0.0119%" height="15" fill="rgb(229,201,43)" fg:x="22092" fg:w="25"/><text x="10.7368%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (529 samples, 0.25%)</title><rect x="10.2504%" y="1013" width="0.2511%" height="15" fill="rgb(252,161,33)" fg:x="21594" fg:w="529"/><text x="10.5004%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol::proto::msg::LinkState]&gt; (516 samples, 0.24%)</title><rect x="10.2566%" y="997" width="0.2449%" height="15" fill="rgb(226,146,40)" fg:x="21607" fg:w="516"/><text x="10.5066%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::LinkState&gt; (507 samples, 0.24%)</title><rect x="10.2609%" y="981" width="0.2407%" height="15" fill="rgb(219,47,25)" fg:x="21616" fg:w="507"/><text x="10.5109%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;&gt; (282 samples, 0.13%)</title><rect x="10.3677%" y="965" width="0.1339%" height="15" fill="rgb(250,135,13)" fg:x="21841" fg:w="282"/><text x="10.6177%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (274 samples, 0.13%)</title><rect x="10.3715%" y="949" width="0.1301%" height="15" fill="rgb(219,229,18)" fg:x="21849" fg:w="274"/><text x="10.6215%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (67 samples, 0.03%)</title><rect x="10.4698%" y="933" width="0.0318%" height="15" fill="rgb(217,152,27)" fg:x="22056" fg:w="67"/><text x="10.7198%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.03%)</title><rect x="10.4698%" y="917" width="0.0318%" height="15" fill="rgb(225,71,47)" fg:x="22056" fg:w="67"/><text x="10.7198%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::ZenohMessage&gt; (610 samples, 0.29%)</title><rect x="10.2153%" y="1077" width="0.2896%" height="15" fill="rgb(220,139,14)" fg:x="21520" fg:w="610"/><text x="10.4653%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::ZenohBody&gt; (542 samples, 0.26%)</title><rect x="10.2476%" y="1061" width="0.2573%" height="15" fill="rgb(247,54,32)" fg:x="21588" fg:w="542"/><text x="10.4976%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::LinkStateList&gt; (538 samples, 0.26%)</title><rect x="10.2495%" y="1045" width="0.2554%" height="15" fill="rgb(252,131,39)" fg:x="21592" fg:w="538"/><text x="10.4995%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol::proto::msg::LinkState&gt;&gt; (538 samples, 0.26%)</title><rect x="10.2495%" y="1029" width="0.2554%" height="15" fill="rgb(210,108,39)" fg:x="21592" fg:w="538"/><text x="10.4995%" y="1039.50"></text></g><g><title>std::sys::unix::futex::futex_wait (34 samples, 0.02%)</title><rect x="10.5148%" y="1013" width="0.0161%" height="15" fill="rgb(205,23,29)" fg:x="22151" fg:w="34"/><text x="10.7648%" y="1023.50"></text></g><g><title>syscall (32 samples, 0.02%)</title><rect x="10.5158%" y="997" width="0.0152%" height="15" fill="rgb(246,139,46)" fg:x="22153" fg:w="32"/><text x="10.7658%" y="1007.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="10.5158%" y="981" width="0.0152%" height="15" fill="rgb(250,81,26)" fg:x="22153" fg:w="32"/><text x="10.7658%" y="991.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.5163%" y="965" width="0.0147%" height="15" fill="rgb(214,104,7)" fg:x="22154" fg:w="31"/><text x="10.7663%" y="975.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.5163%" y="949" width="0.0147%" height="15" fill="rgb(233,189,8)" fg:x="22154" fg:w="31"/><text x="10.7663%" y="959.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.5163%" y="933" width="0.0147%" height="15" fill="rgb(228,141,17)" fg:x="22154" fg:w="31"/><text x="10.7663%" y="943.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="10.5167%" y="917" width="0.0142%" height="15" fill="rgb(247,157,1)" fg:x="22155" fg:w="30"/><text x="10.7667%" y="927.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="10.5172%" y="901" width="0.0138%" height="15" fill="rgb(249,225,5)" fg:x="22156" fg:w="29"/><text x="10.7672%" y="911.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="10.5172%" y="885" width="0.0138%" height="15" fill="rgb(242,55,13)" fg:x="22156" fg:w="29"/><text x="10.7672%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (43 samples, 0.02%)</title><rect x="10.5115%" y="1045" width="0.0204%" height="15" fill="rgb(230,49,50)" fg:x="22144" fg:w="43"/><text x="10.7615%" y="1055.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (41 samples, 0.02%)</title><rect x="10.5125%" y="1029" width="0.0195%" height="15" fill="rgb(241,111,38)" fg:x="22146" fg:w="41"/><text x="10.7625%" y="1039.50"></text></g><g><title>std::sync::condvar::Condvar::wait (45 samples, 0.02%)</title><rect x="10.5115%" y="1077" width="0.0214%" height="15" fill="rgb(252,155,4)" fg:x="22144" fg:w="45"/><text x="10.7615%" y="1087.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (45 samples, 0.02%)</title><rect x="10.5115%" y="1061" width="0.0214%" height="15" fill="rgb(212,69,32)" fg:x="22144" fg:w="45"/><text x="10.7615%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (688 samples, 0.33%)</title><rect x="10.5329%" y="1077" width="0.3266%" height="15" fill="rgb(243,107,47)" fg:x="22189" fg:w="688"/><text x="10.7829%" y="1087.50"></text></g><g><title>event_listener::Inner::lock (42 samples, 0.02%)</title><rect x="10.9449%" y="1045" width="0.0199%" height="15" fill="rgb(247,130,12)" fg:x="23057" fg:w="42"/><text x="11.1949%" y="1055.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (31 samples, 0.01%)</title><rect x="10.9501%" y="1029" width="0.0147%" height="15" fill="rgb(233,74,16)" fg:x="23068" fg:w="31"/><text x="11.2001%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (31 samples, 0.01%)</title><rect x="10.9501%" y="1013" width="0.0147%" height="15" fill="rgb(208,58,18)" fg:x="23068" fg:w="31"/><text x="11.2001%" y="1023.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (31 samples, 0.01%)</title><rect x="10.9501%" y="997" width="0.0147%" height="15" fill="rgb(242,225,1)" fg:x="23068" fg:w="31"/><text x="11.2001%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (30 samples, 0.01%)</title><rect x="11.0992%" y="869" width="0.0142%" height="15" fill="rgb(249,39,40)" fg:x="23382" fg:w="30"/><text x="11.3492%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.01%)</title><rect x="11.0992%" y="853" width="0.0142%" height="15" fill="rgb(207,72,44)" fg:x="23382" fg:w="30"/><text x="11.3492%" y="863.50"></text></g><g><title>parking::Unparker::unpark (425 samples, 0.20%)</title><rect x="11.0887%" y="901" width="0.2017%" height="15" fill="rgb(215,193,12)" fg:x="23360" fg:w="425"/><text x="11.3387%" y="911.50"></text></g><g><title>parking::Inner::unpark (404 samples, 0.19%)</title><rect x="11.0987%" y="885" width="0.1918%" height="15" fill="rgb(248,41,39)" fg:x="23381" fg:w="404"/><text x="11.3487%" y="895.50"></text></g><g><title>syscall (365 samples, 0.17%)</title><rect x="11.1172%" y="869" width="0.1733%" height="15" fill="rgb(253,85,4)" fg:x="23420" fg:w="365"/><text x="11.3672%" y="879.50"></text></g><g><title>[unknown] (363 samples, 0.17%)</title><rect x="11.1182%" y="853" width="0.1723%" height="15" fill="rgb(243,70,31)" fg:x="23422" fg:w="363"/><text x="11.3682%" y="863.50"></text></g><g><title>[unknown] (358 samples, 0.17%)</title><rect x="11.1206%" y="837" width="0.1699%" height="15" fill="rgb(253,195,26)" fg:x="23427" fg:w="358"/><text x="11.3706%" y="847.50"></text></g><g><title>[unknown] (356 samples, 0.17%)</title><rect x="11.1215%" y="821" width="0.1690%" height="15" fill="rgb(243,42,11)" fg:x="23429" fg:w="356"/><text x="11.3715%" y="831.50"></text></g><g><title>[unknown] (342 samples, 0.16%)</title><rect x="11.1281%" y="805" width="0.1623%" height="15" fill="rgb(239,66,17)" fg:x="23443" fg:w="342"/><text x="11.3781%" y="815.50"></text></g><g><title>[unknown] (326 samples, 0.15%)</title><rect x="11.1357%" y="789" width="0.1547%" height="15" fill="rgb(217,132,21)" fg:x="23459" fg:w="326"/><text x="11.3857%" y="799.50"></text></g><g><title>[unknown] (240 samples, 0.11%)</title><rect x="11.1766%" y="773" width="0.1139%" height="15" fill="rgb(252,202,21)" fg:x="23545" fg:w="240"/><text x="11.4266%" y="783.50"></text></g><g><title>[unknown] (164 samples, 0.08%)</title><rect x="11.2126%" y="757" width="0.0778%" height="15" fill="rgb(233,98,36)" fg:x="23621" fg:w="164"/><text x="11.4626%" y="767.50"></text></g><g><title>[unknown] (135 samples, 0.06%)</title><rect x="11.2264%" y="741" width="0.0641%" height="15" fill="rgb(216,153,54)" fg:x="23650" fg:w="135"/><text x="11.4764%" y="751.50"></text></g><g><title>[unknown] (86 samples, 0.04%)</title><rect x="11.2497%" y="725" width="0.0408%" height="15" fill="rgb(250,99,7)" fg:x="23699" fg:w="86"/><text x="11.4997%" y="735.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="11.2744%" y="709" width="0.0161%" height="15" fill="rgb(207,56,50)" fg:x="23751" fg:w="34"/><text x="11.5244%" y="719.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (429 samples, 0.20%)</title><rect x="11.0873%" y="917" width="0.2036%" height="15" fill="rgb(244,61,34)" fg:x="23357" fg:w="429"/><text x="11.3373%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (435 samples, 0.21%)</title><rect x="11.0850%" y="949" width="0.2065%" height="15" fill="rgb(241,50,38)" fg:x="23352" fg:w="435"/><text x="11.3350%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (435 samples, 0.21%)</title><rect x="11.0850%" y="933" width="0.2065%" height="15" fill="rgb(212,166,30)" fg:x="23352" fg:w="435"/><text x="11.3350%" y="943.50"></text></g><g><title>async_executor::State::notify (546 samples, 0.26%)</title><rect x="11.0422%" y="965" width="0.2592%" height="15" fill="rgb(249,127,32)" fg:x="23262" fg:w="546"/><text x="11.2922%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (120 samples, 0.06%)</title><rect x="11.4490%" y="933" width="0.0570%" height="15" fill="rgb(209,103,0)" fg:x="24119" fg:w="120"/><text x="11.6990%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (120 samples, 0.06%)</title><rect x="11.4490%" y="917" width="0.0570%" height="15" fill="rgb(238,209,51)" fg:x="24119" fg:w="120"/><text x="11.6990%" y="927.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (526 samples, 0.25%)</title><rect x="11.3014%" y="965" width="0.2497%" height="15" fill="rgb(237,56,23)" fg:x="23808" fg:w="526"/><text x="11.5514%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (487 samples, 0.23%)</title><rect x="11.3199%" y="949" width="0.2312%" height="15" fill="rgb(215,153,46)" fg:x="23847" fg:w="487"/><text x="11.5699%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (87 samples, 0.04%)</title><rect x="11.5098%" y="933" width="0.0413%" height="15" fill="rgb(224,49,31)" fg:x="24247" fg:w="87"/><text x="11.7598%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_or (87 samples, 0.04%)</title><rect x="11.5098%" y="917" width="0.0413%" height="15" fill="rgb(250,18,42)" fg:x="24247" fg:w="87"/><text x="11.7598%" y="927.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1,077 samples, 0.51%)</title><rect x="11.0413%" y="981" width="0.5112%" height="15" fill="rgb(215,176,39)" fg:x="23260" fg:w="1077"/><text x="11.2913%" y="991.50"></text></g><g><title>event_listener::List::notify_additional (1,478 samples, 0.70%)</title><rect x="10.9649%" y="1045" width="0.7016%" height="15" fill="rgb(223,77,29)" fg:x="23099" fg:w="1478"/><text x="11.2149%" y="1055.50"></text></g><g><title>core::task::wake::Waker::wake (1,374 samples, 0.65%)</title><rect x="11.0142%" y="1029" width="0.6522%" height="15" fill="rgb(234,94,52)" fg:x="23203" fg:w="1374"/><text x="11.2642%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (1,374 samples, 0.65%)</title><rect x="11.0142%" y="1013" width="0.6522%" height="15" fill="rgb(220,154,50)" fg:x="23203" fg:w="1374"/><text x="11.2642%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1,338 samples, 0.64%)</title><rect x="11.0313%" y="997" width="0.6351%" height="15" fill="rgb(212,11,10)" fg:x="23239" fg:w="1338"/><text x="11.2813%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (239 samples, 0.11%)</title><rect x="11.5530%" y="981" width="0.1135%" height="15" fill="rgb(205,166,19)" fg:x="24338" fg:w="239"/><text x="11.8030%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (239 samples, 0.11%)</title><rect x="11.5530%" y="965" width="0.1135%" height="15" fill="rgb(244,198,16)" fg:x="24338" fg:w="239"/><text x="11.8030%" y="975.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (1,701 samples, 0.81%)</title><rect x="10.8595%" y="1077" width="0.8074%" height="15" fill="rgb(219,69,12)" fg:x="22877" fg:w="1701"/><text x="11.1095%" y="1087.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (1,700 samples, 0.81%)</title><rect x="10.8599%" y="1061" width="0.8070%" height="15" fill="rgb(245,30,7)" fg:x="22878" fg:w="1700"/><text x="11.1099%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (394 samples, 0.19%)</title><rect x="11.6774%" y="1045" width="0.1870%" height="15" fill="rgb(218,221,48)" fg:x="24600" fg:w="394"/><text x="11.9274%" y="1055.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (384 samples, 0.18%)</title><rect x="11.6821%" y="1029" width="0.1823%" height="15" fill="rgb(216,66,15)" fg:x="24610" fg:w="384"/><text x="11.9321%" y="1039.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (384 samples, 0.18%)</title><rect x="11.6821%" y="1013" width="0.1823%" height="15" fill="rgb(226,122,50)" fg:x="24610" fg:w="384"/><text x="11.9321%" y="1023.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (417 samples, 0.20%)</title><rect x="11.6669%" y="1077" width="0.1979%" height="15" fill="rgb(239,156,16)" fg:x="24578" fg:w="417"/><text x="11.9169%" y="1087.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (395 samples, 0.19%)</title><rect x="11.6774%" y="1061" width="0.1875%" height="15" fill="rgb(224,27,38)" fg:x="24600" fg:w="395"/><text x="11.9274%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (84 samples, 0.04%)</title><rect x="11.9883%" y="981" width="0.0399%" height="15" fill="rgb(224,39,27)" fg:x="25255" fg:w="84"/><text x="12.2383%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (84 samples, 0.04%)</title><rect x="11.9883%" y="965" width="0.0399%" height="15" fill="rgb(215,92,29)" fg:x="25255" fg:w="84"/><text x="12.2383%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (84 samples, 0.04%)</title><rect x="11.9883%" y="949" width="0.0399%" height="15" fill="rgb(207,159,16)" fg:x="25255" fg:w="84"/><text x="12.2383%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (80 samples, 0.04%)</title><rect x="11.9902%" y="933" width="0.0380%" height="15" fill="rgb(238,163,47)" fg:x="25259" fg:w="80"/><text x="12.2402%" y="943.50"></text></g><g><title>[libc.so.6] (79 samples, 0.04%)</title><rect x="11.9907%" y="917" width="0.0375%" height="15" fill="rgb(219,91,49)" fg:x="25260" fg:w="79"/><text x="12.2407%" y="927.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (229 samples, 0.11%)</title><rect x="11.9541%" y="1029" width="0.1087%" height="15" fill="rgb(227,167,31)" fg:x="25183" fg:w="229"/><text x="12.2041%" y="1039.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (194 samples, 0.09%)</title><rect x="11.9707%" y="1013" width="0.0921%" height="15" fill="rgb(234,80,54)" fg:x="25218" fg:w="194"/><text x="12.2207%" y="1023.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (160 samples, 0.08%)</title><rect x="11.9869%" y="997" width="0.0760%" height="15" fill="rgb(212,114,2)" fg:x="25252" fg:w="160"/><text x="12.2369%" y="1007.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::can_write_in_buf (73 samples, 0.03%)</title><rect x="12.0282%" y="981" width="0.0347%" height="15" fill="rgb(234,50,24)" fg:x="25339" fg:w="73"/><text x="12.2782%" y="991.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (232 samples, 0.11%)</title><rect x="11.9541%" y="1045" width="0.1101%" height="15" fill="rgb(221,68,8)" fg:x="25183" fg:w="232"/><text x="12.2041%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (33 samples, 0.02%)</title><rect x="12.0794%" y="997" width="0.0157%" height="15" fill="rgb(254,180,31)" fg:x="25447" fg:w="33"/><text x="12.3294%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write_byte (64 samples, 0.03%)</title><rect x="12.0652%" y="1029" width="0.0304%" height="15" fill="rgb(247,130,50)" fg:x="25417" fg:w="64"/><text x="12.3152%" y="1039.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write (34 samples, 0.02%)</title><rect x="12.0794%" y="1013" width="0.0161%" height="15" fill="rgb(211,109,4)" fg:x="25447" fg:w="34"/><text x="12.3294%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_deco_priority (82 samples, 0.04%)</title><rect x="12.0642%" y="1045" width="0.0389%" height="15" fill="rgb(238,50,21)" fg:x="25415" fg:w="82"/><text x="12.3142%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_frame_header (356 samples, 0.17%)</title><rect x="11.9498%" y="1061" width="0.1690%" height="15" fill="rgb(225,57,45)" fg:x="25174" fg:w="356"/><text x="12.1998%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.01%)</title><rect x="12.1649%" y="997" width="0.0138%" height="15" fill="rgb(209,196,50)" fg:x="25627" fg:w="29"/><text x="12.4149%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_deco_priority (40 samples, 0.02%)</title><rect x="12.1606%" y="1045" width="0.0190%" height="15" fill="rgb(242,140,13)" fg:x="25618" fg:w="40"/><text x="12.4106%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write_byte (38 samples, 0.02%)</title><rect x="12.1615%" y="1029" width="0.0180%" height="15" fill="rgb(217,111,7)" fg:x="25620" fg:w="38"/><text x="12.4115%" y="1039.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write (31 samples, 0.01%)</title><rect x="12.1649%" y="1013" width="0.0147%" height="15" fill="rgb(253,193,51)" fg:x="25627" fg:w="31"/><text x="12.4149%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (58 samples, 0.03%)</title><rect x="12.2171%" y="997" width="0.0275%" height="15" fill="rgb(252,70,29)" fg:x="25737" fg:w="58"/><text x="12.4671%" y="1007.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (26 samples, 0.01%)</title><rect x="12.2323%" y="981" width="0.0123%" height="15" fill="rgb(232,127,12)" fg:x="25769" fg:w="26"/><text x="12.4823%" y="991.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (97 samples, 0.05%)</title><rect x="12.1990%" y="1013" width="0.0460%" height="15" fill="rgb(211,180,21)" fg:x="25699" fg:w="97"/><text x="12.4490%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_usize_as_zint (102 samples, 0.05%)</title><rect x="12.1990%" y="1029" width="0.0484%" height="15" fill="rgb(229,72,13)" fg:x="25699" fg:w="102"/><text x="12.4490%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.01%)</title><rect x="12.2964%" y="1013" width="0.0104%" height="15" fill="rgb(240,211,49)" fg:x="25904" fg:w="22"/><text x="12.5464%" y="1023.50"></text></g><g><title>zenoh_protocol_core::whatami::&lt;impl core::convert::From&lt;zenoh_protocol_core::whatami::WhatAmI&gt; for u64&gt;::from (22 samples, 0.01%)</title><rect x="12.2964%" y="997" width="0.0104%" height="15" fill="rgb(219,149,40)" fg:x="25904" fg:w="22"/><text x="12.5464%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.02%)</title><rect x="12.3068%" y="1013" width="0.0204%" height="15" fill="rgb(210,127,46)" fg:x="25926" fg:w="43"/><text x="12.5568%" y="1023.50"></text></g><g><title>__rdl_alloc (24 samples, 0.01%)</title><rect x="12.4772%" y="789" width="0.0114%" height="15" fill="rgb(220,106,7)" fg:x="26285" fg:w="24"/><text x="12.7272%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (253 samples, 0.12%)</title><rect x="12.4411%" y="805" width="0.1201%" height="15" fill="rgb(249,31,22)" fg:x="26209" fg:w="253"/><text x="12.6911%" y="815.50"></text></g><g><title>malloc (129 samples, 0.06%)</title><rect x="12.5000%" y="789" width="0.0612%" height="15" fill="rgb(253,1,49)" fg:x="26333" fg:w="129"/><text x="12.7500%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (336 samples, 0.16%)</title><rect x="12.4141%" y="869" width="0.1595%" height="15" fill="rgb(227,144,33)" fg:x="26152" fg:w="336"/><text x="12.6641%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (333 samples, 0.16%)</title><rect x="12.4155%" y="853" width="0.1581%" height="15" fill="rgb(249,163,44)" fg:x="26155" fg:w="333"/><text x="12.6655%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (317 samples, 0.15%)</title><rect x="12.4231%" y="837" width="0.1505%" height="15" fill="rgb(234,15,39)" fg:x="26171" fg:w="317"/><text x="12.6731%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (305 samples, 0.14%)</title><rect x="12.4288%" y="821" width="0.1448%" height="15" fill="rgb(207,66,16)" fg:x="26183" fg:w="305"/><text x="12.6788%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (66 samples, 0.03%)</title><rect x="12.5736%" y="869" width="0.0313%" height="15" fill="rgb(233,112,24)" fg:x="26488" fg:w="66"/><text x="12.8236%" y="879.50"></text></g><g><title>[libc.so.6] (63 samples, 0.03%)</title><rect x="12.5750%" y="853" width="0.0299%" height="15" fill="rgb(230,90,22)" fg:x="26491" fg:w="63"/><text x="12.8250%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (457 samples, 0.22%)</title><rect x="12.3960%" y="949" width="0.2169%" height="15" fill="rgb(229,61,13)" fg:x="26114" fg:w="457"/><text x="12.6460%" y="959.50"></text></g><g><title>alloc::string::String::push_str (427 samples, 0.20%)</title><rect x="12.4103%" y="933" width="0.2027%" height="15" fill="rgb(225,57,24)" fg:x="26144" fg:w="427"/><text x="12.6603%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (427 samples, 0.20%)</title><rect x="12.4103%" y="917" width="0.2027%" height="15" fill="rgb(208,169,48)" fg:x="26144" fg:w="427"/><text x="12.6603%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (427 samples, 0.20%)</title><rect x="12.4103%" y="901" width="0.2027%" height="15" fill="rgb(244,218,51)" fg:x="26144" fg:w="427"/><text x="12.6603%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (427 samples, 0.20%)</title><rect x="12.4103%" y="885" width="0.2027%" height="15" fill="rgb(214,148,10)" fg:x="26144" fg:w="427"/><text x="12.6603%" y="895.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::fmt::Display&gt;::fmt (660 samples, 0.31%)</title><rect x="12.3339%" y="965" width="0.3133%" height="15" fill="rgb(225,174,27)" fg:x="25983" fg:w="660"/><text x="12.5839%" y="975.50"></text></g><g><title>core::fmt::Formatter::write_str (51 samples, 0.02%)</title><rect x="12.6229%" y="949" width="0.0242%" height="15" fill="rgb(230,96,26)" fg:x="26592" fg:w="51"/><text x="12.8729%" y="959.50"></text></g><g><title>alloc::string::String::new (33 samples, 0.02%)</title><rect x="12.6472%" y="965" width="0.0157%" height="15" fill="rgb(232,10,30)" fg:x="26643" fg:w="33"/><text x="12.8972%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (28 samples, 0.01%)</title><rect x="12.6495%" y="949" width="0.0133%" height="15" fill="rgb(222,8,50)" fg:x="26648" fg:w="28"/><text x="12.8995%" y="959.50"></text></g><g><title>core::fmt::Formatter::new (202 samples, 0.10%)</title><rect x="12.6628%" y="965" width="0.0959%" height="15" fill="rgb(213,81,27)" fg:x="26676" fg:w="202"/><text x="12.9128%" y="975.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (904 samples, 0.43%)</title><rect x="12.3315%" y="981" width="0.4291%" height="15" fill="rgb(245,50,10)" fg:x="25978" fg:w="904"/><text x="12.5815%" y="991.50"></text></g><g><title>[libc.so.6] (75 samples, 0.04%)</title><rect x="12.8109%" y="837" width="0.0356%" height="15" fill="rgb(216,100,18)" fg:x="26988" fg:w="75"/><text x="13.0609%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (100 samples, 0.05%)</title><rect x="12.7995%" y="901" width="0.0475%" height="15" fill="rgb(236,147,54)" fg:x="26964" fg:w="100"/><text x="13.0495%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (100 samples, 0.05%)</title><rect x="12.7995%" y="885" width="0.0475%" height="15" fill="rgb(205,143,26)" fg:x="26964" fg:w="100"/><text x="13.0495%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (100 samples, 0.05%)</title><rect x="12.7995%" y="869" width="0.0475%" height="15" fill="rgb(236,26,9)" fg:x="26964" fg:w="100"/><text x="13.0495%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (84 samples, 0.04%)</title><rect x="12.8071%" y="853" width="0.0399%" height="15" fill="rgb(221,165,53)" fg:x="26980" fg:w="84"/><text x="13.0571%" y="863.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (160 samples, 0.08%)</title><rect x="12.7763%" y="933" width="0.0760%" height="15" fill="rgb(214,110,17)" fg:x="26915" fg:w="160"/><text x="13.0263%" y="943.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (112 samples, 0.05%)</title><rect x="12.7991%" y="917" width="0.0532%" height="15" fill="rgb(237,197,12)" fg:x="26963" fg:w="112"/><text x="13.0491%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (56 samples, 0.03%)</title><rect x="12.9063%" y="885" width="0.0266%" height="15" fill="rgb(205,84,17)" fg:x="27189" fg:w="56"/><text x="13.1563%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (56 samples, 0.03%)</title><rect x="12.9063%" y="869" width="0.0266%" height="15" fill="rgb(237,18,45)" fg:x="27189" fg:w="56"/><text x="13.1563%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (56 samples, 0.03%)</title><rect x="12.9063%" y="853" width="0.0266%" height="15" fill="rgb(221,87,14)" fg:x="27189" fg:w="56"/><text x="13.1563%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.02%)</title><rect x="12.9097%" y="837" width="0.0233%" height="15" fill="rgb(238,186,15)" fg:x="27196" fg:w="49"/><text x="13.1597%" y="847.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="12.9149%" y="821" width="0.0180%" height="15" fill="rgb(208,115,11)" fg:x="27207" fg:w="38"/><text x="13.1649%" y="831.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (154 samples, 0.07%)</title><rect x="12.8669%" y="917" width="0.0731%" height="15" fill="rgb(254,175,0)" fg:x="27106" fg:w="154"/><text x="13.1169%" y="927.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (73 samples, 0.03%)</title><rect x="12.9054%" y="901" width="0.0347%" height="15" fill="rgb(227,24,42)" fg:x="27187" fg:w="73"/><text x="13.1554%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_string (383 samples, 0.18%)</title><rect x="12.7606%" y="981" width="0.1818%" height="15" fill="rgb(223,211,37)" fg:x="26882" fg:w="383"/><text x="13.0106%" y="991.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;str&gt;&gt;::write (383 samples, 0.18%)</title><rect x="12.7606%" y="965" width="0.1818%" height="15" fill="rgb(235,49,27)" fg:x="26882" fg:w="383"/><text x="13.0106%" y="975.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;[u8]&gt;&gt;::write (382 samples, 0.18%)</title><rect x="12.7611%" y="949" width="0.1813%" height="15" fill="rgb(254,97,51)" fg:x="26883" fg:w="382"/><text x="13.0111%" y="959.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (190 samples, 0.09%)</title><rect x="12.8522%" y="933" width="0.0902%" height="15" fill="rgb(249,51,40)" fg:x="27075" fg:w="190"/><text x="13.1022%" y="943.50"></text></g><g><title>[libc.so.6] (102 samples, 0.05%)</title><rect x="13.0373%" y="869" width="0.0484%" height="15" fill="rgb(210,128,45)" fg:x="27465" fg:w="102"/><text x="13.2873%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (293 samples, 0.14%)</title><rect x="12.9472%" y="917" width="0.1391%" height="15" fill="rgb(224,137,50)" fg:x="27275" fg:w="293"/><text x="13.1972%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (293 samples, 0.14%)</title><rect x="12.9472%" y="901" width="0.1391%" height="15" fill="rgb(242,15,9)" fg:x="27275" fg:w="293"/><text x="13.1972%" y="911.50"></text></g><g><title>cfree (200 samples, 0.09%)</title><rect x="12.9913%" y="885" width="0.0949%" height="15" fill="rgb(233,187,41)" fg:x="27368" fg:w="200"/><text x="13.2413%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (1,597 samples, 0.76%)</title><rect x="12.3315%" y="997" width="0.7581%" height="15" fill="rgb(227,2,29)" fg:x="25978" fg:w="1597"/><text x="12.5815%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (300 samples, 0.14%)</title><rect x="12.9472%" y="981" width="0.1424%" height="15" fill="rgb(222,70,3)" fg:x="27275" fg:w="300"/><text x="13.1972%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (300 samples, 0.14%)</title><rect x="12.9472%" y="965" width="0.1424%" height="15" fill="rgb(213,11,42)" fg:x="27275" fg:w="300"/><text x="13.1972%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (300 samples, 0.14%)</title><rect x="12.9472%" y="949" width="0.1424%" height="15" fill="rgb(225,150,9)" fg:x="27275" fg:w="300"/><text x="13.1972%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 samples, 0.14%)</title><rect x="12.9472%" y="933" width="0.1424%" height="15" fill="rgb(230,162,45)" fg:x="27275" fg:w="300"/><text x="13.1972%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (51 samples, 0.02%)</title><rect x="13.0972%" y="965" width="0.0242%" height="15" fill="rgb(222,14,52)" fg:x="27591" fg:w="51"/><text x="13.3472%" y="975.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (26 samples, 0.01%)</title><rect x="13.1090%" y="949" width="0.0123%" height="15" fill="rgb(254,198,14)" fg:x="27616" fg:w="26"/><text x="13.3590%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (1,674 samples, 0.79%)</title><rect x="12.3272%" y="1013" width="0.7946%" height="15" fill="rgb(220,217,30)" fg:x="25969" fg:w="1674"/><text x="12.5772%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_usize_as_zint (68 samples, 0.03%)</title><rect x="13.0896%" y="997" width="0.0323%" height="15" fill="rgb(215,146,41)" fg:x="27575" fg:w="68"/><text x="13.3396%" y="1007.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (68 samples, 0.03%)</title><rect x="13.0896%" y="981" width="0.0323%" height="15" fill="rgb(217,27,36)" fg:x="27575" fg:w="68"/><text x="13.3396%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (162 samples, 0.08%)</title><rect x="13.1565%" y="949" width="0.0769%" height="15" fill="rgb(219,218,39)" fg:x="27716" fg:w="162"/><text x="13.4065%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (162 samples, 0.08%)</title><rect x="13.1565%" y="933" width="0.0769%" height="15" fill="rgb(219,4,42)" fg:x="27716" fg:w="162"/><text x="13.4065%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (162 samples, 0.08%)</title><rect x="13.1565%" y="917" width="0.0769%" height="15" fill="rgb(249,119,36)" fg:x="27716" fg:w="162"/><text x="13.4065%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (160 samples, 0.08%)</title><rect x="13.1574%" y="901" width="0.0760%" height="15" fill="rgb(209,23,33)" fg:x="27718" fg:w="160"/><text x="13.4074%" y="911.50"></text></g><g><title>[libc.so.6] (159 samples, 0.08%)</title><rect x="13.1579%" y="885" width="0.0755%" height="15" fill="rgb(211,10,0)" fg:x="27719" fg:w="159"/><text x="13.4079%" y="895.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (235 samples, 0.11%)</title><rect x="13.1247%" y="997" width="0.1116%" height="15" fill="rgb(208,99,37)" fg:x="27649" fg:w="235"/><text x="13.3747%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (222 samples, 0.11%)</title><rect x="13.1309%" y="981" width="0.1054%" height="15" fill="rgb(213,132,31)" fg:x="27662" fg:w="222"/><text x="13.3809%" y="991.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (169 samples, 0.08%)</title><rect x="13.1560%" y="965" width="0.0802%" height="15" fill="rgb(243,129,40)" fg:x="27715" fg:w="169"/><text x="13.4060%" y="975.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_usize_as_zint (243 samples, 0.12%)</title><rect x="13.1218%" y="1013" width="0.1153%" height="15" fill="rgb(210,66,33)" fg:x="27643" fg:w="243"/><text x="13.3718%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.02%)</title><rect x="14.0731%" y="901" width="0.0157%" height="15" fill="rgb(209,189,4)" fg:x="29647" fg:w="33"/><text x="14.3231%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.02%)</title><rect x="14.0731%" y="885" width="0.0157%" height="15" fill="rgb(214,107,37)" fg:x="29647" fg:w="33"/><text x="14.3231%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (707 samples, 0.34%)</title><rect x="14.0484%" y="949" width="0.3356%" height="15" fill="rgb(245,88,54)" fg:x="29595" fg:w="707"/><text x="14.2984%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (707 samples, 0.34%)</title><rect x="14.0484%" y="933" width="0.3356%" height="15" fill="rgb(205,146,20)" fg:x="29595" fg:w="707"/><text x="14.2984%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (707 samples, 0.34%)</title><rect x="14.0484%" y="917" width="0.3356%" height="15" fill="rgb(220,161,25)" fg:x="29595" fg:w="707"/><text x="14.2984%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (622 samples, 0.30%)</title><rect x="14.0888%" y="901" width="0.2953%" height="15" fill="rgb(215,152,15)" fg:x="29680" fg:w="622"/><text x="14.3388%" y="911.50"></text></g><g><title>[libc.so.6] (573 samples, 0.27%)</title><rect x="14.1120%" y="885" width="0.2720%" height="15" fill="rgb(233,192,44)" fg:x="29729" fg:w="573"/><text x="14.3620%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (2,059 samples, 0.98%)</title><rect x="13.5329%" y="981" width="0.9774%" height="15" fill="rgb(240,170,46)" fg:x="28509" fg:w="2059"/><text x="13.7829%" y="991.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (1,031 samples, 0.49%)</title><rect x="14.0209%" y="965" width="0.4894%" height="15" fill="rgb(207,104,33)" fg:x="29537" fg:w="1031"/><text x="14.2709%" y="975.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::can_write_in_buf (266 samples, 0.13%)</title><rect x="14.3840%" y="949" width="0.1263%" height="15" fill="rgb(219,21,39)" fg:x="30302" fg:w="266"/><text x="14.6340%" y="959.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (2,639 samples, 1.25%)</title><rect x="13.2661%" y="997" width="1.2527%" height="15" fill="rgb(214,133,29)" fg:x="27947" fg:w="2639"/><text x="13.5161%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (2,713 samples, 1.29%)</title><rect x="13.2372%" y="1013" width="1.2878%" height="15" fill="rgb(226,93,6)" fg:x="27886" fg:w="2713"/><text x="13.4872%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (4,987 samples, 2.37%)</title><rect x="12.1796%" y="1045" width="2.3673%" height="15" fill="rgb(252,222,34)" fg:x="25658" fg:w="4987"/><text x="12.4296%" y="1055.50">&lt;z..</text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (4,844 samples, 2.30%)</title><rect x="12.2475%" y="1029" width="2.2994%" height="15" fill="rgb(252,92,48)" fg:x="25801" fg:w="4844"/><text x="12.4975%" y="1039.50">&lt;..</text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (5,145 samples, 2.44%)</title><rect x="12.1188%" y="1061" width="2.4423%" height="15" fill="rgb(245,223,24)" fg:x="25530" fg:w="5145"/><text x="12.3688%" y="1071.50">&lt;z..</text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as zenoh_buffers::traits::writer::BacktrackableWriter&gt;::mark (81 samples, 0.04%)</title><rect x="14.5701%" y="1061" width="0.0384%" height="15" fill="rgb(205,176,3)" fg:x="30694" fg:w="81"/><text x="14.8201%" y="1071.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (5,803 samples, 2.75%)</title><rect x="11.8649%" y="1077" width="2.7546%" height="15" fill="rgb(235,151,15)" fg:x="24995" fg:w="5803"/><text x="12.1149%" y="1087.50">ze..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::is_qos (28 samples, 0.01%)</title><rect x="14.6342%" y="1077" width="0.0133%" height="15" fill="rgb(237,209,11)" fg:x="30829" fg:w="28"/><text x="14.8842%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (10,067 samples, 4.78%)</title><rect x="9.8754%" y="1173" width="4.7787%" height="15" fill="rgb(243,227,24)" fg:x="20804" fg:w="10067"/><text x="10.1254%" y="1183.50">zenoh_..</text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (10,067 samples, 4.78%)</title><rect x="9.8754%" y="1157" width="4.7787%" height="15" fill="rgb(239,193,16)" fg:x="20804" fg:w="10067"/><text x="10.1254%" y="1167.50">zenoh_..</text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (10,067 samples, 4.78%)</title><rect x="9.8754%" y="1141" width="4.7787%" height="15" fill="rgb(231,27,9)" fg:x="20804" fg:w="10067"/><text x="10.1254%" y="1151.50">zenoh_..</text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (10,067 samples, 4.78%)</title><rect x="9.8754%" y="1125" width="4.7787%" height="15" fill="rgb(219,169,10)" fg:x="20804" fg:w="10067"/><text x="10.1254%" y="1135.50">zenoh_..</text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (10,067 samples, 4.78%)</title><rect x="9.8754%" y="1109" width="4.7787%" height="15" fill="rgb(244,229,43)" fg:x="20804" fg:w="10067"/><text x="10.1254%" y="1119.50">zenoh_..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (10,067 samples, 4.78%)</title><rect x="9.8754%" y="1093" width="4.7787%" height="15" fill="rgb(254,38,20)" fg:x="20804" fg:w="10067"/><text x="10.1254%" y="1103.50">zenoh_..</text></g><g><title>zenoh::net::routing::network::Network::send_on_link (10,068 samples, 4.78%)</title><rect x="9.8754%" y="1189" width="4.7792%" height="15" fill="rgb(250,47,30)" fg:x="20804" fg:w="10068"/><text x="10.1254%" y="1199.50">zenoh:..</text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (10,085 samples, 4.79%)</title><rect x="9.8726%" y="1237" width="4.7872%" height="15" fill="rgb(224,124,36)" fg:x="20798" fg:w="10085"/><text x="10.1226%" y="1247.50">&lt;zenoh..</text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (10,085 samples, 4.79%)</title><rect x="9.8726%" y="1221" width="4.7872%" height="15" fill="rgb(246,68,51)" fg:x="20798" fg:w="10085"/><text x="10.1226%" y="1231.50">&lt;zenoh..</text></g><g><title>zenoh::net::routing::network::Network::link_states (10,079 samples, 4.78%)</title><rect x="9.8754%" y="1205" width="4.7844%" height="15" fill="rgb(253,43,49)" fg:x="20804" fg:w="10079"/><text x="10.1254%" y="1215.50">zenoh:..</text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="14.6617%" y="1221" width="0.0166%" height="15" fill="rgb(219,54,36)" fg:x="30887" fg:w="35"/><text x="14.9117%" y="1231.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (44 samples, 0.02%)</title><rect x="14.8450%" y="421" width="0.0209%" height="15" fill="rgb(227,133,34)" fg:x="31273" fg:w="44"/><text x="15.0950%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (23 samples, 0.01%)</title><rect x="14.8549%" y="405" width="0.0109%" height="15" fill="rgb(247,227,15)" fg:x="31294" fg:w="23"/><text x="15.1049%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (220 samples, 0.10%)</title><rect x="15.1625%" y="373" width="0.1044%" height="15" fill="rgb(229,96,14)" fg:x="31942" fg:w="220"/><text x="15.4125%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (197 samples, 0.09%)</title><rect x="15.1735%" y="357" width="0.0935%" height="15" fill="rgb(220,79,17)" fg:x="31965" fg:w="197"/><text x="15.4235%" y="367.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::curr_slice (100 samples, 0.05%)</title><rect x="15.2670%" y="373" width="0.0475%" height="15" fill="rgb(205,131,53)" fg:x="32162" fg:w="100"/><text x="15.5170%" y="383.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::get_zslice (100 samples, 0.05%)</title><rect x="15.2670%" y="357" width="0.0475%" height="15" fill="rgb(209,50,29)" fg:x="32162" fg:w="100"/><text x="15.5170%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (948 samples, 0.45%)</title><rect x="14.9204%" y="389" width="0.4500%" height="15" fill="rgb(245,86,46)" fg:x="31432" fg:w="948"/><text x="15.1704%" y="399.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::skip_bytes_no_check (118 samples, 0.06%)</title><rect x="15.3144%" y="373" width="0.0560%" height="15" fill="rgb(235,66,46)" fg:x="32262" fg:w="118"/><text x="15.5644%" y="383.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (1,052 samples, 0.50%)</title><rect x="14.8715%" y="405" width="0.4994%" height="15" fill="rgb(232,148,31)" fg:x="31329" fg:w="1052"/><text x="15.1215%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (1,063 samples, 0.50%)</title><rect x="14.8668%" y="421" width="0.5046%" height="15" fill="rgb(217,149,8)" fg:x="31319" fg:w="1063"/><text x="15.1168%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (55 samples, 0.03%)</title><rect x="15.3714%" y="421" width="0.0261%" height="15" fill="rgb(209,183,11)" fg:x="32382" fg:w="55"/><text x="15.6214%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (214 samples, 0.10%)</title><rect x="15.4023%" y="357" width="0.1016%" height="15" fill="rgb(208,55,20)" fg:x="32447" fg:w="214"/><text x="15.6523%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (214 samples, 0.10%)</title><rect x="15.4023%" y="341" width="0.1016%" height="15" fill="rgb(218,39,14)" fg:x="32447" fg:w="214"/><text x="15.6523%" y="351.50"></text></g><g><title>alloc::alloc::alloc (214 samples, 0.10%)</title><rect x="15.4023%" y="325" width="0.1016%" height="15" fill="rgb(216,169,33)" fg:x="32447" fg:w="214"/><text x="15.6523%" y="335.50"></text></g><g><title>malloc (198 samples, 0.09%)</title><rect x="15.4098%" y="309" width="0.0940%" height="15" fill="rgb(233,80,24)" fg:x="32463" fg:w="198"/><text x="15.6598%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (225 samples, 0.11%)</title><rect x="15.3975%" y="421" width="0.1068%" height="15" fill="rgb(213,179,31)" fg:x="32437" fg:w="225"/><text x="15.6475%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (225 samples, 0.11%)</title><rect x="15.3975%" y="405" width="0.1068%" height="15" fill="rgb(209,19,5)" fg:x="32437" fg:w="225"/><text x="15.6475%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (223 samples, 0.11%)</title><rect x="15.3985%" y="389" width="0.1059%" height="15" fill="rgb(219,18,35)" fg:x="32439" fg:w="223"/><text x="15.6485%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (223 samples, 0.11%)</title><rect x="15.3985%" y="373" width="0.1059%" height="15" fill="rgb(209,169,16)" fg:x="32439" fg:w="223"/><text x="15.6485%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (1,765 samples, 0.84%)</title><rect x="14.6784%" y="437" width="0.8378%" height="15" fill="rgb(245,90,51)" fg:x="30922" fg:w="1765"/><text x="14.9284%" y="447.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (1,784 samples, 0.85%)</title><rect x="14.6784%" y="581" width="0.8468%" height="15" fill="rgb(220,99,45)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,784 samples, 0.85%)</title><rect x="14.6784%" y="565" width="0.8468%" height="15" fill="rgb(249,89,25)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="575.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (1,784 samples, 0.85%)</title><rect x="14.6784%" y="549" width="0.8468%" height="15" fill="rgb(239,193,0)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,784 samples, 0.85%)</title><rect x="14.6784%" y="533" width="0.8468%" height="15" fill="rgb(231,126,1)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (1,784 samples, 0.85%)</title><rect x="14.6784%" y="517" width="0.8468%" height="15" fill="rgb(243,166,3)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (1,784 samples, 0.85%)</title><rect x="14.6784%" y="501" width="0.8468%" height="15" fill="rgb(223,22,34)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (1,784 samples, 0.85%)</title><rect x="14.6784%" y="485" width="0.8468%" height="15" fill="rgb(251,52,51)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (1,784 samples, 0.85%)</title><rect x="14.6784%" y="469" width="0.8468%" height="15" fill="rgb(221,165,28)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (1,784 samples, 0.85%)</title><rect x="14.6784%" y="453" width="0.8468%" height="15" fill="rgb(218,121,47)" fg:x="30922" fg:w="1784"/><text x="14.9284%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="15.5252%" y="485" width="0.0119%" height="15" fill="rgb(209,120,9)" fg:x="32706" fg:w="25"/><text x="15.7752%" y="495.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (25 samples, 0.01%)</title><rect x="15.5252%" y="469" width="0.0119%" height="15" fill="rgb(236,68,12)" fg:x="32706" fg:w="25"/><text x="15.7752%" y="479.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (55 samples, 0.03%)</title><rect x="15.5371%" y="485" width="0.0261%" height="15" fill="rgb(225,194,26)" fg:x="32731" fg:w="55"/><text x="15.7871%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.03%)</title><rect x="15.5371%" y="469" width="0.0261%" height="15" fill="rgb(231,84,39)" fg:x="32731" fg:w="55"/><text x="15.7871%" y="479.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (55 samples, 0.03%)</title><rect x="15.5371%" y="453" width="0.0261%" height="15" fill="rgb(210,11,45)" fg:x="32731" fg:w="55"/><text x="15.7871%" y="463.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (29 samples, 0.01%)</title><rect x="15.5494%" y="437" width="0.0138%" height="15" fill="rgb(224,54,52)" fg:x="32757" fg:w="29"/><text x="15.7994%" y="447.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (89 samples, 0.04%)</title><rect x="15.5252%" y="501" width="0.0422%" height="15" fill="rgb(238,102,14)" fg:x="32706" fg:w="89"/><text x="15.7752%" y="511.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (25 samples, 0.01%)</title><rect x="15.5817%" y="453" width="0.0119%" height="15" fill="rgb(243,160,52)" fg:x="32825" fg:w="25"/><text x="15.8317%" y="463.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (25 samples, 0.01%)</title><rect x="15.5817%" y="437" width="0.0119%" height="15" fill="rgb(216,114,19)" fg:x="32825" fg:w="25"/><text x="15.8317%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (25 samples, 0.01%)</title><rect x="15.5817%" y="421" width="0.0119%" height="15" fill="rgb(244,166,37)" fg:x="32825" fg:w="25"/><text x="15.8317%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_contended (25 samples, 0.01%)</title><rect x="15.5817%" y="405" width="0.0119%" height="15" fill="rgb(246,29,44)" fg:x="32825" fg:w="25"/><text x="15.8317%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,931 samples, 0.92%)</title><rect x="14.6784%" y="597" width="0.9166%" height="15" fill="rgb(215,56,53)" fg:x="30922" fg:w="1931"/><text x="14.9284%" y="607.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (147 samples, 0.07%)</title><rect x="15.5252%" y="581" width="0.0698%" height="15" fill="rgb(217,60,2)" fg:x="32706" fg:w="147"/><text x="15.7752%" y="591.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (147 samples, 0.07%)</title><rect x="15.5252%" y="565" width="0.0698%" height="15" fill="rgb(207,26,24)" fg:x="32706" fg:w="147"/><text x="15.7752%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.07%)</title><rect x="15.5252%" y="549" width="0.0698%" height="15" fill="rgb(252,210,15)" fg:x="32706" fg:w="147"/><text x="15.7752%" y="559.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (147 samples, 0.07%)</title><rect x="15.5252%" y="533" width="0.0698%" height="15" fill="rgb(253,209,26)" fg:x="32706" fg:w="147"/><text x="15.7752%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 0.07%)</title><rect x="15.5252%" y="517" width="0.0698%" height="15" fill="rgb(238,170,14)" fg:x="32706" fg:w="147"/><text x="15.7752%" y="527.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (29 samples, 0.01%)</title><rect x="15.5812%" y="501" width="0.0138%" height="15" fill="rgb(216,178,15)" fg:x="32824" fg:w="29"/><text x="15.8312%" y="511.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (28 samples, 0.01%)</title><rect x="15.5817%" y="485" width="0.0133%" height="15" fill="rgb(250,197,2)" fg:x="32825" fg:w="28"/><text x="15.8317%" y="495.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (28 samples, 0.01%)</title><rect x="15.5817%" y="469" width="0.0133%" height="15" fill="rgb(212,70,42)" fg:x="32825" fg:w="28"/><text x="15.8317%" y="479.50"></text></g><g><title>&lt;async_io::reactor::Ready&lt;H,T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.02%)</title><rect x="15.6026%" y="293" width="0.0152%" height="15" fill="rgb(227,213,9)" fg:x="32869" fg:w="32"/><text x="15.8526%" y="303.50"></text></g><g><title>&lt;async_io::reactor::Writable&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="15.6026%" y="309" width="0.0166%" height="15" fill="rgb(245,99,25)" fg:x="32869" fg:w="35"/><text x="15.8526%" y="319.50"></text></g><g><title>connect (65 samples, 0.03%)</title><rect x="15.6334%" y="261" width="0.0309%" height="15" fill="rgb(250,82,29)" fg:x="32934" fg:w="65"/><text x="15.8834%" y="271.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="15.6377%" y="245" width="0.0266%" height="15" fill="rgb(241,226,54)" fg:x="32943" fg:w="56"/><text x="15.8877%" y="255.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="15.6377%" y="229" width="0.0266%" height="15" fill="rgb(221,99,41)" fg:x="32943" fg:w="56"/><text x="15.8877%" y="239.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="15.6377%" y="213" width="0.0266%" height="15" fill="rgb(213,90,21)" fg:x="32943" fg:w="56"/><text x="15.8877%" y="223.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="15.6377%" y="197" width="0.0266%" height="15" fill="rgb(205,208,24)" fg:x="32943" fg:w="56"/><text x="15.8877%" y="207.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="15.6410%" y="181" width="0.0233%" height="15" fill="rgb(246,31,12)" fg:x="32950" fg:w="49"/><text x="15.8910%" y="191.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="15.6424%" y="165" width="0.0218%" height="15" fill="rgb(213,154,6)" fg:x="32953" fg:w="46"/><text x="15.8924%" y="175.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="15.6439%" y="149" width="0.0204%" height="15" fill="rgb(222,163,29)" fg:x="32956" fg:w="43"/><text x="15.8939%" y="159.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="15.6472%" y="133" width="0.0171%" height="15" fill="rgb(227,201,8)" fg:x="32963" fg:w="36"/><text x="15.8972%" y="143.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="15.6486%" y="117" width="0.0157%" height="15" fill="rgb(233,9,32)" fg:x="32966" fg:w="33"/><text x="15.8986%" y="127.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="15.6519%" y="101" width="0.0123%" height="15" fill="rgb(217,54,24)" fg:x="32973" fg:w="26"/><text x="15.9019%" y="111.50"></text></g><g><title>socket2::socket::Socket::connect (77 samples, 0.04%)</title><rect x="15.6287%" y="293" width="0.0366%" height="15" fill="rgb(235,192,0)" fg:x="32924" fg:w="77"/><text x="15.8787%" y="303.50"></text></g><g><title>socket2::sys::connect (76 samples, 0.04%)</title><rect x="15.6292%" y="277" width="0.0361%" height="15" fill="rgb(235,45,9)" fg:x="32925" fg:w="76"/><text x="15.8792%" y="287.50"></text></g><g><title>socket2::socket::Socket::new (116 samples, 0.06%)</title><rect x="15.6652%" y="293" width="0.0551%" height="15" fill="rgb(246,42,40)" fg:x="33001" fg:w="116"/><text x="15.9152%" y="303.50"></text></g><g><title>socket2::socket::Socket::new_raw (114 samples, 0.05%)</title><rect x="15.6662%" y="277" width="0.0541%" height="15" fill="rgb(248,111,24)" fg:x="33003" fg:w="114"/><text x="15.9162%" y="287.50"></text></g><g><title>socket2::sys::socket (114 samples, 0.05%)</title><rect x="15.6662%" y="261" width="0.0541%" height="15" fill="rgb(249,65,22)" fg:x="33003" fg:w="114"/><text x="15.9162%" y="271.50"></text></g><g><title>__socket (114 samples, 0.05%)</title><rect x="15.6662%" y="245" width="0.0541%" height="15" fill="rgb(238,111,51)" fg:x="33003" fg:w="114"/><text x="15.9162%" y="255.50"></text></g><g><title>[unknown] (110 samples, 0.05%)</title><rect x="15.6681%" y="229" width="0.0522%" height="15" fill="rgb(250,118,22)" fg:x="33007" fg:w="110"/><text x="15.9181%" y="239.50"></text></g><g><title>[unknown] (109 samples, 0.05%)</title><rect x="15.6686%" y="213" width="0.0517%" height="15" fill="rgb(234,84,26)" fg:x="33008" fg:w="109"/><text x="15.9186%" y="223.50"></text></g><g><title>[unknown] (109 samples, 0.05%)</title><rect x="15.6686%" y="197" width="0.0517%" height="15" fill="rgb(243,172,12)" fg:x="33008" fg:w="109"/><text x="15.9186%" y="207.50"></text></g><g><title>[unknown] (105 samples, 0.05%)</title><rect x="15.6705%" y="181" width="0.0498%" height="15" fill="rgb(236,150,49)" fg:x="33012" fg:w="105"/><text x="15.9205%" y="191.50"></text></g><g><title>[unknown] (95 samples, 0.05%)</title><rect x="15.6752%" y="165" width="0.0451%" height="15" fill="rgb(225,197,26)" fg:x="33022" fg:w="95"/><text x="15.9252%" y="175.50"></text></g><g><title>[unknown] (94 samples, 0.04%)</title><rect x="15.6757%" y="149" width="0.0446%" height="15" fill="rgb(214,17,42)" fg:x="33023" fg:w="94"/><text x="15.9257%" y="159.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="15.6866%" y="133" width="0.0337%" height="15" fill="rgb(224,165,40)" fg:x="33046" fg:w="71"/><text x="15.9366%" y="143.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="15.6880%" y="117" width="0.0323%" height="15" fill="rgb(246,100,4)" fg:x="33049" fg:w="68"/><text x="15.9380%" y="127.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="15.6894%" y="101" width="0.0309%" height="15" fill="rgb(222,103,0)" fg:x="33052" fg:w="65"/><text x="15.9394%" y="111.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="15.6961%" y="85" width="0.0242%" height="15" fill="rgb(227,189,26)" fg:x="33066" fg:w="51"/><text x="15.9461%" y="95.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="15.7008%" y="69" width="0.0195%" height="15" fill="rgb(214,202,17)" fg:x="33076" fg:w="41"/><text x="15.9508%" y="79.50"></text></g><g><title>async_io::connect (199 samples, 0.09%)</title><rect x="15.6273%" y="309" width="0.0945%" height="15" fill="rgb(229,111,3)" fg:x="32921" fg:w="199"/><text x="15.8773%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (325 samples, 0.15%)</title><rect x="15.5969%" y="341" width="0.1543%" height="15" fill="rgb(229,172,15)" fg:x="32857" fg:w="325"/><text x="15.8469%" y="351.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (325 samples, 0.15%)</title><rect x="15.5969%" y="325" width="0.1543%" height="15" fill="rgb(230,224,35)" fg:x="32857" fg:w="325"/><text x="15.8469%" y="335.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::take_error (46 samples, 0.02%)</title><rect x="15.7293%" y="309" width="0.0218%" height="15" fill="rgb(251,141,6)" fg:x="33136" fg:w="46"/><text x="15.9793%" y="319.50"></text></g><g><title>std::sys::unix::net::Socket::take_error (46 samples, 0.02%)</title><rect x="15.7293%" y="293" width="0.0218%" height="15" fill="rgb(225,208,6)" fg:x="33136" fg:w="46"/><text x="15.9793%" y="303.50"></text></g><g><title>std::sys_common::net::getsockopt (46 samples, 0.02%)</title><rect x="15.7293%" y="277" width="0.0218%" height="15" fill="rgb(246,181,16)" fg:x="33136" fg:w="46"/><text x="15.9793%" y="287.50"></text></g><g><title>getsockopt (46 samples, 0.02%)</title><rect x="15.7293%" y="261" width="0.0218%" height="15" fill="rgb(227,129,36)" fg:x="33136" fg:w="46"/><text x="15.9793%" y="271.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="15.7303%" y="245" width="0.0209%" height="15" fill="rgb(248,117,24)" fg:x="33138" fg:w="44"/><text x="15.9803%" y="255.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="15.7303%" y="229" width="0.0209%" height="15" fill="rgb(214,185,35)" fg:x="33138" fg:w="44"/><text x="15.9803%" y="239.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="15.7307%" y="213" width="0.0204%" height="15" fill="rgb(236,150,34)" fg:x="33139" fg:w="43"/><text x="15.9807%" y="223.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="15.7312%" y="197" width="0.0199%" height="15" fill="rgb(243,228,27)" fg:x="33140" fg:w="42"/><text x="15.9812%" y="207.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="15.7317%" y="181" width="0.0195%" height="15" fill="rgb(245,77,44)" fg:x="33141" fg:w="41"/><text x="15.9817%" y="191.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (334 samples, 0.16%)</title><rect x="15.5950%" y="373" width="0.1585%" height="15" fill="rgb(235,214,42)" fg:x="32853" fg:w="334"/><text x="15.8450%" y="383.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (334 samples, 0.16%)</title><rect x="15.5950%" y="357" width="0.1585%" height="15" fill="rgb(221,74,3)" fg:x="32853" fg:w="334"/><text x="15.8450%" y="367.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="15.5950%" y="421" width="0.1657%" height="15" fill="rgb(206,121,29)" fg:x="32853" fg:w="349"/><text x="15.8450%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="15.5950%" y="405" width="0.1657%" height="15" fill="rgb(249,131,53)" fg:x="32853" fg:w="349"/><text x="15.8450%" y="415.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (349 samples, 0.17%)</title><rect x="15.5950%" y="389" width="0.1657%" height="15" fill="rgb(236,170,29)" fg:x="32853" fg:w="349"/><text x="15.8450%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2,308 samples, 1.10%)</title><rect x="14.6784%" y="1045" width="1.0956%" height="15" fill="rgb(247,96,15)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="1055.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (2,308 samples, 1.10%)</title><rect x="14.6784%" y="1029" width="1.0956%" height="15" fill="rgb(211,210,7)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (2,308 samples, 1.10%)</title><rect x="14.6784%" y="1013" width="1.0956%" height="15" fill="rgb(240,88,50)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="1023.50"></text></g><g><title>std::panicking::try (2,308 samples, 1.10%)</title><rect x="14.6784%" y="997" width="1.0956%" height="15" fill="rgb(209,229,26)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (2,308 samples, 1.10%)</title><rect x="14.6784%" y="981" width="1.0956%" height="15" fill="rgb(210,68,23)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="991.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (2,308 samples, 1.10%)</title><rect x="14.6784%" y="965" width="1.0956%" height="15" fill="rgb(229,180,13)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,308 samples, 1.10%)</title><rect x="14.6784%" y="949" width="1.0956%" height="15" fill="rgb(236,53,44)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,308 samples, 1.10%)</title><rect x="14.6784%" y="933" width="1.0956%" height="15" fill="rgb(244,214,29)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="943.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (2,308 samples, 1.10%)</title><rect x="14.6784%" y="917" width="1.0956%" height="15" fill="rgb(220,75,29)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on (2,308 samples, 1.10%)</title><rect x="14.6784%" y="901" width="1.0956%" height="15" fill="rgb(214,183,37)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,308 samples, 1.10%)</title><rect x="14.6784%" y="885" width="1.0956%" height="15" fill="rgb(239,117,29)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="895.50"></text></g><g><title>async_io::driver::block_on (2,308 samples, 1.10%)</title><rect x="14.6784%" y="869" width="1.0956%" height="15" fill="rgb(237,171,35)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,308 samples, 1.10%)</title><rect x="14.6784%" y="853" width="1.0956%" height="15" fill="rgb(229,178,53)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,308 samples, 1.10%)</title><rect x="14.6784%" y="837" width="1.0956%" height="15" fill="rgb(210,102,19)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,308 samples, 1.10%)</title><rect x="14.6784%" y="821" width="1.0956%" height="15" fill="rgb(235,127,22)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="831.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,308 samples, 1.10%)</title><rect x="14.6784%" y="805" width="1.0956%" height="15" fill="rgb(244,31,31)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,308 samples, 1.10%)</title><rect x="14.6784%" y="789" width="1.0956%" height="15" fill="rgb(231,43,21)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,308 samples, 1.10%)</title><rect x="14.6784%" y="773" width="1.0956%" height="15" fill="rgb(217,131,35)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,308 samples, 1.10%)</title><rect x="14.6784%" y="757" width="1.0956%" height="15" fill="rgb(221,149,4)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,308 samples, 1.10%)</title><rect x="14.6784%" y="741" width="1.0956%" height="15" fill="rgb(232,170,28)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,308 samples, 1.10%)</title><rect x="14.6784%" y="725" width="1.0956%" height="15" fill="rgb(238,56,10)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,308 samples, 1.10%)</title><rect x="14.6784%" y="709" width="1.0956%" height="15" fill="rgb(235,196,14)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,308 samples, 1.10%)</title><rect x="14.6784%" y="693" width="1.0956%" height="15" fill="rgb(216,45,48)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,308 samples, 1.10%)</title><rect x="14.6784%" y="677" width="1.0956%" height="15" fill="rgb(238,213,17)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,308 samples, 1.10%)</title><rect x="14.6784%" y="661" width="1.0956%" height="15" fill="rgb(212,13,2)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,308 samples, 1.10%)</title><rect x="14.6784%" y="645" width="1.0956%" height="15" fill="rgb(240,114,20)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,308 samples, 1.10%)</title><rect x="14.6784%" y="629" width="1.0956%" height="15" fill="rgb(228,41,40)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,308 samples, 1.10%)</title><rect x="14.6784%" y="613" width="1.0956%" height="15" fill="rgb(244,132,35)" fg:x="30922" fg:w="2308"/><text x="14.9284%" y="623.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (377 samples, 0.18%)</title><rect x="15.5950%" y="597" width="0.1790%" height="15" fill="rgb(253,189,4)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (377 samples, 0.18%)</title><rect x="15.5950%" y="581" width="0.1790%" height="15" fill="rgb(224,37,19)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="591.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (377 samples, 0.18%)</title><rect x="15.5950%" y="565" width="0.1790%" height="15" fill="rgb(235,223,18)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (377 samples, 0.18%)</title><rect x="15.5950%" y="549" width="0.1790%" height="15" fill="rgb(235,163,25)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="559.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (377 samples, 0.18%)</title><rect x="15.5950%" y="533" width="0.1790%" height="15" fill="rgb(217,145,28)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (377 samples, 0.18%)</title><rect x="15.5950%" y="517" width="0.1790%" height="15" fill="rgb(223,223,32)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="527.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (377 samples, 0.18%)</title><rect x="15.5950%" y="501" width="0.1790%" height="15" fill="rgb(227,189,39)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (377 samples, 0.18%)</title><rect x="15.5950%" y="485" width="0.1790%" height="15" fill="rgb(248,10,22)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="495.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (377 samples, 0.18%)</title><rect x="15.5950%" y="469" width="0.1790%" height="15" fill="rgb(248,46,39)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (377 samples, 0.18%)</title><rect x="15.5950%" y="453" width="0.1790%" height="15" fill="rgb(248,113,48)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="463.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (377 samples, 0.18%)</title><rect x="15.5950%" y="437" width="0.1790%" height="15" fill="rgb(245,16,25)" fg:x="32853" fg:w="377"/><text x="15.8450%" y="447.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link (28 samples, 0.01%)</title><rect x="15.7606%" y="421" width="0.0133%" height="15" fill="rgb(249,152,16)" fg:x="33202" fg:w="28"/><text x="16.0106%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (28 samples, 0.01%)</title><rect x="15.7606%" y="405" width="0.0133%" height="15" fill="rgb(250,16,1)" fg:x="33202" fg:w="28"/><text x="16.0106%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.01%)</title><rect x="15.7606%" y="389" width="0.0133%" height="15" fill="rgb(249,138,3)" fg:x="33202" fg:w="28"/><text x="16.0106%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="15.7606%" y="373" width="0.0133%" height="15" fill="rgb(227,71,41)" fg:x="33202" fg:w="28"/><text x="16.0106%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="15.7606%" y="357" width="0.0133%" height="15" fill="rgb(209,184,23)" fg:x="33202" fg:w="28"/><text x="16.0106%" y="367.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="15.7606%" y="341" width="0.0133%" height="15" fill="rgb(223,215,31)" fg:x="33202" fg:w="28"/><text x="16.0106%" y="351.50"></text></g><g><title>malloc (28 samples, 0.01%)</title><rect x="15.7606%" y="325" width="0.0133%" height="15" fill="rgb(210,146,28)" fg:x="33202" fg:w="28"/><text x="16.0106%" y="335.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="15.7606%" y="309" width="0.0133%" height="15" fill="rgb(209,183,41)" fg:x="33202" fg:w="28"/><text x="16.0106%" y="319.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (255 samples, 0.12%)</title><rect x="15.7744%" y="357" width="0.1210%" height="15" fill="rgb(209,224,45)" fg:x="33231" fg:w="255"/><text x="16.0244%" y="367.50"></text></g><g><title>cfree (101 samples, 0.05%)</title><rect x="16.0146%" y="341" width="0.0479%" height="15" fill="rgb(224,209,51)" fg:x="33737" fg:w="101"/><text x="16.2646%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (39 samples, 0.02%)</title><rect x="16.0640%" y="341" width="0.0185%" height="15" fill="rgb(223,17,39)" fg:x="33841" fg:w="39"/><text x="16.3140%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::wait_next (34 samples, 0.02%)</title><rect x="16.0825%" y="341" width="0.0161%" height="15" fill="rgb(234,204,37)" fg:x="33880" fg:w="34"/><text x="16.3325%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (34 samples, 0.02%)</title><rect x="16.0825%" y="325" width="0.0161%" height="15" fill="rgb(236,120,5)" fg:x="33880" fg:w="34"/><text x="16.3325%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (34 samples, 0.02%)</title><rect x="16.0825%" y="309" width="0.0161%" height="15" fill="rgb(248,97,27)" fg:x="33880" fg:w="34"/><text x="16.3325%" y="319.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (222 samples, 0.11%)</title><rect x="16.0986%" y="341" width="0.1054%" height="15" fill="rgb(240,66,17)" fg:x="33914" fg:w="222"/><text x="16.3486%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (70 samples, 0.03%)</title><rect x="16.2045%" y="341" width="0.0332%" height="15" fill="rgb(210,79,3)" fg:x="34137" fg:w="70"/><text x="16.4545%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (70 samples, 0.03%)</title><rect x="16.2045%" y="325" width="0.0332%" height="15" fill="rgb(214,176,27)" fg:x="34137" fg:w="70"/><text x="16.4545%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (82 samples, 0.04%)</title><rect x="16.2472%" y="341" width="0.0389%" height="15" fill="rgb(235,185,3)" fg:x="34227" fg:w="82"/><text x="16.4972%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_or (82 samples, 0.04%)</title><rect x="16.2472%" y="325" width="0.0389%" height="15" fill="rgb(227,24,12)" fg:x="34227" fg:w="82"/><text x="16.4972%" y="335.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1,242 samples, 0.59%)</title><rect x="15.7744%" y="373" width="0.5896%" height="15" fill="rgb(252,169,48)" fg:x="33231" fg:w="1242"/><text x="16.0244%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (987 samples, 0.47%)</title><rect x="15.8955%" y="357" width="0.4685%" height="15" fill="rgb(212,65,1)" fg:x="33486" fg:w="987"/><text x="16.1455%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (164 samples, 0.08%)</title><rect x="16.2861%" y="341" width="0.0778%" height="15" fill="rgb(242,39,24)" fg:x="34309" fg:w="164"/><text x="16.5361%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (164 samples, 0.08%)</title><rect x="16.2861%" y="325" width="0.0778%" height="15" fill="rgb(249,32,23)" fg:x="34309" fg:w="164"/><text x="16.5361%" y="335.50"></text></g><g><title>async_executor::steal (2,465 samples, 1.17%)</title><rect x="15.7744%" y="389" width="1.1701%" height="15" fill="rgb(251,195,23)" fg:x="33231" fg:w="2465"/><text x="16.0244%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,223 samples, 0.58%)</title><rect x="16.3640%" y="373" width="0.5805%" height="15" fill="rgb(236,174,8)" fg:x="34473" fg:w="1223"/><text x="16.6140%" y="383.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,223 samples, 0.58%)</title><rect x="16.3640%" y="357" width="0.5805%" height="15" fill="rgb(220,197,8)" fg:x="34473" fg:w="1223"/><text x="16.6140%" y="367.50"></text></g><g><title>[libc.so.6] (106 samples, 0.05%)</title><rect x="16.9706%" y="341" width="0.0503%" height="15" fill="rgb(240,108,37)" fg:x="35751" fg:w="106"/><text x="17.2206%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (169 samples, 0.08%)</title><rect x="16.9445%" y="389" width="0.0802%" height="15" fill="rgb(232,176,24)" fg:x="35696" fg:w="169"/><text x="17.1945%" y="399.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (169 samples, 0.08%)</title><rect x="16.9445%" y="373" width="0.0802%" height="15" fill="rgb(243,35,29)" fg:x="35696" fg:w="169"/><text x="17.1945%" y="383.50"></text></g><g><title>cfree (169 samples, 0.08%)</title><rect x="16.9445%" y="357" width="0.0802%" height="15" fill="rgb(210,37,18)" fg:x="35696" fg:w="169"/><text x="17.1945%" y="367.50"></text></g><g><title>fastrand::RNG::__getit (417 samples, 0.20%)</title><rect x="17.0352%" y="341" width="0.1979%" height="15" fill="rgb(224,184,40)" fg:x="35887" fg:w="417"/><text x="17.2852%" y="351.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (252 samples, 0.12%)</title><rect x="17.1135%" y="325" width="0.1196%" height="15" fill="rgb(236,39,29)" fg:x="36052" fg:w="252"/><text x="17.3635%" y="335.50"></text></g><g><title>fastrand::Rng::usize (42 samples, 0.02%)</title><rect x="17.2331%" y="325" width="0.0199%" height="15" fill="rgb(232,48,39)" fg:x="36304" fg:w="42"/><text x="17.4831%" y="335.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (33 samples, 0.02%)</title><rect x="17.2374%" y="309" width="0.0157%" height="15" fill="rgb(236,34,42)" fg:x="36313" fg:w="33"/><text x="17.4874%" y="319.50"></text></g><g><title>fastrand::usize::{{closure}} (44 samples, 0.02%)</title><rect x="17.2331%" y="341" width="0.0209%" height="15" fill="rgb(243,106,37)" fg:x="36304" fg:w="44"/><text x="17.4831%" y="351.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (3,119 samples, 1.48%)</title><rect x="15.7744%" y="405" width="1.4806%" height="15" fill="rgb(218,96,6)" fg:x="33231" fg:w="3119"/><text x="16.0244%" y="415.50"></text></g><g><title>fastrand::usize (485 samples, 0.23%)</title><rect x="17.0247%" y="389" width="0.2302%" height="15" fill="rgb(235,130,12)" fg:x="35865" fg:w="485"/><text x="17.2747%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (485 samples, 0.23%)</title><rect x="17.0247%" y="373" width="0.2302%" height="15" fill="rgb(231,95,0)" fg:x="35865" fg:w="485"/><text x="17.2747%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (469 samples, 0.22%)</title><rect x="17.0323%" y="357" width="0.2226%" height="15" fill="rgb(228,12,23)" fg:x="35881" fg:w="469"/><text x="17.2823%" y="367.50"></text></g><g><title>async_io::reactor::Reactor::notify (44 samples, 0.02%)</title><rect x="17.2554%" y="341" width="0.0209%" height="15" fill="rgb(216,12,1)" fg:x="36351" fg:w="44"/><text x="17.5054%" y="351.50"></text></g><g><title>polling::Poller::notify (44 samples, 0.02%)</title><rect x="17.2554%" y="325" width="0.0209%" height="15" fill="rgb(219,59,3)" fg:x="36351" fg:w="44"/><text x="17.5054%" y="335.50"></text></g><g><title>polling::epoll::Poller::notify (33 samples, 0.02%)</title><rect x="17.2607%" y="309" width="0.0157%" height="15" fill="rgb(215,208,46)" fg:x="36362" fg:w="33"/><text x="17.5107%" y="319.50"></text></g><g><title>write (33 samples, 0.02%)</title><rect x="17.2607%" y="293" width="0.0157%" height="15" fill="rgb(254,224,29)" fg:x="36362" fg:w="33"/><text x="17.5107%" y="303.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="17.2616%" y="277" width="0.0147%" height="15" fill="rgb(232,14,29)" fg:x="36364" fg:w="31"/><text x="17.5116%" y="287.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="17.2616%" y="261" width="0.0147%" height="15" fill="rgb(208,45,52)" fg:x="36364" fg:w="31"/><text x="17.5116%" y="271.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="17.2616%" y="245" width="0.0147%" height="15" fill="rgb(234,191,28)" fg:x="36364" fg:w="31"/><text x="17.5116%" y="255.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="17.2616%" y="229" width="0.0147%" height="15" fill="rgb(244,67,43)" fg:x="36364" fg:w="31"/><text x="17.5116%" y="239.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="17.2621%" y="213" width="0.0142%" height="15" fill="rgb(236,189,24)" fg:x="36365" fg:w="30"/><text x="17.5121%" y="223.50"></text></g><g><title>async_executor::State::notify (67 samples, 0.03%)</title><rect x="17.2550%" y="405" width="0.0318%" height="15" fill="rgb(239,214,33)" fg:x="36350" fg:w="67"/><text x="17.5050%" y="415.50"></text></g><g><title>core::task::wake::Waker::wake (67 samples, 0.03%)</title><rect x="17.2550%" y="389" width="0.0318%" height="15" fill="rgb(226,176,41)" fg:x="36350" fg:w="67"/><text x="17.5050%" y="399.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (66 samples, 0.03%)</title><rect x="17.2554%" y="373" width="0.0313%" height="15" fill="rgb(248,47,8)" fg:x="36351" fg:w="66"/><text x="17.5054%" y="383.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (66 samples, 0.03%)</title><rect x="17.2554%" y="357" width="0.0313%" height="15" fill="rgb(218,81,44)" fg:x="36351" fg:w="66"/><text x="17.5054%" y="367.50"></text></g><g><title>parking::Unparker::unpark (22 samples, 0.01%)</title><rect x="17.2763%" y="341" width="0.0104%" height="15" fill="rgb(213,98,6)" fg:x="36395" fg:w="22"/><text x="17.5263%" y="351.50"></text></g><g><title>parking::Inner::unpark (22 samples, 0.01%)</title><rect x="17.2763%" y="325" width="0.0104%" height="15" fill="rgb(222,85,22)" fg:x="36395" fg:w="22"/><text x="17.5263%" y="335.50"></text></g><g><title>std::sys::unix::futex::futex_wait (47 samples, 0.02%)</title><rect x="17.2963%" y="325" width="0.0223%" height="15" fill="rgb(239,46,39)" fg:x="36437" fg:w="47"/><text x="17.5463%" y="335.50"></text></g><g><title>syscall (41 samples, 0.02%)</title><rect x="17.2991%" y="309" width="0.0195%" height="15" fill="rgb(237,12,29)" fg:x="36443" fg:w="41"/><text x="17.5491%" y="319.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="17.3001%" y="293" width="0.0185%" height="15" fill="rgb(214,77,8)" fg:x="36445" fg:w="39"/><text x="17.5501%" y="303.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="17.3010%" y="277" width="0.0176%" height="15" fill="rgb(217,168,37)" fg:x="36447" fg:w="37"/><text x="17.5510%" y="287.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="17.3010%" y="261" width="0.0176%" height="15" fill="rgb(221,217,23)" fg:x="36447" fg:w="37"/><text x="17.5510%" y="271.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="17.3024%" y="245" width="0.0161%" height="15" fill="rgb(243,229,36)" fg:x="36450" fg:w="34"/><text x="17.5524%" y="255.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="17.3029%" y="229" width="0.0157%" height="15" fill="rgb(251,163,40)" fg:x="36451" fg:w="33"/><text x="17.5529%" y="239.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="17.3043%" y="213" width="0.0142%" height="15" fill="rgb(237,222,12)" fg:x="36454" fg:w="30"/><text x="17.5543%" y="223.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="17.3048%" y="197" width="0.0138%" height="15" fill="rgb(248,132,6)" fg:x="36455" fg:w="29"/><text x="17.5548%" y="207.50"></text></g><g><title>async_executor::Ticker::sleep (265 samples, 0.13%)</title><rect x="17.2868%" y="405" width="0.1258%" height="15" fill="rgb(227,167,50)" fg:x="36417" fg:w="265"/><text x="17.5368%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (261 samples, 0.12%)</title><rect x="17.2887%" y="389" width="0.1239%" height="15" fill="rgb(242,84,37)" fg:x="36421" fg:w="261"/><text x="17.5387%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (261 samples, 0.12%)</title><rect x="17.2887%" y="373" width="0.1239%" height="15" fill="rgb(212,4,50)" fg:x="36421" fg:w="261"/><text x="17.5387%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (261 samples, 0.12%)</title><rect x="17.2887%" y="357" width="0.1239%" height="15" fill="rgb(230,228,32)" fg:x="36421" fg:w="261"/><text x="17.5387%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (261 samples, 0.12%)</title><rect x="17.2887%" y="341" width="0.1239%" height="15" fill="rgb(248,217,23)" fg:x="36421" fg:w="261"/><text x="17.5387%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (198 samples, 0.09%)</title><rect x="17.3186%" y="325" width="0.0940%" height="15" fill="rgb(238,197,32)" fg:x="36484" fg:w="198"/><text x="17.5686%" y="335.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,499 samples, 1.66%)</title><rect x="15.7744%" y="469" width="1.6609%" height="15" fill="rgb(236,106,1)" fg:x="33231" fg:w="3499"/><text x="16.0244%" y="479.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (3,499 samples, 1.66%)</title><rect x="15.7744%" y="453" width="1.6609%" height="15" fill="rgb(219,228,13)" fg:x="33231" fg:w="3499"/><text x="16.0244%" y="463.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3,499 samples, 1.66%)</title><rect x="15.7744%" y="437" width="1.6609%" height="15" fill="rgb(238,30,35)" fg:x="33231" fg:w="3499"/><text x="16.0244%" y="447.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (3,499 samples, 1.66%)</title><rect x="15.7744%" y="421" width="1.6609%" height="15" fill="rgb(236,70,23)" fg:x="33231" fg:w="3499"/><text x="16.0244%" y="431.50"></text></g><g><title>async_executor::Ticker::wake (48 samples, 0.02%)</title><rect x="17.4126%" y="405" width="0.0228%" height="15" fill="rgb(249,104,48)" fg:x="36682" fg:w="48"/><text x="17.6626%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.02%)</title><rect x="17.4187%" y="389" width="0.0166%" height="15" fill="rgb(254,117,50)" fg:x="36695" fg:w="35"/><text x="17.6687%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (35 samples, 0.02%)</title><rect x="17.4187%" y="373" width="0.0166%" height="15" fill="rgb(223,152,4)" fg:x="36695" fg:w="35"/><text x="17.6687%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (35 samples, 0.02%)</title><rect x="17.4187%" y="357" width="0.0166%" height="15" fill="rgb(245,6,2)" fg:x="36695" fg:w="35"/><text x="17.6687%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (35 samples, 0.02%)</title><rect x="17.4187%" y="341" width="0.0166%" height="15" fill="rgb(249,150,24)" fg:x="36695" fg:w="35"/><text x="17.6687%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (27 samples, 0.01%)</title><rect x="17.4225%" y="325" width="0.0128%" height="15" fill="rgb(228,185,42)" fg:x="36703" fg:w="27"/><text x="17.6725%" y="335.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,501 samples, 1.66%)</title><rect x="15.7744%" y="501" width="1.6619%" height="15" fill="rgb(226,39,33)" fg:x="33231" fg:w="3501"/><text x="16.0244%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (3,501 samples, 1.66%)</title><rect x="15.7744%" y="485" width="1.6619%" height="15" fill="rgb(221,166,19)" fg:x="33231" fg:w="3501"/><text x="16.0244%" y="495.50"></text></g><g><title>async_executor::State::notify (25 samples, 0.01%)</title><rect x="17.4363%" y="453" width="0.0119%" height="15" fill="rgb(209,109,2)" fg:x="36732" fg:w="25"/><text x="17.6863%" y="463.50"></text></g><g><title>core::task::wake::Waker::wake (25 samples, 0.01%)</title><rect x="17.4363%" y="437" width="0.0119%" height="15" fill="rgb(252,216,26)" fg:x="36732" fg:w="25"/><text x="17.6863%" y="447.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (25 samples, 0.01%)</title><rect x="17.4363%" y="421" width="0.0119%" height="15" fill="rgb(227,173,36)" fg:x="36732" fg:w="25"/><text x="17.6863%" y="431.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (25 samples, 0.01%)</title><rect x="17.4363%" y="405" width="0.0119%" height="15" fill="rgb(209,90,7)" fg:x="36732" fg:w="25"/><text x="17.6863%" y="415.50"></text></g><g><title>parking::Unparker::unpark (25 samples, 0.01%)</title><rect x="17.4363%" y="389" width="0.0119%" height="15" fill="rgb(250,194,11)" fg:x="36732" fg:w="25"/><text x="17.6863%" y="399.50"></text></g><g><title>parking::Inner::unpark (23 samples, 0.01%)</title><rect x="17.4372%" y="373" width="0.0109%" height="15" fill="rgb(220,72,50)" fg:x="36734" fg:w="23"/><text x="17.6872%" y="383.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,529 samples, 1.68%)</title><rect x="15.7739%" y="549" width="1.6752%" height="15" fill="rgb(222,106,48)" fg:x="33230" fg:w="3529"/><text x="16.0239%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,528 samples, 1.67%)</title><rect x="15.7744%" y="533" width="1.6747%" height="15" fill="rgb(216,220,45)" fg:x="33231" fg:w="3528"/><text x="16.0244%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (3,528 samples, 1.67%)</title><rect x="15.7744%" y="517" width="1.6747%" height="15" fill="rgb(234,112,18)" fg:x="33231" fg:w="3528"/><text x="16.0244%" y="527.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (27 samples, 0.01%)</title><rect x="17.4363%" y="501" width="0.0128%" height="15" fill="rgb(206,179,9)" fg:x="36732" fg:w="27"/><text x="17.6863%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (27 samples, 0.01%)</title><rect x="17.4363%" y="485" width="0.0128%" height="15" fill="rgb(215,115,40)" fg:x="36732" fg:w="27"/><text x="17.6863%" y="495.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (27 samples, 0.01%)</title><rect x="17.4363%" y="469" width="0.0128%" height="15" fill="rgb(222,69,34)" fg:x="36732" fg:w="27"/><text x="17.6863%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,535 samples, 1.68%)</title><rect x="15.7739%" y="677" width="1.6780%" height="15" fill="rgb(209,161,10)" fg:x="33230" fg:w="3535"/><text x="16.0239%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,535 samples, 1.68%)</title><rect x="15.7739%" y="661" width="1.6780%" height="15" fill="rgb(217,6,38)" fg:x="33230" fg:w="3535"/><text x="16.0239%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,535 samples, 1.68%)</title><rect x="15.7739%" y="645" width="1.6780%" height="15" fill="rgb(229,229,48)" fg:x="33230" fg:w="3535"/><text x="16.0239%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,535 samples, 1.68%)</title><rect x="15.7739%" y="629" width="1.6780%" height="15" fill="rgb(225,21,28)" fg:x="33230" fg:w="3535"/><text x="16.0239%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,535 samples, 1.68%)</title><rect x="15.7739%" y="613" width="1.6780%" height="15" fill="rgb(206,33,13)" fg:x="33230" fg:w="3535"/><text x="16.0239%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,535 samples, 1.68%)</title><rect x="15.7739%" y="597" width="1.6780%" height="15" fill="rgb(242,178,17)" fg:x="33230" fg:w="3535"/><text x="16.0239%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,535 samples, 1.68%)</title><rect x="15.7739%" y="581" width="1.6780%" height="15" fill="rgb(220,162,5)" fg:x="33230" fg:w="3535"/><text x="16.0239%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (3,535 samples, 1.68%)</title><rect x="15.7739%" y="565" width="1.6780%" height="15" fill="rgb(210,33,43)" fg:x="33230" fg:w="3535"/><text x="16.0239%" y="575.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (3,541 samples, 1.68%)</title><rect x="15.7739%" y="693" width="1.6809%" height="15" fill="rgb(216,116,54)" fg:x="33230" fg:w="3541"/><text x="16.0239%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,564 samples, 1.69%)</title><rect x="15.7739%" y="757" width="1.6918%" height="15" fill="rgb(249,92,24)" fg:x="33230" fg:w="3564"/><text x="16.0239%" y="767.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (3,564 samples, 1.69%)</title><rect x="15.7739%" y="741" width="1.6918%" height="15" fill="rgb(231,189,14)" fg:x="33230" fg:w="3564"/><text x="16.0239%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,564 samples, 1.69%)</title><rect x="15.7739%" y="725" width="1.6918%" height="15" fill="rgb(230,8,41)" fg:x="33230" fg:w="3564"/><text x="16.0239%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (3,564 samples, 1.69%)</title><rect x="15.7739%" y="709" width="1.6918%" height="15" fill="rgb(249,7,27)" fg:x="33230" fg:w="3564"/><text x="16.0239%" y="719.50"></text></g><g><title>async_executor::Executor::state (23 samples, 0.01%)</title><rect x="17.4548%" y="693" width="0.0109%" height="15" fill="rgb(232,86,5)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (23 samples, 0.01%)</title><rect x="17.4548%" y="677" width="0.0109%" height="15" fill="rgb(224,175,18)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (23 samples, 0.01%)</title><rect x="17.4548%" y="661" width="0.0109%" height="15" fill="rgb(220,129,12)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (23 samples, 0.01%)</title><rect x="17.4548%" y="645" width="0.0109%" height="15" fill="rgb(210,19,36)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="655.50"></text></g><g><title>once_cell::imp::initialize_or_wait (23 samples, 0.01%)</title><rect x="17.4548%" y="629" width="0.0109%" height="15" fill="rgb(219,96,14)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.01%)</title><rect x="17.4548%" y="613" width="0.0109%" height="15" fill="rgb(249,106,1)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="623.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (23 samples, 0.01%)</title><rect x="17.4548%" y="597" width="0.0109%" height="15" fill="rgb(249,155,20)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (23 samples, 0.01%)</title><rect x="17.4548%" y="581" width="0.0109%" height="15" fill="rgb(244,168,9)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="591.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (23 samples, 0.01%)</title><rect x="17.4548%" y="565" width="0.0109%" height="15" fill="rgb(216,23,50)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (23 samples, 0.01%)</title><rect x="17.4548%" y="549" width="0.0109%" height="15" fill="rgb(224,219,20)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.01%)</title><rect x="17.4548%" y="533" width="0.0109%" height="15" fill="rgb(222,156,15)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.01%)</title><rect x="17.4548%" y="517" width="0.0109%" height="15" fill="rgb(231,97,17)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.01%)</title><rect x="17.4548%" y="501" width="0.0109%" height="15" fill="rgb(218,70,48)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="511.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.01%)</title><rect x="17.4548%" y="485" width="0.0109%" height="15" fill="rgb(212,196,52)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="495.50"></text></g><g><title>malloc (23 samples, 0.01%)</title><rect x="17.4548%" y="469" width="0.0109%" height="15" fill="rgb(243,203,18)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="479.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="17.4548%" y="453" width="0.0109%" height="15" fill="rgb(252,125,41)" fg:x="36771" fg:w="23"/><text x="17.7048%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (44 samples, 0.02%)</title><rect x="17.4714%" y="709" width="0.0209%" height="15" fill="rgb(223,180,33)" fg:x="36806" fg:w="44"/><text x="17.7214%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (26 samples, 0.01%)</title><rect x="17.4800%" y="693" width="0.0123%" height="15" fill="rgb(254,159,46)" fg:x="36824" fg:w="26"/><text x="17.7300%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.03%)</title><rect x="17.4667%" y="725" width="0.0342%" height="15" fill="rgb(254,38,10)" fg:x="36796" fg:w="72"/><text x="17.7167%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.01%)</title><rect x="17.5028%" y="693" width="0.0104%" height="15" fill="rgb(208,217,32)" fg:x="36872" fg:w="22"/><text x="17.7528%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.01%)</title><rect x="17.5028%" y="725" width="0.0109%" height="15" fill="rgb(221,120,13)" fg:x="36872" fg:w="23"/><text x="17.7528%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (23 samples, 0.01%)</title><rect x="17.5028%" y="709" width="0.0109%" height="15" fill="rgb(246,54,52)" fg:x="36872" fg:w="23"/><text x="17.7528%" y="719.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (125 samples, 0.06%)</title><rect x="17.4667%" y="741" width="0.0593%" height="15" fill="rgb(242,34,25)" fg:x="36796" fg:w="125"/><text x="17.7167%" y="751.50"></text></g><g><title>epoll_wait (64 samples, 0.03%)</title><rect x="17.5322%" y="709" width="0.0304%" height="15" fill="rgb(247,209,9)" fg:x="36934" fg:w="64"/><text x="17.7822%" y="719.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="17.5341%" y="693" width="0.0285%" height="15" fill="rgb(228,71,26)" fg:x="36938" fg:w="60"/><text x="17.7841%" y="703.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="17.5346%" y="677" width="0.0280%" height="15" fill="rgb(222,145,49)" fg:x="36939" fg:w="59"/><text x="17.7846%" y="687.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="17.5350%" y="661" width="0.0275%" height="15" fill="rgb(218,121,17)" fg:x="36940" fg:w="58"/><text x="17.7850%" y="671.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="17.5374%" y="645" width="0.0252%" height="15" fill="rgb(244,50,7)" fg:x="36945" fg:w="53"/><text x="17.7874%" y="655.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="17.5412%" y="629" width="0.0214%" height="15" fill="rgb(246,229,37)" fg:x="36953" fg:w="45"/><text x="17.7912%" y="639.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="17.5488%" y="613" width="0.0138%" height="15" fill="rgb(225,18,5)" fg:x="36969" fg:w="29"/><text x="17.7988%" y="623.50"></text></g><g><title>read (126 samples, 0.06%)</title><rect x="17.5645%" y="709" width="0.0598%" height="15" fill="rgb(213,204,8)" fg:x="37002" fg:w="126"/><text x="17.8145%" y="719.50"></text></g><g><title>[unknown] (116 samples, 0.06%)</title><rect x="17.5692%" y="693" width="0.0551%" height="15" fill="rgb(238,103,6)" fg:x="37012" fg:w="116"/><text x="17.8192%" y="703.50"></text></g><g><title>[unknown] (109 samples, 0.05%)</title><rect x="17.5725%" y="677" width="0.0517%" height="15" fill="rgb(222,25,35)" fg:x="37019" fg:w="109"/><text x="17.8225%" y="687.50"></text></g><g><title>[unknown] (109 samples, 0.05%)</title><rect x="17.5725%" y="661" width="0.0517%" height="15" fill="rgb(213,203,35)" fg:x="37019" fg:w="109"/><text x="17.8225%" y="671.50"></text></g><g><title>[unknown] (106 samples, 0.05%)</title><rect x="17.5740%" y="645" width="0.0503%" height="15" fill="rgb(221,79,53)" fg:x="37022" fg:w="106"/><text x="17.8240%" y="655.50"></text></g><g><title>[unknown] (87 samples, 0.04%)</title><rect x="17.5830%" y="629" width="0.0413%" height="15" fill="rgb(243,200,35)" fg:x="37041" fg:w="87"/><text x="17.8330%" y="639.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="17.5986%" y="613" width="0.0256%" height="15" fill="rgb(248,60,25)" fg:x="37074" fg:w="54"/><text x="17.8486%" y="623.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="17.6020%" y="597" width="0.0223%" height="15" fill="rgb(227,53,46)" fg:x="37081" fg:w="47"/><text x="17.8520%" y="607.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="17.6129%" y="581" width="0.0114%" height="15" fill="rgb(216,120,32)" fg:x="37104" fg:w="24"/><text x="17.8629%" y="591.50"></text></g><g><title>polling::Poller::wait (419 samples, 0.20%)</title><rect x="17.5260%" y="741" width="0.1989%" height="15" fill="rgb(220,134,1)" fg:x="36921" fg:w="419"/><text x="17.7760%" y="751.50"></text></g><g><title>polling::epoll::Poller::wait (419 samples, 0.20%)</title><rect x="17.5260%" y="725" width="0.1989%" height="15" fill="rgb(237,168,5)" fg:x="36921" fg:w="419"/><text x="17.7760%" y="735.50"></text></g><g><title>syscall (206 samples, 0.10%)</title><rect x="17.6271%" y="709" width="0.0978%" height="15" fill="rgb(231,100,33)" fg:x="37134" fg:w="206"/><text x="17.8771%" y="719.50"></text></g><g><title>[unknown] (201 samples, 0.10%)</title><rect x="17.6295%" y="693" width="0.0954%" height="15" fill="rgb(236,177,47)" fg:x="37139" fg:w="201"/><text x="17.8795%" y="703.50"></text></g><g><title>[unknown] (194 samples, 0.09%)</title><rect x="17.6328%" y="677" width="0.0921%" height="15" fill="rgb(235,7,49)" fg:x="37146" fg:w="194"/><text x="17.8828%" y="687.50"></text></g><g><title>[unknown] (192 samples, 0.09%)</title><rect x="17.6338%" y="661" width="0.0911%" height="15" fill="rgb(232,119,22)" fg:x="37148" fg:w="192"/><text x="17.8838%" y="671.50"></text></g><g><title>[unknown] (179 samples, 0.08%)</title><rect x="17.6399%" y="645" width="0.0850%" height="15" fill="rgb(254,73,53)" fg:x="37161" fg:w="179"/><text x="17.8899%" y="655.50"></text></g><g><title>[unknown] (143 samples, 0.07%)</title><rect x="17.6570%" y="629" width="0.0679%" height="15" fill="rgb(251,35,20)" fg:x="37197" fg:w="143"/><text x="17.9070%" y="639.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="17.6903%" y="613" width="0.0347%" height="15" fill="rgb(241,119,20)" fg:x="37267" fg:w="73"/><text x="17.9403%" y="623.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="17.7116%" y="597" width="0.0133%" height="15" fill="rgb(207,102,14)" fg:x="37312" fg:w="28"/><text x="17.9616%" y="607.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1221" width="3.0504%" height="15" fill="rgb(248,201,50)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1231.50">std..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1205" width="3.0504%" height="15" fill="rgb(222,185,44)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1215.50">&lt;al..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1189" width="3.0504%" height="15" fill="rgb(218,107,18)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1199.50">&lt;al..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1173" width="3.0504%" height="15" fill="rgb(237,177,39)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1183.50">cor..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1157" width="3.0504%" height="15" fill="rgb(246,69,6)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1167.50">std..</text></g><g><title>std::panic::catch_unwind (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1141" width="3.0504%" height="15" fill="rgb(234,208,37)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1151.50">std..</text></g><g><title>std::panicking::try (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1125" width="3.0504%" height="15" fill="rgb(225,4,6)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1135.50">std..</text></g><g><title>std::panicking::try::do_call (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1109" width="3.0504%" height="15" fill="rgb(233,45,0)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1119.50">std..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1093" width="3.0504%" height="15" fill="rgb(226,136,5)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1103.50">&lt;co..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1077" width="3.0504%" height="15" fill="rgb(211,91,47)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1087.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6,426 samples, 3.05%)</title><rect x="14.6784%" y="1061" width="3.0504%" height="15" fill="rgb(242,88,51)" fg:x="30922" fg:w="6426"/><text x="14.9284%" y="1071.50">std..</text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (4,118 samples, 1.95%)</title><rect x="15.7739%" y="1045" width="1.9548%" height="15" fill="rgb(230,91,28)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="1055.50">z..</text></g><g><title>async_std::task::block_on::block_on (4,118 samples, 1.95%)</title><rect x="15.7739%" y="1029" width="1.9548%" height="15" fill="rgb(254,186,29)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="1039.50">a..</text></g><g><title>async_std::task::builder::Builder::blocking (4,118 samples, 1.95%)</title><rect x="15.7739%" y="1013" width="1.9548%" height="15" fill="rgb(238,6,4)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="1023.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,118 samples, 1.95%)</title><rect x="15.7739%" y="997" width="1.9548%" height="15" fill="rgb(221,151,16)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="1007.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,118 samples, 1.95%)</title><rect x="15.7739%" y="981" width="1.9548%" height="15" fill="rgb(251,143,52)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="991.50">s..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (4,118 samples, 1.95%)</title><rect x="15.7739%" y="965" width="1.9548%" height="15" fill="rgb(206,90,15)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="975.50">a..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,118 samples, 1.95%)</title><rect x="15.7739%" y="949" width="1.9548%" height="15" fill="rgb(218,35,8)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="959.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,118 samples, 1.95%)</title><rect x="15.7739%" y="933" width="1.9548%" height="15" fill="rgb(239,215,6)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="943.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,118 samples, 1.95%)</title><rect x="15.7739%" y="917" width="1.9548%" height="15" fill="rgb(245,116,39)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="927.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,118 samples, 1.95%)</title><rect x="15.7739%" y="901" width="1.9548%" height="15" fill="rgb(242,65,28)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="911.50">a..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (4,118 samples, 1.95%)</title><rect x="15.7739%" y="885" width="1.9548%" height="15" fill="rgb(252,132,53)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="895.50">a..</text></g><g><title>async_global_executor::executor::block_on (4,118 samples, 1.95%)</title><rect x="15.7739%" y="869" width="1.9548%" height="15" fill="rgb(224,159,50)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="879.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,118 samples, 1.95%)</title><rect x="15.7739%" y="853" width="1.9548%" height="15" fill="rgb(224,93,4)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="863.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,118 samples, 1.95%)</title><rect x="15.7739%" y="837" width="1.9548%" height="15" fill="rgb(208,81,34)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="847.50">s..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (4,118 samples, 1.95%)</title><rect x="15.7739%" y="821" width="1.9548%" height="15" fill="rgb(233,92,54)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="831.50">a..</text></g><g><title>async_global_executor::reactor::block_on (4,118 samples, 1.95%)</title><rect x="15.7739%" y="805" width="1.9548%" height="15" fill="rgb(237,21,14)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="815.50">a..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,118 samples, 1.95%)</title><rect x="15.7739%" y="789" width="1.9548%" height="15" fill="rgb(249,128,51)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="799.50">a..</text></g><g><title>async_io::driver::block_on (4,118 samples, 1.95%)</title><rect x="15.7739%" y="773" width="1.9548%" height="15" fill="rgb(223,129,24)" fg:x="33230" fg:w="4118"/><text x="16.0239%" y="783.50">a..</text></g><g><title>async_io::reactor::ReactorLock::react (554 samples, 0.26%)</title><rect x="17.4657%" y="757" width="0.2630%" height="15" fill="rgb(231,168,25)" fg:x="36794" fg:w="554"/><text x="17.7157%" y="767.50"></text></g><g><title>[libc.so.6] (6,468 samples, 3.07%)</title><rect x="14.6608%" y="1237" width="3.0703%" height="15" fill="rgb(224,39,20)" fg:x="30885" fg:w="6468"/><text x="14.9108%" y="1247.50">[li..</text></g><g><title>[unknown] (325 samples, 0.15%)</title><rect x="17.7316%" y="1237" width="0.1543%" height="15" fill="rgb(225,152,53)" fg:x="37354" fg:w="325"/><text x="17.9816%" y="1247.50"></text></g><g><title>[unknown] (318 samples, 0.15%)</title><rect x="17.7349%" y="1221" width="0.1510%" height="15" fill="rgb(252,17,24)" fg:x="37361" fg:w="318"/><text x="17.9849%" y="1231.50"></text></g><g><title>[unknown] (317 samples, 0.15%)</title><rect x="17.7354%" y="1205" width="0.1505%" height="15" fill="rgb(250,114,30)" fg:x="37362" fg:w="317"/><text x="17.9854%" y="1215.50"></text></g><g><title>[unknown] (214 samples, 0.10%)</title><rect x="17.7842%" y="1189" width="0.1016%" height="15" fill="rgb(229,5,4)" fg:x="37465" fg:w="214"/><text x="18.0342%" y="1199.50"></text></g><g><title>[unknown] (164 samples, 0.08%)</title><rect x="17.8080%" y="1173" width="0.0778%" height="15" fill="rgb(225,176,49)" fg:x="37515" fg:w="164"/><text x="18.0580%" y="1183.50"></text></g><g><title>[unknown] (128 samples, 0.06%)</title><rect x="17.8251%" y="1157" width="0.0608%" height="15" fill="rgb(224,221,49)" fg:x="37551" fg:w="128"/><text x="18.0751%" y="1167.50"></text></g><g><title>[unknown] (98 samples, 0.05%)</title><rect x="17.8393%" y="1141" width="0.0465%" height="15" fill="rgb(253,169,27)" fg:x="37581" fg:w="98"/><text x="18.0893%" y="1151.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="17.8517%" y="1125" width="0.0342%" height="15" fill="rgb(211,206,16)" fg:x="37607" fg:w="72"/><text x="18.1017%" y="1135.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="17.8702%" y="1109" width="0.0157%" height="15" fill="rgb(244,87,35)" fg:x="37646" fg:w="33"/><text x="18.1202%" y="1119.50"></text></g><g><title>__clone (134 samples, 0.06%)</title><rect x="17.8858%" y="1237" width="0.0636%" height="15" fill="rgb(246,28,10)" fg:x="37679" fg:w="134"/><text x="18.1358%" y="1247.50"></text></g><g><title>[unknown] (134 samples, 0.06%)</title><rect x="17.8858%" y="1221" width="0.0636%" height="15" fill="rgb(229,12,44)" fg:x="37679" fg:w="134"/><text x="18.1358%" y="1231.50"></text></g><g><title>[unknown] (133 samples, 0.06%)</title><rect x="17.8863%" y="1205" width="0.0631%" height="15" fill="rgb(210,145,37)" fg:x="37680" fg:w="133"/><text x="18.1363%" y="1215.50"></text></g><g><title>[unknown] (133 samples, 0.06%)</title><rect x="17.8863%" y="1189" width="0.0631%" height="15" fill="rgb(227,112,52)" fg:x="37680" fg:w="133"/><text x="18.1363%" y="1199.50"></text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="17.8873%" y="1173" width="0.0622%" height="15" fill="rgb(238,155,34)" fg:x="37682" fg:w="131"/><text x="18.1373%" y="1183.50"></text></g><g><title>[unknown] (123 samples, 0.06%)</title><rect x="17.8910%" y="1157" width="0.0584%" height="15" fill="rgb(239,226,36)" fg:x="37690" fg:w="123"/><text x="18.1410%" y="1167.50"></text></g><g><title>[unknown] (118 samples, 0.06%)</title><rect x="17.8934%" y="1141" width="0.0560%" height="15" fill="rgb(230,16,23)" fg:x="37695" fg:w="118"/><text x="18.1434%" y="1151.50"></text></g><g><title>[unknown] (88 samples, 0.04%)</title><rect x="17.9077%" y="1125" width="0.0418%" height="15" fill="rgb(236,171,36)" fg:x="37725" fg:w="88"/><text x="18.1577%" y="1135.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="17.9338%" y="1109" width="0.0157%" height="15" fill="rgb(221,22,14)" fg:x="37780" fg:w="33"/><text x="18.1838%" y="1119.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="17.9361%" y="1093" width="0.0133%" height="15" fill="rgb(242,43,11)" fg:x="37785" fg:w="28"/><text x="18.1861%" y="1103.50"></text></g><g><title>__rust_probestack (33 samples, 0.02%)</title><rect x="17.9556%" y="1237" width="0.0157%" height="15" fill="rgb(232,69,23)" fg:x="37826" fg:w="33"/><text x="18.2056%" y="1247.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="17.9841%" y="1221" width="0.0180%" height="15" fill="rgb(216,180,54)" fg:x="37886" fg:w="38"/><text x="18.2341%" y="1231.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="17.9869%" y="1205" width="0.0152%" height="15" fill="rgb(216,5,24)" fg:x="37892" fg:w="32"/><text x="18.2369%" y="1215.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="17.9874%" y="1189" width="0.0147%" height="15" fill="rgb(225,89,9)" fg:x="37893" fg:w="31"/><text x="18.2374%" y="1199.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="17.9874%" y="1173" width="0.0147%" height="15" fill="rgb(243,75,33)" fg:x="37893" fg:w="31"/><text x="18.2374%" y="1183.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="17.9893%" y="1157" width="0.0128%" height="15" fill="rgb(247,141,45)" fg:x="37897" fg:w="27"/><text x="18.2393%" y="1167.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="17.9917%" y="1141" width="0.0104%" height="15" fill="rgb(232,177,36)" fg:x="37902" fg:w="22"/><text x="18.2417%" y="1151.50"></text></g><g><title>[libc.so.6] (823 samples, 0.39%)</title><rect x="18.0126%" y="1205" width="0.3907%" height="15" fill="rgb(219,125,36)" fg:x="37946" fg:w="823"/><text x="18.2626%" y="1215.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="18.3857%" y="1189" width="0.0176%" height="15" fill="rgb(227,94,9)" fg:x="38732" fg:w="37"/><text x="18.6357%" y="1199.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="18.3871%" y="1173" width="0.0161%" height="15" fill="rgb(240,34,52)" fg:x="38735" fg:w="34"/><text x="18.6371%" y="1183.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="18.3871%" y="1157" width="0.0161%" height="15" fill="rgb(216,45,12)" fg:x="38735" fg:w="34"/><text x="18.6371%" y="1167.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="18.3871%" y="1141" width="0.0161%" height="15" fill="rgb(246,21,19)" fg:x="38735" fg:w="34"/><text x="18.6371%" y="1151.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="18.3890%" y="1125" width="0.0142%" height="15" fill="rgb(213,98,42)" fg:x="38739" fg:w="30"/><text x="18.6390%" y="1135.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="18.3909%" y="1109" width="0.0123%" height="15" fill="rgb(250,136,47)" fg:x="38743" fg:w="26"/><text x="18.6409%" y="1119.50"></text></g><g><title>__rust_probestack (51 samples, 0.02%)</title><rect x="18.4104%" y="1205" width="0.0242%" height="15" fill="rgb(251,124,27)" fg:x="38784" fg:w="51"/><text x="18.6604%" y="1215.50"></text></g><g><title>[libc.so.6] (617 samples, 0.29%)</title><rect x="18.4346%" y="1189" width="0.2929%" height="15" fill="rgb(229,180,14)" fg:x="38835" fg:w="617"/><text x="18.6846%" y="1199.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="18.7170%" y="1173" width="0.0104%" height="15" fill="rgb(245,216,25)" fg:x="39430" fg:w="22"/><text x="18.9670%" y="1183.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="18.7170%" y="1157" width="0.0104%" height="15" fill="rgb(251,43,5)" fg:x="39430" fg:w="22"/><text x="18.9670%" y="1167.50"></text></g><g><title>[libc.so.6] (32 samples, 0.02%)</title><rect x="19.1551%" y="1077" width="0.0152%" height="15" fill="rgb(250,128,24)" fg:x="40353" fg:w="32"/><text x="19.4051%" y="1087.50"></text></g><g><title>[unknown] (132 samples, 0.06%)</title><rect x="19.1703%" y="1077" width="0.0627%" height="15" fill="rgb(217,117,27)" fg:x="40385" fg:w="132"/><text x="19.4203%" y="1087.50"></text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="19.1708%" y="1061" width="0.0622%" height="15" fill="rgb(245,147,4)" fg:x="40386" fg:w="131"/><text x="19.4208%" y="1071.50"></text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="19.1708%" y="1045" width="0.0622%" height="15" fill="rgb(242,201,35)" fg:x="40386" fg:w="131"/><text x="19.4208%" y="1055.50"></text></g><g><title>[unknown] (131 samples, 0.06%)</title><rect x="19.1708%" y="1029" width="0.0622%" height="15" fill="rgb(218,181,1)" fg:x="40386" fg:w="131"/><text x="19.4208%" y="1039.50"></text></g><g><title>[unknown] (114 samples, 0.05%)</title><rect x="19.1789%" y="1013" width="0.0541%" height="15" fill="rgb(222,6,29)" fg:x="40403" fg:w="114"/><text x="19.4289%" y="1023.50"></text></g><g><title>[unknown] (94 samples, 0.04%)</title><rect x="19.1884%" y="997" width="0.0446%" height="15" fill="rgb(208,186,3)" fg:x="40423" fg:w="94"/><text x="19.4384%" y="1007.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="19.1998%" y="981" width="0.0332%" height="15" fill="rgb(216,36,26)" fg:x="40447" fg:w="70"/><text x="19.4498%" y="991.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="19.2078%" y="965" width="0.0252%" height="15" fill="rgb(248,201,23)" fg:x="40464" fg:w="53"/><text x="19.4578%" y="975.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="19.2150%" y="949" width="0.0180%" height="15" fill="rgb(251,170,31)" fg:x="40479" fg:w="38"/><text x="19.4650%" y="959.50"></text></g><g><title>[libc.so.6] (768 samples, 0.36%)</title><rect x="18.9468%" y="1093" width="0.3646%" height="15" fill="rgb(207,110,25)" fg:x="39914" fg:w="768"/><text x="19.1968%" y="1103.50"></text></g><g><title>__mprotect (164 samples, 0.08%)</title><rect x="19.2335%" y="1077" width="0.0778%" height="15" fill="rgb(250,54,15)" fg:x="40518" fg:w="164"/><text x="19.4835%" y="1087.50"></text></g><g><title>[unknown] (163 samples, 0.08%)</title><rect x="19.2339%" y="1061" width="0.0774%" height="15" fill="rgb(227,68,33)" fg:x="40519" fg:w="163"/><text x="19.4839%" y="1071.50"></text></g><g><title>[unknown] (157 samples, 0.07%)</title><rect x="19.2368%" y="1045" width="0.0745%" height="15" fill="rgb(238,34,41)" fg:x="40525" fg:w="157"/><text x="19.4868%" y="1055.50"></text></g><g><title>[unknown] (155 samples, 0.07%)</title><rect x="19.2377%" y="1029" width="0.0736%" height="15" fill="rgb(220,11,15)" fg:x="40527" fg:w="155"/><text x="19.4877%" y="1039.50"></text></g><g><title>[unknown] (149 samples, 0.07%)</title><rect x="19.2406%" y="1013" width="0.0707%" height="15" fill="rgb(246,111,35)" fg:x="40533" fg:w="149"/><text x="19.4906%" y="1023.50"></text></g><g><title>[unknown] (138 samples, 0.07%)</title><rect x="19.2458%" y="997" width="0.0655%" height="15" fill="rgb(209,88,53)" fg:x="40544" fg:w="138"/><text x="19.4958%" y="1007.50"></text></g><g><title>[unknown] (98 samples, 0.05%)</title><rect x="19.2648%" y="981" width="0.0465%" height="15" fill="rgb(231,185,47)" fg:x="40584" fg:w="98"/><text x="19.5148%" y="991.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="19.2862%" y="965" width="0.0252%" height="15" fill="rgb(233,154,1)" fg:x="40629" fg:w="53"/><text x="19.5362%" y="975.50"></text></g><g><title>[libc.so.6] (1,094 samples, 0.52%)</title><rect x="18.8020%" y="1109" width="0.5193%" height="15" fill="rgb(225,15,46)" fg:x="39609" fg:w="1094"/><text x="19.0520%" y="1119.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,285 samples, 0.61%)</title><rect x="18.7275%" y="1189" width="0.6100%" height="15" fill="rgb(211,135,41)" fg:x="39452" fg:w="1285"/><text x="18.9775%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,285 samples, 0.61%)</title><rect x="18.7275%" y="1173" width="0.6100%" height="15" fill="rgb(208,54,0)" fg:x="39452" fg:w="1285"/><text x="18.9775%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,285 samples, 0.61%)</title><rect x="18.7275%" y="1157" width="0.6100%" height="15" fill="rgb(244,136,14)" fg:x="39452" fg:w="1285"/><text x="18.9775%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1,285 samples, 0.61%)</title><rect x="18.7275%" y="1141" width="0.6100%" height="15" fill="rgb(241,56,14)" fg:x="39452" fg:w="1285"/><text x="18.9775%" y="1151.50"></text></g><g><title>malloc (1,268 samples, 0.60%)</title><rect x="18.7355%" y="1125" width="0.6019%" height="15" fill="rgb(205,80,24)" fg:x="39469" fg:w="1268"/><text x="18.9855%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1,904 samples, 0.90%)</title><rect x="18.4346%" y="1205" width="0.9038%" height="15" fill="rgb(220,57,4)" fg:x="38835" fg:w="1904"/><text x="18.6846%" y="1215.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="19.4224%" y="1141" width="0.0123%" height="15" fill="rgb(226,193,50)" fg:x="40916" fg:w="26"/><text x="19.6724%" y="1151.50"></text></g><g><title>[libc.so.6] (92 samples, 0.04%)</title><rect x="19.3925%" y="1157" width="0.0437%" height="15" fill="rgb(231,168,22)" fg:x="40853" fg:w="92"/><text x="19.6425%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (208 samples, 0.10%)</title><rect x="19.3384%" y="1205" width="0.0987%" height="15" fill="rgb(254,215,14)" fg:x="40739" fg:w="208"/><text x="19.5884%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (200 samples, 0.09%)</title><rect x="19.3422%" y="1189" width="0.0949%" height="15" fill="rgb(211,115,16)" fg:x="40747" fg:w="200"/><text x="19.5922%" y="1199.50"></text></g><g><title>malloc (187 samples, 0.09%)</title><rect x="19.3483%" y="1173" width="0.0888%" height="15" fill="rgb(236,210,16)" fg:x="40760" fg:w="187"/><text x="19.5983%" y="1183.50"></text></g><g><title>async_task::runnable::spawn_unchecked (3,004 samples, 1.43%)</title><rect x="18.0116%" y="1221" width="1.4260%" height="15" fill="rgb(221,94,12)" fg:x="37944" fg:w="3004"/><text x="18.2616%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (30 samples, 0.01%)</title><rect x="19.4376%" y="1221" width="0.0142%" height="15" fill="rgb(235,218,49)" fg:x="40948" fg:w="30"/><text x="19.6876%" y="1231.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="19.4376%" y="1205" width="0.0142%" height="15" fill="rgb(217,114,14)" fg:x="40948" fg:w="30"/><text x="19.6876%" y="1215.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (29 samples, 0.01%)</title><rect x="19.4381%" y="1189" width="0.0138%" height="15" fill="rgb(216,145,22)" fg:x="40949" fg:w="29"/><text x="19.6881%" y="1199.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (29 samples, 0.01%)</title><rect x="19.4381%" y="1173" width="0.0138%" height="15" fill="rgb(217,112,39)" fg:x="40949" fg:w="29"/><text x="19.6881%" y="1183.50"></text></g><g><title>std::sys::unix::futex::futex_wait (37 samples, 0.02%)</title><rect x="19.4533%" y="1157" width="0.0176%" height="15" fill="rgb(225,85,32)" fg:x="40981" fg:w="37"/><text x="19.7033%" y="1167.50"></text></g><g><title>syscall (32 samples, 0.02%)</title><rect x="19.4556%" y="1141" width="0.0152%" height="15" fill="rgb(245,209,47)" fg:x="40986" fg:w="32"/><text x="19.7056%" y="1151.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="19.4556%" y="1125" width="0.0152%" height="15" fill="rgb(218,220,15)" fg:x="40986" fg:w="32"/><text x="19.7056%" y="1135.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="19.4556%" y="1109" width="0.0152%" height="15" fill="rgb(222,202,31)" fg:x="40986" fg:w="32"/><text x="19.7056%" y="1119.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="19.4556%" y="1093" width="0.0152%" height="15" fill="rgb(243,203,4)" fg:x="40986" fg:w="32"/><text x="19.7056%" y="1103.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="19.4556%" y="1077" width="0.0152%" height="15" fill="rgb(237,92,17)" fg:x="40986" fg:w="32"/><text x="19.7056%" y="1087.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="19.4575%" y="1061" width="0.0133%" height="15" fill="rgb(231,119,7)" fg:x="40990" fg:w="28"/><text x="19.7075%" y="1071.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="19.4585%" y="1045" width="0.0123%" height="15" fill="rgb(237,82,41)" fg:x="40992" fg:w="26"/><text x="19.7085%" y="1055.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="19.4589%" y="1029" width="0.0119%" height="15" fill="rgb(226,81,48)" fg:x="40993" fg:w="25"/><text x="19.7089%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.02%)</title><rect x="19.4523%" y="1221" width="0.0247%" height="15" fill="rgb(234,70,51)" fg:x="40979" fg:w="52"/><text x="19.7023%" y="1231.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (50 samples, 0.02%)</title><rect x="19.4533%" y="1205" width="0.0237%" height="15" fill="rgb(251,86,4)" fg:x="40981" fg:w="50"/><text x="19.7033%" y="1215.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (50 samples, 0.02%)</title><rect x="19.4533%" y="1189" width="0.0237%" height="15" fill="rgb(244,144,28)" fg:x="40981" fg:w="50"/><text x="19.7033%" y="1199.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (50 samples, 0.02%)</title><rect x="19.4533%" y="1173" width="0.0237%" height="15" fill="rgb(232,161,39)" fg:x="40981" fg:w="50"/><text x="19.7033%" y="1183.50"></text></g><g><title>async_executor::Executor::spawn (3,161 samples, 1.50%)</title><rect x="17.9798%" y="1237" width="1.5005%" height="15" fill="rgb(247,34,51)" fg:x="37877" fg:w="3161"/><text x="18.2298%" y="1247.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (50 samples, 0.02%)</title><rect x="19.4808%" y="597" width="0.0237%" height="15" fill="rgb(225,132,2)" fg:x="41039" fg:w="50"/><text x="19.7308%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (50 samples, 0.02%)</title><rect x="19.4808%" y="581" width="0.0237%" height="15" fill="rgb(209,159,44)" fg:x="41039" fg:w="50"/><text x="19.7308%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (50 samples, 0.02%)</title><rect x="19.4808%" y="565" width="0.0237%" height="15" fill="rgb(251,214,1)" fg:x="41039" fg:w="50"/><text x="19.7308%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (33 samples, 0.02%)</title><rect x="19.4889%" y="549" width="0.0157%" height="15" fill="rgb(247,84,47)" fg:x="41056" fg:w="33"/><text x="19.7389%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (70 samples, 0.03%)</title><rect x="19.4808%" y="629" width="0.0332%" height="15" fill="rgb(240,111,43)" fg:x="41039" fg:w="70"/><text x="19.7308%" y="639.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (70 samples, 0.03%)</title><rect x="19.4808%" y="613" width="0.0332%" height="15" fill="rgb(215,214,35)" fg:x="41039" fg:w="70"/><text x="19.7308%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (23 samples, 0.01%)</title><rect x="19.5273%" y="533" width="0.0109%" height="15" fill="rgb(248,207,23)" fg:x="41137" fg:w="23"/><text x="19.7773%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (26 samples, 0.01%)</title><rect x="19.5382%" y="533" width="0.0123%" height="15" fill="rgb(214,186,4)" fg:x="41160" fg:w="26"/><text x="19.7882%" y="543.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (25 samples, 0.01%)</title><rect x="19.5387%" y="517" width="0.0119%" height="15" fill="rgb(220,133,22)" fg:x="41161" fg:w="25"/><text x="19.7887%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (25 samples, 0.01%)</title><rect x="19.5387%" y="501" width="0.0119%" height="15" fill="rgb(239,134,19)" fg:x="41161" fg:w="25"/><text x="19.7887%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (25 samples, 0.01%)</title><rect x="19.5387%" y="485" width="0.0119%" height="15" fill="rgb(250,140,9)" fg:x="41161" fg:w="25"/><text x="19.7887%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (25 samples, 0.01%)</title><rect x="19.5387%" y="469" width="0.0119%" height="15" fill="rgb(225,59,14)" fg:x="41161" fg:w="25"/><text x="19.7887%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.01%)</title><rect x="19.5387%" y="453" width="0.0119%" height="15" fill="rgb(214,152,51)" fg:x="41161" fg:w="25"/><text x="19.7887%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.01%)</title><rect x="19.5387%" y="437" width="0.0119%" height="15" fill="rgb(251,227,43)" fg:x="41161" fg:w="25"/><text x="19.7887%" y="447.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.01%)</title><rect x="19.5387%" y="421" width="0.0119%" height="15" fill="rgb(241,96,17)" fg:x="41161" fg:w="25"/><text x="19.7887%" y="431.50"></text></g><g><title>malloc (25 samples, 0.01%)</title><rect x="19.5387%" y="405" width="0.0119%" height="15" fill="rgb(234,198,43)" fg:x="41161" fg:w="25"/><text x="19.7887%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (54 samples, 0.03%)</title><rect x="19.5273%" y="549" width="0.0256%" height="15" fill="rgb(220,108,29)" fg:x="41137" fg:w="54"/><text x="19.7773%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (83 samples, 0.04%)</title><rect x="19.5140%" y="597" width="0.0394%" height="15" fill="rgb(226,163,33)" fg:x="41109" fg:w="83"/><text x="19.7640%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (83 samples, 0.04%)</title><rect x="19.5140%" y="581" width="0.0394%" height="15" fill="rgb(205,194,45)" fg:x="41109" fg:w="83"/><text x="19.7640%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (83 samples, 0.04%)</title><rect x="19.5140%" y="565" width="0.0394%" height="15" fill="rgb(206,143,44)" fg:x="41109" fg:w="83"/><text x="19.7640%" y="575.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (101 samples, 0.05%)</title><rect x="19.5140%" y="613" width="0.0479%" height="15" fill="rgb(236,136,36)" fg:x="41109" fg:w="101"/><text x="19.7640%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="1189" width="0.0816%" height="15" fill="rgb(249,172,42)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1199.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="1173" width="0.0816%" height="15" fill="rgb(216,139,23)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="1157" width="0.0816%" height="15" fill="rgb(207,166,20)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="1141" width="0.0816%" height="15" fill="rgb(210,209,22)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="1125" width="0.0816%" height="15" fill="rgb(232,118,20)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1135.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="1109" width="0.0816%" height="15" fill="rgb(238,113,42)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1119.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (172 samples, 0.08%)</title><rect x="19.4808%" y="1093" width="0.0816%" height="15" fill="rgb(231,42,5)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (172 samples, 0.08%)</title><rect x="19.4808%" y="1077" width="0.0816%" height="15" fill="rgb(243,166,24)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (172 samples, 0.08%)</title><rect x="19.4808%" y="1061" width="0.0816%" height="15" fill="rgb(237,226,12)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1071.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="1045" width="0.0816%" height="15" fill="rgb(229,133,24)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1055.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="1029" width="0.0816%" height="15" fill="rgb(238,33,43)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="1013" width="0.0816%" height="15" fill="rgb(227,59,38)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1023.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="997" width="0.0816%" height="15" fill="rgb(230,97,0)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="1007.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="981" width="0.0816%" height="15" fill="rgb(250,173,50)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="965" width="0.0816%" height="15" fill="rgb(240,15,50)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="949" width="0.0816%" height="15" fill="rgb(221,93,22)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (172 samples, 0.08%)</title><rect x="19.4808%" y="933" width="0.0816%" height="15" fill="rgb(245,180,53)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="917" width="0.0816%" height="15" fill="rgb(231,88,51)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="901" width="0.0816%" height="15" fill="rgb(240,58,21)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="885" width="0.0816%" height="15" fill="rgb(237,21,10)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="895.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="869" width="0.0816%" height="15" fill="rgb(218,43,11)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="853" width="0.0816%" height="15" fill="rgb(218,221,29)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="837" width="0.0816%" height="15" fill="rgb(214,118,42)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="847.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="821" width="0.0816%" height="15" fill="rgb(251,200,26)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="805" width="0.0816%" height="15" fill="rgb(237,101,39)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="815.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="789" width="0.0816%" height="15" fill="rgb(251,117,11)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="773" width="0.0816%" height="15" fill="rgb(216,223,23)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="783.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="757" width="0.0816%" height="15" fill="rgb(251,54,12)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="741" width="0.0816%" height="15" fill="rgb(254,176,54)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="751.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="725" width="0.0816%" height="15" fill="rgb(210,32,8)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="709" width="0.0816%" height="15" fill="rgb(235,52,38)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="719.50"></text></g><g><title>async_std::io::timeout::timeout::{{closure}} (172 samples, 0.08%)</title><rect x="19.4808%" y="693" width="0.0816%" height="15" fill="rgb(231,4,44)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="703.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="677" width="0.0816%" height="15" fill="rgb(249,2,32)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="687.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="19.4808%" y="661" width="0.0816%" height="15" fill="rgb(224,65,26)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="671.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (172 samples, 0.08%)</title><rect x="19.4808%" y="645" width="0.0816%" height="15" fill="rgb(250,73,40)" fg:x="41039" fg:w="172"/><text x="19.7308%" y="655.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (102 samples, 0.05%)</title><rect x="19.5140%" y="629" width="0.0484%" height="15" fill="rgb(253,177,16)" fg:x="41109" fg:w="102"/><text x="19.7640%" y="639.50"></text></g><g><title>[libc.so.6] (95 samples, 0.05%)</title><rect x="19.5648%" y="533" width="0.0451%" height="15" fill="rgb(217,32,34)" fg:x="41216" fg:w="95"/><text x="19.8148%" y="543.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="19.6099%" y="517" width="0.0157%" height="15" fill="rgb(212,7,10)" fg:x="41311" fg:w="33"/><text x="19.8599%" y="527.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (55 samples, 0.03%)</title><rect x="19.6099%" y="533" width="0.0261%" height="15" fill="rgb(245,89,8)" fg:x="41311" fg:w="55"/><text x="19.8599%" y="543.50"></text></g><g><title>async_global_executor::tokio::enter (25 samples, 0.01%)</title><rect x="19.6360%" y="533" width="0.0119%" height="15" fill="rgb(237,16,53)" fg:x="41366" fg:w="25"/><text x="19.8860%" y="543.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (71 samples, 0.03%)</title><rect x="19.6502%" y="453" width="0.0337%" height="15" fill="rgb(250,204,30)" fg:x="41396" fg:w="71"/><text x="19.9002%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::handle::Handle&gt;&gt; (66 samples, 0.03%)</title><rect x="19.6526%" y="437" width="0.0313%" height="15" fill="rgb(208,77,27)" fg:x="41401" fg:w="66"/><text x="19.9026%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (64 samples, 0.03%)</title><rect x="19.6536%" y="421" width="0.0304%" height="15" fill="rgb(250,204,28)" fg:x="41403" fg:w="64"/><text x="19.9036%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (64 samples, 0.03%)</title><rect x="19.6536%" y="405" width="0.0304%" height="15" fill="rgb(244,63,21)" fg:x="41403" fg:w="64"/><text x="19.9036%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::thread_pool::Spawner&gt; (64 samples, 0.03%)</title><rect x="19.6536%" y="389" width="0.0304%" height="15" fill="rgb(236,85,44)" fg:x="41403" fg:w="64"/><text x="19.9036%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt; (64 samples, 0.03%)</title><rect x="19.6536%" y="373" width="0.0304%" height="15" fill="rgb(215,98,4)" fg:x="41403" fg:w="64"/><text x="19.9036%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.03%)</title><rect x="19.6536%" y="357" width="0.0304%" height="15" fill="rgb(235,38,11)" fg:x="41403" fg:w="64"/><text x="19.9036%" y="367.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop (82 samples, 0.04%)</title><rect x="19.6483%" y="501" width="0.0389%" height="15" fill="rgb(254,186,25)" fg:x="41392" fg:w="82"/><text x="19.8983%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (78 samples, 0.04%)</title><rect x="19.6502%" y="485" width="0.0370%" height="15" fill="rgb(225,55,31)" fg:x="41396" fg:w="78"/><text x="19.9002%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (78 samples, 0.04%)</title><rect x="19.6502%" y="469" width="0.0370%" height="15" fill="rgb(211,15,21)" fg:x="41396" fg:w="78"/><text x="19.9002%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::EnterGuard&gt; (85 samples, 0.04%)</title><rect x="19.6479%" y="533" width="0.0403%" height="15" fill="rgb(215,187,41)" fg:x="41391" fg:w="85"/><text x="19.8979%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::EnterGuard&gt; (85 samples, 0.04%)</title><rect x="19.6479%" y="517" width="0.0403%" height="15" fill="rgb(248,69,32)" fg:x="41391" fg:w="85"/><text x="19.8979%" y="527.50"></text></g><g><title>&lt;tokio::runtime::handle::Handle as core::clone::Clone&gt;::clone (215 samples, 0.10%)</title><rect x="19.6911%" y="517" width="0.1021%" height="15" fill="rgb(252,102,52)" fg:x="41482" fg:w="215"/><text x="19.9411%" y="527.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (215 samples, 0.10%)</title><rect x="19.6911%" y="501" width="0.1021%" height="15" fill="rgb(253,140,32)" fg:x="41482" fg:w="215"/><text x="19.9411%" y="511.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (526 samples, 0.25%)</title><rect x="19.5624%" y="837" width="0.2497%" height="15" fill="rgb(216,56,42)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (526 samples, 0.25%)</title><rect x="19.5624%" y="821" width="0.2497%" height="15" fill="rgb(216,184,14)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (526 samples, 0.25%)</title><rect x="19.5624%" y="805" width="0.2497%" height="15" fill="rgb(237,187,27)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="815.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (526 samples, 0.25%)</title><rect x="19.5624%" y="789" width="0.2497%" height="15" fill="rgb(219,65,3)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="799.50"></text></g><g><title>async_std::task::block_on::block_on (526 samples, 0.25%)</title><rect x="19.5624%" y="773" width="0.2497%" height="15" fill="rgb(245,83,25)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="783.50"></text></g><g><title>async_std::task::builder::Builder::blocking (526 samples, 0.25%)</title><rect x="19.5624%" y="757" width="0.2497%" height="15" fill="rgb(214,205,45)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (526 samples, 0.25%)</title><rect x="19.5624%" y="741" width="0.2497%" height="15" fill="rgb(241,20,18)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (526 samples, 0.25%)</title><rect x="19.5624%" y="725" width="0.2497%" height="15" fill="rgb(232,163,23)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="735.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (526 samples, 0.25%)</title><rect x="19.5624%" y="709" width="0.2497%" height="15" fill="rgb(214,5,46)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (526 samples, 0.25%)</title><rect x="19.5624%" y="693" width="0.2497%" height="15" fill="rgb(229,78,17)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (526 samples, 0.25%)</title><rect x="19.5624%" y="677" width="0.2497%" height="15" fill="rgb(248,89,10)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (526 samples, 0.25%)</title><rect x="19.5624%" y="661" width="0.2497%" height="15" fill="rgb(248,54,15)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (526 samples, 0.25%)</title><rect x="19.5624%" y="645" width="0.2497%" height="15" fill="rgb(223,116,6)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="655.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (526 samples, 0.25%)</title><rect x="19.5624%" y="629" width="0.2497%" height="15" fill="rgb(205,125,38)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="639.50"></text></g><g><title>async_global_executor::executor::block_on (526 samples, 0.25%)</title><rect x="19.5624%" y="613" width="0.2497%" height="15" fill="rgb(251,78,38)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (526 samples, 0.25%)</title><rect x="19.5624%" y="597" width="0.2497%" height="15" fill="rgb(253,78,28)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (526 samples, 0.25%)</title><rect x="19.5624%" y="581" width="0.2497%" height="15" fill="rgb(209,120,3)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="591.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (526 samples, 0.25%)</title><rect x="19.5624%" y="565" width="0.2497%" height="15" fill="rgb(238,229,9)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="575.50"></text></g><g><title>async_global_executor::reactor::block_on (526 samples, 0.25%)</title><rect x="19.5624%" y="549" width="0.2497%" height="15" fill="rgb(253,159,18)" fg:x="41211" fg:w="526"/><text x="19.8124%" y="559.50"></text></g><g><title>tokio::runtime::handle::Handle::enter (261 samples, 0.12%)</title><rect x="19.6882%" y="533" width="0.1239%" height="15" fill="rgb(244,42,34)" fg:x="41476" fg:w="261"/><text x="19.9382%" y="543.50"></text></g><g><title>tokio::runtime::context::enter (40 samples, 0.02%)</title><rect x="19.7931%" y="517" width="0.0190%" height="15" fill="rgb(224,8,7)" fg:x="41697" fg:w="40"/><text x="20.0431%" y="527.50"></text></g><g><title>tokio::runtime::context::try_enter (38 samples, 0.02%)</title><rect x="19.7941%" y="501" width="0.0180%" height="15" fill="rgb(210,201,45)" fg:x="41699" fg:w="38"/><text x="20.0441%" y="511.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (35 samples, 0.02%)</title><rect x="19.8226%" y="773" width="0.0166%" height="15" fill="rgb(252,185,21)" fg:x="41759" fg:w="35"/><text x="20.0726%" y="783.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (619 samples, 0.29%)</title><rect x="19.5624%" y="917" width="0.2938%" height="15" fill="rgb(223,131,1)" fg:x="41211" fg:w="619"/><text x="19.8124%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (619 samples, 0.29%)</title><rect x="19.5624%" y="901" width="0.2938%" height="15" fill="rgb(245,141,16)" fg:x="41211" fg:w="619"/><text x="19.8124%" y="911.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (619 samples, 0.29%)</title><rect x="19.5624%" y="885" width="0.2938%" height="15" fill="rgb(229,55,45)" fg:x="41211" fg:w="619"/><text x="19.8124%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (619 samples, 0.29%)</title><rect x="19.5624%" y="869" width="0.2938%" height="15" fill="rgb(208,92,15)" fg:x="41211" fg:w="619"/><text x="19.8124%" y="879.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (619 samples, 0.29%)</title><rect x="19.5624%" y="853" width="0.2938%" height="15" fill="rgb(234,185,47)" fg:x="41211" fg:w="619"/><text x="19.8124%" y="863.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (93 samples, 0.04%)</title><rect x="19.8121%" y="837" width="0.0441%" height="15" fill="rgb(253,104,50)" fg:x="41737" fg:w="93"/><text x="20.0621%" y="847.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (93 samples, 0.04%)</title><rect x="19.8121%" y="821" width="0.0441%" height="15" fill="rgb(205,70,7)" fg:x="41737" fg:w="93"/><text x="20.0621%" y="831.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (93 samples, 0.04%)</title><rect x="19.8121%" y="805" width="0.0441%" height="15" fill="rgb(240,178,43)" fg:x="41737" fg:w="93"/><text x="20.0621%" y="815.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (93 samples, 0.04%)</title><rect x="19.8121%" y="789" width="0.0441%" height="15" fill="rgb(214,112,2)" fg:x="41737" fg:w="93"/><text x="20.0621%" y="799.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="19.8392%" y="773" width="0.0171%" height="15" fill="rgb(206,46,17)" fg:x="41794" fg:w="36"/><text x="20.0892%" y="783.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (45 samples, 0.02%)</title><rect x="19.8563%" y="773" width="0.0214%" height="15" fill="rgb(225,220,16)" fg:x="41830" fg:w="45"/><text x="20.1063%" y="783.50"></text></g><g><title>rsa::pkcs1v15::encrypt (45 samples, 0.02%)</title><rect x="19.8563%" y="757" width="0.0214%" height="15" fill="rgb(238,65,40)" fg:x="41830" fg:w="45"/><text x="20.1063%" y="767.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::raw::EncryptionPrimitive&gt;::raw_encryption_primitive (45 samples, 0.02%)</title><rect x="19.8563%" y="741" width="0.0214%" height="15" fill="rgb(230,151,21)" fg:x="41830" fg:w="45"/><text x="20.1063%" y="751.50"></text></g><g><title>rsa::internals::encrypt (38 samples, 0.02%)</title><rect x="19.8596%" y="725" width="0.0180%" height="15" fill="rgb(218,58,49)" fg:x="41837" fg:w="38"/><text x="20.1096%" y="735.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (38 samples, 0.02%)</title><rect x="19.8596%" y="709" width="0.0180%" height="15" fill="rgb(219,179,14)" fg:x="41837" fg:w="38"/><text x="20.1096%" y="719.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (38 samples, 0.02%)</title><rect x="19.8596%" y="693" width="0.0180%" height="15" fill="rgb(223,72,1)" fg:x="41837" fg:w="38"/><text x="20.1096%" y="703.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (47 samples, 0.02%)</title><rect x="19.8563%" y="789" width="0.0223%" height="15" fill="rgb(238,126,10)" fg:x="41830" fg:w="47"/><text x="20.1063%" y="799.50"></text></g><g><title>std::fs::OpenOptions::open (29 samples, 0.01%)</title><rect x="19.8980%" y="629" width="0.0138%" height="15" fill="rgb(224,206,38)" fg:x="41918" fg:w="29"/><text x="20.1480%" y="639.50"></text></g><g><title>std::fs::OpenOptions::_open (29 samples, 0.01%)</title><rect x="19.8980%" y="613" width="0.0138%" height="15" fill="rgb(212,201,54)" fg:x="41918" fg:w="29"/><text x="20.1480%" y="623.50"></text></g><g><title>std::sys::unix::fs::File::open (29 samples, 0.01%)</title><rect x="19.8980%" y="597" width="0.0138%" height="15" fill="rgb(218,154,48)" fg:x="41918" fg:w="29"/><text x="20.1480%" y="607.50"></text></g><g><title>std::fs::File::open (31 samples, 0.01%)</title><rect x="19.8976%" y="645" width="0.0147%" height="15" fill="rgb(232,93,24)" fg:x="41917" fg:w="31"/><text x="20.1476%" y="655.50"></text></g><g><title>shared_memory::ShmemConf::open (67 samples, 0.03%)</title><rect x="19.8809%" y="661" width="0.0318%" height="15" fill="rgb(245,30,21)" fg:x="41882" fg:w="67"/><text x="20.1309%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (32 samples, 0.02%)</title><rect x="19.9218%" y="613" width="0.0152%" height="15" fill="rgb(242,148,29)" fg:x="41968" fg:w="32"/><text x="20.1718%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (32 samples, 0.02%)</title><rect x="19.9218%" y="597" width="0.0152%" height="15" fill="rgb(244,153,54)" fg:x="41968" fg:w="32"/><text x="20.1718%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (32 samples, 0.02%)</title><rect x="19.9218%" y="581" width="0.0152%" height="15" fill="rgb(252,87,22)" fg:x="41968" fg:w="32"/><text x="20.1718%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (32 samples, 0.02%)</title><rect x="19.9218%" y="565" width="0.0152%" height="15" fill="rgb(210,51,29)" fg:x="41968" fg:w="32"/><text x="20.1718%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (126 samples, 0.06%)</title><rect x="19.8786%" y="709" width="0.0598%" height="15" fill="rgb(242,136,47)" fg:x="41877" fg:w="126"/><text x="20.1286%" y="719.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (126 samples, 0.06%)</title><rect x="19.8786%" y="693" width="0.0598%" height="15" fill="rgb(238,68,4)" fg:x="41877" fg:w="126"/><text x="20.1286%" y="703.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::connect_map_to_shm (126 samples, 0.06%)</title><rect x="19.8786%" y="677" width="0.0598%" height="15" fill="rgb(242,161,30)" fg:x="41877" fg:w="126"/><text x="20.1286%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (54 samples, 0.03%)</title><rect x="19.9128%" y="661" width="0.0256%" height="15" fill="rgb(218,58,44)" fg:x="41949" fg:w="54"/><text x="20.1628%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (54 samples, 0.03%)</title><rect x="19.9128%" y="645" width="0.0256%" height="15" fill="rgb(252,125,32)" fg:x="41949" fg:w="54"/><text x="20.1628%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (41 samples, 0.02%)</title><rect x="19.9189%" y="629" width="0.0195%" height="15" fill="rgb(219,178,0)" fg:x="41962" fg:w="41"/><text x="20.1689%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (131 samples, 0.06%)</title><rect x="19.8786%" y="757" width="0.0622%" height="15" fill="rgb(213,152,7)" fg:x="41877" fg:w="131"/><text x="20.1286%" y="767.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (131 samples, 0.06%)</title><rect x="19.8786%" y="741" width="0.0622%" height="15" fill="rgb(249,109,34)" fg:x="41877" fg:w="131"/><text x="20.1286%" y="751.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (131 samples, 0.06%)</title><rect x="19.8786%" y="725" width="0.0622%" height="15" fill="rgb(232,96,21)" fg:x="41877" fg:w="131"/><text x="20.1286%" y="735.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (181 samples, 0.09%)</title><rect x="19.8563%" y="837" width="0.0859%" height="15" fill="rgb(228,27,39)" fg:x="41830" fg:w="181"/><text x="20.1063%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (181 samples, 0.09%)</title><rect x="19.8563%" y="821" width="0.0859%" height="15" fill="rgb(211,182,52)" fg:x="41830" fg:w="181"/><text x="20.1063%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (181 samples, 0.09%)</title><rect x="19.8563%" y="805" width="0.0859%" height="15" fill="rgb(234,178,38)" fg:x="41830" fg:w="181"/><text x="20.1063%" y="815.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (134 samples, 0.06%)</title><rect x="19.8786%" y="789" width="0.0636%" height="15" fill="rgb(221,111,3)" fg:x="41877" fg:w="134"/><text x="20.1286%" y="799.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (134 samples, 0.06%)</title><rect x="19.8786%" y="773" width="0.0636%" height="15" fill="rgb(228,175,21)" fg:x="41877" fg:w="134"/><text x="20.1286%" y="783.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (35 samples, 0.02%)</title><rect x="19.9469%" y="837" width="0.0166%" height="15" fill="rgb(228,174,43)" fg:x="42021" fg:w="35"/><text x="20.1969%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (29 samples, 0.01%)</title><rect x="19.9498%" y="821" width="0.0138%" height="15" fill="rgb(211,191,0)" fg:x="42027" fg:w="29"/><text x="20.1998%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.01%)</title><rect x="19.9498%" y="805" width="0.0138%" height="15" fill="rgb(253,117,3)" fg:x="42027" fg:w="29"/><text x="20.1998%" y="815.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (29 samples, 0.01%)</title><rect x="19.9498%" y="789" width="0.0138%" height="15" fill="rgb(241,127,19)" fg:x="42027" fg:w="29"/><text x="20.1998%" y="799.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (29 samples, 0.01%)</title><rect x="19.9498%" y="773" width="0.0138%" height="15" fill="rgb(218,103,12)" fg:x="42027" fg:w="29"/><text x="20.1998%" y="783.50"></text></g><g><title>rsa::pkcs1v15::decrypt (29 samples, 0.01%)</title><rect x="19.9498%" y="757" width="0.0138%" height="15" fill="rgb(236,214,43)" fg:x="42027" fg:w="29"/><text x="20.1998%" y="767.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (29 samples, 0.01%)</title><rect x="19.9498%" y="741" width="0.0138%" height="15" fill="rgb(244,144,19)" fg:x="42027" fg:w="29"/><text x="20.1998%" y="751.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (29 samples, 0.01%)</title><rect x="19.9498%" y="725" width="0.0138%" height="15" fill="rgb(246,188,10)" fg:x="42027" fg:w="29"/><text x="20.1998%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.01%)</title><rect x="19.9664%" y="773" width="0.0114%" height="15" fill="rgb(212,193,33)" fg:x="42062" fg:w="24"/><text x="20.2164%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.01%)</title><rect x="19.9664%" y="757" width="0.0114%" height="15" fill="rgb(241,51,29)" fg:x="42062" fg:w="24"/><text x="20.2164%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.01%)</title><rect x="19.9664%" y="741" width="0.0114%" height="15" fill="rgb(211,58,19)" fg:x="42062" fg:w="24"/><text x="20.2164%" y="751.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.01%)</title><rect x="19.9664%" y="725" width="0.0114%" height="15" fill="rgb(229,111,26)" fg:x="42062" fg:w="24"/><text x="20.2164%" y="735.50"></text></g><g><title>malloc (23 samples, 0.01%)</title><rect x="19.9669%" y="709" width="0.0109%" height="15" fill="rgb(213,115,40)" fg:x="42063" fg:w="23"/><text x="20.2169%" y="719.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (23 samples, 0.01%)</title><rect x="20.0020%" y="773" width="0.0109%" height="15" fill="rgb(209,56,44)" fg:x="42137" fg:w="23"/><text x="20.2520%" y="783.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (109 samples, 0.05%)</title><rect x="19.9635%" y="789" width="0.0517%" height="15" fill="rgb(230,108,32)" fg:x="42056" fg:w="109"/><text x="20.2135%" y="799.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (121 samples, 0.06%)</title><rect x="19.9635%" y="821" width="0.0574%" height="15" fill="rgb(216,165,31)" fg:x="42056" fg:w="121"/><text x="20.2135%" y="831.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (121 samples, 0.06%)</title><rect x="19.9635%" y="805" width="0.0574%" height="15" fill="rgb(218,122,21)" fg:x="42056" fg:w="121"/><text x="20.2135%" y="815.50"></text></g><g><title>[libc.so.6] (27 samples, 0.01%)</title><rect x="20.0613%" y="421" width="0.0128%" height="15" fill="rgb(223,224,47)" fg:x="42262" fg:w="27"/><text x="20.3113%" y="431.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="20.0594%" y="437" width="0.0166%" height="15" fill="rgb(238,102,44)" fg:x="42258" fg:w="35"/><text x="20.3094%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.02%)</title><rect x="20.0561%" y="501" width="0.0214%" height="15" fill="rgb(236,46,40)" fg:x="42251" fg:w="45"/><text x="20.3061%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.02%)</title><rect x="20.0561%" y="485" width="0.0214%" height="15" fill="rgb(247,202,50)" fg:x="42251" fg:w="45"/><text x="20.3061%" y="495.50"></text></g><g><title>alloc::alloc::alloc (45 samples, 0.02%)</title><rect x="20.0561%" y="469" width="0.0214%" height="15" fill="rgb(209,99,20)" fg:x="42251" fg:w="45"/><text x="20.3061%" y="479.50"></text></g><g><title>malloc (44 samples, 0.02%)</title><rect x="20.0566%" y="453" width="0.0209%" height="15" fill="rgb(252,27,34)" fg:x="42252" fg:w="44"/><text x="20.3066%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (46 samples, 0.02%)</title><rect x="20.0561%" y="533" width="0.0218%" height="15" fill="rgb(215,206,23)" fg:x="42251" fg:w="46"/><text x="20.3061%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 0.02%)</title><rect x="20.0561%" y="517" width="0.0218%" height="15" fill="rgb(212,135,36)" fg:x="42251" fg:w="46"/><text x="20.3061%" y="527.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (47 samples, 0.02%)</title><rect x="20.0561%" y="549" width="0.0223%" height="15" fill="rgb(240,189,1)" fg:x="42251" fg:w="47"/><text x="20.3061%" y="559.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::new (49 samples, 0.02%)</title><rect x="20.0556%" y="581" width="0.0233%" height="15" fill="rgb(242,56,20)" fg:x="42250" fg:w="49"/><text x="20.3056%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (48 samples, 0.02%)</title><rect x="20.0561%" y="565" width="0.0228%" height="15" fill="rgb(247,132,33)" fg:x="42251" fg:w="48"/><text x="20.3061%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.01%)</title><rect x="20.0813%" y="501" width="0.0109%" height="15" fill="rgb(208,149,11)" fg:x="42304" fg:w="23"/><text x="20.3313%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.01%)</title><rect x="20.0813%" y="485" width="0.0109%" height="15" fill="rgb(211,33,11)" fg:x="42304" fg:w="23"/><text x="20.3313%" y="495.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.01%)</title><rect x="20.0813%" y="469" width="0.0109%" height="15" fill="rgb(221,29,38)" fg:x="42304" fg:w="23"/><text x="20.3313%" y="479.50"></text></g><g><title>malloc (23 samples, 0.01%)</title><rect x="20.0813%" y="453" width="0.0109%" height="15" fill="rgb(206,182,49)" fg:x="42304" fg:w="23"/><text x="20.3313%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (112 samples, 0.05%)</title><rect x="20.0395%" y="629" width="0.0532%" height="15" fill="rgb(216,140,1)" fg:x="42216" fg:w="112"/><text x="20.2895%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (112 samples, 0.05%)</title><rect x="20.0395%" y="613" width="0.0532%" height="15" fill="rgb(232,57,40)" fg:x="42216" fg:w="112"/><text x="20.2895%" y="623.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (101 samples, 0.05%)</title><rect x="20.0447%" y="597" width="0.0479%" height="15" fill="rgb(224,186,18)" fg:x="42227" fg:w="101"/><text x="20.2947%" y="607.50"></text></g><g><title>zenoh_transport::common::pipeline::StageRefill::new (29 samples, 0.01%)</title><rect x="20.0789%" y="581" width="0.0138%" height="15" fill="rgb(215,121,11)" fg:x="42299" fg:w="29"/><text x="20.3289%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (29 samples, 0.01%)</title><rect x="20.0789%" y="565" width="0.0138%" height="15" fill="rgb(245,147,10)" fg:x="42299" fg:w="29"/><text x="20.3289%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="20.0789%" y="549" width="0.0138%" height="15" fill="rgb(238,153,13)" fg:x="42299" fg:w="29"/><text x="20.3289%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.01%)</title><rect x="20.0813%" y="533" width="0.0114%" height="15" fill="rgb(233,108,0)" fg:x="42304" fg:w="24"/><text x="20.3313%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.01%)</title><rect x="20.0813%" y="517" width="0.0114%" height="15" fill="rgb(212,157,17)" fg:x="42304" fg:w="24"/><text x="20.3313%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (120 samples, 0.06%)</title><rect x="20.0371%" y="709" width="0.0570%" height="15" fill="rgb(225,213,38)" fg:x="42211" fg:w="120"/><text x="20.2871%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (120 samples, 0.06%)</title><rect x="20.0371%" y="693" width="0.0570%" height="15" fill="rgb(248,16,11)" fg:x="42211" fg:w="120"/><text x="20.2871%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (120 samples, 0.06%)</title><rect x="20.0371%" y="677" width="0.0570%" height="15" fill="rgb(241,33,4)" fg:x="42211" fg:w="120"/><text x="20.2871%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (120 samples, 0.06%)</title><rect x="20.0371%" y="661" width="0.0570%" height="15" fill="rgb(222,26,43)" fg:x="42211" fg:w="120"/><text x="20.2871%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (120 samples, 0.06%)</title><rect x="20.0371%" y="645" width="0.0570%" height="15" fill="rgb(243,29,36)" fg:x="42211" fg:w="120"/><text x="20.2871%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (142 samples, 0.07%)</title><rect x="20.0366%" y="773" width="0.0674%" height="15" fill="rgb(241,9,27)" fg:x="42210" fg:w="142"/><text x="20.2866%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (142 samples, 0.07%)</title><rect x="20.0366%" y="757" width="0.0674%" height="15" fill="rgb(205,117,26)" fg:x="42210" fg:w="142"/><text x="20.2866%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (142 samples, 0.07%)</title><rect x="20.0366%" y="741" width="0.0674%" height="15" fill="rgb(209,80,39)" fg:x="42210" fg:w="142"/><text x="20.2866%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (141 samples, 0.07%)</title><rect x="20.0371%" y="725" width="0.0669%" height="15" fill="rgb(239,155,6)" fg:x="42211" fg:w="141"/><text x="20.2871%" y="735.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (297 samples, 0.14%)</title><rect x="19.9635%" y="837" width="0.1410%" height="15" fill="rgb(212,104,12)" fg:x="42056" fg:w="297"/><text x="20.2135%" y="847.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (173 samples, 0.08%)</title><rect x="20.0224%" y="821" width="0.0821%" height="15" fill="rgb(234,204,3)" fg:x="42180" fg:w="173"/><text x="20.2724%" y="831.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (173 samples, 0.08%)</title><rect x="20.0224%" y="805" width="0.0821%" height="15" fill="rgb(251,218,7)" fg:x="42180" fg:w="173"/><text x="20.2724%" y="815.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (170 samples, 0.08%)</title><rect x="20.0238%" y="789" width="0.0807%" height="15" fill="rgb(221,81,32)" fg:x="42183" fg:w="170"/><text x="20.2738%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,148 samples, 0.54%)</title><rect x="19.5624%" y="933" width="0.5449%" height="15" fill="rgb(214,152,26)" fg:x="41211" fg:w="1148"/><text x="19.8124%" y="943.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (529 samples, 0.25%)</title><rect x="19.8563%" y="917" width="0.2511%" height="15" fill="rgb(223,22,3)" fg:x="41830" fg:w="529"/><text x="20.1063%" y="927.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (529 samples, 0.25%)</title><rect x="19.8563%" y="901" width="0.2511%" height="15" fill="rgb(207,174,7)" fg:x="41830" fg:w="529"/><text x="20.1063%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (529 samples, 0.25%)</title><rect x="19.8563%" y="885" width="0.2511%" height="15" fill="rgb(224,19,52)" fg:x="41830" fg:w="529"/><text x="20.1063%" y="895.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (529 samples, 0.25%)</title><rect x="19.8563%" y="869" width="0.2511%" height="15" fill="rgb(228,24,14)" fg:x="41830" fg:w="529"/><text x="20.1063%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (529 samples, 0.25%)</title><rect x="19.8563%" y="853" width="0.2511%" height="15" fill="rgb(230,153,43)" fg:x="41830" fg:w="529"/><text x="20.1063%" y="863.50"></text></g><g><title>zenoh_transport::unicast::establishment::close_link::{{closure}} (23 samples, 0.01%)</title><rect x="20.1249%" y="709" width="0.0109%" height="15" fill="rgb(231,106,12)" fg:x="42396" fg:w="23"/><text x="20.3749%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="20.1463%" y="693" width="0.0119%" height="15" fill="rgb(215,92,2)" fg:x="42441" fg:w="25"/><text x="20.3963%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (25 samples, 0.01%)</title><rect x="20.1463%" y="677" width="0.0119%" height="15" fill="rgb(249,143,25)" fg:x="42441" fg:w="25"/><text x="20.3963%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (40 samples, 0.02%)</title><rect x="20.1672%" y="661" width="0.0190%" height="15" fill="rgb(252,7,35)" fg:x="42485" fg:w="40"/><text x="20.4172%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (153 samples, 0.07%)</title><rect x="20.1582%" y="693" width="0.0726%" height="15" fill="rgb(216,69,40)" fg:x="42466" fg:w="153"/><text x="20.4082%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (153 samples, 0.07%)</title><rect x="20.1582%" y="677" width="0.0726%" height="15" fill="rgb(240,36,33)" fg:x="42466" fg:w="153"/><text x="20.4082%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (94 samples, 0.04%)</title><rect x="20.1862%" y="661" width="0.0446%" height="15" fill="rgb(231,128,14)" fg:x="42525" fg:w="94"/><text x="20.4362%" y="671.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (22 samples, 0.01%)</title><rect x="20.2204%" y="645" width="0.0104%" height="15" fill="rgb(245,143,14)" fg:x="42597" fg:w="22"/><text x="20.4704%" y="655.50"></text></g><g><title>zenoh_transport::unicast::establishment::attachment_from_properties (30 samples, 0.01%)</title><rect x="20.2560%" y="693" width="0.0142%" height="15" fill="rgb(222,130,28)" fg:x="42672" fg:w="30"/><text x="20.5060%" y="703.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (294 samples, 0.14%)</title><rect x="20.1359%" y="709" width="0.1396%" height="15" fill="rgb(212,10,48)" fg:x="42419" fg:w="294"/><text x="20.3859%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (46 samples, 0.02%)</title><rect x="20.2911%" y="661" width="0.0218%" height="15" fill="rgb(254,118,45)" fg:x="42746" fg:w="46"/><text x="20.5411%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.02%)</title><rect x="20.2911%" y="645" width="0.0218%" height="15" fill="rgb(228,6,45)" fg:x="42746" fg:w="46"/><text x="20.5411%" y="655.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all::{{closure}} (44 samples, 0.02%)</title><rect x="20.2920%" y="629" width="0.0209%" height="15" fill="rgb(241,18,35)" fg:x="42748" fg:w="44"/><text x="20.5420%" y="639.50"></text></g><g><title>&lt;async_std::io::write::write_all::WriteAllFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.02%)</title><rect x="20.2920%" y="613" width="0.0209%" height="15" fill="rgb(227,214,53)" fg:x="42748" fg:w="44"/><text x="20.5420%" y="623.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (44 samples, 0.02%)</title><rect x="20.2920%" y="597" width="0.0209%" height="15" fill="rgb(224,107,51)" fg:x="42748" fg:w="44"/><text x="20.5420%" y="607.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (43 samples, 0.02%)</title><rect x="20.2925%" y="581" width="0.0204%" height="15" fill="rgb(248,60,28)" fg:x="42749" fg:w="43"/><text x="20.5425%" y="591.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (43 samples, 0.02%)</title><rect x="20.2925%" y="565" width="0.0204%" height="15" fill="rgb(249,101,23)" fg:x="42749" fg:w="43"/><text x="20.5425%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::write (43 samples, 0.02%)</title><rect x="20.2925%" y="549" width="0.0204%" height="15" fill="rgb(228,51,19)" fg:x="42749" fg:w="43"/><text x="20.5425%" y="559.50"></text></g><g><title>__send (43 samples, 0.02%)</title><rect x="20.2925%" y="533" width="0.0204%" height="15" fill="rgb(213,20,6)" fg:x="42749" fg:w="43"/><text x="20.5425%" y="543.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="20.2939%" y="517" width="0.0190%" height="15" fill="rgb(212,124,10)" fg:x="42752" fg:w="40"/><text x="20.5439%" y="527.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="20.2939%" y="501" width="0.0190%" height="15" fill="rgb(248,3,40)" fg:x="42752" fg:w="40"/><text x="20.5439%" y="511.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="20.2939%" y="485" width="0.0190%" height="15" fill="rgb(223,178,23)" fg:x="42752" fg:w="40"/><text x="20.5439%" y="495.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="20.2939%" y="469" width="0.0190%" height="15" fill="rgb(240,132,45)" fg:x="42752" fg:w="40"/><text x="20.5439%" y="479.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="20.2968%" y="453" width="0.0161%" height="15" fill="rgb(245,164,36)" fg:x="42758" fg:w="34"/><text x="20.5468%" y="463.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="20.2968%" y="437" width="0.0161%" height="15" fill="rgb(231,188,53)" fg:x="42758" fg:w="34"/><text x="20.5468%" y="447.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="20.2987%" y="421" width="0.0142%" height="15" fill="rgb(237,198,39)" fg:x="42762" fg:w="30"/><text x="20.5487%" y="431.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="20.3006%" y="405" width="0.0123%" height="15" fill="rgb(223,120,35)" fg:x="42766" fg:w="26"/><text x="20.5506%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.01%)</title><rect x="20.3324%" y="485" width="0.0119%" height="15" fill="rgb(253,107,49)" fg:x="42833" fg:w="25"/><text x="20.5824%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.01%)</title><rect x="20.3324%" y="469" width="0.0119%" height="15" fill="rgb(216,44,31)" fg:x="42833" fg:w="25"/><text x="20.5824%" y="479.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.01%)</title><rect x="20.3324%" y="453" width="0.0119%" height="15" fill="rgb(253,87,21)" fg:x="42833" fg:w="25"/><text x="20.5824%" y="463.50"></text></g><g><title>realloc (25 samples, 0.01%)</title><rect x="20.3324%" y="437" width="0.0119%" height="15" fill="rgb(226,18,2)" fg:x="42833" fg:w="25"/><text x="20.5824%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.01%)</title><rect x="20.3319%" y="501" width="0.0133%" height="15" fill="rgb(216,8,46)" fg:x="42832" fg:w="28"/><text x="20.5819%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.01%)</title><rect x="20.3314%" y="565" width="0.0142%" height="15" fill="rgb(226,140,39)" fg:x="42831" fg:w="30"/><text x="20.5814%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.01%)</title><rect x="20.3314%" y="549" width="0.0142%" height="15" fill="rgb(221,194,54)" fg:x="42831" fg:w="30"/><text x="20.5814%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.01%)</title><rect x="20.3319%" y="533" width="0.0138%" height="15" fill="rgb(213,92,11)" fg:x="42832" fg:w="29"/><text x="20.5819%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.01%)</title><rect x="20.3319%" y="517" width="0.0138%" height="15" fill="rgb(229,162,46)" fg:x="42832" fg:w="29"/><text x="20.5819%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (32 samples, 0.02%)</title><rect x="20.3314%" y="581" width="0.0152%" height="15" fill="rgb(214,111,36)" fg:x="42831" fg:w="32"/><text x="20.5814%" y="591.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (44 samples, 0.02%)</title><rect x="20.3262%" y="661" width="0.0209%" height="15" fill="rgb(207,6,21)" fg:x="42820" fg:w="44"/><text x="20.5762%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (39 samples, 0.02%)</title><rect x="20.3286%" y="645" width="0.0185%" height="15" fill="rgb(213,127,38)" fg:x="42825" fg:w="39"/><text x="20.5786%" y="655.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous::{{closure}} (34 samples, 0.02%)</title><rect x="20.3310%" y="629" width="0.0161%" height="15" fill="rgb(238,118,32)" fg:x="42830" fg:w="34"/><text x="20.5810%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (33 samples, 0.02%)</title><rect x="20.3314%" y="613" width="0.0157%" height="15" fill="rgb(240,139,39)" fg:x="42831" fg:w="33"/><text x="20.5814%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (33 samples, 0.02%)</title><rect x="20.3314%" y="597" width="0.0157%" height="15" fill="rgb(235,10,37)" fg:x="42831" fg:w="33"/><text x="20.5814%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (124 samples, 0.06%)</title><rect x="20.2892%" y="693" width="0.0589%" height="15" fill="rgb(249,171,38)" fg:x="42742" fg:w="124"/><text x="20.5392%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (124 samples, 0.06%)</title><rect x="20.2892%" y="677" width="0.0589%" height="15" fill="rgb(242,144,32)" fg:x="42742" fg:w="124"/><text x="20.5392%" y="687.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_transport::unicast::establishment::authenticator::pubkey::WPubKey&gt;::write_init_syn_property_multilink (40 samples, 0.02%)</title><rect x="20.3594%" y="645" width="0.0190%" height="15" fill="rgb(217,117,21)" fg:x="42890" fg:w="40"/><text x="20.6094%" y="655.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_transport::unicast::establishment::authenticator::pubkey::WPubKey&gt;::write_rsa_pub_key (37 samples, 0.02%)</title><rect x="20.3609%" y="629" width="0.0176%" height="15" fill="rgb(249,87,1)" fg:x="42893" fg:w="37"/><text x="20.6109%" y="639.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::to_bytes_le (22 samples, 0.01%)</title><rect x="20.3680%" y="613" width="0.0104%" height="15" fill="rgb(248,196,48)" fg:x="42908" fg:w="22"/><text x="20.6180%" y="623.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::get_init_syn_properties::{{closure}} (79 samples, 0.04%)</title><rect x="20.3485%" y="661" width="0.0375%" height="15" fill="rgb(251,206,33)" fg:x="42867" fg:w="79"/><text x="20.5985%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_transport::unicast::establishment::authenticator::shm::WShm&gt;::write_init_ack_property_shm (25 samples, 0.01%)</title><rect x="20.3879%" y="645" width="0.0119%" height="15" fill="rgb(232,141,28)" fg:x="42950" fg:w="25"/><text x="20.6379%" y="655.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (24 samples, 0.01%)</title><rect x="20.4126%" y="645" width="0.0114%" height="15" fill="rgb(209,167,14)" fg:x="43002" fg:w="24"/><text x="20.6626%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (166 samples, 0.08%)</title><rect x="20.3480%" y="693" width="0.0788%" height="15" fill="rgb(225,11,50)" fg:x="42866" fg:w="166"/><text x="20.5980%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (166 samples, 0.08%)</title><rect x="20.3480%" y="677" width="0.0788%" height="15" fill="rgb(209,50,20)" fg:x="42866" fg:w="166"/><text x="20.5980%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::get_init_syn_properties::{{closure}} (86 samples, 0.04%)</title><rect x="20.3860%" y="661" width="0.0408%" height="15" fill="rgb(212,17,46)" fg:x="42946" fg:w="86"/><text x="20.6360%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 0.01%)</title><rect x="20.4601%" y="453" width="0.0114%" height="15" fill="rgb(216,101,39)" fg:x="43102" fg:w="24"/><text x="20.7101%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 0.01%)</title><rect x="20.4601%" y="437" width="0.0114%" height="15" fill="rgb(212,228,48)" fg:x="43102" fg:w="24"/><text x="20.7101%" y="447.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 0.01%)</title><rect x="20.4601%" y="421" width="0.0114%" height="15" fill="rgb(250,6,50)" fg:x="43102" fg:w="24"/><text x="20.7101%" y="431.50"></text></g><g><title>realloc (24 samples, 0.01%)</title><rect x="20.4601%" y="405" width="0.0114%" height="15" fill="rgb(250,160,48)" fg:x="43102" fg:w="24"/><text x="20.7101%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (26 samples, 0.01%)</title><rect x="20.4596%" y="533" width="0.0123%" height="15" fill="rgb(244,216,33)" fg:x="43101" fg:w="26"/><text x="20.7096%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.01%)</title><rect x="20.4596%" y="517" width="0.0123%" height="15" fill="rgb(207,157,5)" fg:x="43101" fg:w="26"/><text x="20.7096%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.01%)</title><rect x="20.4596%" y="501" width="0.0123%" height="15" fill="rgb(228,199,8)" fg:x="43101" fg:w="26"/><text x="20.7096%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.01%)</title><rect x="20.4596%" y="485" width="0.0123%" height="15" fill="rgb(227,80,20)" fg:x="43101" fg:w="26"/><text x="20.7096%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.01%)</title><rect x="20.4596%" y="469" width="0.0123%" height="15" fill="rgb(222,9,33)" fg:x="43101" fg:w="26"/><text x="20.7096%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (27 samples, 0.01%)</title><rect x="20.4596%" y="613" width="0.0128%" height="15" fill="rgb(239,44,28)" fg:x="43101" fg:w="27"/><text x="20.7096%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (27 samples, 0.01%)</title><rect x="20.4596%" y="597" width="0.0128%" height="15" fill="rgb(249,187,43)" fg:x="43101" fg:w="27"/><text x="20.7096%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.01%)</title><rect x="20.4596%" y="581" width="0.0128%" height="15" fill="rgb(216,141,28)" fg:x="43101" fg:w="27"/><text x="20.7096%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.01%)</title><rect x="20.4596%" y="565" width="0.0128%" height="15" fill="rgb(230,154,53)" fg:x="43101" fg:w="27"/><text x="20.7096%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.01%)</title><rect x="20.4596%" y="549" width="0.0128%" height="15" fill="rgb(227,82,4)" fg:x="43101" fg:w="27"/><text x="20.7096%" y="559.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_bytes_array (28 samples, 0.01%)</title><rect x="20.4596%" y="645" width="0.0133%" height="15" fill="rgb(220,107,16)" fg:x="43101" fg:w="28"/><text x="20.7096%" y="655.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;[u8]&gt;&gt;::write (28 samples, 0.01%)</title><rect x="20.4596%" y="629" width="0.0133%" height="15" fill="rgb(207,187,2)" fg:x="43101" fg:w="28"/><text x="20.7096%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_property (32 samples, 0.02%)</title><rect x="20.4596%" y="661" width="0.0152%" height="15" fill="rgb(210,162,52)" fg:x="43101" fg:w="32"/><text x="20.7096%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_properties (36 samples, 0.02%)</title><rect x="20.4591%" y="677" width="0.0171%" height="15" fill="rgb(217,216,49)" fg:x="43100" fg:w="36"/><text x="20.7091%" y="687.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_syn::send::{{closure}} (424 samples, 0.20%)</title><rect x="20.2754%" y="709" width="0.2013%" height="15" fill="rgb(218,146,49)" fg:x="42713" fg:w="424"/><text x="20.5254%" y="719.50"></text></g><g><title>zenoh_transport::unicast::establishment::attachment_from_properties (58 samples, 0.03%)</title><rect x="20.4492%" y="693" width="0.0275%" height="15" fill="rgb(216,55,40)" fg:x="43079" fg:w="58"/><text x="20.6992%" y="703.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_ack::recv::{{closure}} (31 samples, 0.01%)</title><rect x="20.4767%" y="709" width="0.0147%" height="15" fill="rgb(208,196,21)" fg:x="43137" fg:w="31"/><text x="20.7267%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (25 samples, 0.01%)</title><rect x="20.5156%" y="565" width="0.0119%" height="15" fill="rgb(242,117,42)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (25 samples, 0.01%)</title><rect x="20.5156%" y="549" width="0.0119%" height="15" fill="rgb(210,11,23)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.01%)</title><rect x="20.5156%" y="533" width="0.0119%" height="15" fill="rgb(217,110,2)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.01%)</title><rect x="20.5156%" y="517" width="0.0119%" height="15" fill="rgb(229,77,54)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.01%)</title><rect x="20.5156%" y="501" width="0.0119%" height="15" fill="rgb(218,53,16)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.01%)</title><rect x="20.5156%" y="485" width="0.0119%" height="15" fill="rgb(215,38,13)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.01%)</title><rect x="20.5156%" y="469" width="0.0119%" height="15" fill="rgb(235,42,18)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="479.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.01%)</title><rect x="20.5156%" y="453" width="0.0119%" height="15" fill="rgb(219,66,54)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="463.50"></text></g><g><title>realloc (25 samples, 0.01%)</title><rect x="20.5156%" y="437" width="0.0119%" height="15" fill="rgb(222,205,4)" fg:x="43219" fg:w="25"/><text x="20.7656%" y="447.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (32 samples, 0.02%)</title><rect x="20.5128%" y="661" width="0.0152%" height="15" fill="rgb(227,213,46)" fg:x="43213" fg:w="32"/><text x="20.7628%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (30 samples, 0.01%)</title><rect x="20.5137%" y="645" width="0.0142%" height="15" fill="rgb(250,145,42)" fg:x="43215" fg:w="30"/><text x="20.7637%" y="655.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous::{{closure}} (26 samples, 0.01%)</title><rect x="20.5156%" y="629" width="0.0123%" height="15" fill="rgb(219,15,2)" fg:x="43219" fg:w="26"/><text x="20.7656%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (26 samples, 0.01%)</title><rect x="20.5156%" y="613" width="0.0123%" height="15" fill="rgb(231,181,52)" fg:x="43219" fg:w="26"/><text x="20.7656%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.01%)</title><rect x="20.5156%" y="597" width="0.0123%" height="15" fill="rgb(235,1,42)" fg:x="43219" fg:w="26"/><text x="20.7656%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.01%)</title><rect x="20.5156%" y="581" width="0.0123%" height="15" fill="rgb(249,88,27)" fg:x="43219" fg:w="26"/><text x="20.7656%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 0.04%)</title><rect x="20.4928%" y="693" width="0.0366%" height="15" fill="rgb(235,145,16)" fg:x="43171" fg:w="77"/><text x="20.7428%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (76 samples, 0.04%)</title><rect x="20.4933%" y="677" width="0.0361%" height="15" fill="rgb(237,114,19)" fg:x="43172" fg:w="76"/><text x="20.7433%" y="687.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_syn::send::{{closure}} (82 samples, 0.04%)</title><rect x="20.4919%" y="709" width="0.0389%" height="15" fill="rgb(238,51,50)" fg:x="43169" fg:w="82"/><text x="20.7419%" y="719.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (36 samples, 0.02%)</title><rect x="20.5336%" y="693" width="0.0171%" height="15" fill="rgb(205,194,25)" fg:x="43257" fg:w="36"/><text x="20.7836%" y="703.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (33 samples, 0.02%)</title><rect x="20.5351%" y="677" width="0.0157%" height="15" fill="rgb(215,203,17)" fg:x="43260" fg:w="33"/><text x="20.7851%" y="687.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (62 samples, 0.03%)</title><rect x="20.5308%" y="709" width="0.0294%" height="15" fill="rgb(233,112,49)" fg:x="43251" fg:w="62"/><text x="20.7808%" y="719.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_init::{{closure}} (26 samples, 0.01%)</title><rect x="20.5602%" y="709" width="0.0123%" height="15" fill="rgb(241,130,26)" fg:x="43313" fg:w="26"/><text x="20.8102%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (955 samples, 0.45%)</title><rect x="20.1240%" y="725" width="0.4533%" height="15" fill="rgb(252,223,19)" fg:x="42394" fg:w="955"/><text x="20.3740%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,006 samples, 0.48%)</title><rect x="20.1074%" y="757" width="0.4775%" height="15" fill="rgb(211,95,25)" fg:x="42359" fg:w="1006"/><text x="20.3574%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (1,006 samples, 0.48%)</title><rect x="20.1074%" y="741" width="0.4775%" height="15" fill="rgb(251,182,27)" fg:x="42359" fg:w="1006"/><text x="20.3574%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (22 samples, 0.01%)</title><rect x="20.5849%" y="581" width="0.0104%" height="15" fill="rgb(238,24,4)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (22 samples, 0.01%)</title><rect x="20.5849%" y="565" width="0.0104%" height="15" fill="rgb(224,220,25)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="575.50"></text></g><g><title>alloc::string::String::push_str (22 samples, 0.01%)</title><rect x="20.5849%" y="549" width="0.0104%" height="15" fill="rgb(239,133,26)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.01%)</title><rect x="20.5849%" y="533" width="0.0104%" height="15" fill="rgb(211,94,48)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.01%)</title><rect x="20.5849%" y="517" width="0.0104%" height="15" fill="rgb(239,87,6)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.01%)</title><rect x="20.5849%" y="501" width="0.0104%" height="15" fill="rgb(227,62,0)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 0.01%)</title><rect x="20.5849%" y="485" width="0.0104%" height="15" fill="rgb(211,226,4)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 0.01%)</title><rect x="20.5849%" y="469" width="0.0104%" height="15" fill="rgb(253,38,52)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 0.01%)</title><rect x="20.5849%" y="453" width="0.0104%" height="15" fill="rgb(229,126,40)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.01%)</title><rect x="20.5849%" y="437" width="0.0104%" height="15" fill="rgb(229,165,44)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.01%)</title><rect x="20.5849%" y="421" width="0.0104%" height="15" fill="rgb(247,95,47)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.01%)</title><rect x="20.5849%" y="405" width="0.0104%" height="15" fill="rgb(216,140,30)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.01%)</title><rect x="20.5849%" y="389" width="0.0104%" height="15" fill="rgb(246,214,8)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="399.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.01%)</title><rect x="20.5849%" y="373" width="0.0104%" height="15" fill="rgb(227,224,15)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="383.50"></text></g><g><title>realloc (22 samples, 0.01%)</title><rect x="20.5849%" y="357" width="0.0104%" height="15" fill="rgb(233,175,4)" fg:x="43365" fg:w="22"/><text x="20.8349%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (23 samples, 0.01%)</title><rect x="20.5963%" y="533" width="0.0109%" height="15" fill="rgb(221,66,45)" fg:x="43389" fg:w="23"/><text x="20.8463%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (22 samples, 0.01%)</title><rect x="20.5968%" y="517" width="0.0104%" height="15" fill="rgb(221,178,18)" fg:x="43390" fg:w="22"/><text x="20.8468%" y="527.50"></text></g><g><title>&lt;std::net::ip::Ipv4Addr as core::fmt::Display&gt;::fmt (26 samples, 0.01%)</title><rect x="20.5954%" y="581" width="0.0123%" height="15" fill="rgb(213,81,29)" fg:x="43387" fg:w="26"/><text x="20.8454%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (26 samples, 0.01%)</title><rect x="20.5954%" y="565" width="0.0123%" height="15" fill="rgb(220,89,49)" fg:x="43387" fg:w="26"/><text x="20.8454%" y="575.50"></text></g><g><title>core::fmt::write (26 samples, 0.01%)</title><rect x="20.5954%" y="549" width="0.0123%" height="15" fill="rgb(227,60,33)" fg:x="43387" fg:w="26"/><text x="20.8454%" y="559.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (1,055 samples, 0.50%)</title><rect x="20.1074%" y="901" width="0.5008%" height="15" fill="rgb(205,113,12)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,055 samples, 0.50%)</title><rect x="20.1074%" y="885" width="0.5008%" height="15" fill="rgb(211,32,1)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="895.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (1,055 samples, 0.50%)</title><rect x="20.1074%" y="869" width="0.5008%" height="15" fill="rgb(246,2,12)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,055 samples, 0.50%)</title><rect x="20.1074%" y="853" width="0.5008%" height="15" fill="rgb(243,37,27)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="863.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (1,055 samples, 0.50%)</title><rect x="20.1074%" y="837" width="0.5008%" height="15" fill="rgb(248,211,31)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,055 samples, 0.50%)</title><rect x="20.1074%" y="821" width="0.5008%" height="15" fill="rgb(242,146,47)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="831.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (1,055 samples, 0.50%)</title><rect x="20.1074%" y="805" width="0.5008%" height="15" fill="rgb(206,70,20)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,055 samples, 0.50%)</title><rect x="20.1074%" y="789" width="0.5008%" height="15" fill="rgb(215,10,51)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="799.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (1,055 samples, 0.50%)</title><rect x="20.1074%" y="773" width="0.5008%" height="15" fill="rgb(243,178,53)" fg:x="42359" fg:w="1055"/><text x="20.3574%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="20.5849%" y="757" width="0.0233%" height="15" fill="rgb(233,221,20)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="20.5849%" y="741" width="0.0233%" height="15" fill="rgb(218,95,35)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="751.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (49 samples, 0.02%)</title><rect x="20.5849%" y="725" width="0.0233%" height="15" fill="rgb(229,13,5)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="735.50"></text></g><g><title>zenoh_link_tcp::unicast::LinkUnicastTcp::new (49 samples, 0.02%)</title><rect x="20.5849%" y="709" width="0.0233%" height="15" fill="rgb(252,164,30)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="719.50"></text></g><g><title>zenoh_protocol_core::locators::Locator::new (49 samples, 0.02%)</title><rect x="20.5849%" y="693" width="0.0233%" height="15" fill="rgb(232,68,36)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="703.50"></text></g><g><title>alloc::fmt::format (49 samples, 0.02%)</title><rect x="20.5849%" y="677" width="0.0233%" height="15" fill="rgb(219,59,54)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (49 samples, 0.02%)</title><rect x="20.5849%" y="661" width="0.0233%" height="15" fill="rgb(250,92,33)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="671.50"></text></g><g><title>core::fmt::write (49 samples, 0.02%)</title><rect x="20.5849%" y="645" width="0.0233%" height="15" fill="rgb(229,162,54)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="655.50"></text></g><g><title>&lt;std::net::addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (49 samples, 0.02%)</title><rect x="20.5849%" y="629" width="0.0233%" height="15" fill="rgb(244,114,52)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (49 samples, 0.02%)</title><rect x="20.5849%" y="613" width="0.0233%" height="15" fill="rgb(212,211,43)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="623.50"></text></g><g><title>core::fmt::write (49 samples, 0.02%)</title><rect x="20.5849%" y="597" width="0.0233%" height="15" fill="rgb(226,147,8)" fg:x="43365" fg:w="49"/><text x="20.8349%" y="607.50"></text></g><g><title>async_global_executor::reactor::block_on (2,387 samples, 1.13%)</title><rect x="19.4808%" y="1237" width="1.1331%" height="15" fill="rgb(226,23,13)" fg:x="41039" fg:w="2387"/><text x="19.7308%" y="1247.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,387 samples, 1.13%)</title><rect x="19.4808%" y="1221" width="1.1331%" height="15" fill="rgb(240,63,4)" fg:x="41039" fg:w="2387"/><text x="19.7308%" y="1231.50"></text></g><g><title>async_io::driver::block_on (2,387 samples, 1.13%)</title><rect x="19.4808%" y="1205" width="1.1331%" height="15" fill="rgb(221,1,32)" fg:x="41039" fg:w="2387"/><text x="19.7308%" y="1215.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1189" width="1.0514%" height="15" fill="rgb(242,117,10)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1173" width="1.0514%" height="15" fill="rgb(249,172,44)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1183.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1157" width="1.0514%" height="15" fill="rgb(244,46,45)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1141" width="1.0514%" height="15" fill="rgb(206,43,17)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1125" width="1.0514%" height="15" fill="rgb(239,218,39)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1109" width="1.0514%" height="15" fill="rgb(208,169,54)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1093" width="1.0514%" height="15" fill="rgb(247,25,42)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1077" width="1.0514%" height="15" fill="rgb(226,23,31)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1061" width="1.0514%" height="15" fill="rgb(247,16,28)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1071.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1045" width="1.0514%" height="15" fill="rgb(231,147,38)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1055.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1029" width="1.0514%" height="15" fill="rgb(253,81,48)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1039.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,215 samples, 1.05%)</title><rect x="19.5624%" y="1013" width="1.0514%" height="15" fill="rgb(249,222,43)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,215 samples, 1.05%)</title><rect x="19.5624%" y="997" width="1.0514%" height="15" fill="rgb(221,3,27)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,215 samples, 1.05%)</title><rect x="19.5624%" y="981" width="1.0514%" height="15" fill="rgb(228,180,5)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,215 samples, 1.05%)</title><rect x="19.5624%" y="965" width="1.0514%" height="15" fill="rgb(227,131,42)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="975.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,215 samples, 1.05%)</title><rect x="19.5624%" y="949" width="1.0514%" height="15" fill="rgb(212,3,39)" fg:x="41211" fg:w="2215"/><text x="19.8124%" y="959.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (1,067 samples, 0.51%)</title><rect x="20.1074%" y="933" width="0.5065%" height="15" fill="rgb(226,45,5)" fg:x="42359" fg:w="1067"/><text x="20.3574%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,067 samples, 0.51%)</title><rect x="20.1074%" y="917" width="0.5065%" height="15" fill="rgb(215,167,45)" fg:x="42359" fg:w="1067"/><text x="20.3574%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (27 samples, 0.01%)</title><rect x="20.6286%" y="565" width="0.0128%" height="15" fill="rgb(250,218,53)" fg:x="43457" fg:w="27"/><text x="20.8786%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (33 samples, 0.02%)</title><rect x="20.6495%" y="549" width="0.0157%" height="15" fill="rgb(207,140,0)" fg:x="43501" fg:w="33"/><text x="20.8995%" y="559.50"></text></g><g><title>alloc::string::String::from_utf8 (70 samples, 0.03%)</title><rect x="20.6438%" y="565" width="0.0332%" height="15" fill="rgb(238,133,51)" fg:x="43489" fg:w="70"/><text x="20.8938%" y="575.50"></text></g><g><title>core::str::converts::from_utf8 (25 samples, 0.01%)</title><rect x="20.6651%" y="549" width="0.0119%" height="15" fill="rgb(218,203,53)" fg:x="43534" fg:w="25"/><text x="20.9151%" y="559.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (117 samples, 0.06%)</title><rect x="20.6229%" y="581" width="0.0555%" height="15" fill="rgb(226,184,25)" fg:x="43445" fg:w="117"/><text x="20.8729%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (99 samples, 0.05%)</title><rect x="20.7055%" y="565" width="0.0470%" height="15" fill="rgb(231,121,21)" fg:x="43619" fg:w="99"/><text x="20.9555%" y="575.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (99 samples, 0.05%)</title><rect x="20.7055%" y="549" width="0.0470%" height="15" fill="rgb(251,14,34)" fg:x="43619" fg:w="99"/><text x="20.9555%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (99 samples, 0.05%)</title><rect x="20.7055%" y="533" width="0.0470%" height="15" fill="rgb(249,193,11)" fg:x="43619" fg:w="99"/><text x="20.9555%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (99 samples, 0.05%)</title><rect x="20.7055%" y="517" width="0.0470%" height="15" fill="rgb(220,172,37)" fg:x="43619" fg:w="99"/><text x="20.9555%" y="527.50"></text></g><g><title>core::slice::memchr::memchr (98 samples, 0.05%)</title><rect x="20.7060%" y="501" width="0.0465%" height="15" fill="rgb(231,229,43)" fg:x="43620" fg:w="98"/><text x="20.9560%" y="511.50"></text></g><g><title>core::slice::memchr::memchr_general_case (91 samples, 0.04%)</title><rect x="20.7093%" y="485" width="0.0432%" height="15" fill="rgb(250,161,5)" fg:x="43627" fg:w="91"/><text x="20.9593%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (30 samples, 0.01%)</title><rect x="20.7662%" y="517" width="0.0142%" height="15" fill="rgb(218,225,18)" fg:x="43747" fg:w="30"/><text x="21.0162%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (22 samples, 0.01%)</title><rect x="20.7700%" y="501" width="0.0104%" height="15" fill="rgb(245,45,42)" fg:x="43755" fg:w="22"/><text x="21.0200%" y="511.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (53 samples, 0.03%)</title><rect x="20.7814%" y="453" width="0.0252%" height="15" fill="rgb(211,115,1)" fg:x="43779" fg:w="53"/><text x="21.0314%" y="463.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (28 samples, 0.01%)</title><rect x="20.7933%" y="437" width="0.0133%" height="15" fill="rgb(248,133,52)" fg:x="43804" fg:w="28"/><text x="21.0433%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (114 samples, 0.05%)</title><rect x="20.7662%" y="533" width="0.0541%" height="15" fill="rgb(238,100,21)" fg:x="43747" fg:w="114"/><text x="21.0162%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (84 samples, 0.04%)</title><rect x="20.7805%" y="517" width="0.0399%" height="15" fill="rgb(247,144,11)" fg:x="43777" fg:w="84"/><text x="21.0305%" y="527.50"></text></g><g><title>std::collections::hash::map::RandomState::new (84 samples, 0.04%)</title><rect x="20.7805%" y="501" width="0.0399%" height="15" fill="rgb(206,164,16)" fg:x="43777" fg:w="84"/><text x="21.0305%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 samples, 0.04%)</title><rect x="20.7805%" y="485" width="0.0399%" height="15" fill="rgb(222,34,3)" fg:x="43777" fg:w="84"/><text x="21.0305%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (84 samples, 0.04%)</title><rect x="20.7805%" y="469" width="0.0399%" height="15" fill="rgb(248,82,4)" fg:x="43777" fg:w="84"/><text x="21.0305%" y="479.50"></text></g><g><title>std::collections::hash::map::RandomState::new::{{closure}} (29 samples, 0.01%)</title><rect x="20.8066%" y="453" width="0.0138%" height="15" fill="rgb(228,81,46)" fg:x="43832" fg:w="29"/><text x="21.0566%" y="463.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (164 samples, 0.08%)</title><rect x="20.7525%" y="565" width="0.0778%" height="15" fill="rgb(227,67,47)" fg:x="43718" fg:w="164"/><text x="21.0025%" y="575.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str (164 samples, 0.08%)</title><rect x="20.7525%" y="549" width="0.0778%" height="15" fill="rgb(215,93,53)" fg:x="43718" fg:w="164"/><text x="21.0025%" y="559.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (22 samples, 0.01%)</title><rect x="20.8574%" y="533" width="0.0104%" height="15" fill="rgb(248,194,39)" fg:x="43939" fg:w="22"/><text x="21.1074%" y="543.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;zenoh_protocol_core::locators::Locator,R&gt;&gt;::read (518 samples, 0.25%)</title><rect x="20.6229%" y="597" width="0.2459%" height="15" fill="rgb(215,5,19)" fg:x="43445" fg:w="518"/><text x="20.8729%" y="607.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (401 samples, 0.19%)</title><rect x="20.6784%" y="581" width="0.1904%" height="15" fill="rgb(226,215,51)" fg:x="43562" fg:w="401"/><text x="20.9284%" y="591.50"></text></g><g><title>zenoh_protocol_core::split_once (81 samples, 0.04%)</title><rect x="20.8303%" y="565" width="0.0384%" height="15" fill="rgb(225,56,26)" fg:x="43882" fg:w="81"/><text x="21.0803%" y="575.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (43 samples, 0.02%)</title><rect x="20.8484%" y="549" width="0.0204%" height="15" fill="rgb(222,75,29)" fg:x="43920" fg:w="43"/><text x="21.0984%" y="559.50"></text></g><g><title>[libc.so.6] (102 samples, 0.05%)</title><rect x="20.8944%" y="469" width="0.0484%" height="15" fill="rgb(236,139,6)" fg:x="44017" fg:w="102"/><text x="21.1444%" y="479.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="20.9310%" y="453" width="0.0119%" height="15" fill="rgb(223,137,36)" fg:x="44094" fg:w="25"/><text x="21.1810%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (694 samples, 0.33%)</title><rect x="20.6139%" y="629" width="0.3294%" height="15" fill="rgb(226,99,2)" fg:x="43426" fg:w="694"/><text x="20.8639%" y="639.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (694 samples, 0.33%)</title><rect x="20.6139%" y="613" width="0.3294%" height="15" fill="rgb(206,133,23)" fg:x="43426" fg:w="694"/><text x="20.8639%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (157 samples, 0.07%)</title><rect x="20.8688%" y="597" width="0.0745%" height="15" fill="rgb(243,173,15)" fg:x="43963" fg:w="157"/><text x="21.1188%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (157 samples, 0.07%)</title><rect x="20.8688%" y="581" width="0.0745%" height="15" fill="rgb(228,69,28)" fg:x="43963" fg:w="157"/><text x="21.1188%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (157 samples, 0.07%)</title><rect x="20.8688%" y="565" width="0.0745%" height="15" fill="rgb(212,51,22)" fg:x="43963" fg:w="157"/><text x="21.1188%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (157 samples, 0.07%)</title><rect x="20.8688%" y="549" width="0.0745%" height="15" fill="rgb(227,113,0)" fg:x="43963" fg:w="157"/><text x="21.1188%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (157 samples, 0.07%)</title><rect x="20.8688%" y="533" width="0.0745%" height="15" fill="rgb(252,84,27)" fg:x="43963" fg:w="157"/><text x="21.1188%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (157 samples, 0.07%)</title><rect x="20.8688%" y="517" width="0.0745%" height="15" fill="rgb(223,145,39)" fg:x="43963" fg:w="157"/><text x="21.1188%" y="527.50"></text></g><g><title>alloc::alloc::alloc (157 samples, 0.07%)</title><rect x="20.8688%" y="501" width="0.0745%" height="15" fill="rgb(239,219,30)" fg:x="43963" fg:w="157"/><text x="21.1188%" y="511.50"></text></g><g><title>malloc (157 samples, 0.07%)</title><rect x="20.8688%" y="485" width="0.0745%" height="15" fill="rgb(224,196,39)" fg:x="43963" fg:w="157"/><text x="21.1188%" y="495.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (704 samples, 0.33%)</title><rect x="20.6139%" y="789" width="0.3342%" height="15" fill="rgb(205,35,43)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (704 samples, 0.33%)</title><rect x="20.6139%" y="773" width="0.3342%" height="15" fill="rgb(228,201,21)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="783.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (704 samples, 0.33%)</title><rect x="20.6139%" y="757" width="0.3342%" height="15" fill="rgb(237,118,16)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (704 samples, 0.33%)</title><rect x="20.6139%" y="741" width="0.3342%" height="15" fill="rgb(241,17,19)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="751.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (704 samples, 0.33%)</title><rect x="20.6139%" y="725" width="0.3342%" height="15" fill="rgb(214,10,25)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="735.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (704 samples, 0.33%)</title><rect x="20.6139%" y="709" width="0.3342%" height="15" fill="rgb(238,37,29)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="719.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (704 samples, 0.33%)</title><rect x="20.6139%" y="693" width="0.3342%" height="15" fill="rgb(253,83,25)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="703.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (704 samples, 0.33%)</title><rect x="20.6139%" y="677" width="0.3342%" height="15" fill="rgb(234,192,12)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="687.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (704 samples, 0.33%)</title><rect x="20.6139%" y="661" width="0.3342%" height="15" fill="rgb(241,216,45)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (704 samples, 0.33%)</title><rect x="20.6139%" y="645" width="0.3342%" height="15" fill="rgb(242,22,33)" fg:x="43426" fg:w="704"/><text x="20.8639%" y="655.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (42 samples, 0.02%)</title><rect x="20.9499%" y="661" width="0.0199%" height="15" fill="rgb(231,105,49)" fg:x="44134" fg:w="42"/><text x="21.1999%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_transport::unicast::establishment::authenticator::shm::WShm&gt;::write_init_ack_property_shm (25 samples, 0.01%)</title><rect x="20.9699%" y="645" width="0.0119%" height="15" fill="rgb(218,204,15)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="655.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zslice_array (25 samples, 0.01%)</title><rect x="20.9699%" y="629" width="0.0119%" height="15" fill="rgb(235,138,41)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::InsertBuffer&lt;T&gt;&gt;::append (25 samples, 0.01%)</title><rect x="20.9699%" y="613" width="0.0119%" height="15" fill="rgb(246,0,9)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_zslice (25 samples, 0.01%)</title><rect x="20.9699%" y="597" width="0.0119%" height="15" fill="rgb(210,74,4)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.01%)</title><rect x="20.9699%" y="581" width="0.0119%" height="15" fill="rgb(250,60,41)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.01%)</title><rect x="20.9699%" y="565" width="0.0119%" height="15" fill="rgb(220,115,12)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.01%)</title><rect x="20.9699%" y="549" width="0.0119%" height="15" fill="rgb(237,100,13)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.01%)</title><rect x="20.9699%" y="533" width="0.0119%" height="15" fill="rgb(213,55,26)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.01%)</title><rect x="20.9699%" y="517" width="0.0119%" height="15" fill="rgb(216,17,4)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.01%)</title><rect x="20.9699%" y="501" width="0.0119%" height="15" fill="rgb(220,153,47)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="511.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.01%)</title><rect x="20.9699%" y="485" width="0.0119%" height="15" fill="rgb(215,131,9)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="495.50"></text></g><g><title>realloc (25 samples, 0.01%)</title><rect x="20.9699%" y="469" width="0.0119%" height="15" fill="rgb(233,46,42)" fg:x="44176" fg:w="25"/><text x="21.2199%" y="479.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (25 samples, 0.01%)</title><rect x="20.9979%" y="565" width="0.0119%" height="15" fill="rgb(226,86,7)" fg:x="44235" fg:w="25"/><text x="21.2479%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (33 samples, 0.02%)</title><rect x="20.9946%" y="629" width="0.0157%" height="15" fill="rgb(239,226,21)" fg:x="44228" fg:w="33"/><text x="21.2446%" y="639.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (33 samples, 0.02%)</title><rect x="20.9946%" y="613" width="0.0157%" height="15" fill="rgb(244,137,22)" fg:x="44228" fg:w="33"/><text x="21.2446%" y="623.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (26 samples, 0.01%)</title><rect x="20.9979%" y="597" width="0.0123%" height="15" fill="rgb(211,139,35)" fg:x="44235" fg:w="26"/><text x="21.2479%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (26 samples, 0.01%)</title><rect x="20.9979%" y="581" width="0.0123%" height="15" fill="rgb(214,62,50)" fg:x="44235" fg:w="26"/><text x="21.2479%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (135 samples, 0.06%)</title><rect x="20.9499%" y="693" width="0.0641%" height="15" fill="rgb(212,113,44)" fg:x="44134" fg:w="135"/><text x="21.1999%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (135 samples, 0.06%)</title><rect x="20.9499%" y="677" width="0.0641%" height="15" fill="rgb(226,150,43)" fg:x="44134" fg:w="135"/><text x="21.1999%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (93 samples, 0.04%)</title><rect x="20.9699%" y="661" width="0.0441%" height="15" fill="rgb(250,71,37)" fg:x="44176" fg:w="93"/><text x="21.2199%" y="671.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (49 samples, 0.02%)</title><rect x="20.9908%" y="645" width="0.0233%" height="15" fill="rgb(219,76,19)" fg:x="44220" fg:w="49"/><text x="21.2408%" y="655.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (144 samples, 0.07%)</title><rect x="20.9480%" y="709" width="0.0684%" height="15" fill="rgb(250,39,11)" fg:x="44130" fg:w="144"/><text x="21.1980%" y="719.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 0.01%)</title><rect x="21.0164%" y="549" width="0.0119%" height="15" fill="rgb(230,64,31)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (25 samples, 0.01%)</title><rect x="21.0164%" y="533" width="0.0119%" height="15" fill="rgb(208,222,23)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::read (25 samples, 0.01%)</title><rect x="21.0164%" y="517" width="0.0119%" height="15" fill="rgb(227,125,18)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (25 samples, 0.01%)</title><rect x="21.0164%" y="501" width="0.0119%" height="15" fill="rgb(234,210,9)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="511.50"></text></g><g><title>recv (25 samples, 0.01%)</title><rect x="21.0164%" y="485" width="0.0119%" height="15" fill="rgb(217,127,24)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="495.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="21.0164%" y="469" width="0.0119%" height="15" fill="rgb(239,141,48)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="479.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="21.0164%" y="453" width="0.0119%" height="15" fill="rgb(227,109,8)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="463.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="21.0164%" y="437" width="0.0119%" height="15" fill="rgb(235,184,23)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="447.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="21.0164%" y="421" width="0.0119%" height="15" fill="rgb(227,226,48)" fg:x="44274" fg:w="25"/><text x="21.2664%" y="431.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_syn::recv::{{closure}} (28 samples, 0.01%)</title><rect x="21.0164%" y="709" width="0.0133%" height="15" fill="rgb(206,150,11)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="21.0164%" y="693" width="0.0133%" height="15" fill="rgb(254,2,33)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (28 samples, 0.01%)</title><rect x="21.0164%" y="677" width="0.0133%" height="15" fill="rgb(243,160,20)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="21.0164%" y="661" width="0.0133%" height="15" fill="rgb(218,208,30)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="21.0164%" y="645" width="0.0133%" height="15" fill="rgb(224,120,49)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="655.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (28 samples, 0.01%)</title><rect x="21.0164%" y="629" width="0.0133%" height="15" fill="rgb(246,12,2)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="639.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="21.0164%" y="613" width="0.0133%" height="15" fill="rgb(236,117,3)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="623.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (28 samples, 0.01%)</title><rect x="21.0164%" y="597" width="0.0133%" height="15" fill="rgb(216,128,52)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="607.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (28 samples, 0.01%)</title><rect x="21.0164%" y="581" width="0.0133%" height="15" fill="rgb(246,145,19)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="591.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (28 samples, 0.01%)</title><rect x="21.0164%" y="565" width="0.0133%" height="15" fill="rgb(222,11,46)" fg:x="44274" fg:w="28"/><text x="21.2664%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="21.0297%" y="693" width="0.0119%" height="15" fill="rgb(245,82,36)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (25 samples, 0.01%)</title><rect x="21.0297%" y="677" width="0.0119%" height="15" fill="rgb(250,73,51)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="21.0297%" y="661" width="0.0119%" height="15" fill="rgb(221,189,23)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="21.0297%" y="645" width="0.0119%" height="15" fill="rgb(210,33,7)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="655.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (25 samples, 0.01%)</title><rect x="21.0297%" y="629" width="0.0119%" height="15" fill="rgb(210,107,22)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="639.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="21.0297%" y="613" width="0.0119%" height="15" fill="rgb(222,116,37)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="623.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (25 samples, 0.01%)</title><rect x="21.0297%" y="597" width="0.0119%" height="15" fill="rgb(254,17,48)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="607.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (25 samples, 0.01%)</title><rect x="21.0297%" y="581" width="0.0119%" height="15" fill="rgb(224,36,32)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="591.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (25 samples, 0.01%)</title><rect x="21.0297%" y="565" width="0.0119%" height="15" fill="rgb(232,90,46)" fg:x="44302" fg:w="25"/><text x="21.2797%" y="575.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (37 samples, 0.02%)</title><rect x="21.0297%" y="709" width="0.0176%" height="15" fill="rgb(241,66,40)" fg:x="44302" fg:w="37"/><text x="21.2797%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (221 samples, 0.10%)</title><rect x="20.9480%" y="725" width="0.1049%" height="15" fill="rgb(249,184,29)" fg:x="44130" fg:w="221"/><text x="21.1980%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (934 samples, 0.44%)</title><rect x="20.6139%" y="805" width="0.4434%" height="15" fill="rgb(231,181,1)" fg:x="43426" fg:w="934"/><text x="20.8639%" y="815.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (230 samples, 0.11%)</title><rect x="20.9480%" y="789" width="0.1092%" height="15" fill="rgb(224,94,2)" fg:x="44130" fg:w="230"/><text x="21.1980%" y="799.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (230 samples, 0.11%)</title><rect x="20.9480%" y="773" width="0.1092%" height="15" fill="rgb(229,170,15)" fg:x="44130" fg:w="230"/><text x="21.1980%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (230 samples, 0.11%)</title><rect x="20.9480%" y="757" width="0.1092%" height="15" fill="rgb(240,127,35)" fg:x="44130" fg:w="230"/><text x="21.1980%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (230 samples, 0.11%)</title><rect x="20.9480%" y="741" width="0.1092%" height="15" fill="rgb(248,196,34)" fg:x="44130" fg:w="230"/><text x="21.1980%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (56 samples, 0.03%)</title><rect x="21.0715%" y="485" width="0.0266%" height="15" fill="rgb(236,137,7)" fg:x="44390" fg:w="56"/><text x="21.3215%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (50 samples, 0.02%)</title><rect x="21.0743%" y="469" width="0.0237%" height="15" fill="rgb(235,127,16)" fg:x="44396" fg:w="50"/><text x="21.3243%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.02%)</title><rect x="21.0743%" y="453" width="0.0237%" height="15" fill="rgb(250,192,54)" fg:x="44396" fg:w="50"/><text x="21.3243%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.02%)</title><rect x="21.0743%" y="437" width="0.0237%" height="15" fill="rgb(218,98,20)" fg:x="44396" fg:w="50"/><text x="21.3243%" y="447.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.02%)</title><rect x="21.0743%" y="421" width="0.0237%" height="15" fill="rgb(230,176,47)" fg:x="44396" fg:w="50"/><text x="21.3243%" y="431.50"></text></g><g><title>malloc (49 samples, 0.02%)</title><rect x="21.0748%" y="405" width="0.0233%" height="15" fill="rgb(244,2,33)" fg:x="44397" fg:w="49"/><text x="21.3248%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;alloc::sync::Arc&lt;async_io::reactor::Source&gt;&gt;&gt;&gt; (135 samples, 0.06%)</title><rect x="21.0981%" y="485" width="0.0641%" height="15" fill="rgb(231,100,17)" fg:x="44446" fg:w="135"/><text x="21.3481%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.06%)</title><rect x="21.0981%" y="469" width="0.0641%" height="15" fill="rgb(245,23,12)" fg:x="44446" fg:w="135"/><text x="21.3481%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (134 samples, 0.06%)</title><rect x="21.0985%" y="453" width="0.0636%" height="15" fill="rgb(249,55,22)" fg:x="44447" fg:w="134"/><text x="21.3485%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (134 samples, 0.06%)</title><rect x="21.0985%" y="437" width="0.0636%" height="15" fill="rgb(207,134,9)" fg:x="44447" fg:w="134"/><text x="21.3485%" y="447.50"></text></g><g><title>syscall (126 samples, 0.06%)</title><rect x="21.1023%" y="421" width="0.0598%" height="15" fill="rgb(218,134,0)" fg:x="44455" fg:w="126"/><text x="21.3523%" y="431.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="21.1033%" y="405" width="0.0589%" height="15" fill="rgb(213,212,33)" fg:x="44457" fg:w="124"/><text x="21.3533%" y="415.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="21.1033%" y="389" width="0.0589%" height="15" fill="rgb(252,106,18)" fg:x="44457" fg:w="124"/><text x="21.3533%" y="399.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="21.1033%" y="373" width="0.0589%" height="15" fill="rgb(208,126,42)" fg:x="44457" fg:w="124"/><text x="21.3533%" y="383.50"></text></g><g><title>[unknown] (121 samples, 0.06%)</title><rect x="21.1047%" y="357" width="0.0574%" height="15" fill="rgb(246,175,29)" fg:x="44460" fg:w="121"/><text x="21.3547%" y="367.50"></text></g><g><title>[unknown] (110 samples, 0.05%)</title><rect x="21.1099%" y="341" width="0.0522%" height="15" fill="rgb(215,13,50)" fg:x="44471" fg:w="110"/><text x="21.3599%" y="351.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="21.1337%" y="325" width="0.0285%" height="15" fill="rgb(216,172,15)" fg:x="44521" fg:w="60"/><text x="21.3837%" y="335.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="21.1436%" y="309" width="0.0185%" height="15" fill="rgb(212,103,13)" fg:x="44542" fg:w="39"/><text x="21.3936%" y="319.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="21.1484%" y="293" width="0.0138%" height="15" fill="rgb(231,171,36)" fg:x="44552" fg:w="29"/><text x="21.3984%" y="303.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (248 samples, 0.12%)</title><rect x="21.0572%" y="565" width="0.1177%" height="15" fill="rgb(250,123,20)" fg:x="44360" fg:w="248"/><text x="21.3072%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (248 samples, 0.12%)</title><rect x="21.0572%" y="549" width="0.1177%" height="15" fill="rgb(212,53,50)" fg:x="44360" fg:w="248"/><text x="21.3072%" y="559.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (248 samples, 0.12%)</title><rect x="21.0572%" y="533" width="0.1177%" height="15" fill="rgb(243,54,12)" fg:x="44360" fg:w="248"/><text x="21.3072%" y="543.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (238 samples, 0.11%)</title><rect x="21.0620%" y="517" width="0.1130%" height="15" fill="rgb(234,101,34)" fg:x="44370" fg:w="238"/><text x="21.3120%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (238 samples, 0.11%)</title><rect x="21.0620%" y="501" width="0.1130%" height="15" fill="rgb(254,67,22)" fg:x="44370" fg:w="238"/><text x="21.3120%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.01%)</title><rect x="21.1645%" y="485" width="0.0104%" height="15" fill="rgb(250,35,47)" fg:x="44586" fg:w="22"/><text x="21.4145%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (23 samples, 0.01%)</title><rect x="21.1764%" y="533" width="0.0109%" height="15" fill="rgb(226,126,38)" fg:x="44611" fg:w="23"/><text x="21.4264%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.01%)</title><rect x="21.1764%" y="517" width="0.0109%" height="15" fill="rgb(216,138,53)" fg:x="44611" fg:w="23"/><text x="21.4264%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.01%)</title><rect x="21.1764%" y="501" width="0.0109%" height="15" fill="rgb(246,199,43)" fg:x="44611" fg:w="23"/><text x="21.4264%" y="511.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.01%)</title><rect x="21.1764%" y="485" width="0.0109%" height="15" fill="rgb(232,125,11)" fg:x="44611" fg:w="23"/><text x="21.4264%" y="495.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="21.1769%" y="469" width="0.0104%" height="15" fill="rgb(218,219,45)" fg:x="44612" fg:w="22"/><text x="21.4269%" y="479.50"></text></g><g><title>std::net::parser::Parser::read_ipv4_addr (37 samples, 0.02%)</title><rect x="21.1939%" y="405" width="0.0176%" height="15" fill="rgb(216,102,54)" fg:x="44648" fg:w="37"/><text x="21.4439%" y="415.50"></text></g><g><title>std::net::parser::Parser::read_atomically (37 samples, 0.02%)</title><rect x="21.1939%" y="389" width="0.0176%" height="15" fill="rgb(250,228,7)" fg:x="44648" fg:w="37"/><text x="21.4439%" y="399.50"></text></g><g><title>std::net::parser::Parser::read_ipv4_addr::{{closure}} (31 samples, 0.01%)</title><rect x="21.1968%" y="373" width="0.0147%" height="15" fill="rgb(226,125,25)" fg:x="44654" fg:w="31"/><text x="21.4468%" y="383.50"></text></g><g><title>std::net::parser::Parser::read_separator (31 samples, 0.01%)</title><rect x="21.1968%" y="357" width="0.0147%" height="15" fill="rgb(224,165,27)" fg:x="44654" fg:w="31"/><text x="21.4468%" y="367.50"></text></g><g><title>std::net::parser::Parser::read_atomically (31 samples, 0.01%)</title><rect x="21.1968%" y="341" width="0.0147%" height="15" fill="rgb(233,86,3)" fg:x="44654" fg:w="31"/><text x="21.4468%" y="351.50"></text></g><g><title>std::net::parser::Parser::read_separator::{{closure}} (31 samples, 0.01%)</title><rect x="21.1968%" y="325" width="0.0147%" height="15" fill="rgb(228,116,20)" fg:x="44654" fg:w="31"/><text x="21.4468%" y="335.50"></text></g><g><title>std::net::parser::Parser::read_ipv4_addr::{{closure}}::{{closure}} (30 samples, 0.01%)</title><rect x="21.1973%" y="309" width="0.0142%" height="15" fill="rgb(209,192,17)" fg:x="44655" fg:w="30"/><text x="21.4473%" y="319.50"></text></g><g><title>std::net::parser::Parser::read_number (30 samples, 0.01%)</title><rect x="21.1973%" y="293" width="0.0142%" height="15" fill="rgb(224,88,34)" fg:x="44655" fg:w="30"/><text x="21.4473%" y="303.50"></text></g><g><title>std::net::parser::Parser::read_atomically (30 samples, 0.01%)</title><rect x="21.1973%" y="277" width="0.0142%" height="15" fill="rgb(233,38,6)" fg:x="44655" fg:w="30"/><text x="21.4473%" y="287.50"></text></g><g><title>std::net::parser::Parser::read_number::{{closure}} (28 samples, 0.01%)</title><rect x="21.1982%" y="261" width="0.0133%" height="15" fill="rgb(212,59,30)" fg:x="44657" fg:w="28"/><text x="21.4482%" y="271.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (332 samples, 0.16%)</title><rect x="21.0572%" y="581" width="0.1576%" height="15" fill="rgb(213,80,3)" fg:x="44360" fg:w="332"/><text x="21.3072%" y="591.50"></text></g><g><title>zenoh_link_tcp::get_tcp_addr::{{closure}} (84 samples, 0.04%)</title><rect x="21.1750%" y="565" width="0.0399%" height="15" fill="rgb(251,178,7)" fg:x="44608" fg:w="84"/><text x="21.4250%" y="575.50"></text></g><g><title>&lt;str as async_std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (82 samples, 0.04%)</title><rect x="21.1759%" y="549" width="0.0389%" height="15" fill="rgb(213,154,26)" fg:x="44610" fg:w="82"/><text x="21.4259%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (58 samples, 0.03%)</title><rect x="21.1873%" y="533" width="0.0275%" height="15" fill="rgb(238,165,49)" fg:x="44634" fg:w="58"/><text x="21.4373%" y="543.50"></text></g><g><title>std::net::parser::&lt;impl core::str::traits::FromStr for std::net::addr::SocketAddr&gt;::from_str (58 samples, 0.03%)</title><rect x="21.1873%" y="517" width="0.0275%" height="15" fill="rgb(248,91,46)" fg:x="44634" fg:w="58"/><text x="21.4373%" y="527.50"></text></g><g><title>std::net::parser::Parser::parse_with (46 samples, 0.02%)</title><rect x="21.1930%" y="501" width="0.0218%" height="15" fill="rgb(244,21,52)" fg:x="44646" fg:w="46"/><text x="21.4430%" y="511.50"></text></g><g><title>std::net::parser::&lt;impl core::str::traits::FromStr for std::net::addr::SocketAddr&gt;::from_str::{{closure}} (46 samples, 0.02%)</title><rect x="21.1930%" y="485" width="0.0218%" height="15" fill="rgb(247,122,20)" fg:x="44646" fg:w="46"/><text x="21.4430%" y="495.50"></text></g><g><title>std::net::parser::Parser::read_socket_addr (46 samples, 0.02%)</title><rect x="21.1930%" y="469" width="0.0218%" height="15" fill="rgb(218,27,9)" fg:x="44646" fg:w="46"/><text x="21.4430%" y="479.50"></text></g><g><title>std::net::parser::Parser::read_socket_addr_v4 (46 samples, 0.02%)</title><rect x="21.1930%" y="453" width="0.0218%" height="15" fill="rgb(246,7,6)" fg:x="44646" fg:w="46"/><text x="21.4430%" y="463.50"></text></g><g><title>std::net::parser::Parser::read_atomically (46 samples, 0.02%)</title><rect x="21.1930%" y="437" width="0.0218%" height="15" fill="rgb(227,135,54)" fg:x="44646" fg:w="46"/><text x="21.4430%" y="447.50"></text></g><g><title>std::net::parser::Parser::read_socket_addr_v4::{{closure}} (46 samples, 0.02%)</title><rect x="21.1930%" y="421" width="0.0218%" height="15" fill="rgb(247,14,11)" fg:x="44646" fg:w="46"/><text x="21.4430%" y="431.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1237" width="0.6090%" height="15" fill="rgb(206,149,34)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1221" width="0.6090%" height="15" fill="rgb(227,228,4)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1231.50"></text></g><g><title>std::panicking::try (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1205" width="0.6090%" height="15" fill="rgb(238,218,28)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1189" width="0.6090%" height="15" fill="rgb(252,86,40)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1199.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1173" width="0.6090%" height="15" fill="rgb(251,225,11)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1157" width="0.6090%" height="15" fill="rgb(206,46,49)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1141" width="0.6090%" height="15" fill="rgb(245,128,24)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1151.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1125" width="0.6090%" height="15" fill="rgb(219,177,34)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1135.50"></text></g><g><title>async_global_executor::reactor::block_on (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1109" width="0.6090%" height="15" fill="rgb(218,60,48)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1119.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1093" width="0.6090%" height="15" fill="rgb(221,11,5)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1103.50"></text></g><g><title>async_io::driver::block_on (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1077" width="0.6090%" height="15" fill="rgb(220,148,13)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1087.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1061" width="0.6090%" height="15" fill="rgb(210,16,3)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1045" width="0.6090%" height="15" fill="rgb(236,80,2)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1055.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1029" width="0.6090%" height="15" fill="rgb(239,129,19)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1039.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,283 samples, 0.61%)</title><rect x="20.6139%" y="1013" width="0.6090%" height="15" fill="rgb(220,106,35)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,283 samples, 0.61%)</title><rect x="20.6139%" y="997" width="0.6090%" height="15" fill="rgb(252,139,45)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,283 samples, 0.61%)</title><rect x="20.6139%" y="981" width="0.6090%" height="15" fill="rgb(229,8,36)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,283 samples, 0.61%)</title><rect x="20.6139%" y="965" width="0.6090%" height="15" fill="rgb(230,126,33)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,283 samples, 0.61%)</title><rect x="20.6139%" y="949" width="0.6090%" height="15" fill="rgb(239,140,21)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,283 samples, 0.61%)</title><rect x="20.6139%" y="933" width="0.6090%" height="15" fill="rgb(254,104,9)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,283 samples, 0.61%)</title><rect x="20.6139%" y="917" width="0.6090%" height="15" fill="rgb(239,52,14)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,283 samples, 0.61%)</title><rect x="20.6139%" y="901" width="0.6090%" height="15" fill="rgb(208,227,44)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,283 samples, 0.61%)</title><rect x="20.6139%" y="885" width="0.6090%" height="15" fill="rgb(246,18,19)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,283 samples, 0.61%)</title><rect x="20.6139%" y="869" width="0.6090%" height="15" fill="rgb(235,228,25)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,283 samples, 0.61%)</title><rect x="20.6139%" y="853" width="0.6090%" height="15" fill="rgb(240,156,20)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,283 samples, 0.61%)</title><rect x="20.6139%" y="837" width="0.6090%" height="15" fill="rgb(224,8,20)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="847.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,283 samples, 0.61%)</title><rect x="20.6139%" y="821" width="0.6090%" height="15" fill="rgb(214,12,52)" fg:x="43426" fg:w="1283"/><text x="20.8639%" y="831.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="21.0572%" y="805" width="0.1657%" height="15" fill="rgb(211,220,47)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="21.0572%" y="789" width="0.1657%" height="15" fill="rgb(250,173,5)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="799.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (349 samples, 0.17%)</title><rect x="21.0572%" y="773" width="0.1657%" height="15" fill="rgb(250,125,52)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="21.0572%" y="757" width="0.1657%" height="15" fill="rgb(209,133,18)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="767.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (349 samples, 0.17%)</title><rect x="21.0572%" y="741" width="0.1657%" height="15" fill="rgb(216,173,22)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="21.0572%" y="725" width="0.1657%" height="15" fill="rgb(205,3,22)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="735.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (349 samples, 0.17%)</title><rect x="21.0572%" y="709" width="0.1657%" height="15" fill="rgb(248,22,20)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="21.0572%" y="693" width="0.1657%" height="15" fill="rgb(233,6,29)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="703.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (349 samples, 0.17%)</title><rect x="21.0572%" y="677" width="0.1657%" height="15" fill="rgb(240,22,54)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="21.0572%" y="661" width="0.1657%" height="15" fill="rgb(231,133,32)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="671.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (349 samples, 0.17%)</title><rect x="21.0572%" y="645" width="0.1657%" height="15" fill="rgb(248,193,4)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="21.0572%" y="629" width="0.1657%" height="15" fill="rgb(211,178,46)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (349 samples, 0.17%)</title><rect x="21.0572%" y="613" width="0.1657%" height="15" fill="rgb(224,5,42)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="623.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (349 samples, 0.17%)</title><rect x="21.0572%" y="597" width="0.1657%" height="15" fill="rgb(239,176,25)" fg:x="44360" fg:w="349"/><text x="21.3072%" y="607.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (45 samples, 0.02%)</title><rect x="21.2708%" y="389" width="0.0214%" height="15" fill="rgb(245,187,50)" fg:x="44810" fg:w="45"/><text x="21.5208%" y="399.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (75 samples, 0.04%)</title><rect x="21.2637%" y="469" width="0.0356%" height="15" fill="rgb(248,24,15)" fg:x="44795" fg:w="75"/><text x="21.5137%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (72 samples, 0.03%)</title><rect x="21.2651%" y="453" width="0.0342%" height="15" fill="rgb(205,166,13)" fg:x="44798" fg:w="72"/><text x="21.5151%" y="463.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (72 samples, 0.03%)</title><rect x="21.2651%" y="437" width="0.0342%" height="15" fill="rgb(208,114,23)" fg:x="44798" fg:w="72"/><text x="21.5151%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (70 samples, 0.03%)</title><rect x="21.2661%" y="421" width="0.0332%" height="15" fill="rgb(239,127,18)" fg:x="44800" fg:w="70"/><text x="21.5161%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (63 samples, 0.03%)</title><rect x="21.2694%" y="405" width="0.0299%" height="15" fill="rgb(219,154,28)" fg:x="44807" fg:w="63"/><text x="21.5194%" y="415.50"></text></g><g><title>[libc.so.6] (55 samples, 0.03%)</title><rect x="21.2993%" y="469" width="0.0261%" height="15" fill="rgb(225,157,23)" fg:x="44870" fg:w="55"/><text x="21.5493%" y="479.50"></text></g><g><title>async_executor::Runner::new (31 samples, 0.01%)</title><rect x="21.3344%" y="469" width="0.0147%" height="15" fill="rgb(219,8,6)" fg:x="44944" fg:w="31"/><text x="21.5844%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (32 samples, 0.02%)</title><rect x="21.3824%" y="437" width="0.0152%" height="15" fill="rgb(212,47,6)" fg:x="45045" fg:w="32"/><text x="21.6324%" y="447.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.02%)</title><rect x="21.3824%" y="421" width="0.0152%" height="15" fill="rgb(224,190,4)" fg:x="45045" fg:w="32"/><text x="21.6324%" y="431.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (23 samples, 0.01%)</title><rect x="21.3867%" y="405" width="0.0109%" height="15" fill="rgb(239,183,29)" fg:x="45054" fg:w="23"/><text x="21.6367%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (23 samples, 0.01%)</title><rect x="21.3867%" y="389" width="0.0109%" height="15" fill="rgb(213,57,7)" fg:x="45054" fg:w="23"/><text x="21.6367%" y="399.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (111 samples, 0.05%)</title><rect x="21.3511%" y="453" width="0.0527%" height="15" fill="rgb(216,148,1)" fg:x="44979" fg:w="111"/><text x="21.6011%" y="463.50"></text></g><g><title>cfree (28 samples, 0.01%)</title><rect x="21.4185%" y="405" width="0.0133%" height="15" fill="rgb(236,182,29)" fg:x="45121" fg:w="28"/><text x="21.6685%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (123 samples, 0.06%)</title><rect x="21.4057%" y="421" width="0.0584%" height="15" fill="rgb(244,120,48)" fg:x="45094" fg:w="123"/><text x="21.6557%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (57 samples, 0.03%)</title><rect x="21.4370%" y="405" width="0.0271%" height="15" fill="rgb(206,71,34)" fg:x="45160" fg:w="57"/><text x="21.6870%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (44 samples, 0.02%)</title><rect x="21.4432%" y="389" width="0.0209%" height="15" fill="rgb(242,32,6)" fg:x="45173" fg:w="44"/><text x="21.6932%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (42 samples, 0.02%)</title><rect x="21.4441%" y="373" width="0.0199%" height="15" fill="rgb(241,35,3)" fg:x="45175" fg:w="42"/><text x="21.6941%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (42 samples, 0.02%)</title><rect x="21.4441%" y="357" width="0.0199%" height="15" fill="rgb(222,62,19)" fg:x="45175" fg:w="42"/><text x="21.6941%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (27 samples, 0.01%)</title><rect x="21.4512%" y="341" width="0.0128%" height="15" fill="rgb(223,110,41)" fg:x="45190" fg:w="27"/><text x="21.7012%" y="351.50"></text></g><g><title>alloc::alloc::box_free (26 samples, 0.01%)</title><rect x="21.4517%" y="325" width="0.0123%" height="15" fill="rgb(208,224,4)" fg:x="45191" fg:w="26"/><text x="21.7017%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.01%)</title><rect x="21.4517%" y="309" width="0.0123%" height="15" fill="rgb(241,137,19)" fg:x="45191" fg:w="26"/><text x="21.7017%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.01%)</title><rect x="21.4517%" y="293" width="0.0123%" height="15" fill="rgb(244,24,17)" fg:x="45191" fg:w="26"/><text x="21.7017%" y="303.50"></text></g><g><title>cfree (28 samples, 0.01%)</title><rect x="21.4640%" y="421" width="0.0133%" height="15" fill="rgb(245,178,49)" fg:x="45217" fg:w="28"/><text x="21.7140%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (157 samples, 0.07%)</title><rect x="21.4038%" y="453" width="0.0745%" height="15" fill="rgb(219,160,38)" fg:x="45090" fg:w="157"/><text x="21.6538%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (157 samples, 0.07%)</title><rect x="21.4038%" y="437" width="0.0745%" height="15" fill="rgb(228,137,14)" fg:x="45090" fg:w="157"/><text x="21.6538%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (318 samples, 0.15%)</title><rect x="21.3492%" y="469" width="0.1510%" height="15" fill="rgb(237,134,11)" fg:x="44975" fg:w="318"/><text x="21.5992%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Ticker&gt; (46 samples, 0.02%)</title><rect x="21.4783%" y="453" width="0.0218%" height="15" fill="rgb(211,126,44)" fg:x="45247" fg:w="46"/><text x="21.7283%" y="463.50"></text></g><g><title>&lt;async_executor::Ticker as core::ops::drop::Drop&gt;::drop (46 samples, 0.02%)</title><rect x="21.4783%" y="437" width="0.0218%" height="15" fill="rgb(226,171,33)" fg:x="45247" fg:w="46"/><text x="21.7283%" y="447.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop (36 samples, 0.02%)</title><rect x="21.5191%" y="421" width="0.0171%" height="15" fill="rgb(253,99,13)" fg:x="45333" fg:w="36"/><text x="21.7691%" y="431.50"></text></g><g><title>async_std::utils::abort_on_panic (33 samples, 0.02%)</title><rect x="21.5205%" y="405" width="0.0157%" height="15" fill="rgb(244,48,7)" fg:x="45336" fg:w="33"/><text x="21.7705%" y="415.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop::{{closure}} (33 samples, 0.02%)</title><rect x="21.5205%" y="389" width="0.0157%" height="15" fill="rgb(244,217,54)" fg:x="45336" fg:w="33"/><text x="21.7705%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (64 samples, 0.03%)</title><rect x="21.5068%" y="437" width="0.0304%" height="15" fill="rgb(224,15,18)" fg:x="45307" fg:w="64"/><text x="21.7568%" y="447.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (634 samples, 0.30%)</title><rect x="21.2481%" y="485" width="0.3010%" height="15" fill="rgb(244,99,12)" fg:x="44762" fg:w="634"/><text x="21.4981%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::Or&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (103 samples, 0.05%)</title><rect x="21.5001%" y="469" width="0.0489%" height="15" fill="rgb(233,226,8)" fg:x="45293" fg:w="103"/><text x="21.7501%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt; (103 samples, 0.05%)</title><rect x="21.5001%" y="453" width="0.0489%" height="15" fill="rgb(229,211,3)" fg:x="45293" fg:w="103"/><text x="21.7501%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt; (25 samples, 0.01%)</title><rect x="21.5371%" y="437" width="0.0119%" height="15" fill="rgb(216,140,21)" fg:x="45371" fg:w="25"/><text x="21.7871%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (635 samples, 0.30%)</title><rect x="21.2481%" y="501" width="0.3014%" height="15" fill="rgb(234,122,30)" fg:x="44762" fg:w="635"/><text x="21.4981%" y="511.50"></text></g><g><title>[libc.so.6] (80 samples, 0.04%)</title><rect x="21.5495%" y="501" width="0.0380%" height="15" fill="rgb(236,25,46)" fg:x="45397" fg:w="80"/><text x="21.7995%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (784 samples, 0.37%)</title><rect x="21.2262%" y="533" width="0.3722%" height="15" fill="rgb(217,52,54)" fg:x="44716" fg:w="784"/><text x="21.4762%" y="543.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (784 samples, 0.37%)</title><rect x="21.2262%" y="517" width="0.3722%" height="15" fill="rgb(222,29,26)" fg:x="44716" fg:w="784"/><text x="21.4762%" y="527.50"></text></g><g><title>[libc.so.6] (37 samples, 0.02%)</title><rect x="21.6007%" y="533" width="0.0176%" height="15" fill="rgb(216,177,29)" fg:x="45505" fg:w="37"/><text x="21.8507%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (27 samples, 0.01%)</title><rect x="21.6183%" y="533" width="0.0128%" height="15" fill="rgb(247,136,51)" fg:x="45542" fg:w="27"/><text x="21.8683%" y="543.50"></text></g><g><title>cfree (24 samples, 0.01%)</title><rect x="21.6354%" y="501" width="0.0114%" height="15" fill="rgb(231,47,47)" fg:x="45578" fg:w="24"/><text x="21.8854%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (34 samples, 0.02%)</title><rect x="21.6311%" y="533" width="0.0161%" height="15" fill="rgb(211,192,36)" fg:x="45569" fg:w="34"/><text x="21.8811%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.02%)</title><rect x="21.6311%" y="517" width="0.0161%" height="15" fill="rgb(229,156,32)" fg:x="45569" fg:w="34"/><text x="21.8811%" y="527.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (120 samples, 0.06%)</title><rect x="21.6473%" y="485" width="0.0570%" height="15" fill="rgb(248,213,20)" fg:x="45603" fg:w="120"/><text x="21.8973%" y="495.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (120 samples, 0.06%)</title><rect x="21.6473%" y="469" width="0.0570%" height="15" fill="rgb(217,64,7)" fg:x="45603" fg:w="120"/><text x="21.8973%" y="479.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (120 samples, 0.06%)</title><rect x="21.6473%" y="453" width="0.0570%" height="15" fill="rgb(232,142,8)" fg:x="45603" fg:w="120"/><text x="21.8973%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (120 samples, 0.06%)</title><rect x="21.6473%" y="437" width="0.0570%" height="15" fill="rgb(224,92,44)" fg:x="45603" fg:w="120"/><text x="21.8973%" y="447.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (120 samples, 0.06%)</title><rect x="21.6473%" y="421" width="0.0570%" height="15" fill="rgb(214,169,17)" fg:x="45603" fg:w="120"/><text x="21.8973%" y="431.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (120 samples, 0.06%)</title><rect x="21.6473%" y="405" width="0.0570%" height="15" fill="rgb(210,59,37)" fg:x="45603" fg:w="120"/><text x="21.8973%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (203 samples, 0.10%)</title><rect x="21.7042%" y="485" width="0.0964%" height="15" fill="rgb(214,116,48)" fg:x="45723" fg:w="203"/><text x="21.9542%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (203 samples, 0.10%)</title><rect x="21.7042%" y="469" width="0.0964%" height="15" fill="rgb(244,191,6)" fg:x="45723" fg:w="203"/><text x="21.9542%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (235 samples, 0.11%)</title><rect x="21.8068%" y="453" width="0.1116%" height="15" fill="rgb(241,50,52)" fg:x="45939" fg:w="235"/><text x="22.0568%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (235 samples, 0.11%)</title><rect x="21.8068%" y="437" width="0.1116%" height="15" fill="rgb(236,75,39)" fg:x="45939" fg:w="235"/><text x="22.0568%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (912 samples, 0.43%)</title><rect x="21.6473%" y="533" width="0.4329%" height="15" fill="rgb(236,99,0)" fg:x="45603" fg:w="912"/><text x="21.8973%" y="543.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (912 samples, 0.43%)</title><rect x="21.6473%" y="517" width="0.4329%" height="15" fill="rgb(207,202,15)" fg:x="45603" fg:w="912"/><text x="21.8973%" y="527.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (912 samples, 0.43%)</title><rect x="21.6473%" y="501" width="0.4329%" height="15" fill="rgb(233,207,14)" fg:x="45603" fg:w="912"/><text x="21.8973%" y="511.50"></text></g><g><title>parking::Unparker::unpark (589 samples, 0.28%)</title><rect x="21.8006%" y="485" width="0.2796%" height="15" fill="rgb(226,27,51)" fg:x="45926" fg:w="589"/><text x="22.0506%" y="495.50"></text></g><g><title>parking::Inner::unpark (582 samples, 0.28%)</title><rect x="21.8039%" y="469" width="0.2763%" height="15" fill="rgb(206,104,42)" fg:x="45933" fg:w="582"/><text x="22.0539%" y="479.50"></text></g><g><title>syscall (329 samples, 0.16%)</title><rect x="21.9240%" y="453" width="0.1562%" height="15" fill="rgb(212,225,4)" fg:x="46186" fg:w="329"/><text x="22.1740%" y="463.50"></text></g><g><title>[unknown] (323 samples, 0.15%)</title><rect x="21.9269%" y="437" width="0.1533%" height="15" fill="rgb(233,96,42)" fg:x="46192" fg:w="323"/><text x="22.1769%" y="447.50"></text></g><g><title>[unknown] (320 samples, 0.15%)</title><rect x="21.9283%" y="421" width="0.1519%" height="15" fill="rgb(229,21,32)" fg:x="46195" fg:w="320"/><text x="22.1783%" y="431.50"></text></g><g><title>[unknown] (319 samples, 0.15%)</title><rect x="21.9288%" y="405" width="0.1514%" height="15" fill="rgb(226,216,24)" fg:x="46196" fg:w="319"/><text x="22.1788%" y="415.50"></text></g><g><title>[unknown] (310 samples, 0.15%)</title><rect x="21.9330%" y="389" width="0.1472%" height="15" fill="rgb(221,163,17)" fg:x="46205" fg:w="310"/><text x="22.1830%" y="399.50"></text></g><g><title>[unknown] (283 samples, 0.13%)</title><rect x="21.9458%" y="373" width="0.1343%" height="15" fill="rgb(216,216,42)" fg:x="46232" fg:w="283"/><text x="22.1958%" y="383.50"></text></g><g><title>[unknown] (208 samples, 0.10%)</title><rect x="21.9814%" y="357" width="0.0987%" height="15" fill="rgb(240,118,7)" fg:x="46307" fg:w="208"/><text x="22.2314%" y="367.50"></text></g><g><title>[unknown] (149 samples, 0.07%)</title><rect x="22.0095%" y="341" width="0.0707%" height="15" fill="rgb(221,67,37)" fg:x="46366" fg:w="149"/><text x="22.2595%" y="351.50"></text></g><g><title>[unknown] (115 samples, 0.05%)</title><rect x="22.0256%" y="325" width="0.0546%" height="15" fill="rgb(241,32,44)" fg:x="46400" fg:w="115"/><text x="22.2756%" y="335.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="22.0455%" y="309" width="0.0347%" height="15" fill="rgb(235,204,43)" fg:x="46442" fg:w="73"/><text x="22.2955%" y="319.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="22.0588%" y="293" width="0.0214%" height="15" fill="rgb(213,116,10)" fg:x="46470" fg:w="45"/><text x="22.3088%" y="303.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="22.0697%" y="277" width="0.0104%" height="15" fill="rgb(239,15,48)" fg:x="46493" fg:w="22"/><text x="22.3197%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (25 samples, 0.01%)</title><rect x="22.0963%" y="485" width="0.0119%" height="15" fill="rgb(207,123,36)" fg:x="46549" fg:w="25"/><text x="22.3463%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (25 samples, 0.01%)</title><rect x="22.0963%" y="469" width="0.0119%" height="15" fill="rgb(209,103,30)" fg:x="46549" fg:w="25"/><text x="22.3463%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;core::sync::atomic::AtomicBool&gt;&gt; (22 samples, 0.01%)</title><rect x="22.1352%" y="405" width="0.0104%" height="15" fill="rgb(238,100,19)" fg:x="46631" fg:w="22"/><text x="22.3852%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="22.1352%" y="389" width="0.0104%" height="15" fill="rgb(244,30,14)" fg:x="46631" fg:w="22"/><text x="22.3852%" y="399.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (79 samples, 0.04%)</title><rect x="22.1281%" y="437" width="0.0375%" height="15" fill="rgb(249,174,6)" fg:x="46616" fg:w="79"/><text x="22.3781%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::block_on&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt; (64 samples, 0.03%)</title><rect x="22.1352%" y="421" width="0.0304%" height="15" fill="rgb(235,213,41)" fg:x="46631" fg:w="64"/><text x="22.3852%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (42 samples, 0.02%)</title><rect x="22.1457%" y="405" width="0.0199%" height="15" fill="rgb(213,118,6)" fg:x="46653" fg:w="42"/><text x="22.3957%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (42 samples, 0.02%)</title><rect x="22.1457%" y="389" width="0.0199%" height="15" fill="rgb(235,44,51)" fg:x="46653" fg:w="42"/><text x="22.3957%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.02%)</title><rect x="22.1457%" y="373" width="0.0199%" height="15" fill="rgb(217,9,53)" fg:x="46653" fg:w="42"/><text x="22.3957%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (200 samples, 0.09%)</title><rect x="22.0802%" y="533" width="0.0949%" height="15" fill="rgb(237,172,34)" fg:x="46515" fg:w="200"/><text x="22.3302%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (200 samples, 0.09%)</title><rect x="22.0802%" y="517" width="0.0949%" height="15" fill="rgb(206,206,11)" fg:x="46515" fg:w="200"/><text x="22.3302%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (195 samples, 0.09%)</title><rect x="22.0826%" y="501" width="0.0926%" height="15" fill="rgb(214,149,29)" fg:x="46520" fg:w="195"/><text x="22.3326%" y="511.50"></text></g><g><title>core::mem::drop (141 samples, 0.07%)</title><rect x="22.1082%" y="485" width="0.0669%" height="15" fill="rgb(208,123,3)" fg:x="46574" fg:w="141"/><text x="22.3582%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (141 samples, 0.07%)</title><rect x="22.1082%" y="469" width="0.0669%" height="15" fill="rgb(229,126,4)" fg:x="46574" fg:w="141"/><text x="22.3582%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (141 samples, 0.07%)</title><rect x="22.1082%" y="453" width="0.0669%" height="15" fill="rgb(222,92,36)" fg:x="46574" fg:w="141"/><text x="22.3582%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::condvar::Condvar&gt; (24 samples, 0.01%)</title><rect x="22.1846%" y="437" width="0.0114%" height="15" fill="rgb(216,39,41)" fg:x="46735" fg:w="24"/><text x="22.4346%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (59 samples, 0.03%)</title><rect x="22.1784%" y="469" width="0.0280%" height="15" fill="rgb(253,127,28)" fg:x="46722" fg:w="59"/><text x="22.4284%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Inner&gt; (46 samples, 0.02%)</title><rect x="22.1846%" y="453" width="0.0218%" height="15" fill="rgb(249,152,51)" fg:x="46735" fg:w="46"/><text x="22.4346%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;()&gt;&gt; (22 samples, 0.01%)</title><rect x="22.1960%" y="437" width="0.0104%" height="15" fill="rgb(209,123,42)" fg:x="46759" fg:w="22"/><text x="22.4460%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Parker&gt; (86 samples, 0.04%)</title><rect x="22.1751%" y="533" width="0.0408%" height="15" fill="rgb(241,118,22)" fg:x="46715" fg:w="86"/><text x="22.4251%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (86 samples, 0.04%)</title><rect x="22.1751%" y="517" width="0.0408%" height="15" fill="rgb(208,25,7)" fg:x="46715" fg:w="86"/><text x="22.4251%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (86 samples, 0.04%)</title><rect x="22.1751%" y="501" width="0.0408%" height="15" fill="rgb(243,144,39)" fg:x="46715" fg:w="86"/><text x="22.4251%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.04%)</title><rect x="22.1751%" y="485" width="0.0408%" height="15" fill="rgb(250,50,5)" fg:x="46715" fg:w="86"/><text x="22.4251%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (213 samples, 0.10%)</title><rect x="22.2159%" y="533" width="0.1011%" height="15" fill="rgb(207,67,11)" fg:x="46801" fg:w="213"/><text x="22.4659%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (213 samples, 0.10%)</title><rect x="22.2159%" y="517" width="0.1011%" height="15" fill="rgb(245,204,40)" fg:x="46801" fg:w="213"/><text x="22.4659%" y="527.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (23 samples, 0.01%)</title><rect x="22.3294%" y="501" width="0.0109%" height="15" fill="rgb(238,228,24)" fg:x="47040" fg:w="23"/><text x="22.5794%" y="511.50"></text></g><g><title>parking::Parker::new (46 samples, 0.02%)</title><rect x="22.3204%" y="517" width="0.0218%" height="15" fill="rgb(217,116,22)" fg:x="47021" fg:w="46"/><text x="22.5704%" y="527.50"></text></g><g><title>parking::pair (54 samples, 0.03%)</title><rect x="22.3190%" y="533" width="0.0256%" height="15" fill="rgb(234,98,12)" fg:x="47018" fg:w="54"/><text x="22.5690%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2,407 samples, 1.14%)</title><rect x="21.2229%" y="853" width="1.1426%" height="15" fill="rgb(242,170,50)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (2,407 samples, 1.14%)</title><rect x="21.2229%" y="837" width="1.1426%" height="15" fill="rgb(235,7,5)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="847.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,407 samples, 1.14%)</title><rect x="21.2229%" y="821" width="1.1426%" height="15" fill="rgb(241,114,28)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="831.50"></text></g><g><title>async_std::task::block_on::block_on (2,407 samples, 1.14%)</title><rect x="21.2229%" y="805" width="1.1426%" height="15" fill="rgb(246,112,42)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="815.50"></text></g><g><title>async_std::task::builder::Builder::blocking (2,407 samples, 1.14%)</title><rect x="21.2229%" y="789" width="1.1426%" height="15" fill="rgb(248,228,14)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,407 samples, 1.14%)</title><rect x="21.2229%" y="773" width="1.1426%" height="15" fill="rgb(208,133,18)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,407 samples, 1.14%)</title><rect x="21.2229%" y="757" width="1.1426%" height="15" fill="rgb(207,35,49)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="767.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (2,407 samples, 1.14%)</title><rect x="21.2229%" y="741" width="1.1426%" height="15" fill="rgb(205,68,36)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="751.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,407 samples, 1.14%)</title><rect x="21.2229%" y="725" width="1.1426%" height="15" fill="rgb(245,62,40)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,407 samples, 1.14%)</title><rect x="21.2229%" y="709" width="1.1426%" height="15" fill="rgb(228,27,24)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,407 samples, 1.14%)</title><rect x="21.2229%" y="693" width="1.1426%" height="15" fill="rgb(253,19,12)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,407 samples, 1.14%)</title><rect x="21.2229%" y="677" width="1.1426%" height="15" fill="rgb(232,28,20)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="687.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (2,407 samples, 1.14%)</title><rect x="21.2229%" y="661" width="1.1426%" height="15" fill="rgb(218,35,51)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="671.50"></text></g><g><title>async_global_executor::executor::block_on (2,407 samples, 1.14%)</title><rect x="21.2229%" y="645" width="1.1426%" height="15" fill="rgb(212,90,40)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,407 samples, 1.14%)</title><rect x="21.2229%" y="629" width="1.1426%" height="15" fill="rgb(220,172,12)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,407 samples, 1.14%)</title><rect x="21.2229%" y="613" width="1.1426%" height="15" fill="rgb(226,159,20)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="623.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (2,407 samples, 1.14%)</title><rect x="21.2229%" y="597" width="1.1426%" height="15" fill="rgb(234,205,16)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="607.50"></text></g><g><title>async_global_executor::reactor::block_on (2,407 samples, 1.14%)</title><rect x="21.2229%" y="581" width="1.1426%" height="15" fill="rgb(207,9,39)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="591.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,407 samples, 1.14%)</title><rect x="21.2229%" y="565" width="1.1426%" height="15" fill="rgb(249,143,15)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="575.50"></text></g><g><title>async_io::driver::block_on (2,407 samples, 1.14%)</title><rect x="21.2229%" y="549" width="1.1426%" height="15" fill="rgb(253,133,29)" fg:x="44709" fg:w="2407"/><text x="21.4729%" y="559.50"></text></g><g><title>waker_fn::waker_fn (44 samples, 0.02%)</title><rect x="22.3446%" y="533" width="0.0209%" height="15" fill="rgb(221,187,0)" fg:x="47072" fg:w="44"/><text x="22.5946%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (44 samples, 0.02%)</title><rect x="22.3446%" y="517" width="0.0209%" height="15" fill="rgb(205,204,26)" fg:x="47072" fg:w="44"/><text x="22.5946%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.02%)</title><rect x="22.3479%" y="501" width="0.0176%" height="15" fill="rgb(224,68,54)" fg:x="47079" fg:w="37"/><text x="22.5979%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.02%)</title><rect x="22.3479%" y="485" width="0.0176%" height="15" fill="rgb(209,67,4)" fg:x="47079" fg:w="37"/><text x="22.5979%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.02%)</title><rect x="22.3479%" y="469" width="0.0176%" height="15" fill="rgb(228,229,18)" fg:x="47079" fg:w="37"/><text x="22.5979%" y="479.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.02%)</title><rect x="22.3484%" y="453" width="0.0171%" height="15" fill="rgb(231,89,13)" fg:x="47080" fg:w="36"/><text x="22.5984%" y="463.50"></text></g><g><title>malloc (31 samples, 0.01%)</title><rect x="22.3508%" y="437" width="0.0147%" height="15" fill="rgb(210,182,18)" fg:x="47085" fg:w="31"/><text x="22.6008%" y="447.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (2,408 samples, 1.14%)</title><rect x="21.2229%" y="869" width="1.1431%" height="15" fill="rgb(240,105,2)" fg:x="44709" fg:w="2408"/><text x="21.4729%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (94 samples, 0.04%)</title><rect x="22.4234%" y="789" width="0.0446%" height="15" fill="rgb(207,170,50)" fg:x="47238" fg:w="94"/><text x="22.6734%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.01%)</title><rect x="22.4566%" y="773" width="0.0114%" height="15" fill="rgb(232,133,24)" fg:x="47308" fg:w="24"/><text x="22.7066%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.01%)</title><rect x="22.4566%" y="757" width="0.0114%" height="15" fill="rgb(235,166,27)" fg:x="47308" fg:w="24"/><text x="22.7066%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.03%)</title><rect x="22.4870%" y="773" width="0.0266%" height="15" fill="rgb(209,19,13)" fg:x="47372" fg:w="56"/><text x="22.7370%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(petgraph::graph_impl::NodeIndex,zenoh::net::routing::network::Node)&gt;&gt; (62 samples, 0.03%)</title><rect x="22.4846%" y="789" width="0.0294%" height="15" fill="rgb(226,79,39)" fg:x="47367" fg:w="62"/><text x="22.7346%" y="799.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::wake_writer_or_readers (23 samples, 0.01%)</title><rect x="22.5468%" y="725" width="0.0109%" height="15" fill="rgb(222,163,10)" fg:x="47498" fg:w="23"/><text x="22.7968%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;zenoh::net::routing::router::Tables&gt;&gt; (910 samples, 0.43%)</title><rect x="22.5202%" y="789" width="0.4320%" height="15" fill="rgb(214,44,19)" fg:x="47442" fg:w="910"/><text x="22.7702%" y="799.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (910 samples, 0.43%)</title><rect x="22.5202%" y="773" width="0.4320%" height="15" fill="rgb(210,217,13)" fg:x="47442" fg:w="910"/><text x="22.7702%" y="783.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (891 samples, 0.42%)</title><rect x="22.5292%" y="757" width="0.4229%" height="15" fill="rgb(237,61,54)" fg:x="47461" fg:w="891"/><text x="22.7792%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (891 samples, 0.42%)</title><rect x="22.5292%" y="741" width="0.4229%" height="15" fill="rgb(226,184,24)" fg:x="47461" fg:w="891"/><text x="22.7792%" y="751.50"></text></g><g><title>syscall (800 samples, 0.38%)</title><rect x="22.5724%" y="725" width="0.3798%" height="15" fill="rgb(223,226,4)" fg:x="47552" fg:w="800"/><text x="22.8224%" y="735.50"></text></g><g><title>[unknown] (788 samples, 0.37%)</title><rect x="22.5781%" y="709" width="0.3741%" height="15" fill="rgb(210,26,41)" fg:x="47564" fg:w="788"/><text x="22.8281%" y="719.50"></text></g><g><title>[unknown] (782 samples, 0.37%)</title><rect x="22.5810%" y="693" width="0.3712%" height="15" fill="rgb(220,221,6)" fg:x="47570" fg:w="782"/><text x="22.8310%" y="703.50"></text></g><g><title>[unknown] (781 samples, 0.37%)</title><rect x="22.5815%" y="677" width="0.3707%" height="15" fill="rgb(225,89,49)" fg:x="47571" fg:w="781"/><text x="22.8315%" y="687.50"></text></g><g><title>[unknown] (753 samples, 0.36%)</title><rect x="22.5947%" y="661" width="0.3574%" height="15" fill="rgb(218,70,45)" fg:x="47599" fg:w="753"/><text x="22.8447%" y="671.50"></text></g><g><title>[unknown] (701 samples, 0.33%)</title><rect x="22.6194%" y="645" width="0.3328%" height="15" fill="rgb(238,166,21)" fg:x="47651" fg:w="701"/><text x="22.8694%" y="655.50"></text></g><g><title>[unknown] (525 samples, 0.25%)</title><rect x="22.7030%" y="629" width="0.2492%" height="15" fill="rgb(224,141,44)" fg:x="47827" fg:w="525"/><text x="22.9530%" y="639.50"></text></g><g><title>[unknown] (389 samples, 0.18%)</title><rect x="22.7675%" y="613" width="0.1847%" height="15" fill="rgb(230,12,49)" fg:x="47963" fg:w="389"/><text x="23.0175%" y="623.50"></text></g><g><title>[unknown] (331 samples, 0.16%)</title><rect x="22.7951%" y="597" width="0.1571%" height="15" fill="rgb(212,174,12)" fg:x="48021" fg:w="331"/><text x="23.0451%" y="607.50"></text></g><g><title>[unknown] (206 samples, 0.10%)</title><rect x="22.8544%" y="581" width="0.0978%" height="15" fill="rgb(246,67,9)" fg:x="48146" fg:w="206"/><text x="23.1044%" y="591.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="22.9213%" y="565" width="0.0309%" height="15" fill="rgb(239,35,23)" fg:x="48287" fg:w="65"/><text x="23.1713%" y="575.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="22.9365%" y="549" width="0.0157%" height="15" fill="rgb(211,167,0)" fg:x="48319" fg:w="33"/><text x="23.1865%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (46 samples, 0.02%)</title><rect x="22.9636%" y="725" width="0.0218%" height="15" fill="rgb(225,119,45)" fg:x="48376" fg:w="46"/><text x="23.2136%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.02%)</title><rect x="22.9636%" y="709" width="0.0218%" height="15" fill="rgb(210,162,6)" fg:x="48376" fg:w="46"/><text x="23.2136%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::try_write (75 samples, 0.04%)</title><rect x="22.9522%" y="789" width="0.0356%" height="15" fill="rgb(208,118,35)" fg:x="48352" fg:w="75"/><text x="23.2022%" y="799.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::try_write (67 samples, 0.03%)</title><rect x="22.9560%" y="773" width="0.0318%" height="15" fill="rgb(239,4,53)" fg:x="48360" fg:w="67"/><text x="23.2060%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::try_write (67 samples, 0.03%)</title><rect x="22.9560%" y="757" width="0.0318%" height="15" fill="rgb(213,130,21)" fg:x="48360" fg:w="67"/><text x="23.2060%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_update (67 samples, 0.03%)</title><rect x="22.9560%" y="741" width="0.0318%" height="15" fill="rgb(235,148,0)" fg:x="48360" fg:w="67"/><text x="23.2060%" y="751.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (25 samples, 0.01%)</title><rect x="22.9878%" y="773" width="0.0119%" height="15" fill="rgb(244,224,18)" fg:x="48427" fg:w="25"/><text x="23.2378%" y="783.50"></text></g><g><title>std::sync::poison::Flag::borrow (25 samples, 0.01%)</title><rect x="22.9878%" y="757" width="0.0119%" height="15" fill="rgb(211,214,4)" fg:x="48427" fg:w="25"/><text x="23.2378%" y="767.50"></text></g><g><title>std::sys::unix::futex::futex_wait (651 samples, 0.31%)</title><rect x="23.0286%" y="725" width="0.3090%" height="15" fill="rgb(206,119,25)" fg:x="48513" fg:w="651"/><text x="23.2786%" y="735.50"></text></g><g><title>syscall (628 samples, 0.30%)</title><rect x="23.0395%" y="709" width="0.2981%" height="15" fill="rgb(243,93,47)" fg:x="48536" fg:w="628"/><text x="23.2895%" y="719.50"></text></g><g><title>[unknown] (622 samples, 0.30%)</title><rect x="23.0424%" y="693" width="0.2953%" height="15" fill="rgb(224,194,6)" fg:x="48542" fg:w="622"/><text x="23.2924%" y="703.50"></text></g><g><title>[unknown] (619 samples, 0.29%)</title><rect x="23.0438%" y="677" width="0.2938%" height="15" fill="rgb(243,229,6)" fg:x="48545" fg:w="619"/><text x="23.2938%" y="687.50"></text></g><g><title>[unknown] (617 samples, 0.29%)</title><rect x="23.0448%" y="661" width="0.2929%" height="15" fill="rgb(207,23,50)" fg:x="48547" fg:w="617"/><text x="23.2948%" y="671.50"></text></g><g><title>[unknown] (599 samples, 0.28%)</title><rect x="23.0533%" y="645" width="0.2843%" height="15" fill="rgb(253,192,32)" fg:x="48565" fg:w="599"/><text x="23.3033%" y="655.50"></text></g><g><title>[unknown] (572 samples, 0.27%)</title><rect x="23.0661%" y="629" width="0.2715%" height="15" fill="rgb(213,21,6)" fg:x="48592" fg:w="572"/><text x="23.3161%" y="639.50"></text></g><g><title>[unknown] (531 samples, 0.25%)</title><rect x="23.0856%" y="613" width="0.2521%" height="15" fill="rgb(243,151,13)" fg:x="48633" fg:w="531"/><text x="23.3356%" y="623.50"></text></g><g><title>[unknown] (511 samples, 0.24%)</title><rect x="23.0951%" y="597" width="0.2426%" height="15" fill="rgb(233,165,41)" fg:x="48653" fg:w="511"/><text x="23.3451%" y="607.50"></text></g><g><title>[unknown] (436 samples, 0.21%)</title><rect x="23.1307%" y="581" width="0.2070%" height="15" fill="rgb(246,176,45)" fg:x="48728" fg:w="436"/><text x="23.3807%" y="591.50"></text></g><g><title>[unknown] (333 samples, 0.16%)</title><rect x="23.1796%" y="565" width="0.1581%" height="15" fill="rgb(217,170,52)" fg:x="48831" fg:w="333"/><text x="23.4296%" y="575.50"></text></g><g><title>[unknown] (242 samples, 0.11%)</title><rect x="23.2228%" y="549" width="0.1149%" height="15" fill="rgb(214,203,54)" fg:x="48922" fg:w="242"/><text x="23.4728%" y="559.50"></text></g><g><title>[unknown] (152 samples, 0.07%)</title><rect x="23.2655%" y="533" width="0.0722%" height="15" fill="rgb(248,215,49)" fg:x="49012" fg:w="152"/><text x="23.5155%" y="543.50"></text></g><g><title>[unknown] (81 samples, 0.04%)</title><rect x="23.2992%" y="517" width="0.0384%" height="15" fill="rgb(208,46,10)" fg:x="49083" fg:w="81"/><text x="23.5492%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (391 samples, 0.19%)</title><rect x="23.3524%" y="693" width="0.1856%" height="15" fill="rgb(254,5,31)" fg:x="49195" fg:w="391"/><text x="23.6024%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (391 samples, 0.19%)</title><rect x="23.3524%" y="677" width="0.1856%" height="15" fill="rgb(222,104,33)" fg:x="49195" fg:w="391"/><text x="23.6024%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_until (869 samples, 0.41%)</title><rect x="23.3376%" y="709" width="0.4125%" height="15" fill="rgb(248,49,16)" fg:x="49164" fg:w="869"/><text x="23.5876%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_write::{{closure}} (447 samples, 0.21%)</title><rect x="23.5380%" y="693" width="0.2122%" height="15" fill="rgb(232,198,41)" fg:x="49586" fg:w="447"/><text x="23.7880%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_unlocked (447 samples, 0.21%)</title><rect x="23.5380%" y="677" width="0.2122%" height="15" fill="rgb(214,125,3)" fg:x="49586" fg:w="447"/><text x="23.7880%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_write (871 samples, 0.41%)</title><rect x="23.3376%" y="725" width="0.4135%" height="15" fill="rgb(229,220,28)" fg:x="49164" fg:w="871"/><text x="23.5876%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (1,611 samples, 0.76%)</title><rect x="22.9878%" y="789" width="0.7647%" height="15" fill="rgb(222,64,37)" fg:x="48427" fg:w="1611"/><text x="23.2378%" y="799.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (1,586 samples, 0.75%)</title><rect x="22.9997%" y="773" width="0.7529%" height="15" fill="rgb(249,184,13)" fg:x="48452" fg:w="1586"/><text x="23.2497%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (1,586 samples, 0.75%)</title><rect x="22.9997%" y="757" width="0.7529%" height="15" fill="rgb(252,176,6)" fg:x="48452" fg:w="1586"/><text x="23.2497%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_contended (1,581 samples, 0.75%)</title><rect x="23.0020%" y="741" width="0.7505%" height="15" fill="rgb(228,153,7)" fg:x="48457" fg:w="1581"/><text x="23.2520%" y="751.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (43 samples, 0.02%)</title><rect x="23.7558%" y="789" width="0.0204%" height="15" fill="rgb(242,193,5)" fg:x="50045" fg:w="43"/><text x="24.0058%" y="799.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (47 samples, 0.02%)</title><rect x="23.7914%" y="773" width="0.0223%" height="15" fill="rgb(232,140,9)" fg:x="50120" fg:w="47"/><text x="24.0414%" y="783.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (47 samples, 0.02%)</title><rect x="23.7914%" y="757" width="0.0223%" height="15" fill="rgb(213,222,16)" fg:x="50120" fg:w="47"/><text x="24.0414%" y="767.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_pid (99 samples, 0.05%)</title><rect x="23.7829%" y="789" width="0.0470%" height="15" fill="rgb(222,75,50)" fg:x="50102" fg:w="99"/><text x="24.0329%" y="799.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::get_pid (34 samples, 0.02%)</title><rect x="23.8138%" y="773" width="0.0161%" height="15" fill="rgb(205,180,2)" fg:x="50167" fg:w="34"/><text x="24.0638%" y="783.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (123 samples, 0.06%)</title><rect x="23.8384%" y="773" width="0.0584%" height="15" fill="rgb(216,34,7)" fg:x="50219" fg:w="123"/><text x="24.0884%" y="783.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (123 samples, 0.06%)</title><rect x="23.8384%" y="757" width="0.0584%" height="15" fill="rgb(253,16,32)" fg:x="50219" fg:w="123"/><text x="24.0884%" y="767.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (52 samples, 0.02%)</title><rect x="23.8721%" y="741" width="0.0247%" height="15" fill="rgb(208,97,28)" fg:x="50290" fg:w="52"/><text x="24.1221%" y="751.50"></text></g><g><title>alloc::rc::is_dangling (52 samples, 0.02%)</title><rect x="23.8721%" y="725" width="0.0247%" height="15" fill="rgb(225,92,11)" fg:x="50290" fg:w="52"/><text x="24.1221%" y="735.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (5,646 samples, 2.68%)</title><rect x="21.2229%" y="949" width="2.6801%" height="15" fill="rgb(243,38,12)" fg:x="44709" fg:w="5646"/><text x="21.4729%" y="959.50">ze..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,646 samples, 2.68%)</title><rect x="21.2229%" y="933" width="2.6801%" height="15" fill="rgb(208,139,16)" fg:x="44709" fg:w="5646"/><text x="21.4729%" y="943.50">&lt;c..</text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (5,646 samples, 2.68%)</title><rect x="21.2229%" y="917" width="2.6801%" height="15" fill="rgb(227,24,9)" fg:x="44709" fg:w="5646"/><text x="21.4729%" y="927.50">ze..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,646 samples, 2.68%)</title><rect x="21.2229%" y="901" width="2.6801%" height="15" fill="rgb(206,62,11)" fg:x="44709" fg:w="5646"/><text x="21.4729%" y="911.50">&lt;c..</text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (5,646 samples, 2.68%)</title><rect x="21.2229%" y="885" width="2.6801%" height="15" fill="rgb(228,134,27)" fg:x="44709" fg:w="5646"/><text x="21.4729%" y="895.50">ze..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (3,238 samples, 1.54%)</title><rect x="22.3659%" y="869" width="1.5370%" height="15" fill="rgb(205,55,33)" fg:x="47117" fg:w="3238"/><text x="22.6159%" y="879.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (3,238 samples, 1.54%)</title><rect x="22.3659%" y="853" width="1.5370%" height="15" fill="rgb(243,75,43)" fg:x="47117" fg:w="3238"/><text x="22.6159%" y="863.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (3,238 samples, 1.54%)</title><rect x="22.3659%" y="837" width="1.5370%" height="15" fill="rgb(223,27,42)" fg:x="47117" fg:w="3238"/><text x="22.6159%" y="847.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (3,238 samples, 1.54%)</title><rect x="22.3659%" y="821" width="1.5370%" height="15" fill="rgb(232,189,33)" fg:x="47117" fg:w="3238"/><text x="22.6159%" y="831.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (3,238 samples, 1.54%)</title><rect x="22.3659%" y="805" width="1.5370%" height="15" fill="rgb(210,9,39)" fg:x="47117" fg:w="3238"/><text x="22.6159%" y="815.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_whatami (154 samples, 0.07%)</title><rect x="23.8299%" y="789" width="0.0731%" height="15" fill="rgb(242,85,26)" fg:x="50201" fg:w="154"/><text x="24.0799%" y="799.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (51 samples, 0.02%)</title><rect x="23.9832%" y="677" width="0.0242%" height="15" fill="rgb(248,44,4)" fg:x="50524" fg:w="51"/><text x="24.2332%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (51 samples, 0.02%)</title><rect x="23.9832%" y="661" width="0.0242%" height="15" fill="rgb(250,96,46)" fg:x="50524" fg:w="51"/><text x="24.2332%" y="671.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (225 samples, 0.11%)</title><rect x="23.9505%" y="693" width="0.1068%" height="15" fill="rgb(229,116,26)" fg:x="50455" fg:w="225"/><text x="24.2005%" y="703.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (105 samples, 0.05%)</title><rect x="24.0074%" y="677" width="0.0498%" height="15" fill="rgb(246,94,34)" fg:x="50575" fg:w="105"/><text x="24.2574%" y="687.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.01%)</title><rect x="24.0672%" y="613" width="0.0109%" height="15" fill="rgb(251,73,21)" fg:x="50701" fg:w="23"/><text x="24.3172%" y="623.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="24.0677%" y="597" width="0.0104%" height="15" fill="rgb(254,121,25)" fg:x="50702" fg:w="22"/><text x="24.3177%" y="607.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (37 samples, 0.02%)</title><rect x="24.0663%" y="661" width="0.0176%" height="15" fill="rgb(215,161,49)" fg:x="50699" fg:w="37"/><text x="24.3163%" y="671.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (37 samples, 0.02%)</title><rect x="24.0663%" y="645" width="0.0176%" height="15" fill="rgb(221,43,13)" fg:x="50699" fg:w="37"/><text x="24.3163%" y="655.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (35 samples, 0.02%)</title><rect x="24.0672%" y="629" width="0.0166%" height="15" fill="rgb(249,5,37)" fg:x="50701" fg:w="35"/><text x="24.3172%" y="639.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (55 samples, 0.03%)</title><rect x="24.0582%" y="693" width="0.0261%" height="15" fill="rgb(226,25,44)" fg:x="50682" fg:w="55"/><text x="24.3082%" y="703.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (52 samples, 0.02%)</title><rect x="24.0596%" y="677" width="0.0247%" height="15" fill="rgb(238,189,16)" fg:x="50685" fg:w="52"/><text x="24.3096%" y="687.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (355 samples, 0.17%)</title><rect x="23.9163%" y="709" width="0.1685%" height="15" fill="rgb(251,186,8)" fg:x="50383" fg:w="355"/><text x="24.1663%" y="719.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (386 samples, 0.18%)</title><rect x="23.9030%" y="869" width="0.1832%" height="15" fill="rgb(254,34,31)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (386 samples, 0.18%)</title><rect x="23.9030%" y="853" width="0.1832%" height="15" fill="rgb(225,215,27)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (386 samples, 0.18%)</title><rect x="23.9030%" y="837" width="0.1832%" height="15" fill="rgb(221,192,48)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="847.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (386 samples, 0.18%)</title><rect x="23.9030%" y="821" width="0.1832%" height="15" fill="rgb(219,137,20)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="831.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (386 samples, 0.18%)</title><rect x="23.9030%" y="805" width="0.1832%" height="15" fill="rgb(219,84,11)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="815.50"></text></g><g><title>rsa::pkcs1v15::encrypt (386 samples, 0.18%)</title><rect x="23.9030%" y="789" width="0.1832%" height="15" fill="rgb(224,10,23)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="799.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::raw::EncryptionPrimitive&gt;::raw_encryption_primitive (386 samples, 0.18%)</title><rect x="23.9030%" y="773" width="0.1832%" height="15" fill="rgb(248,22,39)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="783.50"></text></g><g><title>rsa::internals::encrypt (386 samples, 0.18%)</title><rect x="23.9030%" y="757" width="0.1832%" height="15" fill="rgb(212,154,20)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="767.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (386 samples, 0.18%)</title><rect x="23.9030%" y="741" width="0.1832%" height="15" fill="rgb(236,199,50)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="751.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (386 samples, 0.18%)</title><rect x="23.9030%" y="725" width="0.1832%" height="15" fill="rgb(211,9,17)" fg:x="50355" fg:w="386"/><text x="24.1530%" y="735.50"></text></g><g><title>rsa::internals::decrypt (38 samples, 0.02%)</title><rect x="24.0876%" y="725" width="0.0180%" height="15" fill="rgb(243,216,36)" fg:x="50744" fg:w="38"/><text x="24.3376%" y="735.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (35 samples, 0.02%)</title><rect x="24.0891%" y="709" width="0.0166%" height="15" fill="rgb(250,2,10)" fg:x="50747" fg:w="35"/><text x="24.3391%" y="719.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (35 samples, 0.02%)</title><rect x="24.0891%" y="693" width="0.0166%" height="15" fill="rgb(226,50,48)" fg:x="50747" fg:w="35"/><text x="24.3391%" y="703.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (51 samples, 0.02%)</title><rect x="24.0862%" y="869" width="0.0242%" height="15" fill="rgb(243,81,16)" fg:x="50741" fg:w="51"/><text x="24.3362%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="24.0862%" y="853" width="0.0242%" height="15" fill="rgb(250,14,2)" fg:x="50741" fg:w="51"/><text x="24.3362%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="24.0862%" y="837" width="0.0242%" height="15" fill="rgb(233,135,29)" fg:x="50741" fg:w="51"/><text x="24.3362%" y="847.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (51 samples, 0.02%)</title><rect x="24.0862%" y="821" width="0.0242%" height="15" fill="rgb(224,64,43)" fg:x="50741" fg:w="51"/><text x="24.3362%" y="831.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (51 samples, 0.02%)</title><rect x="24.0862%" y="805" width="0.0242%" height="15" fill="rgb(238,84,13)" fg:x="50741" fg:w="51"/><text x="24.3362%" y="815.50"></text></g><g><title>rsa::pkcs1v15::decrypt (51 samples, 0.02%)</title><rect x="24.0862%" y="789" width="0.0242%" height="15" fill="rgb(253,48,26)" fg:x="50741" fg:w="51"/><text x="24.3362%" y="799.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (51 samples, 0.02%)</title><rect x="24.0862%" y="773" width="0.0242%" height="15" fill="rgb(205,223,31)" fg:x="50741" fg:w="51"/><text x="24.3362%" y="783.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (51 samples, 0.02%)</title><rect x="24.0862%" y="757" width="0.0242%" height="15" fill="rgb(221,41,32)" fg:x="50741" fg:w="51"/><text x="24.3362%" y="767.50"></text></g><g><title>rsa::internals::decrypt_and_check (48 samples, 0.02%)</title><rect x="24.0876%" y="741" width="0.0228%" height="15" fill="rgb(213,158,31)" fg:x="50744" fg:w="48"/><text x="24.3376%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="24.1399%" y="661" width="0.0123%" height="15" fill="rgb(245,126,43)" fg:x="50854" fg:w="26"/><text x="24.3899%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (26 samples, 0.01%)</title><rect x="24.1399%" y="645" width="0.0123%" height="15" fill="rgb(227,7,22)" fg:x="50854" fg:w="26"/><text x="24.3899%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (26 samples, 0.01%)</title><rect x="24.1399%" y="629" width="0.0123%" height="15" fill="rgb(252,90,44)" fg:x="50854" fg:w="26"/><text x="24.3899%" y="639.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (26 samples, 0.01%)</title><rect x="24.1399%" y="613" width="0.0123%" height="15" fill="rgb(253,91,0)" fg:x="50854" fg:w="26"/><text x="24.3899%" y="623.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (26 samples, 0.01%)</title><rect x="24.1399%" y="597" width="0.0123%" height="15" fill="rgb(252,175,49)" fg:x="50854" fg:w="26"/><text x="24.3899%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.01%)</title><rect x="24.1399%" y="581" width="0.0123%" height="15" fill="rgb(246,150,1)" fg:x="50854" fg:w="26"/><text x="24.3899%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.01%)</title><rect x="24.1399%" y="565" width="0.0123%" height="15" fill="rgb(241,192,25)" fg:x="50854" fg:w="26"/><text x="24.3899%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.01%)</title><rect x="24.1399%" y="549" width="0.0123%" height="15" fill="rgb(239,187,11)" fg:x="50854" fg:w="26"/><text x="24.3899%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (40 samples, 0.02%)</title><rect x="24.1394%" y="693" width="0.0190%" height="15" fill="rgb(218,202,51)" fg:x="50853" fg:w="40"/><text x="24.3894%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (40 samples, 0.02%)</title><rect x="24.1394%" y="677" width="0.0190%" height="15" fill="rgb(225,176,8)" fg:x="50853" fg:w="40"/><text x="24.3894%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (66 samples, 0.03%)</title><rect x="24.1389%" y="757" width="0.0313%" height="15" fill="rgb(219,122,41)" fg:x="50852" fg:w="66"/><text x="24.3889%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (66 samples, 0.03%)</title><rect x="24.1389%" y="741" width="0.0313%" height="15" fill="rgb(248,140,20)" fg:x="50852" fg:w="66"/><text x="24.3889%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (66 samples, 0.03%)</title><rect x="24.1389%" y="725" width="0.0313%" height="15" fill="rgb(245,41,37)" fg:x="50852" fg:w="66"/><text x="24.3889%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (65 samples, 0.03%)</title><rect x="24.1394%" y="709" width="0.0309%" height="15" fill="rgb(235,82,39)" fg:x="50853" fg:w="65"/><text x="24.3894%" y="719.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (144 samples, 0.07%)</title><rect x="24.1104%" y="853" width="0.0684%" height="15" fill="rgb(230,108,42)" fg:x="50792" fg:w="144"/><text x="24.3604%" y="863.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (144 samples, 0.07%)</title><rect x="24.1104%" y="837" width="0.0684%" height="15" fill="rgb(215,150,50)" fg:x="50792" fg:w="144"/><text x="24.3604%" y="847.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (144 samples, 0.07%)</title><rect x="24.1104%" y="821" width="0.0684%" height="15" fill="rgb(233,212,5)" fg:x="50792" fg:w="144"/><text x="24.3604%" y="831.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (92 samples, 0.04%)</title><rect x="24.1351%" y="805" width="0.0437%" height="15" fill="rgb(245,80,22)" fg:x="50844" fg:w="92"/><text x="24.3851%" y="815.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (88 samples, 0.04%)</title><rect x="24.1370%" y="789" width="0.0418%" height="15" fill="rgb(238,129,16)" fg:x="50848" fg:w="88"/><text x="24.3870%" y="799.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (86 samples, 0.04%)</title><rect x="24.1380%" y="773" width="0.0408%" height="15" fill="rgb(240,19,0)" fg:x="50850" fg:w="86"/><text x="24.3880%" y="783.50"></text></g><g><title>[libc.so.6] (44 samples, 0.02%)</title><rect x="24.2030%" y="453" width="0.0209%" height="15" fill="rgb(232,42,35)" fg:x="50987" fg:w="44"/><text x="24.4530%" y="463.50"></text></g><g><title>__mprotect (25 samples, 0.01%)</title><rect x="24.2120%" y="437" width="0.0119%" height="15" fill="rgb(223,130,24)" fg:x="51006" fg:w="25"/><text x="24.4620%" y="447.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="24.2125%" y="421" width="0.0114%" height="15" fill="rgb(237,16,22)" fg:x="51007" fg:w="24"/><text x="24.4625%" y="431.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="24.2130%" y="405" width="0.0109%" height="15" fill="rgb(248,192,20)" fg:x="51008" fg:w="23"/><text x="24.4630%" y="415.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="24.2130%" y="389" width="0.0109%" height="15" fill="rgb(233,167,2)" fg:x="51008" fg:w="23"/><text x="24.4630%" y="399.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="24.2130%" y="373" width="0.0109%" height="15" fill="rgb(252,71,44)" fg:x="51008" fg:w="23"/><text x="24.4630%" y="383.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="24.2134%" y="357" width="0.0104%" height="15" fill="rgb(238,37,47)" fg:x="51009" fg:w="22"/><text x="24.4634%" y="367.50"></text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="24.1978%" y="469" width="0.0266%" height="15" fill="rgb(214,202,54)" fg:x="50976" fg:w="56"/><text x="24.4478%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (81 samples, 0.04%)</title><rect x="24.1902%" y="533" width="0.0384%" height="15" fill="rgb(254,165,40)" fg:x="50960" fg:w="81"/><text x="24.4402%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (81 samples, 0.04%)</title><rect x="24.1902%" y="517" width="0.0384%" height="15" fill="rgb(246,173,38)" fg:x="50960" fg:w="81"/><text x="24.4402%" y="527.50"></text></g><g><title>alloc::alloc::alloc (80 samples, 0.04%)</title><rect x="24.1907%" y="501" width="0.0380%" height="15" fill="rgb(215,3,27)" fg:x="50961" fg:w="80"/><text x="24.4407%" y="511.50"></text></g><g><title>malloc (79 samples, 0.04%)</title><rect x="24.1911%" y="485" width="0.0375%" height="15" fill="rgb(239,169,51)" fg:x="50962" fg:w="79"/><text x="24.4411%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (82 samples, 0.04%)</title><rect x="24.1902%" y="565" width="0.0389%" height="15" fill="rgb(212,5,25)" fg:x="50960" fg:w="82"/><text x="24.4402%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (82 samples, 0.04%)</title><rect x="24.1902%" y="549" width="0.0389%" height="15" fill="rgb(243,45,17)" fg:x="50960" fg:w="82"/><text x="24.4402%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (86 samples, 0.04%)</title><rect x="24.1888%" y="597" width="0.0408%" height="15" fill="rgb(242,97,9)" fg:x="50957" fg:w="86"/><text x="24.4388%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (86 samples, 0.04%)</title><rect x="24.1888%" y="581" width="0.0408%" height="15" fill="rgb(228,71,31)" fg:x="50957" fg:w="86"/><text x="24.4388%" y="591.50"></text></g><g><title>[unknown] (175 samples, 0.08%)</title><rect x="24.2533%" y="421" width="0.0831%" height="15" fill="rgb(252,184,16)" fg:x="51093" fg:w="175"/><text x="24.5033%" y="431.50"></text></g><g><title>[unknown] (175 samples, 0.08%)</title><rect x="24.2533%" y="405" width="0.0831%" height="15" fill="rgb(236,169,46)" fg:x="51093" fg:w="175"/><text x="24.5033%" y="415.50"></text></g><g><title>[unknown] (174 samples, 0.08%)</title><rect x="24.2538%" y="389" width="0.0826%" height="15" fill="rgb(207,17,47)" fg:x="51094" fg:w="174"/><text x="24.5038%" y="399.50"></text></g><g><title>[unknown] (173 samples, 0.08%)</title><rect x="24.2543%" y="373" width="0.0821%" height="15" fill="rgb(206,201,28)" fg:x="51095" fg:w="173"/><text x="24.5043%" y="383.50"></text></g><g><title>[unknown] (162 samples, 0.08%)</title><rect x="24.2595%" y="357" width="0.0769%" height="15" fill="rgb(224,184,23)" fg:x="51106" fg:w="162"/><text x="24.5095%" y="367.50"></text></g><g><title>[unknown] (137 samples, 0.07%)</title><rect x="24.2714%" y="341" width="0.0650%" height="15" fill="rgb(208,139,48)" fg:x="51131" fg:w="137"/><text x="24.5214%" y="351.50"></text></g><g><title>[unknown] (122 samples, 0.06%)</title><rect x="24.2785%" y="325" width="0.0579%" height="15" fill="rgb(208,130,10)" fg:x="51146" fg:w="122"/><text x="24.5285%" y="335.50"></text></g><g><title>[unknown] (106 samples, 0.05%)</title><rect x="24.2861%" y="309" width="0.0503%" height="15" fill="rgb(211,213,45)" fg:x="51162" fg:w="106"/><text x="24.5361%" y="319.50"></text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="24.3008%" y="293" width="0.0356%" height="15" fill="rgb(235,100,30)" fg:x="51193" fg:w="75"/><text x="24.5508%" y="303.50"></text></g><g><title>[libc.so.6] (425 samples, 0.20%)</title><rect x="24.2457%" y="437" width="0.2017%" height="15" fill="rgb(206,144,31)" fg:x="51077" fg:w="425"/><text x="24.4957%" y="447.50"></text></g><g><title>__mprotect (233 samples, 0.11%)</title><rect x="24.3369%" y="421" width="0.1106%" height="15" fill="rgb(224,200,26)" fg:x="51269" fg:w="233"/><text x="24.5869%" y="431.50"></text></g><g><title>[unknown] (233 samples, 0.11%)</title><rect x="24.3369%" y="405" width="0.1106%" height="15" fill="rgb(247,104,53)" fg:x="51269" fg:w="233"/><text x="24.5869%" y="415.50"></text></g><g><title>[unknown] (227 samples, 0.11%)</title><rect x="24.3397%" y="389" width="0.1078%" height="15" fill="rgb(220,14,17)" fg:x="51275" fg:w="227"/><text x="24.5897%" y="399.50"></text></g><g><title>[unknown] (227 samples, 0.11%)</title><rect x="24.3397%" y="373" width="0.1078%" height="15" fill="rgb(230,140,40)" fg:x="51275" fg:w="227"/><text x="24.5897%" y="383.50"></text></g><g><title>[unknown] (223 samples, 0.11%)</title><rect x="24.3416%" y="357" width="0.1059%" height="15" fill="rgb(229,2,41)" fg:x="51279" fg:w="223"/><text x="24.5916%" y="367.50"></text></g><g><title>[unknown] (204 samples, 0.10%)</title><rect x="24.3506%" y="341" width="0.0968%" height="15" fill="rgb(232,89,16)" fg:x="51298" fg:w="204"/><text x="24.6006%" y="351.50"></text></g><g><title>[unknown] (173 samples, 0.08%)</title><rect x="24.3653%" y="325" width="0.0821%" height="15" fill="rgb(247,59,52)" fg:x="51329" fg:w="173"/><text x="24.6153%" y="335.50"></text></g><g><title>[unknown] (123 samples, 0.06%)</title><rect x="24.3891%" y="309" width="0.0584%" height="15" fill="rgb(226,110,21)" fg:x="51379" fg:w="123"/><text x="24.6391%" y="319.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="24.4337%" y="293" width="0.0138%" height="15" fill="rgb(224,176,43)" fg:x="51473" fg:w="29"/><text x="24.6837%" y="303.50"></text></g><g><title>[libc.so.6] (436 samples, 0.21%)</title><rect x="24.2410%" y="453" width="0.2070%" height="15" fill="rgb(221,73,6)" fg:x="51067" fg:w="436"/><text x="24.4910%" y="463.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (503 samples, 0.24%)</title><rect x="24.2296%" y="597" width="0.2388%" height="15" fill="rgb(232,78,19)" fg:x="51043" fg:w="503"/><text x="24.4796%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (489 samples, 0.23%)</title><rect x="24.2362%" y="581" width="0.2321%" height="15" fill="rgb(233,112,48)" fg:x="51057" fg:w="489"/><text x="24.4862%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (489 samples, 0.23%)</title><rect x="24.2362%" y="565" width="0.2321%" height="15" fill="rgb(243,131,47)" fg:x="51057" fg:w="489"/><text x="24.4862%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (489 samples, 0.23%)</title><rect x="24.2362%" y="549" width="0.2321%" height="15" fill="rgb(226,51,1)" fg:x="51057" fg:w="489"/><text x="24.4862%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (489 samples, 0.23%)</title><rect x="24.2362%" y="533" width="0.2321%" height="15" fill="rgb(247,58,7)" fg:x="51057" fg:w="489"/><text x="24.4862%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (489 samples, 0.23%)</title><rect x="24.2362%" y="517" width="0.2321%" height="15" fill="rgb(209,7,32)" fg:x="51057" fg:w="489"/><text x="24.4862%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (489 samples, 0.23%)</title><rect x="24.2362%" y="501" width="0.2321%" height="15" fill="rgb(209,39,41)" fg:x="51057" fg:w="489"/><text x="24.4862%" y="511.50"></text></g><g><title>alloc::alloc::alloc (489 samples, 0.23%)</title><rect x="24.2362%" y="485" width="0.2321%" height="15" fill="rgb(226,182,46)" fg:x="51057" fg:w="489"/><text x="24.4862%" y="495.50"></text></g><g><title>malloc (487 samples, 0.23%)</title><rect x="24.2372%" y="469" width="0.2312%" height="15" fill="rgb(230,219,10)" fg:x="51059" fg:w="487"/><text x="24.4872%" y="479.50"></text></g><g><title>__lll_lock_wake_private (41 samples, 0.02%)</title><rect x="24.4489%" y="453" width="0.0195%" height="15" fill="rgb(227,175,30)" fg:x="51505" fg:w="41"/><text x="24.6989%" y="463.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="24.4494%" y="437" width="0.0190%" height="15" fill="rgb(217,2,50)" fg:x="51506" fg:w="40"/><text x="24.6994%" y="447.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="24.4494%" y="421" width="0.0190%" height="15" fill="rgb(229,160,0)" fg:x="51506" fg:w="40"/><text x="24.6994%" y="431.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="24.4494%" y="405" width="0.0190%" height="15" fill="rgb(207,78,37)" fg:x="51506" fg:w="40"/><text x="24.6994%" y="415.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="24.4494%" y="389" width="0.0190%" height="15" fill="rgb(225,57,0)" fg:x="51506" fg:w="40"/><text x="24.6994%" y="399.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="24.4498%" y="373" width="0.0185%" height="15" fill="rgb(232,154,2)" fg:x="51507" fg:w="39"/><text x="24.6998%" y="383.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="24.4532%" y="357" width="0.0152%" height="15" fill="rgb(241,212,25)" fg:x="51514" fg:w="32"/><text x="24.7032%" y="367.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="24.4555%" y="341" width="0.0128%" height="15" fill="rgb(226,69,20)" fg:x="51519" fg:w="27"/><text x="24.7055%" y="351.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="24.4565%" y="325" width="0.0119%" height="15" fill="rgb(247,184,54)" fg:x="51521" fg:w="25"/><text x="24.7065%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.02%)</title><rect x="24.4821%" y="565" width="0.0161%" height="15" fill="rgb(210,145,0)" fg:x="51575" fg:w="34"/><text x="24.7321%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.02%)</title><rect x="24.4821%" y="549" width="0.0161%" height="15" fill="rgb(253,82,12)" fg:x="51575" fg:w="34"/><text x="24.7321%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.02%)</title><rect x="24.4821%" y="533" width="0.0161%" height="15" fill="rgb(245,42,11)" fg:x="51575" fg:w="34"/><text x="24.7321%" y="543.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.02%)</title><rect x="24.4821%" y="517" width="0.0161%" height="15" fill="rgb(219,147,32)" fg:x="51575" fg:w="34"/><text x="24.7321%" y="527.50"></text></g><g><title>malloc (33 samples, 0.02%)</title><rect x="24.4826%" y="501" width="0.0157%" height="15" fill="rgb(246,12,7)" fg:x="51576" fg:w="33"/><text x="24.7326%" y="511.50"></text></g><g><title>[libc.so.6] (39 samples, 0.02%)</title><rect x="24.5035%" y="437" width="0.0185%" height="15" fill="rgb(243,50,9)" fg:x="51620" fg:w="39"/><text x="24.7535%" y="447.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (167 samples, 0.08%)</title><rect x="24.4788%" y="581" width="0.0793%" height="15" fill="rgb(219,149,6)" fg:x="51568" fg:w="167"/><text x="24.7288%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (126 samples, 0.06%)</title><rect x="24.4983%" y="565" width="0.0598%" height="15" fill="rgb(241,51,42)" fg:x="51609" fg:w="126"/><text x="24.7483%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (126 samples, 0.06%)</title><rect x="24.4983%" y="549" width="0.0598%" height="15" fill="rgb(226,128,27)" fg:x="51609" fg:w="126"/><text x="24.7483%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (126 samples, 0.06%)</title><rect x="24.4983%" y="533" width="0.0598%" height="15" fill="rgb(244,144,4)" fg:x="51609" fg:w="126"/><text x="24.7483%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (126 samples, 0.06%)</title><rect x="24.4983%" y="517" width="0.0598%" height="15" fill="rgb(221,4,13)" fg:x="51609" fg:w="126"/><text x="24.7483%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (126 samples, 0.06%)</title><rect x="24.4983%" y="501" width="0.0598%" height="15" fill="rgb(208,170,28)" fg:x="51609" fg:w="126"/><text x="24.7483%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (126 samples, 0.06%)</title><rect x="24.4983%" y="485" width="0.0598%" height="15" fill="rgb(226,131,13)" fg:x="51609" fg:w="126"/><text x="24.7483%" y="495.50"></text></g><g><title>alloc::alloc::alloc (126 samples, 0.06%)</title><rect x="24.4983%" y="469" width="0.0598%" height="15" fill="rgb(215,72,41)" fg:x="51609" fg:w="126"/><text x="24.7483%" y="479.50"></text></g><g><title>malloc (122 samples, 0.06%)</title><rect x="24.5002%" y="453" width="0.0579%" height="15" fill="rgb(243,108,20)" fg:x="51613" fg:w="122"/><text x="24.7502%" y="463.50"></text></g><g><title>__lll_lock_wake_private (73 samples, 0.03%)</title><rect x="24.5234%" y="437" width="0.0347%" height="15" fill="rgb(230,189,17)" fg:x="51662" fg:w="73"/><text x="24.7734%" y="447.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="24.5234%" y="421" width="0.0347%" height="15" fill="rgb(220,50,17)" fg:x="51662" fg:w="73"/><text x="24.7734%" y="431.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="24.5239%" y="405" width="0.0342%" height="15" fill="rgb(248,152,48)" fg:x="51663" fg:w="72"/><text x="24.7739%" y="415.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="24.5239%" y="389" width="0.0342%" height="15" fill="rgb(244,91,11)" fg:x="51663" fg:w="72"/><text x="24.7739%" y="399.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="24.5244%" y="373" width="0.0337%" height="15" fill="rgb(220,157,5)" fg:x="51664" fg:w="71"/><text x="24.7744%" y="383.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="24.5258%" y="357" width="0.0323%" height="15" fill="rgb(253,137,8)" fg:x="51667" fg:w="68"/><text x="24.7758%" y="367.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="24.5320%" y="341" width="0.0261%" height="15" fill="rgb(217,137,51)" fg:x="51680" fg:w="55"/><text x="24.7820%" y="351.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="24.5353%" y="325" width="0.0228%" height="15" fill="rgb(218,209,53)" fg:x="51687" fg:w="48"/><text x="24.7853%" y="335.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="24.5391%" y="309" width="0.0190%" height="15" fill="rgb(249,137,25)" fg:x="51695" fg:w="40"/><text x="24.7891%" y="319.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="24.5471%" y="293" width="0.0109%" height="15" fill="rgb(239,155,26)" fg:x="51712" fg:w="23"/><text x="24.7971%" y="303.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (821 samples, 0.39%)</title><rect x="24.1788%" y="613" width="0.3897%" height="15" fill="rgb(227,85,46)" fg:x="50936" fg:w="821"/><text x="24.4288%" y="623.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (211 samples, 0.10%)</title><rect x="24.4683%" y="597" width="0.1002%" height="15" fill="rgb(251,107,43)" fg:x="51546" fg:w="211"/><text x="24.7183%" y="607.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::clear (22 samples, 0.01%)</title><rect x="24.5581%" y="581" width="0.0104%" height="15" fill="rgb(234,170,33)" fg:x="51735" fg:w="22"/><text x="24.8081%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,058 samples, 3.35%)</title><rect x="21.2229%" y="965" width="3.3504%" height="15" fill="rgb(206,29,35)" fg:x="44709" fg:w="7058"/><text x="21.4729%" y="975.50">&lt;co..</text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (1,412 samples, 0.67%)</title><rect x="23.9030%" y="949" width="0.6703%" height="15" fill="rgb(227,138,25)" fg:x="50355" fg:w="1412"/><text x="24.1530%" y="959.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,412 samples, 0.67%)</title><rect x="23.9030%" y="933" width="0.6703%" height="15" fill="rgb(249,131,35)" fg:x="50355" fg:w="1412"/><text x="24.1530%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,412 samples, 0.67%)</title><rect x="23.9030%" y="917" width="0.6703%" height="15" fill="rgb(239,6,40)" fg:x="50355" fg:w="1412"/><text x="24.1530%" y="927.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (1,412 samples, 0.67%)</title><rect x="23.9030%" y="901" width="0.6703%" height="15" fill="rgb(246,136,47)" fg:x="50355" fg:w="1412"/><text x="24.1530%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,412 samples, 0.67%)</title><rect x="23.9030%" y="885" width="0.6703%" height="15" fill="rgb(253,58,26)" fg:x="50355" fg:w="1412"/><text x="24.1530%" y="895.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (975 samples, 0.46%)</title><rect x="24.1104%" y="869" width="0.4628%" height="15" fill="rgb(237,141,10)" fg:x="50792" fg:w="975"/><text x="24.3604%" y="879.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (831 samples, 0.39%)</title><rect x="24.1788%" y="853" width="0.3945%" height="15" fill="rgb(234,156,12)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (831 samples, 0.39%)</title><rect x="24.1788%" y="837" width="0.3945%" height="15" fill="rgb(243,224,36)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="847.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (831 samples, 0.39%)</title><rect x="24.1788%" y="821" width="0.3945%" height="15" fill="rgb(205,229,51)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (831 samples, 0.39%)</title><rect x="24.1788%" y="805" width="0.3945%" height="15" fill="rgb(223,189,4)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (831 samples, 0.39%)</title><rect x="24.1788%" y="789" width="0.3945%" height="15" fill="rgb(249,167,54)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (831 samples, 0.39%)</title><rect x="24.1788%" y="773" width="0.3945%" height="15" fill="rgb(218,34,28)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (831 samples, 0.39%)</title><rect x="24.1788%" y="757" width="0.3945%" height="15" fill="rgb(232,109,42)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (831 samples, 0.39%)</title><rect x="24.1788%" y="741" width="0.3945%" height="15" fill="rgb(248,214,46)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (831 samples, 0.39%)</title><rect x="24.1788%" y="725" width="0.3945%" height="15" fill="rgb(244,216,40)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (831 samples, 0.39%)</title><rect x="24.1788%" y="709" width="0.3945%" height="15" fill="rgb(231,226,31)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (831 samples, 0.39%)</title><rect x="24.1788%" y="693" width="0.3945%" height="15" fill="rgb(238,38,43)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (831 samples, 0.39%)</title><rect x="24.1788%" y="677" width="0.3945%" height="15" fill="rgb(208,88,43)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (831 samples, 0.39%)</title><rect x="24.1788%" y="661" width="0.3945%" height="15" fill="rgb(205,136,37)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (831 samples, 0.39%)</title><rect x="24.1788%" y="645" width="0.3945%" height="15" fill="rgb(237,34,14)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="655.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (831 samples, 0.39%)</title><rect x="24.1788%" y="629" width="0.3945%" height="15" fill="rgb(236,193,44)" fg:x="50936" fg:w="831"/><text x="24.4288%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (24 samples, 0.01%)</title><rect x="24.5747%" y="581" width="0.0114%" height="15" fill="rgb(231,48,10)" fg:x="51770" fg:w="24"/><text x="24.8247%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (24 samples, 0.01%)</title><rect x="24.5747%" y="565" width="0.0114%" height="15" fill="rgb(213,141,34)" fg:x="51770" fg:w="24"/><text x="24.8247%" y="575.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (24 samples, 0.01%)</title><rect x="24.5747%" y="549" width="0.0114%" height="15" fill="rgb(249,130,34)" fg:x="51770" fg:w="24"/><text x="24.8247%" y="559.50"></text></g><g><title>zenoh_transport::unicast::establishment::close_link::{{closure}} (31 samples, 0.01%)</title><rect x="24.5733%" y="741" width="0.0147%" height="15" fill="rgb(219,42,41)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="751.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (31 samples, 0.01%)</title><rect x="24.5733%" y="725" width="0.0147%" height="15" fill="rgb(224,100,54)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.01%)</title><rect x="24.5733%" y="709" width="0.0147%" height="15" fill="rgb(229,200,27)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="719.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::close::{{closure}} (31 samples, 0.01%)</title><rect x="24.5733%" y="693" width="0.0147%" height="15" fill="rgb(217,118,10)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (31 samples, 0.01%)</title><rect x="24.5733%" y="677" width="0.0147%" height="15" fill="rgb(206,22,3)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="687.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::close::{{closure}}::{{closure}} (31 samples, 0.01%)</title><rect x="24.5733%" y="661" width="0.0147%" height="15" fill="rgb(232,163,46)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="671.50"></text></g><g><title>alloc::fmt::format (31 samples, 0.01%)</title><rect x="24.5733%" y="645" width="0.0147%" height="15" fill="rgb(206,95,13)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (31 samples, 0.01%)</title><rect x="24.5733%" y="629" width="0.0147%" height="15" fill="rgb(253,154,18)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="639.50"></text></g><g><title>core::fmt::write (31 samples, 0.01%)</title><rect x="24.5733%" y="613" width="0.0147%" height="15" fill="rgb(219,32,23)" fg:x="51767" fg:w="31"/><text x="24.8233%" y="623.50"></text></g><g><title>std::io::error::&lt;impl core::fmt::Debug for std::io::error::repr_bitpacked::Repr&gt;::fmt (28 samples, 0.01%)</title><rect x="24.5747%" y="597" width="0.0133%" height="15" fill="rgb(230,191,45)" fg:x="51770" fg:w="28"/><text x="24.8247%" y="607.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (59 samples, 0.03%)</title><rect x="24.5889%" y="581" width="0.0280%" height="15" fill="rgb(229,64,36)" fg:x="51800" fg:w="59"/><text x="24.8389%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (59 samples, 0.03%)</title><rect x="24.5889%" y="565" width="0.0280%" height="15" fill="rgb(205,129,25)" fg:x="51800" fg:w="59"/><text x="24.8389%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (59 samples, 0.03%)</title><rect x="24.5889%" y="549" width="0.0280%" height="15" fill="rgb(254,112,7)" fg:x="51800" fg:w="59"/><text x="24.8389%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (59 samples, 0.03%)</title><rect x="24.5889%" y="533" width="0.0280%" height="15" fill="rgb(226,53,48)" fg:x="51800" fg:w="59"/><text x="24.8389%" y="543.50"></text></g><g><title>recv (59 samples, 0.03%)</title><rect x="24.5889%" y="517" width="0.0280%" height="15" fill="rgb(214,153,38)" fg:x="51800" fg:w="59"/><text x="24.8389%" y="527.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="24.5903%" y="501" width="0.0266%" height="15" fill="rgb(243,101,7)" fg:x="51803" fg:w="56"/><text x="24.8403%" y="511.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="24.5908%" y="485" width="0.0261%" height="15" fill="rgb(240,140,22)" fg:x="51804" fg:w="55"/><text x="24.8408%" y="495.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="24.5913%" y="469" width="0.0256%" height="15" fill="rgb(235,114,2)" fg:x="51805" fg:w="54"/><text x="24.8413%" y="479.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="24.5918%" y="453" width="0.0252%" height="15" fill="rgb(242,59,12)" fg:x="51806" fg:w="53"/><text x="24.8418%" y="463.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="24.5984%" y="437" width="0.0185%" height="15" fill="rgb(252,134,9)" fg:x="51820" fg:w="39"/><text x="24.8484%" y="447.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="24.6008%" y="421" width="0.0161%" height="15" fill="rgb(236,4,44)" fg:x="51825" fg:w="34"/><text x="24.8508%" y="431.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (90 samples, 0.04%)</title><rect x="24.5880%" y="645" width="0.0427%" height="15" fill="rgb(254,172,41)" fg:x="51798" fg:w="90"/><text x="24.8380%" y="655.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (90 samples, 0.04%)</title><rect x="24.5880%" y="629" width="0.0427%" height="15" fill="rgb(244,63,20)" fg:x="51798" fg:w="90"/><text x="24.8380%" y="639.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (90 samples, 0.04%)</title><rect x="24.5880%" y="613" width="0.0427%" height="15" fill="rgb(250,73,31)" fg:x="51798" fg:w="90"/><text x="24.8380%" y="623.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (90 samples, 0.04%)</title><rect x="24.5880%" y="597" width="0.0427%" height="15" fill="rgb(241,38,36)" fg:x="51798" fg:w="90"/><text x="24.8380%" y="607.50"></text></g><g><title>async_io::Async&lt;T&gt;::poll_readable (23 samples, 0.01%)</title><rect x="24.6198%" y="581" width="0.0109%" height="15" fill="rgb(245,211,2)" fg:x="51865" fg:w="23"/><text x="24.8698%" y="591.50"></text></g><g><title>async_io::reactor::Source::poll_ready (23 samples, 0.01%)</title><rect x="24.6198%" y="565" width="0.0109%" height="15" fill="rgb(206,120,28)" fg:x="51865" fg:w="23"/><text x="24.8698%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (93 samples, 0.04%)</title><rect x="24.5880%" y="725" width="0.0441%" height="15" fill="rgb(211,59,34)" fg:x="51798" fg:w="93"/><text x="24.8380%" y="735.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (93 samples, 0.04%)</title><rect x="24.5880%" y="709" width="0.0441%" height="15" fill="rgb(233,168,5)" fg:x="51798" fg:w="93"/><text x="24.8380%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (93 samples, 0.04%)</title><rect x="24.5880%" y="693" width="0.0441%" height="15" fill="rgb(234,33,13)" fg:x="51798" fg:w="93"/><text x="24.8380%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (93 samples, 0.04%)</title><rect x="24.5880%" y="677" width="0.0441%" height="15" fill="rgb(231,150,26)" fg:x="51798" fg:w="93"/><text x="24.8380%" y="687.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (93 samples, 0.04%)</title><rect x="24.5880%" y="661" width="0.0441%" height="15" fill="rgb(217,191,4)" fg:x="51798" fg:w="93"/><text x="24.8380%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_transport::unicast::establishment::authenticator::pubkey::ZPubKey&gt;::read_init_ack_property_multilink (42 samples, 0.02%)</title><rect x="24.6369%" y="677" width="0.0199%" height="15" fill="rgb(246,198,38)" fg:x="51901" fg:w="42"/><text x="24.8869%" y="687.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_transport::unicast::establishment::authenticator::pubkey::ZPubKey&gt;::read_rsa_pub_key (42 samples, 0.02%)</title><rect x="24.6369%" y="661" width="0.0199%" height="15" fill="rgb(245,64,37)" fg:x="51901" fg:w="42"/><text x="24.8869%" y="671.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (59 samples, 0.03%)</title><rect x="24.6321%" y="693" width="0.0280%" height="15" fill="rgb(250,30,36)" fg:x="51891" fg:w="59"/><text x="24.8821%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (23 samples, 0.01%)</title><rect x="24.6658%" y="613" width="0.0109%" height="15" fill="rgb(217,86,53)" fg:x="51962" fg:w="23"/><text x="24.9158%" y="623.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (23 samples, 0.01%)</title><rect x="24.6658%" y="597" width="0.0109%" height="15" fill="rgb(228,157,16)" fg:x="51962" fg:w="23"/><text x="24.9158%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (35 samples, 0.02%)</title><rect x="24.6634%" y="661" width="0.0166%" height="15" fill="rgb(217,59,31)" fg:x="51957" fg:w="35"/><text x="24.9134%" y="671.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (35 samples, 0.02%)</title><rect x="24.6634%" y="645" width="0.0166%" height="15" fill="rgb(237,138,41)" fg:x="51957" fg:w="35"/><text x="24.9134%" y="655.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (30 samples, 0.01%)</title><rect x="24.6658%" y="629" width="0.0142%" height="15" fill="rgb(227,91,49)" fg:x="51962" fg:w="30"/><text x="24.9158%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (137 samples, 0.07%)</title><rect x="24.6321%" y="725" width="0.0650%" height="15" fill="rgb(247,21,44)" fg:x="51891" fg:w="137"/><text x="24.8821%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (137 samples, 0.07%)</title><rect x="24.6321%" y="709" width="0.0650%" height="15" fill="rgb(219,210,51)" fg:x="51891" fg:w="137"/><text x="24.8821%" y="719.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (78 samples, 0.04%)</title><rect x="24.6601%" y="693" width="0.0370%" height="15" fill="rgb(209,140,6)" fg:x="51950" fg:w="78"/><text x="24.9101%" y="703.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (78 samples, 0.04%)</title><rect x="24.6601%" y="677" width="0.0370%" height="15" fill="rgb(221,188,24)" fg:x="51950" fg:w="78"/><text x="24.9101%" y="687.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::try_read_shmbuf (31 samples, 0.01%)</title><rect x="24.6824%" y="661" width="0.0147%" height="15" fill="rgb(232,154,20)" fg:x="51997" fg:w="31"/><text x="24.9324%" y="671.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (231 samples, 0.11%)</title><rect x="24.5880%" y="741" width="0.1097%" height="15" fill="rgb(244,137,50)" fg:x="51798" fg:w="231"/><text x="24.8380%" y="751.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_syn::send::{{closure}} (28 samples, 0.01%)</title><rect x="24.6976%" y="741" width="0.0133%" height="15" fill="rgb(225,185,43)" fg:x="52029" fg:w="28"/><text x="24.9476%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="24.7109%" y="725" width="0.0157%" height="15" fill="rgb(213,205,38)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="735.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (33 samples, 0.02%)</title><rect x="24.7109%" y="709" width="0.0157%" height="15" fill="rgb(236,73,12)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="24.7109%" y="693" width="0.0157%" height="15" fill="rgb(235,219,13)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="24.7109%" y="677" width="0.0157%" height="15" fill="rgb(218,59,36)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="687.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (33 samples, 0.02%)</title><rect x="24.7109%" y="661" width="0.0157%" height="15" fill="rgb(205,110,39)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="671.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="24.7109%" y="645" width="0.0157%" height="15" fill="rgb(218,206,42)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="655.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (33 samples, 0.02%)</title><rect x="24.7109%" y="629" width="0.0157%" height="15" fill="rgb(248,125,24)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="639.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (33 samples, 0.02%)</title><rect x="24.7109%" y="613" width="0.0157%" height="15" fill="rgb(242,28,27)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="623.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (33 samples, 0.02%)</title><rect x="24.7109%" y="597" width="0.0157%" height="15" fill="rgb(216,228,15)" fg:x="52057" fg:w="33"/><text x="24.9609%" y="607.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_ack::recv::{{closure}} (37 samples, 0.02%)</title><rect x="24.7109%" y="741" width="0.0176%" height="15" fill="rgb(235,116,46)" fg:x="52057" fg:w="37"/><text x="24.9609%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (373 samples, 0.18%)</title><rect x="24.5733%" y="757" width="0.1771%" height="15" fill="rgb(224,18,32)" fg:x="51767" fg:w="373"/><text x="24.8233%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_init::{{closure}} (44 samples, 0.02%)</title><rect x="24.7294%" y="741" width="0.0209%" height="15" fill="rgb(252,5,12)" fg:x="52096" fg:w="44"/><text x="24.9794%" y="751.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::init_transport_unicast (44 samples, 0.02%)</title><rect x="24.7294%" y="725" width="0.0209%" height="15" fill="rgb(251,36,5)" fg:x="52096" fg:w="44"/><text x="24.9794%" y="735.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::make (33 samples, 0.02%)</title><rect x="24.7346%" y="709" width="0.0157%" height="15" fill="rgb(217,53,14)" fg:x="52107" fg:w="33"/><text x="24.9846%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (378 samples, 0.18%)</title><rect x="24.5733%" y="789" width="0.1794%" height="15" fill="rgb(215,86,45)" fg:x="51767" fg:w="378"/><text x="24.8233%" y="799.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (378 samples, 0.18%)</title><rect x="24.5733%" y="773" width="0.1794%" height="15" fill="rgb(242,169,11)" fg:x="51767" fg:w="378"/><text x="24.8233%" y="783.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (380 samples, 0.18%)</title><rect x="24.5733%" y="933" width="0.1804%" height="15" fill="rgb(211,213,45)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (380 samples, 0.18%)</title><rect x="24.5733%" y="917" width="0.1804%" height="15" fill="rgb(205,88,11)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="927.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (380 samples, 0.18%)</title><rect x="24.5733%" y="901" width="0.1804%" height="15" fill="rgb(252,69,26)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (380 samples, 0.18%)</title><rect x="24.5733%" y="885" width="0.1804%" height="15" fill="rgb(246,123,37)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="895.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (380 samples, 0.18%)</title><rect x="24.5733%" y="869" width="0.1804%" height="15" fill="rgb(212,205,5)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (380 samples, 0.18%)</title><rect x="24.5733%" y="853" width="0.1804%" height="15" fill="rgb(253,148,0)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="863.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (380 samples, 0.18%)</title><rect x="24.5733%" y="837" width="0.1804%" height="15" fill="rgb(239,22,4)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (380 samples, 0.18%)</title><rect x="24.5733%" y="821" width="0.1804%" height="15" fill="rgb(226,26,53)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="831.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (380 samples, 0.18%)</title><rect x="24.5733%" y="805" width="0.1804%" height="15" fill="rgb(225,229,45)" fg:x="51767" fg:w="380"/><text x="24.8233%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.02%)</title><rect x="24.7551%" y="741" width="0.0176%" height="15" fill="rgb(220,60,37)" fg:x="52150" fg:w="37"/><text x="25.0051%" y="751.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (37 samples, 0.02%)</title><rect x="24.7551%" y="725" width="0.0176%" height="15" fill="rgb(217,180,35)" fg:x="52150" fg:w="37"/><text x="25.0051%" y="735.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (39 samples, 0.02%)</title><rect x="24.7546%" y="757" width="0.0185%" height="15" fill="rgb(229,7,53)" fg:x="52149" fg:w="39"/><text x="25.0046%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.02%)</title><rect x="24.7546%" y="773" width="0.0190%" height="15" fill="rgb(254,137,3)" fg:x="52149" fg:w="40"/><text x="25.0046%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (50 samples, 0.02%)</title><rect x="24.7536%" y="821" width="0.0237%" height="15" fill="rgb(215,140,41)" fg:x="52147" fg:w="50"/><text x="25.0036%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.02%)</title><rect x="24.7536%" y="805" width="0.0237%" height="15" fill="rgb(250,80,15)" fg:x="52147" fg:w="50"/><text x="25.0036%" y="815.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (49 samples, 0.02%)</title><rect x="24.7541%" y="789" width="0.0233%" height="15" fill="rgb(252,191,6)" fg:x="52148" fg:w="49"/><text x="25.0041%" y="799.50"></text></g><g><title>async_io::driver::block_on (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1237" width="3.5550%" height="15" fill="rgb(246,217,18)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1247.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1221" width="3.5550%" height="15" fill="rgb(223,93,7)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1231.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1205" width="3.5550%" height="15" fill="rgb(225,55,52)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1215.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}} (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1189" width="3.5550%" height="15" fill="rgb(240,31,24)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1199.50">asyn..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1173" width="3.5550%" height="15" fill="rgb(205,56,52)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1183.50">&lt;fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1157" width="3.5550%" height="15" fill="rgb(246,146,12)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1167.50">&lt;cor..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1141" width="3.5550%" height="15" fill="rgb(239,84,36)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1151.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1125" width="3.5550%" height="15" fill="rgb(207,41,40)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1135.50">asyn..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1109" width="3.5550%" height="15" fill="rgb(241,179,25)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1119.50">&lt;cor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1093" width="3.5550%" height="15" fill="rgb(210,0,34)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1103.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1077" width="3.5550%" height="15" fill="rgb(225,217,29)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1087.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1061" width="3.5550%" height="15" fill="rgb(216,191,38)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1071.50">&lt;asy..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1045" width="3.5550%" height="15" fill="rgb(232,140,52)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1055.50">asyn..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1029" width="3.5550%" height="15" fill="rgb(223,158,51)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1039.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7,489 samples, 3.55%)</title><rect x="21.2229%" y="1013" width="3.5550%" height="15" fill="rgb(235,29,51)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1023.50">std:..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7,489 samples, 3.55%)</title><rect x="21.2229%" y="997" width="3.5550%" height="15" fill="rgb(215,181,18)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="1007.50">asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7,489 samples, 3.55%)</title><rect x="21.2229%" y="981" width="3.5550%" height="15" fill="rgb(227,125,34)" fg:x="44709" fg:w="7489"/><text x="21.4729%" y="991.50">&lt;asy..</text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (431 samples, 0.20%)</title><rect x="24.5733%" y="965" width="0.2046%" height="15" fill="rgb(230,197,49)" fg:x="51767" fg:w="431"/><text x="24.8233%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (431 samples, 0.20%)</title><rect x="24.5733%" y="949" width="0.2046%" height="15" fill="rgb(239,141,16)" fg:x="51767" fg:w="431"/><text x="24.8233%" y="959.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (51 samples, 0.02%)</title><rect x="24.7536%" y="933" width="0.0242%" height="15" fill="rgb(225,105,43)" fg:x="52147" fg:w="51"/><text x="25.0036%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="24.7536%" y="917" width="0.0242%" height="15" fill="rgb(214,131,14)" fg:x="52147" fg:w="51"/><text x="25.0036%" y="927.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (51 samples, 0.02%)</title><rect x="24.7536%" y="901" width="0.0242%" height="15" fill="rgb(229,177,11)" fg:x="52147" fg:w="51"/><text x="25.0036%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="24.7536%" y="885" width="0.0242%" height="15" fill="rgb(231,180,14)" fg:x="52147" fg:w="51"/><text x="25.0036%" y="895.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (51 samples, 0.02%)</title><rect x="24.7536%" y="869" width="0.0242%" height="15" fill="rgb(232,88,2)" fg:x="52147" fg:w="51"/><text x="25.0036%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="24.7536%" y="853" width="0.0242%" height="15" fill="rgb(205,220,8)" fg:x="52147" fg:w="51"/><text x="25.0036%" y="863.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (51 samples, 0.02%)</title><rect x="24.7536%" y="837" width="0.0242%" height="15" fill="rgb(225,23,53)" fg:x="52147" fg:w="51"/><text x="25.0036%" y="847.50"></text></g><g><title>[libc.so.6] (74 samples, 0.04%)</title><rect x="24.7921%" y="581" width="0.0351%" height="15" fill="rgb(213,62,29)" fg:x="52228" fg:w="74"/><text x="25.0421%" y="591.50"></text></g><g><title>[libc.so.6] (55 samples, 0.03%)</title><rect x="24.8011%" y="565" width="0.0261%" height="15" fill="rgb(227,75,7)" fg:x="52247" fg:w="55"/><text x="25.0511%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (106 samples, 0.05%)</title><rect x="24.7778%" y="981" width="0.0503%" height="15" fill="rgb(207,105,14)" fg:x="52198" fg:w="106"/><text x="25.0278%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (106 samples, 0.05%)</title><rect x="24.7778%" y="965" width="0.0503%" height="15" fill="rgb(245,62,29)" fg:x="52198" fg:w="106"/><text x="25.0278%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (106 samples, 0.05%)</title><rect x="24.7778%" y="949" width="0.0503%" height="15" fill="rgb(236,202,4)" fg:x="52198" fg:w="106"/><text x="25.0278%" y="959.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (106 samples, 0.05%)</title><rect x="24.7778%" y="933" width="0.0503%" height="15" fill="rgb(250,67,1)" fg:x="52198" fg:w="106"/><text x="25.0278%" y="943.50"></text></g><g><title>async_executor::Executor::state (85 samples, 0.04%)</title><rect x="24.7878%" y="917" width="0.0403%" height="15" fill="rgb(253,115,44)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (85 samples, 0.04%)</title><rect x="24.7878%" y="901" width="0.0403%" height="15" fill="rgb(251,139,18)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="911.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (85 samples, 0.04%)</title><rect x="24.7878%" y="885" width="0.0403%" height="15" fill="rgb(218,22,32)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="895.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (85 samples, 0.04%)</title><rect x="24.7878%" y="869" width="0.0403%" height="15" fill="rgb(243,53,5)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="879.50"></text></g><g><title>once_cell::imp::initialize_or_wait (85 samples, 0.04%)</title><rect x="24.7878%" y="853" width="0.0403%" height="15" fill="rgb(227,56,16)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (85 samples, 0.04%)</title><rect x="24.7878%" y="837" width="0.0403%" height="15" fill="rgb(245,53,0)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="847.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (85 samples, 0.04%)</title><rect x="24.7878%" y="821" width="0.0403%" height="15" fill="rgb(216,170,35)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="831.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (85 samples, 0.04%)</title><rect x="24.7878%" y="805" width="0.0403%" height="15" fill="rgb(211,200,8)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="815.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (85 samples, 0.04%)</title><rect x="24.7878%" y="789" width="0.0403%" height="15" fill="rgb(228,204,44)" fg:x="52219" fg:w="85"/><text x="25.0378%" y="799.50"></text></g><g><title>async_executor::State::new (83 samples, 0.04%)</title><rect x="24.7888%" y="773" width="0.0394%" height="15" fill="rgb(214,121,17)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (83 samples, 0.04%)</title><rect x="24.7888%" y="757" width="0.0394%" height="15" fill="rgb(233,64,38)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (83 samples, 0.04%)</title><rect x="24.7888%" y="741" width="0.0394%" height="15" fill="rgb(253,54,19)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.04%)</title><rect x="24.7888%" y="725" width="0.0394%" height="15" fill="rgb(253,94,18)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.04%)</title><rect x="24.7888%" y="709" width="0.0394%" height="15" fill="rgb(227,57,52)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.04%)</title><rect x="24.7888%" y="693" width="0.0394%" height="15" fill="rgb(230,228,50)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="703.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.04%)</title><rect x="24.7888%" y="677" width="0.0394%" height="15" fill="rgb(217,205,27)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="687.50"></text></g><g><title>__rdl_alloc (83 samples, 0.04%)</title><rect x="24.7888%" y="661" width="0.0394%" height="15" fill="rgb(252,71,50)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (83 samples, 0.04%)</title><rect x="24.7888%" y="645" width="0.0394%" height="15" fill="rgb(209,86,4)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="655.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (83 samples, 0.04%)</title><rect x="24.7888%" y="629" width="0.0394%" height="15" fill="rgb(229,94,0)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="639.50"></text></g><g><title>posix_memalign (83 samples, 0.04%)</title><rect x="24.7888%" y="613" width="0.0394%" height="15" fill="rgb(252,223,21)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="623.50"></text></g><g><title>[libc.so.6] (83 samples, 0.04%)</title><rect x="24.7888%" y="597" width="0.0394%" height="15" fill="rgb(230,210,4)" fg:x="52221" fg:w="83"/><text x="25.0388%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (45 samples, 0.02%)</title><rect x="24.9193%" y="869" width="0.0214%" height="15" fill="rgb(240,149,38)" fg:x="52496" fg:w="45"/><text x="25.1693%" y="879.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (26 samples, 0.01%)</title><rect x="24.9283%" y="853" width="0.0123%" height="15" fill="rgb(254,105,20)" fg:x="52515" fg:w="26"/><text x="25.1783%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (61 samples, 0.03%)</title><rect x="24.9184%" y="885" width="0.0290%" height="15" fill="rgb(253,87,46)" fg:x="52494" fg:w="61"/><text x="25.1684%" y="895.50"></text></g><g><title>core::intrinsics::copy (86 samples, 0.04%)</title><rect x="24.9511%" y="837" width="0.0408%" height="15" fill="rgb(253,116,33)" fg:x="52563" fg:w="86"/><text x="25.2011%" y="847.50"></text></g><g><title>[libc.so.6] (81 samples, 0.04%)</title><rect x="24.9535%" y="821" width="0.0384%" height="15" fill="rgb(229,198,5)" fg:x="52568" fg:w="81"/><text x="25.2035%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (104 samples, 0.05%)</title><rect x="24.9483%" y="869" width="0.0494%" height="15" fill="rgb(242,38,37)" fg:x="52557" fg:w="104"/><text x="25.1983%" y="879.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (99 samples, 0.05%)</title><rect x="24.9506%" y="853" width="0.0470%" height="15" fill="rgb(242,69,53)" fg:x="52562" fg:w="99"/><text x="25.2006%" y="863.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="25.0242%" y="725" width="0.0171%" height="15" fill="rgb(249,80,16)" fg:x="52717" fg:w="36"/><text x="25.2742%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (92 samples, 0.04%)</title><rect x="24.9981%" y="869" width="0.0437%" height="15" fill="rgb(206,128,11)" fg:x="52662" fg:w="92"/><text x="25.2481%" y="879.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (76 samples, 0.04%)</title><rect x="25.0057%" y="853" width="0.0361%" height="15" fill="rgb(212,35,20)" fg:x="52678" fg:w="76"/><text x="25.2557%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (76 samples, 0.04%)</title><rect x="25.0057%" y="837" width="0.0361%" height="15" fill="rgb(236,79,13)" fg:x="52678" fg:w="76"/><text x="25.2557%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (76 samples, 0.04%)</title><rect x="25.0057%" y="821" width="0.0361%" height="15" fill="rgb(233,123,3)" fg:x="52678" fg:w="76"/><text x="25.2557%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (76 samples, 0.04%)</title><rect x="25.0057%" y="805" width="0.0361%" height="15" fill="rgb(214,93,52)" fg:x="52678" fg:w="76"/><text x="25.2557%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.04%)</title><rect x="25.0057%" y="789" width="0.0361%" height="15" fill="rgb(251,37,40)" fg:x="52678" fg:w="76"/><text x="25.2557%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.04%)</title><rect x="25.0057%" y="773" width="0.0361%" height="15" fill="rgb(227,80,54)" fg:x="52678" fg:w="76"/><text x="25.2557%" y="783.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.04%)</title><rect x="25.0057%" y="757" width="0.0361%" height="15" fill="rgb(254,48,11)" fg:x="52678" fg:w="76"/><text x="25.2557%" y="767.50"></text></g><g><title>malloc (74 samples, 0.04%)</title><rect x="25.0066%" y="741" width="0.0351%" height="15" fill="rgb(235,193,26)" fg:x="52680" fg:w="74"/><text x="25.2566%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (207 samples, 0.10%)</title><rect x="24.9473%" y="885" width="0.0983%" height="15" fill="rgb(229,99,21)" fg:x="52555" fg:w="207"/><text x="25.1973%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (462 samples, 0.22%)</title><rect x="24.8282%" y="933" width="0.2193%" height="15" fill="rgb(211,140,41)" fg:x="52304" fg:w="462"/><text x="25.0782%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (462 samples, 0.22%)</title><rect x="24.8282%" y="917" width="0.2193%" height="15" fill="rgb(240,227,30)" fg:x="52304" fg:w="462"/><text x="25.0782%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (299 samples, 0.14%)</title><rect x="24.9055%" y="901" width="0.1419%" height="15" fill="rgb(215,224,45)" fg:x="52467" fg:w="299"/><text x="25.1555%" y="911.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_internal_kv (27 samples, 0.01%)</title><rect x="25.0475%" y="853" width="0.0128%" height="15" fill="rgb(206,123,31)" fg:x="52766" fg:w="27"/><text x="25.2975%" y="863.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (27 samples, 0.01%)</title><rect x="25.0475%" y="837" width="0.0128%" height="15" fill="rgb(210,138,16)" fg:x="52766" fg:w="27"/><text x="25.2975%" y="847.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (52 samples, 0.02%)</title><rect x="25.0821%" y="837" width="0.0247%" height="15" fill="rgb(228,57,28)" fg:x="52839" fg:w="52"/><text x="25.3321%" y="847.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (50 samples, 0.02%)</title><rect x="25.0831%" y="821" width="0.0237%" height="15" fill="rgb(242,170,10)" fg:x="52841" fg:w="50"/><text x="25.3331%" y="831.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (28 samples, 0.01%)</title><rect x="25.0935%" y="805" width="0.0133%" height="15" fill="rgb(228,214,39)" fg:x="52863" fg:w="28"/><text x="25.3435%" y="815.50"></text></g><g><title>cfree (28 samples, 0.01%)</title><rect x="25.0935%" y="789" width="0.0133%" height="15" fill="rgb(218,179,33)" fg:x="52863" fg:w="28"/><text x="25.3435%" y="799.50"></text></g><g><title>core::intrinsics::copy (36 samples, 0.02%)</title><rect x="25.1135%" y="805" width="0.0171%" height="15" fill="rgb(235,193,39)" fg:x="52905" fg:w="36"/><text x="25.3635%" y="815.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="25.1158%" y="789" width="0.0147%" height="15" fill="rgb(219,221,36)" fg:x="52910" fg:w="31"/><text x="25.3658%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (59 samples, 0.03%)</title><rect x="25.1130%" y="837" width="0.0280%" height="15" fill="rgb(248,218,19)" fg:x="52904" fg:w="59"/><text x="25.3630%" y="847.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (59 samples, 0.03%)</title><rect x="25.1130%" y="821" width="0.0280%" height="15" fill="rgb(205,50,9)" fg:x="52904" fg:w="59"/><text x="25.3630%" y="831.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (206 samples, 0.10%)</title><rect x="25.0475%" y="933" width="0.0978%" height="15" fill="rgb(238,81,28)" fg:x="52766" fg:w="206"/><text x="25.2975%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (206 samples, 0.10%)</title><rect x="25.0475%" y="917" width="0.0978%" height="15" fill="rgb(235,110,19)" fg:x="52766" fg:w="206"/><text x="25.2975%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (206 samples, 0.10%)</title><rect x="25.0475%" y="901" width="0.0978%" height="15" fill="rgb(214,7,14)" fg:x="52766" fg:w="206"/><text x="25.2975%" y="911.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (206 samples, 0.10%)</title><rect x="25.0475%" y="885" width="0.0978%" height="15" fill="rgb(211,77,3)" fg:x="52766" fg:w="206"/><text x="25.2975%" y="895.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (206 samples, 0.10%)</title><rect x="25.0475%" y="869" width="0.0978%" height="15" fill="rgb(229,5,9)" fg:x="52766" fg:w="206"/><text x="25.2975%" y="879.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (179 samples, 0.08%)</title><rect x="25.0603%" y="853" width="0.0850%" height="15" fill="rgb(225,90,11)" fg:x="52793" fg:w="179"/><text x="25.3103%" y="863.50"></text></g><g><title>async_std::task::builder::Builder::blocking (775 samples, 0.37%)</title><rect x="24.7778%" y="1237" width="0.3679%" height="15" fill="rgb(242,56,8)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (775 samples, 0.37%)</title><rect x="24.7778%" y="1221" width="0.3679%" height="15" fill="rgb(249,212,39)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (775 samples, 0.37%)</title><rect x="24.7778%" y="1205" width="0.3679%" height="15" fill="rgb(236,90,9)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (775 samples, 0.37%)</title><rect x="24.7778%" y="1189" width="0.3679%" height="15" fill="rgb(206,88,35)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1199.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (775 samples, 0.37%)</title><rect x="24.7778%" y="1173" width="0.3679%" height="15" fill="rgb(205,126,30)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (775 samples, 0.37%)</title><rect x="24.7778%" y="1157" width="0.3679%" height="15" fill="rgb(230,176,12)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (775 samples, 0.37%)</title><rect x="24.7778%" y="1141" width="0.3679%" height="15" fill="rgb(243,19,9)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (775 samples, 0.37%)</title><rect x="24.7778%" y="1125" width="0.3679%" height="15" fill="rgb(245,171,17)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (775 samples, 0.37%)</title><rect x="24.7778%" y="1109" width="0.3679%" height="15" fill="rgb(227,52,21)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1119.50"></text></g><g><title>async_global_executor::executor::block_on (775 samples, 0.37%)</title><rect x="24.7778%" y="1093" width="0.3679%" height="15" fill="rgb(238,69,14)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (775 samples, 0.37%)</title><rect x="24.7778%" y="1077" width="0.3679%" height="15" fill="rgb(241,156,39)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (775 samples, 0.37%)</title><rect x="24.7778%" y="1061" width="0.3679%" height="15" fill="rgb(212,227,28)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (775 samples, 0.37%)</title><rect x="24.7778%" y="1045" width="0.3679%" height="15" fill="rgb(209,118,27)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1055.50"></text></g><g><title>async_global_executor::reactor::block_on (775 samples, 0.37%)</title><rect x="24.7778%" y="1029" width="0.3679%" height="15" fill="rgb(226,102,5)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1039.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (775 samples, 0.37%)</title><rect x="24.7778%" y="1013" width="0.3679%" height="15" fill="rgb(223,34,3)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1023.50"></text></g><g><title>async_io::driver::block_on (775 samples, 0.37%)</title><rect x="24.7778%" y="997" width="0.3679%" height="15" fill="rgb(221,81,38)" fg:x="52198" fg:w="775"/><text x="25.0278%" y="1007.50"></text></g><g><title>async_io::reactor::ReactorLock::react (669 samples, 0.32%)</title><rect x="24.8282%" y="981" width="0.3176%" height="15" fill="rgb(236,219,28)" fg:x="52304" fg:w="669"/><text x="25.0782%" y="991.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (669 samples, 0.32%)</title><rect x="24.8282%" y="965" width="0.3176%" height="15" fill="rgb(213,200,14)" fg:x="52304" fg:w="669"/><text x="25.0782%" y="975.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (669 samples, 0.32%)</title><rect x="24.8282%" y="949" width="0.3176%" height="15" fill="rgb(240,33,19)" fg:x="52304" fg:w="669"/><text x="25.0782%" y="959.50"></text></g><g><title>[libc.so.6] (34 samples, 0.02%)</title><rect x="25.1491%" y="1189" width="0.0161%" height="15" fill="rgb(233,113,27)" fg:x="52980" fg:w="34"/><text x="25.3991%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (46 samples, 0.02%)</title><rect x="25.1742%" y="1189" width="0.0218%" height="15" fill="rgb(220,221,18)" fg:x="53033" fg:w="46"/><text x="25.4242%" y="1199.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (45 samples, 0.02%)</title><rect x="25.1747%" y="1173" width="0.0214%" height="15" fill="rgb(238,92,8)" fg:x="53034" fg:w="45"/><text x="25.4247%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (32 samples, 0.02%)</title><rect x="25.1809%" y="1157" width="0.0152%" height="15" fill="rgb(222,164,16)" fg:x="53047" fg:w="32"/><text x="25.4309%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (28 samples, 0.01%)</title><rect x="25.1828%" y="1141" width="0.0133%" height="15" fill="rgb(241,119,3)" fg:x="53051" fg:w="28"/><text x="25.4328%" y="1151.50"></text></g><g><title>[libc.so.6] (134 samples, 0.06%)</title><rect x="25.1998%" y="1173" width="0.0636%" height="15" fill="rgb(241,44,8)" fg:x="53087" fg:w="134"/><text x="25.4498%" y="1183.50"></text></g><g><title>[libc.so.6] (72 samples, 0.03%)</title><rect x="25.2644%" y="1157" width="0.0342%" height="15" fill="rgb(230,36,40)" fg:x="53223" fg:w="72"/><text x="25.5144%" y="1167.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="25.4410%" y="1045" width="0.0171%" height="15" fill="rgb(243,16,36)" fg:x="53595" fg:w="36"/><text x="25.6910%" y="1055.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="25.4581%" y="1045" width="0.0285%" height="15" fill="rgb(231,4,26)" fg:x="53631" fg:w="60"/><text x="25.7081%" y="1055.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="25.4590%" y="1029" width="0.0275%" height="15" fill="rgb(240,9,31)" fg:x="53633" fg:w="58"/><text x="25.7090%" y="1039.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="25.4604%" y="1013" width="0.0261%" height="15" fill="rgb(207,173,15)" fg:x="53636" fg:w="55"/><text x="25.7104%" y="1023.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="25.4609%" y="997" width="0.0256%" height="15" fill="rgb(224,192,53)" fg:x="53637" fg:w="54"/><text x="25.7109%" y="1007.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="25.4623%" y="981" width="0.0242%" height="15" fill="rgb(223,67,28)" fg:x="53640" fg:w="51"/><text x="25.7123%" y="991.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="25.4661%" y="965" width="0.0204%" height="15" fill="rgb(211,20,47)" fg:x="53648" fg:w="43"/><text x="25.7161%" y="975.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="25.4704%" y="949" width="0.0161%" height="15" fill="rgb(240,228,2)" fg:x="53657" fg:w="34"/><text x="25.7204%" y="959.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="25.4747%" y="933" width="0.0119%" height="15" fill="rgb(248,151,12)" fg:x="53666" fg:w="25"/><text x="25.7247%" y="943.50"></text></g><g><title>[libc.so.6] (382 samples, 0.18%)</title><rect x="25.3404%" y="1061" width="0.1813%" height="15" fill="rgb(244,8,39)" fg:x="53383" fg:w="382"/><text x="25.5904%" y="1071.50"></text></g><g><title>__mprotect (74 samples, 0.04%)</title><rect x="25.4866%" y="1045" width="0.0351%" height="15" fill="rgb(222,26,8)" fg:x="53691" fg:w="74"/><text x="25.7366%" y="1055.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="25.4866%" y="1029" width="0.0351%" height="15" fill="rgb(213,106,44)" fg:x="53691" fg:w="74"/><text x="25.7366%" y="1039.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="25.4875%" y="1013" width="0.0342%" height="15" fill="rgb(214,129,20)" fg:x="53693" fg:w="72"/><text x="25.7375%" y="1023.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="25.4875%" y="997" width="0.0342%" height="15" fill="rgb(212,32,13)" fg:x="53693" fg:w="72"/><text x="25.7375%" y="1007.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="25.4880%" y="981" width="0.0337%" height="15" fill="rgb(208,168,33)" fg:x="53694" fg:w="71"/><text x="25.7380%" y="991.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="25.4908%" y="965" width="0.0309%" height="15" fill="rgb(231,207,8)" fg:x="53700" fg:w="65"/><text x="25.7408%" y="975.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="25.4994%" y="949" width="0.0223%" height="15" fill="rgb(235,219,23)" fg:x="53718" fg:w="47"/><text x="25.7494%" y="959.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="25.5060%" y="933" width="0.0157%" height="15" fill="rgb(226,216,26)" fg:x="53732" fg:w="33"/><text x="25.7560%" y="943.50"></text></g><g><title>[libc.so.6] (436 samples, 0.21%)</title><rect x="25.3199%" y="1077" width="0.2070%" height="15" fill="rgb(239,137,16)" fg:x="53340" fg:w="436"/><text x="25.5699%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (565 samples, 0.27%)</title><rect x="25.2644%" y="1173" width="0.2682%" height="15" fill="rgb(207,12,36)" fg:x="53223" fg:w="565"/><text x="25.5144%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (493 samples, 0.23%)</title><rect x="25.2986%" y="1157" width="0.2340%" height="15" fill="rgb(210,214,24)" fg:x="53295" fg:w="493"/><text x="25.5486%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (493 samples, 0.23%)</title><rect x="25.2986%" y="1141" width="0.2340%" height="15" fill="rgb(206,56,30)" fg:x="53295" fg:w="493"/><text x="25.5486%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (493 samples, 0.23%)</title><rect x="25.2986%" y="1125" width="0.2340%" height="15" fill="rgb(228,143,26)" fg:x="53295" fg:w="493"/><text x="25.5486%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (493 samples, 0.23%)</title><rect x="25.2986%" y="1109" width="0.2340%" height="15" fill="rgb(216,218,46)" fg:x="53295" fg:w="493"/><text x="25.5486%" y="1119.50"></text></g><g><title>malloc (487 samples, 0.23%)</title><rect x="25.3014%" y="1093" width="0.2312%" height="15" fill="rgb(206,6,19)" fg:x="53301" fg:w="487"/><text x="25.5514%" y="1103.50"></text></g><g><title>async_task::runnable::spawn_unchecked (740 samples, 0.35%)</title><rect x="25.1975%" y="1189" width="0.3513%" height="15" fill="rgb(239,177,51)" fg:x="53082" fg:w="740"/><text x="25.4475%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (34 samples, 0.02%)</title><rect x="25.5326%" y="1173" width="0.0161%" height="15" fill="rgb(216,55,25)" fg:x="53788" fg:w="34"/><text x="25.7826%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.02%)</title><rect x="25.5336%" y="1157" width="0.0152%" height="15" fill="rgb(231,163,29)" fg:x="53790" fg:w="32"/><text x="25.7836%" y="1167.50"></text></g><g><title>malloc (29 samples, 0.01%)</title><rect x="25.5350%" y="1141" width="0.0138%" height="15" fill="rgb(232,149,50)" fg:x="53793" fg:w="29"/><text x="25.7850%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (91 samples, 0.04%)</title><rect x="25.5487%" y="1189" width="0.0432%" height="15" fill="rgb(223,142,48)" fg:x="53822" fg:w="91"/><text x="25.7987%" y="1199.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.04%)</title><rect x="25.5487%" y="1173" width="0.0432%" height="15" fill="rgb(245,83,23)" fg:x="53822" fg:w="91"/><text x="25.7987%" y="1183.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (91 samples, 0.04%)</title><rect x="25.5487%" y="1157" width="0.0432%" height="15" fill="rgb(224,63,2)" fg:x="53822" fg:w="91"/><text x="25.7987%" y="1167.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (91 samples, 0.04%)</title><rect x="25.5487%" y="1141" width="0.0432%" height="15" fill="rgb(218,65,53)" fg:x="53822" fg:w="91"/><text x="25.7987%" y="1151.50"></text></g><g><title>syscall (86 samples, 0.04%)</title><rect x="25.5511%" y="1125" width="0.0408%" height="15" fill="rgb(221,84,29)" fg:x="53827" fg:w="86"/><text x="25.8011%" y="1135.50"></text></g><g><title>[unknown] (84 samples, 0.04%)</title><rect x="25.5521%" y="1109" width="0.0399%" height="15" fill="rgb(234,0,32)" fg:x="53829" fg:w="84"/><text x="25.8021%" y="1119.50"></text></g><g><title>[unknown] (84 samples, 0.04%)</title><rect x="25.5521%" y="1093" width="0.0399%" height="15" fill="rgb(206,20,16)" fg:x="53829" fg:w="84"/><text x="25.8021%" y="1103.50"></text></g><g><title>[unknown] (84 samples, 0.04%)</title><rect x="25.5521%" y="1077" width="0.0399%" height="15" fill="rgb(244,172,18)" fg:x="53829" fg:w="84"/><text x="25.8021%" y="1087.50"></text></g><g><title>[unknown] (82 samples, 0.04%)</title><rect x="25.5530%" y="1061" width="0.0389%" height="15" fill="rgb(254,133,1)" fg:x="53831" fg:w="82"/><text x="25.8030%" y="1071.50"></text></g><g><title>[unknown] (76 samples, 0.04%)</title><rect x="25.5559%" y="1045" width="0.0361%" height="15" fill="rgb(222,206,41)" fg:x="53837" fg:w="76"/><text x="25.8059%" y="1055.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="25.5715%" y="1029" width="0.0204%" height="15" fill="rgb(212,3,42)" fg:x="53870" fg:w="43"/><text x="25.8215%" y="1039.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="25.5782%" y="1013" width="0.0138%" height="15" fill="rgb(241,11,4)" fg:x="53884" fg:w="29"/><text x="25.8282%" y="1023.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="25.5801%" y="997" width="0.0119%" height="15" fill="rgb(205,19,26)" fg:x="53888" fg:w="25"/><text x="25.8301%" y="1007.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (23 samples, 0.01%)</title><rect x="25.5919%" y="1189" width="0.0109%" height="15" fill="rgb(210,179,32)" fg:x="53913" fg:w="23"/><text x="25.8419%" y="1199.50"></text></g><g><title>std::sys::unix::futex::futex_wait (44 samples, 0.02%)</title><rect x="25.6062%" y="1125" width="0.0209%" height="15" fill="rgb(227,116,49)" fg:x="53943" fg:w="44"/><text x="25.8562%" y="1135.50"></text></g><g><title>syscall (44 samples, 0.02%)</title><rect x="25.6062%" y="1109" width="0.0209%" height="15" fill="rgb(211,146,6)" fg:x="53943" fg:w="44"/><text x="25.8562%" y="1119.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="25.6062%" y="1093" width="0.0209%" height="15" fill="rgb(219,44,39)" fg:x="53943" fg:w="44"/><text x="25.8562%" y="1103.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="25.6062%" y="1077" width="0.0209%" height="15" fill="rgb(234,128,11)" fg:x="53943" fg:w="44"/><text x="25.8562%" y="1087.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="25.6062%" y="1061" width="0.0209%" height="15" fill="rgb(220,183,53)" fg:x="53943" fg:w="44"/><text x="25.8562%" y="1071.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="25.6067%" y="1045" width="0.0204%" height="15" fill="rgb(213,219,32)" fg:x="53944" fg:w="43"/><text x="25.8567%" y="1055.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="25.6067%" y="1029" width="0.0204%" height="15" fill="rgb(232,156,16)" fg:x="53944" fg:w="43"/><text x="25.8567%" y="1039.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="25.6071%" y="1013" width="0.0199%" height="15" fill="rgb(246,135,34)" fg:x="53945" fg:w="42"/><text x="25.8571%" y="1023.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="25.6076%" y="997" width="0.0195%" height="15" fill="rgb(241,99,0)" fg:x="53946" fg:w="41"/><text x="25.8576%" y="1007.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="25.6090%" y="981" width="0.0180%" height="15" fill="rgb(222,103,45)" fg:x="53949" fg:w="38"/><text x="25.8590%" y="991.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="25.6114%" y="965" width="0.0157%" height="15" fill="rgb(212,57,4)" fg:x="53954" fg:w="33"/><text x="25.8614%" y="975.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="25.6157%" y="949" width="0.0114%" height="15" fill="rgb(215,68,47)" fg:x="53963" fg:w="24"/><text x="25.8657%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (124 samples, 0.06%)</title><rect x="25.6029%" y="1189" width="0.0589%" height="15" fill="rgb(230,84,2)" fg:x="53936" fg:w="124"/><text x="25.8529%" y="1199.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (121 samples, 0.06%)</title><rect x="25.6043%" y="1173" width="0.0574%" height="15" fill="rgb(220,102,14)" fg:x="53939" fg:w="121"/><text x="25.8543%" y="1183.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (121 samples, 0.06%)</title><rect x="25.6043%" y="1157" width="0.0574%" height="15" fill="rgb(240,10,32)" fg:x="53939" fg:w="121"/><text x="25.8543%" y="1167.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (120 samples, 0.06%)</title><rect x="25.6048%" y="1141" width="0.0570%" height="15" fill="rgb(215,47,27)" fg:x="53940" fg:w="120"/><text x="25.8548%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (73 samples, 0.03%)</title><rect x="25.6271%" y="1125" width="0.0347%" height="15" fill="rgb(233,188,43)" fg:x="53987" fg:w="73"/><text x="25.8771%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::spawn (1,089 samples, 0.52%)</title><rect x="25.1457%" y="1237" width="0.5169%" height="15" fill="rgb(253,190,1)" fg:x="52973" fg:w="1089"/><text x="25.3957%" y="1247.50"></text></g><g><title>async_global_executor::executor::spawn (1,089 samples, 0.52%)</title><rect x="25.1457%" y="1221" width="0.5169%" height="15" fill="rgb(206,114,52)" fg:x="52973" fg:w="1089"/><text x="25.3957%" y="1231.50"></text></g><g><title>async_executor::Executor::spawn (1,089 samples, 0.52%)</title><rect x="25.1457%" y="1205" width="0.5169%" height="15" fill="rgb(233,120,37)" fg:x="52973" fg:w="1089"/><text x="25.3957%" y="1215.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (24 samples, 0.01%)</title><rect x="25.6978%" y="773" width="0.0114%" height="15" fill="rgb(214,52,39)" fg:x="54136" fg:w="24"/><text x="25.9478%" y="783.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (23 samples, 0.01%)</title><rect x="25.7092%" y="773" width="0.0109%" height="15" fill="rgb(223,80,29)" fg:x="54160" fg:w="23"/><text x="25.9592%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.02%)</title><rect x="25.7481%" y="757" width="0.0171%" height="15" fill="rgb(230,101,40)" fg:x="54242" fg:w="36"/><text x="25.9981%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (36 samples, 0.02%)</title><rect x="25.7481%" y="741" width="0.0171%" height="15" fill="rgb(219,211,8)" fg:x="54242" fg:w="36"/><text x="25.9981%" y="751.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (43 samples, 0.02%)</title><rect x="25.7690%" y="757" width="0.0204%" height="15" fill="rgb(252,126,28)" fg:x="54286" fg:w="43"/><text x="26.0190%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (43 samples, 0.02%)</title><rect x="25.7690%" y="741" width="0.0204%" height="15" fill="rgb(215,56,38)" fg:x="54286" fg:w="43"/><text x="26.0190%" y="751.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (239 samples, 0.11%)</title><rect x="25.7315%" y="773" width="0.1135%" height="15" fill="rgb(249,55,44)" fg:x="54207" fg:w="239"/><text x="25.9815%" y="783.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (117 samples, 0.06%)</title><rect x="25.7894%" y="757" width="0.0555%" height="15" fill="rgb(220,221,32)" fg:x="54329" fg:w="117"/><text x="26.0394%" y="767.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (23 samples, 0.01%)</title><rect x="25.8554%" y="773" width="0.0109%" height="15" fill="rgb(212,216,41)" fg:x="54468" fg:w="23"/><text x="26.1054%" y="783.50"></text></g><g><title>rsa::internals::decrypt (415 samples, 0.20%)</title><rect x="25.6707%" y="837" width="0.1970%" height="15" fill="rgb(228,213,43)" fg:x="54079" fg:w="415"/><text x="25.9207%" y="847.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (413 samples, 0.20%)</title><rect x="25.6717%" y="821" width="0.1960%" height="15" fill="rgb(211,31,26)" fg:x="54081" fg:w="413"/><text x="25.9217%" y="831.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (413 samples, 0.20%)</title><rect x="25.6717%" y="805" width="0.1960%" height="15" fill="rgb(229,202,19)" fg:x="54081" fg:w="413"/><text x="25.9217%" y="815.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (413 samples, 0.20%)</title><rect x="25.6717%" y="789" width="0.1960%" height="15" fill="rgb(229,105,46)" fg:x="54081" fg:w="413"/><text x="25.9217%" y="799.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (25 samples, 0.01%)</title><rect x="25.9033%" y="757" width="0.0119%" height="15" fill="rgb(235,108,1)" fg:x="54569" fg:w="25"/><text x="26.1533%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (25 samples, 0.01%)</title><rect x="25.9033%" y="741" width="0.0119%" height="15" fill="rgb(245,111,35)" fg:x="54569" fg:w="25"/><text x="26.1533%" y="751.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (125 samples, 0.06%)</title><rect x="25.8829%" y="773" width="0.0593%" height="15" fill="rgb(219,185,31)" fg:x="54526" fg:w="125"/><text x="26.1329%" y="783.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (57 samples, 0.03%)</title><rect x="25.9152%" y="757" width="0.0271%" height="15" fill="rgb(214,4,43)" fg:x="54594" fg:w="57"/><text x="26.1652%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (590 samples, 0.28%)</title><rect x="25.6707%" y="981" width="0.2801%" height="15" fill="rgb(235,227,40)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (590 samples, 0.28%)</title><rect x="25.6707%" y="965" width="0.2801%" height="15" fill="rgb(230,88,30)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (590 samples, 0.28%)</title><rect x="25.6707%" y="949" width="0.2801%" height="15" fill="rgb(216,217,1)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="959.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (590 samples, 0.28%)</title><rect x="25.6707%" y="933" width="0.2801%" height="15" fill="rgb(248,139,50)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="943.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (590 samples, 0.28%)</title><rect x="25.6707%" y="917" width="0.2801%" height="15" fill="rgb(233,1,21)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="927.50"></text></g><g><title>rsa::pkcs1v15::decrypt (590 samples, 0.28%)</title><rect x="25.6707%" y="901" width="0.2801%" height="15" fill="rgb(215,183,12)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="911.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (590 samples, 0.28%)</title><rect x="25.6707%" y="885" width="0.2801%" height="15" fill="rgb(229,104,42)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="895.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (590 samples, 0.28%)</title><rect x="25.6707%" y="869" width="0.2801%" height="15" fill="rgb(243,34,48)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="879.50"></text></g><g><title>rsa::internals::decrypt_and_check (590 samples, 0.28%)</title><rect x="25.6707%" y="853" width="0.2801%" height="15" fill="rgb(239,11,44)" fg:x="54079" fg:w="590"/><text x="25.9207%" y="863.50"></text></g><g><title>rsa::internals::encrypt (175 samples, 0.08%)</title><rect x="25.8677%" y="837" width="0.0831%" height="15" fill="rgb(231,98,35)" fg:x="54494" fg:w="175"/><text x="26.1177%" y="847.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (175 samples, 0.08%)</title><rect x="25.8677%" y="821" width="0.0831%" height="15" fill="rgb(233,28,25)" fg:x="54494" fg:w="175"/><text x="26.1177%" y="831.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (175 samples, 0.08%)</title><rect x="25.8677%" y="805" width="0.0831%" height="15" fill="rgb(234,123,11)" fg:x="54494" fg:w="175"/><text x="26.1177%" y="815.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (171 samples, 0.08%)</title><rect x="25.8696%" y="789" width="0.0812%" height="15" fill="rgb(220,69,3)" fg:x="54498" fg:w="171"/><text x="26.1196%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 0.29%)</title><rect x="25.6627%" y="1077" width="0.2929%" height="15" fill="rgb(214,64,36)" fg:x="54062" fg:w="617"/><text x="25.9127%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (609 samples, 0.29%)</title><rect x="25.6665%" y="1061" width="0.2891%" height="15" fill="rgb(211,138,32)" fg:x="54070" fg:w="609"/><text x="25.9165%" y="1071.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (609 samples, 0.29%)</title><rect x="25.6665%" y="1045" width="0.2891%" height="15" fill="rgb(213,118,47)" fg:x="54070" fg:w="609"/><text x="25.9165%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (609 samples, 0.29%)</title><rect x="25.6665%" y="1029" width="0.2891%" height="15" fill="rgb(243,124,49)" fg:x="54070" fg:w="609"/><text x="25.9165%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (609 samples, 0.29%)</title><rect x="25.6665%" y="1013" width="0.2891%" height="15" fill="rgb(221,30,28)" fg:x="54070" fg:w="609"/><text x="25.9165%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (609 samples, 0.29%)</title><rect x="25.6665%" y="997" width="0.2891%" height="15" fill="rgb(246,37,13)" fg:x="54070" fg:w="609"/><text x="25.9165%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (26 samples, 0.01%)</title><rect x="25.9556%" y="1045" width="0.0123%" height="15" fill="rgb(249,66,14)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="25.9556%" y="1029" width="0.0123%" height="15" fill="rgb(213,166,5)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="1039.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (26 samples, 0.01%)</title><rect x="25.9556%" y="1013" width="0.0123%" height="15" fill="rgb(221,66,24)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="25.9556%" y="997" width="0.0123%" height="15" fill="rgb(210,132,17)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="1007.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (26 samples, 0.01%)</title><rect x="25.9556%" y="981" width="0.0123%" height="15" fill="rgb(243,202,5)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="25.9556%" y="965" width="0.0123%" height="15" fill="rgb(233,70,48)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="975.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (26 samples, 0.01%)</title><rect x="25.9556%" y="949" width="0.0123%" height="15" fill="rgb(238,41,26)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="25.9556%" y="933" width="0.0123%" height="15" fill="rgb(241,19,31)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="943.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (26 samples, 0.01%)</title><rect x="25.9556%" y="917" width="0.0123%" height="15" fill="rgb(214,76,10)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="25.9556%" y="901" width="0.0123%" height="15" fill="rgb(254,202,22)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="911.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (26 samples, 0.01%)</title><rect x="25.9556%" y="885" width="0.0123%" height="15" fill="rgb(214,72,24)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="25.9556%" y="869" width="0.0123%" height="15" fill="rgb(221,92,46)" fg:x="54679" fg:w="26"/><text x="26.2056%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="25.9717%" y="901" width="0.0119%" height="15" fill="rgb(246,13,50)" fg:x="54713" fg:w="25"/><text x="26.2217%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (678 samples, 0.32%)</title><rect x="25.6627%" y="1237" width="0.3218%" height="15" fill="rgb(240,165,38)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1247.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (678 samples, 0.32%)</title><rect x="25.6627%" y="1221" width="0.3218%" height="15" fill="rgb(241,24,51)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (678 samples, 0.32%)</title><rect x="25.6627%" y="1205" width="0.3218%" height="15" fill="rgb(227,51,44)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1215.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (678 samples, 0.32%)</title><rect x="25.6627%" y="1189" width="0.3218%" height="15" fill="rgb(231,121,3)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1199.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (678 samples, 0.32%)</title><rect x="25.6627%" y="1173" width="0.3218%" height="15" fill="rgb(245,3,41)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1183.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (678 samples, 0.32%)</title><rect x="25.6627%" y="1157" width="0.3218%" height="15" fill="rgb(214,13,26)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (678 samples, 0.32%)</title><rect x="25.6627%" y="1141" width="0.3218%" height="15" fill="rgb(252,75,11)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (678 samples, 0.32%)</title><rect x="25.6627%" y="1125" width="0.3218%" height="15" fill="rgb(218,226,17)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (678 samples, 0.32%)</title><rect x="25.6627%" y="1109" width="0.3218%" height="15" fill="rgb(248,89,38)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1119.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (678 samples, 0.32%)</title><rect x="25.6627%" y="1093" width="0.3218%" height="15" fill="rgb(237,73,46)" fg:x="54062" fg:w="678"/><text x="25.9127%" y="1103.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (61 samples, 0.03%)</title><rect x="25.9556%" y="1077" width="0.0290%" height="15" fill="rgb(242,78,33)" fg:x="54679" fg:w="61"/><text x="26.2056%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (61 samples, 0.03%)</title><rect x="25.9556%" y="1061" width="0.0290%" height="15" fill="rgb(235,60,3)" fg:x="54679" fg:w="61"/><text x="26.2056%" y="1071.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (35 samples, 0.02%)</title><rect x="25.9679%" y="1045" width="0.0166%" height="15" fill="rgb(216,172,19)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="25.9679%" y="1029" width="0.0166%" height="15" fill="rgb(227,6,42)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="1039.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (35 samples, 0.02%)</title><rect x="25.9679%" y="1013" width="0.0166%" height="15" fill="rgb(223,207,42)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="25.9679%" y="997" width="0.0166%" height="15" fill="rgb(246,138,30)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="1007.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (35 samples, 0.02%)</title><rect x="25.9679%" y="981" width="0.0166%" height="15" fill="rgb(251,199,47)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="25.9679%" y="965" width="0.0166%" height="15" fill="rgb(228,218,44)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="975.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (35 samples, 0.02%)</title><rect x="25.9679%" y="949" width="0.0166%" height="15" fill="rgb(220,68,6)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="25.9679%" y="933" width="0.0166%" height="15" fill="rgb(240,60,26)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="943.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (35 samples, 0.02%)</title><rect x="25.9679%" y="917" width="0.0166%" height="15" fill="rgb(211,200,19)" fg:x="54705" fg:w="35"/><text x="26.2179%" y="927.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;zenoh_protocol_core::locators::Locator,R&gt;&gt;::read (76 samples, 0.04%)</title><rect x="25.9987%" y="453" width="0.0361%" height="15" fill="rgb(242,145,30)" fg:x="54770" fg:w="76"/><text x="26.2487%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (56 samples, 0.03%)</title><rect x="26.0082%" y="437" width="0.0266%" height="15" fill="rgb(225,64,13)" fg:x="54790" fg:w="56"/><text x="26.2582%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.02%)</title><rect x="26.0348%" y="453" width="0.0152%" height="15" fill="rgb(218,103,35)" fg:x="54846" fg:w="32"/><text x="26.2848%" y="463.50"></text></g><g><title>core::ptr::write (23 samples, 0.01%)</title><rect x="26.0391%" y="437" width="0.0109%" height="15" fill="rgb(216,93,46)" fg:x="54855" fg:w="23"/><text x="26.2891%" y="447.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (134 samples, 0.06%)</title><rect x="25.9907%" y="485" width="0.0636%" height="15" fill="rgb(225,159,27)" fg:x="54753" fg:w="134"/><text x="26.2407%" y="495.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (134 samples, 0.06%)</title><rect x="25.9907%" y="469" width="0.0636%" height="15" fill="rgb(225,204,11)" fg:x="54753" fg:w="134"/><text x="26.2407%" y="479.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (154 samples, 0.07%)</title><rect x="25.9907%" y="645" width="0.0731%" height="15" fill="rgb(205,56,4)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (154 samples, 0.07%)</title><rect x="25.9907%" y="629" width="0.0731%" height="15" fill="rgb(206,6,35)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="639.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (154 samples, 0.07%)</title><rect x="25.9907%" y="613" width="0.0731%" height="15" fill="rgb(247,73,52)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (154 samples, 0.07%)</title><rect x="25.9907%" y="597" width="0.0731%" height="15" fill="rgb(246,97,4)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="607.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (154 samples, 0.07%)</title><rect x="25.9907%" y="581" width="0.0731%" height="15" fill="rgb(212,37,15)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="591.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (154 samples, 0.07%)</title><rect x="25.9907%" y="565" width="0.0731%" height="15" fill="rgb(208,130,40)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="575.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (154 samples, 0.07%)</title><rect x="25.9907%" y="549" width="0.0731%" height="15" fill="rgb(236,55,29)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="559.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (154 samples, 0.07%)</title><rect x="25.9907%" y="533" width="0.0731%" height="15" fill="rgb(209,156,45)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (154 samples, 0.07%)</title><rect x="25.9907%" y="517" width="0.0731%" height="15" fill="rgb(249,107,4)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (154 samples, 0.07%)</title><rect x="25.9907%" y="501" width="0.0731%" height="15" fill="rgb(227,7,13)" fg:x="54753" fg:w="154"/><text x="26.2407%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (37 samples, 0.02%)</title><rect x="26.0657%" y="549" width="0.0176%" height="15" fill="rgb(250,129,14)" fg:x="54911" fg:w="37"/><text x="26.3157%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.02%)</title><rect x="26.0657%" y="533" width="0.0176%" height="15" fill="rgb(229,92,13)" fg:x="54911" fg:w="37"/><text x="26.3157%" y="543.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (37 samples, 0.02%)</title><rect x="26.0657%" y="517" width="0.0176%" height="15" fill="rgb(245,98,39)" fg:x="54911" fg:w="37"/><text x="26.3157%" y="527.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (27 samples, 0.01%)</title><rect x="26.0704%" y="501" width="0.0128%" height="15" fill="rgb(234,135,48)" fg:x="54921" fg:w="27"/><text x="26.3204%" y="511.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (48 samples, 0.02%)</title><rect x="26.0638%" y="565" width="0.0228%" height="15" fill="rgb(230,98,28)" fg:x="54907" fg:w="48"/><text x="26.3138%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.03%)</title><rect x="26.0638%" y="581" width="0.0332%" height="15" fill="rgb(223,121,0)" fg:x="54907" fg:w="70"/><text x="26.3138%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (235 samples, 0.11%)</title><rect x="25.9907%" y="661" width="0.1116%" height="15" fill="rgb(234,173,33)" fg:x="54753" fg:w="235"/><text x="26.2407%" y="671.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (81 samples, 0.04%)</title><rect x="26.0638%" y="645" width="0.0384%" height="15" fill="rgb(245,47,8)" fg:x="54907" fg:w="81"/><text x="26.3138%" y="655.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (81 samples, 0.04%)</title><rect x="26.0638%" y="629" width="0.0384%" height="15" fill="rgb(205,17,20)" fg:x="54907" fg:w="81"/><text x="26.3138%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (81 samples, 0.04%)</title><rect x="26.0638%" y="613" width="0.0384%" height="15" fill="rgb(232,151,16)" fg:x="54907" fg:w="81"/><text x="26.3138%" y="623.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (81 samples, 0.04%)</title><rect x="26.0638%" y="597" width="0.0384%" height="15" fill="rgb(208,30,32)" fg:x="54907" fg:w="81"/><text x="26.3138%" y="607.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (134 samples, 0.06%)</title><rect x="26.1022%" y="421" width="0.0636%" height="15" fill="rgb(254,26,3)" fg:x="54988" fg:w="134"/><text x="26.3522%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (134 samples, 0.06%)</title><rect x="26.1022%" y="405" width="0.0636%" height="15" fill="rgb(240,177,30)" fg:x="54988" fg:w="134"/><text x="26.3522%" y="415.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (134 samples, 0.06%)</title><rect x="26.1022%" y="389" width="0.0636%" height="15" fill="rgb(248,76,44)" fg:x="54988" fg:w="134"/><text x="26.3522%" y="399.50"></text></g><g><title>&lt;async_io::reactor::Writable&lt;T&gt; as core::future::future::Future&gt;::poll (134 samples, 0.06%)</title><rect x="26.1022%" y="373" width="0.0636%" height="15" fill="rgb(241,186,54)" fg:x="54988" fg:w="134"/><text x="26.3522%" y="383.50"></text></g><g><title>&lt;async_io::reactor::Ready&lt;H,T&gt; as core::future::future::Future&gt;::poll (134 samples, 0.06%)</title><rect x="26.1022%" y="357" width="0.0636%" height="15" fill="rgb(249,171,29)" fg:x="54988" fg:w="134"/><text x="26.3522%" y="367.50"></text></g><g><title>polling::Poller::modify (134 samples, 0.06%)</title><rect x="26.1022%" y="341" width="0.0636%" height="15" fill="rgb(237,151,44)" fg:x="54988" fg:w="134"/><text x="26.3522%" y="351.50"></text></g><g><title>polling::epoll::Poller::modify (134 samples, 0.06%)</title><rect x="26.1022%" y="325" width="0.0636%" height="15" fill="rgb(228,174,30)" fg:x="54988" fg:w="134"/><text x="26.3522%" y="335.50"></text></g><g><title>polling::epoll::Poller::ctl (134 samples, 0.06%)</title><rect x="26.1022%" y="309" width="0.0636%" height="15" fill="rgb(252,14,37)" fg:x="54988" fg:w="134"/><text x="26.3522%" y="319.50"></text></g><g><title>epoll_ctl (131 samples, 0.06%)</title><rect x="26.1037%" y="293" width="0.0622%" height="15" fill="rgb(207,111,40)" fg:x="54991" fg:w="131"/><text x="26.3537%" y="303.50"></text></g><g><title>[unknown] (129 samples, 0.06%)</title><rect x="26.1046%" y="277" width="0.0612%" height="15" fill="rgb(248,171,54)" fg:x="54993" fg:w="129"/><text x="26.3546%" y="287.50"></text></g><g><title>[unknown] (127 samples, 0.06%)</title><rect x="26.1056%" y="261" width="0.0603%" height="15" fill="rgb(211,127,2)" fg:x="54995" fg:w="127"/><text x="26.3556%" y="271.50"></text></g><g><title>[unknown] (127 samples, 0.06%)</title><rect x="26.1056%" y="245" width="0.0603%" height="15" fill="rgb(236,87,47)" fg:x="54995" fg:w="127"/><text x="26.3556%" y="255.50"></text></g><g><title>[unknown] (125 samples, 0.06%)</title><rect x="26.1065%" y="229" width="0.0593%" height="15" fill="rgb(223,190,45)" fg:x="54997" fg:w="125"/><text x="26.3565%" y="239.50"></text></g><g><title>[unknown] (95 samples, 0.05%)</title><rect x="26.1207%" y="213" width="0.0451%" height="15" fill="rgb(215,5,16)" fg:x="55027" fg:w="95"/><text x="26.3707%" y="223.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="26.1511%" y="197" width="0.0147%" height="15" fill="rgb(252,82,33)" fg:x="55091" fg:w="31"/><text x="26.4011%" y="207.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (171 samples, 0.08%)</title><rect x="26.1022%" y="437" width="0.0812%" height="15" fill="rgb(247,213,44)" fg:x="54988" fg:w="171"/><text x="26.3522%" y="447.50"></text></g><g><title>zenoh_link_tcp::get_tcp_addr::{{closure}} (37 samples, 0.02%)</title><rect x="26.1658%" y="421" width="0.0176%" height="15" fill="rgb(205,196,44)" fg:x="55122" fg:w="37"/><text x="26.4158%" y="431.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (407 samples, 0.19%)</title><rect x="25.9907%" y="757" width="0.1932%" height="15" fill="rgb(237,96,54)" fg:x="54753" fg:w="407"/><text x="26.2407%" y="767.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (407 samples, 0.19%)</title><rect x="25.9907%" y="741" width="0.1932%" height="15" fill="rgb(230,113,34)" fg:x="54753" fg:w="407"/><text x="26.2407%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (407 samples, 0.19%)</title><rect x="25.9907%" y="725" width="0.1932%" height="15" fill="rgb(221,224,12)" fg:x="54753" fg:w="407"/><text x="26.2407%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (407 samples, 0.19%)</title><rect x="25.9907%" y="709" width="0.1932%" height="15" fill="rgb(219,112,44)" fg:x="54753" fg:w="407"/><text x="26.2407%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (407 samples, 0.19%)</title><rect x="25.9907%" y="693" width="0.1932%" height="15" fill="rgb(210,31,13)" fg:x="54753" fg:w="407"/><text x="26.2407%" y="703.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (407 samples, 0.19%)</title><rect x="25.9907%" y="677" width="0.1932%" height="15" fill="rgb(230,25,16)" fg:x="54753" fg:w="407"/><text x="26.2407%" y="687.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="26.1022%" y="661" width="0.0816%" height="15" fill="rgb(246,108,53)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="26.1022%" y="645" width="0.0816%" height="15" fill="rgb(241,172,50)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="655.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (172 samples, 0.08%)</title><rect x="26.1022%" y="629" width="0.0816%" height="15" fill="rgb(235,141,10)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="26.1022%" y="613" width="0.0816%" height="15" fill="rgb(220,174,43)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="623.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (172 samples, 0.08%)</title><rect x="26.1022%" y="597" width="0.0816%" height="15" fill="rgb(215,181,40)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="26.1022%" y="581" width="0.0816%" height="15" fill="rgb(230,97,2)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="591.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (172 samples, 0.08%)</title><rect x="26.1022%" y="565" width="0.0816%" height="15" fill="rgb(211,25,27)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="26.1022%" y="549" width="0.0816%" height="15" fill="rgb(230,87,26)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="559.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (172 samples, 0.08%)</title><rect x="26.1022%" y="533" width="0.0816%" height="15" fill="rgb(227,160,17)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="26.1022%" y="517" width="0.0816%" height="15" fill="rgb(244,85,34)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="527.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (172 samples, 0.08%)</title><rect x="26.1022%" y="501" width="0.0816%" height="15" fill="rgb(207,70,0)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="26.1022%" y="485" width="0.0816%" height="15" fill="rgb(223,129,7)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.08%)</title><rect x="26.1022%" y="469" width="0.0816%" height="15" fill="rgb(246,105,7)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="479.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (172 samples, 0.08%)</title><rect x="26.1022%" y="453" width="0.0816%" height="15" fill="rgb(215,154,42)" fg:x="54988" fg:w="172"/><text x="26.3522%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (408 samples, 0.19%)</title><rect x="25.9907%" y="1109" width="0.1937%" height="15" fill="rgb(220,215,30)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="1119.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (408 samples, 0.19%)</title><rect x="25.9907%" y="1093" width="0.1937%" height="15" fill="rgb(228,81,51)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (408 samples, 0.19%)</title><rect x="25.9907%" y="1077" width="0.1937%" height="15" fill="rgb(247,71,54)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="1087.50"></text></g><g><title>std::panicking::try (408 samples, 0.19%)</title><rect x="25.9907%" y="1061" width="0.1937%" height="15" fill="rgb(234,176,34)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (408 samples, 0.19%)</title><rect x="25.9907%" y="1045" width="0.1937%" height="15" fill="rgb(241,103,54)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="1055.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (408 samples, 0.19%)</title><rect x="25.9907%" y="1029" width="0.1937%" height="15" fill="rgb(228,22,34)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (408 samples, 0.19%)</title><rect x="25.9907%" y="1013" width="0.1937%" height="15" fill="rgb(241,179,48)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (408 samples, 0.19%)</title><rect x="25.9907%" y="997" width="0.1937%" height="15" fill="rgb(235,167,37)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="1007.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (408 samples, 0.19%)</title><rect x="25.9907%" y="981" width="0.1937%" height="15" fill="rgb(213,109,30)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="991.50"></text></g><g><title>async_global_executor::reactor::block_on (408 samples, 0.19%)</title><rect x="25.9907%" y="965" width="0.1937%" height="15" fill="rgb(222,172,16)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="975.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (408 samples, 0.19%)</title><rect x="25.9907%" y="949" width="0.1937%" height="15" fill="rgb(233,192,5)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="959.50"></text></g><g><title>async_io::driver::block_on (408 samples, 0.19%)</title><rect x="25.9907%" y="933" width="0.1937%" height="15" fill="rgb(247,189,41)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="943.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (408 samples, 0.19%)</title><rect x="25.9907%" y="917" width="0.1937%" height="15" fill="rgb(218,134,47)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (408 samples, 0.19%)</title><rect x="25.9907%" y="901" width="0.1937%" height="15" fill="rgb(216,29,3)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (408 samples, 0.19%)</title><rect x="25.9907%" y="885" width="0.1937%" height="15" fill="rgb(246,140,12)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="895.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (408 samples, 0.19%)</title><rect x="25.9907%" y="869" width="0.1937%" height="15" fill="rgb(230,136,11)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (408 samples, 0.19%)</title><rect x="25.9907%" y="853" width="0.1937%" height="15" fill="rgb(247,22,47)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="863.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (408 samples, 0.19%)</title><rect x="25.9907%" y="837" width="0.1937%" height="15" fill="rgb(218,84,22)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (408 samples, 0.19%)</title><rect x="25.9907%" y="821" width="0.1937%" height="15" fill="rgb(216,87,39)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (408 samples, 0.19%)</title><rect x="25.9907%" y="805" width="0.1937%" height="15" fill="rgb(221,178,8)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (408 samples, 0.19%)</title><rect x="25.9907%" y="789" width="0.1937%" height="15" fill="rgb(230,42,11)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (408 samples, 0.19%)</title><rect x="25.9907%" y="773" width="0.1937%" height="15" fill="rgb(237,229,4)" fg:x="54753" fg:w="408"/><text x="26.2407%" y="783.50"></text></g><g><title>async_executor::steal (139 samples, 0.07%)</title><rect x="26.1844%" y="453" width="0.0660%" height="15" fill="rgb(222,31,33)" fg:x="55161" fg:w="139"/><text x="26.4344%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (139 samples, 0.07%)</title><rect x="26.1844%" y="437" width="0.0660%" height="15" fill="rgb(210,17,39)" fg:x="55161" fg:w="139"/><text x="26.4344%" y="447.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (139 samples, 0.07%)</title><rect x="26.1844%" y="421" width="0.0660%" height="15" fill="rgb(244,93,20)" fg:x="55161" fg:w="139"/><text x="26.4344%" y="431.50"></text></g><g><title>cfree (139 samples, 0.07%)</title><rect x="26.1844%" y="405" width="0.0660%" height="15" fill="rgb(210,40,47)" fg:x="55161" fg:w="139"/><text x="26.4344%" y="415.50"></text></g><g><title>[libc.so.6] (139 samples, 0.07%)</title><rect x="26.1844%" y="389" width="0.0660%" height="15" fill="rgb(239,211,47)" fg:x="55161" fg:w="139"/><text x="26.4344%" y="399.50"></text></g><g><title>std::thread::current (22 samples, 0.01%)</title><rect x="26.2503%" y="357" width="0.0104%" height="15" fill="rgb(251,223,49)" fg:x="55300" fg:w="22"/><text x="26.5003%" y="367.50"></text></g><g><title>std::sys_common::thread_info::current_thread (22 samples, 0.01%)</title><rect x="26.2503%" y="341" width="0.0104%" height="15" fill="rgb(221,149,5)" fg:x="55300" fg:w="22"/><text x="26.5003%" y="351.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (22 samples, 0.01%)</title><rect x="26.2503%" y="325" width="0.0104%" height="15" fill="rgb(219,224,51)" fg:x="55300" fg:w="22"/><text x="26.5003%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.01%)</title><rect x="26.2503%" y="309" width="0.0104%" height="15" fill="rgb(223,7,8)" fg:x="55300" fg:w="22"/><text x="26.5003%" y="319.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (172 samples, 0.08%)</title><rect x="26.1844%" y="469" width="0.0816%" height="15" fill="rgb(241,217,22)" fg:x="55161" fg:w="172"/><text x="26.4344%" y="479.50"></text></g><g><title>fastrand::usize (33 samples, 0.02%)</title><rect x="26.2503%" y="453" width="0.0157%" height="15" fill="rgb(248,209,0)" fg:x="55300" fg:w="33"/><text x="26.5003%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.02%)</title><rect x="26.2503%" y="437" width="0.0157%" height="15" fill="rgb(217,205,4)" fg:x="55300" fg:w="33"/><text x="26.5003%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33 samples, 0.02%)</title><rect x="26.2503%" y="421" width="0.0157%" height="15" fill="rgb(228,124,39)" fg:x="55300" fg:w="33"/><text x="26.5003%" y="431.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (33 samples, 0.02%)</title><rect x="26.2503%" y="405" width="0.0157%" height="15" fill="rgb(250,116,42)" fg:x="55300" fg:w="33"/><text x="26.5003%" y="415.50"></text></g><g><title>fastrand::RNG::__getit::{{closure}} (33 samples, 0.02%)</title><rect x="26.2503%" y="389" width="0.0157%" height="15" fill="rgb(223,202,9)" fg:x="55300" fg:w="33"/><text x="26.5003%" y="399.50"></text></g><g><title>fastrand::RNG::__init (33 samples, 0.02%)</title><rect x="26.2503%" y="373" width="0.0157%" height="15" fill="rgb(242,222,40)" fg:x="55300" fg:w="33"/><text x="26.5003%" y="383.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (180 samples, 0.09%)</title><rect x="26.1844%" y="757" width="0.0854%" height="15" fill="rgb(229,99,46)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="767.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (180 samples, 0.09%)</title><rect x="26.1844%" y="741" width="0.0854%" height="15" fill="rgb(225,56,46)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="751.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (180 samples, 0.09%)</title><rect x="26.1844%" y="725" width="0.0854%" height="15" fill="rgb(227,94,5)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (180 samples, 0.09%)</title><rect x="26.1844%" y="709" width="0.0854%" height="15" fill="rgb(205,112,38)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (180 samples, 0.09%)</title><rect x="26.1844%" y="693" width="0.0854%" height="15" fill="rgb(231,133,46)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (180 samples, 0.09%)</title><rect x="26.1844%" y="677" width="0.0854%" height="15" fill="rgb(217,16,9)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="687.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (180 samples, 0.09%)</title><rect x="26.1844%" y="661" width="0.0854%" height="15" fill="rgb(249,173,9)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.09%)</title><rect x="26.1844%" y="645" width="0.0854%" height="15" fill="rgb(205,163,53)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="655.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (180 samples, 0.09%)</title><rect x="26.1844%" y="629" width="0.0854%" height="15" fill="rgb(217,54,41)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (180 samples, 0.09%)</title><rect x="26.1844%" y="613" width="0.0854%" height="15" fill="rgb(228,216,12)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.09%)</title><rect x="26.1844%" y="597" width="0.0854%" height="15" fill="rgb(244,228,15)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="607.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (180 samples, 0.09%)</title><rect x="26.1844%" y="581" width="0.0854%" height="15" fill="rgb(221,176,53)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.09%)</title><rect x="26.1844%" y="565" width="0.0854%" height="15" fill="rgb(205,94,34)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="575.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (180 samples, 0.09%)</title><rect x="26.1844%" y="549" width="0.0854%" height="15" fill="rgb(213,110,48)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.09%)</title><rect x="26.1844%" y="533" width="0.0854%" height="15" fill="rgb(236,142,28)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="543.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (180 samples, 0.09%)</title><rect x="26.1844%" y="517" width="0.0854%" height="15" fill="rgb(225,135,29)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="527.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (180 samples, 0.09%)</title><rect x="26.1844%" y="501" width="0.0854%" height="15" fill="rgb(252,45,31)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="511.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (180 samples, 0.09%)</title><rect x="26.1844%" y="485" width="0.0854%" height="15" fill="rgb(211,187,50)" fg:x="55161" fg:w="180"/><text x="26.4344%" y="495.50"></text></g><g><title>__rdl_alloc (41 samples, 0.02%)</title><rect x="26.2736%" y="645" width="0.0195%" height="15" fill="rgb(229,109,7)" fg:x="55349" fg:w="41"/><text x="26.5236%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (41 samples, 0.02%)</title><rect x="26.2736%" y="629" width="0.0195%" height="15" fill="rgb(251,131,51)" fg:x="55349" fg:w="41"/><text x="26.5236%" y="639.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (41 samples, 0.02%)</title><rect x="26.2736%" y="613" width="0.0195%" height="15" fill="rgb(251,180,35)" fg:x="55349" fg:w="41"/><text x="26.5236%" y="623.50"></text></g><g><title>posix_memalign (41 samples, 0.02%)</title><rect x="26.2736%" y="597" width="0.0195%" height="15" fill="rgb(211,46,32)" fg:x="55349" fg:w="41"/><text x="26.5236%" y="607.50"></text></g><g><title>[libc.so.6] (37 samples, 0.02%)</title><rect x="26.2755%" y="581" width="0.0176%" height="15" fill="rgb(248,123,17)" fg:x="55353" fg:w="37"/><text x="26.5255%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (49 samples, 0.02%)</title><rect x="26.2736%" y="725" width="0.0233%" height="15" fill="rgb(227,141,18)" fg:x="55349" fg:w="49"/><text x="26.5236%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (49 samples, 0.02%)</title><rect x="26.2736%" y="709" width="0.0233%" height="15" fill="rgb(216,102,9)" fg:x="55349" fg:w="49"/><text x="26.5236%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.02%)</title><rect x="26.2736%" y="693" width="0.0233%" height="15" fill="rgb(253,47,13)" fg:x="55349" fg:w="49"/><text x="26.5236%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.02%)</title><rect x="26.2736%" y="677" width="0.0233%" height="15" fill="rgb(226,93,23)" fg:x="55349" fg:w="49"/><text x="26.5236%" y="687.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.02%)</title><rect x="26.2736%" y="661" width="0.0233%" height="15" fill="rgb(247,104,17)" fg:x="55349" fg:w="49"/><text x="26.5236%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (217 samples, 0.10%)</title><rect x="26.3063%" y="709" width="0.1030%" height="15" fill="rgb(233,203,26)" fg:x="55418" fg:w="217"/><text x="26.5563%" y="719.50"></text></g><g><title>core::ptr::write (114 samples, 0.05%)</title><rect x="26.3552%" y="693" width="0.0541%" height="15" fill="rgb(244,98,49)" fg:x="55521" fg:w="114"/><text x="26.6052%" y="703.50"></text></g><g><title>[unknown] (110 samples, 0.05%)</title><rect x="26.3571%" y="677" width="0.0522%" height="15" fill="rgb(235,134,22)" fg:x="55525" fg:w="110"/><text x="26.6071%" y="687.50"></text></g><g><title>[unknown] (109 samples, 0.05%)</title><rect x="26.3576%" y="661" width="0.0517%" height="15" fill="rgb(221,70,32)" fg:x="55526" fg:w="109"/><text x="26.6076%" y="671.50"></text></g><g><title>[unknown] (108 samples, 0.05%)</title><rect x="26.3581%" y="645" width="0.0513%" height="15" fill="rgb(238,15,50)" fg:x="55527" fg:w="108"/><text x="26.6081%" y="655.50"></text></g><g><title>[unknown] (107 samples, 0.05%)</title><rect x="26.3586%" y="629" width="0.0508%" height="15" fill="rgb(215,221,48)" fg:x="55528" fg:w="107"/><text x="26.6086%" y="639.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="26.3728%" y="613" width="0.0366%" height="15" fill="rgb(236,73,3)" fg:x="55558" fg:w="77"/><text x="26.6228%" y="623.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="26.3813%" y="597" width="0.0280%" height="15" fill="rgb(250,107,11)" fg:x="55576" fg:w="59"/><text x="26.6313%" y="607.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="26.3942%" y="581" width="0.0152%" height="15" fill="rgb(242,39,14)" fg:x="55603" fg:w="32"/><text x="26.6442%" y="591.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="26.3970%" y="565" width="0.0123%" height="15" fill="rgb(248,164,37)" fg:x="55609" fg:w="26"/><text x="26.6470%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (487 samples, 0.23%)</title><rect x="26.1844%" y="821" width="0.2312%" height="15" fill="rgb(217,60,12)" fg:x="55161" fg:w="487"/><text x="26.4344%" y="831.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (487 samples, 0.23%)</title><rect x="26.1844%" y="805" width="0.2312%" height="15" fill="rgb(240,125,29)" fg:x="55161" fg:w="487"/><text x="26.4344%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (487 samples, 0.23%)</title><rect x="26.1844%" y="789" width="0.2312%" height="15" fill="rgb(208,207,28)" fg:x="55161" fg:w="487"/><text x="26.4344%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (487 samples, 0.23%)</title><rect x="26.1844%" y="773" width="0.2312%" height="15" fill="rgb(209,159,27)" fg:x="55161" fg:w="487"/><text x="26.4344%" y="783.50"></text></g><g><title>async_executor::Runner::new (307 samples, 0.15%)</title><rect x="26.2698%" y="757" width="0.1457%" height="15" fill="rgb(251,176,53)" fg:x="55341" fg:w="307"/><text x="26.5198%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (299 samples, 0.14%)</title><rect x="26.2736%" y="741" width="0.1419%" height="15" fill="rgb(211,85,7)" fg:x="55349" fg:w="299"/><text x="26.5236%" y="751.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (250 samples, 0.12%)</title><rect x="26.2969%" y="725" width="0.1187%" height="15" fill="rgb(216,64,54)" fg:x="55398" fg:w="250"/><text x="26.5469%" y="735.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_right_border (40 samples, 0.02%)</title><rect x="26.4264%" y="757" width="0.0190%" height="15" fill="rgb(217,54,24)" fg:x="55671" fg:w="40"/><text x="26.6764%" y="767.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_top (40 samples, 0.02%)</title><rect x="26.4264%" y="741" width="0.0190%" height="15" fill="rgb(208,206,53)" fg:x="55671" fg:w="40"/><text x="26.6764%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::pop_internal_level (40 samples, 0.02%)</title><rect x="26.4264%" y="725" width="0.0190%" height="15" fill="rgb(251,74,39)" fg:x="55671" fg:w="40"/><text x="26.6764%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (40 samples, 0.02%)</title><rect x="26.4264%" y="709" width="0.0190%" height="15" fill="rgb(226,47,5)" fg:x="55671" fg:w="40"/><text x="26.6764%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (40 samples, 0.02%)</title><rect x="26.4264%" y="693" width="0.0190%" height="15" fill="rgb(234,111,33)" fg:x="55671" fg:w="40"/><text x="26.6764%" y="703.50"></text></g><g><title>cfree (40 samples, 0.02%)</title><rect x="26.4264%" y="677" width="0.0190%" height="15" fill="rgb(251,14,10)" fg:x="55671" fg:w="40"/><text x="26.6764%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (32 samples, 0.02%)</title><rect x="26.4454%" y="741" width="0.0152%" height="15" fill="rgb(232,43,0)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (32 samples, 0.02%)</title><rect x="26.4454%" y="725" width="0.0152%" height="15" fill="rgb(222,68,43)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="735.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (32 samples, 0.02%)</title><rect x="26.4454%" y="709" width="0.0152%" height="15" fill="rgb(217,24,23)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (32 samples, 0.02%)</title><rect x="26.4454%" y="693" width="0.0152%" height="15" fill="rgb(229,209,14)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (32 samples, 0.02%)</title><rect x="26.4454%" y="677" width="0.0152%" height="15" fill="rgb(250,149,48)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (32 samples, 0.02%)</title><rect x="26.4454%" y="661" width="0.0152%" height="15" fill="rgb(210,120,37)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.02%)</title><rect x="26.4454%" y="645" width="0.0152%" height="15" fill="rgb(210,21,8)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.02%)</title><rect x="26.4454%" y="629" width="0.0152%" height="15" fill="rgb(243,145,7)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="639.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.02%)</title><rect x="26.4454%" y="613" width="0.0152%" height="15" fill="rgb(238,178,32)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="623.50"></text></g><g><title>malloc (32 samples, 0.02%)</title><rect x="26.4454%" y="597" width="0.0152%" height="15" fill="rgb(222,4,10)" fg:x="55711" fg:w="32"/><text x="26.6954%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (98 samples, 0.05%)</title><rect x="26.4255%" y="789" width="0.0465%" height="15" fill="rgb(239,7,37)" fg:x="55669" fg:w="98"/><text x="26.6755%" y="799.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (98 samples, 0.05%)</title><rect x="26.4255%" y="773" width="0.0465%" height="15" fill="rgb(215,31,37)" fg:x="55669" fg:w="98"/><text x="26.6755%" y="783.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (56 samples, 0.03%)</title><rect x="26.4454%" y="757" width="0.0266%" height="15" fill="rgb(224,83,33)" fg:x="55711" fg:w="56"/><text x="26.6954%" y="767.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (24 samples, 0.01%)</title><rect x="26.4606%" y="741" width="0.0114%" height="15" fill="rgb(239,55,3)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="751.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (24 samples, 0.01%)</title><rect x="26.4606%" y="725" width="0.0114%" height="15" fill="rgb(247,92,11)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="735.50"></text></g><g><title>alloc::collections::btree::mem::replace (24 samples, 0.01%)</title><rect x="26.4606%" y="709" width="0.0114%" height="15" fill="rgb(239,200,7)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::{{closure}} (24 samples, 0.01%)</title><rect x="26.4606%" y="693" width="0.0114%" height="15" fill="rgb(227,115,8)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}} (24 samples, 0.01%)</title><rect x="26.4606%" y="677" width="0.0114%" height="15" fill="rgb(215,189,27)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (24 samples, 0.01%)</title><rect x="26.4606%" y="661" width="0.0114%" height="15" fill="rgb(251,216,39)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="671.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (24 samples, 0.01%)</title><rect x="26.4606%" y="645" width="0.0114%" height="15" fill="rgb(207,29,47)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (24 samples, 0.01%)</title><rect x="26.4606%" y="629" width="0.0114%" height="15" fill="rgb(210,71,34)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (24 samples, 0.01%)</title><rect x="26.4606%" y="613" width="0.0114%" height="15" fill="rgb(253,217,51)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (24 samples, 0.01%)</title><rect x="26.4606%" y="597" width="0.0114%" height="15" fill="rgb(222,117,46)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.01%)</title><rect x="26.4606%" y="581" width="0.0114%" height="15" fill="rgb(226,132,6)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.01%)</title><rect x="26.4606%" y="565" width="0.0114%" height="15" fill="rgb(254,145,51)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="575.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.01%)</title><rect x="26.4606%" y="549" width="0.0114%" height="15" fill="rgb(231,199,27)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="559.50"></text></g><g><title>malloc (24 samples, 0.01%)</title><rect x="26.4606%" y="533" width="0.0114%" height="15" fill="rgb(245,158,14)" fg:x="55743" fg:w="24"/><text x="26.7106%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (56 samples, 0.03%)</title><rect x="26.4976%" y="757" width="0.0266%" height="15" fill="rgb(240,113,14)" fg:x="55821" fg:w="56"/><text x="26.7476%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (24 samples, 0.01%)</title><rect x="26.5128%" y="741" width="0.0114%" height="15" fill="rgb(210,20,13)" fg:x="55853" fg:w="24"/><text x="26.7628%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (58 samples, 0.03%)</title><rect x="26.4976%" y="773" width="0.0275%" height="15" fill="rgb(241,144,13)" fg:x="55821" fg:w="58"/><text x="26.7476%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (55 samples, 0.03%)</title><rect x="26.5271%" y="773" width="0.0261%" height="15" fill="rgb(235,43,34)" fg:x="55883" fg:w="55"/><text x="26.7771%" y="783.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (486 samples, 0.23%)</title><rect x="26.4155%" y="805" width="0.2307%" height="15" fill="rgb(208,36,20)" fg:x="55648" fg:w="486"/><text x="26.6655%" y="815.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (353 samples, 0.17%)</title><rect x="26.4787%" y="789" width="0.1676%" height="15" fill="rgb(239,204,10)" fg:x="55781" fg:w="353"/><text x="26.7287%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (193 samples, 0.09%)</title><rect x="26.5546%" y="773" width="0.0916%" height="15" fill="rgb(217,84,43)" fg:x="55941" fg:w="193"/><text x="26.8046%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (193 samples, 0.09%)</title><rect x="26.5546%" y="757" width="0.0916%" height="15" fill="rgb(241,170,50)" fg:x="55941" fg:w="193"/><text x="26.8046%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (193 samples, 0.09%)</title><rect x="26.5546%" y="741" width="0.0916%" height="15" fill="rgb(226,205,29)" fg:x="55941" fg:w="193"/><text x="26.8046%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (191 samples, 0.09%)</title><rect x="26.5556%" y="725" width="0.0907%" height="15" fill="rgb(233,113,1)" fg:x="55943" fg:w="191"/><text x="26.8056%" y="735.50"></text></g><g><title>polling::Poller::wait (192 samples, 0.09%)</title><rect x="26.6462%" y="805" width="0.0911%" height="15" fill="rgb(253,98,13)" fg:x="56134" fg:w="192"/><text x="26.8962%" y="815.50"></text></g><g><title>polling::epoll::Poller::wait (192 samples, 0.09%)</title><rect x="26.6462%" y="789" width="0.0911%" height="15" fill="rgb(211,115,12)" fg:x="56134" fg:w="192"/><text x="26.8962%" y="799.50"></text></g><g><title>polling::epoll::Poller::modify (192 samples, 0.09%)</title><rect x="26.6462%" y="773" width="0.0911%" height="15" fill="rgb(208,12,16)" fg:x="56134" fg:w="192"/><text x="26.8962%" y="783.50"></text></g><g><title>polling::epoll::Poller::ctl (189 samples, 0.09%)</title><rect x="26.6476%" y="757" width="0.0897%" height="15" fill="rgb(237,193,54)" fg:x="56137" fg:w="189"/><text x="26.8976%" y="767.50"></text></g><g><title>epoll_ctl (178 samples, 0.08%)</title><rect x="26.6529%" y="741" width="0.0845%" height="15" fill="rgb(243,22,42)" fg:x="56148" fg:w="178"/><text x="26.9029%" y="751.50"></text></g><g><title>[unknown] (164 samples, 0.08%)</title><rect x="26.6595%" y="725" width="0.0778%" height="15" fill="rgb(233,151,36)" fg:x="56162" fg:w="164"/><text x="26.9095%" y="735.50"></text></g><g><title>[unknown] (158 samples, 0.08%)</title><rect x="26.6624%" y="709" width="0.0750%" height="15" fill="rgb(237,57,45)" fg:x="56168" fg:w="158"/><text x="26.9124%" y="719.50"></text></g><g><title>[unknown] (155 samples, 0.07%)</title><rect x="26.6638%" y="693" width="0.0736%" height="15" fill="rgb(221,88,17)" fg:x="56171" fg:w="155"/><text x="26.9138%" y="703.50"></text></g><g><title>[unknown] (148 samples, 0.07%)</title><rect x="26.6671%" y="677" width="0.0703%" height="15" fill="rgb(230,79,15)" fg:x="56178" fg:w="148"/><text x="26.9171%" y="687.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="26.7046%" y="661" width="0.0328%" height="15" fill="rgb(213,57,13)" fg:x="56257" fg:w="69"/><text x="26.9546%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,577 samples, 0.75%)</title><rect x="25.9907%" y="1237" width="0.7486%" height="15" fill="rgb(222,116,39)" fg:x="54753" fg:w="1577"/><text x="26.2407%" y="1247.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,577 samples, 0.75%)</title><rect x="25.9907%" y="1221" width="0.7486%" height="15" fill="rgb(245,107,2)" fg:x="54753" fg:w="1577"/><text x="26.2407%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1,577 samples, 0.75%)</title><rect x="25.9907%" y="1205" width="0.7486%" height="15" fill="rgb(238,1,10)" fg:x="54753" fg:w="1577"/><text x="26.2407%" y="1215.50"></text></g><g><title>std::panicking::try (1,577 samples, 0.75%)</title><rect x="25.9907%" y="1189" width="0.7486%" height="15" fill="rgb(249,4,48)" fg:x="54753" fg:w="1577"/><text x="26.2407%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (1,577 samples, 0.75%)</title><rect x="25.9907%" y="1173" width="0.7486%" height="15" fill="rgb(223,151,18)" fg:x="54753" fg:w="1577"/><text x="26.2407%" y="1183.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,577 samples, 0.75%)</title><rect x="25.9907%" y="1157" width="0.7486%" height="15" fill="rgb(227,65,43)" fg:x="54753" fg:w="1577"/><text x="26.2407%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,577 samples, 0.75%)</title><rect x="25.9907%" y="1141" width="0.7486%" height="15" fill="rgb(218,40,45)" fg:x="54753" fg:w="1577"/><text x="26.2407%" y="1151.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,577 samples, 0.75%)</title><rect x="25.9907%" y="1125" width="0.7486%" height="15" fill="rgb(252,121,31)" fg:x="54753" fg:w="1577"/><text x="26.2407%" y="1135.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (1,169 samples, 0.55%)</title><rect x="26.1844%" y="1109" width="0.5549%" height="15" fill="rgb(219,158,43)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="1119.50"></text></g><g><title>async_std::task::block_on::block_on (1,169 samples, 0.55%)</title><rect x="26.1844%" y="1093" width="0.5549%" height="15" fill="rgb(231,162,42)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="1103.50"></text></g><g><title>async_std::task::builder::Builder::blocking (1,169 samples, 0.55%)</title><rect x="26.1844%" y="1077" width="0.5549%" height="15" fill="rgb(217,179,25)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,169 samples, 0.55%)</title><rect x="26.1844%" y="1061" width="0.5549%" height="15" fill="rgb(206,212,31)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,169 samples, 0.55%)</title><rect x="26.1844%" y="1045" width="0.5549%" height="15" fill="rgb(235,144,12)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="1055.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (1,169 samples, 0.55%)</title><rect x="26.1844%" y="1029" width="0.5549%" height="15" fill="rgb(213,51,10)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="1039.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,169 samples, 0.55%)</title><rect x="26.1844%" y="1013" width="0.5549%" height="15" fill="rgb(231,145,14)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,169 samples, 0.55%)</title><rect x="26.1844%" y="997" width="0.5549%" height="15" fill="rgb(235,15,28)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,169 samples, 0.55%)</title><rect x="26.1844%" y="981" width="0.5549%" height="15" fill="rgb(237,206,10)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,169 samples, 0.55%)</title><rect x="26.1844%" y="965" width="0.5549%" height="15" fill="rgb(236,227,27)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="975.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (1,169 samples, 0.55%)</title><rect x="26.1844%" y="949" width="0.5549%" height="15" fill="rgb(246,83,35)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="959.50"></text></g><g><title>async_global_executor::executor::block_on (1,169 samples, 0.55%)</title><rect x="26.1844%" y="933" width="0.5549%" height="15" fill="rgb(220,136,24)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,169 samples, 0.55%)</title><rect x="26.1844%" y="917" width="0.5549%" height="15" fill="rgb(217,3,25)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,169 samples, 0.55%)</title><rect x="26.1844%" y="901" width="0.5549%" height="15" fill="rgb(239,24,14)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="911.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (1,169 samples, 0.55%)</title><rect x="26.1844%" y="885" width="0.5549%" height="15" fill="rgb(244,16,53)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="895.50"></text></g><g><title>async_global_executor::reactor::block_on (1,169 samples, 0.55%)</title><rect x="26.1844%" y="869" width="0.5549%" height="15" fill="rgb(208,175,44)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,169 samples, 0.55%)</title><rect x="26.1844%" y="853" width="0.5549%" height="15" fill="rgb(252,18,48)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="863.50"></text></g><g><title>async_io::driver::block_on (1,169 samples, 0.55%)</title><rect x="26.1844%" y="837" width="0.5549%" height="15" fill="rgb(234,199,32)" fg:x="55161" fg:w="1169"/><text x="26.4344%" y="847.50"></text></g><g><title>async_io::reactor::ReactorLock::react (682 samples, 0.32%)</title><rect x="26.4155%" y="821" width="0.3237%" height="15" fill="rgb(225,77,54)" fg:x="55648" fg:w="682"/><text x="26.6655%" y="831.50"></text></g><g><title>recv (31 samples, 0.01%)</title><rect x="26.7578%" y="1237" width="0.0147%" height="15" fill="rgb(225,42,25)" fg:x="56369" fg:w="31"/><text x="27.0078%" y="1247.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="26.7578%" y="1221" width="0.0147%" height="15" fill="rgb(242,227,46)" fg:x="56369" fg:w="31"/><text x="27.0078%" y="1231.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (231 samples, 0.11%)</title><rect x="26.7829%" y="437" width="0.1097%" height="15" fill="rgb(246,197,35)" fg:x="56422" fg:w="231"/><text x="27.0329%" y="447.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (231 samples, 0.11%)</title><rect x="26.7829%" y="421" width="0.1097%" height="15" fill="rgb(215,159,26)" fg:x="56422" fg:w="231"/><text x="27.0329%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (231 samples, 0.11%)</title><rect x="26.7829%" y="405" width="0.1097%" height="15" fill="rgb(212,194,50)" fg:x="56422" fg:w="231"/><text x="27.0329%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (231 samples, 0.11%)</title><rect x="26.7829%" y="389" width="0.1097%" height="15" fill="rgb(246,132,1)" fg:x="56422" fg:w="231"/><text x="27.0329%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (231 samples, 0.11%)</title><rect x="26.7829%" y="373" width="0.1097%" height="15" fill="rgb(217,71,7)" fg:x="56422" fg:w="231"/><text x="27.0329%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::deref::Deref&gt;::deref (201 samples, 0.10%)</title><rect x="26.7972%" y="357" width="0.0954%" height="15" fill="rgb(252,59,32)" fg:x="56452" fg:w="201"/><text x="27.0472%" y="367.50"></text></g><g><title>zenoh_buffers::zslice::ZSliceBuffer::as_slice (201 samples, 0.10%)</title><rect x="26.7972%" y="341" width="0.0954%" height="15" fill="rgb(253,204,25)" fg:x="56452" fg:w="201"/><text x="27.0472%" y="351.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (271 samples, 0.13%)</title><rect x="26.7787%" y="597" width="0.1286%" height="15" fill="rgb(232,21,16)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (271 samples, 0.13%)</title><rect x="26.7787%" y="581" width="0.1286%" height="15" fill="rgb(248,90,29)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="591.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (271 samples, 0.13%)</title><rect x="26.7787%" y="565" width="0.1286%" height="15" fill="rgb(249,223,7)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (271 samples, 0.13%)</title><rect x="26.7787%" y="549" width="0.1286%" height="15" fill="rgb(231,119,42)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="559.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (271 samples, 0.13%)</title><rect x="26.7787%" y="533" width="0.1286%" height="15" fill="rgb(215,41,35)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (271 samples, 0.13%)</title><rect x="26.7787%" y="517" width="0.1286%" height="15" fill="rgb(220,44,45)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (271 samples, 0.13%)</title><rect x="26.7787%" y="501" width="0.1286%" height="15" fill="rgb(253,197,36)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (271 samples, 0.13%)</title><rect x="26.7787%" y="485" width="0.1286%" height="15" fill="rgb(245,225,54)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (271 samples, 0.13%)</title><rect x="26.7787%" y="469" width="0.1286%" height="15" fill="rgb(239,94,37)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (271 samples, 0.13%)</title><rect x="26.7787%" y="453" width="0.1286%" height="15" fill="rgb(242,217,10)" fg:x="56413" fg:w="271"/><text x="27.0287%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (31 samples, 0.01%)</title><rect x="26.8926%" y="437" width="0.0147%" height="15" fill="rgb(250,193,7)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.01%)</title><rect x="26.8926%" y="421" width="0.0147%" height="15" fill="rgb(230,104,19)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.01%)</title><rect x="26.8926%" y="405" width="0.0147%" height="15" fill="rgb(230,181,4)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.01%)</title><rect x="26.8926%" y="389" width="0.0147%" height="15" fill="rgb(216,219,49)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.01%)</title><rect x="26.8926%" y="373" width="0.0147%" height="15" fill="rgb(254,144,0)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.01%)</title><rect x="26.8926%" y="357" width="0.0147%" height="15" fill="rgb(205,209,38)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="367.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.01%)</title><rect x="26.8926%" y="341" width="0.0147%" height="15" fill="rgb(240,21,42)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="351.50"></text></g><g><title>malloc (31 samples, 0.01%)</title><rect x="26.8926%" y="325" width="0.0147%" height="15" fill="rgb(241,132,3)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="335.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="26.8926%" y="309" width="0.0147%" height="15" fill="rgb(225,14,2)" fg:x="56653" fg:w="31"/><text x="27.1426%" y="319.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (32 samples, 0.02%)</title><rect x="26.9073%" y="517" width="0.0152%" height="15" fill="rgb(210,141,35)" fg:x="56684" fg:w="32"/><text x="27.1573%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (322 samples, 0.15%)</title><rect x="26.7787%" y="613" width="0.1529%" height="15" fill="rgb(251,14,44)" fg:x="56413" fg:w="322"/><text x="27.0287%" y="623.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (51 samples, 0.02%)</title><rect x="26.9073%" y="597" width="0.0242%" height="15" fill="rgb(247,48,18)" fg:x="56684" fg:w="51"/><text x="27.1573%" y="607.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="26.9073%" y="581" width="0.0242%" height="15" fill="rgb(225,0,40)" fg:x="56684" fg:w="51"/><text x="27.1573%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="26.9073%" y="565" width="0.0242%" height="15" fill="rgb(221,31,33)" fg:x="56684" fg:w="51"/><text x="27.1573%" y="575.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (51 samples, 0.02%)</title><rect x="26.9073%" y="549" width="0.0242%" height="15" fill="rgb(237,42,40)" fg:x="56684" fg:w="51"/><text x="27.1573%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="26.9073%" y="533" width="0.0242%" height="15" fill="rgb(233,51,29)" fg:x="56684" fg:w="51"/><text x="27.1573%" y="543.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (48 samples, 0.02%)</title><rect x="26.9329%" y="373" width="0.0228%" height="15" fill="rgb(226,58,20)" fg:x="56738" fg:w="48"/><text x="27.1829%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (48 samples, 0.02%)</title><rect x="26.9329%" y="357" width="0.0228%" height="15" fill="rgb(208,98,7)" fg:x="56738" fg:w="48"/><text x="27.1829%" y="367.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (48 samples, 0.02%)</title><rect x="26.9329%" y="341" width="0.0228%" height="15" fill="rgb(228,143,44)" fg:x="56738" fg:w="48"/><text x="27.1829%" y="351.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (31 samples, 0.01%)</title><rect x="26.9410%" y="325" width="0.0147%" height="15" fill="rgb(246,55,38)" fg:x="56755" fg:w="31"/><text x="27.1910%" y="335.50"></text></g><g><title>__libc_fcntl64 (31 samples, 0.01%)</title><rect x="26.9410%" y="309" width="0.0147%" height="15" fill="rgb(247,87,16)" fg:x="56755" fg:w="31"/><text x="27.1910%" y="319.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="26.9410%" y="293" width="0.0147%" height="15" fill="rgb(234,129,42)" fg:x="56755" fg:w="31"/><text x="27.1910%" y="303.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="26.9410%" y="277" width="0.0147%" height="15" fill="rgb(220,82,16)" fg:x="56755" fg:w="31"/><text x="27.1910%" y="287.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="26.9420%" y="261" width="0.0138%" height="15" fill="rgb(211,88,4)" fg:x="56757" fg:w="29"/><text x="27.1920%" y="271.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="26.9429%" y="245" width="0.0128%" height="15" fill="rgb(248,151,21)" fg:x="56759" fg:w="27"/><text x="27.1929%" y="255.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="26.9443%" y="229" width="0.0114%" height="15" fill="rgb(238,163,6)" fg:x="56762" fg:w="24"/><text x="27.1943%" y="239.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 0.03%)</title><rect x="26.9315%" y="389" width="0.0313%" height="15" fill="rgb(209,183,11)" fg:x="56735" fg:w="66"/><text x="27.1815%" y="399.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (83 samples, 0.04%)</title><rect x="26.9315%" y="437" width="0.0394%" height="15" fill="rgb(219,37,20)" fg:x="56735" fg:w="83"/><text x="27.1815%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (83 samples, 0.04%)</title><rect x="26.9315%" y="421" width="0.0394%" height="15" fill="rgb(210,158,4)" fg:x="56735" fg:w="83"/><text x="27.1815%" y="431.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (83 samples, 0.04%)</title><rect x="26.9315%" y="405" width="0.0394%" height="15" fill="rgb(221,167,53)" fg:x="56735" fg:w="83"/><text x="27.1815%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (409 samples, 0.19%)</title><rect x="26.7787%" y="1061" width="0.1941%" height="15" fill="rgb(237,151,45)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="1071.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (409 samples, 0.19%)</title><rect x="26.7787%" y="1045" width="0.1941%" height="15" fill="rgb(231,39,3)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (409 samples, 0.19%)</title><rect x="26.7787%" y="1029" width="0.1941%" height="15" fill="rgb(212,167,28)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="1039.50"></text></g><g><title>std::panicking::try (409 samples, 0.19%)</title><rect x="26.7787%" y="1013" width="0.1941%" height="15" fill="rgb(232,178,8)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (409 samples, 0.19%)</title><rect x="26.7787%" y="997" width="0.1941%" height="15" fill="rgb(225,151,20)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="1007.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (409 samples, 0.19%)</title><rect x="26.7787%" y="981" width="0.1941%" height="15" fill="rgb(238,3,37)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (409 samples, 0.19%)</title><rect x="26.7787%" y="965" width="0.1941%" height="15" fill="rgb(251,147,42)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (409 samples, 0.19%)</title><rect x="26.7787%" y="949" width="0.1941%" height="15" fill="rgb(208,173,10)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="959.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (409 samples, 0.19%)</title><rect x="26.7787%" y="933" width="0.1941%" height="15" fill="rgb(246,225,4)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="943.50"></text></g><g><title>async_global_executor::reactor::block_on (409 samples, 0.19%)</title><rect x="26.7787%" y="917" width="0.1941%" height="15" fill="rgb(248,102,6)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (409 samples, 0.19%)</title><rect x="26.7787%" y="901" width="0.1941%" height="15" fill="rgb(232,6,21)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="911.50"></text></g><g><title>async_io::driver::block_on (409 samples, 0.19%)</title><rect x="26.7787%" y="885" width="0.1941%" height="15" fill="rgb(221,179,22)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="895.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (409 samples, 0.19%)</title><rect x="26.7787%" y="869" width="0.1941%" height="15" fill="rgb(252,50,20)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.19%)</title><rect x="26.7787%" y="853" width="0.1941%" height="15" fill="rgb(222,56,38)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="863.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (409 samples, 0.19%)</title><rect x="26.7787%" y="837" width="0.1941%" height="15" fill="rgb(206,193,29)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="847.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (409 samples, 0.19%)</title><rect x="26.7787%" y="821" width="0.1941%" height="15" fill="rgb(239,192,45)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.19%)</title><rect x="26.7787%" y="805" width="0.1941%" height="15" fill="rgb(254,18,36)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (409 samples, 0.19%)</title><rect x="26.7787%" y="789" width="0.1941%" height="15" fill="rgb(221,127,11)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (409 samples, 0.19%)</title><rect x="26.7787%" y="773" width="0.1941%" height="15" fill="rgb(234,146,35)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (409 samples, 0.19%)</title><rect x="26.7787%" y="757" width="0.1941%" height="15" fill="rgb(254,201,37)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (409 samples, 0.19%)</title><rect x="26.7787%" y="741" width="0.1941%" height="15" fill="rgb(211,202,23)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (409 samples, 0.19%)</title><rect x="26.7787%" y="725" width="0.1941%" height="15" fill="rgb(237,91,2)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="735.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (409 samples, 0.19%)</title><rect x="26.7787%" y="709" width="0.1941%" height="15" fill="rgb(226,228,36)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (409 samples, 0.19%)</title><rect x="26.7787%" y="693" width="0.1941%" height="15" fill="rgb(213,63,50)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (409 samples, 0.19%)</title><rect x="26.7787%" y="677" width="0.1941%" height="15" fill="rgb(235,194,19)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (409 samples, 0.19%)</title><rect x="26.7787%" y="661" width="0.1941%" height="15" fill="rgb(207,204,18)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (409 samples, 0.19%)</title><rect x="26.7787%" y="645" width="0.1941%" height="15" fill="rgb(248,8,7)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="655.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (409 samples, 0.19%)</title><rect x="26.7787%" y="629" width="0.1941%" height="15" fill="rgb(223,145,47)" fg:x="56413" fg:w="409"/><text x="27.0287%" y="639.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (87 samples, 0.04%)</title><rect x="26.9315%" y="613" width="0.0413%" height="15" fill="rgb(228,84,11)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.04%)</title><rect x="26.9315%" y="597" width="0.0413%" height="15" fill="rgb(218,76,45)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="607.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (87 samples, 0.04%)</title><rect x="26.9315%" y="581" width="0.0413%" height="15" fill="rgb(223,80,15)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.04%)</title><rect x="26.9315%" y="565" width="0.0413%" height="15" fill="rgb(219,218,33)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="575.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (87 samples, 0.04%)</title><rect x="26.9315%" y="549" width="0.0413%" height="15" fill="rgb(208,51,11)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.04%)</title><rect x="26.9315%" y="533" width="0.0413%" height="15" fill="rgb(229,165,39)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="543.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (87 samples, 0.04%)</title><rect x="26.9315%" y="517" width="0.0413%" height="15" fill="rgb(241,100,24)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.04%)</title><rect x="26.9315%" y="501" width="0.0413%" height="15" fill="rgb(228,14,23)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="511.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (87 samples, 0.04%)</title><rect x="26.9315%" y="485" width="0.0413%" height="15" fill="rgb(247,116,52)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.04%)</title><rect x="26.9315%" y="469" width="0.0413%" height="15" fill="rgb(216,149,33)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="479.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (87 samples, 0.04%)</title><rect x="26.9315%" y="453" width="0.0413%" height="15" fill="rgb(238,142,29)" fg:x="56735" fg:w="87"/><text x="27.1815%" y="463.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="26.9728%" y="709" width="0.0133%" height="15" fill="rgb(224,83,40)" fg:x="56822" fg:w="28"/><text x="27.2228%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="26.9728%" y="693" width="0.0133%" height="15" fill="rgb(234,165,11)" fg:x="56822" fg:w="28"/><text x="27.2228%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (28 samples, 0.01%)</title><rect x="26.9728%" y="677" width="0.0133%" height="15" fill="rgb(215,96,23)" fg:x="56822" fg:w="28"/><text x="27.2228%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.01%)</title><rect x="26.9757%" y="661" width="0.0104%" height="15" fill="rgb(233,179,26)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.01%)</title><rect x="26.9757%" y="645" width="0.0104%" height="15" fill="rgb(225,129,33)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="629" width="0.0104%" height="15" fill="rgb(237,49,13)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="613" width="0.0104%" height="15" fill="rgb(211,3,31)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.01%)</title><rect x="26.9757%" y="597" width="0.0104%" height="15" fill="rgb(216,152,19)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="607.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="581" width="0.0104%" height="15" fill="rgb(251,121,35)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="591.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (22 samples, 0.01%)</title><rect x="26.9757%" y="565" width="0.0104%" height="15" fill="rgb(210,217,47)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.01%)</title><rect x="26.9757%" y="549" width="0.0104%" height="15" fill="rgb(244,116,22)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="559.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="533" width="0.0104%" height="15" fill="rgb(228,17,21)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.01%)</title><rect x="26.9757%" y="517" width="0.0104%" height="15" fill="rgb(240,149,34)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="501" width="0.0104%" height="15" fill="rgb(208,125,47)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22 samples, 0.01%)</title><rect x="26.9757%" y="485" width="0.0104%" height="15" fill="rgb(249,186,39)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="495.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="469" width="0.0104%" height="15" fill="rgb(240,220,33)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="479.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (22 samples, 0.01%)</title><rect x="26.9757%" y="453" width="0.0104%" height="15" fill="rgb(243,110,23)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="463.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="437" width="0.0104%" height="15" fill="rgb(219,163,46)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="447.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="421" width="0.0104%" height="15" fill="rgb(216,126,30)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="431.50"></text></g><g><title>fastrand::usize (22 samples, 0.01%)</title><rect x="26.9757%" y="405" width="0.0104%" height="15" fill="rgb(208,139,11)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.01%)</title><rect x="26.9757%" y="389" width="0.0104%" height="15" fill="rgb(213,118,36)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.01%)</title><rect x="26.9757%" y="373" width="0.0104%" height="15" fill="rgb(226,43,17)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="383.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (22 samples, 0.01%)</title><rect x="26.9757%" y="357" width="0.0104%" height="15" fill="rgb(254,217,4)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="367.50"></text></g><g><title>fastrand::RNG::__getit::{{closure}} (22 samples, 0.01%)</title><rect x="26.9757%" y="341" width="0.0104%" height="15" fill="rgb(210,134,47)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="351.50"></text></g><g><title>fastrand::RNG::__init (22 samples, 0.01%)</title><rect x="26.9757%" y="325" width="0.0104%" height="15" fill="rgb(237,24,49)" fg:x="56828" fg:w="22"/><text x="27.2257%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (40 samples, 0.02%)</title><rect x="26.9927%" y="677" width="0.0190%" height="15" fill="rgb(251,39,46)" fg:x="56864" fg:w="40"/><text x="27.2427%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.01%)</title><rect x="26.9984%" y="661" width="0.0133%" height="15" fill="rgb(251,220,3)" fg:x="56876" fg:w="28"/><text x="27.2484%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="26.9984%" y="645" width="0.0133%" height="15" fill="rgb(228,105,12)" fg:x="56876" fg:w="28"/><text x="27.2484%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="26.9984%" y="629" width="0.0133%" height="15" fill="rgb(215,196,1)" fg:x="56876" fg:w="28"/><text x="27.2484%" y="639.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="26.9984%" y="613" width="0.0133%" height="15" fill="rgb(214,33,39)" fg:x="56876" fg:w="28"/><text x="27.2484%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (42 samples, 0.02%)</title><rect x="26.9927%" y="693" width="0.0199%" height="15" fill="rgb(220,19,52)" fg:x="56864" fg:w="42"/><text x="27.2427%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.05%)</title><rect x="26.9728%" y="773" width="0.0479%" height="15" fill="rgb(221,78,38)" fg:x="56822" fg:w="101"/><text x="27.2228%" y="783.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (101 samples, 0.05%)</title><rect x="26.9728%" y="757" width="0.0479%" height="15" fill="rgb(253,30,16)" fg:x="56822" fg:w="101"/><text x="27.2228%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.05%)</title><rect x="26.9728%" y="741" width="0.0479%" height="15" fill="rgb(242,65,0)" fg:x="56822" fg:w="101"/><text x="27.2228%" y="751.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (101 samples, 0.05%)</title><rect x="26.9728%" y="725" width="0.0479%" height="15" fill="rgb(235,201,12)" fg:x="56822" fg:w="101"/><text x="27.2228%" y="735.50"></text></g><g><title>async_executor::Runner::new (73 samples, 0.03%)</title><rect x="26.9861%" y="709" width="0.0347%" height="15" fill="rgb(233,161,9)" fg:x="56850" fg:w="73"/><text x="27.2361%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (33 samples, 0.02%)</title><rect x="27.0454%" y="677" width="0.0157%" height="15" fill="rgb(241,207,41)" fg:x="56975" fg:w="33"/><text x="27.2954%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::set_parent_link (29 samples, 0.01%)</title><rect x="27.0473%" y="661" width="0.0138%" height="15" fill="rgb(212,69,46)" fg:x="56979" fg:w="29"/><text x="27.2973%" y="671.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (37 samples, 0.02%)</title><rect x="27.0454%" y="693" width="0.0176%" height="15" fill="rgb(239,69,45)" fg:x="56975" fg:w="37"/><text x="27.2954%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (99 samples, 0.05%)</title><rect x="27.0416%" y="709" width="0.0470%" height="15" fill="rgb(242,117,48)" fg:x="56967" fg:w="99"/><text x="27.2916%" y="719.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (54 samples, 0.03%)</title><rect x="27.0630%" y="693" width="0.0256%" height="15" fill="rgb(228,41,36)" fg:x="57012" fg:w="54"/><text x="27.3130%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.03%)</title><rect x="27.0630%" y="677" width="0.0256%" height="15" fill="rgb(212,3,32)" fg:x="57012" fg:w="54"/><text x="27.3130%" y="687.50"></text></g><g><title>[libc.so.6] (50 samples, 0.02%)</title><rect x="27.0649%" y="661" width="0.0237%" height="15" fill="rgb(233,41,49)" fg:x="57016" fg:w="50"/><text x="27.3149%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (158 samples, 0.08%)</title><rect x="27.0236%" y="741" width="0.0750%" height="15" fill="rgb(252,170,49)" fg:x="56929" fg:w="158"/><text x="27.2736%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (158 samples, 0.08%)</title><rect x="27.0236%" y="725" width="0.0750%" height="15" fill="rgb(229,53,26)" fg:x="56929" fg:w="158"/><text x="27.2736%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (686 samples, 0.33%)</title><rect x="26.7787%" y="1237" width="0.3256%" height="15" fill="rgb(217,157,12)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (686 samples, 0.33%)</title><rect x="26.7787%" y="1221" width="0.3256%" height="15" fill="rgb(227,17,9)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (686 samples, 0.33%)</title><rect x="26.7787%" y="1205" width="0.3256%" height="15" fill="rgb(218,84,12)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (686 samples, 0.33%)</title><rect x="26.7787%" y="1189" width="0.3256%" height="15" fill="rgb(212,79,24)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (686 samples, 0.33%)</title><rect x="26.7787%" y="1173" width="0.3256%" height="15" fill="rgb(217,222,37)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (686 samples, 0.33%)</title><rect x="26.7787%" y="1157" width="0.3256%" height="15" fill="rgb(246,208,8)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1167.50"></text></g><g><title>std::panicking::try (686 samples, 0.33%)</title><rect x="26.7787%" y="1141" width="0.3256%" height="15" fill="rgb(244,133,10)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (686 samples, 0.33%)</title><rect x="26.7787%" y="1125" width="0.3256%" height="15" fill="rgb(209,219,41)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (686 samples, 0.33%)</title><rect x="26.7787%" y="1109" width="0.3256%" height="15" fill="rgb(253,175,45)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (686 samples, 0.33%)</title><rect x="26.7787%" y="1093" width="0.3256%" height="15" fill="rgb(235,100,37)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (686 samples, 0.33%)</title><rect x="26.7787%" y="1077" width="0.3256%" height="15" fill="rgb(225,87,19)" fg:x="56413" fg:w="686"/><text x="27.0287%" y="1087.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (277 samples, 0.13%)</title><rect x="26.9728%" y="1061" width="0.1315%" height="15" fill="rgb(217,152,17)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="1071.50"></text></g><g><title>async_std::task::block_on::block_on (277 samples, 0.13%)</title><rect x="26.9728%" y="1045" width="0.1315%" height="15" fill="rgb(235,72,13)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="1055.50"></text></g><g><title>async_std::task::builder::Builder::blocking (277 samples, 0.13%)</title><rect x="26.9728%" y="1029" width="0.1315%" height="15" fill="rgb(233,140,18)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (277 samples, 0.13%)</title><rect x="26.9728%" y="1013" width="0.1315%" height="15" fill="rgb(207,212,28)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (277 samples, 0.13%)</title><rect x="26.9728%" y="997" width="0.1315%" height="15" fill="rgb(220,130,25)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (277 samples, 0.13%)</title><rect x="26.9728%" y="981" width="0.1315%" height="15" fill="rgb(205,55,34)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (277 samples, 0.13%)</title><rect x="26.9728%" y="965" width="0.1315%" height="15" fill="rgb(237,54,35)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (277 samples, 0.13%)</title><rect x="26.9728%" y="949" width="0.1315%" height="15" fill="rgb(208,67,23)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (277 samples, 0.13%)</title><rect x="26.9728%" y="933" width="0.1315%" height="15" fill="rgb(206,207,50)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (277 samples, 0.13%)</title><rect x="26.9728%" y="917" width="0.1315%" height="15" fill="rgb(213,211,42)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="927.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (277 samples, 0.13%)</title><rect x="26.9728%" y="901" width="0.1315%" height="15" fill="rgb(252,197,50)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="911.50"></text></g><g><title>async_global_executor::executor::block_on (277 samples, 0.13%)</title><rect x="26.9728%" y="885" width="0.1315%" height="15" fill="rgb(251,211,41)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (277 samples, 0.13%)</title><rect x="26.9728%" y="869" width="0.1315%" height="15" fill="rgb(229,211,5)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (277 samples, 0.13%)</title><rect x="26.9728%" y="853" width="0.1315%" height="15" fill="rgb(239,36,31)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="863.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (277 samples, 0.13%)</title><rect x="26.9728%" y="837" width="0.1315%" height="15" fill="rgb(248,67,31)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="847.50"></text></g><g><title>async_global_executor::reactor::block_on (277 samples, 0.13%)</title><rect x="26.9728%" y="821" width="0.1315%" height="15" fill="rgb(249,55,44)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (277 samples, 0.13%)</title><rect x="26.9728%" y="805" width="0.1315%" height="15" fill="rgb(216,82,12)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="815.50"></text></g><g><title>async_io::driver::block_on (277 samples, 0.13%)</title><rect x="26.9728%" y="789" width="0.1315%" height="15" fill="rgb(242,174,1)" fg:x="56822" fg:w="277"/><text x="27.2228%" y="799.50"></text></g><g><title>async_io::reactor::ReactorLock::react (176 samples, 0.08%)</title><rect x="27.0208%" y="773" width="0.0835%" height="15" fill="rgb(208,120,29)" fg:x="56923" fg:w="176"/><text x="27.2708%" y="783.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (176 samples, 0.08%)</title><rect x="27.0208%" y="757" width="0.0835%" height="15" fill="rgb(221,105,43)" fg:x="56923" fg:w="176"/><text x="27.2708%" y="767.50"></text></g><g><title>[libc.so.6] (74 samples, 0.04%)</title><rect x="27.1565%" y="533" width="0.0351%" height="15" fill="rgb(234,124,22)" fg:x="57209" fg:w="74"/><text x="27.4065%" y="543.50"></text></g><g><title>[libc.so.6] (68 samples, 0.03%)</title><rect x="27.1594%" y="517" width="0.0323%" height="15" fill="rgb(212,23,30)" fg:x="57215" fg:w="68"/><text x="27.4094%" y="527.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="27.1765%" y="501" width="0.0152%" height="15" fill="rgb(219,122,53)" fg:x="57251" fg:w="32"/><text x="27.4265%" y="511.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="27.1765%" y="485" width="0.0152%" height="15" fill="rgb(248,84,24)" fg:x="57251" fg:w="32"/><text x="27.4265%" y="495.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="27.1769%" y="469" width="0.0147%" height="15" fill="rgb(245,115,18)" fg:x="57252" fg:w="31"/><text x="27.4269%" y="479.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="27.1769%" y="453" width="0.0147%" height="15" fill="rgb(227,176,51)" fg:x="57252" fg:w="31"/><text x="27.4269%" y="463.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="27.1812%" y="437" width="0.0104%" height="15" fill="rgb(229,63,42)" fg:x="57261" fg:w="22"/><text x="27.4312%" y="447.50"></text></g><g><title>__rdl_alloc (117 samples, 0.06%)</title><rect x="27.1380%" y="613" width="0.0555%" height="15" fill="rgb(247,202,24)" fg:x="57170" fg:w="117"/><text x="27.3880%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (107 samples, 0.05%)</title><rect x="27.1427%" y="597" width="0.0508%" height="15" fill="rgb(244,173,20)" fg:x="57180" fg:w="107"/><text x="27.3927%" y="607.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (107 samples, 0.05%)</title><rect x="27.1427%" y="581" width="0.0508%" height="15" fill="rgb(242,81,47)" fg:x="57180" fg:w="107"/><text x="27.3927%" y="591.50"></text></g><g><title>posix_memalign (107 samples, 0.05%)</title><rect x="27.1427%" y="565" width="0.0508%" height="15" fill="rgb(231,185,54)" fg:x="57180" fg:w="107"/><text x="27.3927%" y="575.50"></text></g><g><title>[libc.so.6] (103 samples, 0.05%)</title><rect x="27.1446%" y="549" width="0.0489%" height="15" fill="rgb(243,55,32)" fg:x="57184" fg:w="103"/><text x="27.3946%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (149 samples, 0.07%)</title><rect x="27.1285%" y="693" width="0.0707%" height="15" fill="rgb(208,167,19)" fg:x="57150" fg:w="149"/><text x="27.3785%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (133 samples, 0.06%)</title><rect x="27.1361%" y="677" width="0.0631%" height="15" fill="rgb(231,72,35)" fg:x="57166" fg:w="133"/><text x="27.3861%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (133 samples, 0.06%)</title><rect x="27.1361%" y="661" width="0.0631%" height="15" fill="rgb(250,173,51)" fg:x="57166" fg:w="133"/><text x="27.3861%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (133 samples, 0.06%)</title><rect x="27.1361%" y="645" width="0.0631%" height="15" fill="rgb(209,5,22)" fg:x="57166" fg:w="133"/><text x="27.3861%" y="655.50"></text></g><g><title>alloc::alloc::alloc (132 samples, 0.06%)</title><rect x="27.1366%" y="629" width="0.0627%" height="15" fill="rgb(250,174,19)" fg:x="57167" fg:w="132"/><text x="27.3866%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (165 samples, 0.08%)</title><rect x="27.2064%" y="677" width="0.0783%" height="15" fill="rgb(217,3,49)" fg:x="57314" fg:w="165"/><text x="27.4564%" y="687.50"></text></g><g><title>core::ptr::write (128 samples, 0.06%)</title><rect x="27.2239%" y="661" width="0.0608%" height="15" fill="rgb(218,225,5)" fg:x="57351" fg:w="128"/><text x="27.4739%" y="671.50"></text></g><g><title>[unknown] (127 samples, 0.06%)</title><rect x="27.2244%" y="645" width="0.0603%" height="15" fill="rgb(236,89,11)" fg:x="57352" fg:w="127"/><text x="27.4744%" y="655.50"></text></g><g><title>[unknown] (127 samples, 0.06%)</title><rect x="27.2244%" y="629" width="0.0603%" height="15" fill="rgb(206,33,28)" fg:x="57352" fg:w="127"/><text x="27.4744%" y="639.50"></text></g><g><title>[unknown] (127 samples, 0.06%)</title><rect x="27.2244%" y="613" width="0.0603%" height="15" fill="rgb(241,56,42)" fg:x="57352" fg:w="127"/><text x="27.4744%" y="623.50"></text></g><g><title>[unknown] (127 samples, 0.06%)</title><rect x="27.2244%" y="597" width="0.0603%" height="15" fill="rgb(222,44,11)" fg:x="57352" fg:w="127"/><text x="27.4744%" y="607.50"></text></g><g><title>[unknown] (101 samples, 0.05%)</title><rect x="27.2367%" y="581" width="0.0479%" height="15" fill="rgb(234,111,20)" fg:x="57378" fg:w="101"/><text x="27.4867%" y="591.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="27.2496%" y="565" width="0.0351%" height="15" fill="rgb(237,77,6)" fg:x="57405" fg:w="74"/><text x="27.4996%" y="575.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="27.2662%" y="549" width="0.0185%" height="15" fill="rgb(235,111,23)" fg:x="57440" fg:w="39"/><text x="27.5162%" y="559.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="27.2704%" y="533" width="0.0142%" height="15" fill="rgb(251,135,29)" fg:x="57449" fg:w="30"/><text x="27.5204%" y="543.50"></text></g><g><title>[libc.so.6] (109 samples, 0.05%)</title><rect x="27.2890%" y="549" width="0.0517%" height="15" fill="rgb(217,57,1)" fg:x="57488" fg:w="109"/><text x="27.5390%" y="559.50"></text></g><g><title>[unknown] (97 samples, 0.05%)</title><rect x="27.2946%" y="533" width="0.0460%" height="15" fill="rgb(249,119,31)" fg:x="57500" fg:w="97"/><text x="27.5446%" y="543.50"></text></g><g><title>[unknown] (91 samples, 0.04%)</title><rect x="27.2975%" y="517" width="0.0432%" height="15" fill="rgb(233,164,33)" fg:x="57506" fg:w="91"/><text x="27.5475%" y="527.50"></text></g><g><title>[unknown] (88 samples, 0.04%)</title><rect x="27.2989%" y="501" width="0.0418%" height="15" fill="rgb(250,217,43)" fg:x="57509" fg:w="88"/><text x="27.5489%" y="511.50"></text></g><g><title>[unknown] (88 samples, 0.04%)</title><rect x="27.2989%" y="485" width="0.0418%" height="15" fill="rgb(232,154,50)" fg:x="57509" fg:w="88"/><text x="27.5489%" y="495.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="27.3122%" y="469" width="0.0285%" height="15" fill="rgb(227,190,8)" fg:x="57537" fg:w="60"/><text x="27.5622%" y="479.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="27.3184%" y="453" width="0.0223%" height="15" fill="rgb(209,217,32)" fg:x="57550" fg:w="47"/><text x="27.5684%" y="463.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="27.3298%" y="437" width="0.0109%" height="15" fill="rgb(243,203,50)" fg:x="57574" fg:w="23"/><text x="27.5798%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (124 samples, 0.06%)</title><rect x="27.2847%" y="677" width="0.0589%" height="15" fill="rgb(232,152,27)" fg:x="57479" fg:w="124"/><text x="27.5347%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (124 samples, 0.06%)</title><rect x="27.2847%" y="661" width="0.0589%" height="15" fill="rgb(240,34,29)" fg:x="57479" fg:w="124"/><text x="27.5347%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (124 samples, 0.06%)</title><rect x="27.2847%" y="645" width="0.0589%" height="15" fill="rgb(215,185,52)" fg:x="57479" fg:w="124"/><text x="27.5347%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (124 samples, 0.06%)</title><rect x="27.2847%" y="629" width="0.0589%" height="15" fill="rgb(240,89,49)" fg:x="57479" fg:w="124"/><text x="27.5347%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (124 samples, 0.06%)</title><rect x="27.2847%" y="613" width="0.0589%" height="15" fill="rgb(225,12,52)" fg:x="57479" fg:w="124"/><text x="27.5347%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (124 samples, 0.06%)</title><rect x="27.2847%" y="597" width="0.0589%" height="15" fill="rgb(239,128,45)" fg:x="57479" fg:w="124"/><text x="27.5347%" y="607.50"></text></g><g><title>alloc::alloc::alloc (124 samples, 0.06%)</title><rect x="27.2847%" y="581" width="0.0589%" height="15" fill="rgb(211,78,47)" fg:x="57479" fg:w="124"/><text x="27.5347%" y="591.50"></text></g><g><title>malloc (121 samples, 0.06%)</title><rect x="27.2861%" y="565" width="0.0574%" height="15" fill="rgb(232,31,21)" fg:x="57482" fg:w="121"/><text x="27.5361%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (458 samples, 0.22%)</title><rect x="27.1285%" y="709" width="0.2174%" height="15" fill="rgb(222,168,14)" fg:x="57150" fg:w="458"/><text x="27.3785%" y="719.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (309 samples, 0.15%)</title><rect x="27.1992%" y="693" width="0.1467%" height="15" fill="rgb(209,128,24)" fg:x="57299" fg:w="309"/><text x="27.4492%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (513 samples, 0.24%)</title><rect x="27.1147%" y="869" width="0.2435%" height="15" fill="rgb(249,35,13)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="879.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (513 samples, 0.24%)</title><rect x="27.1147%" y="853" width="0.2435%" height="15" fill="rgb(218,7,2)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (513 samples, 0.24%)</title><rect x="27.1147%" y="837" width="0.2435%" height="15" fill="rgb(238,107,27)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (513 samples, 0.24%)</title><rect x="27.1147%" y="821" width="0.2435%" height="15" fill="rgb(217,88,38)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (513 samples, 0.24%)</title><rect x="27.1147%" y="805" width="0.2435%" height="15" fill="rgb(230,207,0)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="815.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (513 samples, 0.24%)</title><rect x="27.1147%" y="789" width="0.2435%" height="15" fill="rgb(249,64,54)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="799.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (513 samples, 0.24%)</title><rect x="27.1147%" y="773" width="0.2435%" height="15" fill="rgb(231,7,11)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (513 samples, 0.24%)</title><rect x="27.1147%" y="757" width="0.2435%" height="15" fill="rgb(205,149,21)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (513 samples, 0.24%)</title><rect x="27.1147%" y="741" width="0.2435%" height="15" fill="rgb(215,126,34)" fg:x="57121" fg:w="513"/><text x="27.3647%" y="751.50"></text></g><g><title>async_executor::Runner::new (512 samples, 0.24%)</title><rect x="27.1152%" y="725" width="0.2430%" height="15" fill="rgb(241,132,45)" fg:x="57122" fg:w="512"/><text x="27.3652%" y="735.50"></text></g><g><title>async_executor::Executor::state (46 samples, 0.02%)</title><rect x="27.3583%" y="869" width="0.0218%" height="15" fill="rgb(252,69,32)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (46 samples, 0.02%)</title><rect x="27.3583%" y="853" width="0.0218%" height="15" fill="rgb(232,204,19)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (46 samples, 0.02%)</title><rect x="27.3583%" y="837" width="0.0218%" height="15" fill="rgb(249,15,47)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="847.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (46 samples, 0.02%)</title><rect x="27.3583%" y="821" width="0.0218%" height="15" fill="rgb(209,227,23)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="831.50"></text></g><g><title>once_cell::imp::initialize_or_wait (46 samples, 0.02%)</title><rect x="27.3583%" y="805" width="0.0218%" height="15" fill="rgb(248,92,24)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (46 samples, 0.02%)</title><rect x="27.3583%" y="789" width="0.0218%" height="15" fill="rgb(247,59,2)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="799.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (46 samples, 0.02%)</title><rect x="27.3583%" y="773" width="0.0218%" height="15" fill="rgb(221,30,5)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (46 samples, 0.02%)</title><rect x="27.3583%" y="757" width="0.0218%" height="15" fill="rgb(208,108,53)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="767.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (46 samples, 0.02%)</title><rect x="27.3583%" y="741" width="0.0218%" height="15" fill="rgb(211,183,26)" fg:x="57634" fg:w="46"/><text x="27.6083%" y="751.50"></text></g><g><title>async_executor::State::new (44 samples, 0.02%)</title><rect x="27.3592%" y="725" width="0.0209%" height="15" fill="rgb(232,132,4)" fg:x="57636" fg:w="44"/><text x="27.6092%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (83 samples, 0.04%)</title><rect x="27.3829%" y="837" width="0.0394%" height="15" fill="rgb(253,128,37)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.04%)</title><rect x="27.3829%" y="821" width="0.0394%" height="15" fill="rgb(221,58,24)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.04%)</title><rect x="27.3829%" y="805" width="0.0394%" height="15" fill="rgb(230,54,45)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.04%)</title><rect x="27.3829%" y="789" width="0.0394%" height="15" fill="rgb(254,21,18)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="799.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.04%)</title><rect x="27.3829%" y="773" width="0.0394%" height="15" fill="rgb(221,108,0)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="783.50"></text></g><g><title>__rdl_alloc (83 samples, 0.04%)</title><rect x="27.3829%" y="757" width="0.0394%" height="15" fill="rgb(206,95,1)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (83 samples, 0.04%)</title><rect x="27.3829%" y="741" width="0.0394%" height="15" fill="rgb(237,52,5)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="751.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (83 samples, 0.04%)</title><rect x="27.3829%" y="725" width="0.0394%" height="15" fill="rgb(218,150,34)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="735.50"></text></g><g><title>posix_memalign (83 samples, 0.04%)</title><rect x="27.3829%" y="709" width="0.0394%" height="15" fill="rgb(235,194,28)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="719.50"></text></g><g><title>[libc.so.6] (83 samples, 0.04%)</title><rect x="27.3829%" y="693" width="0.0394%" height="15" fill="rgb(245,92,18)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="703.50"></text></g><g><title>[libc.so.6] (83 samples, 0.04%)</title><rect x="27.3829%" y="677" width="0.0394%" height="15" fill="rgb(253,203,53)" fg:x="57686" fg:w="83"/><text x="27.6329%" y="687.50"></text></g><g><title>[libc.so.6] (78 samples, 0.04%)</title><rect x="27.3853%" y="661" width="0.0370%" height="15" fill="rgb(249,185,47)" fg:x="57691" fg:w="78"/><text x="27.6353%" y="671.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="27.4081%" y="645" width="0.0142%" height="15" fill="rgb(252,194,52)" fg:x="57739" fg:w="30"/><text x="27.6581%" y="655.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="27.4086%" y="629" width="0.0138%" height="15" fill="rgb(210,53,36)" fg:x="57740" fg:w="29"/><text x="27.6586%" y="639.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="27.4090%" y="613" width="0.0133%" height="15" fill="rgb(237,37,25)" fg:x="57741" fg:w="28"/><text x="27.6590%" y="623.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="27.4090%" y="597" width="0.0133%" height="15" fill="rgb(242,116,27)" fg:x="57741" fg:w="28"/><text x="27.6590%" y="607.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="27.4442%" y="677" width="0.0138%" height="15" fill="rgb(213,185,26)" fg:x="57815" fg:w="29"/><text x="27.6942%" y="687.50"></text></g><g><title>[libc.so.6] (172 samples, 0.08%)</title><rect x="27.4266%" y="693" width="0.0816%" height="15" fill="rgb(225,204,8)" fg:x="57778" fg:w="172"/><text x="27.6766%" y="703.50"></text></g><g><title>[unknown] (106 samples, 0.05%)</title><rect x="27.4579%" y="677" width="0.0503%" height="15" fill="rgb(254,111,37)" fg:x="57844" fg:w="106"/><text x="27.7079%" y="687.50"></text></g><g><title>[unknown] (87 samples, 0.04%)</title><rect x="27.4670%" y="661" width="0.0413%" height="15" fill="rgb(242,35,9)" fg:x="57863" fg:w="87"/><text x="27.7170%" y="671.50"></text></g><g><title>[unknown] (82 samples, 0.04%)</title><rect x="27.4693%" y="645" width="0.0389%" height="15" fill="rgb(232,138,49)" fg:x="57868" fg:w="82"/><text x="27.7193%" y="655.50"></text></g><g><title>[unknown] (80 samples, 0.04%)</title><rect x="27.4703%" y="629" width="0.0380%" height="15" fill="rgb(247,56,4)" fg:x="57870" fg:w="80"/><text x="27.7203%" y="639.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="27.4869%" y="613" width="0.0214%" height="15" fill="rgb(226,179,17)" fg:x="57905" fg:w="45"/><text x="27.7369%" y="623.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="27.4959%" y="597" width="0.0123%" height="15" fill="rgb(216,163,45)" fg:x="57924" fg:w="26"/><text x="27.7459%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (838 samples, 0.40%)</title><rect x="27.1147%" y="933" width="0.3978%" height="15" fill="rgb(211,157,3)" fg:x="57121" fg:w="838"/><text x="27.3647%" y="943.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (838 samples, 0.40%)</title><rect x="27.1147%" y="917" width="0.3978%" height="15" fill="rgb(234,44,20)" fg:x="57121" fg:w="838"/><text x="27.3647%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (838 samples, 0.40%)</title><rect x="27.1147%" y="901" width="0.3978%" height="15" fill="rgb(254,138,23)" fg:x="57121" fg:w="838"/><text x="27.3647%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (838 samples, 0.40%)</title><rect x="27.1147%" y="885" width="0.3978%" height="15" fill="rgb(206,119,39)" fg:x="57121" fg:w="838"/><text x="27.3647%" y="895.50"></text></g><g><title>async_executor::Runner::new (279 samples, 0.13%)</title><rect x="27.3801%" y="869" width="0.1324%" height="15" fill="rgb(231,105,52)" fg:x="57680" fg:w="279"/><text x="27.6301%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (273 samples, 0.13%)</title><rect x="27.3829%" y="853" width="0.1296%" height="15" fill="rgb(250,20,5)" fg:x="57686" fg:w="273"/><text x="27.6329%" y="863.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (190 samples, 0.09%)</title><rect x="27.4223%" y="837" width="0.0902%" height="15" fill="rgb(215,198,30)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (190 samples, 0.09%)</title><rect x="27.4223%" y="821" width="0.0902%" height="15" fill="rgb(246,142,8)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (190 samples, 0.09%)</title><rect x="27.4223%" y="805" width="0.0902%" height="15" fill="rgb(243,26,38)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (190 samples, 0.09%)</title><rect x="27.4223%" y="789" width="0.0902%" height="15" fill="rgb(205,133,28)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (190 samples, 0.09%)</title><rect x="27.4223%" y="773" width="0.0902%" height="15" fill="rgb(212,34,0)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (190 samples, 0.09%)</title><rect x="27.4223%" y="757" width="0.0902%" height="15" fill="rgb(251,226,22)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (190 samples, 0.09%)</title><rect x="27.4223%" y="741" width="0.0902%" height="15" fill="rgb(252,119,9)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="751.50"></text></g><g><title>alloc::alloc::alloc (190 samples, 0.09%)</title><rect x="27.4223%" y="725" width="0.0902%" height="15" fill="rgb(213,150,50)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="735.50"></text></g><g><title>malloc (190 samples, 0.09%)</title><rect x="27.4223%" y="709" width="0.0902%" height="15" fill="rgb(212,24,39)" fg:x="57769" fg:w="190"/><text x="27.6723%" y="719.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::do_merge (22 samples, 0.01%)</title><rect x="27.5154%" y="805" width="0.0104%" height="15" fill="rgb(213,46,39)" fg:x="57965" fg:w="22"/><text x="27.7654%" y="815.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_left_border (30 samples, 0.01%)</title><rect x="27.5144%" y="869" width="0.0142%" height="15" fill="rgb(239,106,12)" fg:x="57963" fg:w="30"/><text x="27.7644%" y="879.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::fix_left_border_of_left_edge (30 samples, 0.01%)</title><rect x="27.5144%" y="853" width="0.0142%" height="15" fill="rgb(249,229,21)" fg:x="57963" fg:w="30"/><text x="27.7644%" y="863.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::fix_left_child (30 samples, 0.01%)</title><rect x="27.5144%" y="837" width="0.0142%" height="15" fill="rgb(212,158,3)" fg:x="57963" fg:w="30"/><text x="27.7644%" y="847.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (28 samples, 0.01%)</title><rect x="27.5154%" y="821" width="0.0133%" height="15" fill="rgb(253,26,48)" fg:x="57965" fg:w="28"/><text x="27.7654%" y="831.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_right_border (27 samples, 0.01%)</title><rect x="27.5287%" y="869" width="0.0128%" height="15" fill="rgb(238,178,20)" fg:x="57993" fg:w="27"/><text x="27.7787%" y="879.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_top (23 samples, 0.01%)</title><rect x="27.5306%" y="853" width="0.0109%" height="15" fill="rgb(208,86,15)" fg:x="57997" fg:w="23"/><text x="27.7806%" y="863.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::pop_internal_level (23 samples, 0.01%)</title><rect x="27.5306%" y="837" width="0.0109%" height="15" fill="rgb(239,42,53)" fg:x="57997" fg:w="23"/><text x="27.7806%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.01%)</title><rect x="27.5306%" y="821" width="0.0109%" height="15" fill="rgb(245,226,8)" fg:x="57997" fg:w="23"/><text x="27.7806%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.01%)</title><rect x="27.5306%" y="805" width="0.0109%" height="15" fill="rgb(216,176,32)" fg:x="57997" fg:w="23"/><text x="27.7806%" y="815.50"></text></g><g><title>cfree (23 samples, 0.01%)</title><rect x="27.5306%" y="789" width="0.0109%" height="15" fill="rgb(231,186,21)" fg:x="57997" fg:w="23"/><text x="27.7806%" y="799.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="27.5306%" y="773" width="0.0109%" height="15" fill="rgb(205,95,49)" fg:x="57997" fg:w="23"/><text x="27.7806%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (68 samples, 0.03%)</title><rect x="27.5144%" y="901" width="0.0323%" height="15" fill="rgb(217,145,8)" fg:x="57963" fg:w="68"/><text x="27.7644%" y="911.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (68 samples, 0.03%)</title><rect x="27.5144%" y="885" width="0.0323%" height="15" fill="rgb(239,144,48)" fg:x="57963" fg:w="68"/><text x="27.7644%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43 samples, 0.02%)</title><rect x="27.5467%" y="901" width="0.0204%" height="15" fill="rgb(214,189,23)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (43 samples, 0.02%)</title><rect x="27.5467%" y="885" width="0.0204%" height="15" fill="rgb(229,157,17)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (43 samples, 0.02%)</title><rect x="27.5467%" y="869" width="0.0204%" height="15" fill="rgb(230,5,48)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (43 samples, 0.02%)</title><rect x="27.5467%" y="853" width="0.0204%" height="15" fill="rgb(224,156,48)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (43 samples, 0.02%)</title><rect x="27.5467%" y="837" width="0.0204%" height="15" fill="rgb(223,14,29)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (43 samples, 0.02%)</title><rect x="27.5467%" y="821" width="0.0204%" height="15" fill="rgb(229,96,36)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="831.50"></text></g><g><title>alloc::alloc::realloc (43 samples, 0.02%)</title><rect x="27.5467%" y="805" width="0.0204%" height="15" fill="rgb(231,102,53)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="815.50"></text></g><g><title>realloc (43 samples, 0.02%)</title><rect x="27.5467%" y="789" width="0.0204%" height="15" fill="rgb(210,77,38)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="799.50"></text></g><g><title>[libc.so.6] (43 samples, 0.02%)</title><rect x="27.5467%" y="773" width="0.0204%" height="15" fill="rgb(235,131,6)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="783.50"></text></g><g><title>[libc.so.6] (43 samples, 0.02%)</title><rect x="27.5467%" y="757" width="0.0204%" height="15" fill="rgb(252,55,38)" fg:x="58031" fg:w="43"/><text x="27.7967%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (386 samples, 0.18%)</title><rect x="27.5795%" y="869" width="0.1832%" height="15" fill="rgb(246,38,14)" fg:x="58100" fg:w="386"/><text x="27.8295%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (365 samples, 0.17%)</title><rect x="27.5894%" y="853" width="0.1733%" height="15" fill="rgb(242,27,5)" fg:x="58121" fg:w="365"/><text x="27.8394%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (334 samples, 0.16%)</title><rect x="27.6041%" y="837" width="0.1585%" height="15" fill="rgb(228,65,35)" fg:x="58152" fg:w="334"/><text x="27.8541%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (334 samples, 0.16%)</title><rect x="27.6041%" y="821" width="0.1585%" height="15" fill="rgb(245,93,11)" fg:x="58152" fg:w="334"/><text x="27.8541%" y="831.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (175 samples, 0.08%)</title><rect x="27.6796%" y="805" width="0.0831%" height="15" fill="rgb(213,1,31)" fg:x="58311" fg:w="175"/><text x="27.9296%" y="815.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (131 samples, 0.06%)</title><rect x="27.7005%" y="789" width="0.0622%" height="15" fill="rgb(237,205,14)" fg:x="58355" fg:w="131"/><text x="27.9505%" y="799.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (131 samples, 0.06%)</title><rect x="27.7005%" y="773" width="0.0622%" height="15" fill="rgb(232,118,45)" fg:x="58355" fg:w="131"/><text x="27.9505%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (131 samples, 0.06%)</title><rect x="27.7005%" y="757" width="0.0622%" height="15" fill="rgb(218,5,6)" fg:x="58355" fg:w="131"/><text x="27.9505%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (66 samples, 0.03%)</title><rect x="27.7314%" y="741" width="0.0313%" height="15" fill="rgb(251,87,51)" fg:x="58420" fg:w="66"/><text x="27.9814%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (427 samples, 0.20%)</title><rect x="27.5671%" y="885" width="0.2027%" height="15" fill="rgb(207,225,20)" fg:x="58074" fg:w="427"/><text x="27.8171%" y="895.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (105 samples, 0.05%)</title><rect x="27.7698%" y="853" width="0.0498%" height="15" fill="rgb(222,78,54)" fg:x="58501" fg:w="105"/><text x="28.0198%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (103 samples, 0.05%)</title><rect x="27.7708%" y="837" width="0.0489%" height="15" fill="rgb(232,85,16)" fg:x="58503" fg:w="103"/><text x="28.0208%" y="847.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (24 samples, 0.01%)</title><rect x="27.8083%" y="821" width="0.0114%" height="15" fill="rgb(244,25,33)" fg:x="58582" fg:w="24"/><text x="28.0583%" y="831.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (98 samples, 0.05%)</title><rect x="27.9203%" y="789" width="0.0465%" height="15" fill="rgb(233,24,36)" fg:x="58818" fg:w="98"/><text x="28.1703%" y="799.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (98 samples, 0.05%)</title><rect x="27.9203%" y="773" width="0.0465%" height="15" fill="rgb(253,49,54)" fg:x="58818" fg:w="98"/><text x="28.1703%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (98 samples, 0.05%)</title><rect x="27.9203%" y="757" width="0.0465%" height="15" fill="rgb(245,12,22)" fg:x="58818" fg:w="98"/><text x="28.1703%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (45 samples, 0.02%)</title><rect x="27.9454%" y="741" width="0.0214%" height="15" fill="rgb(253,141,28)" fg:x="58871" fg:w="45"/><text x="28.1954%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (426 samples, 0.20%)</title><rect x="27.7698%" y="885" width="0.2022%" height="15" fill="rgb(225,207,27)" fg:x="58501" fg:w="426"/><text x="28.0198%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (426 samples, 0.20%)</title><rect x="27.7698%" y="869" width="0.2022%" height="15" fill="rgb(220,84,2)" fg:x="58501" fg:w="426"/><text x="28.0198%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (321 samples, 0.15%)</title><rect x="27.8197%" y="853" width="0.1524%" height="15" fill="rgb(224,37,37)" fg:x="58606" fg:w="321"/><text x="28.0697%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (295 samples, 0.14%)</title><rect x="27.8320%" y="837" width="0.1400%" height="15" fill="rgb(220,143,18)" fg:x="58632" fg:w="295"/><text x="28.0820%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (295 samples, 0.14%)</title><rect x="27.8320%" y="821" width="0.1400%" height="15" fill="rgb(210,88,33)" fg:x="58632" fg:w="295"/><text x="28.0820%" y="831.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (134 samples, 0.06%)</title><rect x="27.9084%" y="805" width="0.0636%" height="15" fill="rgb(219,87,51)" fg:x="58793" fg:w="134"/><text x="28.1584%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (246 samples, 0.12%)</title><rect x="28.0822%" y="853" width="0.1168%" height="15" fill="rgb(211,7,35)" fg:x="59159" fg:w="246"/><text x="28.3322%" y="863.50"></text></g><g><title>core::ptr::read (246 samples, 0.12%)</title><rect x="28.0822%" y="837" width="0.1168%" height="15" fill="rgb(232,77,2)" fg:x="59159" fg:w="246"/><text x="28.3322%" y="847.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (490 samples, 0.23%)</title><rect x="27.9720%" y="885" width="0.2326%" height="15" fill="rgb(249,94,25)" fg:x="58927" fg:w="490"/><text x="28.2220%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (490 samples, 0.23%)</title><rect x="27.9720%" y="869" width="0.2326%" height="15" fill="rgb(215,112,2)" fg:x="58927" fg:w="490"/><text x="28.2220%" y="879.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (1,459 samples, 0.69%)</title><rect x="27.5125%" y="917" width="0.6926%" height="15" fill="rgb(226,115,48)" fg:x="57959" fg:w="1459"/><text x="27.7625%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (1,344 samples, 0.64%)</title><rect x="27.5671%" y="901" width="0.6380%" height="15" fill="rgb(249,196,10)" fg:x="58074" fg:w="1344"/><text x="27.8171%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,319 samples, 1.10%)</title><rect x="27.1048%" y="1237" width="1.1008%" height="15" fill="rgb(237,109,14)" fg:x="57100" fg:w="2319"/><text x="27.3548%" y="1247.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1221" width="1.0908%" height="15" fill="rgb(217,103,53)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1231.50"></text></g><g><title>async_std::task::block_on::block_on (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1205" width="1.0908%" height="15" fill="rgb(244,137,9)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1189" width="1.0908%" height="15" fill="rgb(227,201,3)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1173" width="1.0908%" height="15" fill="rgb(243,94,6)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1157" width="1.0908%" height="15" fill="rgb(235,118,5)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1167.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1141" width="1.0908%" height="15" fill="rgb(247,10,30)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1125" width="1.0908%" height="15" fill="rgb(205,26,28)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1109" width="1.0908%" height="15" fill="rgb(206,99,35)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1093" width="1.0908%" height="15" fill="rgb(238,130,40)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1077" width="1.0908%" height="15" fill="rgb(224,126,31)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1061" width="1.0908%" height="15" fill="rgb(254,105,17)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1045" width="1.0908%" height="15" fill="rgb(216,87,36)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1029" width="1.0908%" height="15" fill="rgb(240,21,12)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,298 samples, 1.09%)</title><rect x="27.1147%" y="1013" width="1.0908%" height="15" fill="rgb(245,192,34)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1023.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (2,298 samples, 1.09%)</title><rect x="27.1147%" y="997" width="1.0908%" height="15" fill="rgb(226,100,49)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="1007.50"></text></g><g><title>async_global_executor::reactor::block_on (2,298 samples, 1.09%)</title><rect x="27.1147%" y="981" width="1.0908%" height="15" fill="rgb(245,188,27)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="991.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,298 samples, 1.09%)</title><rect x="27.1147%" y="965" width="1.0908%" height="15" fill="rgb(212,170,8)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="975.50"></text></g><g><title>async_io::driver::block_on (2,298 samples, 1.09%)</title><rect x="27.1147%" y="949" width="1.0908%" height="15" fill="rgb(217,113,29)" fg:x="57121" fg:w="2298"/><text x="27.3647%" y="959.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,460 samples, 0.69%)</title><rect x="27.5125%" y="933" width="0.6930%" height="15" fill="rgb(237,30,3)" fg:x="57959" fg:w="1460"/><text x="27.7625%" y="943.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="28.2056%" y="757" width="0.0114%" height="15" fill="rgb(227,19,28)" fg:x="59419" fg:w="24"/><text x="28.4556%" y="767.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (24 samples, 0.01%)</title><rect x="28.2056%" y="741" width="0.0114%" height="15" fill="rgb(239,172,45)" fg:x="59419" fg:w="24"/><text x="28.4556%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (24 samples, 0.01%)</title><rect x="28.2056%" y="725" width="0.0114%" height="15" fill="rgb(254,55,39)" fg:x="59419" fg:w="24"/><text x="28.4556%" y="735.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (24 samples, 0.01%)</title><rect x="28.2056%" y="709" width="0.0114%" height="15" fill="rgb(249,208,12)" fg:x="59419" fg:w="24"/><text x="28.4556%" y="719.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (23 samples, 0.01%)</title><rect x="28.2170%" y="645" width="0.0109%" height="15" fill="rgb(240,52,13)" fg:x="59443" fg:w="23"/><text x="28.4670%" y="655.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (23 samples, 0.01%)</title><rect x="28.2170%" y="629" width="0.0109%" height="15" fill="rgb(252,149,13)" fg:x="59443" fg:w="23"/><text x="28.4670%" y="639.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="28.2170%" y="661" width="0.0123%" height="15" fill="rgb(232,81,48)" fg:x="59443" fg:w="26"/><text x="28.4670%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.01%)</title><rect x="28.2170%" y="693" width="0.0128%" height="15" fill="rgb(222,144,2)" fg:x="59443" fg:w="27"/><text x="28.4670%" y="703.50"></text></g><g><title>async_std::io::timeout::timeout::{{closure}} (27 samples, 0.01%)</title><rect x="28.2170%" y="677" width="0.0128%" height="15" fill="rgb(216,81,32)" fg:x="59443" fg:w="27"/><text x="28.4670%" y="687.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (29 samples, 0.01%)</title><rect x="28.2170%" y="709" width="0.0138%" height="15" fill="rgb(244,78,51)" fg:x="59443" fg:w="29"/><text x="28.4670%" y="719.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (230 samples, 0.11%)</title><rect x="28.8061%" y="581" width="0.1092%" height="15" fill="rgb(217,66,21)" fg:x="60684" fg:w="230"/><text x="29.0561%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (224 samples, 0.11%)</title><rect x="28.8089%" y="565" width="0.1063%" height="15" fill="rgb(247,101,42)" fg:x="60690" fg:w="224"/><text x="29.0589%" y="575.50"></text></g><g><title>async_io::reactor::Reactor::get (151 samples, 0.07%)</title><rect x="28.9200%" y="581" width="0.0717%" height="15" fill="rgb(227,81,39)" fg:x="60924" fg:w="151"/><text x="29.1700%" y="591.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (151 samples, 0.07%)</title><rect x="28.9200%" y="565" width="0.0717%" height="15" fill="rgb(220,223,44)" fg:x="60924" fg:w="151"/><text x="29.1700%" y="575.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (151 samples, 0.07%)</title><rect x="28.9200%" y="549" width="0.0717%" height="15" fill="rgb(205,218,2)" fg:x="60924" fg:w="151"/><text x="29.1700%" y="559.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (151 samples, 0.07%)</title><rect x="28.9200%" y="533" width="0.0717%" height="15" fill="rgb(212,207,28)" fg:x="60924" fg:w="151"/><text x="29.1700%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (151 samples, 0.07%)</title><rect x="28.9200%" y="517" width="0.0717%" height="15" fill="rgb(224,12,41)" fg:x="60924" fg:w="151"/><text x="29.1700%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (151 samples, 0.07%)</title><rect x="28.9200%" y="501" width="0.0717%" height="15" fill="rgb(216,118,12)" fg:x="60924" fg:w="151"/><text x="29.1700%" y="511.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (151 samples, 0.07%)</title><rect x="28.9200%" y="485" width="0.0717%" height="15" fill="rgb(252,97,46)" fg:x="60924" fg:w="151"/><text x="29.1700%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (54 samples, 0.03%)</title><rect x="28.9997%" y="565" width="0.0256%" height="15" fill="rgb(244,206,19)" fg:x="61092" fg:w="54"/><text x="29.2497%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (49 samples, 0.02%)</title><rect x="29.0021%" y="549" width="0.0233%" height="15" fill="rgb(231,84,31)" fg:x="61097" fg:w="49"/><text x="29.2521%" y="559.50"></text></g><g><title>[libc.so.6] (27 samples, 0.01%)</title><rect x="29.4692%" y="501" width="0.0128%" height="15" fill="rgb(244,133,0)" fg:x="62081" fg:w="27"/><text x="29.7192%" y="511.50"></text></g><g><title>async_io::reactor::Reactor::notify (1,252 samples, 0.59%)</title><rect x="29.0258%" y="565" width="0.5943%" height="15" fill="rgb(223,15,50)" fg:x="61147" fg:w="1252"/><text x="29.2758%" y="575.50"></text></g><g><title>polling::Poller::notify (1,247 samples, 0.59%)</title><rect x="29.0282%" y="549" width="0.5919%" height="15" fill="rgb(250,118,49)" fg:x="61152" fg:w="1247"/><text x="29.2782%" y="559.50"></text></g><g><title>polling::epoll::Poller::notify (339 samples, 0.16%)</title><rect x="29.4592%" y="533" width="0.1609%" height="15" fill="rgb(248,25,38)" fg:x="62060" fg:w="339"/><text x="29.7092%" y="543.50"></text></g><g><title>write (330 samples, 0.16%)</title><rect x="29.4635%" y="517" width="0.1566%" height="15" fill="rgb(215,70,14)" fg:x="62069" fg:w="330"/><text x="29.7135%" y="527.50"></text></g><g><title>[unknown] (291 samples, 0.14%)</title><rect x="29.4820%" y="501" width="0.1381%" height="15" fill="rgb(215,28,15)" fg:x="62108" fg:w="291"/><text x="29.7320%" y="511.50"></text></g><g><title>[unknown] (287 samples, 0.14%)</title><rect x="29.4839%" y="485" width="0.1362%" height="15" fill="rgb(243,6,28)" fg:x="62112" fg:w="287"/><text x="29.7339%" y="495.50"></text></g><g><title>[unknown] (284 samples, 0.13%)</title><rect x="29.4853%" y="469" width="0.1348%" height="15" fill="rgb(222,130,1)" fg:x="62115" fg:w="284"/><text x="29.7353%" y="479.50"></text></g><g><title>[unknown] (269 samples, 0.13%)</title><rect x="29.4925%" y="453" width="0.1277%" height="15" fill="rgb(236,166,44)" fg:x="62130" fg:w="269"/><text x="29.7425%" y="463.50"></text></g><g><title>[unknown] (240 samples, 0.11%)</title><rect x="29.5062%" y="437" width="0.1139%" height="15" fill="rgb(221,108,14)" fg:x="62159" fg:w="240"/><text x="29.7562%" y="447.50"></text></g><g><title>[unknown] (166 samples, 0.08%)</title><rect x="29.5414%" y="421" width="0.0788%" height="15" fill="rgb(252,3,45)" fg:x="62233" fg:w="166"/><text x="29.7914%" y="431.50"></text></g><g><title>[unknown] (99 samples, 0.05%)</title><rect x="29.5732%" y="405" width="0.0470%" height="15" fill="rgb(237,68,30)" fg:x="62300" fg:w="99"/><text x="29.8232%" y="415.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="29.5988%" y="389" width="0.0214%" height="15" fill="rgb(211,79,22)" fg:x="62354" fg:w="45"/><text x="29.8488%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (55 samples, 0.03%)</title><rect x="29.6221%" y="533" width="0.0261%" height="15" fill="rgb(252,185,21)" fg:x="62403" fg:w="55"/><text x="29.8721%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (50 samples, 0.02%)</title><rect x="29.6244%" y="517" width="0.0237%" height="15" fill="rgb(225,189,26)" fg:x="62408" fg:w="50"/><text x="29.8744%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (47 samples, 0.02%)</title><rect x="29.6258%" y="501" width="0.0223%" height="15" fill="rgb(241,30,40)" fg:x="62411" fg:w="47"/><text x="29.8758%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (47 samples, 0.02%)</title><rect x="29.6258%" y="485" width="0.0223%" height="15" fill="rgb(235,215,44)" fg:x="62411" fg:w="47"/><text x="29.8758%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (24 samples, 0.01%)</title><rect x="29.6368%" y="469" width="0.0114%" height="15" fill="rgb(205,8,29)" fg:x="62434" fg:w="24"/><text x="29.8868%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (71 samples, 0.03%)</title><rect x="29.6216%" y="549" width="0.0337%" height="15" fill="rgb(241,137,42)" fg:x="62402" fg:w="71"/><text x="29.8716%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (26 samples, 0.01%)</title><rect x="29.6553%" y="549" width="0.0123%" height="15" fill="rgb(237,155,2)" fg:x="62473" fg:w="26"/><text x="29.9053%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (26 samples, 0.01%)</title><rect x="29.6553%" y="533" width="0.0123%" height="15" fill="rgb(245,29,42)" fg:x="62473" fg:w="26"/><text x="29.9053%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (29 samples, 0.01%)</title><rect x="29.6676%" y="549" width="0.0138%" height="15" fill="rgb(234,101,35)" fg:x="62499" fg:w="29"/><text x="29.9176%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (27 samples, 0.01%)</title><rect x="29.6686%" y="533" width="0.0128%" height="15" fill="rgb(228,64,37)" fg:x="62501" fg:w="27"/><text x="29.9186%" y="543.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (137 samples, 0.07%)</title><rect x="29.6202%" y="565" width="0.0650%" height="15" fill="rgb(217,214,36)" fg:x="62399" fg:w="137"/><text x="29.8702%" y="575.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="31.5426%" y="533" width="0.0157%" height="15" fill="rgb(243,70,3)" fg:x="66449" fg:w="33"/><text x="31.7926%" y="543.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="31.5445%" y="517" width="0.0138%" height="15" fill="rgb(253,158,52)" fg:x="66453" fg:w="29"/><text x="31.7945%" y="527.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="31.5445%" y="501" width="0.0138%" height="15" fill="rgb(234,111,54)" fg:x="66453" fg:w="29"/><text x="31.7945%" y="511.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="31.5464%" y="485" width="0.0119%" height="15" fill="rgb(217,70,32)" fg:x="66457" fg:w="25"/><text x="31.7964%" y="495.50"></text></g><g><title>__sched_yield (319 samples, 0.15%)</title><rect x="31.5583%" y="533" width="0.1514%" height="15" fill="rgb(234,18,33)" fg:x="66482" fg:w="319"/><text x="31.8083%" y="543.50"></text></g><g><title>[unknown] (310 samples, 0.15%)</title><rect x="31.5626%" y="517" width="0.1472%" height="15" fill="rgb(234,12,49)" fg:x="66491" fg:w="310"/><text x="31.8126%" y="527.50"></text></g><g><title>[unknown] (307 samples, 0.15%)</title><rect x="31.5640%" y="501" width="0.1457%" height="15" fill="rgb(236,10,21)" fg:x="66494" fg:w="307"/><text x="31.8140%" y="511.50"></text></g><g><title>[unknown] (304 samples, 0.14%)</title><rect x="31.5654%" y="485" width="0.1443%" height="15" fill="rgb(248,182,45)" fg:x="66497" fg:w="304"/><text x="31.8154%" y="495.50"></text></g><g><title>[unknown] (295 samples, 0.14%)</title><rect x="31.5697%" y="469" width="0.1400%" height="15" fill="rgb(217,95,36)" fg:x="66506" fg:w="295"/><text x="31.8197%" y="479.50"></text></g><g><title>[unknown] (276 samples, 0.13%)</title><rect x="31.5787%" y="453" width="0.1310%" height="15" fill="rgb(212,110,31)" fg:x="66525" fg:w="276"/><text x="31.8287%" y="463.50"></text></g><g><title>[unknown] (232 samples, 0.11%)</title><rect x="31.5996%" y="437" width="0.1101%" height="15" fill="rgb(206,32,53)" fg:x="66569" fg:w="232"/><text x="31.8496%" y="447.50"></text></g><g><title>[unknown] (149 samples, 0.07%)</title><rect x="31.6390%" y="421" width="0.0707%" height="15" fill="rgb(246,141,37)" fg:x="66652" fg:w="149"/><text x="31.8890%" y="431.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="31.6727%" y="405" width="0.0370%" height="15" fill="rgb(219,16,7)" fg:x="66723" fg:w="78"/><text x="31.9227%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (38 samples, 0.02%)</title><rect x="31.7102%" y="533" width="0.0180%" height="15" fill="rgb(230,205,45)" fg:x="66802" fg:w="38"/><text x="31.9602%" y="543.50"></text></g><g><title>core::ptr::write (38 samples, 0.02%)</title><rect x="31.7102%" y="517" width="0.0180%" height="15" fill="rgb(231,43,49)" fg:x="66802" fg:w="38"/><text x="31.9602%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (4,313 samples, 2.05%)</title><rect x="29.6852%" y="565" width="2.0473%" height="15" fill="rgb(212,106,34)" fg:x="62536" fg:w="4313"/><text x="29.9352%" y="575.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (4,108 samples, 1.95%)</title><rect x="29.7825%" y="549" width="1.9500%" height="15" fill="rgb(206,83,17)" fg:x="62741" fg:w="4108"/><text x="30.0325%" y="559.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (732 samples, 0.35%)</title><rect x="31.7425%" y="565" width="0.3475%" height="15" fill="rgb(244,154,49)" fg:x="66870" fg:w="732"/><text x="31.9925%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (732 samples, 0.35%)</title><rect x="31.7425%" y="549" width="0.3475%" height="15" fill="rgb(244,149,49)" fg:x="66870" fg:w="732"/><text x="31.9925%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (6,541 samples, 3.10%)</title><rect x="28.9917%" y="581" width="3.1049%" height="15" fill="rgb(227,134,18)" fg:x="61075" fg:w="6541"/><text x="29.2417%" y="591.50">asy..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (74 samples, 0.04%)</title><rect x="32.1208%" y="533" width="0.0351%" height="15" fill="rgb(237,116,36)" fg:x="67667" fg:w="74"/><text x="32.3708%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (73 samples, 0.03%)</title><rect x="32.1213%" y="517" width="0.0347%" height="15" fill="rgb(205,129,40)" fg:x="67668" fg:w="73"/><text x="32.3713%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (66 samples, 0.03%)</title><rect x="32.1246%" y="501" width="0.0313%" height="15" fill="rgb(236,178,4)" fg:x="67675" fg:w="66"/><text x="32.3746%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (66 samples, 0.03%)</title><rect x="32.1246%" y="485" width="0.0313%" height="15" fill="rgb(251,76,53)" fg:x="67675" fg:w="66"/><text x="32.3746%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (33 samples, 0.02%)</title><rect x="32.1403%" y="469" width="0.0157%" height="15" fill="rgb(242,92,40)" fg:x="67708" fg:w="33"/><text x="32.3903%" y="479.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (28 samples, 0.01%)</title><rect x="32.1427%" y="453" width="0.0133%" height="15" fill="rgb(209,45,30)" fg:x="67713" fg:w="28"/><text x="32.3927%" y="463.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (28 samples, 0.01%)</title><rect x="32.1427%" y="437" width="0.0133%" height="15" fill="rgb(218,157,36)" fg:x="67713" fg:w="28"/><text x="32.3927%" y="447.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (28 samples, 0.01%)</title><rect x="32.1427%" y="421" width="0.0133%" height="15" fill="rgb(222,186,16)" fg:x="67713" fg:w="28"/><text x="32.3927%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (85 samples, 0.04%)</title><rect x="32.1180%" y="549" width="0.0403%" height="15" fill="rgb(254,72,35)" fg:x="67661" fg:w="85"/><text x="32.3680%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (36 samples, 0.02%)</title><rect x="32.1626%" y="517" width="0.0171%" height="15" fill="rgb(224,25,35)" fg:x="67755" fg:w="36"/><text x="32.4126%" y="527.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (29 samples, 0.01%)</title><rect x="32.1659%" y="501" width="0.0138%" height="15" fill="rgb(206,135,52)" fg:x="67762" fg:w="29"/><text x="32.4159%" y="511.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (29 samples, 0.01%)</title><rect x="32.1659%" y="485" width="0.0138%" height="15" fill="rgb(229,174,47)" fg:x="67762" fg:w="29"/><text x="32.4159%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (48 samples, 0.02%)</title><rect x="32.1583%" y="549" width="0.0228%" height="15" fill="rgb(242,184,21)" fg:x="67746" fg:w="48"/><text x="32.4083%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (48 samples, 0.02%)</title><rect x="32.1583%" y="533" width="0.0228%" height="15" fill="rgb(213,22,45)" fg:x="67746" fg:w="48"/><text x="32.4083%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (62 samples, 0.03%)</title><rect x="32.1816%" y="549" width="0.0294%" height="15" fill="rgb(237,81,54)" fg:x="67795" fg:w="62"/><text x="32.4316%" y="559.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (59 samples, 0.03%)</title><rect x="32.1830%" y="533" width="0.0280%" height="15" fill="rgb(248,177,18)" fg:x="67798" fg:w="59"/><text x="32.4330%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (26 samples, 0.01%)</title><rect x="32.1987%" y="517" width="0.0123%" height="15" fill="rgb(254,31,16)" fg:x="67831" fg:w="26"/><text x="32.4487%" y="527.50"></text></g><g><title>core::ptr::read (26 samples, 0.01%)</title><rect x="32.1987%" y="501" width="0.0123%" height="15" fill="rgb(235,20,31)" fg:x="67831" fg:w="26"/><text x="32.4487%" y="511.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (211 samples, 0.10%)</title><rect x="32.1161%" y="565" width="0.1002%" height="15" fill="rgb(240,56,43)" fg:x="67657" fg:w="211"/><text x="32.3661%" y="575.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="34.6186%" y="533" width="0.0252%" height="15" fill="rgb(237,197,51)" fg:x="72929" fg:w="53"/><text x="34.8686%" y="543.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="34.6205%" y="517" width="0.0233%" height="15" fill="rgb(241,162,44)" fg:x="72933" fg:w="49"/><text x="34.8705%" y="527.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="34.6210%" y="501" width="0.0228%" height="15" fill="rgb(224,23,20)" fg:x="72934" fg:w="48"/><text x="34.8710%" y="511.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="34.6215%" y="485" width="0.0223%" height="15" fill="rgb(250,109,34)" fg:x="72935" fg:w="47"/><text x="34.8715%" y="495.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="34.6286%" y="469" width="0.0152%" height="15" fill="rgb(214,175,50)" fg:x="72950" fg:w="32"/><text x="34.8786%" y="479.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="34.6319%" y="453" width="0.0119%" height="15" fill="rgb(213,182,5)" fg:x="72957" fg:w="25"/><text x="34.8819%" y="463.50"></text></g><g><title>__sched_yield (532 samples, 0.25%)</title><rect x="34.6438%" y="533" width="0.2525%" height="15" fill="rgb(209,199,19)" fg:x="72982" fg:w="532"/><text x="34.8938%" y="543.50"></text></g><g><title>[unknown] (519 samples, 0.25%)</title><rect x="34.6500%" y="517" width="0.2464%" height="15" fill="rgb(236,224,42)" fg:x="72995" fg:w="519"/><text x="34.9000%" y="527.50"></text></g><g><title>[unknown] (515 samples, 0.24%)</title><rect x="34.6519%" y="501" width="0.2445%" height="15" fill="rgb(246,226,29)" fg:x="72999" fg:w="515"/><text x="34.9019%" y="511.50"></text></g><g><title>[unknown] (509 samples, 0.24%)</title><rect x="34.6547%" y="485" width="0.2416%" height="15" fill="rgb(227,223,11)" fg:x="73005" fg:w="509"/><text x="34.9047%" y="495.50"></text></g><g><title>[unknown] (504 samples, 0.24%)</title><rect x="34.6571%" y="469" width="0.2392%" height="15" fill="rgb(219,7,51)" fg:x="73010" fg:w="504"/><text x="34.9071%" y="479.50"></text></g><g><title>[unknown] (465 samples, 0.22%)</title><rect x="34.6756%" y="453" width="0.2207%" height="15" fill="rgb(245,167,10)" fg:x="73049" fg:w="465"/><text x="34.9256%" y="463.50"></text></g><g><title>[unknown] (386 samples, 0.18%)</title><rect x="34.7131%" y="437" width="0.1832%" height="15" fill="rgb(237,224,16)" fg:x="73128" fg:w="386"/><text x="34.9631%" y="447.50"></text></g><g><title>[unknown] (263 samples, 0.12%)</title><rect x="34.7715%" y="421" width="0.1248%" height="15" fill="rgb(226,132,13)" fg:x="73251" fg:w="263"/><text x="35.0215%" y="431.50"></text></g><g><title>[unknown] (125 samples, 0.06%)</title><rect x="34.8370%" y="405" width="0.0593%" height="15" fill="rgb(214,140,3)" fg:x="73389" fg:w="125"/><text x="35.0870%" y="415.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="34.8849%" y="389" width="0.0114%" height="15" fill="rgb(221,177,4)" fg:x="73490" fg:w="24"/><text x="35.1349%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (63 samples, 0.03%)</title><rect x="34.8987%" y="533" width="0.0299%" height="15" fill="rgb(238,139,3)" fg:x="73519" fg:w="63"/><text x="35.1487%" y="543.50"></text></g><g><title>core::ptr::write (63 samples, 0.03%)</title><rect x="34.8987%" y="517" width="0.0299%" height="15" fill="rgb(216,17,39)" fg:x="73519" fg:w="63"/><text x="35.1487%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (5,729 samples, 2.72%)</title><rect x="32.2162%" y="565" width="2.7195%" height="15" fill="rgb(238,120,9)" fg:x="67868" fg:w="5729"/><text x="32.4662%" y="575.50">co..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (5,418 samples, 2.57%)</title><rect x="32.3639%" y="549" width="2.5719%" height="15" fill="rgb(244,92,53)" fg:x="68179" fg:w="5418"/><text x="32.6139%" y="559.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::collections::btree::map::BTreeMap&lt;(std::time::Instant,usize),core::task::wake::Waker&gt;&gt;&gt; (32 samples, 0.02%)</title><rect x="34.9376%" y="565" width="0.0152%" height="15" fill="rgb(224,148,33)" fg:x="73601" fg:w="32"/><text x="35.1876%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.02%)</title><rect x="34.9376%" y="549" width="0.0152%" height="15" fill="rgb(243,6,36)" fg:x="73601" fg:w="32"/><text x="35.1876%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (32 samples, 0.02%)</title><rect x="34.9376%" y="533" width="0.0152%" height="15" fill="rgb(230,102,11)" fg:x="73601" fg:w="32"/><text x="35.1876%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (32 samples, 0.02%)</title><rect x="34.9376%" y="517" width="0.0152%" height="15" fill="rgb(234,148,36)" fg:x="73601" fg:w="32"/><text x="35.1876%" y="527.50"></text></g><g><title>syscall (30 samples, 0.01%)</title><rect x="34.9386%" y="501" width="0.0142%" height="15" fill="rgb(251,153,25)" fg:x="73603" fg:w="30"/><text x="35.1886%" y="511.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="34.9386%" y="485" width="0.0142%" height="15" fill="rgb(215,129,8)" fg:x="73603" fg:w="30"/><text x="35.1886%" y="495.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="34.9390%" y="469" width="0.0138%" height="15" fill="rgb(224,128,35)" fg:x="73604" fg:w="29"/><text x="35.1890%" y="479.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="34.9395%" y="453" width="0.0133%" height="15" fill="rgb(237,56,52)" fg:x="73605" fg:w="28"/><text x="35.1895%" y="463.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="34.9400%" y="437" width="0.0128%" height="15" fill="rgb(234,213,19)" fg:x="73606" fg:w="27"/><text x="35.1900%" y="447.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="34.9400%" y="421" width="0.0128%" height="15" fill="rgb(252,82,23)" fg:x="73606" fg:w="27"/><text x="35.1900%" y="431.50"></text></g><g><title>std::sys::unix::futex::futex_wait (35 samples, 0.02%)</title><rect x="34.9542%" y="501" width="0.0166%" height="15" fill="rgb(254,201,21)" fg:x="73636" fg:w="35"/><text x="35.2042%" y="511.50"></text></g><g><title>syscall (32 samples, 0.02%)</title><rect x="34.9557%" y="485" width="0.0152%" height="15" fill="rgb(250,186,11)" fg:x="73639" fg:w="32"/><text x="35.2057%" y="495.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="34.9557%" y="469" width="0.0152%" height="15" fill="rgb(211,174,5)" fg:x="73639" fg:w="32"/><text x="35.2057%" y="479.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="34.9557%" y="453" width="0.0152%" height="15" fill="rgb(214,121,10)" fg:x="73639" fg:w="32"/><text x="35.2057%" y="463.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="34.9557%" y="437" width="0.0152%" height="15" fill="rgb(241,66,2)" fg:x="73639" fg:w="32"/><text x="35.2057%" y="447.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="34.9561%" y="421" width="0.0147%" height="15" fill="rgb(220,167,19)" fg:x="73640" fg:w="31"/><text x="35.2061%" y="431.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="34.9561%" y="405" width="0.0147%" height="15" fill="rgb(231,54,50)" fg:x="73640" fg:w="31"/><text x="35.2061%" y="415.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="34.9561%" y="389" width="0.0147%" height="15" fill="rgb(239,217,53)" fg:x="73640" fg:w="31"/><text x="35.2061%" y="399.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="34.9561%" y="373" width="0.0147%" height="15" fill="rgb(248,8,0)" fg:x="73640" fg:w="31"/><text x="35.2061%" y="383.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (6,057 samples, 2.88%)</title><rect x="32.0966%" y="581" width="2.8752%" height="15" fill="rgb(229,118,37)" fg:x="67616" fg:w="6057"/><text x="32.3466%" y="591.50">as..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (39 samples, 0.02%)</title><rect x="34.9533%" y="565" width="0.0185%" height="15" fill="rgb(253,223,43)" fg:x="73634" fg:w="39"/><text x="35.2033%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (39 samples, 0.02%)</title><rect x="34.9533%" y="549" width="0.0185%" height="15" fill="rgb(211,77,36)" fg:x="73634" fg:w="39"/><text x="35.2033%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (39 samples, 0.02%)</title><rect x="34.9533%" y="533" width="0.0185%" height="15" fill="rgb(219,3,53)" fg:x="73634" fg:w="39"/><text x="35.2033%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (38 samples, 0.02%)</title><rect x="34.9538%" y="517" width="0.0180%" height="15" fill="rgb(244,45,42)" fg:x="73635" fg:w="38"/><text x="35.2038%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (29 samples, 0.01%)</title><rect x="34.9718%" y="581" width="0.0138%" height="15" fill="rgb(225,95,27)" fg:x="73673" fg:w="29"/><text x="35.2218%" y="591.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (22 samples, 0.01%)</title><rect x="34.9751%" y="565" width="0.0104%" height="15" fill="rgb(207,74,8)" fg:x="73680" fg:w="22"/><text x="35.2251%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (22 samples, 0.01%)</title><rect x="34.9751%" y="549" width="0.0104%" height="15" fill="rgb(243,63,36)" fg:x="73680" fg:w="22"/><text x="35.2251%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (22 samples, 0.01%)</title><rect x="34.9751%" y="533" width="0.0104%" height="15" fill="rgb(211,180,12)" fg:x="73680" fg:w="22"/><text x="35.2251%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (76 samples, 0.04%)</title><rect x="34.9856%" y="581" width="0.0361%" height="15" fill="rgb(254,166,49)" fg:x="73702" fg:w="76"/><text x="35.2356%" y="591.50"></text></g><g><title>core::mem::replace (76 samples, 0.04%)</title><rect x="34.9856%" y="565" width="0.0361%" height="15" fill="rgb(205,19,0)" fg:x="73702" fg:w="76"/><text x="35.2356%" y="575.50"></text></g><g><title>core::ptr::read (74 samples, 0.04%)</title><rect x="34.9865%" y="549" width="0.0351%" height="15" fill="rgb(224,172,32)" fg:x="73704" fg:w="74"/><text x="35.2365%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(usize,core::task::wake::Waker)&gt;&gt; (313 samples, 0.15%)</title><rect x="35.0216%" y="581" width="0.1486%" height="15" fill="rgb(254,136,30)" fg:x="73778" fg:w="313"/><text x="35.2716%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (310 samples, 0.15%)</title><rect x="35.0231%" y="565" width="0.1472%" height="15" fill="rgb(246,19,35)" fg:x="73781" fg:w="310"/><text x="35.2731%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (310 samples, 0.15%)</title><rect x="35.0231%" y="549" width="0.1472%" height="15" fill="rgb(219,24,36)" fg:x="73781" fg:w="310"/><text x="35.2731%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (310 samples, 0.15%)</title><rect x="35.0231%" y="533" width="0.1472%" height="15" fill="rgb(251,55,1)" fg:x="73781" fg:w="310"/><text x="35.2731%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (306 samples, 0.15%)</title><rect x="35.0250%" y="517" width="0.1453%" height="15" fill="rgb(218,117,39)" fg:x="73785" fg:w="306"/><text x="35.2750%" y="527.50"></text></g><g><title>[[vdso]] (358 samples, 0.17%)</title><rect x="35.4042%" y="501" width="0.1699%" height="15" fill="rgb(248,169,11)" fg:x="74584" fg:w="358"/><text x="35.6542%" y="511.50"></text></g><g><title>clock_gettime (780 samples, 0.37%)</title><rect x="35.2044%" y="533" width="0.3703%" height="15" fill="rgb(244,40,44)" fg:x="74163" fg:w="780"/><text x="35.4544%" y="543.50"></text></g><g><title>__vdso_clock_gettime (692 samples, 0.33%)</title><rect x="35.2462%" y="517" width="0.3285%" height="15" fill="rgb(234,62,37)" fg:x="74251" fg:w="692"/><text x="35.4962%" y="527.50"></text></g><g><title>std::time::Instant::now (854 samples, 0.41%)</title><rect x="35.1721%" y="581" width="0.4054%" height="15" fill="rgb(207,117,42)" fg:x="74095" fg:w="854"/><text x="35.4221%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (801 samples, 0.38%)</title><rect x="35.1973%" y="565" width="0.3802%" height="15" fill="rgb(213,43,2)" fg:x="74148" fg:w="801"/><text x="35.4473%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (801 samples, 0.38%)</title><rect x="35.1973%" y="549" width="0.3802%" height="15" fill="rgb(244,202,51)" fg:x="74148" fg:w="801"/><text x="35.4473%" y="559.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (15,120 samples, 7.18%)</title><rect x="28.4192%" y="597" width="7.1773%" height="15" fill="rgb(253,174,46)" fg:x="59869" fg:w="15120"/><text x="28.6692%" y="607.50">&lt;async_io:..</text></g><g><title>std::time::SystemTime::checked_add (40 samples, 0.02%)</title><rect x="35.5775%" y="581" width="0.0190%" height="15" fill="rgb(251,23,1)" fg:x="74949" fg:w="40"/><text x="35.8275%" y="591.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (15,229 samples, 7.23%)</title><rect x="28.3679%" y="613" width="7.2290%" height="15" fill="rgb(253,26,1)" fg:x="59761" fg:w="15229"/><text x="28.6179%" y="623.50">&lt;async_io:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 0.05%)</title><rect x="35.5970%" y="613" width="0.0465%" height="15" fill="rgb(216,89,31)" fg:x="74990" fg:w="98"/><text x="35.8470%" y="623.50"></text></g><g><title>async_std::future::pending::pending::{{closure}} (81 samples, 0.04%)</title><rect x="35.6050%" y="597" width="0.0384%" height="15" fill="rgb(209,109,5)" fg:x="75007" fg:w="81"/><text x="35.8550%" y="607.50"></text></g><g><title>__rdl_alloc (43 samples, 0.02%)</title><rect x="35.6743%" y="357" width="0.0204%" height="15" fill="rgb(229,63,13)" fg:x="75153" fg:w="43"/><text x="35.9243%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (846 samples, 0.40%)</title><rect x="35.6720%" y="453" width="0.4016%" height="15" fill="rgb(238,137,54)" fg:x="75148" fg:w="846"/><text x="35.9220%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (846 samples, 0.40%)</title><rect x="35.6720%" y="437" width="0.4016%" height="15" fill="rgb(228,1,9)" fg:x="75148" fg:w="846"/><text x="35.9220%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (846 samples, 0.40%)</title><rect x="35.6720%" y="421" width="0.4016%" height="15" fill="rgb(249,120,48)" fg:x="75148" fg:w="846"/><text x="35.9220%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (846 samples, 0.40%)</title><rect x="35.6720%" y="405" width="0.4016%" height="15" fill="rgb(209,72,36)" fg:x="75148" fg:w="846"/><text x="35.9220%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (846 samples, 0.40%)</title><rect x="35.6720%" y="389" width="0.4016%" height="15" fill="rgb(247,98,49)" fg:x="75148" fg:w="846"/><text x="35.9220%" y="399.50"></text></g><g><title>alloc::alloc::alloc (845 samples, 0.40%)</title><rect x="35.6724%" y="373" width="0.4011%" height="15" fill="rgb(233,75,36)" fg:x="75149" fg:w="845"/><text x="35.9224%" y="383.50"></text></g><g><title>malloc (778 samples, 0.37%)</title><rect x="35.7042%" y="357" width="0.3693%" height="15" fill="rgb(225,14,24)" fg:x="75216" fg:w="778"/><text x="35.9542%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (905 samples, 0.43%)</title><rect x="35.6720%" y="565" width="0.4296%" height="15" fill="rgb(237,193,20)" fg:x="75148" fg:w="905"/><text x="35.9220%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (905 samples, 0.43%)</title><rect x="35.6720%" y="549" width="0.4296%" height="15" fill="rgb(239,122,19)" fg:x="75148" fg:w="905"/><text x="35.9220%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (905 samples, 0.43%)</title><rect x="35.6720%" y="533" width="0.4296%" height="15" fill="rgb(231,220,10)" fg:x="75148" fg:w="905"/><text x="35.9220%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (905 samples, 0.43%)</title><rect x="35.6720%" y="517" width="0.4296%" height="15" fill="rgb(220,66,15)" fg:x="75148" fg:w="905"/><text x="35.9220%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (905 samples, 0.43%)</title><rect x="35.6720%" y="501" width="0.4296%" height="15" fill="rgb(215,171,52)" fg:x="75148" fg:w="905"/><text x="35.9220%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (905 samples, 0.43%)</title><rect x="35.6720%" y="485" width="0.4296%" height="15" fill="rgb(241,169,50)" fg:x="75148" fg:w="905"/><text x="35.9220%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (905 samples, 0.43%)</title><rect x="35.6720%" y="469" width="0.4296%" height="15" fill="rgb(236,189,0)" fg:x="75148" fg:w="905"/><text x="35.9220%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (59 samples, 0.03%)</title><rect x="36.0736%" y="453" width="0.0280%" height="15" fill="rgb(217,147,20)" fg:x="75994" fg:w="59"/><text x="36.3236%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.03%)</title><rect x="36.0736%" y="437" width="0.0280%" height="15" fill="rgb(206,188,39)" fg:x="75994" fg:w="59"/><text x="36.3236%" y="447.50"></text></g><g><title>[libc.so.6] (55 samples, 0.03%)</title><rect x="36.0755%" y="421" width="0.0261%" height="15" fill="rgb(227,118,25)" fg:x="75998" fg:w="55"/><text x="36.3255%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1,221 samples, 0.58%)</title><rect x="35.6506%" y="597" width="0.5796%" height="15" fill="rgb(248,171,40)" fg:x="75103" fg:w="1221"/><text x="35.9006%" y="607.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (1,176 samples, 0.56%)</title><rect x="35.6720%" y="581" width="0.5582%" height="15" fill="rgb(251,90,54)" fg:x="75148" fg:w="1176"/><text x="35.9220%" y="591.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (271 samples, 0.13%)</title><rect x="36.1016%" y="565" width="0.1286%" height="15" fill="rgb(234,11,46)" fg:x="76053" fg:w="271"/><text x="36.3516%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (260 samples, 0.12%)</title><rect x="36.1068%" y="549" width="0.1234%" height="15" fill="rgb(229,134,13)" fg:x="76064" fg:w="260"/><text x="36.3568%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (257 samples, 0.12%)</title><rect x="36.1082%" y="533" width="0.1220%" height="15" fill="rgb(223,129,3)" fg:x="76067" fg:w="257"/><text x="36.3582%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (257 samples, 0.12%)</title><rect x="36.1082%" y="517" width="0.1220%" height="15" fill="rgb(221,124,13)" fg:x="76067" fg:w="257"/><text x="36.3582%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (257 samples, 0.12%)</title><rect x="36.1082%" y="501" width="0.1220%" height="15" fill="rgb(234,3,18)" fg:x="76067" fg:w="257"/><text x="36.3582%" y="511.50"></text></g><g><title>alloc::alloc::alloc (246 samples, 0.12%)</title><rect x="36.1134%" y="485" width="0.1168%" height="15" fill="rgb(249,199,20)" fg:x="76078" fg:w="246"/><text x="36.3634%" y="495.50"></text></g><g><title>malloc (237 samples, 0.11%)</title><rect x="36.1177%" y="469" width="0.1125%" height="15" fill="rgb(224,134,6)" fg:x="76087" fg:w="237"/><text x="36.3677%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (318 samples, 0.15%)</title><rect x="36.2739%" y="581" width="0.1510%" height="15" fill="rgb(254,83,26)" fg:x="76416" fg:w="318"/><text x="36.5239%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (246 samples, 0.12%)</title><rect x="36.3081%" y="565" width="0.1168%" height="15" fill="rgb(217,88,9)" fg:x="76488" fg:w="246"/><text x="36.5581%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (242 samples, 0.11%)</title><rect x="36.3100%" y="549" width="0.1149%" height="15" fill="rgb(225,73,2)" fg:x="76492" fg:w="242"/><text x="36.5600%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (242 samples, 0.11%)</title><rect x="36.3100%" y="533" width="0.1149%" height="15" fill="rgb(226,44,39)" fg:x="76492" fg:w="242"/><text x="36.5600%" y="543.50"></text></g><g><title>alloc::alloc::alloc (242 samples, 0.11%)</title><rect x="36.3100%" y="517" width="0.1149%" height="15" fill="rgb(228,53,17)" fg:x="76492" fg:w="242"/><text x="36.5600%" y="527.50"></text></g><g><title>malloc (215 samples, 0.10%)</title><rect x="36.3228%" y="501" width="0.1021%" height="15" fill="rgb(212,27,27)" fg:x="76519" fg:w="215"/><text x="36.5728%" y="511.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (16,987 samples, 8.06%)</title><rect x="28.3618%" y="629" width="8.0636%" height="15" fill="rgb(241,50,6)" fg:x="59748" fg:w="16987"/><text x="28.6118%" y="639.50">&lt;async_std:..</text></g><g><title>std::io::error::Error::new (1,643 samples, 0.78%)</title><rect x="35.6454%" y="613" width="0.7799%" height="15" fill="rgb(225,28,51)" fg:x="75092" fg:w="1643"/><text x="35.8954%" y="623.50"></text></g><g><title>std::io::error::Error::_new (411 samples, 0.20%)</title><rect x="36.2302%" y="597" width="0.1951%" height="15" fill="rgb(215,33,16)" fg:x="76324" fg:w="411"/><text x="36.4802%" y="607.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (30 samples, 0.01%)</title><rect x="36.4880%" y="597" width="0.0142%" height="15" fill="rgb(243,40,39)" fg:x="76867" fg:w="30"/><text x="36.7380%" y="607.50"></text></g><g><title>std::time::Instant::checked_add (28 samples, 0.01%)</title><rect x="36.4889%" y="581" width="0.0133%" height="15" fill="rgb(225,11,42)" fg:x="76869" fg:w="28"/><text x="36.7389%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_add_duration (28 samples, 0.01%)</title><rect x="36.4889%" y="565" width="0.0133%" height="15" fill="rgb(241,220,38)" fg:x="76869" fg:w="28"/><text x="36.7389%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::checked_add_duration (28 samples, 0.01%)</title><rect x="36.4889%" y="549" width="0.0133%" height="15" fill="rgb(244,52,35)" fg:x="76869" fg:w="28"/><text x="36.7389%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (25 samples, 0.01%)</title><rect x="36.4903%" y="533" width="0.0119%" height="15" fill="rgb(246,42,46)" fg:x="76872" fg:w="25"/><text x="36.7403%" y="543.50"></text></g><g><title>[[vdso]] (221 samples, 0.10%)</title><rect x="36.7011%" y="517" width="0.1049%" height="15" fill="rgb(205,184,13)" fg:x="77316" fg:w="221"/><text x="36.9511%" y="527.50"></text></g><g><title>clock_gettime (547 samples, 0.26%)</title><rect x="36.5473%" y="549" width="0.2597%" height="15" fill="rgb(209,48,36)" fg:x="76992" fg:w="547"/><text x="36.7973%" y="559.50"></text></g><g><title>__vdso_clock_gettime (416 samples, 0.20%)</title><rect x="36.6095%" y="533" width="0.1975%" height="15" fill="rgb(244,34,51)" fg:x="77123" fg:w="416"/><text x="36.8595%" y="543.50"></text></g><g><title>async_std::utils::timer_after (803 samples, 0.38%)</title><rect x="36.4272%" y="629" width="0.3812%" height="15" fill="rgb(221,107,33)" fg:x="76739" fg:w="803"/><text x="36.6772%" y="639.50"></text></g><g><title>async_io::Timer::after (747 samples, 0.35%)</title><rect x="36.4538%" y="613" width="0.3546%" height="15" fill="rgb(224,203,12)" fg:x="76795" fg:w="747"/><text x="36.7038%" y="623.50"></text></g><g><title>std::time::Instant::now (635 samples, 0.30%)</title><rect x="36.5069%" y="597" width="0.3014%" height="15" fill="rgb(230,215,18)" fg:x="76907" fg:w="635"/><text x="36.7569%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (550 samples, 0.26%)</title><rect x="36.5473%" y="581" width="0.2611%" height="15" fill="rgb(206,185,35)" fg:x="76992" fg:w="550"/><text x="36.7973%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (550 samples, 0.26%)</title><rect x="36.5473%" y="565" width="0.2611%" height="15" fill="rgb(228,140,34)" fg:x="76992" fg:w="550"/><text x="36.7973%" y="575.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (65 samples, 0.03%)</title><rect x="36.8093%" y="597" width="0.0309%" height="15" fill="rgb(208,93,13)" fg:x="77544" fg:w="65"/><text x="37.0593%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (60 samples, 0.03%)</title><rect x="36.8117%" y="581" width="0.0285%" height="15" fill="rgb(221,193,39)" fg:x="77549" fg:w="60"/><text x="37.0617%" y="591.50"></text></g><g><title>core::mem::replace (60 samples, 0.03%)</title><rect x="36.8117%" y="565" width="0.0285%" height="15" fill="rgb(241,132,34)" fg:x="77549" fg:w="60"/><text x="37.0617%" y="575.50"></text></g><g><title>core::ptr::read (58 samples, 0.03%)</title><rect x="36.8126%" y="549" width="0.0275%" height="15" fill="rgb(221,141,10)" fg:x="77551" fg:w="58"/><text x="37.0626%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18,023 samples, 8.56%)</title><rect x="28.2872%" y="661" width="8.5553%" height="15" fill="rgb(226,90,31)" fg:x="59591" fg:w="18023"/><text x="28.5372%" y="671.50">&lt;core::futur..</text></g><g><title>async_std::io::timeout::timeout::{{closure}} (18,021 samples, 8.55%)</title><rect x="28.2882%" y="645" width="8.5544%" height="15" fill="rgb(243,75,5)" fg:x="59593" fg:w="18021"/><text x="28.5382%" y="655.50">async_std::i..</text></g><g><title>core::ptr::drop_in_place&lt;async_std::io::timeout::Timeout&lt;core::future::from_generator::GenFuture&lt;async_std::future::pending::pending&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;::{{closure}}&gt;,()&gt;&gt; (72 samples, 0.03%)</title><rect x="36.8084%" y="629" width="0.0342%" height="15" fill="rgb(227,156,21)" fg:x="77542" fg:w="72"/><text x="37.0584%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (72 samples, 0.03%)</title><rect x="36.8084%" y="613" width="0.0342%" height="15" fill="rgb(250,195,8)" fg:x="77542" fg:w="72"/><text x="37.0584%" y="623.50"></text></g><g><title>cfree (134 samples, 0.06%)</title><rect x="36.8464%" y="645" width="0.0636%" height="15" fill="rgb(220,134,5)" fg:x="77622" fg:w="134"/><text x="37.0964%" y="655.50"></text></g><g><title>[libc.so.6] (52 samples, 0.02%)</title><rect x="36.8853%" y="629" width="0.0247%" height="15" fill="rgb(246,106,34)" fg:x="77704" fg:w="52"/><text x="37.1353%" y="639.50"></text></g><g><title>__rust_dealloc (22 samples, 0.01%)</title><rect x="36.9365%" y="533" width="0.0104%" height="15" fill="rgb(205,1,4)" fg:x="77812" fg:w="22"/><text x="37.1865%" y="543.50"></text></g><g><title>[libc.so.6] (53 samples, 0.03%)</title><rect x="36.9755%" y="469" width="0.0252%" height="15" fill="rgb(224,151,29)" fg:x="77894" fg:w="53"/><text x="37.2255%" y="479.50"></text></g><g><title>cfree (97 samples, 0.05%)</title><rect x="36.9551%" y="485" width="0.0460%" height="15" fill="rgb(251,196,0)" fg:x="77851" fg:w="97"/><text x="37.2051%" y="495.50"></text></g><g><title>alloc::alloc::box_free (115 samples, 0.05%)</title><rect x="36.9470%" y="533" width="0.0546%" height="15" fill="rgb(212,127,0)" fg:x="77834" fg:w="115"/><text x="37.1970%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (111 samples, 0.05%)</title><rect x="36.9489%" y="517" width="0.0527%" height="15" fill="rgb(236,71,53)" fg:x="77838" fg:w="111"/><text x="37.1989%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (101 samples, 0.05%)</title><rect x="36.9536%" y="501" width="0.0479%" height="15" fill="rgb(227,99,0)" fg:x="77848" fg:w="101"/><text x="37.2036%" y="511.50"></text></g><g><title>[libc.so.6] (68 samples, 0.03%)</title><rect x="37.2019%" y="517" width="0.0323%" height="15" fill="rgb(239,89,21)" fg:x="78371" fg:w="68"/><text x="37.4519%" y="527.50"></text></g><g><title>cfree (497 samples, 0.24%)</title><rect x="37.0016%" y="533" width="0.2359%" height="15" fill="rgb(243,122,19)" fg:x="77949" fg:w="497"/><text x="37.2516%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::ErrorData&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt;&gt; (927 samples, 0.44%)</title><rect x="36.9161%" y="597" width="0.4400%" height="15" fill="rgb(229,192,45)" fg:x="77769" fg:w="927"/><text x="37.1661%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt; (927 samples, 0.44%)</title><rect x="36.9161%" y="581" width="0.4400%" height="15" fill="rgb(235,165,35)" fg:x="77769" fg:w="927"/><text x="37.1661%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Custom&gt; (918 samples, 0.44%)</title><rect x="36.9204%" y="565" width="0.4358%" height="15" fill="rgb(253,202,0)" fg:x="77778" fg:w="918"/><text x="37.1704%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt; (918 samples, 0.44%)</title><rect x="36.9204%" y="549" width="0.4358%" height="15" fill="rgb(235,51,20)" fg:x="77778" fg:w="918"/><text x="37.1704%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::error::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from::StringError&gt; (250 samples, 0.12%)</title><rect x="37.2375%" y="533" width="0.1187%" height="15" fill="rgb(218,95,46)" fg:x="78446" fg:w="250"/><text x="37.4875%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (250 samples, 0.12%)</title><rect x="37.2375%" y="517" width="0.1187%" height="15" fill="rgb(212,81,10)" fg:x="78446" fg:w="250"/><text x="37.4875%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (250 samples, 0.12%)</title><rect x="37.2375%" y="501" width="0.1187%" height="15" fill="rgb(240,59,0)" fg:x="78446" fg:w="250"/><text x="37.4875%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (250 samples, 0.12%)</title><rect x="37.2375%" y="485" width="0.1187%" height="15" fill="rgb(212,191,42)" fg:x="78446" fg:w="250"/><text x="37.4875%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 samples, 0.12%)</title><rect x="37.2375%" y="469" width="0.1187%" height="15" fill="rgb(233,140,3)" fg:x="78446" fg:w="250"/><text x="37.4875%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (105 samples, 0.05%)</title><rect x="37.3063%" y="453" width="0.0498%" height="15" fill="rgb(215,69,23)" fg:x="78591" fg:w="105"/><text x="37.5563%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19,232 samples, 9.13%)</title><rect x="28.2307%" y="693" width="9.1292%" height="15" fill="rgb(240,202,20)" fg:x="59472" fg:w="19232"/><text x="28.4807%" y="703.50">&lt;core::future..</text></g><g><title>async_std::task::sleep::sleep::{{closure}} (19,205 samples, 9.12%)</title><rect x="28.2436%" y="677" width="9.1164%" height="15" fill="rgb(209,146,50)" fg:x="59499" fg:w="19205"/><text x="28.4936%" y="687.50">async_std::ta..</text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (1,090 samples, 0.52%)</title><rect x="36.8426%" y="661" width="0.5174%" height="15" fill="rgb(253,102,54)" fg:x="77614" fg:w="1090"/><text x="37.0926%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (948 samples, 0.45%)</title><rect x="36.9100%" y="645" width="0.4500%" height="15" fill="rgb(250,173,47)" fg:x="77756" fg:w="948"/><text x="37.1600%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (935 samples, 0.44%)</title><rect x="36.9161%" y="629" width="0.4438%" height="15" fill="rgb(232,142,7)" fg:x="77769" fg:w="935"/><text x="37.1661%" y="639.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (935 samples, 0.44%)</title><rect x="36.9161%" y="613" width="0.4438%" height="15" fill="rgb(230,157,47)" fg:x="77769" fg:w="935"/><text x="37.1661%" y="623.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front_mut (44 samples, 0.02%)</title><rect x="37.3666%" y="677" width="0.0209%" height="15" fill="rgb(214,177,35)" fg:x="78718" fg:w="44"/><text x="37.6166%" y="687.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get_mut (44 samples, 0.02%)</title><rect x="37.3666%" y="661" width="0.0209%" height="15" fill="rgb(234,119,46)" fg:x="78718" fg:w="44"/><text x="37.6166%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (43 samples, 0.02%)</title><rect x="37.3671%" y="645" width="0.0204%" height="15" fill="rgb(241,180,50)" fg:x="78719" fg:w="43"/><text x="37.6171%" y="655.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (24 samples, 0.01%)</title><rect x="37.3875%" y="677" width="0.0114%" height="15" fill="rgb(221,54,25)" fg:x="78762" fg:w="24"/><text x="37.6375%" y="687.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as core::convert::AsRef&lt;zenoh_buffers::wbuf::WBuf&gt;&gt;::as_ref (51 samples, 0.02%)</title><rect x="37.4169%" y="645" width="0.0242%" height="15" fill="rgb(209,157,44)" fg:x="78824" fg:w="51"/><text x="37.6669%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (466 samples, 0.22%)</title><rect x="37.4411%" y="613" width="0.2212%" height="15" fill="rgb(246,115,41)" fg:x="78875" fg:w="466"/><text x="37.6911%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (1,009 samples, 0.48%)</title><rect x="37.4411%" y="645" width="0.4790%" height="15" fill="rgb(229,86,1)" fg:x="78875" fg:w="1009"/><text x="37.6911%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,009 samples, 0.48%)</title><rect x="37.4411%" y="629" width="0.4790%" height="15" fill="rgb(240,108,53)" fg:x="78875" fg:w="1009"/><text x="37.6911%" y="639.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (543 samples, 0.26%)</title><rect x="37.6623%" y="613" width="0.2578%" height="15" fill="rgb(227,134,2)" fg:x="79341" fg:w="543"/><text x="37.9123%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (541 samples, 0.26%)</title><rect x="37.6633%" y="597" width="0.2568%" height="15" fill="rgb(213,129,25)" fg:x="79343" fg:w="541"/><text x="37.9133%" y="607.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::is_empty (1,100 samples, 0.52%)</title><rect x="37.3989%" y="677" width="0.5222%" height="15" fill="rgb(226,35,21)" fg:x="78786" fg:w="1100"/><text x="37.6489%" y="687.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (1,097 samples, 0.52%)</title><rect x="37.4003%" y="661" width="0.5207%" height="15" fill="rgb(208,129,26)" fg:x="78789" fg:w="1097"/><text x="37.6503%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as core::convert::AsMut&lt;zenoh_buffers::wbuf::WBuf&gt;&gt;::as_mut (36 samples, 0.02%)</title><rect x="37.9267%" y="661" width="0.0171%" height="15" fill="rgb(224,83,6)" fg:x="79898" fg:w="36"/><text x="38.1767%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (34 samples, 0.02%)</title><rect x="37.9438%" y="661" width="0.0161%" height="15" fill="rgb(227,52,39)" fg:x="79934" fg:w="34"/><text x="38.1938%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.02%)</title><rect x="37.9438%" y="645" width="0.0161%" height="15" fill="rgb(241,30,17)" fg:x="79934" fg:w="34"/><text x="38.1938%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::get_first_slice_mut (44 samples, 0.02%)</title><rect x="37.9600%" y="661" width="0.0209%" height="15" fill="rgb(246,186,42)" fg:x="79968" fg:w="44"/><text x="38.2100%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (35 samples, 0.02%)</title><rect x="37.9642%" y="645" width="0.0166%" height="15" fill="rgb(221,169,15)" fg:x="79977" fg:w="35"/><text x="38.2142%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (22 samples, 0.01%)</title><rect x="38.0079%" y="645" width="0.0104%" height="15" fill="rgb(235,108,21)" fg:x="80069" fg:w="22"/><text x="38.2579%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (22 samples, 0.01%)</title><rect x="38.0079%" y="629" width="0.0104%" height="15" fill="rgb(219,148,30)" fg:x="80069" fg:w="22"/><text x="38.2579%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,650 samples, 9.80%)</title><rect x="28.2170%" y="725" width="9.8023%" height="15" fill="rgb(220,109,5)" fg:x="59443" fg:w="20650"/><text x="28.4670%" y="735.50">&lt;core::future:..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (20,621 samples, 9.79%)</title><rect x="28.2307%" y="709" width="9.7886%" height="15" fill="rgb(213,203,48)" fg:x="59472" fg:w="20621"/><text x="28.4807%" y="719.50">zenoh_transpor..</text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (1,387 samples, 0.66%)</title><rect x="37.3609%" y="693" width="0.6584%" height="15" fill="rgb(244,71,33)" fg:x="78706" fg:w="1387"/><text x="37.6109%" y="703.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::write_len (207 samples, 0.10%)</title><rect x="37.9210%" y="677" width="0.0983%" height="15" fill="rgb(209,23,2)" fg:x="79886" fg:w="207"/><text x="38.1710%" y="687.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (77 samples, 0.04%)</title><rect x="37.9828%" y="661" width="0.0366%" height="15" fill="rgb(219,97,7)" fg:x="80016" fg:w="77"/><text x="38.2328%" y="671.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (128 samples, 0.06%)</title><rect x="38.0820%" y="709" width="0.0608%" height="15" fill="rgb(216,161,23)" fg:x="80225" fg:w="128"/><text x="38.3320%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (122 samples, 0.06%)</title><rect x="38.0848%" y="693" width="0.0579%" height="15" fill="rgb(207,45,42)" fg:x="80231" fg:w="122"/><text x="38.3348%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (107 samples, 0.05%)</title><rect x="38.1442%" y="709" width="0.0508%" height="15" fill="rgb(241,61,4)" fg:x="80356" fg:w="107"/><text x="38.3942%" y="719.50"></text></g><g><title>core::mem::replace (107 samples, 0.05%)</title><rect x="38.1442%" y="693" width="0.0508%" height="15" fill="rgb(236,170,1)" fg:x="80356" fg:w="107"/><text x="38.3942%" y="703.50"></text></g><g><title>core::ptr::read (100 samples, 0.05%)</title><rect x="38.1475%" y="677" width="0.0475%" height="15" fill="rgb(239,72,5)" fg:x="80363" fg:w="100"/><text x="38.3975%" y="687.50"></text></g><g><title>core::mem::drop (28 samples, 0.01%)</title><rect x="38.2030%" y="709" width="0.0133%" height="15" fill="rgb(214,13,50)" fg:x="80480" fg:w="28"/><text x="38.4530%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (28 samples, 0.01%)</title><rect x="38.2030%" y="693" width="0.0133%" height="15" fill="rgb(224,88,9)" fg:x="80480" fg:w="28"/><text x="38.4530%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (23 samples, 0.01%)</title><rect x="38.2054%" y="677" width="0.0109%" height="15" fill="rgb(238,192,34)" fg:x="80485" fg:w="23"/><text x="38.4554%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="38.2054%" y="661" width="0.0109%" height="15" fill="rgb(217,203,50)" fg:x="80485" fg:w="23"/><text x="38.4554%" y="671.50"></text></g><g><title>std::sys::unix::futex::futex_wait (32 samples, 0.02%)</title><rect x="38.4199%" y="629" width="0.0152%" height="15" fill="rgb(241,123,32)" fg:x="80937" fg:w="32"/><text x="38.6699%" y="639.50"></text></g><g><title>syscall (32 samples, 0.02%)</title><rect x="38.4199%" y="613" width="0.0152%" height="15" fill="rgb(248,151,39)" fg:x="80937" fg:w="32"/><text x="38.6699%" y="623.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="38.4199%" y="597" width="0.0152%" height="15" fill="rgb(208,89,6)" fg:x="80937" fg:w="32"/><text x="38.6699%" y="607.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="38.4199%" y="581" width="0.0152%" height="15" fill="rgb(254,43,26)" fg:x="80937" fg:w="32"/><text x="38.6699%" y="591.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="38.4204%" y="565" width="0.0147%" height="15" fill="rgb(216,158,13)" fg:x="80938" fg:w="31"/><text x="38.6704%" y="575.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="38.4204%" y="549" width="0.0147%" height="15" fill="rgb(212,47,37)" fg:x="80938" fg:w="31"/><text x="38.6704%" y="559.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="38.4214%" y="533" width="0.0138%" height="15" fill="rgb(254,16,10)" fg:x="80940" fg:w="29"/><text x="38.6714%" y="543.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="38.4218%" y="517" width="0.0133%" height="15" fill="rgb(223,228,16)" fg:x="80941" fg:w="28"/><text x="38.6718%" y="527.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="38.4223%" y="501" width="0.0128%" height="15" fill="rgb(249,108,50)" fg:x="80942" fg:w="27"/><text x="38.6723%" y="511.50"></text></g><g><title>event_listener::Inner::lock (557 samples, 0.26%)</title><rect x="38.2244%" y="709" width="0.2644%" height="15" fill="rgb(208,220,5)" fg:x="80525" fg:w="557"/><text x="38.4744%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (555 samples, 0.26%)</title><rect x="38.2253%" y="693" width="0.2635%" height="15" fill="rgb(217,89,48)" fg:x="80527" fg:w="555"/><text x="38.4753%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (552 samples, 0.26%)</title><rect x="38.2267%" y="677" width="0.2620%" height="15" fill="rgb(212,113,41)" fg:x="80530" fg:w="552"/><text x="38.4767%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (552 samples, 0.26%)</title><rect x="38.2267%" y="661" width="0.2620%" height="15" fill="rgb(231,127,5)" fg:x="80530" fg:w="552"/><text x="38.4767%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (149 samples, 0.07%)</title><rect x="38.4180%" y="645" width="0.0707%" height="15" fill="rgb(217,141,17)" fg:x="80933" fg:w="149"/><text x="38.6680%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (113 samples, 0.05%)</title><rect x="38.4351%" y="629" width="0.0536%" height="15" fill="rgb(245,125,54)" fg:x="80969" fg:w="113"/><text x="38.6851%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (22 samples, 0.01%)</title><rect x="38.4783%" y="613" width="0.0104%" height="15" fill="rgb(248,125,3)" fg:x="81060" fg:w="22"/><text x="38.7283%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.01%)</title><rect x="38.4783%" y="597" width="0.0104%" height="15" fill="rgb(236,119,51)" fg:x="81060" fg:w="22"/><text x="38.7283%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (39 samples, 0.02%)</title><rect x="38.5082%" y="693" width="0.0185%" height="15" fill="rgb(239,99,8)" fg:x="81123" fg:w="39"/><text x="38.7582%" y="703.50"></text></g><g><title>core::mem::replace (39 samples, 0.02%)</title><rect x="38.5082%" y="677" width="0.0185%" height="15" fill="rgb(224,228,4)" fg:x="81123" fg:w="39"/><text x="38.7582%" y="687.50"></text></g><g><title>core::ptr::read (36 samples, 0.02%)</title><rect x="38.5097%" y="661" width="0.0171%" height="15" fill="rgb(220,131,45)" fg:x="81126" fg:w="36"/><text x="38.7597%" y="671.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,122 samples, 0.53%)</title><rect x="38.0193%" y="725" width="0.5326%" height="15" fill="rgb(215,62,5)" fg:x="80093" fg:w="1122"/><text x="38.2693%" y="735.50"></text></g><g><title>event_listener::List::remove (133 samples, 0.06%)</title><rect x="38.4888%" y="709" width="0.0631%" height="15" fill="rgb(253,12,24)" fg:x="81082" fg:w="133"/><text x="38.7388%" y="719.50"></text></g><g><title>event_listener::State::is_notified (53 samples, 0.03%)</title><rect x="38.5268%" y="693" width="0.0252%" height="15" fill="rgb(248,120,50)" fg:x="81162" fg:w="53"/><text x="38.7768%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (111 samples, 0.05%)</title><rect x="38.6108%" y="693" width="0.0527%" height="15" fill="rgb(245,194,10)" fg:x="81339" fg:w="111"/><text x="38.8608%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (43 samples, 0.02%)</title><rect x="38.6635%" y="693" width="0.0204%" height="15" fill="rgb(241,149,38)" fg:x="81450" fg:w="43"/><text x="38.9135%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (43 samples, 0.02%)</title><rect x="38.6635%" y="677" width="0.0204%" height="15" fill="rgb(219,215,7)" fg:x="81450" fg:w="43"/><text x="38.9135%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.02%)</title><rect x="38.6635%" y="661" width="0.0204%" height="15" fill="rgb(208,120,31)" fg:x="81450" fg:w="43"/><text x="38.9135%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.02%)</title><rect x="38.6682%" y="645" width="0.0157%" height="15" fill="rgb(244,30,8)" fg:x="81460" fg:w="33"/><text x="38.9182%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (33 samples, 0.02%)</title><rect x="38.6682%" y="629" width="0.0157%" height="15" fill="rgb(238,35,44)" fg:x="81460" fg:w="33"/><text x="38.9182%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (42 samples, 0.02%)</title><rect x="38.6853%" y="677" width="0.0199%" height="15" fill="rgb(243,218,37)" fg:x="81496" fg:w="42"/><text x="38.9353%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (40 samples, 0.02%)</title><rect x="38.6862%" y="661" width="0.0190%" height="15" fill="rgb(218,169,10)" fg:x="81498" fg:w="40"/><text x="38.9362%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.02%)</title><rect x="38.6862%" y="645" width="0.0190%" height="15" fill="rgb(221,144,10)" fg:x="81498" fg:w="40"/><text x="38.9362%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.02%)</title><rect x="38.6862%" y="629" width="0.0190%" height="15" fill="rgb(226,41,38)" fg:x="81498" fg:w="40"/><text x="38.9362%" y="639.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.02%)</title><rect x="38.6862%" y="613" width="0.0190%" height="15" fill="rgb(228,3,1)" fg:x="81498" fg:w="40"/><text x="38.9362%" y="623.50"></text></g><g><title>malloc (39 samples, 0.02%)</title><rect x="38.6867%" y="597" width="0.0185%" height="15" fill="rgb(209,129,12)" fg:x="81499" fg:w="39"/><text x="38.9367%" y="607.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="38.6943%" y="581" width="0.0109%" height="15" fill="rgb(213,136,33)" fg:x="81515" fg:w="23"/><text x="38.9443%" y="591.50"></text></g><g><title>event_listener::Event::inner (48 samples, 0.02%)</title><rect x="38.6839%" y="693" width="0.0228%" height="15" fill="rgb(209,181,29)" fg:x="81493" fg:w="48"/><text x="38.9339%" y="703.50"></text></g><g><title>event_listener::List::insert (32 samples, 0.02%)</title><rect x="38.7185%" y="693" width="0.0152%" height="15" fill="rgb(234,173,18)" fg:x="81566" fg:w="32"/><text x="38.9685%" y="703.50"></text></g><g><title>zenoh_sync::condition::Condition::waiter (380 samples, 0.18%)</title><rect x="38.5548%" y="725" width="0.1804%" height="15" fill="rgb(227,73,47)" fg:x="81221" fg:w="380"/><text x="38.8048%" y="735.50"></text></g><g><title>event_listener::Event::listen (380 samples, 0.18%)</title><rect x="38.5548%" y="709" width="0.1804%" height="15" fill="rgb(234,9,34)" fg:x="81221" fg:w="380"/><text x="38.8048%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front_mut (105 samples, 0.05%)</title><rect x="38.7484%" y="709" width="0.0498%" height="15" fill="rgb(235,172,15)" fg:x="81629" fg:w="105"/><text x="38.9984%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get_mut (105 samples, 0.05%)</title><rect x="38.7484%" y="693" width="0.0498%" height="15" fill="rgb(245,61,2)" fg:x="81629" fg:w="105"/><text x="38.9984%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (104 samples, 0.05%)</title><rect x="38.7489%" y="677" width="0.0494%" height="15" fill="rgb(238,39,47)" fg:x="81630" fg:w="104"/><text x="38.9989%" y="687.50"></text></g><g><title>alloc::collections::vec_deque::count (34 samples, 0.02%)</title><rect x="38.7821%" y="661" width="0.0161%" height="15" fill="rgb(234,37,24)" fg:x="81700" fg:w="34"/><text x="39.0321%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (34 samples, 0.02%)</title><rect x="38.7821%" y="645" width="0.0161%" height="15" fill="rgb(248,223,24)" fg:x="81700" fg:w="34"/><text x="39.0321%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,730 samples, 0.82%)</title><rect x="38.8823%" y="645" width="0.8212%" height="15" fill="rgb(223,12,15)" fg:x="81911" fg:w="1730"/><text x="39.1323%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (3,188 samples, 1.51%)</title><rect x="38.8823%" y="677" width="1.5133%" height="15" fill="rgb(249,6,3)" fg:x="81911" fg:w="3188"/><text x="39.1323%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,188 samples, 1.51%)</title><rect x="38.8823%" y="661" width="1.5133%" height="15" fill="rgb(237,105,33)" fg:x="81911" fg:w="3188"/><text x="39.1323%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (1,458 samples, 0.69%)</title><rect x="39.7035%" y="645" width="0.6921%" height="15" fill="rgb(252,208,35)" fg:x="83641" fg:w="1458"/><text x="39.9535%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (1,450 samples, 0.69%)</title><rect x="39.7073%" y="629" width="0.6883%" height="15" fill="rgb(215,181,35)" fg:x="83649" fg:w="1450"/><text x="39.9573%" y="639.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (25,683 samples, 12.19%)</title><rect x="28.2056%" y="773" width="12.1915%" height="15" fill="rgb(246,212,3)" fg:x="59419" fg:w="25683"/><text x="28.4556%" y="783.50">&lt;async_std::future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,659 samples, 12.18%)</title><rect x="28.2170%" y="757" width="12.1801%" height="15" fill="rgb(247,156,24)" fg:x="59443" fg:w="25659"/><text x="28.4670%" y="767.50">&lt;core::future::fro..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (25,659 samples, 12.18%)</title><rect x="28.2170%" y="741" width="12.1801%" height="15" fill="rgb(248,9,31)" fg:x="59443" fg:w="25659"/><text x="28.4670%" y="751.50">zenoh_transport::c..</text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (3,501 samples, 1.66%)</title><rect x="38.7351%" y="725" width="1.6619%" height="15" fill="rgb(234,26,45)" fg:x="81601" fg:w="3501"/><text x="38.9851%" y="735.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::is_empty (3,368 samples, 1.60%)</title><rect x="38.7983%" y="709" width="1.5988%" height="15" fill="rgb(249,11,32)" fg:x="81734" fg:w="3368"/><text x="39.0483%" y="719.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (3,361 samples, 1.60%)</title><rect x="38.8016%" y="693" width="1.5954%" height="15" fill="rgb(249,162,33)" fg:x="81741" fg:w="3361"/><text x="39.0516%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,710 samples, 12.20%)</title><rect x="28.2056%" y="869" width="12.2043%" height="15" fill="rgb(232,4,32)" fg:x="59419" fg:w="25710"/><text x="28.4556%" y="879.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (25,710 samples, 12.20%)</title><rect x="28.2056%" y="853" width="12.2043%" height="15" fill="rgb(212,5,45)" fg:x="59419" fg:w="25710"/><text x="28.4556%" y="863.50">async_executor::Ex..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,710 samples, 12.20%)</title><rect x="28.2056%" y="837" width="12.2043%" height="15" fill="rgb(227,95,13)" fg:x="59419" fg:w="25710"/><text x="28.4556%" y="847.50">&lt;core::future::fro..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (25,710 samples, 12.20%)</title><rect x="28.2056%" y="821" width="12.2043%" height="15" fill="rgb(223,205,10)" fg:x="59419" fg:w="25710"/><text x="28.4556%" y="831.50">zenoh_transport::u..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,710 samples, 12.20%)</title><rect x="28.2056%" y="805" width="12.2043%" height="15" fill="rgb(222,178,8)" fg:x="59419" fg:w="25710"/><text x="28.4556%" y="815.50">&lt;core::future::fro..</text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (25,710 samples, 12.20%)</title><rect x="28.2056%" y="789" width="12.2043%" height="15" fill="rgb(216,13,22)" fg:x="59419" fg:w="25710"/><text x="28.4556%" y="799.50">zenoh_transport::u..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1141" width="12.2047%" height="15" fill="rgb(240,167,12)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1151.50">&lt;core::future::fro..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1125" width="12.2047%" height="15" fill="rgb(235,68,35)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1135.50">async_executor::Lo..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1109" width="12.2047%" height="15" fill="rgb(253,40,27)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1119.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::run::{{closure}} (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1093" width="12.2047%" height="15" fill="rgb(214,19,28)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1103.50">async_executor::Ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1077" width="12.2047%" height="15" fill="rgb(210,167,45)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1087.50">&lt;futures_lite::fut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1061" width="12.2047%" height="15" fill="rgb(232,97,40)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1071.50">&lt;async_std::task::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1045" width="12.2047%" height="15" fill="rgb(250,35,23)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1055.50">async_std::task::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1029" width="12.2047%" height="15" fill="rgb(248,47,53)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1039.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25,711 samples, 12.20%)</title><rect x="28.2056%" y="1013" width="12.2047%" height="15" fill="rgb(226,58,50)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1023.50">std::thread::local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (25,711 samples, 12.20%)</title><rect x="28.2056%" y="997" width="12.2047%" height="15" fill="rgb(217,105,26)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="1007.50">async_std::task::t..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (25,711 samples, 12.20%)</title><rect x="28.2056%" y="981" width="12.2047%" height="15" fill="rgb(208,64,1)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="991.50">&lt;async_std::task::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,711 samples, 12.20%)</title><rect x="28.2056%" y="965" width="12.2047%" height="15" fill="rgb(214,80,1)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="975.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::run::{{closure}} (25,711 samples, 12.20%)</title><rect x="28.2056%" y="949" width="12.2047%" height="15" fill="rgb(206,175,26)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="959.50">async_executor::Ex..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (25,711 samples, 12.20%)</title><rect x="28.2056%" y="933" width="12.2047%" height="15" fill="rgb(235,156,37)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="943.50">&lt;futures_lite::fut..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25,711 samples, 12.20%)</title><rect x="28.2056%" y="917" width="12.2047%" height="15" fill="rgb(213,100,9)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="927.50">&lt;core::future::fro..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (25,711 samples, 12.20%)</title><rect x="28.2056%" y="901" width="12.2047%" height="15" fill="rgb(241,15,13)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="911.50">async_executor::Ex..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (25,711 samples, 12.20%)</title><rect x="28.2056%" y="885" width="12.2047%" height="15" fill="rgb(205,97,43)" fg:x="59419" fg:w="25711"/><text x="28.4556%" y="895.50">async_task::raw::R..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (25,725 samples, 12.21%)</title><rect x="28.2056%" y="1205" width="12.2114%" height="15" fill="rgb(216,106,32)" fg:x="59419" fg:w="25725"/><text x="28.4556%" y="1215.50">async_global_execu..</text></g><g><title>async_global_executor::reactor::block_on (25,725 samples, 12.21%)</title><rect x="28.2056%" y="1189" width="12.2114%" height="15" fill="rgb(226,200,8)" fg:x="59419" fg:w="25725"/><text x="28.4556%" y="1199.50">async_global_execu..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (25,725 samples, 12.21%)</title><rect x="28.2056%" y="1173" width="12.2114%" height="15" fill="rgb(244,54,29)" fg:x="59419" fg:w="25725"/><text x="28.4556%" y="1183.50">async_global_execu..</text></g><g><title>async_io::driver::block_on (25,725 samples, 12.21%)</title><rect x="28.2056%" y="1157" width="12.2114%" height="15" fill="rgb(252,169,12)" fg:x="59419" fg:w="25725"/><text x="28.4556%" y="1167.50">async_io::driver::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (26 samples, 0.01%)</title><rect x="40.4882%" y="597" width="0.0123%" height="15" fill="rgb(231,199,11)" fg:x="85294" fg:w="26"/><text x="40.7382%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.01%)</title><rect x="40.4882%" y="581" width="0.0123%" height="15" fill="rgb(233,191,18)" fg:x="85294" fg:w="26"/><text x="40.7382%" y="591.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="40.4891%" y="565" width="0.0114%" height="15" fill="rgb(215,83,47)" fg:x="85296" fg:w="24"/><text x="40.7391%" y="575.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::copy_bytes (148 samples, 0.07%)</title><rect x="40.4540%" y="613" width="0.0703%" height="15" fill="rgb(251,67,19)" fg:x="85222" fg:w="148"/><text x="40.7040%" y="623.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::as_slice (34 samples, 0.02%)</title><rect x="40.5081%" y="597" width="0.0161%" height="15" fill="rgb(240,7,20)" fg:x="85336" fg:w="34"/><text x="40.7581%" y="607.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;core::ops::range::Range&lt;usize&gt;&gt;&gt;::index (34 samples, 0.02%)</title><rect x="40.5081%" y="581" width="0.0161%" height="15" fill="rgb(210,150,26)" fg:x="85336" fg:w="34"/><text x="40.7581%" y="591.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_exact (193 samples, 0.09%)</title><rect x="40.4360%" y="629" width="0.0916%" height="15" fill="rgb(228,75,42)" fg:x="85184" fg:w="193"/><text x="40.6860%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (30 samples, 0.01%)</title><rect x="40.5589%" y="597" width="0.0142%" height="15" fill="rgb(237,134,48)" fg:x="85443" fg:w="30"/><text x="40.8089%" y="607.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (29 samples, 0.01%)</title><rect x="40.5594%" y="581" width="0.0138%" height="15" fill="rgb(205,80,50)" fg:x="85444" fg:w="29"/><text x="40.8094%" y="591.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;usize,R&gt;&gt;::read (104 samples, 0.05%)</title><rect x="40.5290%" y="629" width="0.0494%" height="15" fill="rgb(217,74,48)" fg:x="85380" fg:w="104"/><text x="40.7790%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (101 samples, 0.05%)</title><rect x="40.5304%" y="613" width="0.0479%" height="15" fill="rgb(205,82,50)" fg:x="85383" fg:w="101"/><text x="40.7804%" y="623.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="40.7492%" y="485" width="0.0147%" height="15" fill="rgb(228,1,33)" fg:x="85844" fg:w="31"/><text x="40.9992%" y="495.50"></text></g><g><title>[libc.so.6] (229 samples, 0.11%)</title><rect x="40.6572%" y="501" width="0.1087%" height="15" fill="rgb(214,50,23)" fg:x="85650" fg:w="229"/><text x="40.9072%" y="511.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;u8&gt;,R&gt;&gt;::read (740 samples, 0.35%)</title><rect x="40.4170%" y="645" width="0.3513%" height="15" fill="rgb(210,62,9)" fg:x="85144" fg:w="740"/><text x="40.6670%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (400 samples, 0.19%)</title><rect x="40.5784%" y="629" width="0.1899%" height="15" fill="rgb(210,104,37)" fg:x="85484" fg:w="400"/><text x="40.8284%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (400 samples, 0.19%)</title><rect x="40.5784%" y="613" width="0.1899%" height="15" fill="rgb(232,104,43)" fg:x="85484" fg:w="400"/><text x="40.8284%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (400 samples, 0.19%)</title><rect x="40.5784%" y="597" width="0.1899%" height="15" fill="rgb(244,52,6)" fg:x="85484" fg:w="400"/><text x="40.8284%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (400 samples, 0.19%)</title><rect x="40.5784%" y="581" width="0.1899%" height="15" fill="rgb(211,174,52)" fg:x="85484" fg:w="400"/><text x="40.8284%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (399 samples, 0.19%)</title><rect x="40.5788%" y="565" width="0.1894%" height="15" fill="rgb(229,48,4)" fg:x="85485" fg:w="399"/><text x="40.8288%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (399 samples, 0.19%)</title><rect x="40.5788%" y="549" width="0.1894%" height="15" fill="rgb(205,155,16)" fg:x="85485" fg:w="399"/><text x="40.8288%" y="559.50"></text></g><g><title>alloc::alloc::alloc (399 samples, 0.19%)</title><rect x="40.5788%" y="533" width="0.1894%" height="15" fill="rgb(211,141,53)" fg:x="85485" fg:w="399"/><text x="40.8288%" y="543.50"></text></g><g><title>malloc (379 samples, 0.18%)</title><rect x="40.5883%" y="517" width="0.1799%" height="15" fill="rgb(240,148,11)" fg:x="85505" fg:w="379"/><text x="40.8383%" y="527.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (801 samples, 0.38%)</title><rect x="40.4170%" y="661" width="0.3802%" height="15" fill="rgb(214,45,23)" fg:x="85144" fg:w="801"/><text x="40.6670%" y="671.50"></text></g><g><title>alloc::string::String::from_utf8 (61 samples, 0.03%)</title><rect x="40.7682%" y="645" width="0.0290%" height="15" fill="rgb(248,74,26)" fg:x="85884" fg:w="61"/><text x="41.0182%" y="655.50"></text></g><g><title>core::str::converts::from_utf8 (61 samples, 0.03%)</title><rect x="40.7682%" y="629" width="0.0290%" height="15" fill="rgb(218,121,16)" fg:x="85884" fg:w="61"/><text x="41.0182%" y="639.50"></text></g><g><title>core::str::validations::run_utf8_validation (37 samples, 0.02%)</title><rect x="40.7796%" y="613" width="0.0176%" height="15" fill="rgb(218,10,47)" fg:x="85908" fg:w="37"/><text x="41.0296%" y="623.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.02%)</title><rect x="40.8314%" y="517" width="0.0218%" height="15" fill="rgb(227,99,14)" fg:x="86017" fg:w="46"/><text x="41.0814%" y="527.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (45 samples, 0.02%)</title><rect x="40.8318%" y="501" width="0.0214%" height="15" fill="rgb(229,83,46)" fg:x="86018" fg:w="45"/><text x="41.0818%" y="511.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (61 samples, 0.03%)</title><rect x="40.8755%" y="453" width="0.0290%" height="15" fill="rgb(228,25,1)" fg:x="86110" fg:w="61"/><text x="41.1255%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (227 samples, 0.11%)</title><rect x="40.7972%" y="581" width="0.1078%" height="15" fill="rgb(252,190,15)" fg:x="85945" fg:w="227"/><text x="41.0472%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (204 samples, 0.10%)</title><rect x="40.8081%" y="565" width="0.0968%" height="15" fill="rgb(213,103,51)" fg:x="85968" fg:w="204"/><text x="41.0581%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (204 samples, 0.10%)</title><rect x="40.8081%" y="549" width="0.0968%" height="15" fill="rgb(220,38,44)" fg:x="85968" fg:w="204"/><text x="41.0581%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (155 samples, 0.07%)</title><rect x="40.8314%" y="533" width="0.0736%" height="15" fill="rgb(210,45,26)" fg:x="86017" fg:w="155"/><text x="41.0814%" y="543.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (109 samples, 0.05%)</title><rect x="40.8532%" y="517" width="0.0517%" height="15" fill="rgb(205,95,48)" fg:x="86063" fg:w="109"/><text x="41.1032%" y="527.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str::{{closure}} (109 samples, 0.05%)</title><rect x="40.8532%" y="501" width="0.0517%" height="15" fill="rgb(225,179,37)" fg:x="86063" fg:w="109"/><text x="41.1032%" y="511.50"></text></g><g><title>zenoh_protocol_core::split_once (102 samples, 0.05%)</title><rect x="40.8565%" y="485" width="0.0484%" height="15" fill="rgb(230,209,3)" fg:x="86070" fg:w="102"/><text x="41.1065%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (69 samples, 0.03%)</title><rect x="40.8722%" y="469" width="0.0328%" height="15" fill="rgb(248,12,46)" fg:x="86103" fg:w="69"/><text x="41.1222%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (228 samples, 0.11%)</title><rect x="40.7972%" y="613" width="0.1082%" height="15" fill="rgb(234,18,0)" fg:x="85945" fg:w="228"/><text x="41.0472%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (228 samples, 0.11%)</title><rect x="40.7972%" y="597" width="0.1082%" height="15" fill="rgb(238,197,14)" fg:x="85945" fg:w="228"/><text x="41.0472%" y="607.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (238 samples, 0.11%)</title><rect x="40.7972%" y="645" width="0.1130%" height="15" fill="rgb(251,162,48)" fg:x="85945" fg:w="238"/><text x="41.0472%" y="655.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str (238 samples, 0.11%)</title><rect x="40.7972%" y="629" width="0.1130%" height="15" fill="rgb(237,73,42)" fg:x="85945" fg:w="238"/><text x="41.0472%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (35 samples, 0.02%)</title><rect x="40.9529%" y="565" width="0.0166%" height="15" fill="rgb(211,108,8)" fg:x="86273" fg:w="35"/><text x="41.2029%" y="575.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (1,171 samples, 0.56%)</title><rect x="40.4170%" y="869" width="0.5559%" height="15" fill="rgb(213,45,22)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,171 samples, 0.56%)</title><rect x="40.4170%" y="853" width="0.5559%" height="15" fill="rgb(252,154,5)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (1,171 samples, 0.56%)</title><rect x="40.4170%" y="837" width="0.5559%" height="15" fill="rgb(221,79,52)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,171 samples, 0.56%)</title><rect x="40.4170%" y="821" width="0.5559%" height="15" fill="rgb(229,220,36)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="831.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (1,171 samples, 0.56%)</title><rect x="40.4170%" y="805" width="0.5559%" height="15" fill="rgb(211,17,16)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="815.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (1,171 samples, 0.56%)</title><rect x="40.4170%" y="789" width="0.5559%" height="15" fill="rgb(222,55,31)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="799.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (1,171 samples, 0.56%)</title><rect x="40.4170%" y="773" width="0.5559%" height="15" fill="rgb(221,221,31)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="783.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (1,171 samples, 0.56%)</title><rect x="40.4170%" y="757" width="0.5559%" height="15" fill="rgb(227,168,26)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="767.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (1,171 samples, 0.56%)</title><rect x="40.4170%" y="741" width="0.5559%" height="15" fill="rgb(224,139,9)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="751.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (1,171 samples, 0.56%)</title><rect x="40.4170%" y="725" width="0.5559%" height="15" fill="rgb(254,172,0)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="735.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (1,171 samples, 0.56%)</title><rect x="40.4170%" y="709" width="0.5559%" height="15" fill="rgb(235,203,1)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="719.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (1,171 samples, 0.56%)</title><rect x="40.4170%" y="693" width="0.5559%" height="15" fill="rgb(216,205,24)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="703.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;zenoh_protocol_core::locators::Locator,R&gt;&gt;::read (1,171 samples, 0.56%)</title><rect x="40.4170%" y="677" width="0.5559%" height="15" fill="rgb(233,24,6)" fg:x="85144" fg:w="1171"/><text x="40.6670%" y="687.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (370 samples, 0.18%)</title><rect x="40.7972%" y="661" width="0.1756%" height="15" fill="rgb(244,110,9)" fg:x="85945" fg:w="370"/><text x="41.0472%" y="671.50"></text></g><g><title>zenoh_protocol_core::split_once (132 samples, 0.06%)</title><rect x="40.9102%" y="645" width="0.0627%" height="15" fill="rgb(239,222,42)" fg:x="86183" fg:w="132"/><text x="41.1602%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (132 samples, 0.06%)</title><rect x="40.9102%" y="629" width="0.0627%" height="15" fill="rgb(218,145,13)" fg:x="86183" fg:w="132"/><text x="41.1602%" y="639.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (132 samples, 0.06%)</title><rect x="40.9102%" y="613" width="0.0627%" height="15" fill="rgb(207,69,11)" fg:x="86183" fg:w="132"/><text x="41.1602%" y="623.50"></text></g><g><title>core::slice::memchr::memchr (97 samples, 0.05%)</title><rect x="40.9268%" y="597" width="0.0460%" height="15" fill="rgb(220,223,22)" fg:x="86218" fg:w="97"/><text x="41.1768%" y="607.50"></text></g><g><title>core::slice::memchr::memchr_general_case (89 samples, 0.04%)</title><rect x="40.9306%" y="581" width="0.0422%" height="15" fill="rgb(245,102,5)" fg:x="86226" fg:w="89"/><text x="41.1806%" y="591.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (27 samples, 0.01%)</title><rect x="40.9738%" y="725" width="0.0128%" height="15" fill="rgb(211,148,2)" fg:x="86317" fg:w="27"/><text x="41.2238%" y="735.50"></text></g><g><title>rsa::pkcs1v15::encrypt (25 samples, 0.01%)</title><rect x="40.9747%" y="709" width="0.0119%" height="15" fill="rgb(241,13,44)" fg:x="86319" fg:w="25"/><text x="41.2247%" y="719.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_transport::unicast::establishment::authenticator::pubkey::ZPubKey&gt;::read_init_syn_property_multilink (28 samples, 0.01%)</title><rect x="40.9880%" y="725" width="0.0133%" height="15" fill="rgb(219,137,21)" fg:x="86347" fg:w="28"/><text x="41.2380%" y="735.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_transport::unicast::establishment::authenticator::pubkey::ZPubKey&gt;::read_rsa_pub_key (28 samples, 0.01%)</title><rect x="40.9880%" y="709" width="0.0133%" height="15" fill="rgb(242,206,5)" fg:x="86347" fg:w="28"/><text x="41.2380%" y="719.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (70 samples, 0.03%)</title><rect x="40.9728%" y="741" width="0.0332%" height="15" fill="rgb(217,114,22)" fg:x="86315" fg:w="70"/><text x="41.2228%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (34 samples, 0.02%)</title><rect x="41.0065%" y="661" width="0.0161%" height="15" fill="rgb(253,206,42)" fg:x="86386" fg:w="34"/><text x="41.2565%" y="671.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (34 samples, 0.02%)</title><rect x="41.0065%" y="645" width="0.0161%" height="15" fill="rgb(236,102,18)" fg:x="86386" fg:w="34"/><text x="41.2565%" y="655.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::try_read_shmbuf (23 samples, 0.01%)</title><rect x="41.0118%" y="629" width="0.0109%" height="15" fill="rgb(208,59,49)" fg:x="86397" fg:w="23"/><text x="41.2618%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (41 samples, 0.02%)</title><rect x="41.0065%" y="709" width="0.0195%" height="15" fill="rgb(215,194,28)" fg:x="86386" fg:w="41"/><text x="41.2565%" y="719.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (41 samples, 0.02%)</title><rect x="41.0065%" y="693" width="0.0195%" height="15" fill="rgb(243,207,11)" fg:x="86386" fg:w="41"/><text x="41.2565%" y="703.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (41 samples, 0.02%)</title><rect x="41.0065%" y="677" width="0.0195%" height="15" fill="rgb(254,179,35)" fg:x="86386" fg:w="41"/><text x="41.2565%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (138 samples, 0.07%)</title><rect x="40.9728%" y="773" width="0.0655%" height="15" fill="rgb(235,97,3)" fg:x="86315" fg:w="138"/><text x="41.2228%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (138 samples, 0.07%)</title><rect x="40.9728%" y="757" width="0.0655%" height="15" fill="rgb(215,155,33)" fg:x="86315" fg:w="138"/><text x="41.2228%" y="767.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (68 samples, 0.03%)</title><rect x="41.0061%" y="741" width="0.0323%" height="15" fill="rgb(223,128,12)" fg:x="86385" fg:w="68"/><text x="41.2561%" y="751.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (67 samples, 0.03%)</title><rect x="41.0065%" y="725" width="0.0318%" height="15" fill="rgb(208,157,18)" fg:x="86386" fg:w="67"/><text x="41.2565%" y="735.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::try_read_shmbuf (23 samples, 0.01%)</title><rect x="41.0274%" y="709" width="0.0109%" height="15" fill="rgb(249,70,54)" fg:x="86430" fg:w="23"/><text x="41.2774%" y="719.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (143 samples, 0.07%)</title><rect x="40.9728%" y="789" width="0.0679%" height="15" fill="rgb(244,118,24)" fg:x="86315" fg:w="143"/><text x="41.2228%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (197 samples, 0.09%)</title><rect x="40.9728%" y="805" width="0.0935%" height="15" fill="rgb(211,54,0)" fg:x="86315" fg:w="197"/><text x="41.2228%" y="815.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_init::{{closure}} (27 samples, 0.01%)</title><rect x="41.0535%" y="789" width="0.0128%" height="15" fill="rgb(245,137,45)" fg:x="86485" fg:w="27"/><text x="41.3035%" y="799.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::init_transport_unicast (27 samples, 0.01%)</title><rect x="41.0535%" y="773" width="0.0128%" height="15" fill="rgb(232,154,31)" fg:x="86485" fg:w="27"/><text x="41.3035%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,381 samples, 0.66%)</title><rect x="40.4170%" y="885" width="0.6555%" height="15" fill="rgb(253,6,39)" fg:x="85144" fg:w="1381"/><text x="40.6670%" y="895.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (210 samples, 0.10%)</title><rect x="40.9728%" y="869" width="0.0997%" height="15" fill="rgb(234,183,24)" fg:x="86315" fg:w="210"/><text x="41.2228%" y="879.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (210 samples, 0.10%)</title><rect x="40.9728%" y="853" width="0.0997%" height="15" fill="rgb(252,84,40)" fg:x="86315" fg:w="210"/><text x="41.2228%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (210 samples, 0.10%)</title><rect x="40.9728%" y="837" width="0.0997%" height="15" fill="rgb(224,65,2)" fg:x="86315" fg:w="210"/><text x="41.2228%" y="847.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (210 samples, 0.10%)</title><rect x="40.9728%" y="821" width="0.0997%" height="15" fill="rgb(229,38,24)" fg:x="86315" fg:w="210"/><text x="41.2228%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (47 samples, 0.02%)</title><rect x="41.0725%" y="565" width="0.0223%" height="15" fill="rgb(218,131,50)" fg:x="86525" fg:w="47"/><text x="41.3225%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (47 samples, 0.02%)</title><rect x="41.0725%" y="549" width="0.0223%" height="15" fill="rgb(233,106,18)" fg:x="86525" fg:w="47"/><text x="41.3225%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.02%)</title><rect x="41.0725%" y="533" width="0.0223%" height="15" fill="rgb(220,216,11)" fg:x="86525" fg:w="47"/><text x="41.3225%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.02%)</title><rect x="41.0725%" y="517" width="0.0223%" height="15" fill="rgb(251,100,45)" fg:x="86525" fg:w="47"/><text x="41.3225%" y="527.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.02%)</title><rect x="41.0725%" y="501" width="0.0223%" height="15" fill="rgb(235,143,32)" fg:x="86525" fg:w="47"/><text x="41.3225%" y="511.50"></text></g><g><title>malloc (47 samples, 0.02%)</title><rect x="41.0725%" y="485" width="0.0223%" height="15" fill="rgb(248,124,34)" fg:x="86525" fg:w="47"/><text x="41.3225%" y="495.50"></text></g><g><title>[libc.so.6] (47 samples, 0.02%)</title><rect x="41.0725%" y="469" width="0.0223%" height="15" fill="rgb(225,221,4)" fg:x="86525" fg:w="47"/><text x="41.3225%" y="479.50"></text></g><g><title>polling::Poller::add (170 samples, 0.08%)</title><rect x="41.0948%" y="565" width="0.0807%" height="15" fill="rgb(242,27,43)" fg:x="86572" fg:w="170"/><text x="41.3448%" y="575.50"></text></g><g><title>polling::epoll::Poller::add (170 samples, 0.08%)</title><rect x="41.0948%" y="549" width="0.0807%" height="15" fill="rgb(227,54,8)" fg:x="86572" fg:w="170"/><text x="41.3448%" y="559.50"></text></g><g><title>polling::epoll::Poller::ctl (170 samples, 0.08%)</title><rect x="41.0948%" y="533" width="0.0807%" height="15" fill="rgb(253,139,49)" fg:x="86572" fg:w="170"/><text x="41.3448%" y="543.50"></text></g><g><title>epoll_ctl (170 samples, 0.08%)</title><rect x="41.0948%" y="517" width="0.0807%" height="15" fill="rgb(231,26,43)" fg:x="86572" fg:w="170"/><text x="41.3448%" y="527.50"></text></g><g><title>[unknown] (170 samples, 0.08%)</title><rect x="41.0948%" y="501" width="0.0807%" height="15" fill="rgb(207,121,39)" fg:x="86572" fg:w="170"/><text x="41.3448%" y="511.50"></text></g><g><title>[unknown] (170 samples, 0.08%)</title><rect x="41.0948%" y="485" width="0.0807%" height="15" fill="rgb(223,101,35)" fg:x="86572" fg:w="170"/><text x="41.3448%" y="495.50"></text></g><g><title>[unknown] (169 samples, 0.08%)</title><rect x="41.0953%" y="469" width="0.0802%" height="15" fill="rgb(232,87,23)" fg:x="86573" fg:w="169"/><text x="41.3453%" y="479.50"></text></g><g><title>[unknown] (168 samples, 0.08%)</title><rect x="41.0958%" y="453" width="0.0797%" height="15" fill="rgb(225,180,29)" fg:x="86574" fg:w="168"/><text x="41.3458%" y="463.50"></text></g><g><title>[unknown] (67 samples, 0.03%)</title><rect x="41.1437%" y="437" width="0.0318%" height="15" fill="rgb(225,25,17)" fg:x="86675" fg:w="67"/><text x="41.3937%" y="447.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="41.1622%" y="421" width="0.0133%" height="15" fill="rgb(223,8,52)" fg:x="86714" fg:w="28"/><text x="41.4122%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (250 samples, 0.12%)</title><rect x="41.0725%" y="661" width="0.1187%" height="15" fill="rgb(246,42,21)" fg:x="86525" fg:w="250"/><text x="41.3225%" y="671.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (250 samples, 0.12%)</title><rect x="41.0725%" y="645" width="0.1187%" height="15" fill="rgb(205,64,43)" fg:x="86525" fg:w="250"/><text x="41.3225%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (250 samples, 0.12%)</title><rect x="41.0725%" y="629" width="0.1187%" height="15" fill="rgb(221,160,13)" fg:x="86525" fg:w="250"/><text x="41.3225%" y="639.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (250 samples, 0.12%)</title><rect x="41.0725%" y="613" width="0.1187%" height="15" fill="rgb(239,58,35)" fg:x="86525" fg:w="250"/><text x="41.3225%" y="623.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (250 samples, 0.12%)</title><rect x="41.0725%" y="597" width="0.1187%" height="15" fill="rgb(251,26,40)" fg:x="86525" fg:w="250"/><text x="41.3225%" y="607.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (250 samples, 0.12%)</title><rect x="41.0725%" y="581" width="0.1187%" height="15" fill="rgb(247,0,4)" fg:x="86525" fg:w="250"/><text x="41.3225%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.01%)</title><rect x="41.1807%" y="565" width="0.0104%" height="15" fill="rgb(218,130,10)" fg:x="86753" fg:w="22"/><text x="41.4307%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.01%)</title><rect x="41.1807%" y="549" width="0.0104%" height="15" fill="rgb(239,32,7)" fg:x="86753" fg:w="22"/><text x="41.4307%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (22 samples, 0.01%)</title><rect x="41.1807%" y="533" width="0.0104%" height="15" fill="rgb(210,192,24)" fg:x="86753" fg:w="22"/><text x="41.4307%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (22 samples, 0.01%)</title><rect x="41.1807%" y="517" width="0.0104%" height="15" fill="rgb(226,212,17)" fg:x="86753" fg:w="22"/><text x="41.4307%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (22 samples, 0.01%)</title><rect x="41.1807%" y="501" width="0.0104%" height="15" fill="rgb(219,201,28)" fg:x="86753" fg:w="22"/><text x="41.4307%" y="511.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1205" width="0.7799%" height="15" fill="rgb(235,207,41)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1215.50"></text></g><g><title>async_global_executor::reactor::block_on (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1189" width="0.7799%" height="15" fill="rgb(241,95,54)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1199.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1173" width="0.7799%" height="15" fill="rgb(248,12,23)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1183.50"></text></g><g><title>async_io::driver::block_on (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1157" width="0.7799%" height="15" fill="rgb(228,173,4)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1141" width="0.7799%" height="15" fill="rgb(254,99,5)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1125" width="0.7799%" height="15" fill="rgb(212,184,17)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1109" width="0.7799%" height="15" fill="rgb(252,174,1)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1093" width="0.7799%" height="15" fill="rgb(241,118,51)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1077" width="0.7799%" height="15" fill="rgb(227,94,47)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1061" width="0.7799%" height="15" fill="rgb(229,104,2)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1071.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1045" width="0.7799%" height="15" fill="rgb(219,28,31)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1029" width="0.7799%" height="15" fill="rgb(233,109,36)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.78%)</title><rect x="40.4170%" y="1013" width="0.7799%" height="15" fill="rgb(246,88,11)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1023.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,643 samples, 0.78%)</title><rect x="40.4170%" y="997" width="0.7799%" height="15" fill="rgb(209,212,17)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,643 samples, 0.78%)</title><rect x="40.4170%" y="981" width="0.7799%" height="15" fill="rgb(243,59,29)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,643 samples, 0.78%)</title><rect x="40.4170%" y="965" width="0.7799%" height="15" fill="rgb(244,205,48)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,643 samples, 0.78%)</title><rect x="40.4170%" y="949" width="0.7799%" height="15" fill="rgb(227,30,6)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,643 samples, 0.78%)</title><rect x="40.4170%" y="933" width="0.7799%" height="15" fill="rgb(220,205,48)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,643 samples, 0.78%)</title><rect x="40.4170%" y="917" width="0.7799%" height="15" fill="rgb(250,94,14)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,643 samples, 0.78%)</title><rect x="40.4170%" y="901" width="0.7799%" height="15" fill="rgb(216,119,42)" fg:x="85144" fg:w="1643"/><text x="40.6670%" y="911.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (262 samples, 0.12%)</title><rect x="41.0725%" y="885" width="0.1244%" height="15" fill="rgb(232,155,0)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (262 samples, 0.12%)</title><rect x="41.0725%" y="869" width="0.1244%" height="15" fill="rgb(212,24,32)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (262 samples, 0.12%)</title><rect x="41.0725%" y="853" width="0.1244%" height="15" fill="rgb(216,69,20)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (262 samples, 0.12%)</title><rect x="41.0725%" y="837" width="0.1244%" height="15" fill="rgb(229,73,31)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="847.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (262 samples, 0.12%)</title><rect x="41.0725%" y="821" width="0.1244%" height="15" fill="rgb(224,219,20)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (262 samples, 0.12%)</title><rect x="41.0725%" y="805" width="0.1244%" height="15" fill="rgb(215,146,41)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="815.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (262 samples, 0.12%)</title><rect x="41.0725%" y="789" width="0.1244%" height="15" fill="rgb(244,71,31)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (262 samples, 0.12%)</title><rect x="41.0725%" y="773" width="0.1244%" height="15" fill="rgb(224,24,11)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="783.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (262 samples, 0.12%)</title><rect x="41.0725%" y="757" width="0.1244%" height="15" fill="rgb(229,76,15)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (262 samples, 0.12%)</title><rect x="41.0725%" y="741" width="0.1244%" height="15" fill="rgb(209,93,2)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="751.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (262 samples, 0.12%)</title><rect x="41.0725%" y="725" width="0.1244%" height="15" fill="rgb(216,200,50)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (262 samples, 0.12%)</title><rect x="41.0725%" y="709" width="0.1244%" height="15" fill="rgb(211,67,34)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (262 samples, 0.12%)</title><rect x="41.0725%" y="693" width="0.1244%" height="15" fill="rgb(225,87,47)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="703.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (262 samples, 0.12%)</title><rect x="41.0725%" y="677" width="0.1244%" height="15" fill="rgb(217,185,16)" fg:x="86525" fg:w="262"/><text x="41.3225%" y="687.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (83 samples, 0.04%)</title><rect x="41.6910%" y="629" width="0.0394%" height="15" fill="rgb(205,0,0)" fg:x="87828" fg:w="83"/><text x="41.9410%" y="639.50"></text></g><g><title>[libc.so.6] (83 samples, 0.04%)</title><rect x="41.6910%" y="613" width="0.0394%" height="15" fill="rgb(207,116,45)" fg:x="87828" fg:w="83"/><text x="41.9410%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (43 samples, 0.02%)</title><rect x="41.7304%" y="629" width="0.0204%" height="15" fill="rgb(221,156,26)" fg:x="87911" fg:w="43"/><text x="41.9804%" y="639.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (57 samples, 0.03%)</title><rect x="41.8482%" y="613" width="0.0271%" height="15" fill="rgb(213,140,4)" fg:x="88159" fg:w="57"/><text x="42.0982%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="41.8752%" y="613" width="0.0242%" height="15" fill="rgb(231,224,15)" fg:x="88216" fg:w="51"/><text x="42.1252%" y="623.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (325 samples, 0.15%)</title><rect x="41.7508%" y="629" width="0.1543%" height="15" fill="rgb(244,76,20)" fg:x="87954" fg:w="325"/><text x="42.0008%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.02%)</title><rect x="41.9051%" y="629" width="0.0176%" height="15" fill="rgb(238,117,7)" fg:x="88279" fg:w="37"/><text x="42.1551%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="41.9227%" y="629" width="0.0133%" height="15" fill="rgb(235,1,10)" fg:x="88316" fg:w="28"/><text x="42.1727%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="41.9227%" y="613" width="0.0133%" height="15" fill="rgb(216,165,6)" fg:x="88316" fg:w="28"/><text x="42.1727%" y="623.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all (50 samples, 0.02%)</title><rect x="41.9360%" y="629" width="0.0237%" height="15" fill="rgb(246,91,35)" fg:x="88344" fg:w="50"/><text x="42.1860%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (22 samples, 0.01%)</title><rect x="41.9493%" y="613" width="0.0104%" height="15" fill="rgb(228,96,24)" fg:x="88372" fg:w="22"/><text x="42.1993%" y="623.50"></text></g><g><title>[libc.so.6] (125 samples, 0.06%)</title><rect x="41.9735%" y="597" width="0.0593%" height="15" fill="rgb(254,217,53)" fg:x="88423" fg:w="125"/><text x="42.2235%" y="607.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (232 samples, 0.11%)</title><rect x="41.9607%" y="629" width="0.1101%" height="15" fill="rgb(209,60,0)" fg:x="88396" fg:w="232"/><text x="42.2107%" y="639.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (230 samples, 0.11%)</title><rect x="41.9616%" y="613" width="0.1092%" height="15" fill="rgb(250,93,26)" fg:x="88398" fg:w="230"/><text x="42.2116%" y="623.50"></text></g><g><title>async_std::utils::timer_after (80 samples, 0.04%)</title><rect x="42.0328%" y="597" width="0.0380%" height="15" fill="rgb(211,9,40)" fg:x="88548" fg:w="80"/><text x="42.2828%" y="607.50"></text></g><g><title>async_io::Timer::after (65 samples, 0.03%)</title><rect x="42.0399%" y="581" width="0.0309%" height="15" fill="rgb(242,57,20)" fg:x="88563" fg:w="65"/><text x="42.2899%" y="591.50"></text></g><g><title>std::time::Instant::now (25 samples, 0.01%)</title><rect x="42.0589%" y="565" width="0.0119%" height="15" fill="rgb(248,85,48)" fg:x="88603" fg:w="25"/><text x="42.3089%" y="575.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="42.0879%" y="597" width="0.0119%" height="15" fill="rgb(212,117,2)" fg:x="88664" fg:w="25"/><text x="42.3379%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (42 samples, 0.02%)</title><rect x="42.0850%" y="613" width="0.0199%" height="15" fill="rgb(243,19,3)" fg:x="88658" fg:w="42"/><text x="42.3350%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}}&gt;&gt;&gt; (82 samples, 0.04%)</title><rect x="42.0708%" y="629" width="0.0389%" height="15" fill="rgb(232,217,24)" fg:x="88628" fg:w="82"/><text x="42.3208%" y="639.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::as_bytes (38 samples, 0.02%)</title><rect x="42.1149%" y="629" width="0.0180%" height="15" fill="rgb(224,175,40)" fg:x="88721" fg:w="38"/><text x="42.3649%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,586 samples, 0.75%)</title><rect x="41.3844%" y="661" width="0.7529%" height="15" fill="rgb(212,162,32)" fg:x="87182" fg:w="1586"/><text x="41.6344%" y="671.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (1,575 samples, 0.75%)</title><rect x="41.3896%" y="645" width="0.7476%" height="15" fill="rgb(215,9,4)" fg:x="87193" fg:w="1575"/><text x="41.6396%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,741 samples, 0.83%)</title><rect x="41.3118%" y="693" width="0.8264%" height="15" fill="rgb(242,42,7)" fg:x="87029" fg:w="1741"/><text x="41.5618%" y="703.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (1,735 samples, 0.82%)</title><rect x="41.3146%" y="677" width="0.8236%" height="15" fill="rgb(242,184,45)" fg:x="87035" fg:w="1735"/><text x="41.5646%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,002 samples, 0.95%)</title><rect x="41.1969%" y="997" width="0.9503%" height="15" fill="rgb(228,111,51)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="1007.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (2,002 samples, 0.95%)</title><rect x="41.1969%" y="981" width="0.9503%" height="15" fill="rgb(236,147,17)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,002 samples, 0.95%)</title><rect x="41.1969%" y="965" width="0.9503%" height="15" fill="rgb(210,75,22)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,002 samples, 0.95%)</title><rect x="41.1969%" y="949" width="0.9503%" height="15" fill="rgb(217,159,45)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="959.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,002 samples, 0.95%)</title><rect x="41.1969%" y="933" width="0.9503%" height="15" fill="rgb(245,165,53)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,002 samples, 0.95%)</title><rect x="41.1969%" y="917" width="0.9503%" height="15" fill="rgb(251,190,50)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,002 samples, 0.95%)</title><rect x="41.1969%" y="901" width="0.9503%" height="15" fill="rgb(208,203,29)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,002 samples, 0.95%)</title><rect x="41.1969%" y="885" width="0.9503%" height="15" fill="rgb(207,209,35)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,002 samples, 0.95%)</title><rect x="41.1969%" y="869" width="0.9503%" height="15" fill="rgb(230,144,49)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="879.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,002 samples, 0.95%)</title><rect x="41.1969%" y="853" width="0.9503%" height="15" fill="rgb(229,31,6)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="863.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,002 samples, 0.95%)</title><rect x="41.1969%" y="837" width="0.9503%" height="15" fill="rgb(251,129,24)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,002 samples, 0.95%)</title><rect x="41.1969%" y="821" width="0.9503%" height="15" fill="rgb(235,105,15)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="831.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,002 samples, 0.95%)</title><rect x="41.1969%" y="805" width="0.9503%" height="15" fill="rgb(216,52,43)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="815.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,002 samples, 0.95%)</title><rect x="41.1969%" y="789" width="0.9503%" height="15" fill="rgb(238,144,41)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,002 samples, 0.95%)</title><rect x="41.1969%" y="773" width="0.9503%" height="15" fill="rgb(243,63,9)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,002 samples, 0.95%)</title><rect x="41.1969%" y="757" width="0.9503%" height="15" fill="rgb(246,208,1)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,002 samples, 0.95%)</title><rect x="41.1969%" y="741" width="0.9503%" height="15" fill="rgb(233,182,18)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,002 samples, 0.95%)</title><rect x="41.1969%" y="725" width="0.9503%" height="15" fill="rgb(242,224,8)" fg:x="86787" fg:w="2002"/><text x="41.4469%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,987 samples, 0.94%)</title><rect x="41.2040%" y="709" width="0.9432%" height="15" fill="rgb(243,54,37)" fg:x="86802" fg:w="1987"/><text x="41.4540%" y="719.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1205" width="0.9518%" height="15" fill="rgb(233,192,12)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1215.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1189" width="0.9518%" height="15" fill="rgb(251,192,53)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1173" width="0.9518%" height="15" fill="rgb(246,141,26)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1157" width="0.9518%" height="15" fill="rgb(239,195,19)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1167.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1141" width="0.9518%" height="15" fill="rgb(241,16,39)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1125" width="0.9518%" height="15" fill="rgb(223,13,53)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1135.50"></text></g><g><title>async_global_executor::executor::block_on (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1109" width="0.9518%" height="15" fill="rgb(214,227,0)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1093" width="0.9518%" height="15" fill="rgb(228,103,26)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1077" width="0.9518%" height="15" fill="rgb(254,177,53)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1087.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1061" width="0.9518%" height="15" fill="rgb(208,201,34)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1071.50"></text></g><g><title>async_global_executor::reactor::block_on (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1045" width="0.9518%" height="15" fill="rgb(212,39,5)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1055.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1029" width="0.9518%" height="15" fill="rgb(246,117,3)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1039.50"></text></g><g><title>async_io::driver::block_on (2,005 samples, 0.95%)</title><rect x="41.1969%" y="1013" width="0.9518%" height="15" fill="rgb(244,118,39)" fg:x="86787" fg:w="2005"/><text x="41.4469%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (34 samples, 0.02%)</title><rect x="42.1486%" y="1189" width="0.0161%" height="15" fill="rgb(241,64,10)" fg:x="88792" fg:w="34"/><text x="42.3986%" y="1199.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (151 samples, 0.07%)</title><rect x="42.2346%" y="645" width="0.0717%" height="15" fill="rgb(229,39,44)" fg:x="88973" fg:w="151"/><text x="42.4846%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (151 samples, 0.07%)</title><rect x="42.2346%" y="629" width="0.0717%" height="15" fill="rgb(230,226,3)" fg:x="88973" fg:w="151"/><text x="42.4846%" y="639.50"></text></g><g><title>async_io::reactor::Reactor::get (62 samples, 0.03%)</title><rect x="42.3062%" y="645" width="0.0294%" height="15" fill="rgb(222,13,42)" fg:x="89124" fg:w="62"/><text x="42.5562%" y="655.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 0.03%)</title><rect x="42.3062%" y="629" width="0.0294%" height="15" fill="rgb(247,180,54)" fg:x="89124" fg:w="62"/><text x="42.5562%" y="639.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (62 samples, 0.03%)</title><rect x="42.3062%" y="613" width="0.0294%" height="15" fill="rgb(205,96,16)" fg:x="89124" fg:w="62"/><text x="42.5562%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (62 samples, 0.03%)</title><rect x="42.3062%" y="597" width="0.0294%" height="15" fill="rgb(205,100,21)" fg:x="89124" fg:w="62"/><text x="42.5562%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (62 samples, 0.03%)</title><rect x="42.3062%" y="581" width="0.0294%" height="15" fill="rgb(248,51,4)" fg:x="89124" fg:w="62"/><text x="42.5562%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (62 samples, 0.03%)</title><rect x="42.3062%" y="565" width="0.0294%" height="15" fill="rgb(217,197,30)" fg:x="89124" fg:w="62"/><text x="42.5562%" y="575.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (60 samples, 0.03%)</title><rect x="42.3072%" y="549" width="0.0285%" height="15" fill="rgb(240,179,40)" fg:x="89126" fg:w="60"/><text x="42.5572%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::notify (773 samples, 0.37%)</title><rect x="42.3504%" y="629" width="0.3669%" height="15" fill="rgb(212,185,35)" fg:x="89217" fg:w="773"/><text x="42.6004%" y="639.50"></text></g><g><title>polling::Poller::notify (767 samples, 0.36%)</title><rect x="42.3532%" y="613" width="0.3641%" height="15" fill="rgb(251,222,31)" fg:x="89223" fg:w="767"/><text x="42.6032%" y="623.50"></text></g><g><title>polling::epoll::Poller::notify (241 samples, 0.11%)</title><rect x="42.6029%" y="597" width="0.1144%" height="15" fill="rgb(208,140,36)" fg:x="89749" fg:w="241"/><text x="42.8529%" y="607.50"></text></g><g><title>write (240 samples, 0.11%)</title><rect x="42.6034%" y="581" width="0.1139%" height="15" fill="rgb(220,148,1)" fg:x="89750" fg:w="240"/><text x="42.8534%" y="591.50"></text></g><g><title>[unknown] (223 samples, 0.11%)</title><rect x="42.6115%" y="565" width="0.1059%" height="15" fill="rgb(254,4,28)" fg:x="89767" fg:w="223"/><text x="42.8615%" y="575.50"></text></g><g><title>[unknown] (221 samples, 0.10%)</title><rect x="42.6124%" y="549" width="0.1049%" height="15" fill="rgb(222,185,44)" fg:x="89769" fg:w="221"/><text x="42.8624%" y="559.50"></text></g><g><title>[unknown] (219 samples, 0.10%)</title><rect x="42.6134%" y="533" width="0.1040%" height="15" fill="rgb(215,74,39)" fg:x="89771" fg:w="219"/><text x="42.8634%" y="543.50"></text></g><g><title>[unknown] (207 samples, 0.10%)</title><rect x="42.6191%" y="517" width="0.0983%" height="15" fill="rgb(247,86,4)" fg:x="89783" fg:w="207"/><text x="42.8691%" y="527.50"></text></g><g><title>[unknown] (177 samples, 0.08%)</title><rect x="42.6333%" y="501" width="0.0840%" height="15" fill="rgb(231,105,32)" fg:x="89813" fg:w="177"/><text x="42.8833%" y="511.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="42.6585%" y="485" width="0.0589%" height="15" fill="rgb(222,65,35)" fg:x="89866" fg:w="124"/><text x="42.9085%" y="495.50"></text></g><g><title>[unknown] (81 samples, 0.04%)</title><rect x="42.6789%" y="469" width="0.0384%" height="15" fill="rgb(218,145,35)" fg:x="89909" fg:w="81"/><text x="42.9289%" y="479.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="42.6926%" y="453" width="0.0247%" height="15" fill="rgb(208,7,15)" fg:x="89938" fg:w="52"/><text x="42.9426%" y="463.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="42.7064%" y="437" width="0.0109%" height="15" fill="rgb(209,83,13)" fg:x="89967" fg:w="23"/><text x="42.9564%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (23 samples, 0.01%)</title><rect x="42.7178%" y="613" width="0.0109%" height="15" fill="rgb(218,3,10)" fg:x="89991" fg:w="23"/><text x="42.9678%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (23 samples, 0.01%)</title><rect x="42.7178%" y="597" width="0.0109%" height="15" fill="rgb(211,219,4)" fg:x="89991" fg:w="23"/><text x="42.9678%" y="607.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (23 samples, 0.01%)</title><rect x="42.7178%" y="581" width="0.0109%" height="15" fill="rgb(228,194,12)" fg:x="89991" fg:w="23"/><text x="42.9678%" y="591.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (63 samples, 0.03%)</title><rect x="42.7173%" y="629" width="0.0299%" height="15" fill="rgb(210,175,7)" fg:x="89990" fg:w="63"/><text x="42.9673%" y="639.50"></text></g><g><title>__sched_yield (116 samples, 0.06%)</title><rect x="43.9335%" y="597" width="0.0551%" height="15" fill="rgb(243,132,6)" fg:x="92552" fg:w="116"/><text x="44.1835%" y="607.50"></text></g><g><title>[unknown] (115 samples, 0.05%)</title><rect x="43.9339%" y="581" width="0.0546%" height="15" fill="rgb(207,72,18)" fg:x="92553" fg:w="115"/><text x="44.1839%" y="591.50"></text></g><g><title>[unknown] (115 samples, 0.05%)</title><rect x="43.9339%" y="565" width="0.0546%" height="15" fill="rgb(236,1,18)" fg:x="92553" fg:w="115"/><text x="44.1839%" y="575.50"></text></g><g><title>[unknown] (110 samples, 0.05%)</title><rect x="43.9363%" y="549" width="0.0522%" height="15" fill="rgb(227,0,18)" fg:x="92558" fg:w="110"/><text x="44.1863%" y="559.50"></text></g><g><title>[unknown] (106 samples, 0.05%)</title><rect x="43.9382%" y="533" width="0.0503%" height="15" fill="rgb(247,37,5)" fg:x="92562" fg:w="106"/><text x="44.1882%" y="543.50"></text></g><g><title>[unknown] (90 samples, 0.04%)</title><rect x="43.9458%" y="517" width="0.0427%" height="15" fill="rgb(237,179,24)" fg:x="92578" fg:w="90"/><text x="44.1958%" y="527.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="43.9539%" y="501" width="0.0347%" height="15" fill="rgb(226,53,20)" fg:x="92595" fg:w="73"/><text x="44.2039%" y="511.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="43.9691%" y="485" width="0.0195%" height="15" fill="rgb(247,75,7)" fg:x="92627" fg:w="41"/><text x="44.2191%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (25 samples, 0.01%)</title><rect x="43.9885%" y="597" width="0.0119%" height="15" fill="rgb(233,96,12)" fg:x="92668" fg:w="25"/><text x="44.2385%" y="607.50"></text></g><g><title>core::ptr::write (25 samples, 0.01%)</title><rect x="43.9885%" y="581" width="0.0119%" height="15" fill="rgb(224,125,0)" fg:x="92668" fg:w="25"/><text x="44.2385%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (2,649 samples, 1.26%)</title><rect x="42.7472%" y="629" width="1.2575%" height="15" fill="rgb(224,92,25)" fg:x="90053" fg:w="2649"/><text x="42.9972%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (2,533 samples, 1.20%)</title><rect x="42.8023%" y="613" width="1.2024%" height="15" fill="rgb(224,42,24)" fg:x="90169" fg:w="2533"/><text x="43.0523%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (395 samples, 0.19%)</title><rect x="44.0066%" y="629" width="0.1875%" height="15" fill="rgb(234,132,49)" fg:x="92706" fg:w="395"/><text x="44.2566%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (395 samples, 0.19%)</title><rect x="44.0066%" y="613" width="0.1875%" height="15" fill="rgb(248,100,35)" fg:x="92706" fg:w="395"/><text x="44.2566%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (3,920 samples, 1.86%)</title><rect x="42.3357%" y="645" width="1.8608%" height="15" fill="rgb(239,94,40)" fg:x="89186" fg:w="3920"/><text x="42.5857%" y="655.50">a..</text></g><g><title>core::cmp::PartialOrd::ge (69 samples, 0.03%)</title><rect x="44.1969%" y="645" width="0.0328%" height="15" fill="rgb(235,139,28)" fg:x="93107" fg:w="69"/><text x="44.4469%" y="655.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (66 samples, 0.03%)</title><rect x="44.1983%" y="629" width="0.0313%" height="15" fill="rgb(217,144,7)" fg:x="93110" fg:w="66"/><text x="44.4483%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (66 samples, 0.03%)</title><rect x="44.1983%" y="613" width="0.0313%" height="15" fill="rgb(227,55,4)" fg:x="93110" fg:w="66"/><text x="44.4483%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (66 samples, 0.03%)</title><rect x="44.1983%" y="597" width="0.0313%" height="15" fill="rgb(252,82,54)" fg:x="93110" fg:w="66"/><text x="44.4483%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (61 samples, 0.03%)</title><rect x="44.2007%" y="581" width="0.0290%" height="15" fill="rgb(245,172,4)" fg:x="93115" fg:w="61"/><text x="44.4507%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (61 samples, 0.03%)</title><rect x="44.2007%" y="565" width="0.0290%" height="15" fill="rgb(207,26,27)" fg:x="93115" fg:w="61"/><text x="44.4507%" y="575.50"></text></g><g><title>clock_gettime (363 samples, 0.17%)</title><rect x="44.2544%" y="597" width="0.1723%" height="15" fill="rgb(252,98,18)" fg:x="93228" fg:w="363"/><text x="44.5044%" y="607.50"></text></g><g><title>__vdso_clock_gettime (336 samples, 0.16%)</title><rect x="44.2672%" y="581" width="0.1595%" height="15" fill="rgb(244,8,26)" fg:x="93255" fg:w="336"/><text x="44.5172%" y="591.50"></text></g><g><title>[[vdso]] (271 samples, 0.13%)</title><rect x="44.2980%" y="565" width="0.1286%" height="15" fill="rgb(237,173,45)" fg:x="93320" fg:w="271"/><text x="44.5480%" y="575.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (4,769 samples, 2.26%)</title><rect x="42.1652%" y="677" width="2.2638%" height="15" fill="rgb(208,213,49)" fg:x="88827" fg:w="4769"/><text x="42.4152%" y="687.50">&lt;..</text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (4,769 samples, 2.26%)</title><rect x="42.1652%" y="661" width="2.2638%" height="15" fill="rgb(212,122,37)" fg:x="88827" fg:w="4769"/><text x="42.4152%" y="671.50">&lt;..</text></g><g><title>std::time::Instant::now (404 samples, 0.19%)</title><rect x="44.2373%" y="645" width="0.1918%" height="15" fill="rgb(213,80,17)" fg:x="93192" fg:w="404"/><text x="44.4873%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (379 samples, 0.18%)</title><rect x="44.2491%" y="629" width="0.1799%" height="15" fill="rgb(206,210,43)" fg:x="93217" fg:w="379"/><text x="44.4991%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (379 samples, 0.18%)</title><rect x="44.2491%" y="613" width="0.1799%" height="15" fill="rgb(229,214,3)" fg:x="93217" fg:w="379"/><text x="44.4991%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.02%)</title><rect x="44.4646%" y="661" width="0.0204%" height="15" fill="rgb(235,213,29)" fg:x="93671" fg:w="43"/><text x="44.7146%" y="671.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (31 samples, 0.01%)</title><rect x="44.8686%" y="645" width="0.0147%" height="15" fill="rgb(248,135,26)" fg:x="94522" fg:w="31"/><text x="45.1186%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="44.9460%" y="629" width="0.0119%" height="15" fill="rgb(242,188,12)" fg:x="94685" fg:w="25"/><text x="45.1960%" y="639.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (210 samples, 0.10%)</title><rect x="46.1360%" y="613" width="0.0997%" height="15" fill="rgb(245,38,12)" fg:x="97192" fg:w="210"/><text x="46.3860%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="46.2357%" y="613" width="0.0247%" height="15" fill="rgb(218,42,13)" fg:x="97402" fg:w="52"/><text x="46.4857%" y="623.50"></text></g><g><title>async_std::task::sleep::sleep (42 samples, 0.02%)</title><rect x="46.2732%" y="613" width="0.0199%" height="15" fill="rgb(238,132,49)" fg:x="97481" fg:w="42"/><text x="46.5232%" y="623.50"></text></g><g><title>core::future::from_generator (23 samples, 0.01%)</title><rect x="46.2822%" y="597" width="0.0109%" height="15" fill="rgb(209,196,19)" fg:x="97500" fg:w="23"/><text x="46.5322%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::boxed::Box&lt;[zenoh_transport::common::pipeline::StageOut]&gt;&gt;&gt; (340 samples, 0.16%)</title><rect x="46.3022%" y="613" width="0.1614%" height="15" fill="rgb(244,131,22)" fg:x="97542" fg:w="340"/><text x="46.5522%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (340 samples, 0.16%)</title><rect x="46.3022%" y="597" width="0.1614%" height="15" fill="rgb(223,18,34)" fg:x="97542" fg:w="340"/><text x="46.5522%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (323 samples, 0.15%)</title><rect x="46.3102%" y="581" width="0.1533%" height="15" fill="rgb(252,124,54)" fg:x="97559" fg:w="323"/><text x="46.5602%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (323 samples, 0.15%)</title><rect x="46.3102%" y="565" width="0.1533%" height="15" fill="rgb(229,106,42)" fg:x="97559" fg:w="323"/><text x="46.5602%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::pipeline::StageIn&gt;&gt; (106 samples, 0.05%)</title><rect x="46.4636%" y="613" width="0.0503%" height="15" fill="rgb(221,129,1)" fg:x="97882" fg:w="106"/><text x="46.7136%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.05%)</title><rect x="46.4636%" y="597" width="0.0503%" height="15" fill="rgb(229,74,15)" fg:x="97882" fg:w="106"/><text x="46.7136%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (89 samples, 0.04%)</title><rect x="46.4716%" y="581" width="0.0422%" height="15" fill="rgb(210,206,50)" fg:x="97899" fg:w="89"/><text x="46.7216%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (89 samples, 0.04%)</title><rect x="46.4716%" y="565" width="0.0422%" height="15" fill="rgb(251,114,31)" fg:x="97899" fg:w="89"/><text x="46.7216%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (69 samples, 0.03%)</title><rect x="46.5139%" y="613" width="0.0328%" height="15" fill="rgb(215,225,28)" fg:x="97988" fg:w="69"/><text x="46.7639%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (69 samples, 0.03%)</title><rect x="46.5139%" y="597" width="0.0328%" height="15" fill="rgb(237,109,14)" fg:x="97988" fg:w="69"/><text x="46.7639%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Mul&lt;u32&gt;&gt;::mul (22 samples, 0.01%)</title><rect x="46.6060%" y="597" width="0.0104%" height="15" fill="rgb(230,13,37)" fg:x="98182" fg:w="22"/><text x="46.8560%" y="607.50"></text></g><g><title>core::time::&lt;impl core::ops::arith::Mul&lt;core::time::Duration&gt; for u32&gt;::mul (150 samples, 0.07%)</title><rect x="46.5466%" y="613" width="0.0712%" height="15" fill="rgb(231,40,28)" fg:x="98057" fg:w="150"/><text x="46.7966%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (535 samples, 0.25%)</title><rect x="46.6178%" y="613" width="0.2540%" height="15" fill="rgb(231,202,18)" fg:x="98207" fg:w="535"/><text x="46.8678%" y="623.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (37 samples, 0.02%)</title><rect x="46.8718%" y="613" width="0.0176%" height="15" fill="rgb(225,33,18)" fg:x="98742" fg:w="37"/><text x="47.1218%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,394 samples, 2.09%)</title><rect x="44.8833%" y="645" width="2.0858%" height="15" fill="rgb(223,64,47)" fg:x="94553" fg:w="4394"/><text x="45.1333%" y="655.50">&lt;..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (4,235 samples, 2.01%)</title><rect x="44.9588%" y="629" width="2.0103%" height="15" fill="rgb(234,114,13)" fg:x="94712" fg:w="4235"/><text x="45.2088%" y="639.50">z..</text></g><g><title>zenoh_transport::common::pipeline::StageOut::try_pull (168 samples, 0.08%)</title><rect x="46.8894%" y="613" width="0.0797%" height="15" fill="rgb(248,56,40)" fg:x="98779" fg:w="168"/><text x="47.1394%" y="623.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (168 samples, 0.08%)</title><rect x="46.8894%" y="597" width="0.0797%" height="15" fill="rgb(221,194,21)" fg:x="98779" fg:w="168"/><text x="47.1394%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (167 samples, 0.08%)</title><rect x="46.8898%" y="581" width="0.0793%" height="15" fill="rgb(242,108,46)" fg:x="98780" fg:w="167"/><text x="47.1398%" y="591.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (59 samples, 0.03%)</title><rect x="46.9691%" y="645" width="0.0280%" height="15" fill="rgb(220,106,10)" fg:x="98947" fg:w="59"/><text x="47.2191%" y="655.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (44 samples, 0.02%)</title><rect x="47.0095%" y="629" width="0.0209%" height="15" fill="rgb(211,88,4)" fg:x="99032" fg:w="44"/><text x="47.2595%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (28 samples, 0.01%)</title><rect x="47.0171%" y="613" width="0.0133%" height="15" fill="rgb(214,95,34)" fg:x="99048" fg:w="28"/><text x="47.2671%" y="623.50"></text></g><g><title>core::mem::replace (28 samples, 0.01%)</title><rect x="47.0171%" y="597" width="0.0133%" height="15" fill="rgb(250,160,33)" fg:x="99048" fg:w="28"/><text x="47.2671%" y="607.50"></text></g><g><title>core::ptr::read (28 samples, 0.01%)</title><rect x="47.0171%" y="581" width="0.0133%" height="15" fill="rgb(225,29,10)" fg:x="99048" fg:w="28"/><text x="47.2671%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (107 samples, 0.05%)</title><rect x="47.0090%" y="645" width="0.0508%" height="15" fill="rgb(224,28,30)" fg:x="99031" fg:w="107"/><text x="47.2590%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (62 samples, 0.03%)</title><rect x="47.0303%" y="629" width="0.0294%" height="15" fill="rgb(231,77,4)" fg:x="99076" fg:w="62"/><text x="47.2803%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.03%)</title><rect x="47.0303%" y="613" width="0.0294%" height="15" fill="rgb(209,63,21)" fg:x="99076" fg:w="62"/><text x="47.2803%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::pipeline::StageIn&gt;&gt; (61 samples, 0.03%)</title><rect x="47.0598%" y="645" width="0.0290%" height="15" fill="rgb(226,22,11)" fg:x="99138" fg:w="61"/><text x="47.3098%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.03%)</title><rect x="47.0598%" y="629" width="0.0290%" height="15" fill="rgb(216,82,30)" fg:x="99138" fg:w="61"/><text x="47.3098%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (52 samples, 0.02%)</title><rect x="47.0640%" y="613" width="0.0247%" height="15" fill="rgb(246,227,38)" fg:x="99147" fg:w="52"/><text x="47.3140%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (52 samples, 0.02%)</title><rect x="47.0640%" y="597" width="0.0247%" height="15" fill="rgb(251,203,53)" fg:x="99147" fg:w="52"/><text x="47.3140%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (135 samples, 0.06%)</title><rect x="47.0887%" y="645" width="0.0641%" height="15" fill="rgb(254,101,1)" fg:x="99199" fg:w="135"/><text x="47.3387%" y="655.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (29 samples, 0.01%)</title><rect x="47.3655%" y="629" width="0.0138%" height="15" fill="rgb(241,180,5)" fg:x="99782" fg:w="29"/><text x="47.6155%" y="639.50"></text></g><g><title>std::sync::poison::Flag::borrow (29 samples, 0.01%)</title><rect x="47.3655%" y="613" width="0.0138%" height="15" fill="rgb(218,168,4)" fg:x="99782" fg:w="29"/><text x="47.6155%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (479 samples, 0.23%)</title><rect x="47.1528%" y="645" width="0.2274%" height="15" fill="rgb(224,223,32)" fg:x="99334" fg:w="479"/><text x="47.4028%" y="655.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (55 samples, 0.03%)</title><rect x="47.3892%" y="645" width="0.0261%" height="15" fill="rgb(236,106,22)" fg:x="99832" fg:w="55"/><text x="47.6392%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,428 samples, 3.05%)</title><rect x="44.4290%" y="677" width="3.0513%" height="15" fill="rgb(206,121,5)" fg:x="93596" fg:w="6428"/><text x="44.6790%" y="687.50">&lt;co..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (6,310 samples, 3.00%)</title><rect x="44.4851%" y="661" width="2.9953%" height="15" fill="rgb(233,87,28)" fg:x="93714" fg:w="6310"/><text x="44.7351%" y="671.50">zen..</text></g><g><title>zenoh_transport::common::pipeline::StageOut::try_pull (137 samples, 0.07%)</title><rect x="47.4153%" y="645" width="0.0650%" height="15" fill="rgb(236,137,17)" fg:x="99887" fg:w="137"/><text x="47.6653%" y="655.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (137 samples, 0.07%)</title><rect x="47.4153%" y="629" width="0.0650%" height="15" fill="rgb(209,183,38)" fg:x="99887" fg:w="137"/><text x="47.6653%" y="639.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (137 samples, 0.07%)</title><rect x="47.4153%" y="613" width="0.0650%" height="15" fill="rgb(206,162,44)" fg:x="99887" fg:w="137"/><text x="47.6653%" y="623.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (11,228 samples, 5.33%)</title><rect x="42.1652%" y="693" width="5.3298%" height="15" fill="rgb(237,70,39)" fg:x="88827" fg:w="11228"/><text x="42.4152%" y="703.50">&lt;async_..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::refill (31 samples, 0.01%)</title><rect x="47.4803%" y="677" width="0.0147%" height="15" fill="rgb(212,176,5)" fg:x="100024" fg:w="31"/><text x="47.7303%" y="687.50"></text></g><g><title>syscall (31 samples, 0.01%)</title><rect x="47.4803%" y="661" width="0.0147%" height="15" fill="rgb(232,95,16)" fg:x="100024" fg:w="31"/><text x="47.7303%" y="671.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="47.4803%" y="645" width="0.0147%" height="15" fill="rgb(219,115,35)" fg:x="100024" fg:w="31"/><text x="47.7303%" y="655.50"></text></g><g><title>[libc.so.6] (82 samples, 0.04%)</title><rect x="47.5886%" y="549" width="0.0389%" height="15" fill="rgb(251,67,27)" fg:x="100252" fg:w="82"/><text x="47.8386%" y="559.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (5,255 samples, 2.49%)</title><rect x="47.5748%" y="597" width="2.4945%" height="15" fill="rgb(222,95,40)" fg:x="100223" fg:w="5255"/><text x="47.8248%" y="607.50">&lt;&amp;..</text></g><g><title>std::sys_common::net::TcpStream::write (5,243 samples, 2.49%)</title><rect x="47.5805%" y="581" width="2.4888%" height="15" fill="rgb(250,35,16)" fg:x="100235" fg:w="5243"/><text x="47.8305%" y="591.50">st..</text></g><g><title>__send (5,243 samples, 2.49%)</title><rect x="47.5805%" y="565" width="2.4888%" height="15" fill="rgb(224,86,44)" fg:x="100235" fg:w="5243"/><text x="47.8305%" y="575.50">__..</text></g><g><title>[unknown] (5,144 samples, 2.44%)</title><rect x="47.6275%" y="549" width="2.4418%" height="15" fill="rgb(237,53,53)" fg:x="100334" fg:w="5144"/><text x="47.8775%" y="559.50">[u..</text></g><g><title>[unknown] (5,117 samples, 2.43%)</title><rect x="47.6403%" y="533" width="2.4290%" height="15" fill="rgb(208,171,33)" fg:x="100361" fg:w="5117"/><text x="47.8903%" y="543.50">[u..</text></g><g><title>[unknown] (5,088 samples, 2.42%)</title><rect x="47.6541%" y="517" width="2.4152%" height="15" fill="rgb(222,64,27)" fg:x="100390" fg:w="5088"/><text x="47.9041%" y="527.50">[u..</text></g><g><title>[unknown] (4,960 samples, 2.35%)</title><rect x="47.7148%" y="501" width="2.3545%" height="15" fill="rgb(221,121,35)" fg:x="100518" fg:w="4960"/><text x="47.9648%" y="511.50">[..</text></g><g><title>[unknown] (4,458 samples, 2.12%)</title><rect x="47.9531%" y="485" width="2.1162%" height="15" fill="rgb(228,137,42)" fg:x="101020" fg:w="4458"/><text x="48.2031%" y="495.50">[..</text></g><g><title>[unknown] (4,325 samples, 2.05%)</title><rect x="48.0163%" y="469" width="2.0530%" height="15" fill="rgb(227,54,21)" fg:x="101153" fg:w="4325"/><text x="48.2663%" y="479.50">[..</text></g><g><title>[unknown] (3,202 samples, 1.52%)</title><rect x="48.5493%" y="453" width="1.5200%" height="15" fill="rgb(240,168,33)" fg:x="102276" fg:w="3202"/><text x="48.7993%" y="463.50"></text></g><g><title>[unknown] (2,401 samples, 1.14%)</title><rect x="48.9296%" y="437" width="1.1397%" height="15" fill="rgb(243,159,6)" fg:x="103077" fg:w="2401"/><text x="49.1796%" y="447.50"></text></g><g><title>[unknown] (1,477 samples, 0.70%)</title><rect x="49.3682%" y="421" width="0.7011%" height="15" fill="rgb(205,211,41)" fg:x="104001" fg:w="1477"/><text x="49.6182%" y="431.50"></text></g><g><title>[unknown] (963 samples, 0.46%)</title><rect x="49.6122%" y="405" width="0.4571%" height="15" fill="rgb(253,30,1)" fg:x="104515" fg:w="963"/><text x="49.8622%" y="415.50"></text></g><g><title>[unknown] (492 samples, 0.23%)</title><rect x="49.8358%" y="389" width="0.2335%" height="15" fill="rgb(226,80,18)" fg:x="104986" fg:w="492"/><text x="50.0858%" y="399.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="50.0418%" y="373" width="0.0275%" height="15" fill="rgb(253,156,46)" fg:x="105420" fg:w="58"/><text x="50.2918%" y="383.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="50.0517%" y="357" width="0.0176%" height="15" fill="rgb(248,87,27)" fg:x="105441" fg:w="37"/><text x="50.3017%" y="367.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (5,571 samples, 2.64%)</title><rect x="47.5667%" y="613" width="2.6445%" height="15" fill="rgb(227,122,2)" fg:x="100206" fg:w="5571"/><text x="47.8167%" y="623.50">&lt;&amp;..</text></g><g><title>async_io::Async&lt;T&gt;::get_ref (297 samples, 0.14%)</title><rect x="50.0703%" y="597" width="0.1410%" height="15" fill="rgb(229,94,39)" fg:x="105480" fg:w="297"/><text x="50.3203%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (297 samples, 0.14%)</title><rect x="50.0703%" y="581" width="0.1410%" height="15" fill="rgb(225,173,31)" fg:x="105480" fg:w="297"/><text x="50.3203%" y="591.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (5,997 samples, 2.85%)</title><rect x="47.5572%" y="629" width="2.8467%" height="15" fill="rgb(239,176,30)" fg:x="100186" fg:w="5997"/><text x="47.8072%" y="639.50">&lt;&amp;..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (406 samples, 0.19%)</title><rect x="50.2112%" y="613" width="0.1927%" height="15" fill="rgb(212,104,21)" fg:x="105777" fg:w="406"/><text x="50.4612%" y="623.50"></text></g><g><title>&lt;async_std::io::write::write_all::WriteAllFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,002 samples, 2.85%)</title><rect x="47.5553%" y="645" width="2.8491%" height="15" fill="rgb(240,209,40)" fg:x="100182" fg:w="6002"/><text x="47.8053%" y="655.50">&lt;a..</text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all::{{closure}} (6,116 samples, 2.90%)</title><rect x="47.5017%" y="661" width="2.9032%" height="15" fill="rgb(234,195,5)" fg:x="100069" fg:w="6116"/><text x="47.7517%" y="671.50">&lt;z..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,129 samples, 2.91%)</title><rect x="47.4979%" y="693" width="2.9094%" height="15" fill="rgb(238,213,1)" fg:x="100061" fg:w="6129"/><text x="47.7479%" y="703.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,129 samples, 2.91%)</title><rect x="47.4979%" y="677" width="2.9094%" height="15" fill="rgb(235,182,54)" fg:x="100061" fg:w="6129"/><text x="47.7479%" y="687.50">&lt;c..</text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all (197 samples, 0.09%)</title><rect x="50.4073%" y="693" width="0.0935%" height="15" fill="rgb(229,50,46)" fg:x="106190" fg:w="197"/><text x="50.6573%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (197 samples, 0.09%)</title><rect x="50.4073%" y="677" width="0.0935%" height="15" fill="rgb(219,145,13)" fg:x="106190" fg:w="197"/><text x="50.6573%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (197 samples, 0.09%)</title><rect x="50.4073%" y="661" width="0.0935%" height="15" fill="rgb(220,226,10)" fg:x="106190" fg:w="197"/><text x="50.6573%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (197 samples, 0.09%)</title><rect x="50.4073%" y="645" width="0.0935%" height="15" fill="rgb(248,47,30)" fg:x="106190" fg:w="197"/><text x="50.6573%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (197 samples, 0.09%)</title><rect x="50.4073%" y="629" width="0.0935%" height="15" fill="rgb(231,209,44)" fg:x="106190" fg:w="197"/><text x="50.6573%" y="639.50"></text></g><g><title>alloc::alloc::alloc (197 samples, 0.09%)</title><rect x="50.4073%" y="613" width="0.0935%" height="15" fill="rgb(209,80,30)" fg:x="106190" fg:w="197"/><text x="50.6573%" y="623.50"></text></g><g><title>malloc (197 samples, 0.09%)</title><rect x="50.4073%" y="597" width="0.0935%" height="15" fill="rgb(232,9,14)" fg:x="106190" fg:w="197"/><text x="50.6573%" y="607.50"></text></g><g><title>clock_gettime (88 samples, 0.04%)</title><rect x="50.5013%" y="581" width="0.0418%" height="15" fill="rgb(243,91,43)" fg:x="106388" fg:w="88"/><text x="50.7513%" y="591.50"></text></g><g><title>__vdso_clock_gettime (67 samples, 0.03%)</title><rect x="50.5112%" y="565" width="0.0318%" height="15" fill="rgb(231,90,52)" fg:x="106409" fg:w="67"/><text x="50.7612%" y="575.50"></text></g><g><title>[[vdso]] (38 samples, 0.02%)</title><rect x="50.5250%" y="549" width="0.0180%" height="15" fill="rgb(253,192,44)" fg:x="106438" fg:w="38"/><text x="50.7750%" y="559.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (90 samples, 0.04%)</title><rect x="50.5008%" y="693" width="0.0427%" height="15" fill="rgb(241,66,31)" fg:x="106387" fg:w="90"/><text x="50.7508%" y="703.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (90 samples, 0.04%)</title><rect x="50.5008%" y="677" width="0.0427%" height="15" fill="rgb(235,81,37)" fg:x="106387" fg:w="90"/><text x="50.7508%" y="687.50"></text></g><g><title>async_std::utils::timer_after (90 samples, 0.04%)</title><rect x="50.5008%" y="661" width="0.0427%" height="15" fill="rgb(223,221,9)" fg:x="106387" fg:w="90"/><text x="50.7508%" y="671.50"></text></g><g><title>async_io::Timer::after (90 samples, 0.04%)</title><rect x="50.5008%" y="645" width="0.0427%" height="15" fill="rgb(242,180,7)" fg:x="106387" fg:w="90"/><text x="50.7508%" y="655.50"></text></g><g><title>std::time::Instant::now (90 samples, 0.04%)</title><rect x="50.5008%" y="629" width="0.0427%" height="15" fill="rgb(243,78,19)" fg:x="106387" fg:w="90"/><text x="50.7508%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (90 samples, 0.04%)</title><rect x="50.5008%" y="613" width="0.0427%" height="15" fill="rgb(233,23,17)" fg:x="106387" fg:w="90"/><text x="50.7508%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (90 samples, 0.04%)</title><rect x="50.5008%" y="597" width="0.0427%" height="15" fill="rgb(252,122,45)" fg:x="106387" fg:w="90"/><text x="50.7508%" y="607.50"></text></g><g><title>async_io::reactor::Reactor::get (46 samples, 0.02%)</title><rect x="50.5725%" y="645" width="0.0218%" height="15" fill="rgb(247,108,20)" fg:x="106538" fg:w="46"/><text x="50.8225%" y="655.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (46 samples, 0.02%)</title><rect x="50.5725%" y="629" width="0.0218%" height="15" fill="rgb(235,84,21)" fg:x="106538" fg:w="46"/><text x="50.8225%" y="639.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (46 samples, 0.02%)</title><rect x="50.5725%" y="613" width="0.0218%" height="15" fill="rgb(247,129,10)" fg:x="106538" fg:w="46"/><text x="50.8225%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (46 samples, 0.02%)</title><rect x="50.5725%" y="597" width="0.0218%" height="15" fill="rgb(208,173,14)" fg:x="106538" fg:w="46"/><text x="50.8225%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (46 samples, 0.02%)</title><rect x="50.5725%" y="581" width="0.0218%" height="15" fill="rgb(236,31,38)" fg:x="106538" fg:w="46"/><text x="50.8225%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (46 samples, 0.02%)</title><rect x="50.5725%" y="565" width="0.0218%" height="15" fill="rgb(232,65,17)" fg:x="106538" fg:w="46"/><text x="50.8225%" y="575.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (46 samples, 0.02%)</title><rect x="50.5725%" y="549" width="0.0218%" height="15" fill="rgb(224,45,49)" fg:x="106538" fg:w="46"/><text x="50.8225%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (41 samples, 0.02%)</title><rect x="50.6290%" y="629" width="0.0195%" height="15" fill="rgb(225,2,53)" fg:x="106657" fg:w="41"/><text x="50.8790%" y="639.50"></text></g><g><title>__sched_yield (214 samples, 0.10%)</title><rect x="52.3867%" y="597" width="0.1016%" height="15" fill="rgb(248,210,53)" fg:x="110360" fg:w="214"/><text x="52.6367%" y="607.50"></text></g><g><title>[unknown] (206 samples, 0.10%)</title><rect x="52.3905%" y="581" width="0.0978%" height="15" fill="rgb(211,1,30)" fg:x="110368" fg:w="206"/><text x="52.6405%" y="591.50"></text></g><g><title>[unknown] (203 samples, 0.10%)</title><rect x="52.3920%" y="565" width="0.0964%" height="15" fill="rgb(224,96,15)" fg:x="110371" fg:w="203"/><text x="52.6420%" y="575.50"></text></g><g><title>[unknown] (200 samples, 0.09%)</title><rect x="52.3934%" y="549" width="0.0949%" height="15" fill="rgb(252,45,11)" fg:x="110374" fg:w="200"/><text x="52.6434%" y="559.50"></text></g><g><title>[unknown] (194 samples, 0.09%)</title><rect x="52.3962%" y="533" width="0.0921%" height="15" fill="rgb(220,125,38)" fg:x="110380" fg:w="194"/><text x="52.6462%" y="543.50"></text></g><g><title>[unknown] (176 samples, 0.08%)</title><rect x="52.4048%" y="517" width="0.0835%" height="15" fill="rgb(243,161,33)" fg:x="110398" fg:w="176"/><text x="52.6548%" y="527.50"></text></g><g><title>[unknown] (139 samples, 0.07%)</title><rect x="52.4223%" y="501" width="0.0660%" height="15" fill="rgb(248,197,34)" fg:x="110435" fg:w="139"/><text x="52.6723%" y="511.50"></text></g><g><title>[unknown] (88 samples, 0.04%)</title><rect x="52.4465%" y="485" width="0.0418%" height="15" fill="rgb(228,165,23)" fg:x="110486" fg:w="88"/><text x="52.6965%" y="495.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="52.4717%" y="469" width="0.0166%" height="15" fill="rgb(236,94,38)" fg:x="110539" fg:w="35"/><text x="52.7217%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (52 samples, 0.02%)</title><rect x="52.4883%" y="597" width="0.0247%" height="15" fill="rgb(220,13,23)" fg:x="110574" fg:w="52"/><text x="52.7383%" y="607.50"></text></g><g><title>core::ptr::write (52 samples, 0.02%)</title><rect x="52.4883%" y="581" width="0.0247%" height="15" fill="rgb(234,26,39)" fg:x="110574" fg:w="52"/><text x="52.7383%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (3,934 samples, 1.87%)</title><rect x="50.6484%" y="629" width="1.8674%" height="15" fill="rgb(205,117,44)" fg:x="106698" fg:w="3934"/><text x="50.8984%" y="639.50">c..</text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (3,607 samples, 1.71%)</title><rect x="50.8036%" y="613" width="1.7122%" height="15" fill="rgb(250,42,2)" fg:x="107025" fg:w="3607"/><text x="51.0536%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (4,057 samples, 1.93%)</title><rect x="50.5943%" y="645" width="1.9258%" height="15" fill="rgb(223,83,14)" fg:x="106584" fg:w="4057"/><text x="50.8443%" y="655.50">a..</text></g><g><title>core::option::Option&lt;T&gt;::take (84 samples, 0.04%)</title><rect x="52.5201%" y="645" width="0.0399%" height="15" fill="rgb(241,147,50)" fg:x="110641" fg:w="84"/><text x="52.7701%" y="655.50"></text></g><g><title>core::mem::replace (84 samples, 0.04%)</title><rect x="52.5201%" y="629" width="0.0399%" height="15" fill="rgb(218,90,6)" fg:x="110641" fg:w="84"/><text x="52.7701%" y="639.50"></text></g><g><title>core::ptr::read (81 samples, 0.04%)</title><rect x="52.5216%" y="613" width="0.0384%" height="15" fill="rgb(210,191,5)" fg:x="110644" fg:w="81"/><text x="52.7716%" y="623.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (4,250 samples, 2.02%)</title><rect x="50.5435%" y="661" width="2.0174%" height="15" fill="rgb(225,139,19)" fg:x="106477" fg:w="4250"/><text x="50.7935%" y="671.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (4,412 samples, 2.09%)</title><rect x="50.5435%" y="677" width="2.0943%" height="15" fill="rgb(210,1,33)" fg:x="106477" fg:w="4412"/><text x="50.7935%" y="687.50">c..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (162 samples, 0.08%)</title><rect x="52.5610%" y="661" width="0.0769%" height="15" fill="rgb(213,50,3)" fg:x="110727" fg:w="162"/><text x="52.8110%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}}&gt;&gt;&gt; (4,415 samples, 2.10%)</title><rect x="50.5435%" y="693" width="2.0958%" height="15" fill="rgb(234,227,4)" fg:x="106477" fg:w="4415"/><text x="50.7935%" y="703.50">c..</text></g><g><title>std::sync::condvar::Condvar::notify_one (86 samples, 0.04%)</title><rect x="52.6526%" y="677" width="0.0408%" height="15" fill="rgb(246,63,5)" fg:x="110920" fg:w="86"/><text x="52.9026%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (86 samples, 0.04%)</title><rect x="52.6526%" y="661" width="0.0408%" height="15" fill="rgb(245,136,27)" fg:x="110920" fg:w="86"/><text x="52.9026%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (86 samples, 0.04%)</title><rect x="52.6526%" y="645" width="0.0408%" height="15" fill="rgb(247,199,27)" fg:x="110920" fg:w="86"/><text x="52.9026%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wake (84 samples, 0.04%)</title><rect x="52.6535%" y="629" width="0.0399%" height="15" fill="rgb(252,158,49)" fg:x="110922" fg:w="84"/><text x="52.9035%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (23 samples, 0.01%)</title><rect x="52.6934%" y="677" width="0.0109%" height="15" fill="rgb(254,73,1)" fg:x="111006" fg:w="23"/><text x="52.9434%" y="687.50"></text></g><g><title>syscall (353 samples, 0.17%)</title><rect x="52.7043%" y="677" width="0.1676%" height="15" fill="rgb(248,93,19)" fg:x="111029" fg:w="353"/><text x="52.9543%" y="687.50"></text></g><g><title>[unknown] (339 samples, 0.16%)</title><rect x="52.7110%" y="661" width="0.1609%" height="15" fill="rgb(206,67,5)" fg:x="111043" fg:w="339"/><text x="52.9610%" y="671.50"></text></g><g><title>[unknown] (327 samples, 0.16%)</title><rect x="52.7166%" y="645" width="0.1552%" height="15" fill="rgb(209,210,4)" fg:x="111055" fg:w="327"/><text x="52.9666%" y="655.50"></text></g><g><title>[unknown] (325 samples, 0.15%)</title><rect x="52.7176%" y="629" width="0.1543%" height="15" fill="rgb(214,185,36)" fg:x="111057" fg:w="325"/><text x="52.9676%" y="639.50"></text></g><g><title>[unknown] (302 samples, 0.14%)</title><rect x="52.7285%" y="613" width="0.1434%" height="15" fill="rgb(233,191,26)" fg:x="111080" fg:w="302"/><text x="52.9785%" y="623.50"></text></g><g><title>[unknown] (253 samples, 0.12%)</title><rect x="52.7518%" y="597" width="0.1201%" height="15" fill="rgb(248,94,17)" fg:x="111129" fg:w="253"/><text x="53.0018%" y="607.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="52.8396%" y="581" width="0.0323%" height="15" fill="rgb(250,64,4)" fg:x="111314" fg:w="68"/><text x="53.0896%" y="591.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="52.8586%" y="565" width="0.0133%" height="15" fill="rgb(218,41,53)" fg:x="111354" fg:w="28"/><text x="53.1086%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,603 samples, 10.73%)</title><rect x="42.1648%" y="725" width="10.7294%" height="15" fill="rgb(251,176,28)" fg:x="88826" fg:w="22603"/><text x="42.4148%" y="735.50">&lt;core::future::f..</text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (22,603 samples, 10.73%)</title><rect x="42.1648%" y="709" width="10.7294%" height="15" fill="rgb(247,22,9)" fg:x="88826" fg:w="22603"/><text x="42.4148%" y="719.50">zenoh_transport:..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::refill (526 samples, 0.25%)</title><rect x="52.6445%" y="693" width="0.2497%" height="15" fill="rgb(218,201,14)" fg:x="110903" fg:w="526"/><text x="52.8945%" y="703.50"></text></g><g><title>zenoh_transport::common::pipeline::StageRefill::push (47 samples, 0.02%)</title><rect x="52.8719%" y="677" width="0.0223%" height="15" fill="rgb(218,94,10)" fg:x="111382" fg:w="47"/><text x="53.1219%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,604 samples, 10.73%)</title><rect x="42.1648%" y="789" width="10.7299%" height="15" fill="rgb(222,183,52)" fg:x="88826" fg:w="22604"/><text x="42.4148%" y="799.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (22,604 samples, 10.73%)</title><rect x="42.1648%" y="773" width="10.7299%" height="15" fill="rgb(242,140,25)" fg:x="88826" fg:w="22604"/><text x="42.4148%" y="783.50">async_executor::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,604 samples, 10.73%)</title><rect x="42.1648%" y="757" width="10.7299%" height="15" fill="rgb(235,197,38)" fg:x="88826" fg:w="22604"/><text x="42.4148%" y="767.50">&lt;core::future::f..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (22,604 samples, 10.73%)</title><rect x="42.1648%" y="741" width="10.7299%" height="15" fill="rgb(237,136,15)" fg:x="88826" fg:w="22604"/><text x="42.4148%" y="751.50">zenoh_transport:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,605 samples, 10.73%)</title><rect x="42.1648%" y="1061" width="10.7304%" height="15" fill="rgb(223,44,49)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="1071.50">&lt;core::future::f..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (22,605 samples, 10.73%)</title><rect x="42.1648%" y="1045" width="10.7304%" height="15" fill="rgb(227,71,15)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="1055.50">async_executor::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,605 samples, 10.73%)</title><rect x="42.1648%" y="1029" width="10.7304%" height="15" fill="rgb(225,153,20)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="1039.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}} (22,605 samples, 10.73%)</title><rect x="42.1648%" y="1013" width="10.7304%" height="15" fill="rgb(210,190,26)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="1023.50">async_executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (22,605 samples, 10.73%)</title><rect x="42.1648%" y="997" width="10.7304%" height="15" fill="rgb(223,147,5)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="1007.50">&lt;futures_lite::f..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (22,605 samples, 10.73%)</title><rect x="42.1648%" y="981" width="10.7304%" height="15" fill="rgb(207,14,23)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="991.50">&lt;async_std::task..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (22,605 samples, 10.73%)</title><rect x="42.1648%" y="965" width="10.7304%" height="15" fill="rgb(211,195,53)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="975.50">async_std::task:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22,605 samples, 10.73%)</title><rect x="42.1648%" y="949" width="10.7304%" height="15" fill="rgb(237,75,46)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="959.50">std::thread::loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22,605 samples, 10.73%)</title><rect x="42.1648%" y="933" width="10.7304%" height="15" fill="rgb(254,55,14)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="943.50">std::thread::loc..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (22,605 samples, 10.73%)</title><rect x="42.1648%" y="917" width="10.7304%" height="15" fill="rgb(230,185,30)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="927.50">async_std::task:..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (22,605 samples, 10.73%)</title><rect x="42.1648%" y="901" width="10.7304%" height="15" fill="rgb(220,14,11)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="911.50">&lt;async_std::task..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,605 samples, 10.73%)</title><rect x="42.1648%" y="885" width="10.7304%" height="15" fill="rgb(215,169,44)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="895.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}} (22,605 samples, 10.73%)</title><rect x="42.1648%" y="869" width="10.7304%" height="15" fill="rgb(253,203,20)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="879.50">async_executor::..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (22,605 samples, 10.73%)</title><rect x="42.1648%" y="853" width="10.7304%" height="15" fill="rgb(229,225,17)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="863.50">&lt;futures_lite::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (22,605 samples, 10.73%)</title><rect x="42.1648%" y="837" width="10.7304%" height="15" fill="rgb(236,76,26)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="847.50">&lt;core::future::f..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (22,605 samples, 10.73%)</title><rect x="42.1648%" y="821" width="10.7304%" height="15" fill="rgb(234,15,30)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="831.50">async_executor::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (22,605 samples, 10.73%)</title><rect x="42.1648%" y="805" width="10.7304%" height="15" fill="rgb(211,113,48)" fg:x="88826" fg:w="22605"/><text x="42.4148%" y="815.50">async_task::raw:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (52,050 samples, 24.71%)</title><rect x="28.2056%" y="1237" width="24.7076%" height="15" fill="rgb(221,31,36)" fg:x="59419" fg:w="52050"/><text x="28.4556%" y="1247.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (52,050 samples, 24.71%)</title><rect x="28.2056%" y="1221" width="24.7076%" height="15" fill="rgb(215,118,52)" fg:x="59419" fg:w="52050"/><text x="28.4556%" y="1231.50">std::thread::local::LocalKey&lt;T&gt;::try_wi..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (22,677 samples, 10.76%)</title><rect x="42.1486%" y="1205" width="10.7645%" height="15" fill="rgb(241,151,27)" fg:x="88792" fg:w="22677"/><text x="42.3986%" y="1215.50">async_std::task:..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (22,643 samples, 10.75%)</title><rect x="42.1648%" y="1189" width="10.7484%" height="15" fill="rgb(253,51,3)" fg:x="88826" fg:w="22643"/><text x="42.4148%" y="1199.50">async_std::task:..</text></g><g><title>async_global_executor::executor::block_on (22,643 samples, 10.75%)</title><rect x="42.1648%" y="1173" width="10.7484%" height="15" fill="rgb(216,201,24)" fg:x="88826" fg:w="22643"/><text x="42.4148%" y="1183.50">async_global_exe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22,643 samples, 10.75%)</title><rect x="42.1648%" y="1157" width="10.7484%" height="15" fill="rgb(231,107,4)" fg:x="88826" fg:w="22643"/><text x="42.4148%" y="1167.50">std::thread::loc..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22,643 samples, 10.75%)</title><rect x="42.1648%" y="1141" width="10.7484%" height="15" fill="rgb(243,97,54)" fg:x="88826" fg:w="22643"/><text x="42.4148%" y="1151.50">std::thread::loc..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (22,643 samples, 10.75%)</title><rect x="42.1648%" y="1125" width="10.7484%" height="15" fill="rgb(221,32,51)" fg:x="88826" fg:w="22643"/><text x="42.4148%" y="1135.50">async_global_exe..</text></g><g><title>async_global_executor::reactor::block_on (22,643 samples, 10.75%)</title><rect x="42.1648%" y="1109" width="10.7484%" height="15" fill="rgb(218,171,35)" fg:x="88826" fg:w="22643"/><text x="42.4148%" y="1119.50">async_global_exe..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (22,643 samples, 10.75%)</title><rect x="42.1648%" y="1093" width="10.7484%" height="15" fill="rgb(214,20,53)" fg:x="88826" fg:w="22643"/><text x="42.4148%" y="1103.50">async_global_exe..</text></g><g><title>async_io::driver::block_on (22,643 samples, 10.75%)</title><rect x="42.1648%" y="1077" width="10.7484%" height="15" fill="rgb(239,9,52)" fg:x="88826" fg:w="22643"/><text x="42.4148%" y="1087.50">async_io::driver..</text></g><g><title>parking::Parker::park (38 samples, 0.02%)</title><rect x="52.8951%" y="1061" width="0.0180%" height="15" fill="rgb(215,114,45)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="1071.50"></text></g><g><title>parking::Inner::park (38 samples, 0.02%)</title><rect x="52.8951%" y="1045" width="0.0180%" height="15" fill="rgb(208,118,9)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="1055.50"></text></g><g><title>std::sync::condvar::Condvar::wait (38 samples, 0.02%)</title><rect x="52.8951%" y="1029" width="0.0180%" height="15" fill="rgb(235,7,39)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="1039.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (38 samples, 0.02%)</title><rect x="52.8951%" y="1013" width="0.0180%" height="15" fill="rgb(243,225,15)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="1023.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (38 samples, 0.02%)</title><rect x="52.8951%" y="997" width="0.0180%" height="15" fill="rgb(225,216,18)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="1007.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (38 samples, 0.02%)</title><rect x="52.8951%" y="981" width="0.0180%" height="15" fill="rgb(233,36,38)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="991.50"></text></g><g><title>std::sys::unix::futex::futex_wait (38 samples, 0.02%)</title><rect x="52.8951%" y="965" width="0.0180%" height="15" fill="rgb(239,88,23)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.02%)</title><rect x="52.8951%" y="949" width="0.0180%" height="15" fill="rgb(219,181,35)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="959.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (38 samples, 0.02%)</title><rect x="52.8951%" y="933" width="0.0180%" height="15" fill="rgb(215,18,46)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.02%)</title><rect x="52.8951%" y="917" width="0.0180%" height="15" fill="rgb(241,38,11)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="927.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (38 samples, 0.02%)</title><rect x="52.8951%" y="901" width="0.0180%" height="15" fill="rgb(248,169,45)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.02%)</title><rect x="52.8951%" y="885" width="0.0180%" height="15" fill="rgb(239,50,49)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="895.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (38 samples, 0.02%)</title><rect x="52.8951%" y="869" width="0.0180%" height="15" fill="rgb(231,96,31)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="879.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (38 samples, 0.02%)</title><rect x="52.8951%" y="853" width="0.0180%" height="15" fill="rgb(224,193,37)" fg:x="111431" fg:w="38"/><text x="53.1451%" y="863.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::refill (29 samples, 0.01%)</title><rect x="52.8994%" y="837" width="0.0138%" height="15" fill="rgb(227,153,50)" fg:x="111440" fg:w="29"/><text x="53.1494%" y="847.50"></text></g><g><title>syscall (29 samples, 0.01%)</title><rect x="52.8994%" y="821" width="0.0138%" height="15" fill="rgb(249,228,3)" fg:x="111440" fg:w="29"/><text x="53.1494%" y="831.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="52.8994%" y="805" width="0.0138%" height="15" fill="rgb(219,164,43)" fg:x="111440" fg:w="29"/><text x="53.1494%" y="815.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="52.9165%" y="997" width="0.0104%" height="15" fill="rgb(216,45,41)" fg:x="111476" fg:w="22"/><text x="53.1665%" y="1007.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="52.9269%" y="997" width="0.0104%" height="15" fill="rgb(210,226,51)" fg:x="111498" fg:w="22"/><text x="53.1769%" y="1007.50"></text></g><g><title>recvmsg (50 samples, 0.02%)</title><rect x="52.9374%" y="997" width="0.0237%" height="15" fill="rgb(209,117,49)" fg:x="111520" fg:w="50"/><text x="53.1874%" y="1007.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="52.9374%" y="981" width="0.0237%" height="15" fill="rgb(206,196,24)" fg:x="111520" fg:w="50"/><text x="53.1874%" y="991.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="52.9374%" y="965" width="0.0237%" height="15" fill="rgb(253,218,3)" fg:x="111520" fg:w="50"/><text x="53.1874%" y="975.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="52.9374%" y="949" width="0.0237%" height="15" fill="rgb(252,166,2)" fg:x="111520" fg:w="50"/><text x="53.1874%" y="959.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="52.9379%" y="933" width="0.0233%" height="15" fill="rgb(236,218,26)" fg:x="111521" fg:w="49"/><text x="53.1879%" y="943.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="52.9398%" y="917" width="0.0214%" height="15" fill="rgb(254,84,19)" fg:x="111525" fg:w="45"/><text x="53.1898%" y="927.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="52.9426%" y="901" width="0.0185%" height="15" fill="rgb(219,137,29)" fg:x="111531" fg:w="39"/><text x="53.1926%" y="911.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="52.9440%" y="885" width="0.0171%" height="15" fill="rgb(227,47,52)" fg:x="111534" fg:w="36"/><text x="53.1940%" y="895.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="52.9473%" y="869" width="0.0138%" height="15" fill="rgb(229,167,24)" fg:x="111541" fg:w="29"/><text x="53.1973%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (110 samples, 0.05%)</title><rect x="52.9160%" y="1221" width="0.0522%" height="15" fill="rgb(233,164,1)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (110 samples, 0.05%)</title><rect x="52.9160%" y="1205" width="0.0522%" height="15" fill="rgb(218,88,48)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (110 samples, 0.05%)</title><rect x="52.9160%" y="1189" width="0.0522%" height="15" fill="rgb(226,214,24)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (110 samples, 0.05%)</title><rect x="52.9160%" y="1173" width="0.0522%" height="15" fill="rgb(233,29,12)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (110 samples, 0.05%)</title><rect x="52.9160%" y="1157" width="0.0522%" height="15" fill="rgb(219,120,34)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (110 samples, 0.05%)</title><rect x="52.9160%" y="1141" width="0.0522%" height="15" fill="rgb(226,78,44)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1151.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (110 samples, 0.05%)</title><rect x="52.9160%" y="1125" width="0.0522%" height="15" fill="rgb(240,15,48)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1135.50"></text></g><g><title>zenoh_util::net::get_local_addresses (110 samples, 0.05%)</title><rect x="52.9160%" y="1109" width="0.0522%" height="15" fill="rgb(253,176,7)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1119.50"></text></g><g><title>pnet_datalink::interfaces (110 samples, 0.05%)</title><rect x="52.9160%" y="1093" width="0.0522%" height="15" fill="rgb(206,166,28)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1103.50"></text></g><g><title>pnet_datalink::backend::interfaces (110 samples, 0.05%)</title><rect x="52.9160%" y="1077" width="0.0522%" height="15" fill="rgb(241,53,51)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (110 samples, 0.05%)</title><rect x="52.9160%" y="1061" width="0.0522%" height="15" fill="rgb(249,112,30)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1071.50"></text></g><g><title>getifaddrs (110 samples, 0.05%)</title><rect x="52.9160%" y="1045" width="0.0522%" height="15" fill="rgb(217,85,30)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1055.50"></text></g><g><title>[libc.so.6] (110 samples, 0.05%)</title><rect x="52.9160%" y="1029" width="0.0522%" height="15" fill="rgb(233,49,7)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1039.50"></text></g><g><title>[libc.so.6] (110 samples, 0.05%)</title><rect x="52.9160%" y="1013" width="0.0522%" height="15" fill="rgb(234,109,9)" fg:x="111475" fg:w="110"/><text x="53.1660%" y="1023.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="52.9754%" y="949" width="0.0195%" height="15" fill="rgb(253,95,22)" fg:x="111600" fg:w="41"/><text x="53.2254%" y="959.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="52.9754%" y="933" width="0.0195%" height="15" fill="rgb(233,176,25)" fg:x="111600" fg:w="41"/><text x="53.2254%" y="943.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="52.9758%" y="917" width="0.0190%" height="15" fill="rgb(236,33,39)" fg:x="111601" fg:w="40"/><text x="53.2258%" y="927.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="52.9763%" y="901" width="0.0185%" height="15" fill="rgb(223,226,42)" fg:x="111602" fg:w="39"/><text x="53.2263%" y="911.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="52.9787%" y="885" width="0.0161%" height="15" fill="rgb(216,99,33)" fg:x="111607" fg:w="34"/><text x="53.2287%" y="895.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="52.9825%" y="869" width="0.0123%" height="15" fill="rgb(235,84,23)" fg:x="111615" fg:w="26"/><text x="53.2325%" y="879.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="52.9844%" y="853" width="0.0104%" height="15" fill="rgb(232,2,27)" fg:x="111619" fg:w="22"/><text x="53.2344%" y="863.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (201 samples, 0.10%)</title><rect x="52.9160%" y="1237" width="0.0954%" height="15" fill="rgb(241,23,22)" fg:x="111475" fg:w="201"/><text x="53.1660%" y="1247.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (91 samples, 0.04%)</title><rect x="52.9682%" y="1221" width="0.0432%" height="15" fill="rgb(211,73,27)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (91 samples, 0.04%)</title><rect x="52.9682%" y="1205" width="0.0432%" height="15" fill="rgb(235,109,49)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (91 samples, 0.04%)</title><rect x="52.9682%" y="1189" width="0.0432%" height="15" fill="rgb(230,99,29)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (91 samples, 0.04%)</title><rect x="52.9682%" y="1173" width="0.0432%" height="15" fill="rgb(245,199,7)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (91 samples, 0.04%)</title><rect x="52.9682%" y="1157" width="0.0432%" height="15" fill="rgb(217,179,10)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (91 samples, 0.04%)</title><rect x="52.9682%" y="1141" width="0.0432%" height="15" fill="rgb(254,99,47)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1151.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (91 samples, 0.04%)</title><rect x="52.9682%" y="1125" width="0.0432%" height="15" fill="rgb(251,121,7)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1135.50"></text></g><g><title>zenoh_util::net::get_local_addresses (91 samples, 0.04%)</title><rect x="52.9682%" y="1109" width="0.0432%" height="15" fill="rgb(250,177,26)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1119.50"></text></g><g><title>pnet_datalink::interfaces (91 samples, 0.04%)</title><rect x="52.9682%" y="1093" width="0.0432%" height="15" fill="rgb(232,88,15)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1103.50"></text></g><g><title>pnet_datalink::backend::interfaces (91 samples, 0.04%)</title><rect x="52.9682%" y="1077" width="0.0432%" height="15" fill="rgb(251,54,54)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (91 samples, 0.04%)</title><rect x="52.9682%" y="1061" width="0.0432%" height="15" fill="rgb(208,177,15)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1071.50"></text></g><g><title>getifaddrs (91 samples, 0.04%)</title><rect x="52.9682%" y="1045" width="0.0432%" height="15" fill="rgb(205,97,32)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1055.50"></text></g><g><title>[libc.so.6] (91 samples, 0.04%)</title><rect x="52.9682%" y="1029" width="0.0432%" height="15" fill="rgb(217,192,13)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1039.50"></text></g><g><title>[libc.so.6] (91 samples, 0.04%)</title><rect x="52.9682%" y="1013" width="0.0432%" height="15" fill="rgb(215,163,41)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1023.50"></text></g><g><title>malloc (91 samples, 0.04%)</title><rect x="52.9682%" y="997" width="0.0432%" height="15" fill="rgb(246,83,29)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="1007.50"></text></g><g><title>[libc.so.6] (91 samples, 0.04%)</title><rect x="52.9682%" y="981" width="0.0432%" height="15" fill="rgb(219,2,45)" fg:x="111585" fg:w="91"/><text x="53.2182%" y="991.50"></text></g><g><title>[libc.so.6] (81 samples, 0.04%)</title><rect x="52.9730%" y="965" width="0.0384%" height="15" fill="rgb(242,215,33)" fg:x="111595" fg:w="81"/><text x="53.2230%" y="975.50"></text></g><g><title>__mprotect (35 samples, 0.02%)</title><rect x="52.9948%" y="949" width="0.0166%" height="15" fill="rgb(217,1,6)" fg:x="111641" fg:w="35"/><text x="53.2448%" y="959.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="52.9948%" y="933" width="0.0166%" height="15" fill="rgb(207,85,52)" fg:x="111641" fg:w="35"/><text x="53.2448%" y="943.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="52.9953%" y="917" width="0.0161%" height="15" fill="rgb(231,171,19)" fg:x="111642" fg:w="34"/><text x="53.2453%" y="927.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="52.9953%" y="901" width="0.0161%" height="15" fill="rgb(207,128,4)" fg:x="111642" fg:w="34"/><text x="53.2453%" y="911.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="52.9958%" y="885" width="0.0157%" height="15" fill="rgb(219,208,4)" fg:x="111643" fg:w="33"/><text x="53.2458%" y="895.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="52.9967%" y="869" width="0.0147%" height="15" fill="rgb(235,161,42)" fg:x="111645" fg:w="31"/><text x="53.2467%" y="879.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="52.9991%" y="853" width="0.0123%" height="15" fill="rgb(247,218,18)" fg:x="111650" fg:w="26"/><text x="53.2491%" y="863.50"></text></g><g><title>[libc.so.6] (37 samples, 0.02%)</title><rect x="53.0195%" y="981" width="0.0176%" height="15" fill="rgb(232,114,51)" fg:x="111693" fg:w="37"/><text x="53.2695%" y="991.50"></text></g><g><title>malloc (26 samples, 0.01%)</title><rect x="53.0371%" y="981" width="0.0123%" height="15" fill="rgb(222,95,3)" fg:x="111730" fg:w="26"/><text x="53.2871%" y="991.50"></text></g><g><title>recvmsg (170 samples, 0.08%)</title><rect x="53.0494%" y="981" width="0.0807%" height="15" fill="rgb(240,65,29)" fg:x="111756" fg:w="170"/><text x="53.2994%" y="991.50"></text></g><g><title>[unknown] (163 samples, 0.08%)</title><rect x="53.0527%" y="965" width="0.0774%" height="15" fill="rgb(249,209,20)" fg:x="111763" fg:w="163"/><text x="53.3027%" y="975.50"></text></g><g><title>[unknown] (160 samples, 0.08%)</title><rect x="53.0542%" y="949" width="0.0760%" height="15" fill="rgb(241,48,37)" fg:x="111766" fg:w="160"/><text x="53.3042%" y="959.50"></text></g><g><title>[unknown] (159 samples, 0.08%)</title><rect x="53.0546%" y="933" width="0.0755%" height="15" fill="rgb(230,140,42)" fg:x="111767" fg:w="159"/><text x="53.3046%" y="943.50"></text></g><g><title>[unknown] (154 samples, 0.07%)</title><rect x="53.0570%" y="917" width="0.0731%" height="15" fill="rgb(230,176,45)" fg:x="111772" fg:w="154"/><text x="53.3070%" y="927.50"></text></g><g><title>[unknown] (141 samples, 0.07%)</title><rect x="53.0632%" y="901" width="0.0669%" height="15" fill="rgb(245,112,21)" fg:x="111785" fg:w="141"/><text x="53.3132%" y="911.50"></text></g><g><title>[unknown] (119 samples, 0.06%)</title><rect x="53.0736%" y="885" width="0.0565%" height="15" fill="rgb(207,183,35)" fg:x="111807" fg:w="119"/><text x="53.3236%" y="895.50"></text></g><g><title>[unknown] (102 samples, 0.05%)</title><rect x="53.0817%" y="869" width="0.0484%" height="15" fill="rgb(227,44,33)" fg:x="111824" fg:w="102"/><text x="53.3317%" y="879.50"></text></g><g><title>[unknown] (84 samples, 0.04%)</title><rect x="53.0902%" y="853" width="0.0399%" height="15" fill="rgb(246,120,21)" fg:x="111842" fg:w="84"/><text x="53.3402%" y="863.50"></text></g><g><title>[unknown] (66 samples, 0.03%)</title><rect x="53.0988%" y="837" width="0.0313%" height="15" fill="rgb(235,57,52)" fg:x="111860" fg:w="66"/><text x="53.3488%" y="847.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="53.1116%" y="821" width="0.0185%" height="15" fill="rgb(238,84,10)" fg:x="111887" fg:w="39"/><text x="53.3616%" y="831.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (307 samples, 0.15%)</title><rect x="53.0129%" y="1237" width="0.1457%" height="15" fill="rgb(251,200,32)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1247.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (307 samples, 0.15%)</title><rect x="53.0129%" y="1221" width="0.1457%" height="15" fill="rgb(247,159,13)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (307 samples, 0.15%)</title><rect x="53.0129%" y="1205" width="0.1457%" height="15" fill="rgb(238,64,4)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (307 samples, 0.15%)</title><rect x="53.0129%" y="1189" width="0.1457%" height="15" fill="rgb(221,131,51)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (307 samples, 0.15%)</title><rect x="53.0129%" y="1173" width="0.1457%" height="15" fill="rgb(242,5,29)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (307 samples, 0.15%)</title><rect x="53.0129%" y="1157" width="0.1457%" height="15" fill="rgb(214,130,32)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (307 samples, 0.15%)</title><rect x="53.0129%" y="1141" width="0.1457%" height="15" fill="rgb(244,210,16)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (307 samples, 0.15%)</title><rect x="53.0129%" y="1125" width="0.1457%" height="15" fill="rgb(234,48,26)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1135.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (307 samples, 0.15%)</title><rect x="53.0129%" y="1109" width="0.1457%" height="15" fill="rgb(231,82,38)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1119.50"></text></g><g><title>zenoh_util::net::get_local_addresses (307 samples, 0.15%)</title><rect x="53.0129%" y="1093" width="0.1457%" height="15" fill="rgb(254,128,41)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1103.50"></text></g><g><title>pnet_datalink::interfaces (307 samples, 0.15%)</title><rect x="53.0129%" y="1077" width="0.1457%" height="15" fill="rgb(212,73,49)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces (307 samples, 0.15%)</title><rect x="53.0129%" y="1061" width="0.1457%" height="15" fill="rgb(205,62,54)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1071.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (307 samples, 0.15%)</title><rect x="53.0129%" y="1045" width="0.1457%" height="15" fill="rgb(228,0,8)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1055.50"></text></g><g><title>getifaddrs (307 samples, 0.15%)</title><rect x="53.0129%" y="1029" width="0.1457%" height="15" fill="rgb(251,28,17)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1039.50"></text></g><g><title>[libc.so.6] (307 samples, 0.15%)</title><rect x="53.0129%" y="1013" width="0.1457%" height="15" fill="rgb(238,105,27)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1023.50"></text></g><g><title>[libc.so.6] (307 samples, 0.15%)</title><rect x="53.0129%" y="997" width="0.1457%" height="15" fill="rgb(237,216,33)" fg:x="111679" fg:w="307"/><text x="53.2629%" y="1007.50"></text></g><g><title>sendto (60 samples, 0.03%)</title><rect x="53.1301%" y="981" width="0.0285%" height="15" fill="rgb(229,228,25)" fg:x="111926" fg:w="60"/><text x="53.3801%" y="991.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="53.1306%" y="965" width="0.0280%" height="15" fill="rgb(233,75,23)" fg:x="111927" fg:w="59"/><text x="53.3806%" y="975.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="53.1306%" y="949" width="0.0280%" height="15" fill="rgb(231,207,16)" fg:x="111927" fg:w="59"/><text x="53.3806%" y="959.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="53.1311%" y="933" width="0.0275%" height="15" fill="rgb(231,191,45)" fg:x="111928" fg:w="58"/><text x="53.3811%" y="943.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="53.1311%" y="917" width="0.0275%" height="15" fill="rgb(224,133,17)" fg:x="111928" fg:w="58"/><text x="53.3811%" y="927.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="53.1325%" y="901" width="0.0261%" height="15" fill="rgb(209,178,27)" fg:x="111931" fg:w="55"/><text x="53.3825%" y="911.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="53.1330%" y="885" width="0.0256%" height="15" fill="rgb(218,37,11)" fg:x="111932" fg:w="54"/><text x="53.3830%" y="895.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="53.1434%" y="869" width="0.0152%" height="15" fill="rgb(251,226,25)" fg:x="111954" fg:w="32"/><text x="53.3934%" y="879.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="53.1462%" y="853" width="0.0123%" height="15" fill="rgb(209,222,27)" fg:x="111960" fg:w="26"/><text x="53.3962%" y="863.50"></text></g><g><title>[libc.so.6] (157 samples, 0.07%)</title><rect x="53.1586%" y="1221" width="0.0745%" height="15" fill="rgb(238,22,21)" fg:x="111986" fg:w="157"/><text x="53.4086%" y="1231.50"></text></g><g><title>[libc.so.6] (122 samples, 0.06%)</title><rect x="53.2336%" y="1189" width="0.0579%" height="15" fill="rgb(233,161,25)" fg:x="112144" fg:w="122"/><text x="53.4836%" y="1199.50"></text></g><g><title>[libc.so.6] (118 samples, 0.06%)</title><rect x="53.2948%" y="1157" width="0.0560%" height="15" fill="rgb(226,122,53)" fg:x="112273" fg:w="118"/><text x="53.5448%" y="1167.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="53.3565%" y="1141" width="0.0119%" height="15" fill="rgb(220,123,17)" fg:x="112403" fg:w="25"/><text x="53.6065%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.01%)</title><rect x="53.3731%" y="1125" width="0.0147%" height="15" fill="rgb(230,224,35)" fg:x="112438" fg:w="31"/><text x="53.6231%" y="1135.50"></text></g><g><title>[libc.so.6] (495 samples, 0.23%)</title><rect x="53.3879%" y="1125" width="0.2350%" height="15" fill="rgb(246,83,8)" fg:x="112469" fg:w="495"/><text x="53.6379%" y="1135.50"></text></g><g><title>__rust_probestack (24 samples, 0.01%)</title><rect x="53.6290%" y="1125" width="0.0114%" height="15" fill="rgb(230,214,17)" fg:x="112977" fg:w="24"/><text x="53.8790%" y="1135.50"></text></g><g><title>async_executor::Executor::schedule (54 samples, 0.03%)</title><rect x="53.6404%" y="1125" width="0.0256%" height="15" fill="rgb(222,97,18)" fg:x="113001" fg:w="54"/><text x="53.8904%" y="1135.50"></text></g><g><title>async_executor::Executor::state (41 samples, 0.02%)</title><rect x="53.6660%" y="1125" width="0.0195%" height="15" fill="rgb(206,79,1)" fg:x="113055" fg:w="41"/><text x="53.9160%" y="1135.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (32 samples, 0.02%)</title><rect x="53.6703%" y="1109" width="0.0152%" height="15" fill="rgb(214,121,34)" fg:x="113064" fg:w="32"/><text x="53.9203%" y="1119.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (32 samples, 0.02%)</title><rect x="53.6703%" y="1093" width="0.0152%" height="15" fill="rgb(249,199,46)" fg:x="113064" fg:w="32"/><text x="53.9203%" y="1103.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (32 samples, 0.02%)</title><rect x="53.6703%" y="1077" width="0.0152%" height="15" fill="rgb(214,222,46)" fg:x="113064" fg:w="32"/><text x="53.9203%" y="1087.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (32 samples, 0.02%)</title><rect x="53.6703%" y="1061" width="0.0152%" height="15" fill="rgb(248,168,30)" fg:x="113064" fg:w="32"/><text x="53.9203%" y="1071.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (55 samples, 0.03%)</title><rect x="53.6855%" y="1125" width="0.0261%" height="15" fill="rgb(226,14,28)" fg:x="113096" fg:w="55"/><text x="53.9355%" y="1135.50"></text></g><g><title>async_executor::State::notify (27 samples, 0.01%)</title><rect x="53.7287%" y="1093" width="0.0128%" height="15" fill="rgb(253,123,1)" fg:x="113187" fg:w="27"/><text x="53.9787%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (71 samples, 0.03%)</title><rect x="53.7809%" y="1061" width="0.0337%" height="15" fill="rgb(225,24,42)" fg:x="113297" fg:w="71"/><text x="54.0309%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (71 samples, 0.03%)</title><rect x="53.7809%" y="1045" width="0.0337%" height="15" fill="rgb(216,161,37)" fg:x="113297" fg:w="71"/><text x="54.0309%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (104 samples, 0.05%)</title><rect x="53.8156%" y="1061" width="0.0494%" height="15" fill="rgb(251,164,26)" fg:x="113370" fg:w="104"/><text x="54.0656%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_or (104 samples, 0.05%)</title><rect x="53.8156%" y="1045" width="0.0494%" height="15" fill="rgb(219,177,3)" fg:x="113370" fg:w="104"/><text x="54.0656%" y="1055.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (297 samples, 0.14%)</title><rect x="53.7263%" y="1109" width="0.1410%" height="15" fill="rgb(222,65,0)" fg:x="113182" fg:w="297"/><text x="53.9763%" y="1119.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (265 samples, 0.13%)</title><rect x="53.7415%" y="1093" width="0.1258%" height="15" fill="rgb(223,69,54)" fg:x="113214" fg:w="265"/><text x="53.9915%" y="1103.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (242 samples, 0.11%)</title><rect x="53.7524%" y="1077" width="0.1149%" height="15" fill="rgb(235,30,27)" fg:x="113237" fg:w="242"/><text x="54.0024%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (330 samples, 0.16%)</title><rect x="53.7140%" y="1125" width="0.1566%" height="15" fill="rgb(220,183,50)" fg:x="113156" fg:w="330"/><text x="53.9640%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (735 samples, 0.35%)</title><rect x="53.8849%" y="1125" width="0.3489%" height="15" fill="rgb(248,198,15)" fg:x="113516" fg:w="735"/><text x="54.1349%" y="1135.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (735 samples, 0.35%)</title><rect x="53.8849%" y="1109" width="0.3489%" height="15" fill="rgb(222,211,4)" fg:x="113516" fg:w="735"/><text x="54.1349%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (733 samples, 0.35%)</title><rect x="53.8858%" y="1093" width="0.3479%" height="15" fill="rgb(214,102,34)" fg:x="113518" fg:w="733"/><text x="54.1358%" y="1103.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (733 samples, 0.35%)</title><rect x="53.8858%" y="1077" width="0.3479%" height="15" fill="rgb(245,92,5)" fg:x="113518" fg:w="733"/><text x="54.1358%" y="1087.50"></text></g><g><title>syscall (725 samples, 0.34%)</title><rect x="53.8896%" y="1061" width="0.3441%" height="15" fill="rgb(252,72,51)" fg:x="113526" fg:w="725"/><text x="54.1396%" y="1071.50"></text></g><g><title>[unknown] (720 samples, 0.34%)</title><rect x="53.8920%" y="1045" width="0.3418%" height="15" fill="rgb(252,208,19)" fg:x="113531" fg:w="720"/><text x="54.1420%" y="1055.50"></text></g><g><title>[unknown] (716 samples, 0.34%)</title><rect x="53.8939%" y="1029" width="0.3399%" height="15" fill="rgb(211,69,7)" fg:x="113535" fg:w="716"/><text x="54.1439%" y="1039.50"></text></g><g><title>[unknown] (713 samples, 0.34%)</title><rect x="53.8953%" y="1013" width="0.3385%" height="15" fill="rgb(211,27,16)" fg:x="113538" fg:w="713"/><text x="54.1453%" y="1023.50"></text></g><g><title>[unknown] (691 samples, 0.33%)</title><rect x="53.9057%" y="997" width="0.3280%" height="15" fill="rgb(219,216,14)" fg:x="113560" fg:w="691"/><text x="54.1557%" y="1007.50"></text></g><g><title>[unknown] (658 samples, 0.31%)</title><rect x="53.9214%" y="981" width="0.3123%" height="15" fill="rgb(219,71,8)" fg:x="113593" fg:w="658"/><text x="54.1714%" y="991.50"></text></g><g><title>[unknown] (373 samples, 0.18%)</title><rect x="54.0567%" y="965" width="0.1771%" height="15" fill="rgb(223,170,53)" fg:x="113878" fg:w="373"/><text x="54.3067%" y="975.50"></text></g><g><title>[unknown] (262 samples, 0.12%)</title><rect x="54.1094%" y="949" width="0.1244%" height="15" fill="rgb(246,21,26)" fg:x="113989" fg:w="262"/><text x="54.3594%" y="959.50"></text></g><g><title>[unknown] (212 samples, 0.10%)</title><rect x="54.1331%" y="933" width="0.1006%" height="15" fill="rgb(248,20,46)" fg:x="114039" fg:w="212"/><text x="54.3831%" y="943.50"></text></g><g><title>[unknown] (123 samples, 0.06%)</title><rect x="54.1754%" y="917" width="0.0584%" height="15" fill="rgb(252,94,11)" fg:x="114128" fg:w="123"/><text x="54.4254%" y="927.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="54.2224%" y="901" width="0.0114%" height="15" fill="rgb(236,163,8)" fg:x="114227" fg:w="24"/><text x="54.4724%" y="911.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (179 samples, 0.08%)</title><rect x="54.2338%" y="1125" width="0.0850%" height="15" fill="rgb(217,221,45)" fg:x="114251" fg:w="179"/><text x="54.4838%" y="1135.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (150 samples, 0.07%)</title><rect x="54.2475%" y="1109" width="0.0712%" height="15" fill="rgb(238,38,17)" fg:x="114280" fg:w="150"/><text x="54.4975%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43 samples, 0.02%)</title><rect x="54.2983%" y="1093" width="0.0204%" height="15" fill="rgb(242,210,23)" fg:x="114387" fg:w="43"/><text x="54.5483%" y="1103.50"></text></g><g><title>core::ptr::write (34 samples, 0.02%)</title><rect x="54.3026%" y="1077" width="0.0161%" height="15" fill="rgb(250,86,53)" fg:x="114396" fg:w="34"/><text x="54.5526%" y="1087.50"></text></g><g><title>std::sys::unix::futex::futex_wait (454 samples, 0.22%)</title><rect x="54.3415%" y="1061" width="0.2155%" height="15" fill="rgb(223,168,25)" fg:x="114478" fg:w="454"/><text x="54.5915%" y="1071.50"></text></g><g><title>syscall (440 samples, 0.21%)</title><rect x="54.3482%" y="1045" width="0.2089%" height="15" fill="rgb(251,189,4)" fg:x="114492" fg:w="440"/><text x="54.5982%" y="1055.50"></text></g><g><title>[unknown] (438 samples, 0.21%)</title><rect x="54.3491%" y="1029" width="0.2079%" height="15" fill="rgb(245,19,28)" fg:x="114494" fg:w="438"/><text x="54.5991%" y="1039.50"></text></g><g><title>[unknown] (437 samples, 0.21%)</title><rect x="54.3496%" y="1013" width="0.2074%" height="15" fill="rgb(207,10,34)" fg:x="114495" fg:w="437"/><text x="54.5996%" y="1023.50"></text></g><g><title>[unknown] (434 samples, 0.21%)</title><rect x="54.3510%" y="997" width="0.2060%" height="15" fill="rgb(235,153,31)" fg:x="114498" fg:w="434"/><text x="54.6010%" y="1007.50"></text></g><g><title>[unknown] (427 samples, 0.20%)</title><rect x="54.3543%" y="981" width="0.2027%" height="15" fill="rgb(228,72,37)" fg:x="114505" fg:w="427"/><text x="54.6043%" y="991.50"></text></g><g><title>[unknown] (416 samples, 0.20%)</title><rect x="54.3595%" y="965" width="0.1975%" height="15" fill="rgb(215,15,16)" fg:x="114516" fg:w="416"/><text x="54.6095%" y="975.50"></text></g><g><title>[unknown] (394 samples, 0.19%)</title><rect x="54.3700%" y="949" width="0.1870%" height="15" fill="rgb(250,119,29)" fg:x="114538" fg:w="394"/><text x="54.6200%" y="959.50"></text></g><g><title>[unknown] (387 samples, 0.18%)</title><rect x="54.3733%" y="933" width="0.1837%" height="15" fill="rgb(214,59,1)" fg:x="114545" fg:w="387"/><text x="54.6233%" y="943.50"></text></g><g><title>[unknown] (329 samples, 0.16%)</title><rect x="54.4008%" y="917" width="0.1562%" height="15" fill="rgb(223,109,25)" fg:x="114603" fg:w="329"/><text x="54.6508%" y="927.50"></text></g><g><title>[unknown] (279 samples, 0.13%)</title><rect x="54.4246%" y="901" width="0.1324%" height="15" fill="rgb(230,198,22)" fg:x="114653" fg:w="279"/><text x="54.6746%" y="911.50"></text></g><g><title>[unknown] (189 samples, 0.09%)</title><rect x="54.4673%" y="885" width="0.0897%" height="15" fill="rgb(245,184,46)" fg:x="114743" fg:w="189"/><text x="54.7173%" y="895.50"></text></g><g><title>[unknown] (116 samples, 0.06%)</title><rect x="54.5020%" y="869" width="0.0551%" height="15" fill="rgb(253,73,16)" fg:x="114816" fg:w="116"/><text x="54.7520%" y="879.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="54.5295%" y="853" width="0.0275%" height="15" fill="rgb(206,94,45)" fg:x="114874" fg:w="58"/><text x="54.7795%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1,056 samples, 0.50%)</title><rect x="54.3187%" y="1125" width="0.5013%" height="15" fill="rgb(236,83,27)" fg:x="114430" fg:w="1056"/><text x="54.5687%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1,041 samples, 0.49%)</title><rect x="54.3258%" y="1109" width="0.4942%" height="15" fill="rgb(220,196,8)" fg:x="114445" fg:w="1041"/><text x="54.5758%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (1,041 samples, 0.49%)</title><rect x="54.3258%" y="1093" width="0.4942%" height="15" fill="rgb(254,185,14)" fg:x="114445" fg:w="1041"/><text x="54.5758%" y="1103.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (1,018 samples, 0.48%)</title><rect x="54.3368%" y="1077" width="0.4832%" height="15" fill="rgb(226,50,22)" fg:x="114468" fg:w="1018"/><text x="54.5868%" y="1087.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (554 samples, 0.26%)</title><rect x="54.5570%" y="1061" width="0.2630%" height="15" fill="rgb(253,147,0)" fg:x="114932" fg:w="554"/><text x="54.8070%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (88 samples, 0.04%)</title><rect x="54.7782%" y="1045" width="0.0418%" height="15" fill="rgb(252,46,33)" fg:x="115398" fg:w="88"/><text x="55.0282%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (88 samples, 0.04%)</title><rect x="54.7782%" y="1029" width="0.0418%" height="15" fill="rgb(242,22,54)" fg:x="115398" fg:w="88"/><text x="55.0282%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn (3,065 samples, 1.45%)</title><rect x="53.3684%" y="1141" width="1.4549%" height="15" fill="rgb(223,178,32)" fg:x="112428" fg:w="3065"/><text x="53.6184%" y="1151.50"></text></g><g><title>async_global_executor::executor::spawn (3,119 samples, 1.48%)</title><rect x="53.3565%" y="1157" width="1.4806%" height="15" fill="rgb(214,106,53)" fg:x="112403" fg:w="3119"/><text x="53.6065%" y="1167.50"></text></g><g><title>async_global_executor::init::init (29 samples, 0.01%)</title><rect x="54.8233%" y="1141" width="0.0138%" height="15" fill="rgb(232,65,50)" fg:x="115493" fg:w="29"/><text x="55.0733%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (24 samples, 0.01%)</title><rect x="54.8257%" y="1125" width="0.0114%" height="15" fill="rgb(231,110,28)" fg:x="115498" fg:w="24"/><text x="55.0757%" y="1135.50"></text></g><g><title>[libc.so.6] (79 samples, 0.04%)</title><rect x="54.8380%" y="1141" width="0.0375%" height="15" fill="rgb(216,71,40)" fg:x="115524" fg:w="79"/><text x="55.0880%" y="1151.50"></text></g><g><title>async_std::task::task::Task::new (45 samples, 0.02%)</title><rect x="54.8755%" y="1141" width="0.0214%" height="15" fill="rgb(229,89,53)" fg:x="115603" fg:w="45"/><text x="55.1255%" y="1151.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (45 samples, 0.02%)</title><rect x="54.8755%" y="1125" width="0.0214%" height="15" fill="rgb(210,124,14)" fg:x="115603" fg:w="45"/><text x="55.1255%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::build (127 samples, 0.06%)</title><rect x="54.8371%" y="1157" width="0.0603%" height="15" fill="rgb(236,213,6)" fg:x="115522" fg:w="127"/><text x="55.0871%" y="1167.50"></text></g><g><title>async_std::task::spawn::spawn (3,391 samples, 1.61%)</title><rect x="53.2915%" y="1189" width="1.6097%" height="15" fill="rgb(228,41,5)" fg:x="112266" fg:w="3391"/><text x="53.5415%" y="1199.50"></text></g><g><title>async_std::task::builder::Builder::spawn (3,391 samples, 1.61%)</title><rect x="53.2915%" y="1173" width="1.6097%" height="15" fill="rgb(221,167,25)" fg:x="112266" fg:w="3391"/><text x="53.5415%" y="1183.50"></text></g><g><title>stop_token::future::FutureExt::timeout_at (56 samples, 0.03%)</title><rect x="54.9012%" y="1189" width="0.0266%" height="15" fill="rgb(228,144,37)" fg:x="115657" fg:w="56"/><text x="55.1512%" y="1199.50"></text></g><g><title>[libc.so.6] (43 samples, 0.02%)</title><rect x="54.9073%" y="1173" width="0.0204%" height="15" fill="rgb(227,189,38)" fg:x="115670" fg:w="43"/><text x="55.1573%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,614 samples, 1.72%)</title><rect x="53.2336%" y="1221" width="1.7155%" height="15" fill="rgb(218,8,2)" fg:x="112144" fg:w="3614"/><text x="53.4836%" y="1231.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn::{{closure}} (3,614 samples, 1.72%)</title><rect x="53.2336%" y="1205" width="1.7155%" height="15" fill="rgb(209,61,28)" fg:x="112144" fg:w="3614"/><text x="53.4836%" y="1215.50"></text></g><g><title>stop_token::stop_source::StopSource::token (45 samples, 0.02%)</title><rect x="54.9278%" y="1189" width="0.0214%" height="15" fill="rgb(233,140,39)" fg:x="115713" fg:w="45"/><text x="55.1778%" y="1199.50"></text></g><g><title>&lt;stop_token::stop_source::StopToken as core::clone::Clone&gt;::clone (43 samples, 0.02%)</title><rect x="54.9287%" y="1173" width="0.0204%" height="15" fill="rgb(251,66,48)" fg:x="115715" fg:w="43"/><text x="55.1787%" y="1183.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.02%)</title><rect x="54.9287%" y="1157" width="0.0204%" height="15" fill="rgb(210,44,45)" fg:x="115715" fg:w="43"/><text x="55.1787%" y="1167.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn (3,792 samples, 1.80%)</title><rect x="53.1586%" y="1237" width="1.8000%" height="15" fill="rgb(214,136,46)" fg:x="111986" fg:w="3792"/><text x="53.4086%" y="1247.50">z..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="54.9586%" y="1045" width="0.0123%" height="15" fill="rgb(207,130,50)" fg:x="115778" fg:w="26"/><text x="55.2086%" y="1055.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::bind::{{closure}} (26 samples, 0.01%)</title><rect x="54.9586%" y="1029" width="0.0123%" height="15" fill="rgb(228,102,49)" fg:x="115778" fg:w="26"/><text x="55.2086%" y="1039.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::bind (26 samples, 0.01%)</title><rect x="54.9586%" y="1013" width="0.0123%" height="15" fill="rgb(253,55,1)" fg:x="115778" fg:w="26"/><text x="55.2086%" y="1023.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (26 samples, 0.01%)</title><rect x="54.9586%" y="997" width="0.0123%" height="15" fill="rgb(238,222,9)" fg:x="115778" fg:w="26"/><text x="55.2086%" y="1007.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (26 samples, 0.01%)</title><rect x="54.9586%" y="981" width="0.0123%" height="15" fill="rgb(246,99,6)" fg:x="115778" fg:w="26"/><text x="55.2086%" y="991.50"></text></g><g><title>async_global_executor::executor::spawn (55 samples, 0.03%)</title><rect x="54.9738%" y="1013" width="0.0261%" height="15" fill="rgb(219,110,26)" fg:x="115810" fg:w="55"/><text x="55.2238%" y="1023.50"></text></g><g><title>async_executor::Executor::spawn (55 samples, 0.03%)</title><rect x="54.9738%" y="997" width="0.0261%" height="15" fill="rgb(239,160,33)" fg:x="115810" fg:w="55"/><text x="55.2238%" y="1007.50"></text></g><g><title>async_std::task::spawn::spawn (57 samples, 0.03%)</title><rect x="54.9738%" y="1045" width="0.0271%" height="15" fill="rgb(220,202,23)" fg:x="115810" fg:w="57"/><text x="55.2238%" y="1055.50"></text></g><g><title>async_std::task::builder::Builder::spawn (57 samples, 0.03%)</title><rect x="54.9738%" y="1029" width="0.0271%" height="15" fill="rgb(208,80,26)" fg:x="115810" fg:w="57"/><text x="55.2238%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.04%)</title><rect x="54.9586%" y="1157" width="0.0432%" height="15" fill="rgb(243,85,7)" fg:x="115778" fg:w="91"/><text x="55.2086%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::add_listener::{{closure}} (91 samples, 0.04%)</title><rect x="54.9586%" y="1141" width="0.0432%" height="15" fill="rgb(228,77,47)" fg:x="115778" fg:w="91"/><text x="55.2086%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.04%)</title><rect x="54.9586%" y="1125" width="0.0432%" height="15" fill="rgb(212,226,8)" fg:x="115778" fg:w="91"/><text x="55.2086%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::add_listener_unicast::{{closure}} (91 samples, 0.04%)</title><rect x="54.9586%" y="1109" width="0.0432%" height="15" fill="rgb(241,120,54)" fg:x="115778" fg:w="91"/><text x="55.2086%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (91 samples, 0.04%)</title><rect x="54.9586%" y="1093" width="0.0432%" height="15" fill="rgb(226,80,16)" fg:x="115778" fg:w="91"/><text x="55.2086%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.04%)</title><rect x="54.9586%" y="1077" width="0.0432%" height="15" fill="rgb(240,76,13)" fg:x="115778" fg:w="91"/><text x="55.2086%" y="1087.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}} (91 samples, 0.04%)</title><rect x="54.9586%" y="1061" width="0.0432%" height="15" fill="rgb(252,74,8)" fg:x="115778" fg:w="91"/><text x="55.2086%" y="1071.50"></text></g><g><title>recvmsg (39 samples, 0.02%)</title><rect x="55.0137%" y="997" width="0.0185%" height="15" fill="rgb(244,155,2)" fg:x="115894" fg:w="39"/><text x="55.2637%" y="1007.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="55.0137%" y="981" width="0.0185%" height="15" fill="rgb(215,81,35)" fg:x="115894" fg:w="39"/><text x="55.2637%" y="991.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="55.0137%" y="965" width="0.0185%" height="15" fill="rgb(206,55,2)" fg:x="115894" fg:w="39"/><text x="55.2637%" y="975.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="55.0137%" y="949" width="0.0185%" height="15" fill="rgb(231,2,34)" fg:x="115894" fg:w="39"/><text x="55.2637%" y="959.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="55.0151%" y="933" width="0.0171%" height="15" fill="rgb(242,176,48)" fg:x="115897" fg:w="36"/><text x="55.2651%" y="943.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="55.0160%" y="917" width="0.0161%" height="15" fill="rgb(249,31,36)" fg:x="115899" fg:w="34"/><text x="55.2660%" y="927.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="55.0189%" y="901" width="0.0133%" height="15" fill="rgb(205,18,17)" fg:x="115905" fg:w="28"/><text x="55.2689%" y="911.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="55.0208%" y="885" width="0.0114%" height="15" fill="rgb(254,130,5)" fg:x="115909" fg:w="24"/><text x="55.2708%" y="895.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="55.0217%" y="869" width="0.0104%" height="15" fill="rgb(229,42,45)" fg:x="115911" fg:w="22"/><text x="55.2717%" y="879.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (168 samples, 0.08%)</title><rect x="54.9586%" y="1237" width="0.0797%" height="15" fill="rgb(245,95,25)" fg:x="115778" fg:w="168"/><text x="55.2086%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (168 samples, 0.08%)</title><rect x="54.9586%" y="1221" width="0.0797%" height="15" fill="rgb(249,193,38)" fg:x="115778" fg:w="168"/><text x="55.2086%" y="1231.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}} (168 samples, 0.08%)</title><rect x="54.9586%" y="1205" width="0.0797%" height="15" fill="rgb(241,140,43)" fg:x="115778" fg:w="168"/><text x="55.2086%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (168 samples, 0.08%)</title><rect x="54.9586%" y="1189" width="0.0797%" height="15" fill="rgb(245,78,48)" fg:x="115778" fg:w="168"/><text x="55.2086%" y="1199.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::bind_listeners::{{closure}} (168 samples, 0.08%)</title><rect x="54.9586%" y="1173" width="0.0797%" height="15" fill="rgb(214,92,39)" fg:x="115778" fg:w="168"/><text x="55.2086%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (77 samples, 0.04%)</title><rect x="55.0018%" y="1157" width="0.0366%" height="15" fill="rgb(211,189,14)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (77 samples, 0.04%)</title><rect x="55.0018%" y="1141" width="0.0366%" height="15" fill="rgb(218,7,24)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1151.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (77 samples, 0.04%)</title><rect x="55.0018%" y="1125" width="0.0366%" height="15" fill="rgb(224,200,49)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1135.50"></text></g><g><title>zenoh_util::net::get_local_addresses (77 samples, 0.04%)</title><rect x="55.0018%" y="1109" width="0.0366%" height="15" fill="rgb(218,210,14)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1119.50"></text></g><g><title>pnet_datalink::interfaces (77 samples, 0.04%)</title><rect x="55.0018%" y="1093" width="0.0366%" height="15" fill="rgb(234,142,31)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1103.50"></text></g><g><title>pnet_datalink::backend::interfaces (77 samples, 0.04%)</title><rect x="55.0018%" y="1077" width="0.0366%" height="15" fill="rgb(227,165,2)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (77 samples, 0.04%)</title><rect x="55.0018%" y="1061" width="0.0366%" height="15" fill="rgb(232,44,46)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1071.50"></text></g><g><title>getifaddrs (77 samples, 0.04%)</title><rect x="55.0018%" y="1045" width="0.0366%" height="15" fill="rgb(236,149,47)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1055.50"></text></g><g><title>[libc.so.6] (77 samples, 0.04%)</title><rect x="55.0018%" y="1029" width="0.0366%" height="15" fill="rgb(227,45,31)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1039.50"></text></g><g><title>[libc.so.6] (77 samples, 0.04%)</title><rect x="55.0018%" y="1013" width="0.0366%" height="15" fill="rgb(240,176,51)" fg:x="115869" fg:w="77"/><text x="55.2518%" y="1023.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (109 samples, 0.05%)</title><rect x="55.0749%" y="1045" width="0.0517%" height="15" fill="rgb(249,146,41)" fg:x="116023" fg:w="109"/><text x="55.3249%" y="1055.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (63 samples, 0.03%)</title><rect x="55.0967%" y="1029" width="0.0299%" height="15" fill="rgb(213,208,4)" fg:x="116069" fg:w="63"/><text x="55.3467%" y="1039.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (27 samples, 0.01%)</title><rect x="55.1281%" y="1045" width="0.0128%" height="15" fill="rgb(245,84,36)" fg:x="116135" fg:w="27"/><text x="55.3781%" y="1055.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (24 samples, 0.01%)</title><rect x="55.1295%" y="1029" width="0.0114%" height="15" fill="rgb(254,84,18)" fg:x="116138" fg:w="24"/><text x="55.3795%" y="1039.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::build (214 samples, 0.10%)</title><rect x="55.0398%" y="1237" width="0.1016%" height="15" fill="rgb(225,38,54)" fg:x="115949" fg:w="214"/><text x="55.2898%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (214 samples, 0.10%)</title><rect x="55.0398%" y="1221" width="0.1016%" height="15" fill="rgb(246,50,30)" fg:x="115949" fg:w="214"/><text x="55.2898%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (214 samples, 0.10%)</title><rect x="55.0398%" y="1205" width="0.1016%" height="15" fill="rgb(246,148,9)" fg:x="115949" fg:w="214"/><text x="55.2898%" y="1215.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (214 samples, 0.10%)</title><rect x="55.0398%" y="1189" width="0.1016%" height="15" fill="rgb(223,75,4)" fg:x="115949" fg:w="214"/><text x="55.2898%" y="1199.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (214 samples, 0.10%)</title><rect x="55.0398%" y="1173" width="0.1016%" height="15" fill="rgb(239,148,41)" fg:x="115949" fg:w="214"/><text x="55.2898%" y="1183.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (214 samples, 0.10%)</title><rect x="55.0398%" y="1157" width="0.1016%" height="15" fill="rgb(205,195,3)" fg:x="115949" fg:w="214"/><text x="55.2898%" y="1167.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (214 samples, 0.10%)</title><rect x="55.0398%" y="1141" width="0.1016%" height="15" fill="rgb(254,161,1)" fg:x="115949" fg:w="214"/><text x="55.2898%" y="1151.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (214 samples, 0.10%)</title><rect x="55.0398%" y="1125" width="0.1016%" height="15" fill="rgb(211,229,8)" fg:x="115949" fg:w="214"/><text x="55.2898%" y="1135.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (210 samples, 0.10%)</title><rect x="55.0417%" y="1109" width="0.0997%" height="15" fill="rgb(220,97,9)" fg:x="115953" fg:w="210"/><text x="55.2917%" y="1119.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (210 samples, 0.10%)</title><rect x="55.0417%" y="1093" width="0.0997%" height="15" fill="rgb(240,218,8)" fg:x="115953" fg:w="210"/><text x="55.2917%" y="1103.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (210 samples, 0.10%)</title><rect x="55.0417%" y="1077" width="0.0997%" height="15" fill="rgb(250,44,0)" fg:x="115953" fg:w="210"/><text x="55.2917%" y="1087.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (192 samples, 0.09%)</title><rect x="55.0502%" y="1061" width="0.0911%" height="15" fill="rgb(236,41,53)" fg:x="115971" fg:w="192"/><text x="55.3002%" y="1071.50"></text></g><g><title>&lt;zenoh_config::TransportLinkConf as core::default::Default&gt;::default (23 samples, 0.01%)</title><rect x="55.1452%" y="1173" width="0.0109%" height="15" fill="rgb(218,227,13)" fg:x="116171" fg:w="23"/><text x="55.3952%" y="1183.50"></text></g><g><title>zenoh_config::defaults::&lt;impl core::default::Default for zenoh_config::LinkTxConf&gt;::default (23 samples, 0.01%)</title><rect x="55.1452%" y="1157" width="0.0109%" height="15" fill="rgb(217,94,32)" fg:x="116171" fg:w="23"/><text x="55.3952%" y="1167.50"></text></g><g><title>&lt;zenoh_config::Config as core::default::Default&gt;::default (27 samples, 0.01%)</title><rect x="55.1442%" y="1205" width="0.0128%" height="15" fill="rgb(213,217,12)" fg:x="116169" fg:w="27"/><text x="55.3942%" y="1215.50"></text></g><g><title>&lt;zenoh_config::TransportConf as core::default::Default&gt;::default (25 samples, 0.01%)</title><rect x="55.1452%" y="1189" width="0.0119%" height="15" fill="rgb(229,13,46)" fg:x="116171" fg:w="25"/><text x="55.3952%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (24 samples, 0.01%)</title><rect x="55.1646%" y="837" width="0.0114%" height="15" fill="rgb(243,139,5)" fg:x="116212" fg:w="24"/><text x="55.4146%" y="847.50"></text></g><g><title>async_executor::Runner::new (61 samples, 0.03%)</title><rect x="55.1613%" y="869" width="0.0290%" height="15" fill="rgb(249,38,45)" fg:x="116205" fg:w="61"/><text x="55.4113%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (54 samples, 0.03%)</title><rect x="55.1646%" y="853" width="0.0256%" height="15" fill="rgb(216,70,11)" fg:x="116212" fg:w="54"/><text x="55.4146%" y="863.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (30 samples, 0.01%)</title><rect x="55.1760%" y="837" width="0.0142%" height="15" fill="rgb(253,101,25)" fg:x="116236" fg:w="30"/><text x="55.4260%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.04%)</title><rect x="55.1599%" y="933" width="0.0351%" height="15" fill="rgb(207,197,30)" fg:x="116202" fg:w="74"/><text x="55.4099%" y="943.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (74 samples, 0.04%)</title><rect x="55.1599%" y="917" width="0.0351%" height="15" fill="rgb(238,87,13)" fg:x="116202" fg:w="74"/><text x="55.4099%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.04%)</title><rect x="55.1599%" y="901" width="0.0351%" height="15" fill="rgb(215,155,8)" fg:x="116202" fg:w="74"/><text x="55.4099%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (74 samples, 0.04%)</title><rect x="55.1599%" y="885" width="0.0351%" height="15" fill="rgb(239,166,38)" fg:x="116202" fg:w="74"/><text x="55.4099%" y="895.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (83 samples, 0.04%)</title><rect x="55.1599%" y="965" width="0.0394%" height="15" fill="rgb(240,194,35)" fg:x="116202" fg:w="83"/><text x="55.4099%" y="975.50"></text></g><g><title>async_io::driver::block_on (83 samples, 0.04%)</title><rect x="55.1599%" y="949" width="0.0394%" height="15" fill="rgb(219,10,44)" fg:x="116202" fg:w="83"/><text x="55.4099%" y="959.50"></text></g><g><title>async_std::task::block_on::block_on (91 samples, 0.04%)</title><rect x="55.1570%" y="1205" width="0.0432%" height="15" fill="rgb(251,220,35)" fg:x="116196" fg:w="91"/><text x="55.4070%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking (91 samples, 0.04%)</title><rect x="55.1570%" y="1189" width="0.0432%" height="15" fill="rgb(218,117,13)" fg:x="116196" fg:w="91"/><text x="55.4070%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (89 samples, 0.04%)</title><rect x="55.1580%" y="1173" width="0.0422%" height="15" fill="rgb(221,213,40)" fg:x="116198" fg:w="89"/><text x="55.4080%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (88 samples, 0.04%)</title><rect x="55.1585%" y="1157" width="0.0418%" height="15" fill="rgb(251,224,35)" fg:x="116199" fg:w="88"/><text x="55.4085%" y="1167.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (88 samples, 0.04%)</title><rect x="55.1585%" y="1141" width="0.0418%" height="15" fill="rgb(241,33,39)" fg:x="116199" fg:w="88"/><text x="55.4085%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (88 samples, 0.04%)</title><rect x="55.1585%" y="1125" width="0.0418%" height="15" fill="rgb(222,74,17)" fg:x="116199" fg:w="88"/><text x="55.4085%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (88 samples, 0.04%)</title><rect x="55.1585%" y="1109" width="0.0418%" height="15" fill="rgb(225,103,0)" fg:x="116199" fg:w="88"/><text x="55.4085%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (87 samples, 0.04%)</title><rect x="55.1589%" y="1093" width="0.0413%" height="15" fill="rgb(240,0,12)" fg:x="116200" fg:w="87"/><text x="55.4089%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (87 samples, 0.04%)</title><rect x="55.1589%" y="1077" width="0.0413%" height="15" fill="rgb(233,213,37)" fg:x="116200" fg:w="87"/><text x="55.4089%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (87 samples, 0.04%)</title><rect x="55.1589%" y="1061" width="0.0413%" height="15" fill="rgb(225,84,52)" fg:x="116200" fg:w="87"/><text x="55.4089%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on (87 samples, 0.04%)</title><rect x="55.1589%" y="1045" width="0.0413%" height="15" fill="rgb(247,160,51)" fg:x="116200" fg:w="87"/><text x="55.4089%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (87 samples, 0.04%)</title><rect x="55.1589%" y="1029" width="0.0413%" height="15" fill="rgb(244,60,51)" fg:x="116200" fg:w="87"/><text x="55.4089%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (87 samples, 0.04%)</title><rect x="55.1589%" y="1013" width="0.0413%" height="15" fill="rgb(233,114,7)" fg:x="116200" fg:w="87"/><text x="55.4089%" y="1023.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (86 samples, 0.04%)</title><rect x="55.1594%" y="997" width="0.0408%" height="15" fill="rgb(246,136,16)" fg:x="116201" fg:w="86"/><text x="55.4094%" y="1007.50"></text></g><g><title>async_global_executor::reactor::block_on (86 samples, 0.04%)</title><rect x="55.1594%" y="981" width="0.0408%" height="15" fill="rgb(243,114,45)" fg:x="116201" fg:w="86"/><text x="55.4094%" y="991.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::from_config::{{closure}} (135 samples, 0.06%)</title><rect x="55.1414%" y="1237" width="0.0641%" height="15" fill="rgb(247,183,43)" fg:x="116163" fg:w="135"/><text x="55.3914%" y="1247.50"></text></g><g><title>&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast as core::default::Default&gt;::default (129 samples, 0.06%)</title><rect x="55.1442%" y="1221" width="0.0612%" height="15" fill="rgb(251,210,42)" fg:x="116169" fg:w="129"/><text x="55.3942%" y="1231.50"></text></g><g><title>[libc.so.6] (41 samples, 0.02%)</title><rect x="55.2173%" y="1157" width="0.0195%" height="15" fill="rgb(221,88,35)" fg:x="116323" fg:w="41"/><text x="55.4673%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (34 samples, 0.02%)</title><rect x="55.2505%" y="1157" width="0.0161%" height="15" fill="rgb(242,21,20)" fg:x="116393" fg:w="34"/><text x="55.5005%" y="1167.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.02%)</title><rect x="55.2505%" y="1141" width="0.0161%" height="15" fill="rgb(233,226,36)" fg:x="116393" fg:w="34"/><text x="55.5005%" y="1151.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (34 samples, 0.02%)</title><rect x="55.2505%" y="1125" width="0.0161%" height="15" fill="rgb(243,189,34)" fg:x="116393" fg:w="34"/><text x="55.5005%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (34 samples, 0.02%)</title><rect x="55.2505%" y="1109" width="0.0161%" height="15" fill="rgb(207,145,50)" fg:x="116393" fg:w="34"/><text x="55.5005%" y="1119.50"></text></g><g><title>syscall (31 samples, 0.01%)</title><rect x="55.2520%" y="1093" width="0.0147%" height="15" fill="rgb(242,1,50)" fg:x="116396" fg:w="31"/><text x="55.5020%" y="1103.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="55.2524%" y="1077" width="0.0142%" height="15" fill="rgb(231,65,32)" fg:x="116397" fg:w="30"/><text x="55.5024%" y="1087.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="55.2524%" y="1061" width="0.0142%" height="15" fill="rgb(208,68,49)" fg:x="116397" fg:w="30"/><text x="55.5024%" y="1071.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="55.2524%" y="1045" width="0.0142%" height="15" fill="rgb(253,54,49)" fg:x="116397" fg:w="30"/><text x="55.5024%" y="1055.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="55.2524%" y="1029" width="0.0142%" height="15" fill="rgb(245,186,24)" fg:x="116397" fg:w="30"/><text x="55.5024%" y="1039.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="55.2534%" y="1013" width="0.0133%" height="15" fill="rgb(209,2,41)" fg:x="116399" fg:w="28"/><text x="55.5034%" y="1023.50"></text></g><g><title>std::sys::unix::futex::futex_wait (43 samples, 0.02%)</title><rect x="55.2738%" y="1093" width="0.0204%" height="15" fill="rgb(242,208,54)" fg:x="116442" fg:w="43"/><text x="55.5238%" y="1103.50"></text></g><g><title>syscall (40 samples, 0.02%)</title><rect x="55.2752%" y="1077" width="0.0190%" height="15" fill="rgb(225,9,51)" fg:x="116445" fg:w="40"/><text x="55.5252%" y="1087.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="55.2762%" y="1061" width="0.0180%" height="15" fill="rgb(207,207,25)" fg:x="116447" fg:w="38"/><text x="55.5262%" y="1071.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="55.2762%" y="1045" width="0.0180%" height="15" fill="rgb(253,96,18)" fg:x="116447" fg:w="38"/><text x="55.5262%" y="1055.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="55.2762%" y="1029" width="0.0180%" height="15" fill="rgb(252,215,20)" fg:x="116447" fg:w="38"/><text x="55.5262%" y="1039.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="55.2762%" y="1013" width="0.0180%" height="15" fill="rgb(245,227,26)" fg:x="116447" fg:w="38"/><text x="55.5262%" y="1023.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="55.2771%" y="997" width="0.0171%" height="15" fill="rgb(241,208,0)" fg:x="116449" fg:w="36"/><text x="55.5271%" y="1007.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="55.2776%" y="981" width="0.0166%" height="15" fill="rgb(224,130,10)" fg:x="116450" fg:w="35"/><text x="55.5276%" y="991.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="55.2776%" y="965" width="0.0166%" height="15" fill="rgb(237,29,0)" fg:x="116450" fg:w="35"/><text x="55.5276%" y="975.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="55.2814%" y="949" width="0.0128%" height="15" fill="rgb(219,27,41)" fg:x="116458" fg:w="27"/><text x="55.5314%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (97 samples, 0.05%)</title><rect x="55.2714%" y="1157" width="0.0460%" height="15" fill="rgb(245,101,19)" fg:x="116437" fg:w="97"/><text x="55.5214%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (92 samples, 0.04%)</title><rect x="55.2738%" y="1141" width="0.0437%" height="15" fill="rgb(243,44,37)" fg:x="116442" fg:w="92"/><text x="55.5238%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (92 samples, 0.04%)</title><rect x="55.2738%" y="1125" width="0.0437%" height="15" fill="rgb(228,213,43)" fg:x="116442" fg:w="92"/><text x="55.5238%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (92 samples, 0.04%)</title><rect x="55.2738%" y="1109" width="0.0437%" height="15" fill="rgb(219,163,21)" fg:x="116442" fg:w="92"/><text x="55.5238%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (49 samples, 0.02%)</title><rect x="55.2942%" y="1093" width="0.0233%" height="15" fill="rgb(234,86,24)" fg:x="116485" fg:w="49"/><text x="55.5442%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx (218 samples, 0.10%)</title><rect x="55.2145%" y="1237" width="0.1035%" height="15" fill="rgb(225,10,24)" fg:x="116317" fg:w="218"/><text x="55.4645%" y="1247.50"></text></g><g><title>async_std::task::spawn::spawn (218 samples, 0.10%)</title><rect x="55.2145%" y="1221" width="0.1035%" height="15" fill="rgb(218,109,7)" fg:x="116317" fg:w="218"/><text x="55.4645%" y="1231.50"></text></g><g><title>async_std::task::builder::Builder::spawn (218 samples, 0.10%)</title><rect x="55.2145%" y="1205" width="0.1035%" height="15" fill="rgb(210,20,26)" fg:x="116317" fg:w="218"/><text x="55.4645%" y="1215.50"></text></g><g><title>async_global_executor::executor::spawn (218 samples, 0.10%)</title><rect x="55.2145%" y="1189" width="0.1035%" height="15" fill="rgb(216,18,1)" fg:x="116317" fg:w="218"/><text x="55.4645%" y="1199.50"></text></g><g><title>async_executor::Executor::spawn (218 samples, 0.10%)</title><rect x="55.2145%" y="1173" width="0.1035%" height="15" fill="rgb(206,163,23)" fg:x="116317" fg:w="218"/><text x="55.4645%" y="1183.50"></text></g><g><title>[libc.so.6] (289 samples, 0.14%)</title><rect x="56.2849%" y="757" width="0.1372%" height="15" fill="rgb(229,150,31)" fg:x="118572" fg:w="289"/><text x="56.5349%" y="767.50"></text></g><g><title>[libc.so.6] (1,778 samples, 0.84%)</title><rect x="55.5842%" y="773" width="0.8440%" height="15" fill="rgb(231,10,5)" fg:x="117096" fg:w="1778"/><text x="55.8342%" y="783.50"></text></g><g><title>[libc.so.6] (2,050 samples, 0.97%)</title><rect x="55.4561%" y="789" width="0.9731%" height="15" fill="rgb(250,40,50)" fg:x="116826" fg:w="2050"/><text x="55.7061%" y="799.50"></text></g><g><title>__lll_lock_wait_private (50 samples, 0.02%)</title><rect x="56.4301%" y="789" width="0.0237%" height="15" fill="rgb(217,119,7)" fg:x="118878" fg:w="50"/><text x="56.6801%" y="799.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="56.4306%" y="773" width="0.0233%" height="15" fill="rgb(245,214,40)" fg:x="118879" fg:w="49"/><text x="56.6806%" y="783.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="56.4311%" y="757" width="0.0228%" height="15" fill="rgb(216,187,1)" fg:x="118880" fg:w="48"/><text x="56.6811%" y="767.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="56.4311%" y="741" width="0.0228%" height="15" fill="rgb(237,146,21)" fg:x="118880" fg:w="48"/><text x="56.6811%" y="751.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="56.4316%" y="725" width="0.0223%" height="15" fill="rgb(210,174,47)" fg:x="118881" fg:w="47"/><text x="56.6816%" y="735.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="56.4320%" y="709" width="0.0218%" height="15" fill="rgb(218,111,39)" fg:x="118882" fg:w="46"/><text x="56.6820%" y="719.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="56.4325%" y="693" width="0.0214%" height="15" fill="rgb(224,95,19)" fg:x="118883" fg:w="45"/><text x="56.6825%" y="703.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="56.4330%" y="677" width="0.0209%" height="15" fill="rgb(234,15,38)" fg:x="118884" fg:w="44"/><text x="56.6830%" y="687.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="56.4373%" y="661" width="0.0166%" height="15" fill="rgb(246,56,12)" fg:x="118893" fg:w="35"/><text x="56.6873%" y="671.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="56.4406%" y="645" width="0.0133%" height="15" fill="rgb(247,16,17)" fg:x="118900" fg:w="28"/><text x="56.6906%" y="655.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="56.4434%" y="629" width="0.0104%" height="15" fill="rgb(215,151,11)" fg:x="118906" fg:w="22"/><text x="56.6934%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,425 samples, 1.15%)</title><rect x="55.3322%" y="965" width="1.1511%" height="15" fill="rgb(225,16,24)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,425 samples, 1.15%)</title><rect x="55.3322%" y="949" width="1.1511%" height="15" fill="rgb(217,117,5)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,425 samples, 1.15%)</title><rect x="55.3322%" y="933" width="1.1511%" height="15" fill="rgb(246,187,53)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,425 samples, 1.15%)</title><rect x="55.3322%" y="917" width="1.1511%" height="15" fill="rgb(241,71,40)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,425 samples, 1.15%)</title><rect x="55.3322%" y="901" width="1.1511%" height="15" fill="rgb(231,67,39)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,425 samples, 1.15%)</title><rect x="55.3322%" y="885" width="1.1511%" height="15" fill="rgb(222,120,24)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,425 samples, 1.15%)</title><rect x="55.3322%" y="869" width="1.1511%" height="15" fill="rgb(248,3,3)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,425 samples, 1.15%)</title><rect x="55.3322%" y="853" width="1.1511%" height="15" fill="rgb(228,218,5)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,425 samples, 1.15%)</title><rect x="55.3322%" y="837" width="1.1511%" height="15" fill="rgb(212,202,43)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="847.50"></text></g><g><title>alloc::alloc::realloc (2,425 samples, 1.15%)</title><rect x="55.3322%" y="821" width="1.1511%" height="15" fill="rgb(235,183,2)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="831.50"></text></g><g><title>realloc (2,425 samples, 1.15%)</title><rect x="55.3322%" y="805" width="1.1511%" height="15" fill="rgb(230,165,10)" fg:x="116565" fg:w="2425"/><text x="55.5822%" y="815.50"></text></g><g><title>__lll_lock_wake_private (62 samples, 0.03%)</title><rect x="56.4539%" y="789" width="0.0294%" height="15" fill="rgb(219,54,40)" fg:x="118928" fg:w="62"/><text x="56.7039%" y="799.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="56.4539%" y="773" width="0.0294%" height="15" fill="rgb(244,73,9)" fg:x="118928" fg:w="62"/><text x="56.7039%" y="783.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="56.4548%" y="757" width="0.0285%" height="15" fill="rgb(212,32,45)" fg:x="118930" fg:w="60"/><text x="56.7048%" y="767.50"></text></g><g><title>[unknown] (59 samples, 0.03%)</title><rect x="56.4553%" y="741" width="0.0280%" height="15" fill="rgb(205,58,31)" fg:x="118931" fg:w="59"/><text x="56.7053%" y="751.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="56.4567%" y="725" width="0.0266%" height="15" fill="rgb(250,120,43)" fg:x="118934" fg:w="56"/><text x="56.7067%" y="735.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="56.4582%" y="709" width="0.0252%" height="15" fill="rgb(235,13,10)" fg:x="118937" fg:w="53"/><text x="56.7082%" y="719.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="56.4667%" y="693" width="0.0166%" height="15" fill="rgb(232,219,31)" fg:x="118955" fg:w="35"/><text x="56.7167%" y="703.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="56.4729%" y="677" width="0.0104%" height="15" fill="rgb(218,157,51)" fg:x="118968" fg:w="22"/><text x="56.7229%" y="687.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (2,426 samples, 1.15%)</title><rect x="55.3322%" y="1109" width="1.1516%" height="15" fill="rgb(211,91,52)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,426 samples, 1.15%)</title><rect x="55.3322%" y="1093" width="1.1516%" height="15" fill="rgb(240,173,1)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,426 samples, 1.15%)</title><rect x="55.3322%" y="1077" width="1.1516%" height="15" fill="rgb(248,20,47)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,426 samples, 1.15%)</title><rect x="55.3322%" y="1061" width="1.1516%" height="15" fill="rgb(217,221,40)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (2,426 samples, 1.15%)</title><rect x="55.3322%" y="1045" width="1.1516%" height="15" fill="rgb(226,149,51)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,426 samples, 1.15%)</title><rect x="55.3322%" y="1029" width="1.1516%" height="15" fill="rgb(252,193,7)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,426 samples, 1.15%)</title><rect x="55.3322%" y="1013" width="1.1516%" height="15" fill="rgb(205,123,0)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,426 samples, 1.15%)</title><rect x="55.3322%" y="997" width="1.1516%" height="15" fill="rgb(233,173,25)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,426 samples, 1.15%)</title><rect x="55.3322%" y="981" width="1.1516%" height="15" fill="rgb(216,63,32)" fg:x="116565" fg:w="2426"/><text x="55.5822%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Link::set_local_psid_mapping (28 samples, 0.01%)</title><rect x="56.4890%" y="965" width="0.0133%" height="15" fill="rgb(209,56,45)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="975.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (28 samples, 0.01%)</title><rect x="56.4890%" y="949" width="0.0133%" height="15" fill="rgb(226,111,49)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (28 samples, 0.01%)</title><rect x="56.4890%" y="933" width="0.0133%" height="15" fill="rgb(244,181,21)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.01%)</title><rect x="56.4890%" y="917" width="0.0133%" height="15" fill="rgb(222,126,15)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.01%)</title><rect x="56.4890%" y="901" width="0.0133%" height="15" fill="rgb(222,95,17)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.01%)</title><rect x="56.4890%" y="885" width="0.0133%" height="15" fill="rgb(254,46,5)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.01%)</title><rect x="56.4890%" y="869" width="0.0133%" height="15" fill="rgb(236,216,35)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.01%)</title><rect x="56.4890%" y="853" width="0.0133%" height="15" fill="rgb(217,187,26)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.01%)</title><rect x="56.4890%" y="837" width="0.0133%" height="15" fill="rgb(207,192,25)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.01%)</title><rect x="56.4890%" y="821" width="0.0133%" height="15" fill="rgb(253,135,27)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.01%)</title><rect x="56.4890%" y="805" width="0.0133%" height="15" fill="rgb(211,122,29)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="815.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.01%)</title><rect x="56.4890%" y="789" width="0.0133%" height="15" fill="rgb(233,162,40)" fg:x="119002" fg:w="28"/><text x="56.7390%" y="799.50"></text></g><g><title>realloc (27 samples, 0.01%)</title><rect x="56.4895%" y="773" width="0.0128%" height="15" fill="rgb(222,184,47)" fg:x="119003" fg:w="27"/><text x="56.7395%" y="783.50"></text></g><g><title>zenoh::net::routing::network::Link::set_pid_mapping (46 samples, 0.02%)</title><rect x="56.5023%" y="965" width="0.0218%" height="15" fill="rgb(249,99,23)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="975.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (46 samples, 0.02%)</title><rect x="56.5023%" y="949" width="0.0218%" height="15" fill="rgb(214,60,12)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (46 samples, 0.02%)</title><rect x="56.5023%" y="933" width="0.0218%" height="15" fill="rgb(250,229,36)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (46 samples, 0.02%)</title><rect x="56.5023%" y="917" width="0.0218%" height="15" fill="rgb(232,195,10)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (46 samples, 0.02%)</title><rect x="56.5023%" y="901" width="0.0218%" height="15" fill="rgb(205,213,31)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (46 samples, 0.02%)</title><rect x="56.5023%" y="885" width="0.0218%" height="15" fill="rgb(237,43,8)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (46 samples, 0.02%)</title><rect x="56.5023%" y="869" width="0.0218%" height="15" fill="rgb(216,208,3)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (46 samples, 0.02%)</title><rect x="56.5023%" y="853" width="0.0218%" height="15" fill="rgb(228,179,44)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (46 samples, 0.02%)</title><rect x="56.5023%" y="837" width="0.0218%" height="15" fill="rgb(230,192,27)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (46 samples, 0.02%)</title><rect x="56.5023%" y="821" width="0.0218%" height="15" fill="rgb(251,30,38)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (46 samples, 0.02%)</title><rect x="56.5023%" y="805" width="0.0218%" height="15" fill="rgb(246,55,52)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="815.50"></text></g><g><title>alloc::alloc::realloc (46 samples, 0.02%)</title><rect x="56.5023%" y="789" width="0.0218%" height="15" fill="rgb(249,79,26)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="799.50"></text></g><g><title>realloc (46 samples, 0.02%)</title><rect x="56.5023%" y="773" width="0.0218%" height="15" fill="rgb(220,202,16)" fg:x="119030" fg:w="46"/><text x="56.7523%" y="783.50"></text></g><g><title>[libc.so.6] (41 samples, 0.02%)</title><rect x="56.5047%" y="757" width="0.0195%" height="15" fill="rgb(250,170,23)" fg:x="119035" fg:w="41"/><text x="56.7547%" y="767.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="56.5051%" y="741" width="0.0190%" height="15" fill="rgb(230,7,37)" fg:x="119036" fg:w="40"/><text x="56.7551%" y="751.50"></text></g><g><title>zenoh::net::routing::network::Network::add_node (57 samples, 0.03%)</title><rect x="56.5241%" y="965" width="0.0271%" height="15" fill="rgb(213,71,1)" fg:x="119076" fg:w="57"/><text x="56.7741%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.07%)</title><rect x="56.4838%" y="1061" width="0.0731%" height="15" fill="rgb(227,87,39)" fg:x="118991" fg:w="154"/><text x="56.7338%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (154 samples, 0.07%)</title><rect x="56.4838%" y="1045" width="0.0731%" height="15" fill="rgb(210,41,29)" fg:x="118991" fg:w="154"/><text x="56.7338%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (154 samples, 0.07%)</title><rect x="56.4838%" y="1029" width="0.0731%" height="15" fill="rgb(206,191,31)" fg:x="118991" fg:w="154"/><text x="56.7338%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (154 samples, 0.07%)</title><rect x="56.4838%" y="1013" width="0.0731%" height="15" fill="rgb(247,75,54)" fg:x="118991" fg:w="154"/><text x="56.7338%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (154 samples, 0.07%)</title><rect x="56.4838%" y="997" width="0.0731%" height="15" fill="rgb(208,54,50)" fg:x="118991" fg:w="154"/><text x="56.7338%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (154 samples, 0.07%)</title><rect x="56.4838%" y="981" width="0.0731%" height="15" fill="rgb(214,90,37)" fg:x="118991" fg:w="154"/><text x="56.7338%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (182 samples, 0.09%)</title><rect x="56.4838%" y="1093" width="0.0864%" height="15" fill="rgb(220,132,6)" fg:x="118991" fg:w="182"/><text x="56.7338%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (182 samples, 0.09%)</title><rect x="56.4838%" y="1077" width="0.0864%" height="15" fill="rgb(213,167,7)" fg:x="118991" fg:w="182"/><text x="56.7338%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.01%)</title><rect x="56.5569%" y="1061" width="0.0133%" height="15" fill="rgb(243,36,27)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.01%)</title><rect x="56.5569%" y="1045" width="0.0133%" height="15" fill="rgb(235,147,12)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.01%)</title><rect x="56.5569%" y="1029" width="0.0133%" height="15" fill="rgb(212,198,44)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.01%)</title><rect x="56.5569%" y="1013" width="0.0133%" height="15" fill="rgb(218,68,50)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.01%)</title><rect x="56.5569%" y="997" width="0.0133%" height="15" fill="rgb(224,79,48)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.01%)</title><rect x="56.5569%" y="981" width="0.0133%" height="15" fill="rgb(213,191,50)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.01%)</title><rect x="56.5569%" y="965" width="0.0133%" height="15" fill="rgb(254,146,10)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="975.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.01%)</title><rect x="56.5569%" y="949" width="0.0133%" height="15" fill="rgb(215,175,11)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="959.50"></text></g><g><title>realloc (28 samples, 0.01%)</title><rect x="56.5569%" y="933" width="0.0133%" height="15" fill="rgb(207,49,7)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="943.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="56.5569%" y="917" width="0.0133%" height="15" fill="rgb(234,144,29)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="927.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="56.5569%" y="901" width="0.0133%" height="15" fill="rgb(213,222,48)" fg:x="119145" fg:w="28"/><text x="56.8069%" y="911.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="56.5588%" y="885" width="0.0114%" height="15" fill="rgb(222,8,6)" fg:x="119149" fg:w="24"/><text x="56.8088%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;&gt; (167 samples, 0.08%)</title><rect x="56.5801%" y="997" width="0.0793%" height="15" fill="rgb(221,114,49)" fg:x="119194" fg:w="167"/><text x="56.8301%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::PeerId&gt;&gt; (167 samples, 0.08%)</title><rect x="56.5801%" y="981" width="0.0793%" height="15" fill="rgb(250,140,42)" fg:x="119194" fg:w="167"/><text x="56.8301%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.08%)</title><rect x="56.5801%" y="965" width="0.0793%" height="15" fill="rgb(250,150,27)" fg:x="119194" fg:w="167"/><text x="56.8301%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (167 samples, 0.08%)</title><rect x="56.5801%" y="949" width="0.0793%" height="15" fill="rgb(252,159,3)" fg:x="119194" fg:w="167"/><text x="56.8301%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (167 samples, 0.08%)</title><rect x="56.5801%" y="933" width="0.0793%" height="15" fill="rgb(241,182,3)" fg:x="119194" fg:w="167"/><text x="56.8301%" y="943.50"></text></g><g><title>cfree (167 samples, 0.08%)</title><rect x="56.5801%" y="917" width="0.0793%" height="15" fill="rgb(236,3,9)" fg:x="119194" fg:w="167"/><text x="56.8301%" y="927.50"></text></g><g><title>[libc.so.6] (167 samples, 0.08%)</title><rect x="56.5801%" y="901" width="0.0793%" height="15" fill="rgb(223,227,51)" fg:x="119194" fg:w="167"/><text x="56.8301%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.07%)</title><rect x="56.6594%" y="965" width="0.0693%" height="15" fill="rgb(232,133,30)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (146 samples, 0.07%)</title><rect x="56.6594%" y="949" width="0.0693%" height="15" fill="rgb(209,93,27)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (146 samples, 0.07%)</title><rect x="56.6594%" y="933" width="0.0693%" height="15" fill="rgb(208,108,34)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (146 samples, 0.07%)</title><rect x="56.6594%" y="917" width="0.0693%" height="15" fill="rgb(215,189,13)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (146 samples, 0.07%)</title><rect x="56.6594%" y="901" width="0.0693%" height="15" fill="rgb(206,88,23)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (146 samples, 0.07%)</title><rect x="56.6594%" y="885" width="0.0693%" height="15" fill="rgb(240,173,0)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.07%)</title><rect x="56.6594%" y="869" width="0.0693%" height="15" fill="rgb(223,106,52)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (146 samples, 0.07%)</title><rect x="56.6594%" y="853" width="0.0693%" height="15" fill="rgb(206,130,16)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (146 samples, 0.07%)</title><rect x="56.6594%" y="837" width="0.0693%" height="15" fill="rgb(220,54,25)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="847.50"></text></g><g><title>cfree (146 samples, 0.07%)</title><rect x="56.6594%" y="821" width="0.0693%" height="15" fill="rgb(210,4,38)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="831.50"></text></g><g><title>[libc.so.6] (146 samples, 0.07%)</title><rect x="56.6594%" y="805" width="0.0693%" height="15" fill="rgb(238,94,39)" fg:x="119361" fg:w="146"/><text x="56.9094%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;&gt; (179 samples, 0.08%)</title><rect x="56.6594%" y="997" width="0.0850%" height="15" fill="rgb(234,124,34)" fg:x="119361" fg:w="179"/><text x="56.9094%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (179 samples, 0.08%)</title><rect x="56.6594%" y="981" width="0.0850%" height="15" fill="rgb(221,91,40)" fg:x="119361" fg:w="179"/><text x="56.9094%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (33 samples, 0.02%)</title><rect x="56.7287%" y="965" width="0.0157%" height="15" fill="rgb(246,53,28)" fg:x="119507" fg:w="33"/><text x="56.9787%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.02%)</title><rect x="56.7287%" y="949" width="0.0157%" height="15" fill="rgb(229,109,7)" fg:x="119507" fg:w="33"/><text x="56.9787%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.02%)</title><rect x="56.7287%" y="933" width="0.0157%" height="15" fill="rgb(249,117,8)" fg:x="119507" fg:w="33"/><text x="56.9787%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.02%)</title><rect x="56.7287%" y="917" width="0.0157%" height="15" fill="rgb(210,181,1)" fg:x="119507" fg:w="33"/><text x="56.9787%" y="927.50"></text></g><g><title>cfree (33 samples, 0.02%)</title><rect x="56.7287%" y="901" width="0.0157%" height="15" fill="rgb(211,66,1)" fg:x="119507" fg:w="33"/><text x="56.9787%" y="911.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="56.7287%" y="885" width="0.0157%" height="15" fill="rgb(221,90,14)" fg:x="119507" fg:w="33"/><text x="56.9787%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Link::set_pid_mapping (30 samples, 0.01%)</title><rect x="56.7482%" y="997" width="0.0142%" height="15" fill="rgb(219,222,44)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="1007.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (30 samples, 0.01%)</title><rect x="56.7482%" y="981" width="0.0142%" height="15" fill="rgb(246,34,33)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (30 samples, 0.01%)</title><rect x="56.7482%" y="965" width="0.0142%" height="15" fill="rgb(227,135,41)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 0.01%)</title><rect x="56.7482%" y="949" width="0.0142%" height="15" fill="rgb(226,15,14)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.01%)</title><rect x="56.7482%" y="933" width="0.0142%" height="15" fill="rgb(236,148,47)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.01%)</title><rect x="56.7482%" y="917" width="0.0142%" height="15" fill="rgb(233,162,52)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.01%)</title><rect x="56.7482%" y="901" width="0.0142%" height="15" fill="rgb(244,35,28)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.01%)</title><rect x="56.7482%" y="885" width="0.0142%" height="15" fill="rgb(205,121,10)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.01%)</title><rect x="56.7482%" y="869" width="0.0142%" height="15" fill="rgb(250,58,18)" fg:x="119548" fg:w="30"/><text x="56.9982%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (39 samples, 0.02%)</title><rect x="56.7819%" y="901" width="0.0185%" height="15" fill="rgb(216,37,13)" fg:x="119619" fg:w="39"/><text x="57.0319%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (39 samples, 0.02%)</title><rect x="56.7819%" y="885" width="0.0185%" height="15" fill="rgb(221,215,42)" fg:x="119619" fg:w="39"/><text x="57.0319%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (39 samples, 0.02%)</title><rect x="56.7819%" y="869" width="0.0185%" height="15" fill="rgb(217,214,19)" fg:x="119619" fg:w="39"/><text x="57.0319%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.01%)</title><rect x="56.7881%" y="853" width="0.0123%" height="15" fill="rgb(233,139,13)" fg:x="119632" fg:w="26"/><text x="57.0381%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (47 samples, 0.02%)</title><rect x="56.8004%" y="901" width="0.0223%" height="15" fill="rgb(247,168,23)" fg:x="119658" fg:w="47"/><text x="57.0504%" y="911.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (45 samples, 0.02%)</title><rect x="56.8014%" y="885" width="0.0214%" height="15" fill="rgb(207,202,1)" fg:x="119660" fg:w="45"/><text x="57.0514%" y="895.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (43 samples, 0.02%)</title><rect x="56.8023%" y="869" width="0.0204%" height="15" fill="rgb(220,155,48)" fg:x="119662" fg:w="43"/><text x="57.0523%" y="879.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (43 samples, 0.02%)</title><rect x="56.8023%" y="853" width="0.0204%" height="15" fill="rgb(250,43,26)" fg:x="119662" fg:w="43"/><text x="57.0523%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="56.8289%" y="789" width="0.0237%" height="15" fill="rgb(212,190,23)" fg:x="119718" fg:w="50"/><text x="57.0789%" y="799.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (69 samples, 0.03%)</title><rect x="56.8227%" y="853" width="0.0328%" height="15" fill="rgb(216,39,24)" fg:x="119705" fg:w="69"/><text x="57.0727%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (69 samples, 0.03%)</title><rect x="56.8227%" y="837" width="0.0328%" height="15" fill="rgb(252,113,16)" fg:x="119705" fg:w="69"/><text x="57.0727%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (66 samples, 0.03%)</title><rect x="56.8241%" y="821" width="0.0313%" height="15" fill="rgb(208,113,19)" fg:x="119708" fg:w="66"/><text x="57.0741%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (56 samples, 0.03%)</title><rect x="56.8289%" y="805" width="0.0266%" height="15" fill="rgb(234,107,25)" fg:x="119718" fg:w="56"/><text x="57.0789%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.02%)</title><rect x="56.8588%" y="805" width="0.0195%" height="15" fill="rgb(234,217,51)" fg:x="119781" fg:w="41"/><text x="57.1088%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (122 samples, 0.06%)</title><rect x="56.8227%" y="869" width="0.0579%" height="15" fill="rgb(251,29,42)" fg:x="119705" fg:w="122"/><text x="57.0727%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (53 samples, 0.03%)</title><rect x="56.8555%" y="853" width="0.0252%" height="15" fill="rgb(221,62,51)" fg:x="119774" fg:w="53"/><text x="57.1055%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (52 samples, 0.02%)</title><rect x="56.8559%" y="837" width="0.0247%" height="15" fill="rgb(240,192,43)" fg:x="119775" fg:w="52"/><text x="57.1059%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (46 samples, 0.02%)</title><rect x="56.8588%" y="821" width="0.0218%" height="15" fill="rgb(224,157,47)" fg:x="119781" fg:w="46"/><text x="57.1088%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (235 samples, 0.11%)</title><rect x="56.7724%" y="933" width="0.1116%" height="15" fill="rgb(226,84,45)" fg:x="119599" fg:w="235"/><text x="57.0224%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (235 samples, 0.11%)</title><rect x="56.7724%" y="917" width="0.1116%" height="15" fill="rgb(208,207,23)" fg:x="119599" fg:w="235"/><text x="57.0224%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (129 samples, 0.06%)</title><rect x="56.8227%" y="901" width="0.0612%" height="15" fill="rgb(253,34,51)" fg:x="119705" fg:w="129"/><text x="57.0727%" y="911.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (129 samples, 0.06%)</title><rect x="56.8227%" y="885" width="0.0612%" height="15" fill="rgb(227,26,34)" fg:x="119705" fg:w="129"/><text x="57.0727%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (138 samples, 0.07%)</title><rect x="56.8915%" y="869" width="0.0655%" height="15" fill="rgb(245,75,19)" fg:x="119850" fg:w="138"/><text x="57.1415%" y="879.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (138 samples, 0.07%)</title><rect x="56.8915%" y="853" width="0.0655%" height="15" fill="rgb(250,191,31)" fg:x="119850" fg:w="138"/><text x="57.1415%" y="863.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (38 samples, 0.02%)</title><rect x="56.9390%" y="837" width="0.0180%" height="15" fill="rgb(224,11,50)" fg:x="119950" fg:w="38"/><text x="57.1890%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (38 samples, 0.02%)</title><rect x="56.9390%" y="821" width="0.0180%" height="15" fill="rgb(231,171,7)" fg:x="119950" fg:w="38"/><text x="57.1890%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (38 samples, 0.02%)</title><rect x="56.9390%" y="805" width="0.0180%" height="15" fill="rgb(252,214,10)" fg:x="119950" fg:w="38"/><text x="57.1890%" y="815.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="56.9390%" y="789" width="0.0180%" height="15" fill="rgb(249,45,46)" fg:x="119950" fg:w="38"/><text x="57.1890%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (142 samples, 0.07%)</title><rect x="56.8915%" y="885" width="0.0674%" height="15" fill="rgb(240,173,7)" fg:x="119850" fg:w="142"/><text x="57.1415%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (82 samples, 0.04%)</title><rect x="56.9675%" y="885" width="0.0389%" height="15" fill="rgb(235,214,13)" fg:x="120010" fg:w="82"/><text x="57.2175%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (82 samples, 0.04%)</title><rect x="56.9675%" y="869" width="0.0389%" height="15" fill="rgb(245,156,8)" fg:x="120010" fg:w="82"/><text x="57.2175%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (82 samples, 0.04%)</title><rect x="56.9675%" y="853" width="0.0389%" height="15" fill="rgb(235,46,12)" fg:x="120010" fg:w="82"/><text x="57.2175%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (265 samples, 0.13%)</title><rect x="56.8839%" y="901" width="0.1258%" height="15" fill="rgb(221,81,14)" fg:x="119834" fg:w="265"/><text x="57.1339%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (267 samples, 0.13%)</title><rect x="56.8839%" y="933" width="0.1267%" height="15" fill="rgb(238,207,9)" fg:x="119834" fg:w="267"/><text x="57.1339%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (267 samples, 0.13%)</title><rect x="56.8839%" y="917" width="0.1267%" height="15" fill="rgb(224,129,35)" fg:x="119834" fg:w="267"/><text x="57.1339%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (512 samples, 0.24%)</title><rect x="56.7681%" y="949" width="0.2430%" height="15" fill="rgb(243,218,34)" fg:x="119590" fg:w="512"/><text x="57.0181%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,538 samples, 1.68%)</title><rect x="55.3322%" y="1157" width="1.6795%" height="15" fill="rgb(220,166,13)" fg:x="116565" fg:w="3538"/><text x="55.5822%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,538 samples, 1.68%)</title><rect x="55.3322%" y="1141" width="1.6795%" height="15" fill="rgb(227,167,49)" fg:x="116565" fg:w="3538"/><text x="55.5822%" y="1151.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3,538 samples, 1.68%)</title><rect x="55.3322%" y="1125" width="1.6795%" height="15" fill="rgb(234,142,12)" fg:x="116565" fg:w="3538"/><text x="55.5822%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,112 samples, 0.53%)</title><rect x="56.4838%" y="1109" width="0.5279%" height="15" fill="rgb(207,100,48)" fg:x="118991" fg:w="1112"/><text x="56.7338%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (930 samples, 0.44%)</title><rect x="56.5702%" y="1093" width="0.4415%" height="15" fill="rgb(210,25,14)" fg:x="119173" fg:w="930"/><text x="56.8202%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (930 samples, 0.44%)</title><rect x="56.5702%" y="1077" width="0.4415%" height="15" fill="rgb(246,116,27)" fg:x="119173" fg:w="930"/><text x="56.8202%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (930 samples, 0.44%)</title><rect x="56.5702%" y="1061" width="0.4415%" height="15" fill="rgb(214,193,42)" fg:x="119173" fg:w="930"/><text x="56.8202%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (930 samples, 0.44%)</title><rect x="56.5702%" y="1045" width="0.4415%" height="15" fill="rgb(214,122,8)" fg:x="119173" fg:w="930"/><text x="56.8202%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (930 samples, 0.44%)</title><rect x="56.5702%" y="1029" width="0.4415%" height="15" fill="rgb(244,173,18)" fg:x="119173" fg:w="930"/><text x="56.8202%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (930 samples, 0.44%)</title><rect x="56.5702%" y="1013" width="0.4415%" height="15" fill="rgb(232,68,19)" fg:x="119173" fg:w="930"/><text x="56.8202%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (515 samples, 0.24%)</title><rect x="56.7672%" y="997" width="0.2445%" height="15" fill="rgb(236,224,1)" fg:x="119588" fg:w="515"/><text x="57.0172%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (515 samples, 0.24%)</title><rect x="56.7672%" y="981" width="0.2445%" height="15" fill="rgb(240,11,8)" fg:x="119588" fg:w="515"/><text x="57.0172%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (515 samples, 0.24%)</title><rect x="56.7672%" y="965" width="0.2445%" height="15" fill="rgb(244,159,20)" fg:x="119588" fg:w="515"/><text x="57.0172%" y="975.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.01%)</title><rect x="57.0501%" y="1125" width="0.0104%" height="15" fill="rgb(240,223,54)" fg:x="120184" fg:w="22"/><text x="57.3001%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (70 samples, 0.03%)</title><rect x="57.0748%" y="1077" width="0.0332%" height="15" fill="rgb(237,146,5)" fg:x="120236" fg:w="70"/><text x="57.3248%" y="1087.50"></text></g><g><title>malloc (50 samples, 0.02%)</title><rect x="57.0843%" y="1061" width="0.0237%" height="15" fill="rgb(218,221,32)" fg:x="120256" fg:w="50"/><text x="57.3343%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (108 samples, 0.05%)</title><rect x="57.0634%" y="1109" width="0.0513%" height="15" fill="rgb(244,96,26)" fg:x="120212" fg:w="108"/><text x="57.3134%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (96 samples, 0.05%)</title><rect x="57.0691%" y="1093" width="0.0456%" height="15" fill="rgb(245,184,37)" fg:x="120224" fg:w="96"/><text x="57.3191%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (131 samples, 0.06%)</title><rect x="57.0605%" y="1125" width="0.0622%" height="15" fill="rgb(248,91,47)" fg:x="120206" fg:w="131"/><text x="57.3105%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (76 samples, 0.04%)</title><rect x="57.1294%" y="1125" width="0.0361%" height="15" fill="rgb(243,199,8)" fg:x="120351" fg:w="76"/><text x="57.3794%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.04%)</title><rect x="57.1294%" y="1109" width="0.0361%" height="15" fill="rgb(249,12,15)" fg:x="120351" fg:w="76"/><text x="57.3794%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(petgraph::graph_impl::NodeIndex,bool),alloc::alloc::Global&gt;&gt; (76 samples, 0.04%)</title><rect x="57.1294%" y="1093" width="0.0361%" height="15" fill="rgb(245,97,12)" fg:x="120351" fg:w="76"/><text x="57.3794%" y="1103.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.04%)</title><rect x="57.1294%" y="1077" width="0.0361%" height="15" fill="rgb(244,61,1)" fg:x="120351" fg:w="76"/><text x="57.3794%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (76 samples, 0.04%)</title><rect x="57.1294%" y="1061" width="0.0361%" height="15" fill="rgb(222,194,10)" fg:x="120351" fg:w="76"/><text x="57.3794%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.04%)</title><rect x="57.1294%" y="1045" width="0.0361%" height="15" fill="rgb(226,178,8)" fg:x="120351" fg:w="76"/><text x="57.3794%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (76 samples, 0.04%)</title><rect x="57.1294%" y="1029" width="0.0361%" height="15" fill="rgb(241,32,34)" fg:x="120351" fg:w="76"/><text x="57.3794%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (76 samples, 0.04%)</title><rect x="57.1294%" y="1013" width="0.0361%" height="15" fill="rgb(254,26,6)" fg:x="120351" fg:w="76"/><text x="57.3794%" y="1023.50"></text></g><g><title>cfree (56 samples, 0.03%)</title><rect x="57.1389%" y="997" width="0.0266%" height="15" fill="rgb(249,71,11)" fg:x="120371" fg:w="56"/><text x="57.3889%" y="1007.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="57.1498%" y="981" width="0.0157%" height="15" fill="rgb(232,170,27)" fg:x="120394" fg:w="33"/><text x="57.3998%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (160 samples, 0.08%)</title><rect x="57.2912%" y="933" width="0.0760%" height="15" fill="rgb(214,223,17)" fg:x="120692" fg:w="160"/><text x="57.5412%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (160 samples, 0.08%)</title><rect x="57.2912%" y="917" width="0.0760%" height="15" fill="rgb(250,18,15)" fg:x="120692" fg:w="160"/><text x="57.5412%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (160 samples, 0.08%)</title><rect x="57.2912%" y="901" width="0.0760%" height="15" fill="rgb(212,153,51)" fg:x="120692" fg:w="160"/><text x="57.5412%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (150 samples, 0.07%)</title><rect x="57.2960%" y="885" width="0.0712%" height="15" fill="rgb(219,194,12)" fg:x="120702" fg:w="150"/><text x="57.5460%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (150 samples, 0.07%)</title><rect x="57.2960%" y="869" width="0.0712%" height="15" fill="rgb(212,58,17)" fg:x="120702" fg:w="150"/><text x="57.5460%" y="879.50"></text></g><g><title>alloc::alloc::alloc (150 samples, 0.07%)</title><rect x="57.2960%" y="853" width="0.0712%" height="15" fill="rgb(254,5,10)" fg:x="120702" fg:w="150"/><text x="57.5460%" y="863.50"></text></g><g><title>malloc (118 samples, 0.06%)</title><rect x="57.3112%" y="837" width="0.0560%" height="15" fill="rgb(246,91,7)" fg:x="120734" fg:w="118"/><text x="57.5612%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (256 samples, 0.12%)</title><rect x="57.2912%" y="997" width="0.1215%" height="15" fill="rgb(218,108,49)" fg:x="120692" fg:w="256"/><text x="57.5412%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (256 samples, 0.12%)</title><rect x="57.2912%" y="981" width="0.1215%" height="15" fill="rgb(238,123,20)" fg:x="120692" fg:w="256"/><text x="57.5412%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (256 samples, 0.12%)</title><rect x="57.2912%" y="965" width="0.1215%" height="15" fill="rgb(231,69,23)" fg:x="120692" fg:w="256"/><text x="57.5412%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (256 samples, 0.12%)</title><rect x="57.2912%" y="949" width="0.1215%" height="15" fill="rgb(230,209,3)" fg:x="120692" fg:w="256"/><text x="57.5412%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (96 samples, 0.05%)</title><rect x="57.3672%" y="933" width="0.0456%" height="15" fill="rgb(231,19,0)" fg:x="120852" fg:w="96"/><text x="57.6172%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (96 samples, 0.05%)</title><rect x="57.3672%" y="917" width="0.0456%" height="15" fill="rgb(226,192,25)" fg:x="120852" fg:w="96"/><text x="57.6172%" y="927.50"></text></g><g><title>[libc.so.6] (95 samples, 0.05%)</title><rect x="57.3677%" y="901" width="0.0451%" height="15" fill="rgb(223,175,53)" fg:x="120853" fg:w="95"/><text x="57.6177%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (321 samples, 0.15%)</title><rect x="57.2609%" y="1013" width="0.1524%" height="15" fill="rgb(248,35,51)" fg:x="120628" fg:w="321"/><text x="57.5109%" y="1023.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (441 samples, 0.21%)</title><rect x="57.2067%" y="1029" width="0.2093%" height="15" fill="rgb(230,37,26)" fg:x="120514" fg:w="441"/><text x="57.4567%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (80 samples, 0.04%)</title><rect x="57.4170%" y="1029" width="0.0380%" height="15" fill="rgb(206,120,22)" fg:x="120957" fg:w="80"/><text x="57.6670%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.04%)</title><rect x="57.4180%" y="1013" width="0.0370%" height="15" fill="rgb(207,165,28)" fg:x="120959" fg:w="78"/><text x="57.6680%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (77 samples, 0.04%)</title><rect x="57.4184%" y="997" width="0.0366%" height="15" fill="rgb(226,23,46)" fg:x="120960" fg:w="77"/><text x="57.6684%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (74 samples, 0.04%)</title><rect x="57.4199%" y="981" width="0.0351%" height="15" fill="rgb(208,130,44)" fg:x="120963" fg:w="74"/><text x="57.6699%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (74 samples, 0.04%)</title><rect x="57.4199%" y="965" width="0.0351%" height="15" fill="rgb(231,67,8)" fg:x="120963" fg:w="74"/><text x="57.6699%" y="975.50"></text></g><g><title>alloc::alloc::alloc (71 samples, 0.03%)</title><rect x="57.4213%" y="949" width="0.0337%" height="15" fill="rgb(205,183,22)" fg:x="120966" fg:w="71"/><text x="57.6713%" y="959.50"></text></g><g><title>malloc (55 samples, 0.03%)</title><rect x="57.4289%" y="933" width="0.0261%" height="15" fill="rgb(224,47,9)" fg:x="120982" fg:w="55"/><text x="57.6789%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (534 samples, 0.25%)</title><rect x="57.2053%" y="1045" width="0.2535%" height="15" fill="rgb(250,183,49)" fg:x="120511" fg:w="534"/><text x="57.4553%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (548 samples, 0.26%)</title><rect x="57.2010%" y="1093" width="0.2601%" height="15" fill="rgb(220,151,39)" fg:x="120502" fg:w="548"/><text x="57.4510%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (539 samples, 0.26%)</title><rect x="57.2053%" y="1077" width="0.2559%" height="15" fill="rgb(220,118,20)" fg:x="120511" fg:w="539"/><text x="57.4553%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (539 samples, 0.26%)</title><rect x="57.2053%" y="1061" width="0.2559%" height="15" fill="rgb(231,65,51)" fg:x="120511" fg:w="539"/><text x="57.4553%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (602 samples, 0.29%)</title><rect x="57.1759%" y="1109" width="0.2858%" height="15" fill="rgb(253,125,37)" fg:x="120449" fg:w="602"/><text x="57.4259%" y="1119.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (30 samples, 0.01%)</title><rect x="57.4616%" y="1109" width="0.0142%" height="15" fill="rgb(232,102,6)" fg:x="121051" fg:w="30"/><text x="57.7116%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 0.01%)</title><rect x="57.4953%" y="1029" width="0.0128%" height="15" fill="rgb(251,105,13)" fg:x="121122" fg:w="27"/><text x="57.7453%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.02%)</title><rect x="57.5580%" y="981" width="0.0157%" height="15" fill="rgb(222,179,29)" fg:x="121254" fg:w="33"/><text x="57.8080%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (214 samples, 0.10%)</title><rect x="57.5533%" y="1013" width="0.1016%" height="15" fill="rgb(229,180,53)" fg:x="121244" fg:w="214"/><text x="57.8033%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (204 samples, 0.10%)</title><rect x="57.5580%" y="997" width="0.0968%" height="15" fill="rgb(238,104,13)" fg:x="121254" fg:w="204"/><text x="57.8080%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (171 samples, 0.08%)</title><rect x="57.5737%" y="981" width="0.0812%" height="15" fill="rgb(210,130,5)" fg:x="121287" fg:w="171"/><text x="57.8237%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (171 samples, 0.08%)</title><rect x="57.5737%" y="965" width="0.0812%" height="15" fill="rgb(233,87,49)" fg:x="121287" fg:w="171"/><text x="57.8237%" y="975.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (155 samples, 0.07%)</title><rect x="57.5813%" y="949" width="0.0736%" height="15" fill="rgb(243,34,9)" fg:x="121303" fg:w="155"/><text x="57.8313%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (71 samples, 0.03%)</title><rect x="57.6211%" y="933" width="0.0337%" height="15" fill="rgb(235,225,10)" fg:x="121387" fg:w="71"/><text x="57.8711%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (71 samples, 0.03%)</title><rect x="57.6211%" y="917" width="0.0337%" height="15" fill="rgb(212,0,30)" fg:x="121387" fg:w="71"/><text x="57.8711%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (71 samples, 0.03%)</title><rect x="57.6211%" y="901" width="0.0337%" height="15" fill="rgb(211,177,0)" fg:x="121387" fg:w="71"/><text x="57.8711%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (71 samples, 0.03%)</title><rect x="57.6211%" y="885" width="0.0337%" height="15" fill="rgb(225,220,11)" fg:x="121387" fg:w="71"/><text x="57.8711%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (43 samples, 0.02%)</title><rect x="57.6691%" y="949" width="0.0204%" height="15" fill="rgb(215,10,13)" fg:x="121488" fg:w="43"/><text x="57.9191%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (100 samples, 0.05%)</title><rect x="57.6672%" y="965" width="0.0475%" height="15" fill="rgb(240,177,14)" fg:x="121484" fg:w="100"/><text x="57.9172%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (125 samples, 0.06%)</title><rect x="57.6558%" y="1013" width="0.0593%" height="15" fill="rgb(243,7,39)" fg:x="121460" fg:w="125"/><text x="57.9058%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (125 samples, 0.06%)</title><rect x="57.6558%" y="997" width="0.0593%" height="15" fill="rgb(212,99,0)" fg:x="121460" fg:w="125"/><text x="57.9058%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (117 samples, 0.06%)</title><rect x="57.6596%" y="981" width="0.0555%" height="15" fill="rgb(225,162,48)" fg:x="121468" fg:w="117"/><text x="57.9096%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (477 samples, 0.23%)</title><rect x="57.4953%" y="1045" width="0.2264%" height="15" fill="rgb(246,16,25)" fg:x="121122" fg:w="477"/><text x="57.7453%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (450 samples, 0.21%)</title><rect x="57.5082%" y="1029" width="0.2136%" height="15" fill="rgb(220,150,2)" fg:x="121149" fg:w="450"/><text x="57.7582%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.02%)</title><rect x="57.7218%" y="1045" width="0.0157%" height="15" fill="rgb(237,113,11)" fg:x="121599" fg:w="33"/><text x="57.9718%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (33 samples, 0.02%)</title><rect x="57.7218%" y="1029" width="0.0157%" height="15" fill="rgb(236,70,20)" fg:x="121599" fg:w="33"/><text x="57.9718%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (24 samples, 0.01%)</title><rect x="57.7260%" y="1013" width="0.0114%" height="15" fill="rgb(234,94,7)" fg:x="121608" fg:w="24"/><text x="57.9760%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (24 samples, 0.01%)</title><rect x="57.7260%" y="997" width="0.0114%" height="15" fill="rgb(250,221,0)" fg:x="121608" fg:w="24"/><text x="57.9760%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (28 samples, 0.01%)</title><rect x="57.7374%" y="1045" width="0.0133%" height="15" fill="rgb(245,149,46)" fg:x="121632" fg:w="28"/><text x="57.9874%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.01%)</title><rect x="57.7374%" y="1029" width="0.0133%" height="15" fill="rgb(215,37,27)" fg:x="121632" fg:w="28"/><text x="57.9874%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.01%)</title><rect x="57.7374%" y="1013" width="0.0133%" height="15" fill="rgb(232,65,3)" fg:x="121632" fg:w="28"/><text x="57.9874%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.01%)</title><rect x="57.7374%" y="997" width="0.0133%" height="15" fill="rgb(214,2,16)" fg:x="121632" fg:w="28"/><text x="57.9874%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="57.7374%" y="981" width="0.0133%" height="15" fill="rgb(227,131,50)" fg:x="121632" fg:w="28"/><text x="57.9874%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="57.7374%" y="965" width="0.0133%" height="15" fill="rgb(247,131,45)" fg:x="121632" fg:w="28"/><text x="57.9874%" y="975.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="57.7384%" y="949" width="0.0123%" height="15" fill="rgb(215,97,47)" fg:x="121634" fg:w="26"/><text x="57.9884%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (584 samples, 0.28%)</title><rect x="57.4759%" y="1109" width="0.2772%" height="15" fill="rgb(233,143,12)" fg:x="121081" fg:w="584"/><text x="57.7259%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (584 samples, 0.28%)</title><rect x="57.4759%" y="1093" width="0.2772%" height="15" fill="rgb(222,57,17)" fg:x="121081" fg:w="584"/><text x="57.7259%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (577 samples, 0.27%)</title><rect x="57.4792%" y="1077" width="0.2739%" height="15" fill="rgb(214,119,38)" fg:x="121088" fg:w="577"/><text x="57.7292%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (547 samples, 0.26%)</title><rect x="57.4934%" y="1061" width="0.2597%" height="15" fill="rgb(217,28,47)" fg:x="121118" fg:w="547"/><text x="57.7434%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (1,240 samples, 0.59%)</title><rect x="57.1654%" y="1125" width="0.5886%" height="15" fill="rgb(231,14,52)" fg:x="120427" fg:w="1240"/><text x="57.4154%" y="1135.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (1,611 samples, 0.76%)</title><rect x="57.0254%" y="1141" width="0.7647%" height="15" fill="rgb(220,158,18)" fg:x="120132" fg:w="1611"/><text x="57.2754%" y="1151.50"></text></g><g><title>zenoh_protocol::proto::msg::ZenohMessage::make_link_state_list (76 samples, 0.04%)</title><rect x="57.7541%" y="1125" width="0.0361%" height="15" fill="rgb(222,143,46)" fg:x="121667" fg:w="76"/><text x="58.0041%" y="1135.50"></text></g><g><title>[libc.so.6] (86 samples, 0.04%)</title><rect x="57.7906%" y="1125" width="0.0408%" height="15" fill="rgb(227,165,5)" fg:x="121744" fg:w="86"/><text x="58.0406%" y="1135.50"></text></g><g><title>[libc.so.6] (47 samples, 0.02%)</title><rect x="57.8338%" y="1109" width="0.0223%" height="15" fill="rgb(216,222,49)" fg:x="121835" fg:w="47"/><text x="58.0838%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zenoh_transport::unicast::transport::TransportUnicastInner&gt;&gt; (23 samples, 0.01%)</title><rect x="57.8561%" y="1109" width="0.0109%" height="15" fill="rgb(238,73,39)" fg:x="121882" fg:w="23"/><text x="58.1061%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="57.8561%" y="1093" width="0.0109%" height="15" fill="rgb(252,115,9)" fg:x="121882" fg:w="23"/><text x="58.1061%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (391 samples, 0.19%)</title><rect x="57.8670%" y="1109" width="0.1856%" height="15" fill="rgb(238,202,4)" fg:x="121905" fg:w="391"/><text x="58.1170%" y="1119.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (391 samples, 0.19%)</title><rect x="57.8670%" y="1093" width="0.1856%" height="15" fill="rgb(252,153,44)" fg:x="121905" fg:w="391"/><text x="58.1170%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (5,756 samples, 2.73%)</title><rect x="55.3284%" y="1237" width="2.7323%" height="15" fill="rgb(235,128,27)" fg:x="116557" fg:w="5756"/><text x="55.5784%" y="1247.50">ze..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (5,756 samples, 2.73%)</title><rect x="55.3284%" y="1221" width="2.7323%" height="15" fill="rgb(221,121,47)" fg:x="116557" fg:w="5756"/><text x="55.5784%" y="1231.50">ze..</text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (5,756 samples, 2.73%)</title><rect x="55.3284%" y="1205" width="2.7323%" height="15" fill="rgb(247,211,47)" fg:x="116557" fg:w="5756"/><text x="55.5784%" y="1215.50">&lt;z..</text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (5,756 samples, 2.73%)</title><rect x="55.3284%" y="1189" width="2.7323%" height="15" fill="rgb(252,47,49)" fg:x="116557" fg:w="5756"/><text x="55.5784%" y="1199.50">&lt;z..</text></g><g><title>zenoh::net::routing::network::Network::link_states (5,748 samples, 2.73%)</title><rect x="55.3322%" y="1173" width="2.7285%" height="15" fill="rgb(219,119,53)" fg:x="116565" fg:w="5748"/><text x="55.5822%" y="1183.50">ze..</text></g><g><title>zenoh::net::routing::network::Network::send_on_link (2,210 samples, 1.05%)</title><rect x="57.0116%" y="1157" width="1.0491%" height="15" fill="rgb(243,165,53)" fg:x="120103" fg:w="2210"/><text x="57.2616%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (570 samples, 0.27%)</title><rect x="57.7901%" y="1141" width="0.2706%" height="15" fill="rgb(230,12,35)" fg:x="121743" fg:w="570"/><text x="58.0401%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (483 samples, 0.23%)</title><rect x="57.8314%" y="1125" width="0.2293%" height="15" fill="rgb(239,57,49)" fg:x="121830" fg:w="483"/><text x="58.0814%" y="1135.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (24 samples, 0.01%)</title><rect x="58.0901%" y="1013" width="0.0114%" height="15" fill="rgb(231,154,7)" fg:x="122375" fg:w="24"/><text x="58.3401%" y="1023.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (56 samples, 0.03%)</title><rect x="58.0759%" y="1045" width="0.0266%" height="15" fill="rgb(248,81,34)" fg:x="122345" fg:w="56"/><text x="58.3259%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (56 samples, 0.03%)</title><rect x="58.0759%" y="1029" width="0.0266%" height="15" fill="rgb(247,9,5)" fg:x="122345" fg:w="56"/><text x="58.3259%" y="1039.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (89 samples, 0.04%)</title><rect x="58.0607%" y="1061" width="0.0422%" height="15" fill="rgb(228,172,27)" fg:x="122313" fg:w="89"/><text x="58.3107%" y="1071.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (96 samples, 0.05%)</title><rect x="58.0607%" y="1109" width="0.0456%" height="15" fill="rgb(230,57,44)" fg:x="122313" fg:w="96"/><text x="58.3107%" y="1119.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (96 samples, 0.05%)</title><rect x="58.0607%" y="1093" width="0.0456%" height="15" fill="rgb(249,35,22)" fg:x="122313" fg:w="96"/><text x="58.3107%" y="1103.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (96 samples, 0.05%)</title><rect x="58.0607%" y="1077" width="0.0456%" height="15" fill="rgb(250,137,27)" fg:x="122313" fg:w="96"/><text x="58.3107%" y="1087.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (100 samples, 0.05%)</title><rect x="58.0607%" y="1141" width="0.0475%" height="15" fill="rgb(251,57,31)" fg:x="122313" fg:w="100"/><text x="58.3107%" y="1151.50"></text></g><g><title>zenoh::net::routing::queries::declare_peer_queryable (100 samples, 0.05%)</title><rect x="58.0607%" y="1125" width="0.0475%" height="15" fill="rgb(238,60,0)" fg:x="122313" fg:w="100"/><text x="58.3107%" y="1135.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (89 samples, 0.04%)</title><rect x="58.1224%" y="1045" width="0.0422%" height="15" fill="rgb(242,185,39)" fg:x="122443" fg:w="89"/><text x="58.3724%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.02%)</title><rect x="58.1751%" y="965" width="0.0161%" height="15" fill="rgb(240,63,43)" fg:x="122554" fg:w="34"/><text x="58.4251%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34 samples, 0.02%)</title><rect x="58.1751%" y="949" width="0.0161%" height="15" fill="rgb(236,155,6)" fg:x="122554" fg:w="34"/><text x="58.4251%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (48 samples, 0.02%)</title><rect x="58.1751%" y="1013" width="0.0228%" height="15" fill="rgb(215,11,29)" fg:x="122554" fg:w="48"/><text x="58.4251%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (48 samples, 0.02%)</title><rect x="58.1751%" y="997" width="0.0228%" height="15" fill="rgb(228,180,48)" fg:x="122554" fg:w="48"/><text x="58.4251%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (48 samples, 0.02%)</title><rect x="58.1751%" y="981" width="0.0228%" height="15" fill="rgb(241,102,12)" fg:x="122554" fg:w="48"/><text x="58.4251%" y="991.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (191 samples, 0.09%)</title><rect x="58.1082%" y="1141" width="0.0907%" height="15" fill="rgb(246,213,4)" fg:x="122413" fg:w="191"/><text x="58.3582%" y="1151.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (191 samples, 0.09%)</title><rect x="58.1082%" y="1125" width="0.0907%" height="15" fill="rgb(218,134,35)" fg:x="122413" fg:w="191"/><text x="58.3582%" y="1135.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_matches_routes (171 samples, 0.08%)</title><rect x="58.1177%" y="1109" width="0.0812%" height="15" fill="rgb(251,117,35)" fg:x="122433" fg:w="171"/><text x="58.3677%" y="1119.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_routes (171 samples, 0.08%)</title><rect x="58.1177%" y="1093" width="0.0812%" height="15" fill="rgb(206,156,45)" fg:x="122433" fg:w="171"/><text x="58.3677%" y="1103.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (165 samples, 0.08%)</title><rect x="58.1205%" y="1077" width="0.0783%" height="15" fill="rgb(218,52,27)" fg:x="122439" fg:w="165"/><text x="58.3705%" y="1087.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (165 samples, 0.08%)</title><rect x="58.1205%" y="1061" width="0.0783%" height="15" fill="rgb(238,83,36)" fg:x="122439" fg:w="165"/><text x="58.3705%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (61 samples, 0.03%)</title><rect x="58.1699%" y="1045" width="0.0290%" height="15" fill="rgb(218,53,43)" fg:x="122543" fg:w="61"/><text x="58.4199%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (61 samples, 0.03%)</title><rect x="58.1699%" y="1029" width="0.0290%" height="15" fill="rgb(239,54,39)" fg:x="122543" fg:w="61"/><text x="58.4199%" y="1039.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (297 samples, 0.14%)</title><rect x="58.0607%" y="1157" width="0.1410%" height="15" fill="rgb(212,198,13)" fg:x="122313" fg:w="297"/><text x="58.3107%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (35 samples, 0.02%)</title><rect x="58.3275%" y="981" width="0.0166%" height="15" fill="rgb(234,54,46)" fg:x="122875" fg:w="35"/><text x="58.5775%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (35 samples, 0.02%)</title><rect x="58.3275%" y="965" width="0.0166%" height="15" fill="rgb(217,120,7)" fg:x="122875" fg:w="35"/><text x="58.5775%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (35 samples, 0.02%)</title><rect x="58.3275%" y="949" width="0.0166%" height="15" fill="rgb(246,39,15)" fg:x="122875" fg:w="35"/><text x="58.5775%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.02%)</title><rect x="58.3280%" y="933" width="0.0161%" height="15" fill="rgb(242,143,31)" fg:x="122876" fg:w="34"/><text x="58.5780%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.02%)</title><rect x="58.3280%" y="917" width="0.0161%" height="15" fill="rgb(252,60,24)" fg:x="122876" fg:w="34"/><text x="58.5780%" y="927.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.02%)</title><rect x="58.3280%" y="901" width="0.0161%" height="15" fill="rgb(249,220,7)" fg:x="122876" fg:w="34"/><text x="58.5780%" y="911.50"></text></g><g><title>malloc (32 samples, 0.02%)</title><rect x="58.3289%" y="885" width="0.0152%" height="15" fill="rgb(236,67,13)" fg:x="122878" fg:w="32"/><text x="58.5789%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (74 samples, 0.04%)</title><rect x="58.3223%" y="1061" width="0.0351%" height="15" fill="rgb(210,62,39)" fg:x="122864" fg:w="74"/><text x="58.5723%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (63 samples, 0.03%)</title><rect x="58.3275%" y="1045" width="0.0299%" height="15" fill="rgb(219,122,53)" fg:x="122875" fg:w="63"/><text x="58.5775%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.03%)</title><rect x="58.3275%" y="1029" width="0.0299%" height="15" fill="rgb(218,87,25)" fg:x="122875" fg:w="63"/><text x="58.5775%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.03%)</title><rect x="58.3275%" y="1013" width="0.0299%" height="15" fill="rgb(234,179,48)" fg:x="122875" fg:w="63"/><text x="58.5775%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.03%)</title><rect x="58.3275%" y="997" width="0.0299%" height="15" fill="rgb(248,90,0)" fg:x="122875" fg:w="63"/><text x="58.5775%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (28 samples, 0.01%)</title><rect x="58.3441%" y="981" width="0.0133%" height="15" fill="rgb(207,228,37)" fg:x="122910" fg:w="28"/><text x="58.5941%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.01%)</title><rect x="58.3441%" y="965" width="0.0133%" height="15" fill="rgb(235,214,15)" fg:x="122910" fg:w="28"/><text x="58.5941%" y="975.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="58.3441%" y="949" width="0.0133%" height="15" fill="rgb(210,144,39)" fg:x="122910" fg:w="28"/><text x="58.5941%" y="959.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (87 samples, 0.04%)</title><rect x="58.3170%" y="1077" width="0.0413%" height="15" fill="rgb(222,67,41)" fg:x="122853" fg:w="87"/><text x="58.5670%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (72 samples, 0.03%)</title><rect x="58.3588%" y="1077" width="0.0342%" height="15" fill="rgb(205,35,37)" fg:x="122941" fg:w="72"/><text x="58.6088%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (67 samples, 0.03%)</title><rect x="58.3612%" y="1061" width="0.0318%" height="15" fill="rgb(216,125,40)" fg:x="122946" fg:w="67"/><text x="58.6112%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (67 samples, 0.03%)</title><rect x="58.3612%" y="1045" width="0.0318%" height="15" fill="rgb(228,227,20)" fg:x="122946" fg:w="67"/><text x="58.6112%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.03%)</title><rect x="58.3621%" y="1029" width="0.0309%" height="15" fill="rgb(242,173,45)" fg:x="122948" fg:w="65"/><text x="58.6121%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.03%)</title><rect x="58.3621%" y="1013" width="0.0309%" height="15" fill="rgb(215,79,24)" fg:x="122948" fg:w="65"/><text x="58.6121%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.03%)</title><rect x="58.3621%" y="997" width="0.0309%" height="15" fill="rgb(238,164,38)" fg:x="122948" fg:w="65"/><text x="58.6121%" y="1007.50"></text></g><g><title>malloc (52 samples, 0.02%)</title><rect x="58.3683%" y="981" width="0.0247%" height="15" fill="rgb(245,196,38)" fg:x="122961" fg:w="52"/><text x="58.6183%" y="991.50"></text></g><g><title>[libc.so.6] (160 samples, 0.08%)</title><rect x="58.4628%" y="885" width="0.0760%" height="15" fill="rgb(231,217,29)" fg:x="123160" fg:w="160"/><text x="58.7128%" y="895.50"></text></g><g><title>[libc.so.6] (89 samples, 0.04%)</title><rect x="58.4965%" y="869" width="0.0422%" height="15" fill="rgb(245,6,4)" fg:x="123231" fg:w="89"/><text x="58.7465%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (294 samples, 0.14%)</title><rect x="58.4011%" y="949" width="0.1396%" height="15" fill="rgb(214,76,49)" fg:x="123030" fg:w="294"/><text x="58.6511%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (294 samples, 0.14%)</title><rect x="58.4011%" y="933" width="0.1396%" height="15" fill="rgb(205,96,12)" fg:x="123030" fg:w="294"/><text x="58.6511%" y="943.50"></text></g><g><title>alloc::alloc::alloc (294 samples, 0.14%)</title><rect x="58.4011%" y="917" width="0.1396%" height="15" fill="rgb(243,131,4)" fg:x="123030" fg:w="294"/><text x="58.6511%" y="927.50"></text></g><g><title>malloc (286 samples, 0.14%)</title><rect x="58.4049%" y="901" width="0.1358%" height="15" fill="rgb(214,114,4)" fg:x="123038" fg:w="286"/><text x="58.6549%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (300 samples, 0.14%)</title><rect x="58.3996%" y="997" width="0.1424%" height="15" fill="rgb(234,215,15)" fg:x="123027" fg:w="300"/><text x="58.6496%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (300 samples, 0.14%)</title><rect x="58.3996%" y="981" width="0.1424%" height="15" fill="rgb(250,216,45)" fg:x="123027" fg:w="300"/><text x="58.6496%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (297 samples, 0.14%)</title><rect x="58.4011%" y="965" width="0.1410%" height="15" fill="rgb(236,128,4)" fg:x="123030" fg:w="297"/><text x="58.6511%" y="975.50"></text></g><g><title>core::clone::Clone::clone (456 samples, 0.22%)</title><rect x="58.3930%" y="1077" width="0.2165%" height="15" fill="rgb(234,50,33)" fg:x="123013" fg:w="456"/><text x="58.6430%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (453 samples, 0.22%)</title><rect x="58.3944%" y="1061" width="0.2150%" height="15" fill="rgb(253,131,37)" fg:x="123016" fg:w="453"/><text x="58.6444%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (442 samples, 0.21%)</title><rect x="58.3996%" y="1045" width="0.2098%" height="15" fill="rgb(218,55,27)" fg:x="123027" fg:w="442"/><text x="58.6496%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (442 samples, 0.21%)</title><rect x="58.3996%" y="1029" width="0.2098%" height="15" fill="rgb(241,220,28)" fg:x="123027" fg:w="442"/><text x="58.6496%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (442 samples, 0.21%)</title><rect x="58.3996%" y="1013" width="0.2098%" height="15" fill="rgb(241,90,48)" fg:x="123027" fg:w="442"/><text x="58.6496%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (142 samples, 0.07%)</title><rect x="58.5420%" y="997" width="0.0674%" height="15" fill="rgb(216,43,37)" fg:x="123327" fg:w="142"/><text x="58.7920%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (142 samples, 0.07%)</title><rect x="58.5420%" y="981" width="0.0674%" height="15" fill="rgb(207,173,9)" fg:x="123327" fg:w="142"/><text x="58.7920%" y="991.50"></text></g><g><title>[libc.so.6] (140 samples, 0.07%)</title><rect x="58.5430%" y="965" width="0.0665%" height="15" fill="rgb(240,126,30)" fg:x="123329" fg:w="140"/><text x="58.7930%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (645 samples, 0.31%)</title><rect x="58.3090%" y="1093" width="0.3062%" height="15" fill="rgb(228,178,53)" fg:x="122836" fg:w="645"/><text x="58.5590%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (664 samples, 0.32%)</title><rect x="58.3018%" y="1141" width="0.3152%" height="15" fill="rgb(217,33,4)" fg:x="122821" fg:w="664"/><text x="58.5518%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (649 samples, 0.31%)</title><rect x="58.3090%" y="1125" width="0.3081%" height="15" fill="rgb(206,124,34)" fg:x="122836" fg:w="649"/><text x="58.5590%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (649 samples, 0.31%)</title><rect x="58.3090%" y="1109" width="0.3081%" height="15" fill="rgb(208,122,53)" fg:x="122836" fg:w="649"/><text x="58.5590%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (24 samples, 0.01%)</title><rect x="58.6170%" y="1125" width="0.0114%" height="15" fill="rgb(215,202,26)" fg:x="123485" fg:w="24"/><text x="58.8670%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (58 samples, 0.03%)</title><rect x="58.6170%" y="1141" width="0.0275%" height="15" fill="rgb(232,198,31)" fg:x="123485" fg:w="58"/><text x="58.8670%" y="1151.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (22 samples, 0.01%)</title><rect x="58.6341%" y="1125" width="0.0104%" height="15" fill="rgb(222,23,35)" fg:x="123521" fg:w="22"/><text x="58.8841%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (40 samples, 0.02%)</title><rect x="58.6446%" y="1141" width="0.0190%" height="15" fill="rgb(242,27,53)" fg:x="123543" fg:w="40"/><text x="58.8946%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (24 samples, 0.01%)</title><rect x="58.6522%" y="1125" width="0.0114%" height="15" fill="rgb(210,216,42)" fg:x="123559" fg:w="24"/><text x="58.9022%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (24 samples, 0.01%)</title><rect x="58.6522%" y="1109" width="0.0114%" height="15" fill="rgb(234,39,38)" fg:x="123559" fg:w="24"/><text x="58.9022%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="58.6664%" y="1141" width="0.0123%" height="15" fill="rgb(235,126,54)" fg:x="123589" fg:w="26"/><text x="58.9164%" y="1151.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (134 samples, 0.06%)</title><rect x="58.6830%" y="1141" width="0.0636%" height="15" fill="rgb(235,150,33)" fg:x="123624" fg:w="134"/><text x="58.9330%" y="1151.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (125 samples, 0.06%)</title><rect x="58.6873%" y="1125" width="0.0593%" height="15" fill="rgb(249,49,53)" fg:x="123633" fg:w="125"/><text x="58.9373%" y="1135.50"></text></g><g><title>&lt;vec_map::Values&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.04%)</title><rect x="58.7466%" y="1141" width="0.0380%" height="15" fill="rgb(238,60,50)" fg:x="123758" fg:w="80"/><text x="58.9966%" y="1151.50"></text></g><g><title>&lt;vec_map::Iter&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.04%)</title><rect x="58.7466%" y="1125" width="0.0380%" height="15" fill="rgb(210,5,2)" fg:x="123758" fg:w="80"/><text x="58.9966%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.02%)</title><rect x="58.8193%" y="1061" width="0.0166%" height="15" fill="rgb(214,207,24)" fg:x="123911" fg:w="35"/><text x="59.0693%" y="1071.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="58.8221%" y="1045" width="0.0138%" height="15" fill="rgb(228,173,2)" fg:x="123917" fg:w="29"/><text x="59.0721%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (50 samples, 0.02%)</title><rect x="58.8136%" y="1109" width="0.0237%" height="15" fill="rgb(244,26,8)" fg:x="123899" fg:w="50"/><text x="59.0636%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.02%)</title><rect x="58.8136%" y="1093" width="0.0237%" height="15" fill="rgb(249,153,35)" fg:x="123899" fg:w="50"/><text x="59.0636%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (50 samples, 0.02%)</title><rect x="58.8136%" y="1077" width="0.0237%" height="15" fill="rgb(221,215,40)" fg:x="123899" fg:w="50"/><text x="59.0636%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.04%)</title><rect x="58.8411%" y="1045" width="0.0356%" height="15" fill="rgb(238,106,35)" fg:x="123957" fg:w="75"/><text x="59.0911%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.04%)</title><rect x="58.8411%" y="1029" width="0.0356%" height="15" fill="rgb(207,195,21)" fg:x="123957" fg:w="75"/><text x="59.0911%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (72 samples, 0.03%)</title><rect x="58.8425%" y="1013" width="0.0342%" height="15" fill="rgb(205,43,29)" fg:x="123960" fg:w="72"/><text x="59.0925%" y="1023.50"></text></g><g><title>malloc (50 samples, 0.02%)</title><rect x="58.8530%" y="997" width="0.0237%" height="15" fill="rgb(236,35,21)" fg:x="123982" fg:w="50"/><text x="59.1030%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (81 samples, 0.04%)</title><rect x="58.8392%" y="1061" width="0.0384%" height="15" fill="rgb(244,74,8)" fg:x="123953" fg:w="81"/><text x="59.0892%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (91 samples, 0.04%)</title><rect x="58.8373%" y="1109" width="0.0432%" height="15" fill="rgb(241,229,7)" fg:x="123949" fg:w="91"/><text x="59.0873%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (91 samples, 0.04%)</title><rect x="58.8373%" y="1093" width="0.0432%" height="15" fill="rgb(212,223,25)" fg:x="123949" fg:w="91"/><text x="59.0873%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (87 samples, 0.04%)</title><rect x="58.8392%" y="1077" width="0.0413%" height="15" fill="rgb(234,58,53)" fg:x="123953" fg:w="87"/><text x="59.0892%" y="1087.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (164 samples, 0.08%)</title><rect x="58.8117%" y="1125" width="0.0778%" height="15" fill="rgb(244,36,1)" fg:x="123895" fg:w="164"/><text x="59.0617%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (209 samples, 0.10%)</title><rect x="58.7950%" y="1141" width="0.0992%" height="15" fill="rgb(222,40,54)" fg:x="123860" fg:w="209"/><text x="59.0450%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (71 samples, 0.03%)</title><rect x="58.9123%" y="1109" width="0.0337%" height="15" fill="rgb(210,207,39)" fg:x="124107" fg:w="71"/><text x="59.1623%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (71 samples, 0.03%)</title><rect x="58.9123%" y="1093" width="0.0337%" height="15" fill="rgb(234,52,14)" fg:x="124107" fg:w="71"/><text x="59.1623%" y="1103.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (71 samples, 0.03%)</title><rect x="58.9123%" y="1077" width="0.0337%" height="15" fill="rgb(239,108,46)" fg:x="124107" fg:w="71"/><text x="59.1623%" y="1087.50"></text></g><g><title>[libc.so.6] (71 samples, 0.03%)</title><rect x="58.9123%" y="1061" width="0.0337%" height="15" fill="rgb(252,223,5)" fg:x="124107" fg:w="71"/><text x="59.1623%" y="1071.50"></text></g><g><title>core::cmp::PartialEq::ne (96 samples, 0.05%)</title><rect x="58.9009%" y="1141" width="0.0456%" height="15" fill="rgb(227,181,11)" fg:x="124083" fg:w="96"/><text x="59.1509%" y="1151.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (96 samples, 0.05%)</title><rect x="58.9009%" y="1125" width="0.0456%" height="15" fill="rgb(248,126,40)" fg:x="124083" fg:w="96"/><text x="59.1509%" y="1135.50"></text></g><g><title>alloc::vec::in_place_collect::write_in_place_with_drop::{{closure}} (23 samples, 0.01%)</title><rect x="59.1302%" y="1029" width="0.0109%" height="15" fill="rgb(243,1,18)" fg:x="124566" fg:w="23"/><text x="59.3802%" y="1039.50"></text></g><g><title>core::ptr::write (23 samples, 0.01%)</title><rect x="59.1302%" y="1013" width="0.0109%" height="15" fill="rgb(214,145,23)" fg:x="124566" fg:w="23"/><text x="59.3802%" y="1023.50"></text></g><g><title>[libc.so.6] (87 samples, 0.04%)</title><rect x="59.1905%" y="1013" width="0.0413%" height="15" fill="rgb(241,218,11)" fg:x="124693" fg:w="87"/><text x="59.4405%" y="1023.50"></text></g><g><title>cfree (192 samples, 0.09%)</title><rect x="59.1411%" y="1029" width="0.0911%" height="15" fill="rgb(214,219,24)" fg:x="124589" fg:w="192"/><text x="59.3911%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.01%)</title><rect x="59.3319%" y="885" width="0.0109%" height="15" fill="rgb(235,32,7)" fg:x="124991" fg:w="23"/><text x="59.5819%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (407 samples, 0.19%)</title><rect x="59.4174%" y="837" width="0.1932%" height="15" fill="rgb(227,121,28)" fg:x="125171" fg:w="407"/><text x="59.6674%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (724 samples, 0.34%)</title><rect x="59.3310%" y="917" width="0.3437%" height="15" fill="rgb(216,129,49)" fg:x="124989" fg:w="724"/><text x="59.5810%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (722 samples, 0.34%)</title><rect x="59.3319%" y="901" width="0.3427%" height="15" fill="rgb(207,194,50)" fg:x="124991" fg:w="722"/><text x="59.5819%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (699 samples, 0.33%)</title><rect x="59.3428%" y="885" width="0.3318%" height="15" fill="rgb(207,4,18)" fg:x="125014" fg:w="699"/><text x="59.5928%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (699 samples, 0.33%)</title><rect x="59.3428%" y="869" width="0.3318%" height="15" fill="rgb(213,50,30)" fg:x="125014" fg:w="699"/><text x="59.5928%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (542 samples, 0.26%)</title><rect x="59.4174%" y="853" width="0.2573%" height="15" fill="rgb(208,77,22)" fg:x="125171" fg:w="542"/><text x="59.6674%" y="863.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::get (135 samples, 0.06%)</title><rect x="59.6106%" y="837" width="0.0641%" height="15" fill="rgb(244,204,34)" fg:x="125578" fg:w="135"/><text x="59.8606%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (30 samples, 0.01%)</title><rect x="59.6746%" y="917" width="0.0142%" height="15" fill="rgb(230,20,17)" fg:x="125713" fg:w="30"/><text x="59.9246%" y="927.50"></text></g><g><title>__rdl_realloc (27 samples, 0.01%)</title><rect x="59.7440%" y="789" width="0.0128%" height="15" fill="rgb(237,83,15)" fg:x="125859" fg:w="27"/><text x="59.9940%" y="799.50"></text></g><g><title>__rust_realloc (26 samples, 0.01%)</title><rect x="59.7568%" y="789" width="0.0123%" height="15" fill="rgb(221,109,25)" fg:x="125886" fg:w="26"/><text x="60.0068%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (114 samples, 0.05%)</title><rect x="59.7430%" y="837" width="0.0541%" height="15" fill="rgb(205,194,52)" fg:x="125857" fg:w="114"/><text x="59.9930%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (114 samples, 0.05%)</title><rect x="59.7430%" y="821" width="0.0541%" height="15" fill="rgb(244,173,54)" fg:x="125857" fg:w="114"/><text x="59.9930%" y="831.50"></text></g><g><title>alloc::alloc::realloc (112 samples, 0.05%)</title><rect x="59.7440%" y="805" width="0.0532%" height="15" fill="rgb(227,181,18)" fg:x="125859" fg:w="112"/><text x="59.9940%" y="815.50"></text></g><g><title>realloc (59 samples, 0.03%)</title><rect x="59.7691%" y="789" width="0.0280%" height="15" fill="rgb(238,36,30)" fg:x="125912" fg:w="59"/><text x="60.0191%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (202 samples, 0.10%)</title><rect x="59.7164%" y="853" width="0.0959%" height="15" fill="rgb(254,85,0)" fg:x="125801" fg:w="202"/><text x="59.9664%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (30 samples, 0.01%)</title><rect x="59.7981%" y="837" width="0.0142%" height="15" fill="rgb(247,63,33)" fg:x="125973" fg:w="30"/><text x="60.0481%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (281 samples, 0.13%)</title><rect x="59.6965%" y="869" width="0.1334%" height="15" fill="rgb(220,7,54)" fg:x="125759" fg:w="281"/><text x="59.9465%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (28 samples, 0.01%)</title><rect x="59.8166%" y="853" width="0.0133%" height="15" fill="rgb(238,227,21)" fg:x="126012" fg:w="28"/><text x="60.0666%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (28 samples, 0.01%)</title><rect x="59.8166%" y="837" width="0.0133%" height="15" fill="rgb(237,29,31)" fg:x="126012" fg:w="28"/><text x="60.0666%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (301 samples, 0.14%)</title><rect x="59.6889%" y="917" width="0.1429%" height="15" fill="rgb(211,21,50)" fg:x="125743" fg:w="301"/><text x="59.9389%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (301 samples, 0.14%)</title><rect x="59.6889%" y="901" width="0.1429%" height="15" fill="rgb(239,119,2)" fg:x="125743" fg:w="301"/><text x="59.9389%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (297 samples, 0.14%)</title><rect x="59.6908%" y="885" width="0.1410%" height="15" fill="rgb(250,2,39)" fg:x="125747" fg:w="297"/><text x="59.9408%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,342 samples, 0.64%)</title><rect x="59.3030%" y="949" width="0.6370%" height="15" fill="rgb(244,46,53)" fg:x="124930" fg:w="1342"/><text x="59.5530%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,341 samples, 0.64%)</title><rect x="59.3034%" y="933" width="0.6366%" height="15" fill="rgb(209,21,19)" fg:x="124931" fg:w="1341"/><text x="59.5534%" y="943.50"></text></g><g><title>core::ptr::write (222 samples, 0.11%)</title><rect x="59.8346%" y="917" width="0.1054%" height="15" fill="rgb(236,145,4)" fg:x="126050" fg:w="222"/><text x="60.0846%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (82 samples, 0.04%)</title><rect x="59.9533%" y="869" width="0.0389%" height="15" fill="rgb(220,133,36)" fg:x="126300" fg:w="82"/><text x="60.2033%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (310 samples, 0.15%)</title><rect x="59.9400%" y="949" width="0.1472%" height="15" fill="rgb(244,18,3)" fg:x="126272" fg:w="310"/><text x="60.1900%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (310 samples, 0.15%)</title><rect x="59.9400%" y="933" width="0.1472%" height="15" fill="rgb(232,171,48)" fg:x="126272" fg:w="310"/><text x="60.1900%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (306 samples, 0.15%)</title><rect x="59.9419%" y="917" width="0.1453%" height="15" fill="rgb(223,223,53)" fg:x="126276" fg:w="306"/><text x="60.1919%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (306 samples, 0.15%)</title><rect x="59.9419%" y="901" width="0.1453%" height="15" fill="rgb(246,92,13)" fg:x="126276" fg:w="306"/><text x="60.1919%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (282 samples, 0.13%)</title><rect x="59.9533%" y="885" width="0.1339%" height="15" fill="rgb(229,171,10)" fg:x="126300" fg:w="282"/><text x="60.2033%" y="895.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::get (200 samples, 0.09%)</title><rect x="59.9922%" y="869" width="0.0949%" height="15" fill="rgb(213,131,26)" fg:x="126382" fg:w="200"/><text x="60.2422%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (55 samples, 0.03%)</title><rect x="60.0881%" y="949" width="0.0261%" height="15" fill="rgb(242,87,54)" fg:x="126584" fg:w="55"/><text x="60.3381%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (55 samples, 0.03%)</title><rect x="60.0881%" y="933" width="0.0261%" height="15" fill="rgb(237,21,35)" fg:x="126584" fg:w="55"/><text x="60.3381%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (55 samples, 0.03%)</title><rect x="60.0881%" y="917" width="0.0261%" height="15" fill="rgb(253,13,47)" fg:x="126584" fg:w="55"/><text x="60.3381%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (55 samples, 0.03%)</title><rect x="60.0881%" y="901" width="0.0261%" height="15" fill="rgb(215,122,49)" fg:x="126584" fg:w="55"/><text x="60.3381%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.03%)</title><rect x="60.0881%" y="885" width="0.0261%" height="15" fill="rgb(209,179,30)" fg:x="126584" fg:w="55"/><text x="60.3381%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.03%)</title><rect x="60.0881%" y="869" width="0.0261%" height="15" fill="rgb(235,100,24)" fg:x="126584" fg:w="55"/><text x="60.3381%" y="879.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.03%)</title><rect x="60.0886%" y="853" width="0.0256%" height="15" fill="rgb(209,67,24)" fg:x="126585" fg:w="54"/><text x="60.3386%" y="863.50"></text></g><g><title>malloc (41 samples, 0.02%)</title><rect x="60.0947%" y="837" width="0.0195%" height="15" fill="rgb(206,74,32)" fg:x="126598" fg:w="41"/><text x="60.3447%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,726 samples, 0.82%)</title><rect x="59.2973%" y="965" width="0.8193%" height="15" fill="rgb(212,45,25)" fg:x="124918" fg:w="1726"/><text x="59.5473%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,759 samples, 0.83%)</title><rect x="59.2826%" y="1013" width="0.8350%" height="15" fill="rgb(239,26,3)" fg:x="124887" fg:w="1759"/><text x="59.5326%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,759 samples, 0.83%)</title><rect x="59.2826%" y="997" width="0.8350%" height="15" fill="rgb(218,36,15)" fg:x="124887" fg:w="1759"/><text x="59.5326%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,752 samples, 0.83%)</title><rect x="59.2859%" y="981" width="0.8317%" height="15" fill="rgb(206,108,24)" fg:x="124894" fg:w="1752"/><text x="59.5359%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,145 samples, 1.02%)</title><rect x="59.1041%" y="1077" width="1.0182%" height="15" fill="rgb(234,204,42)" fg:x="124511" fg:w="2145"/><text x="59.3541%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,143 samples, 1.02%)</title><rect x="59.1050%" y="1061" width="1.0173%" height="15" fill="rgb(229,2,11)" fg:x="124513" fg:w="2143"/><text x="59.3550%" y="1071.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2,128 samples, 1.01%)</title><rect x="59.1121%" y="1045" width="1.0101%" height="15" fill="rgb(221,20,48)" fg:x="124528" fg:w="2128"/><text x="59.3621%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (1,874 samples, 0.89%)</title><rect x="59.2327%" y="1029" width="0.8896%" height="15" fill="rgb(244,164,10)" fg:x="124782" fg:w="1874"/><text x="59.4827%" y="1039.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (2,168 samples, 1.03%)</title><rect x="59.1007%" y="1093" width="1.0291%" height="15" fill="rgb(243,229,2)" fg:x="124504" fg:w="2168"/><text x="59.3507%" y="1103.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (128 samples, 0.06%)</title><rect x="60.2277%" y="869" width="0.0608%" height="15" fill="rgb(232,131,37)" fg:x="126878" fg:w="128"/><text x="60.4777%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (128 samples, 0.06%)</title><rect x="60.2277%" y="853" width="0.0608%" height="15" fill="rgb(217,156,11)" fg:x="126878" fg:w="128"/><text x="60.4777%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (128 samples, 0.06%)</title><rect x="60.2277%" y="837" width="0.0608%" height="15" fill="rgb(239,99,48)" fg:x="126878" fg:w="128"/><text x="60.4777%" y="847.50"></text></g><g><title>[libc.so.6] (123 samples, 0.06%)</title><rect x="60.2300%" y="821" width="0.0584%" height="15" fill="rgb(231,209,9)" fg:x="126883" fg:w="123"/><text x="60.4800%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (153 samples, 0.07%)</title><rect x="60.2167%" y="949" width="0.0726%" height="15" fill="rgb(254,97,27)" fg:x="126855" fg:w="153"/><text x="60.4667%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (153 samples, 0.07%)</title><rect x="60.2167%" y="933" width="0.0726%" height="15" fill="rgb(223,151,38)" fg:x="126855" fg:w="153"/><text x="60.4667%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (140 samples, 0.07%)</title><rect x="60.2229%" y="917" width="0.0665%" height="15" fill="rgb(219,206,35)" fg:x="126868" fg:w="140"/><text x="60.4729%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (139 samples, 0.07%)</title><rect x="60.2234%" y="901" width="0.0660%" height="15" fill="rgb(216,130,31)" fg:x="126869" fg:w="139"/><text x="60.4734%" y="911.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (131 samples, 0.06%)</title><rect x="60.2272%" y="885" width="0.0622%" height="15" fill="rgb(251,97,34)" fg:x="126877" fg:w="131"/><text x="60.4772%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (299 samples, 0.14%)</title><rect x="60.1688%" y="1045" width="0.1419%" height="15" fill="rgb(246,159,47)" fg:x="126754" fg:w="299"/><text x="60.4188%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (299 samples, 0.14%)</title><rect x="60.1688%" y="1029" width="0.1419%" height="15" fill="rgb(232,87,10)" fg:x="126754" fg:w="299"/><text x="60.4188%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (299 samples, 0.14%)</title><rect x="60.1688%" y="1013" width="0.1419%" height="15" fill="rgb(249,1,37)" fg:x="126754" fg:w="299"/><text x="60.4188%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (284 samples, 0.13%)</title><rect x="60.1759%" y="997" width="0.1348%" height="15" fill="rgb(239,135,14)" fg:x="126769" fg:w="284"/><text x="60.4259%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (262 samples, 0.12%)</title><rect x="60.1864%" y="981" width="0.1244%" height="15" fill="rgb(253,116,46)" fg:x="126791" fg:w="262"/><text x="60.4364%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (233 samples, 0.11%)</title><rect x="60.2001%" y="965" width="0.1106%" height="15" fill="rgb(222,217,37)" fg:x="126820" fg:w="233"/><text x="60.4501%" y="975.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="60.3212%" y="885" width="0.0119%" height="15" fill="rgb(252,96,8)" fg:x="127075" fg:w="25"/><text x="60.5712%" y="895.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="60.3179%" y="901" width="0.0157%" height="15" fill="rgb(254,103,41)" fg:x="127068" fg:w="33"/><text x="60.5679%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (63 samples, 0.03%)</title><rect x="60.3107%" y="1045" width="0.0299%" height="15" fill="rgb(218,213,19)" fg:x="127053" fg:w="63"/><text x="60.5607%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (63 samples, 0.03%)</title><rect x="60.3107%" y="1029" width="0.0299%" height="15" fill="rgb(253,95,21)" fg:x="127053" fg:w="63"/><text x="60.5607%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (63 samples, 0.03%)</title><rect x="60.3107%" y="1013" width="0.0299%" height="15" fill="rgb(229,26,28)" fg:x="127053" fg:w="63"/><text x="60.5607%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (62 samples, 0.03%)</title><rect x="60.3112%" y="997" width="0.0294%" height="15" fill="rgb(230,129,16)" fg:x="127054" fg:w="62"/><text x="60.5612%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (61 samples, 0.03%)</title><rect x="60.3117%" y="981" width="0.0290%" height="15" fill="rgb(236,126,17)" fg:x="127055" fg:w="61"/><text x="60.5617%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (60 samples, 0.03%)</title><rect x="60.3122%" y="965" width="0.0285%" height="15" fill="rgb(209,33,33)" fg:x="127056" fg:w="60"/><text x="60.5622%" y="975.50"></text></g><g><title>alloc::alloc::Global::grow_impl (60 samples, 0.03%)</title><rect x="60.3122%" y="949" width="0.0285%" height="15" fill="rgb(227,85,29)" fg:x="127056" fg:w="60"/><text x="60.5622%" y="959.50"></text></g><g><title>alloc::alloc::realloc (60 samples, 0.03%)</title><rect x="60.3122%" y="933" width="0.0285%" height="15" fill="rgb(241,53,46)" fg:x="127056" fg:w="60"/><text x="60.5622%" y="943.50"></text></g><g><title>realloc (59 samples, 0.03%)</title><rect x="60.3126%" y="917" width="0.0280%" height="15" fill="rgb(228,167,53)" fg:x="127057" fg:w="59"/><text x="60.5626%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.02%)</title><rect x="60.3416%" y="933" width="0.0247%" height="15" fill="rgb(238,195,45)" fg:x="127118" fg:w="52"/><text x="60.5916%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 0.02%)</title><rect x="60.3416%" y="917" width="0.0247%" height="15" fill="rgb(252,124,45)" fg:x="127118" fg:w="52"/><text x="60.5916%" y="927.50"></text></g><g><title>cfree (43 samples, 0.02%)</title><rect x="60.3459%" y="901" width="0.0204%" height="15" fill="rgb(251,38,35)" fg:x="127127" fg:w="43"/><text x="60.5959%" y="911.50"></text></g><g><title>[libc.so.6] (26 samples, 0.01%)</title><rect x="60.3539%" y="885" width="0.0123%" height="15" fill="rgb(227,33,2)" fg:x="127144" fg:w="26"/><text x="60.6039%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (56 samples, 0.03%)</title><rect x="60.3411%" y="1045" width="0.0266%" height="15" fill="rgb(223,157,46)" fg:x="127117" fg:w="56"/><text x="60.5911%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (56 samples, 0.03%)</title><rect x="60.3411%" y="1029" width="0.0266%" height="15" fill="rgb(222,78,41)" fg:x="127117" fg:w="56"/><text x="60.5911%" y="1039.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.03%)</title><rect x="60.3411%" y="1013" width="0.0266%" height="15" fill="rgb(248,176,11)" fg:x="127117" fg:w="56"/><text x="60.5911%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool),alloc::alloc::Global&gt;&gt; (55 samples, 0.03%)</title><rect x="60.3416%" y="997" width="0.0261%" height="15" fill="rgb(241,221,18)" fg:x="127118" fg:w="55"/><text x="60.5916%" y="1007.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.03%)</title><rect x="60.3416%" y="981" width="0.0261%" height="15" fill="rgb(218,85,22)" fg:x="127118" fg:w="55"/><text x="60.5916%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (55 samples, 0.03%)</title><rect x="60.3416%" y="965" width="0.0261%" height="15" fill="rgb(222,223,7)" fg:x="127118" fg:w="55"/><text x="60.5916%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.03%)</title><rect x="60.3416%" y="949" width="0.0261%" height="15" fill="rgb(254,59,39)" fg:x="127118" fg:w="55"/><text x="60.5916%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="60.3777%" y="1013" width="0.0138%" height="15" fill="rgb(247,100,27)" fg:x="127194" fg:w="29"/><text x="60.6277%" y="1023.50"></text></g><g><title>[libc.so.6] (145 samples, 0.07%)</title><rect x="60.4360%" y="997" width="0.0688%" height="15" fill="rgb(237,207,10)" fg:x="127317" fg:w="145"/><text x="60.6860%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;zenoh_protocol::proto::msg::LinkState&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (277 samples, 0.13%)</title><rect x="60.3753%" y="1045" width="0.1315%" height="15" fill="rgb(220,121,28)" fg:x="127189" fg:w="277"/><text x="60.6253%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;zenoh_protocol::proto::msg::LinkState&gt;&gt; (277 samples, 0.13%)</title><rect x="60.3753%" y="1029" width="0.1315%" height="15" fill="rgb(213,223,20)" fg:x="127189" fg:w="277"/><text x="60.6253%" y="1039.50"></text></g><g><title>cfree (243 samples, 0.12%)</title><rect x="60.3914%" y="1013" width="0.1153%" height="15" fill="rgb(205,121,27)" fg:x="127223" fg:w="243"/><text x="60.6414%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (730 samples, 0.35%)</title><rect x="60.1664%" y="1061" width="0.3465%" height="15" fill="rgb(253,24,53)" fg:x="126749" fg:w="730"/><text x="60.4164%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (759 samples, 0.36%)</title><rect x="60.1622%" y="1077" width="0.3603%" height="15" fill="rgb(224,224,47)" fg:x="126740" fg:w="759"/><text x="60.4122%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.03%)</title><rect x="60.6131%" y="1029" width="0.0313%" height="15" fill="rgb(250,125,36)" fg:x="127690" fg:w="66"/><text x="60.8631%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (32 samples, 0.02%)</title><rect x="60.7949%" y="997" width="0.0152%" height="15" fill="rgb(240,144,38)" fg:x="128073" fg:w="32"/><text x="61.0449%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.03%)</title><rect x="60.8837%" y="869" width="0.0318%" height="15" fill="rgb(250,15,50)" fg:x="128260" fg:w="67"/><text x="61.1337%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.03%)</title><rect x="60.8837%" y="853" width="0.0318%" height="15" fill="rgb(210,24,26)" fg:x="128260" fg:w="67"/><text x="61.1337%" y="863.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.03%)</title><rect x="60.8837%" y="837" width="0.0318%" height="15" fill="rgb(234,53,53)" fg:x="128260" fg:w="67"/><text x="61.1337%" y="847.50"></text></g><g><title>malloc (64 samples, 0.03%)</title><rect x="60.8851%" y="821" width="0.0304%" height="15" fill="rgb(208,108,28)" fg:x="128263" fg:w="64"/><text x="61.1351%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (68 samples, 0.03%)</title><rect x="60.8837%" y="917" width="0.0323%" height="15" fill="rgb(227,143,7)" fg:x="128260" fg:w="68"/><text x="61.1337%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (68 samples, 0.03%)</title><rect x="60.8837%" y="901" width="0.0323%" height="15" fill="rgb(238,189,38)" fg:x="128260" fg:w="68"/><text x="61.1337%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (68 samples, 0.03%)</title><rect x="60.8837%" y="885" width="0.0323%" height="15" fill="rgb(222,69,15)" fg:x="128260" fg:w="68"/><text x="61.1337%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (89 samples, 0.04%)</title><rect x="60.8837%" y="981" width="0.0422%" height="15" fill="rgb(213,169,7)" fg:x="128260" fg:w="89"/><text x="61.1337%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (89 samples, 0.04%)</title><rect x="60.8837%" y="965" width="0.0422%" height="15" fill="rgb(251,219,4)" fg:x="128260" fg:w="89"/><text x="61.1337%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (89 samples, 0.04%)</title><rect x="60.8837%" y="949" width="0.0422%" height="15" fill="rgb(241,55,40)" fg:x="128260" fg:w="89"/><text x="61.1337%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (89 samples, 0.04%)</title><rect x="60.8837%" y="933" width="0.0422%" height="15" fill="rgb(243,57,30)" fg:x="128260" fg:w="89"/><text x="61.1337%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (51 samples, 0.02%)</title><rect x="60.9259%" y="965" width="0.0242%" height="15" fill="rgb(234,50,30)" fg:x="128349" fg:w="51"/><text x="61.1759%" y="975.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (72 samples, 0.03%)</title><rect x="60.9259%" y="981" width="0.0342%" height="15" fill="rgb(239,23,42)" fg:x="128349" fg:w="72"/><text x="61.1759%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (108 samples, 0.05%)</title><rect x="60.9601%" y="965" width="0.0513%" height="15" fill="rgb(217,38,19)" fg:x="128421" fg:w="108"/><text x="61.2101%" y="975.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::IndexMut&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index_mut (118 samples, 0.06%)</title><rect x="60.9601%" y="981" width="0.0560%" height="15" fill="rgb(215,179,16)" fg:x="128421" fg:w="118"/><text x="61.2101%" y="991.50"></text></g><g><title>core::cmp::PartialEq::ne (41 samples, 0.02%)</title><rect x="61.0171%" y="981" width="0.0195%" height="15" fill="rgb(254,21,37)" fg:x="128541" fg:w="41"/><text x="61.2671%" y="991.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (41 samples, 0.02%)</title><rect x="61.0171%" y="965" width="0.0195%" height="15" fill="rgb(219,207,48)" fg:x="128541" fg:w="41"/><text x="61.2671%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (37 samples, 0.02%)</title><rect x="61.0190%" y="949" width="0.0176%" height="15" fill="rgb(227,225,41)" fg:x="128545" fg:w="37"/><text x="61.2690%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (37 samples, 0.02%)</title><rect x="61.0190%" y="933" width="0.0176%" height="15" fill="rgb(223,130,1)" fg:x="128545" fg:w="37"/><text x="61.2690%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (37 samples, 0.02%)</title><rect x="61.0190%" y="917" width="0.0176%" height="15" fill="rgb(249,54,42)" fg:x="128545" fg:w="37"/><text x="61.2690%" y="927.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="61.0199%" y="901" width="0.0166%" height="15" fill="rgb(248,69,25)" fg:x="128547" fg:w="35"/><text x="61.2699%" y="911.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.02%)</title><rect x="61.0380%" y="949" width="0.0204%" height="15" fill="rgb(234,21,32)" fg:x="128585" fg:w="43"/><text x="61.2880%" y="959.50"></text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (43 samples, 0.02%)</title><rect x="61.0380%" y="933" width="0.0204%" height="15" fill="rgb(252,136,6)" fg:x="128585" fg:w="43"/><text x="61.2880%" y="943.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (41 samples, 0.02%)</title><rect x="61.0389%" y="917" width="0.0195%" height="15" fill="rgb(245,87,12)" fg:x="128587" fg:w="41"/><text x="61.2889%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (41 samples, 0.02%)</title><rect x="61.0389%" y="901" width="0.0195%" height="15" fill="rgb(208,12,15)" fg:x="128587" fg:w="41"/><text x="61.2889%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (109 samples, 0.05%)</title><rect x="61.0612%" y="901" width="0.0517%" height="15" fill="rgb(250,98,2)" fg:x="128634" fg:w="109"/><text x="61.3112%" y="911.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (109 samples, 0.05%)</title><rect x="61.0612%" y="885" width="0.0517%" height="15" fill="rgb(205,213,15)" fg:x="128634" fg:w="109"/><text x="61.3112%" y="895.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (109 samples, 0.05%)</title><rect x="61.0612%" y="869" width="0.0517%" height="15" fill="rgb(248,192,44)" fg:x="128634" fg:w="109"/><text x="61.3112%" y="879.50"></text></g><g><title>[libc.so.6] (104 samples, 0.05%)</title><rect x="61.0636%" y="853" width="0.0494%" height="15" fill="rgb(221,89,17)" fg:x="128639" fg:w="104"/><text x="61.3136%" y="863.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (114 samples, 0.05%)</title><rect x="61.0598%" y="917" width="0.0541%" height="15" fill="rgb(209,55,3)" fg:x="128631" fg:w="114"/><text x="61.3098%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (164 samples, 0.08%)</title><rect x="61.0365%" y="981" width="0.0778%" height="15" fill="rgb(247,23,45)" fg:x="128582" fg:w="164"/><text x="61.2865%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (164 samples, 0.08%)</title><rect x="61.0365%" y="965" width="0.0778%" height="15" fill="rgb(235,152,23)" fg:x="128582" fg:w="164"/><text x="61.2865%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (118 samples, 0.06%)</title><rect x="61.0584%" y="949" width="0.0560%" height="15" fill="rgb(244,63,13)" fg:x="128628" fg:w="118"/><text x="61.3084%" y="959.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (118 samples, 0.06%)</title><rect x="61.0584%" y="933" width="0.0560%" height="15" fill="rgb(227,30,37)" fg:x="128628" fg:w="118"/><text x="61.3084%" y="943.50"></text></g><g><title>[libc.so.6] (42 samples, 0.02%)</title><rect x="61.1400%" y="869" width="0.0199%" height="15" fill="rgb(224,49,42)" fg:x="128800" fg:w="42"/><text x="61.3900%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (91 samples, 0.04%)</title><rect x="61.1172%" y="917" width="0.0432%" height="15" fill="rgb(218,129,5)" fg:x="128752" fg:w="91"/><text x="61.3672%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (91 samples, 0.04%)</title><rect x="61.1172%" y="901" width="0.0432%" height="15" fill="rgb(240,199,54)" fg:x="128752" fg:w="91"/><text x="61.3672%" y="911.50"></text></g><g><title>cfree (80 samples, 0.04%)</title><rect x="61.1225%" y="885" width="0.0380%" height="15" fill="rgb(234,31,13)" fg:x="128763" fg:w="80"/><text x="61.3725%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt; (93 samples, 0.04%)</title><rect x="61.1168%" y="981" width="0.0441%" height="15" fill="rgb(219,73,54)" fg:x="128751" fg:w="93"/><text x="61.3668%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;&gt; (93 samples, 0.04%)</title><rect x="61.1168%" y="965" width="0.0441%" height="15" fill="rgb(251,162,10)" fg:x="128751" fg:w="93"/><text x="61.3668%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::PeerId&gt;&gt; (93 samples, 0.04%)</title><rect x="61.1168%" y="949" width="0.0441%" height="15" fill="rgb(240,138,47)" fg:x="128751" fg:w="93"/><text x="61.3668%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.04%)</title><rect x="61.1168%" y="933" width="0.0441%" height="15" fill="rgb(216,138,26)" fg:x="128751" fg:w="93"/><text x="61.3668%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;&gt; (77 samples, 0.04%)</title><rect x="61.1609%" y="981" width="0.0366%" height="15" fill="rgb(243,17,35)" fg:x="128844" fg:w="77"/><text x="61.4109%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::PeerId&gt;&gt; (77 samples, 0.04%)</title><rect x="61.1609%" y="965" width="0.0366%" height="15" fill="rgb(241,60,18)" fg:x="128844" fg:w="77"/><text x="61.4109%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.04%)</title><rect x="61.1609%" y="949" width="0.0366%" height="15" fill="rgb(234,2,44)" fg:x="128844" fg:w="77"/><text x="61.4109%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (68 samples, 0.03%)</title><rect x="61.1652%" y="933" width="0.0323%" height="15" fill="rgb(225,225,33)" fg:x="128853" fg:w="68"/><text x="61.4152%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (68 samples, 0.03%)</title><rect x="61.1652%" y="917" width="0.0323%" height="15" fill="rgb(234,50,31)" fg:x="128853" fg:w="68"/><text x="61.4152%" y="927.50"></text></g><g><title>cfree (59 samples, 0.03%)</title><rect x="61.1694%" y="901" width="0.0280%" height="15" fill="rgb(249,6,25)" fg:x="128862" fg:w="59"/><text x="61.4194%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (312 samples, 0.15%)</title><rect x="61.2031%" y="837" width="0.1481%" height="15" fill="rgb(241,5,17)" fg:x="128933" fg:w="312"/><text x="61.4531%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (312 samples, 0.15%)</title><rect x="61.2031%" y="821" width="0.1481%" height="15" fill="rgb(207,116,10)" fg:x="128933" fg:w="312"/><text x="61.4531%" y="831.50"></text></g><g><title>cfree (310 samples, 0.15%)</title><rect x="61.2041%" y="805" width="0.1472%" height="15" fill="rgb(222,128,18)" fg:x="128935" fg:w="310"/><text x="61.4541%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (438 samples, 0.21%)</title><rect x="61.2027%" y="901" width="0.2079%" height="15" fill="rgb(229,109,25)" fg:x="128932" fg:w="438"/><text x="61.4527%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (438 samples, 0.21%)</title><rect x="61.2027%" y="885" width="0.2079%" height="15" fill="rgb(222,102,25)" fg:x="128932" fg:w="438"/><text x="61.4527%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (438 samples, 0.21%)</title><rect x="61.2027%" y="869" width="0.2079%" height="15" fill="rgb(239,211,5)" fg:x="128932" fg:w="438"/><text x="61.4527%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (437 samples, 0.21%)</title><rect x="61.2031%" y="853" width="0.2074%" height="15" fill="rgb(223,136,26)" fg:x="128933" fg:w="437"/><text x="61.4531%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (125 samples, 0.06%)</title><rect x="61.3513%" y="837" width="0.0593%" height="15" fill="rgb(227,30,15)" fg:x="129245" fg:w="125"/><text x="61.6013%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (467 samples, 0.22%)</title><rect x="61.1994%" y="949" width="0.2217%" height="15" fill="rgb(247,76,4)" fg:x="128925" fg:w="467"/><text x="61.4494%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (467 samples, 0.22%)</title><rect x="61.1994%" y="933" width="0.2217%" height="15" fill="rgb(245,38,48)" fg:x="128925" fg:w="467"/><text x="61.4494%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (460 samples, 0.22%)</title><rect x="61.2027%" y="917" width="0.2184%" height="15" fill="rgb(210,220,14)" fg:x="128932" fg:w="460"/><text x="61.4527%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;zenoh_protocol_core::locators::ArcProperties&gt;&gt; (22 samples, 0.01%)</title><rect x="61.4106%" y="901" width="0.0104%" height="15" fill="rgb(224,60,51)" fg:x="129370" fg:w="22"/><text x="61.6606%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (69 samples, 0.03%)</title><rect x="61.4210%" y="917" width="0.0328%" height="15" fill="rgb(212,133,49)" fg:x="129392" fg:w="69"/><text x="61.6710%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (69 samples, 0.03%)</title><rect x="61.4210%" y="901" width="0.0328%" height="15" fill="rgb(231,39,22)" fg:x="129392" fg:w="69"/><text x="61.6710%" y="911.50"></text></g><g><title>cfree (60 samples, 0.03%)</title><rect x="61.4253%" y="885" width="0.0285%" height="15" fill="rgb(236,173,22)" fg:x="129401" fg:w="60"/><text x="61.6753%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;&gt; (544 samples, 0.26%)</title><rect x="61.1975%" y="981" width="0.2582%" height="15" fill="rgb(210,70,0)" fg:x="128921" fg:w="544"/><text x="61.4475%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (540 samples, 0.26%)</title><rect x="61.1994%" y="965" width="0.2563%" height="15" fill="rgb(215,170,11)" fg:x="128925" fg:w="540"/><text x="61.4494%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (73 samples, 0.03%)</title><rect x="61.4210%" y="949" width="0.0347%" height="15" fill="rgb(220,154,28)" fg:x="129392" fg:w="73"/><text x="61.6710%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.03%)</title><rect x="61.4210%" y="933" width="0.0347%" height="15" fill="rgb(240,160,41)" fg:x="129392" fg:w="73"/><text x="61.6710%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (132 samples, 0.06%)</title><rect x="61.4562%" y="965" width="0.0627%" height="15" fill="rgb(243,215,41)" fg:x="129466" fg:w="132"/><text x="61.7062%" y="975.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (136 samples, 0.06%)</title><rect x="61.4562%" y="981" width="0.0646%" height="15" fill="rgb(214,208,31)" fg:x="129466" fg:w="136"/><text x="61.7062%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Link::set_pid_mapping (33 samples, 0.02%)</title><rect x="61.5236%" y="981" width="0.0157%" height="15" fill="rgb(247,57,22)" fg:x="129608" fg:w="33"/><text x="61.7736%" y="991.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (33 samples, 0.02%)</title><rect x="61.5236%" y="965" width="0.0157%" height="15" fill="rgb(228,73,52)" fg:x="129608" fg:w="33"/><text x="61.7736%" y="975.50"></text></g><g><title>core::mem::replace (27 samples, 0.01%)</title><rect x="61.5264%" y="949" width="0.0128%" height="15" fill="rgb(252,60,9)" fg:x="129614" fg:w="27"/><text x="61.7764%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,157 samples, 1.02%)</title><rect x="60.5224%" y="1077" width="1.0239%" height="15" fill="rgb(233,9,51)" fg:x="127499" fg:w="2157"/><text x="60.7724%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2,157 samples, 1.02%)</title><rect x="60.5224%" y="1061" width="1.0239%" height="15" fill="rgb(223,67,14)" fg:x="127499" fg:w="2157"/><text x="60.7724%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,157 samples, 1.02%)</title><rect x="60.5224%" y="1045" width="1.0239%" height="15" fill="rgb(222,86,2)" fg:x="127499" fg:w="2157"/><text x="60.7724%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1,893 samples, 0.90%)</title><rect x="60.6478%" y="1029" width="0.8986%" height="15" fill="rgb(243,58,54)" fg:x="127763" fg:w="1893"/><text x="60.8978%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,739 samples, 0.83%)</title><rect x="60.7209%" y="1013" width="0.8255%" height="15" fill="rgb(210,200,39)" fg:x="127917" fg:w="1739"/><text x="60.9709%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (1,551 samples, 0.74%)</title><rect x="60.8101%" y="997" width="0.7362%" height="15" fill="rgb(238,135,9)" fg:x="128105" fg:w="1551"/><text x="61.0601%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (449 samples, 0.21%)</title><rect x="61.5539%" y="1077" width="0.2131%" height="15" fill="rgb(232,179,7)" fg:x="129672" fg:w="449"/><text x="61.8039%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (449 samples, 0.21%)</title><rect x="61.5539%" y="1061" width="0.2131%" height="15" fill="rgb(245,65,41)" fg:x="129672" fg:w="449"/><text x="61.8039%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (449 samples, 0.21%)</title><rect x="61.5539%" y="1045" width="0.2131%" height="15" fill="rgb(227,43,8)" fg:x="129672" fg:w="449"/><text x="61.8039%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (449 samples, 0.21%)</title><rect x="61.5539%" y="1029" width="0.2131%" height="15" fill="rgb(235,91,14)" fg:x="129672" fg:w="449"/><text x="61.8039%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (449 samples, 0.21%)</title><rect x="61.5539%" y="1013" width="0.2131%" height="15" fill="rgb(235,219,31)" fg:x="129672" fg:w="449"/><text x="61.8039%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (449 samples, 0.21%)</title><rect x="61.5539%" y="997" width="0.2131%" height="15" fill="rgb(227,121,25)" fg:x="129672" fg:w="449"/><text x="61.8039%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (444 samples, 0.21%)</title><rect x="61.5563%" y="981" width="0.2108%" height="15" fill="rgb(254,129,24)" fg:x="129677" fg:w="444"/><text x="61.8063%" y="991.50"></text></g><g><title>malloc (411 samples, 0.20%)</title><rect x="61.5720%" y="965" width="0.1951%" height="15" fill="rgb(226,144,49)" fg:x="129710" fg:w="411"/><text x="61.8220%" y="975.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="61.7680%" y="1045" width="0.0119%" height="15" fill="rgb(214,187,32)" fg:x="130123" fg:w="25"/><text x="62.0180%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;)&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (96 samples, 0.05%)</title><rect x="61.7680%" y="1077" width="0.0456%" height="15" fill="rgb(243,129,46)" fg:x="130123" fg:w="96"/><text x="62.0180%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;)&gt;&gt; (96 samples, 0.05%)</title><rect x="61.7680%" y="1061" width="0.0456%" height="15" fill="rgb(221,185,35)" fg:x="130123" fg:w="96"/><text x="62.0180%" y="1071.50"></text></g><g><title>cfree (70 samples, 0.03%)</title><rect x="61.7804%" y="1045" width="0.0332%" height="15" fill="rgb(205,0,32)" fg:x="130149" fg:w="70"/><text x="62.0304%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,568 samples, 1.69%)</title><rect x="60.1299%" y="1093" width="1.6937%" height="15" fill="rgb(229,179,12)" fg:x="126672" fg:w="3568"/><text x="60.3799%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6,109 samples, 2.90%)</title><rect x="58.9465%" y="1141" width="2.8999%" height="15" fill="rgb(252,107,19)" fg:x="124179" fg:w="6109"/><text x="59.1965%" y="1151.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6,109 samples, 2.90%)</title><rect x="58.9465%" y="1125" width="2.8999%" height="15" fill="rgb(220,95,27)" fg:x="124179" fg:w="6109"/><text x="59.1965%" y="1135.50">&lt;a..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6,057 samples, 2.88%)</title><rect x="58.9712%" y="1109" width="2.8752%" height="15" fill="rgb(240,113,40)" fg:x="124231" fg:w="6057"/><text x="59.2212%" y="1119.50">al..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;u64&gt;)&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (24 samples, 0.01%)</title><rect x="61.8350%" y="1093" width="0.0114%" height="15" fill="rgb(208,4,43)" fg:x="130264" fg:w="24"/><text x="62.0850%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;u64&gt;)&gt;&gt; (24 samples, 0.01%)</title><rect x="61.8350%" y="1077" width="0.0114%" height="15" fill="rgb(247,189,30)" fg:x="130264" fg:w="24"/><text x="62.0850%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="61.8354%" y="1061" width="0.0109%" height="15" fill="rgb(231,157,17)" fg:x="130265" fg:w="23"/><text x="62.0854%" y="1071.50"></text></g><g><title>&lt;vec_map::IterMut&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 samples, 0.05%)</title><rect x="61.8464%" y="1093" width="0.0546%" height="15" fill="rgb(224,139,6)" fg:x="130288" fg:w="115"/><text x="62.0964%" y="1103.50"></text></g><g><title>&lt;vec_map::ValuesMut&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (193 samples, 0.09%)</title><rect x="61.8464%" y="1109" width="0.0916%" height="15" fill="rgb(223,83,16)" fg:x="130288" fg:w="193"/><text x="62.0964%" y="1119.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (78 samples, 0.04%)</title><rect x="61.9009%" y="1093" width="0.0370%" height="15" fill="rgb(232,211,20)" fg:x="130403" fg:w="78"/><text x="62.1509%" y="1103.50"></text></g><g><title>[libc.so.6] (344 samples, 0.16%)</title><rect x="61.9778%" y="1013" width="0.1633%" height="15" fill="rgb(225,203,35)" fg:x="130565" fg:w="344"/><text x="62.2278%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (418 samples, 0.20%)</title><rect x="61.9432%" y="1061" width="0.1984%" height="15" fill="rgb(215,211,44)" fg:x="130492" fg:w="418"/><text x="62.1932%" y="1071.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (418 samples, 0.20%)</title><rect x="61.9432%" y="1045" width="0.1984%" height="15" fill="rgb(248,213,26)" fg:x="130492" fg:w="418"/><text x="62.1932%" y="1055.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (418 samples, 0.20%)</title><rect x="61.9432%" y="1029" width="0.1984%" height="15" fill="rgb(214,23,52)" fg:x="130492" fg:w="418"/><text x="62.1932%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (657 samples, 0.31%)</title><rect x="61.8464%" y="1141" width="0.3119%" height="15" fill="rgb(225,173,50)" fg:x="130288" fg:w="657"/><text x="62.0964%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (657 samples, 0.31%)</title><rect x="61.8464%" y="1125" width="0.3119%" height="15" fill="rgb(206,150,22)" fg:x="130288" fg:w="657"/><text x="62.0964%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (464 samples, 0.22%)</title><rect x="61.9380%" y="1109" width="0.2203%" height="15" fill="rgb(239,64,23)" fg:x="130481" fg:w="464"/><text x="62.1880%" y="1119.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (463 samples, 0.22%)</title><rect x="61.9384%" y="1093" width="0.2198%" height="15" fill="rgb(242,50,38)" fg:x="130482" fg:w="463"/><text x="62.1884%" y="1103.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (463 samples, 0.22%)</title><rect x="61.9384%" y="1077" width="0.2198%" height="15" fill="rgb(217,91,15)" fg:x="130482" fg:w="463"/><text x="62.1884%" y="1087.50"></text></g><g><title>zenoh_protocol_core::PeerId::as_slice (35 samples, 0.02%)</title><rect x="62.1416%" y="1061" width="0.0166%" height="15" fill="rgb(230,172,6)" fg:x="130910" fg:w="35"/><text x="62.3916%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition (47 samples, 0.02%)</title><rect x="62.1582%" y="1141" width="0.0223%" height="15" fill="rgb(221,98,26)" fg:x="130945" fg:w="47"/><text x="62.4082%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.02%)</title><rect x="62.1606%" y="1125" width="0.0199%" height="15" fill="rgb(227,210,45)" fg:x="130950" fg:w="42"/><text x="62.4106%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.01%)</title><rect x="62.1810%" y="1029" width="0.0109%" height="15" fill="rgb(206,8,30)" fg:x="130993" fg:w="23"/><text x="62.4310%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.01%)</title><rect x="62.1810%" y="1013" width="0.0109%" height="15" fill="rgb(241,219,17)" fg:x="130993" fg:w="23"/><text x="62.4310%" y="1023.50"></text></g><g><title>cfree (23 samples, 0.01%)</title><rect x="62.1810%" y="997" width="0.0109%" height="15" fill="rgb(247,121,29)" fg:x="130993" fg:w="23"/><text x="62.4310%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.01%)</title><rect x="62.1805%" y="1125" width="0.0128%" height="15" fill="rgb(219,169,49)" fg:x="130992" fg:w="27"/><text x="62.4305%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)]&gt; (27 samples, 0.01%)</title><rect x="62.1805%" y="1109" width="0.0128%" height="15" fill="rgb(253,49,49)" fg:x="130992" fg:w="27"/><text x="62.4305%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt; (26 samples, 0.01%)</title><rect x="62.1810%" y="1093" width="0.0123%" height="15" fill="rgb(217,178,3)" fg:x="130993" fg:w="26"/><text x="62.4310%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;&gt; (26 samples, 0.01%)</title><rect x="62.1810%" y="1077" width="0.0123%" height="15" fill="rgb(234,73,37)" fg:x="130993" fg:w="26"/><text x="62.4310%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::PeerId&gt;&gt; (26 samples, 0.01%)</title><rect x="62.1810%" y="1061" width="0.0123%" height="15" fill="rgb(250,98,22)" fg:x="130993" fg:w="26"/><text x="62.4310%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="62.1810%" y="1045" width="0.0123%" height="15" fill="rgb(220,108,37)" fg:x="130993" fg:w="26"/><text x="62.4310%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.01%)</title><rect x="62.1938%" y="1093" width="0.0104%" height="15" fill="rgb(225,168,10)" fg:x="131020" fg:w="22"/><text x="62.4438%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.01%)</title><rect x="62.1938%" y="1077" width="0.0104%" height="15" fill="rgb(247,215,21)" fg:x="131020" fg:w="22"/><text x="62.4438%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (51 samples, 0.02%)</title><rect x="62.1805%" y="1141" width="0.0242%" height="15" fill="rgb(253,189,31)" fg:x="130992" fg:w="51"/><text x="62.4305%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (24 samples, 0.01%)</title><rect x="62.1934%" y="1125" width="0.0114%" height="15" fill="rgb(241,54,22)" fg:x="131019" fg:w="24"/><text x="62.4434%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.01%)</title><rect x="62.1934%" y="1109" width="0.0114%" height="15" fill="rgb(211,87,4)" fg:x="131019" fg:w="24"/><text x="62.4434%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65 samples, 0.03%)</title><rect x="62.2057%" y="1093" width="0.0309%" height="15" fill="rgb(245,112,24)" fg:x="131045" fg:w="65"/><text x="62.4557%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (65 samples, 0.03%)</title><rect x="62.2057%" y="1077" width="0.0309%" height="15" fill="rgb(235,190,41)" fg:x="131045" fg:w="65"/><text x="62.4557%" y="1087.50"></text></g><g><title>cfree (57 samples, 0.03%)</title><rect x="62.2095%" y="1061" width="0.0271%" height="15" fill="rgb(214,89,8)" fg:x="131053" fg:w="57"/><text x="62.4595%" y="1071.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="62.2228%" y="1045" width="0.0138%" height="15" fill="rgb(249,155,35)" fg:x="131081" fg:w="29"/><text x="62.4728%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (75 samples, 0.04%)</title><rect x="62.2047%" y="1141" width="0.0356%" height="15" fill="rgb(249,88,26)" fg:x="131043" fg:w="75"/><text x="62.4547%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (75 samples, 0.04%)</title><rect x="62.2047%" y="1125" width="0.0356%" height="15" fill="rgb(232,56,8)" fg:x="131043" fg:w="75"/><text x="62.4547%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.04%)</title><rect x="62.2047%" y="1109" width="0.0356%" height="15" fill="rgb(240,95,3)" fg:x="131043" fg:w="75"/><text x="62.4547%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,204 samples, 0.57%)</title><rect x="62.4886%" y="1061" width="0.5715%" height="15" fill="rgb(222,44,28)" fg:x="131641" fg:w="1204"/><text x="62.7386%" y="1071.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,204 samples, 0.57%)</title><rect x="62.4886%" y="1045" width="0.5715%" height="15" fill="rgb(234,16,30)" fg:x="131641" fg:w="1204"/><text x="62.7386%" y="1055.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,204 samples, 0.57%)</title><rect x="62.4886%" y="1029" width="0.5715%" height="15" fill="rgb(223,26,17)" fg:x="131641" fg:w="1204"/><text x="62.7386%" y="1039.50"></text></g><g><title>[libc.so.6] (1,184 samples, 0.56%)</title><rect x="62.4981%" y="1013" width="0.5620%" height="15" fill="rgb(239,187,47)" fg:x="131661" fg:w="1184"/><text x="62.7481%" y="1023.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (1,673 samples, 0.79%)</title><rect x="62.2665%" y="1093" width="0.7942%" height="15" fill="rgb(247,102,50)" fg:x="131173" fg:w="1673"/><text x="62.5165%" y="1103.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (1,673 samples, 0.79%)</title><rect x="62.2665%" y="1077" width="0.7942%" height="15" fill="rgb(231,216,22)" fg:x="131173" fg:w="1673"/><text x="62.5165%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1,750 samples, 0.83%)</title><rect x="62.2408%" y="1109" width="0.8307%" height="15" fill="rgb(216,201,26)" fg:x="131119" fg:w="1750"/><text x="62.4908%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.01%)</title><rect x="63.0606%" y="1093" width="0.0109%" height="15" fill="rgb(214,186,23)" fg:x="132846" fg:w="23"/><text x="63.3106%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1,753 samples, 0.83%)</title><rect x="62.2408%" y="1141" width="0.8321%" height="15" fill="rgb(235,184,4)" fg:x="131119" fg:w="1753"/><text x="62.4908%" y="1151.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1,753 samples, 0.83%)</title><rect x="62.2408%" y="1125" width="0.8321%" height="15" fill="rgb(244,46,17)" fg:x="131119" fg:w="1753"/><text x="62.4908%" y="1135.50"></text></g><g><title>log::max_level (32 samples, 0.02%)</title><rect x="63.0730%" y="1141" width="0.0152%" height="15" fill="rgb(248,74,46)" fg:x="132872" fg:w="32"/><text x="63.3230%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32 samples, 0.02%)</title><rect x="63.0730%" y="1125" width="0.0152%" height="15" fill="rgb(243,79,5)" fg:x="132872" fg:w="32"/><text x="63.3230%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.02%)</title><rect x="63.0730%" y="1109" width="0.0152%" height="15" fill="rgb(213,148,1)" fg:x="132872" fg:w="32"/><text x="63.3230%" y="1119.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::IndexMut&lt;petgraph::graph_impl::EdgeIndex&lt;Ix&gt;&gt;&gt;::index_mut (97 samples, 0.05%)</title><rect x="63.0910%" y="1125" width="0.0460%" height="15" fill="rgb(221,30,0)" fg:x="132910" fg:w="97"/><text x="63.3410%" y="1135.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::update_edge (79 samples, 0.04%)</title><rect x="63.0995%" y="1109" width="0.0375%" height="15" fill="rgb(207,85,29)" fg:x="132928" fg:w="79"/><text x="63.3495%" y="1119.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::find_edge_undirected_from_node (531 samples, 0.25%)</title><rect x="63.1456%" y="1093" width="0.2521%" height="15" fill="rgb(239,31,46)" fg:x="133025" fg:w="531"/><text x="63.3956%" y="1103.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::update_edge (665 samples, 0.32%)</title><rect x="63.0896%" y="1141" width="0.3157%" height="15" fill="rgb(219,6,1)" fg:x="132907" fg:w="665"/><text x="63.3396%" y="1151.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::find_edge (547 samples, 0.26%)</title><rect x="63.1456%" y="1125" width="0.2597%" height="15" fill="rgb(229,90,29)" fg:x="133025" fg:w="547"/><text x="63.3956%" y="1135.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::find_edge_undirected (547 samples, 0.26%)</title><rect x="63.1456%" y="1109" width="0.2597%" height="15" fill="rgb(242,201,42)" fg:x="133025" fg:w="547"/><text x="63.3956%" y="1119.50"></text></g><g><title>petgraph::graph_impl::stable_graph::WalkNeighbors&lt;Ix&gt;::next (27 samples, 0.01%)</title><rect x="63.4052%" y="1141" width="0.0128%" height="15" fill="rgb(243,80,54)" fg:x="133572" fg:w="27"/><text x="63.6552%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (25 samples, 0.01%)</title><rect x="63.4503%" y="981" width="0.0119%" height="15" fill="rgb(223,166,15)" fg:x="133667" fg:w="25"/><text x="63.7003%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (63 samples, 0.03%)</title><rect x="63.4370%" y="1045" width="0.0299%" height="15" fill="rgb(238,78,27)" fg:x="133639" fg:w="63"/><text x="63.6870%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (63 samples, 0.03%)</title><rect x="63.4370%" y="1029" width="0.0299%" height="15" fill="rgb(235,28,43)" fg:x="133639" fg:w="63"/><text x="63.6870%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (63 samples, 0.03%)</title><rect x="63.4370%" y="1013" width="0.0299%" height="15" fill="rgb(240,210,28)" fg:x="133639" fg:w="63"/><text x="63.6870%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (38 samples, 0.02%)</title><rect x="63.4489%" y="997" width="0.0180%" height="15" fill="rgb(253,6,46)" fg:x="133664" fg:w="38"/><text x="63.6989%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (38 samples, 0.02%)</title><rect x="63.4783%" y="933" width="0.0180%" height="15" fill="rgb(250,159,47)" fg:x="133726" fg:w="38"/><text x="63.7283%" y="943.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (59 samples, 0.03%)</title><rect x="63.4741%" y="997" width="0.0280%" height="15" fill="rgb(216,139,2)" fg:x="133717" fg:w="59"/><text x="63.7241%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_usize (59 samples, 0.03%)</title><rect x="63.4741%" y="981" width="0.0280%" height="15" fill="rgb(221,124,44)" fg:x="133717" fg:w="59"/><text x="63.7241%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (55 samples, 0.03%)</title><rect x="63.4760%" y="965" width="0.0261%" height="15" fill="rgb(205,37,22)" fg:x="133721" fg:w="55"/><text x="63.7260%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="63.4783%" y="949" width="0.0237%" height="15" fill="rgb(250,55,8)" fg:x="133726" fg:w="50"/><text x="63.7283%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (28 samples, 0.01%)</title><rect x="63.5082%" y="933" width="0.0133%" height="15" fill="rgb(215,83,48)" fg:x="133789" fg:w="28"/><text x="63.7582%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.02%)</title><rect x="63.5044%" y="949" width="0.0195%" height="15" fill="rgb(253,2,32)" fg:x="133781" fg:w="41"/><text x="63.7544%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (150 samples, 0.07%)</title><rect x="63.4741%" y="1013" width="0.0712%" height="15" fill="rgb(236,67,28)" fg:x="133717" fg:w="150"/><text x="63.7241%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (91 samples, 0.04%)</title><rect x="63.5021%" y="997" width="0.0432%" height="15" fill="rgb(252,55,15)" fg:x="133776" fg:w="91"/><text x="63.7521%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (91 samples, 0.04%)</title><rect x="63.5021%" y="981" width="0.0432%" height="15" fill="rgb(243,173,17)" fg:x="133776" fg:w="91"/><text x="63.7521%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (86 samples, 0.04%)</title><rect x="63.5044%" y="965" width="0.0408%" height="15" fill="rgb(215,212,13)" fg:x="133781" fg:w="86"/><text x="63.7544%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (45 samples, 0.02%)</title><rect x="63.5239%" y="949" width="0.0214%" height="15" fill="rgb(253,176,6)" fg:x="133822" fg:w="45"/><text x="63.7739%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (251 samples, 0.12%)</title><rect x="63.4304%" y="1077" width="0.1191%" height="15" fill="rgb(236,105,26)" fg:x="133625" fg:w="251"/><text x="63.6804%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (247 samples, 0.12%)</title><rect x="63.4323%" y="1061" width="0.1172%" height="15" fill="rgb(239,226,32)" fg:x="133629" fg:w="247"/><text x="63.6823%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (159 samples, 0.08%)</title><rect x="63.4741%" y="1045" width="0.0755%" height="15" fill="rgb(236,104,51)" fg:x="133717" fg:w="159"/><text x="63.7241%" y="1055.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (159 samples, 0.08%)</title><rect x="63.4741%" y="1029" width="0.0755%" height="15" fill="rgb(220,172,33)" fg:x="133717" fg:w="159"/><text x="63.7241%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (57 samples, 0.03%)</title><rect x="63.6027%" y="981" width="0.0271%" height="15" fill="rgb(224,182,25)" fg:x="133988" fg:w="57"/><text x="63.8527%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (57 samples, 0.03%)</title><rect x="63.6027%" y="965" width="0.0271%" height="15" fill="rgb(236,184,24)" fg:x="133988" fg:w="57"/><text x="63.8527%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (57 samples, 0.03%)</title><rect x="63.6027%" y="949" width="0.0271%" height="15" fill="rgb(241,221,14)" fg:x="133988" fg:w="57"/><text x="63.8527%" y="959.50"></text></g><g><title>[libc.so.6] (57 samples, 0.03%)</title><rect x="63.6027%" y="933" width="0.0271%" height="15" fill="rgb(227,146,5)" fg:x="133988" fg:w="57"/><text x="63.8527%" y="943.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (144 samples, 0.07%)</title><rect x="63.5619%" y="1013" width="0.0684%" height="15" fill="rgb(214,15,23)" fg:x="133902" fg:w="144"/><text x="63.8119%" y="1023.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (144 samples, 0.07%)</title><rect x="63.5619%" y="997" width="0.0684%" height="15" fill="rgb(233,157,31)" fg:x="133902" fg:w="144"/><text x="63.8119%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (146 samples, 0.07%)</title><rect x="63.5619%" y="1029" width="0.0693%" height="15" fill="rgb(211,27,52)" fg:x="133902" fg:w="146"/><text x="63.8119%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (26 samples, 0.01%)</title><rect x="63.6369%" y="1029" width="0.0123%" height="15" fill="rgb(212,223,15)" fg:x="134060" fg:w="26"/><text x="63.8869%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (26 samples, 0.01%)</title><rect x="63.6369%" y="1013" width="0.0123%" height="15" fill="rgb(254,211,0)" fg:x="134060" fg:w="26"/><text x="63.8869%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.01%)</title><rect x="63.6369%" y="997" width="0.0123%" height="15" fill="rgb(205,43,38)" fg:x="134060" fg:w="26"/><text x="63.8869%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (477 samples, 0.23%)</title><rect x="63.4247%" y="1141" width="0.2264%" height="15" fill="rgb(242,206,46)" fg:x="133613" fg:w="477"/><text x="63.6747%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (477 samples, 0.23%)</title><rect x="63.4247%" y="1125" width="0.2264%" height="15" fill="rgb(220,221,12)" fg:x="133613" fg:w="477"/><text x="63.6747%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (477 samples, 0.23%)</title><rect x="63.4247%" y="1109" width="0.2264%" height="15" fill="rgb(217,156,35)" fg:x="133613" fg:w="477"/><text x="63.6747%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (477 samples, 0.23%)</title><rect x="63.4247%" y="1093" width="0.2264%" height="15" fill="rgb(207,181,49)" fg:x="133613" fg:w="477"/><text x="63.6747%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (214 samples, 0.10%)</title><rect x="63.5495%" y="1077" width="0.1016%" height="15" fill="rgb(235,103,47)" fg:x="133876" fg:w="214"/><text x="63.7995%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (214 samples, 0.10%)</title><rect x="63.5495%" y="1061" width="0.1016%" height="15" fill="rgb(222,63,28)" fg:x="133876" fg:w="214"/><text x="63.7995%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (214 samples, 0.10%)</title><rect x="63.5495%" y="1045" width="0.1016%" height="15" fill="rgb(244,137,21)" fg:x="133876" fg:w="214"/><text x="63.7995%" y="1055.50"></text></g><g><title>&lt;vec_map::Values&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.02%)</title><rect x="63.6511%" y="1093" width="0.0157%" height="15" fill="rgb(228,35,27)" fg:x="134090" fg:w="33"/><text x="63.9011%" y="1103.50"></text></g><g><title>&lt;vec_map::Iter&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.02%)</title><rect x="63.6511%" y="1077" width="0.0157%" height="15" fill="rgb(226,191,41)" fg:x="134090" fg:w="33"/><text x="63.9011%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (343 samples, 0.16%)</title><rect x="63.6801%" y="1045" width="0.1628%" height="15" fill="rgb(210,154,3)" fg:x="134151" fg:w="343"/><text x="63.9301%" y="1055.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (343 samples, 0.16%)</title><rect x="63.6801%" y="1029" width="0.1628%" height="15" fill="rgb(216,60,49)" fg:x="134151" fg:w="343"/><text x="63.9301%" y="1039.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (343 samples, 0.16%)</title><rect x="63.6801%" y="1013" width="0.1628%" height="15" fill="rgb(226,17,20)" fg:x="134151" fg:w="343"/><text x="63.9301%" y="1023.50"></text></g><g><title>[libc.so.6] (323 samples, 0.15%)</title><rect x="63.6896%" y="997" width="0.1533%" height="15" fill="rgb(206,115,35)" fg:x="134171" fg:w="323"/><text x="63.9396%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (405 samples, 0.19%)</title><rect x="63.6511%" y="1125" width="0.1922%" height="15" fill="rgb(227,88,1)" fg:x="134090" fg:w="405"/><text x="63.9011%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (405 samples, 0.19%)</title><rect x="63.6511%" y="1109" width="0.1922%" height="15" fill="rgb(230,222,24)" fg:x="134090" fg:w="405"/><text x="63.9011%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (372 samples, 0.18%)</title><rect x="63.6668%" y="1093" width="0.1766%" height="15" fill="rgb(214,124,32)" fg:x="134123" fg:w="372"/><text x="63.9168%" y="1103.50"></text></g><g><title>zenoh::net::routing::network::Network::get_link_from_pid::{{closure}} (354 samples, 0.17%)</title><rect x="63.6753%" y="1077" width="0.1680%" height="15" fill="rgb(240,41,36)" fg:x="134141" fg:w="354"/><text x="63.9253%" y="1087.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (354 samples, 0.17%)</title><rect x="63.6753%" y="1061" width="0.1680%" height="15" fill="rgb(221,17,52)" fg:x="134141" fg:w="354"/><text x="63.9253%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::get_link_from_pid (410 samples, 0.19%)</title><rect x="63.6511%" y="1141" width="0.1946%" height="15" fill="rgb(252,70,16)" fg:x="134090" fg:w="410"/><text x="63.9011%" y="1151.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (25 samples, 0.01%)</title><rect x="63.8505%" y="1141" width="0.0119%" height="15" fill="rgb(250,177,4)" fg:x="134510" fg:w="25"/><text x="64.1005%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (51 samples, 0.02%)</title><rect x="63.9212%" y="1125" width="0.0242%" height="15" fill="rgb(240,188,47)" fg:x="134659" fg:w="51"/><text x="64.1712%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (51 samples, 0.02%)</title><rect x="63.9212%" y="1109" width="0.0242%" height="15" fill="rgb(215,92,12)" fg:x="134659" fg:w="51"/><text x="64.1712%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (51 samples, 0.02%)</title><rect x="63.9212%" y="1093" width="0.0242%" height="15" fill="rgb(242,110,29)" fg:x="134659" fg:w="51"/><text x="64.1712%" y="1103.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.01%)</title><rect x="63.9326%" y="1077" width="0.0128%" height="15" fill="rgb(208,211,26)" fg:x="134683" fg:w="27"/><text x="64.1826%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (26 samples, 0.01%)</title><rect x="63.9635%" y="1061" width="0.0123%" height="15" fill="rgb(244,147,6)" fg:x="134748" fg:w="26"/><text x="64.2135%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (39 samples, 0.02%)</title><rect x="63.9597%" y="1077" width="0.0185%" height="15" fill="rgb(211,130,42)" fg:x="134740" fg:w="39"/><text x="64.2097%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (83 samples, 0.04%)</title><rect x="63.9478%" y="1093" width="0.0394%" height="15" fill="rgb(220,63,1)" fg:x="134715" fg:w="83"/><text x="64.1978%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (96 samples, 0.05%)</title><rect x="63.9454%" y="1125" width="0.0456%" height="15" fill="rgb(241,212,30)" fg:x="134710" fg:w="96"/><text x="64.1954%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (91 samples, 0.04%)</title><rect x="63.9478%" y="1109" width="0.0432%" height="15" fill="rgb(233,153,17)" fg:x="134715" fg:w="91"/><text x="64.1978%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::gt (42 samples, 0.02%)</title><rect x="63.9910%" y="1125" width="0.0199%" height="15" fill="rgb(236,3,10)" fg:x="134806" fg:w="42"/><text x="64.2410%" y="1135.50"></text></g><g><title>core::cmp::PartialOrd::gt (42 samples, 0.02%)</title><rect x="63.9910%" y="1109" width="0.0199%" height="15" fill="rgb(232,41,21)" fg:x="134806" fg:w="42"/><text x="64.2410%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialOrd for [T]&gt;::partial_cmp (42 samples, 0.02%)</title><rect x="63.9910%" y="1093" width="0.0199%" height="15" fill="rgb(206,63,51)" fg:x="134806" fg:w="42"/><text x="64.2410%" y="1103.50"></text></g><g><title>&lt;A as core::slice::cmp::SlicePartialOrd&gt;::partial_compare (42 samples, 0.02%)</title><rect x="63.9910%" y="1077" width="0.0199%" height="15" fill="rgb(250,214,3)" fg:x="134806" fg:w="42"/><text x="64.2410%" y="1087.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceOrd&gt;::compare (42 samples, 0.02%)</title><rect x="63.9910%" y="1061" width="0.0199%" height="15" fill="rgb(254,89,27)" fg:x="134806" fg:w="42"/><text x="64.2410%" y="1071.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="63.9943%" y="1045" width="0.0166%" height="15" fill="rgb(249,41,14)" fg:x="134813" fg:w="35"/><text x="64.2443%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::update_edge (347 samples, 0.16%)</title><rect x="63.8624%" y="1141" width="0.1647%" height="15" fill="rgb(221,196,51)" fg:x="134535" fg:w="347"/><text x="64.1124%" y="1151.50"></text></g><g><title>zenoh_protocol_core::PeerId::as_slice (34 samples, 0.02%)</title><rect x="64.0109%" y="1125" width="0.0161%" height="15" fill="rgb(214,116,26)" fg:x="134848" fg:w="34"/><text x="64.2609%" y="1135.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (34 samples, 0.02%)</title><rect x="64.0109%" y="1109" width="0.0161%" height="15" fill="rgb(236,67,7)" fg:x="134848" fg:w="34"/><text x="64.2609%" y="1119.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (34 samples, 0.02%)</title><rect x="64.0109%" y="1093" width="0.0161%" height="15" fill="rgb(253,179,32)" fg:x="134848" fg:w="34"/><text x="64.2609%" y="1103.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (34 samples, 0.02%)</title><rect x="64.0109%" y="1077" width="0.0161%" height="15" fill="rgb(218,33,15)" fg:x="134848" fg:w="34"/><text x="64.2609%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (34 samples, 0.02%)</title><rect x="64.0109%" y="1061" width="0.0161%" height="15" fill="rgb(217,202,41)" fg:x="134848" fg:w="34"/><text x="64.2609%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (12,578 samples, 5.97%)</title><rect x="58.0607%" y="1237" width="5.9706%" height="15" fill="rgb(234,133,5)" fg:x="122313" fg:w="12578"/><text x="58.3107%" y="1247.50">zenoh_tr..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (12,578 samples, 5.97%)</title><rect x="58.0607%" y="1221" width="5.9706%" height="15" fill="rgb(240,47,40)" fg:x="122313" fg:w="12578"/><text x="58.3107%" y="1231.50">zenoh_tr..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (12,578 samples, 5.97%)</title><rect x="58.0607%" y="1205" width="5.9706%" height="15" fill="rgb(234,166,26)" fg:x="122313" fg:w="12578"/><text x="58.3107%" y="1215.50">zenoh_tr..</text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (12,578 samples, 5.97%)</title><rect x="58.0607%" y="1189" width="5.9706%" height="15" fill="rgb(244,125,51)" fg:x="122313" fg:w="12578"/><text x="58.3107%" y="1199.50">&lt;zenoh::..</text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (12,578 samples, 5.97%)</title><rect x="58.0607%" y="1173" width="5.9706%" height="15" fill="rgb(229,171,11)" fg:x="122313" fg:w="12578"/><text x="58.3107%" y="1183.50">&lt;zenoh::..</text></g><g><title>zenoh::net::routing::network::Network::link_states (12,275 samples, 5.83%)</title><rect x="58.2045%" y="1157" width="5.8268%" height="15" fill="rgb(224,38,45)" fg:x="122616" fg:w="12275"/><text x="58.4545%" y="1167.50">zenoh::..</text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (154 samples, 0.07%)</title><rect x="64.0380%" y="1045" width="0.0731%" height="15" fill="rgb(237,27,7)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (154 samples, 0.07%)</title><rect x="64.0380%" y="1029" width="0.0731%" height="15" fill="rgb(216,52,7)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (154 samples, 0.07%)</title><rect x="64.0380%" y="1013" width="0.0731%" height="15" fill="rgb(243,11,11)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (154 samples, 0.07%)</title><rect x="64.0380%" y="997" width="0.0731%" height="15" fill="rgb(253,167,20)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (154 samples, 0.07%)</title><rect x="64.0380%" y="981" width="0.0731%" height="15" fill="rgb(215,207,5)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (154 samples, 0.07%)</title><rect x="64.0380%" y="965" width="0.0731%" height="15" fill="rgb(252,127,31)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (154 samples, 0.07%)</title><rect x="64.0380%" y="949" width="0.0731%" height="15" fill="rgb(209,106,27)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (154 samples, 0.07%)</title><rect x="64.0380%" y="933" width="0.0731%" height="15" fill="rgb(214,220,18)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (154 samples, 0.07%)</title><rect x="64.0380%" y="917" width="0.0731%" height="15" fill="rgb(237,89,12)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (154 samples, 0.07%)</title><rect x="64.0380%" y="901" width="0.0731%" height="15" fill="rgb(209,167,36)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (154 samples, 0.07%)</title><rect x="64.0380%" y="885" width="0.0731%" height="15" fill="rgb(243,45,22)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="895.50"></text></g><g><title>alloc::alloc::alloc (154 samples, 0.07%)</title><rect x="64.0380%" y="869" width="0.0731%" height="15" fill="rgb(239,2,46)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="879.50"></text></g><g><title>malloc (154 samples, 0.07%)</title><rect x="64.0380%" y="853" width="0.0731%" height="15" fill="rgb(241,101,0)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="863.50"></text></g><g><title>[libc.so.6] (154 samples, 0.07%)</title><rect x="64.0380%" y="837" width="0.0731%" height="15" fill="rgb(244,34,31)" fg:x="134905" fg:w="154"/><text x="64.2880%" y="847.50"></text></g><g><title>[libc.so.6] (58 samples, 0.03%)</title><rect x="64.0836%" y="821" width="0.0275%" height="15" fill="rgb(248,23,22)" fg:x="135001" fg:w="58"/><text x="64.3336%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (161 samples, 0.08%)</title><rect x="64.0380%" y="1125" width="0.0764%" height="15" fill="rgb(218,27,48)" fg:x="134905" fg:w="161"/><text x="64.2880%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (161 samples, 0.08%)</title><rect x="64.0380%" y="1109" width="0.0764%" height="15" fill="rgb(232,78,1)" fg:x="134905" fg:w="161"/><text x="64.2880%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (161 samples, 0.08%)</title><rect x="64.0380%" y="1093" width="0.0764%" height="15" fill="rgb(233,169,12)" fg:x="134905" fg:w="161"/><text x="64.2880%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (161 samples, 0.08%)</title><rect x="64.0380%" y="1077" width="0.0764%" height="15" fill="rgb(225,222,54)" fg:x="134905" fg:w="161"/><text x="64.2880%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (161 samples, 0.08%)</title><rect x="64.0380%" y="1061" width="0.0764%" height="15" fill="rgb(245,126,29)" fg:x="134905" fg:w="161"/><text x="64.2880%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (113 samples, 0.05%)</title><rect x="64.4187%" y="805" width="0.0536%" height="15" fill="rgb(241,63,48)" fg:x="135707" fg:w="113"/><text x="64.6687%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (251 samples, 0.12%)</title><rect x="64.3850%" y="821" width="0.1191%" height="15" fill="rgb(235,126,38)" fg:x="135636" fg:w="251"/><text x="64.6350%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (67 samples, 0.03%)</title><rect x="64.4723%" y="805" width="0.0318%" height="15" fill="rgb(232,96,49)" fg:x="135820" fg:w="67"/><text x="64.7223%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (608 samples, 0.29%)</title><rect x="64.5445%" y="805" width="0.2886%" height="15" fill="rgb(211,146,40)" fg:x="135972" fg:w="608"/><text x="64.7945%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1,425 samples, 0.68%)</title><rect x="64.2530%" y="869" width="0.6764%" height="15" fill="rgb(247,93,44)" fg:x="135358" fg:w="1425"/><text x="64.5030%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,425 samples, 0.68%)</title><rect x="64.2530%" y="853" width="0.6764%" height="15" fill="rgb(251,41,49)" fg:x="135358" fg:w="1425"/><text x="64.5030%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,425 samples, 0.68%)</title><rect x="64.2530%" y="837" width="0.6764%" height="15" fill="rgb(218,155,12)" fg:x="135358" fg:w="1425"/><text x="64.5030%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (896 samples, 0.43%)</title><rect x="64.5041%" y="821" width="0.4253%" height="15" fill="rgb(221,161,30)" fg:x="135887" fg:w="896"/><text x="64.7541%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (203 samples, 0.10%)</title><rect x="64.8331%" y="805" width="0.0964%" height="15" fill="rgb(221,179,11)" fg:x="136580" fg:w="203"/><text x="65.0831%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (400 samples, 0.19%)</title><rect x="64.9295%" y="869" width="0.1899%" height="15" fill="rgb(224,170,48)" fg:x="136783" fg:w="400"/><text x="65.1795%" y="879.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (126 samples, 0.06%)</title><rect x="65.0595%" y="853" width="0.0598%" height="15" fill="rgb(223,117,5)" fg:x="137057" fg:w="126"/><text x="65.3095%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (99 samples, 0.05%)</title><rect x="65.0723%" y="837" width="0.0470%" height="15" fill="rgb(209,52,20)" fg:x="137084" fg:w="99"/><text x="65.3223%" y="847.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (99 samples, 0.05%)</title><rect x="65.0723%" y="821" width="0.0470%" height="15" fill="rgb(209,19,41)" fg:x="137084" fg:w="99"/><text x="65.3223%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (142 samples, 0.07%)</title><rect x="65.3961%" y="725" width="0.0674%" height="15" fill="rgb(210,177,12)" fg:x="137766" fg:w="142"/><text x="65.6461%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (254 samples, 0.12%)</title><rect x="65.3638%" y="741" width="0.1206%" height="15" fill="rgb(211,159,37)" fg:x="137698" fg:w="254"/><text x="65.6138%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (44 samples, 0.02%)</title><rect x="65.4635%" y="725" width="0.0209%" height="15" fill="rgb(209,20,2)" fg:x="137908" fg:w="44"/><text x="65.7135%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (80 samples, 0.04%)</title><rect x="65.4872%" y="741" width="0.0380%" height="15" fill="rgb(244,3,46)" fg:x="137958" fg:w="80"/><text x="65.7372%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (767 samples, 0.36%)</title><rect x="65.1616%" y="757" width="0.3641%" height="15" fill="rgb(220,94,38)" fg:x="137272" fg:w="767"/><text x="65.4116%" y="767.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (988 samples, 0.47%)</title><rect x="65.1193%" y="821" width="0.4690%" height="15" fill="rgb(253,14,31)" fg:x="137183" fg:w="988"/><text x="65.3693%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (988 samples, 0.47%)</title><rect x="65.1193%" y="805" width="0.4690%" height="15" fill="rgb(234,176,13)" fg:x="137183" fg:w="988"/><text x="65.3693%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (935 samples, 0.44%)</title><rect x="65.1445%" y="789" width="0.4438%" height="15" fill="rgb(218,62,25)" fg:x="137236" fg:w="935"/><text x="65.3945%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (899 samples, 0.43%)</title><rect x="65.1616%" y="773" width="0.4267%" height="15" fill="rgb(216,124,40)" fg:x="137272" fg:w="899"/><text x="65.4116%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (132 samples, 0.06%)</title><rect x="65.5257%" y="757" width="0.0627%" height="15" fill="rgb(228,170,12)" fg:x="138039" fg:w="132"/><text x="65.7757%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (332 samples, 0.16%)</title><rect x="65.8546%" y="741" width="0.1576%" height="15" fill="rgb(231,226,5)" fg:x="138732" fg:w="332"/><text x="66.1046%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (601 samples, 0.29%)</title><rect x="65.7901%" y="757" width="0.2853%" height="15" fill="rgb(237,122,22)" fg:x="138596" fg:w="601"/><text x="66.0401%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (133 samples, 0.06%)</title><rect x="66.0122%" y="741" width="0.0631%" height="15" fill="rgb(209,185,25)" fg:x="139064" fg:w="133"/><text x="66.2622%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (84 samples, 0.04%)</title><rect x="66.0815%" y="757" width="0.0399%" height="15" fill="rgb(228,200,32)" fg:x="139210" fg:w="84"/><text x="66.3315%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (962 samples, 0.46%)</title><rect x="65.6676%" y="773" width="0.4567%" height="15" fill="rgb(217,140,10)" fg:x="138338" fg:w="962"/><text x="65.9176%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1,134 samples, 0.54%)</title><rect x="65.6676%" y="789" width="0.5383%" height="15" fill="rgb(253,17,24)" fg:x="138338" fg:w="1134"/><text x="65.9176%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (172 samples, 0.08%)</title><rect x="66.1243%" y="773" width="0.0816%" height="15" fill="rgb(212,61,6)" fg:x="139300" fg:w="172"/><text x="66.3743%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2,290 samples, 1.09%)</title><rect x="65.1193%" y="837" width="1.0870%" height="15" fill="rgb(205,14,25)" fg:x="137183" fg:w="2290"/><text x="65.3693%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1,302 samples, 0.62%)</title><rect x="65.5883%" y="821" width="0.6180%" height="15" fill="rgb(232,69,41)" fg:x="138171" fg:w="1302"/><text x="65.8383%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,254 samples, 0.60%)</title><rect x="65.6111%" y="805" width="0.5953%" height="15" fill="rgb(241,106,47)" fg:x="138219" fg:w="1254"/><text x="65.8611%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (4,372 samples, 2.08%)</title><rect x="64.1486%" y="901" width="2.0753%" height="15" fill="rgb(210,213,53)" fg:x="135138" fg:w="4372"/><text x="64.3986%" y="911.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (4,369 samples, 2.07%)</title><rect x="64.1500%" y="885" width="2.0739%" height="15" fill="rgb(253,175,27)" fg:x="135141" fg:w="4369"/><text x="64.4000%" y="895.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,327 samples, 1.10%)</title><rect x="65.1193%" y="869" width="1.1046%" height="15" fill="rgb(211,171,24)" fg:x="137183" fg:w="2327"/><text x="65.3693%" y="879.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (2,327 samples, 1.10%)</title><rect x="65.1193%" y="853" width="1.1046%" height="15" fill="rgb(229,80,7)" fg:x="137183" fg:w="2327"/><text x="65.3693%" y="863.50"></text></g><g><title>zenoh_protocol_core::PeerId::as_slice (37 samples, 0.02%)</title><rect x="66.2064%" y="837" width="0.0176%" height="15" fill="rgb(212,46,39)" fg:x="139473" fg:w="37"/><text x="66.4564%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 0.05%)</title><rect x="66.3754%" y="853" width="0.0522%" height="15" fill="rgb(240,80,45)" fg:x="139829" fg:w="110"/><text x="66.6254%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (110 samples, 0.05%)</title><rect x="66.3754%" y="837" width="0.0522%" height="15" fill="rgb(253,177,40)" fg:x="139829" fg:w="110"/><text x="66.6254%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (758 samples, 0.36%)</title><rect x="66.7048%" y="805" width="0.3598%" height="15" fill="rgb(249,200,15)" fg:x="140523" fg:w="758"/><text x="66.9548%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (758 samples, 0.36%)</title><rect x="66.7048%" y="789" width="0.3598%" height="15" fill="rgb(217,78,26)" fg:x="140523" fg:w="758"/><text x="66.9548%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (758 samples, 0.36%)</title><rect x="66.7048%" y="773" width="0.3598%" height="15" fill="rgb(254,151,32)" fg:x="140523" fg:w="758"/><text x="66.9548%" y="783.50"></text></g><g><title>[libc.so.6] (758 samples, 0.36%)</title><rect x="66.7048%" y="757" width="0.3598%" height="15" fill="rgb(226,165,27)" fg:x="140523" fg:w="758"/><text x="66.9548%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1,359 samples, 0.65%)</title><rect x="66.4276%" y="837" width="0.6451%" height="15" fill="rgb(250,206,4)" fg:x="139939" fg:w="1359"/><text x="66.6776%" y="847.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (1,359 samples, 0.65%)</title><rect x="66.4276%" y="821" width="0.6451%" height="15" fill="rgb(231,229,27)" fg:x="139939" fg:w="1359"/><text x="66.6776%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1,457 samples, 0.69%)</title><rect x="66.4276%" y="853" width="0.6916%" height="15" fill="rgb(239,217,8)" fg:x="139939" fg:w="1457"/><text x="66.6776%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (98 samples, 0.05%)</title><rect x="67.0727%" y="837" width="0.0465%" height="15" fill="rgb(225,204,27)" fg:x="141298" fg:w="98"/><text x="67.3227%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (98 samples, 0.05%)</title><rect x="67.0727%" y="821" width="0.0465%" height="15" fill="rgb(230,56,32)" fg:x="141298" fg:w="98"/><text x="67.3227%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (98 samples, 0.05%)</title><rect x="67.0727%" y="805" width="0.0465%" height="15" fill="rgb(222,56,27)" fg:x="141298" fg:w="98"/><text x="67.3227%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (156 samples, 0.07%)</title><rect x="67.1192%" y="853" width="0.0741%" height="15" fill="rgb(253,108,27)" fg:x="141396" fg:w="156"/><text x="67.3692%" y="863.50"></text></g><g><title>hashbrown::raw::h2 (211 samples, 0.10%)</title><rect x="67.1933%" y="853" width="0.1002%" height="15" fill="rgb(212,87,36)" fg:x="141552" fg:w="211"/><text x="67.4433%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (396 samples, 0.19%)</title><rect x="67.2934%" y="853" width="0.1880%" height="15" fill="rgb(247,82,36)" fg:x="141763" fg:w="396"/><text x="67.5434%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (396 samples, 0.19%)</title><rect x="67.2934%" y="837" width="0.1880%" height="15" fill="rgb(222,143,9)" fg:x="141763" fg:w="396"/><text x="67.5434%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (396 samples, 0.19%)</title><rect x="67.2934%" y="821" width="0.1880%" height="15" fill="rgb(238,162,48)" fg:x="141763" fg:w="396"/><text x="67.5434%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2,787 samples, 1.32%)</title><rect x="66.2239%" y="869" width="1.3230%" height="15" fill="rgb(221,59,43)" fg:x="139510" fg:w="2787"/><text x="66.4739%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (138 samples, 0.07%)</title><rect x="67.4814%" y="853" width="0.0655%" height="15" fill="rgb(205,166,41)" fg:x="142159" fg:w="138"/><text x="67.7314%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (138 samples, 0.07%)</title><rect x="67.4814%" y="837" width="0.0655%" height="15" fill="rgb(241,186,40)" fg:x="142159" fg:w="138"/><text x="67.7314%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,791 samples, 1.32%)</title><rect x="66.2239%" y="901" width="1.3249%" height="15" fill="rgb(216,119,35)" fg:x="139510" fg:w="2791"/><text x="66.4739%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,791 samples, 1.32%)</title><rect x="66.2239%" y="885" width="1.3249%" height="15" fill="rgb(208,68,38)" fg:x="139510" fg:w="2791"/><text x="66.4739%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7,238 samples, 3.44%)</title><rect x="64.1401%" y="917" width="3.4358%" height="15" fill="rgb(217,113,1)" fg:x="135120" fg:w="7238"/><text x="64.3901%" y="927.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (57 samples, 0.03%)</title><rect x="67.5488%" y="901" width="0.0271%" height="15" fill="rgb(242,153,3)" fg:x="142301" fg:w="57"/><text x="67.7988%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7,296 samples, 3.46%)</title><rect x="64.1144%" y="1029" width="3.4633%" height="15" fill="rgb(229,76,35)" fg:x="135066" fg:w="7296"/><text x="64.3644%" y="1039.50">&lt;co..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (7,296 samples, 3.46%)</title><rect x="64.1144%" y="1013" width="3.4633%" height="15" fill="rgb(229,125,34)" fg:x="135066" fg:w="7296"/><text x="64.3644%" y="1023.50">&lt;co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7,296 samples, 3.46%)</title><rect x="64.1144%" y="997" width="3.4633%" height="15" fill="rgb(238,179,36)" fg:x="135066" fg:w="7296"/><text x="64.3644%" y="1007.50">cor..</text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (7,296 samples, 3.46%)</title><rect x="64.1144%" y="981" width="3.4633%" height="15" fill="rgb(244,183,19)" fg:x="135066" fg:w="7296"/><text x="64.3644%" y="991.50">zen..</text></g><g><title>zenoh::net::routing::network::Network::get_idx (7,296 samples, 3.46%)</title><rect x="64.1144%" y="965" width="3.4633%" height="15" fill="rgb(216,85,49)" fg:x="135066" fg:w="7296"/><text x="64.3644%" y="975.50">zen..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7,293 samples, 3.46%)</title><rect x="64.1158%" y="949" width="3.4619%" height="15" fill="rgb(208,161,47)" fg:x="135069" fg:w="7293"/><text x="64.3658%" y="959.50">std..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7,293 samples, 3.46%)</title><rect x="64.1158%" y="933" width="3.4619%" height="15" fill="rgb(233,210,18)" fg:x="135069" fg:w="7293"/><text x="64.3658%" y="943.50">has..</text></g><g><title>__rdl_realloc (32 samples, 0.02%)</title><rect x="67.5953%" y="901" width="0.0152%" height="15" fill="rgb(205,104,42)" fg:x="142399" fg:w="32"/><text x="67.8453%" y="911.50"></text></g><g><title>__rust_realloc (28 samples, 0.01%)</title><rect x="67.6105%" y="901" width="0.0133%" height="15" fill="rgb(248,90,43)" fg:x="142431" fg:w="28"/><text x="67.8605%" y="911.50"></text></g><g><title>[libc.so.6] (75 samples, 0.04%)</title><rect x="68.3074%" y="853" width="0.0356%" height="15" fill="rgb(206,198,11)" fg:x="143899" fg:w="75"/><text x="68.5574%" y="863.50"></text></g><g><title>[libc.so.6] (947 samples, 0.45%)</title><rect x="67.8953%" y="869" width="0.4495%" height="15" fill="rgb(239,165,27)" fg:x="143031" fg:w="947"/><text x="68.1453%" y="879.50"></text></g><g><title>[libc.so.6] (1,171 samples, 0.56%)</title><rect x="67.7895%" y="885" width="0.5559%" height="15" fill="rgb(246,44,32)" fg:x="142808" fg:w="1171"/><text x="68.0395%" y="895.50"></text></g><g><title>__lll_lock_wait_private (51 samples, 0.02%)</title><rect x="68.3453%" y="885" width="0.0242%" height="15" fill="rgb(252,65,42)" fg:x="143979" fg:w="51"/><text x="68.5953%" y="895.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="68.3463%" y="869" width="0.0233%" height="15" fill="rgb(246,197,18)" fg:x="143981" fg:w="49"/><text x="68.5963%" y="879.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="68.3477%" y="853" width="0.0218%" height="15" fill="rgb(216,192,4)" fg:x="143984" fg:w="46"/><text x="68.5977%" y="863.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="68.3477%" y="837" width="0.0218%" height="15" fill="rgb(208,117,10)" fg:x="143984" fg:w="46"/><text x="68.5977%" y="847.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="68.3477%" y="821" width="0.0218%" height="15" fill="rgb(240,61,47)" fg:x="143984" fg:w="46"/><text x="68.5977%" y="831.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="68.3491%" y="805" width="0.0204%" height="15" fill="rgb(228,178,21)" fg:x="143987" fg:w="43"/><text x="68.5991%" y="815.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="68.3491%" y="789" width="0.0204%" height="15" fill="rgb(219,96,54)" fg:x="143987" fg:w="43"/><text x="68.5991%" y="799.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="68.3496%" y="773" width="0.0199%" height="15" fill="rgb(250,177,24)" fg:x="143988" fg:w="42"/><text x="68.5996%" y="783.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="68.3543%" y="757" width="0.0152%" height="15" fill="rgb(242,154,46)" fg:x="143998" fg:w="32"/><text x="68.6043%" y="767.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="68.3591%" y="741" width="0.0104%" height="15" fill="rgb(226,176,29)" fg:x="144008" fg:w="22"/><text x="68.6091%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,687 samples, 0.80%)</title><rect x="67.5934%" y="949" width="0.8008%" height="15" fill="rgb(226,29,2)" fg:x="142395" fg:w="1687"/><text x="67.8434%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,687 samples, 0.80%)</title><rect x="67.5934%" y="933" width="0.8008%" height="15" fill="rgb(237,104,14)" fg:x="142395" fg:w="1687"/><text x="67.8434%" y="943.50"></text></g><g><title>alloc::alloc::realloc (1,686 samples, 0.80%)</title><rect x="67.5939%" y="917" width="0.8003%" height="15" fill="rgb(245,207,31)" fg:x="142396" fg:w="1686"/><text x="67.8439%" y="927.50"></text></g><g><title>realloc (1,623 samples, 0.77%)</title><rect x="67.6238%" y="901" width="0.7704%" height="15" fill="rgb(229,211,45)" fg:x="142459" fg:w="1623"/><text x="67.8738%" y="911.50"></text></g><g><title>__lll_lock_wake_private (52 samples, 0.02%)</title><rect x="68.3695%" y="885" width="0.0247%" height="15" fill="rgb(229,113,15)" fg:x="144030" fg:w="52"/><text x="68.6195%" y="895.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="68.3700%" y="869" width="0.0242%" height="15" fill="rgb(237,147,15)" fg:x="144031" fg:w="51"/><text x="68.6200%" y="879.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="68.3719%" y="853" width="0.0223%" height="15" fill="rgb(244,120,12)" fg:x="144035" fg:w="47"/><text x="68.6219%" y="863.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="68.3719%" y="837" width="0.0223%" height="15" fill="rgb(205,120,12)" fg:x="144035" fg:w="47"/><text x="68.6219%" y="847.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="68.3733%" y="821" width="0.0209%" height="15" fill="rgb(231,26,45)" fg:x="144038" fg:w="44"/><text x="68.6233%" y="831.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="68.3757%" y="805" width="0.0185%" height="15" fill="rgb(246,98,1)" fg:x="144043" fg:w="39"/><text x="68.6257%" y="815.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="68.3814%" y="789" width="0.0128%" height="15" fill="rgb(207,68,45)" fg:x="144055" fg:w="27"/><text x="68.6314%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9,044 samples, 4.29%)</title><rect x="64.1144%" y="1061" width="4.2931%" height="15" fill="rgb(231,27,38)" fg:x="135066" fg:w="9044"/><text x="64.3644%" y="1071.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9,044 samples, 4.29%)</title><rect x="64.1144%" y="1045" width="4.2931%" height="15" fill="rgb(214,223,3)" fg:x="135066" fg:w="9044"/><text x="64.3644%" y="1055.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,748 samples, 0.83%)</title><rect x="67.5778%" y="1029" width="0.8298%" height="15" fill="rgb(228,195,46)" fg:x="142362" fg:w="1748"/><text x="67.8278%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,748 samples, 0.83%)</title><rect x="67.5778%" y="1013" width="0.8298%" height="15" fill="rgb(231,100,42)" fg:x="142362" fg:w="1748"/><text x="67.8278%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,748 samples, 0.83%)</title><rect x="67.5778%" y="997" width="0.8298%" height="15" fill="rgb(236,53,4)" fg:x="142362" fg:w="1748"/><text x="67.8278%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,748 samples, 0.83%)</title><rect x="67.5778%" y="981" width="0.8298%" height="15" fill="rgb(230,152,12)" fg:x="142362" fg:w="1748"/><text x="67.8278%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,748 samples, 0.83%)</title><rect x="67.5778%" y="965" width="0.8298%" height="15" fill="rgb(226,101,19)" fg:x="142362" fg:w="1748"/><text x="67.8278%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (28 samples, 0.01%)</title><rect x="68.3942%" y="949" width="0.0133%" height="15" fill="rgb(250,149,32)" fg:x="144082" fg:w="28"/><text x="68.6442%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (53 samples, 0.03%)</title><rect x="68.4175%" y="901" width="0.0252%" height="15" fill="rgb(232,178,12)" fg:x="144131" fg:w="53"/><text x="68.6675%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (53 samples, 0.03%)</title><rect x="68.4175%" y="885" width="0.0252%" height="15" fill="rgb(246,151,17)" fg:x="144131" fg:w="53"/><text x="68.6675%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (53 samples, 0.03%)</title><rect x="68.4175%" y="869" width="0.0252%" height="15" fill="rgb(252,17,51)" fg:x="144131" fg:w="53"/><text x="68.6675%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.01%)</title><rect x="68.4303%" y="853" width="0.0123%" height="15" fill="rgb(250,207,23)" fg:x="144158" fg:w="26"/><text x="68.6803%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (24 samples, 0.01%)</title><rect x="68.4426%" y="901" width="0.0114%" height="15" fill="rgb(205,27,5)" fg:x="144184" fg:w="24"/><text x="68.6926%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (35 samples, 0.02%)</title><rect x="68.4583%" y="789" width="0.0166%" height="15" fill="rgb(224,32,19)" fg:x="144217" fg:w="35"/><text x="68.7083%" y="799.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (52 samples, 0.02%)</title><rect x="68.4540%" y="853" width="0.0247%" height="15" fill="rgb(247,214,40)" fg:x="144208" fg:w="52"/><text x="68.7040%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (52 samples, 0.02%)</title><rect x="68.4540%" y="837" width="0.0247%" height="15" fill="rgb(239,199,17)" fg:x="144208" fg:w="52"/><text x="68.7040%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="68.4550%" y="821" width="0.0237%" height="15" fill="rgb(251,159,9)" fg:x="144210" fg:w="50"/><text x="68.7050%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (43 samples, 0.02%)</title><rect x="68.4583%" y="805" width="0.0204%" height="15" fill="rgb(225,78,32)" fg:x="144217" fg:w="43"/><text x="68.7083%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (45 samples, 0.02%)</title><rect x="68.4915%" y="789" width="0.0214%" height="15" fill="rgb(206,97,47)" fg:x="144287" fg:w="45"/><text x="68.7415%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69 samples, 0.03%)</title><rect x="68.4816%" y="805" width="0.0328%" height="15" fill="rgb(227,107,4)" fg:x="144266" fg:w="69"/><text x="68.7316%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (134 samples, 0.06%)</title><rect x="68.4540%" y="869" width="0.0636%" height="15" fill="rgb(241,146,50)" fg:x="144208" fg:w="134"/><text x="68.7040%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (82 samples, 0.04%)</title><rect x="68.4787%" y="853" width="0.0389%" height="15" fill="rgb(232,92,30)" fg:x="144260" fg:w="82"/><text x="68.7287%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (82 samples, 0.04%)</title><rect x="68.4787%" y="837" width="0.0389%" height="15" fill="rgb(222,0,40)" fg:x="144260" fg:w="82"/><text x="68.7287%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (76 samples, 0.04%)</title><rect x="68.4816%" y="821" width="0.0361%" height="15" fill="rgb(219,54,33)" fg:x="144266" fg:w="76"/><text x="68.7316%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (239 samples, 0.11%)</title><rect x="68.4118%" y="933" width="0.1135%" height="15" fill="rgb(226,209,28)" fg:x="144119" fg:w="239"/><text x="68.6618%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (239 samples, 0.11%)</title><rect x="68.4118%" y="917" width="0.1135%" height="15" fill="rgb(254,205,35)" fg:x="144119" fg:w="239"/><text x="68.6618%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (150 samples, 0.07%)</title><rect x="68.4540%" y="901" width="0.0712%" height="15" fill="rgb(230,159,3)" fg:x="144208" fg:w="150"/><text x="68.7040%" y="911.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (150 samples, 0.07%)</title><rect x="68.4540%" y="885" width="0.0712%" height="15" fill="rgb(232,190,24)" fg:x="144208" fg:w="150"/><text x="68.7040%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.01%)</title><rect x="68.5513%" y="837" width="0.0104%" height="15" fill="rgb(217,227,44)" fg:x="144413" fg:w="22"/><text x="68.8013%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (22 samples, 0.01%)</title><rect x="68.5513%" y="821" width="0.0104%" height="15" fill="rgb(236,211,1)" fg:x="144413" fg:w="22"/><text x="68.8013%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (22 samples, 0.01%)</title><rect x="68.5513%" y="805" width="0.0104%" height="15" fill="rgb(250,127,46)" fg:x="144413" fg:w="22"/><text x="68.8013%" y="815.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="68.5513%" y="789" width="0.0104%" height="15" fill="rgb(229,213,6)" fg:x="144413" fg:w="22"/><text x="68.8013%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (54 samples, 0.03%)</title><rect x="68.5366%" y="869" width="0.0256%" height="15" fill="rgb(237,15,36)" fg:x="144382" fg:w="54"/><text x="68.7866%" y="879.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (54 samples, 0.03%)</title><rect x="68.5366%" y="853" width="0.0256%" height="15" fill="rgb(213,131,41)" fg:x="144382" fg:w="54"/><text x="68.7866%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (62 samples, 0.03%)</title><rect x="68.5366%" y="885" width="0.0294%" height="15" fill="rgb(225,82,44)" fg:x="144382" fg:w="62"/><text x="68.7866%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (46 samples, 0.02%)</title><rect x="68.5722%" y="885" width="0.0218%" height="15" fill="rgb(249,42,11)" fg:x="144457" fg:w="46"/><text x="68.8222%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (46 samples, 0.02%)</title><rect x="68.5722%" y="869" width="0.0218%" height="15" fill="rgb(253,11,29)" fg:x="144457" fg:w="46"/><text x="68.8222%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.02%)</title><rect x="68.5722%" y="853" width="0.0218%" height="15" fill="rgb(206,8,54)" fg:x="144457" fg:w="46"/><text x="68.8222%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (151 samples, 0.07%)</title><rect x="68.5252%" y="901" width="0.0717%" height="15" fill="rgb(222,186,2)" fg:x="144358" fg:w="151"/><text x="68.7752%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (401 samples, 0.19%)</title><rect x="68.4075%" y="1061" width="0.1904%" height="15" fill="rgb(221,206,53)" fg:x="144110" fg:w="401"/><text x="68.6575%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (401 samples, 0.19%)</title><rect x="68.4075%" y="1045" width="0.1904%" height="15" fill="rgb(230,150,21)" fg:x="144110" fg:w="401"/><text x="68.6575%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (401 samples, 0.19%)</title><rect x="68.4075%" y="1029" width="0.1904%" height="15" fill="rgb(253,202,10)" fg:x="144110" fg:w="401"/><text x="68.6575%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (401 samples, 0.19%)</title><rect x="68.4075%" y="1013" width="0.1904%" height="15" fill="rgb(238,109,40)" fg:x="144110" fg:w="401"/><text x="68.6575%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (401 samples, 0.19%)</title><rect x="68.4075%" y="997" width="0.1904%" height="15" fill="rgb(247,120,22)" fg:x="144110" fg:w="401"/><text x="68.6575%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (401 samples, 0.19%)</title><rect x="68.4075%" y="981" width="0.1904%" height="15" fill="rgb(207,43,30)" fg:x="144110" fg:w="401"/><text x="68.6575%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (401 samples, 0.19%)</title><rect x="68.4075%" y="965" width="0.1904%" height="15" fill="rgb(213,211,24)" fg:x="144110" fg:w="401"/><text x="68.6575%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (398 samples, 0.19%)</title><rect x="68.4089%" y="949" width="0.1889%" height="15" fill="rgb(239,73,39)" fg:x="144113" fg:w="398"/><text x="68.6589%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (153 samples, 0.07%)</title><rect x="68.5252%" y="933" width="0.0726%" height="15" fill="rgb(245,182,19)" fg:x="144358" fg:w="153"/><text x="68.7752%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (153 samples, 0.07%)</title><rect x="68.5252%" y="917" width="0.0726%" height="15" fill="rgb(247,143,26)" fg:x="144358" fg:w="153"/><text x="68.7752%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (9,615 samples, 4.56%)</title><rect x="64.0347%" y="1157" width="4.5641%" height="15" fill="rgb(228,191,23)" fg:x="134898" fg:w="9615"/><text x="64.2847%" y="1167.50">zenoh..</text></g><g><title>zenoh::net::routing::network::Network::make_link_state (9,608 samples, 4.56%)</title><rect x="64.0380%" y="1141" width="4.5608%" height="15" fill="rgb(253,165,31)" fg:x="134905" fg:w="9608"/><text x="64.2880%" y="1151.50">zenoh..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (9,447 samples, 4.48%)</title><rect x="64.1144%" y="1125" width="4.4844%" height="15" fill="rgb(234,138,20)" fg:x="135066" fg:w="9447"/><text x="64.3644%" y="1135.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9,447 samples, 4.48%)</title><rect x="64.1144%" y="1109" width="4.4844%" height="15" fill="rgb(218,191,29)" fg:x="135066" fg:w="9447"/><text x="64.3644%" y="1119.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,447 samples, 4.48%)</title><rect x="64.1144%" y="1093" width="4.4844%" height="15" fill="rgb(221,157,19)" fg:x="135066" fg:w="9447"/><text x="64.3644%" y="1103.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9,447 samples, 4.48%)</title><rect x="64.1144%" y="1077" width="4.4844%" height="15" fill="rgb(237,26,42)" fg:x="135066" fg:w="9447"/><text x="64.3644%" y="1087.50">&lt;allo..</text></g><g><title>zenoh_protocol::proto::msg_shm::&lt;impl zenoh_protocol::proto::msg::ZenohMessage&gt;::map_to_shminfo (44 samples, 0.02%)</title><rect x="68.6235%" y="1109" width="0.0209%" height="15" fill="rgb(220,163,24)" fg:x="144565" fg:w="44"/><text x="68.8735%" y="1119.50"></text></g><g><title>[libc.so.6] (55 samples, 0.03%)</title><rect x="68.6444%" y="1093" width="0.0261%" height="15" fill="rgb(242,115,20)" fg:x="144609" fg:w="55"/><text x="68.8944%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (67 samples, 0.03%)</title><rect x="68.6705%" y="1093" width="0.0318%" height="15" fill="rgb(210,206,9)" fg:x="144664" fg:w="67"/><text x="68.9205%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (467 samples, 0.22%)</title><rect x="68.8186%" y="1077" width="0.2217%" height="15" fill="rgb(208,71,17)" fg:x="144976" fg:w="467"/><text x="69.0686%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (71 samples, 0.03%)</title><rect x="69.0403%" y="1077" width="0.0337%" height="15" fill="rgb(233,7,5)" fg:x="145443" fg:w="71"/><text x="69.2903%" y="1087.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::is_reliable (30 samples, 0.01%)</title><rect x="69.0768%" y="1077" width="0.0142%" height="15" fill="rgb(207,92,33)" fg:x="145520" fg:w="30"/><text x="69.3268%" y="1087.50"></text></g><g><title>[libc.so.6] (44 samples, 0.02%)</title><rect x="69.0911%" y="1077" width="0.0209%" height="15" fill="rgb(218,87,9)" fg:x="145550" fg:w="44"/><text x="69.3411%" y="1087.50"></text></g><g><title>core::mem::drop (31 samples, 0.01%)</title><rect x="69.1120%" y="1077" width="0.0147%" height="15" fill="rgb(219,47,37)" fg:x="145594" fg:w="31"/><text x="69.3620%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::boxed::Box&lt;[zenoh_transport::unicast::link::TransportLinkUnicast]&gt;&gt;&gt; (31 samples, 0.01%)</title><rect x="69.1120%" y="1061" width="0.0147%" height="15" fill="rgb(221,152,34)" fg:x="145594" fg:w="31"/><text x="69.3620%" y="1071.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="69.1120%" y="1045" width="0.0147%" height="15" fill="rgb(235,176,21)" fg:x="145594" fg:w="31"/><text x="69.3620%" y="1055.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (31 samples, 0.01%)</title><rect x="69.1120%" y="1029" width="0.0147%" height="15" fill="rgb(232,212,21)" fg:x="145594" fg:w="31"/><text x="69.3620%" y="1039.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (31 samples, 0.01%)</title><rect x="69.1120%" y="1013" width="0.0147%" height="15" fill="rgb(245,82,39)" fg:x="145594" fg:w="31"/><text x="69.3620%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (296 samples, 0.14%)</title><rect x="69.1395%" y="1013" width="0.1405%" height="15" fill="rgb(241,52,51)" fg:x="145652" fg:w="296"/><text x="69.3895%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (296 samples, 0.14%)</title><rect x="69.1395%" y="997" width="0.1405%" height="15" fill="rgb(219,91,24)" fg:x="145652" fg:w="296"/><text x="69.3895%" y="1007.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::try_read (326 samples, 0.15%)</title><rect x="69.1295%" y="1077" width="0.1547%" height="15" fill="rgb(241,142,12)" fg:x="145631" fg:w="326"/><text x="69.3795%" y="1087.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::try_read (324 samples, 0.15%)</title><rect x="69.1305%" y="1061" width="0.1538%" height="15" fill="rgb(230,27,9)" fg:x="145633" fg:w="324"/><text x="69.3805%" y="1071.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::try_read (324 samples, 0.15%)</title><rect x="69.1305%" y="1045" width="0.1538%" height="15" fill="rgb(249,181,32)" fg:x="145633" fg:w="324"/><text x="69.3805%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_update (324 samples, 0.15%)</title><rect x="69.1305%" y="1029" width="0.1538%" height="15" fill="rgb(230,107,3)" fg:x="145633" fg:w="324"/><text x="69.3805%" y="1039.50"></text></g><g><title>[unknown] (141,404 samples, 67.12%)</title><rect x="2.1727%" y="1253" width="67.1230%" height="15" fill="rgb(246,204,14)" fg:x="4577" fg:w="141404"/><text x="2.4227%" y="1263.50">[unknown]</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (11,090 samples, 5.26%)</title><rect x="64.0313%" y="1237" width="5.2643%" height="15" fill="rgb(213,192,47)" fg:x="134891" fg:w="11090"/><text x="64.2813%" y="1247.50">zenoh_..</text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (11,090 samples, 5.26%)</title><rect x="64.0313%" y="1221" width="5.2643%" height="15" fill="rgb(240,44,36)" fg:x="134891" fg:w="11090"/><text x="64.2813%" y="1231.50">&lt;zenoh..</text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (11,090 samples, 5.26%)</title><rect x="64.0313%" y="1205" width="5.2643%" height="15" fill="rgb(244,209,38)" fg:x="134891" fg:w="11090"/><text x="64.2813%" y="1215.50">&lt;zenoh..</text></g><g><title>zenoh::net::routing::network::Network::link_states (11,083 samples, 5.26%)</title><rect x="64.0347%" y="1189" width="5.2610%" height="15" fill="rgb(219,34,37)" fg:x="134898" fg:w="11083"/><text x="64.2847%" y="1199.50">zenoh:..</text></g><g><title>zenoh::net::routing::network::Network::send_on_link (11,083 samples, 5.26%)</title><rect x="64.0347%" y="1173" width="5.2610%" height="15" fill="rgb(210,28,6)" fg:x="134898" fg:w="11083"/><text x="64.2847%" y="1183.50">zenoh:..</text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (1,468 samples, 0.70%)</title><rect x="68.5988%" y="1157" width="0.6968%" height="15" fill="rgb(244,110,52)" fg:x="144513" fg:w="1468"/><text x="68.8488%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (1,468 samples, 0.70%)</title><rect x="68.5988%" y="1141" width="0.6968%" height="15" fill="rgb(254,124,47)" fg:x="144513" fg:w="1468"/><text x="68.8488%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (1,468 samples, 0.70%)</title><rect x="68.5988%" y="1125" width="0.6968%" height="15" fill="rgb(254,110,13)" fg:x="144513" fg:w="1468"/><text x="68.8488%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (1,372 samples, 0.65%)</title><rect x="68.6444%" y="1109" width="0.6513%" height="15" fill="rgb(252,57,21)" fg:x="144609" fg:w="1372"/><text x="68.8944%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (1,250 samples, 0.59%)</title><rect x="68.7023%" y="1093" width="0.5934%" height="15" fill="rgb(242,60,45)" fg:x="144731" fg:w="1250"/><text x="68.9523%" y="1103.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (24 samples, 0.01%)</title><rect x="69.2843%" y="1077" width="0.0114%" height="15" fill="rgb(234,49,30)" fg:x="145957" fg:w="24"/><text x="69.5343%" y="1087.50"></text></g><g><title>[unknown] (236 samples, 0.11%)</title><rect x="69.3260%" y="1221" width="0.1120%" height="15" fill="rgb(218,98,6)" fg:x="146045" fg:w="236"/><text x="69.5760%" y="1231.50"></text></g><g><title>[unknown] (193 samples, 0.09%)</title><rect x="69.3464%" y="1205" width="0.0916%" height="15" fill="rgb(220,174,29)" fg:x="146088" fg:w="193"/><text x="69.5964%" y="1215.50"></text></g><g><title>[unknown] (179 samples, 0.08%)</title><rect x="69.3531%" y="1189" width="0.0850%" height="15" fill="rgb(236,163,23)" fg:x="146102" fg:w="179"/><text x="69.6031%" y="1199.50"></text></g><g><title>[unknown] (133 samples, 0.06%)</title><rect x="69.3749%" y="1173" width="0.0631%" height="15" fill="rgb(242,114,45)" fg:x="146148" fg:w="133"/><text x="69.6249%" y="1183.50"></text></g><g><title>[unknown] (83 samples, 0.04%)</title><rect x="69.3987%" y="1157" width="0.0394%" height="15" fill="rgb(232,10,53)" fg:x="146198" fg:w="83"/><text x="69.6487%" y="1167.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="69.4162%" y="1141" width="0.0218%" height="15" fill="rgb(245,108,29)" fg:x="146235" fg:w="46"/><text x="69.6662%" y="1151.50"></text></g><g><title>__sigsetjmp (25 samples, 0.01%)</title><rect x="69.4423%" y="1221" width="0.0119%" height="15" fill="rgb(240,89,53)" fg:x="146290" fg:w="25"/><text x="69.6923%" y="1231.50"></text></g><g><title>prctl (86 samples, 0.04%)</title><rect x="69.4713%" y="1141" width="0.0408%" height="15" fill="rgb(226,60,45)" fg:x="146351" fg:w="86"/><text x="69.7213%" y="1151.50"></text></g><g><title>[unknown] (86 samples, 0.04%)</title><rect x="69.4713%" y="1125" width="0.0408%" height="15" fill="rgb(230,41,44)" fg:x="146351" fg:w="86"/><text x="69.7213%" y="1135.50"></text></g><g><title>[unknown] (86 samples, 0.04%)</title><rect x="69.4713%" y="1109" width="0.0408%" height="15" fill="rgb(230,26,20)" fg:x="146351" fg:w="86"/><text x="69.7213%" y="1119.50"></text></g><g><title>[unknown] (86 samples, 0.04%)</title><rect x="69.4713%" y="1093" width="0.0408%" height="15" fill="rgb(237,170,32)" fg:x="146351" fg:w="86"/><text x="69.7213%" y="1103.50"></text></g><g><title>[unknown] (81 samples, 0.04%)</title><rect x="69.4737%" y="1077" width="0.0384%" height="15" fill="rgb(212,35,42)" fg:x="146356" fg:w="81"/><text x="69.7237%" y="1087.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="69.4874%" y="1061" width="0.0247%" height="15" fill="rgb(227,31,34)" fg:x="146385" fg:w="52"/><text x="69.7374%" y="1071.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="69.4988%" y="1045" width="0.0133%" height="15" fill="rgb(216,19,18)" fg:x="146409" fg:w="28"/><text x="69.7488%" y="1055.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (116 samples, 0.06%)</title><rect x="69.6716%" y="613" width="0.0551%" height="15" fill="rgb(211,133,42)" fg:x="146773" fg:w="116"/><text x="69.9216%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (98 samples, 0.05%)</title><rect x="69.6802%" y="597" width="0.0465%" height="15" fill="rgb(244,66,13)" fg:x="146791" fg:w="98"/><text x="69.9302%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (98 samples, 0.05%)</title><rect x="69.6802%" y="581" width="0.0465%" height="15" fill="rgb(218,185,50)" fg:x="146791" fg:w="98"/><text x="69.9302%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (317 samples, 0.15%)</title><rect x="69.5771%" y="629" width="0.1505%" height="15" fill="rgb(219,149,13)" fg:x="146574" fg:w="317"/><text x="69.8271%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (31 samples, 0.01%)</title><rect x="69.7276%" y="629" width="0.0147%" height="15" fill="rgb(221,125,0)" fg:x="146891" fg:w="31"/><text x="69.9776%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (25 samples, 0.01%)</title><rect x="69.7305%" y="613" width="0.0119%" height="15" fill="rgb(247,126,27)" fg:x="146897" fg:w="25"/><text x="69.9805%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (23 samples, 0.01%)</title><rect x="69.7423%" y="629" width="0.0109%" height="15" fill="rgb(250,138,30)" fg:x="146922" fg:w="23"/><text x="69.9923%" y="639.50"></text></g><g><title>async_executor::steal (381 samples, 0.18%)</title><rect x="69.5729%" y="645" width="0.1809%" height="15" fill="rgb(230,151,9)" fg:x="146565" fg:w="381"/><text x="69.8229%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (144 samples, 0.07%)</title><rect x="69.7794%" y="629" width="0.0684%" height="15" fill="rgb(233,80,38)" fg:x="147000" fg:w="144"/><text x="70.0294%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (246 samples, 0.12%)</title><rect x="69.7537%" y="645" width="0.1168%" height="15" fill="rgb(232,68,43)" fg:x="146946" fg:w="246"/><text x="70.0037%" y="655.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (48 samples, 0.02%)</title><rect x="69.8477%" y="629" width="0.0228%" height="15" fill="rgb(254,5,50)" fg:x="147144" fg:w="48"/><text x="70.0977%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (658 samples, 0.31%)</title><rect x="69.5634%" y="661" width="0.3123%" height="15" fill="rgb(225,45,5)" fg:x="146545" fg:w="658"/><text x="69.8134%" y="671.50"></text></g><g><title>parking::Unparker::unpark (79 samples, 0.04%)</title><rect x="69.9009%" y="597" width="0.0375%" height="15" fill="rgb(239,22,3)" fg:x="147256" fg:w="79"/><text x="70.1509%" y="607.50"></text></g><g><title>parking::Inner::unpark (66 samples, 0.03%)</title><rect x="69.9071%" y="581" width="0.0313%" height="15" fill="rgb(243,129,0)" fg:x="147269" fg:w="66"/><text x="70.1571%" y="591.50"></text></g><g><title>syscall (57 samples, 0.03%)</title><rect x="69.9113%" y="565" width="0.0271%" height="15" fill="rgb(223,164,0)" fg:x="147278" fg:w="57"/><text x="70.1613%" y="575.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="69.9128%" y="549" width="0.0256%" height="15" fill="rgb(221,46,29)" fg:x="147281" fg:w="54"/><text x="70.1628%" y="559.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="69.9128%" y="533" width="0.0256%" height="15" fill="rgb(205,97,47)" fg:x="147281" fg:w="54"/><text x="70.1628%" y="543.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="69.9132%" y="517" width="0.0252%" height="15" fill="rgb(249,14,8)" fg:x="147282" fg:w="53"/><text x="70.1632%" y="527.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="69.9151%" y="501" width="0.0233%" height="15" fill="rgb(216,77,3)" fg:x="147286" fg:w="49"/><text x="70.1651%" y="511.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="69.9180%" y="485" width="0.0204%" height="15" fill="rgb(206,168,54)" fg:x="147292" fg:w="43"/><text x="70.1680%" y="495.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="69.9237%" y="469" width="0.0147%" height="15" fill="rgb(236,3,41)" fg:x="147304" fg:w="31"/><text x="70.1737%" y="479.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (81 samples, 0.04%)</title><rect x="69.9004%" y="613" width="0.0384%" height="15" fill="rgb(231,132,24)" fg:x="147255" fg:w="81"/><text x="70.1504%" y="623.50"></text></g><g><title>core::task::wake::Waker::wake (82 samples, 0.04%)</title><rect x="69.9004%" y="645" width="0.0389%" height="15" fill="rgb(227,221,40)" fg:x="147255" fg:w="82"/><text x="70.1504%" y="655.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (82 samples, 0.04%)</title><rect x="69.9004%" y="629" width="0.0389%" height="15" fill="rgb(233,151,11)" fg:x="147255" fg:w="82"/><text x="70.1504%" y="639.50"></text></g><g><title>async_executor::State::notify (135 samples, 0.06%)</title><rect x="69.8757%" y="661" width="0.0641%" height="15" fill="rgb(247,81,35)" fg:x="147203" fg:w="135"/><text x="70.1257%" y="671.50"></text></g><g><title>async_executor::Ticker::wake (30 samples, 0.01%)</title><rect x="69.9403%" y="661" width="0.0142%" height="15" fill="rgb(243,128,48)" fg:x="147339" fg:w="30"/><text x="70.1903%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (840 samples, 0.40%)</title><rect x="69.5567%" y="725" width="0.3987%" height="15" fill="rgb(253,16,10)" fg:x="146531" fg:w="840"/><text x="69.8067%" y="735.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (840 samples, 0.40%)</title><rect x="69.5567%" y="709" width="0.3987%" height="15" fill="rgb(228,67,27)" fg:x="146531" fg:w="840"/><text x="69.8067%" y="719.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (837 samples, 0.40%)</title><rect x="69.5582%" y="693" width="0.3973%" height="15" fill="rgb(231,105,25)" fg:x="146534" fg:w="837"/><text x="69.8082%" y="703.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (830 samples, 0.39%)</title><rect x="69.5615%" y="677" width="0.3940%" height="15" fill="rgb(213,166,47)" fg:x="146541" fg:w="830"/><text x="69.8115%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (23 samples, 0.01%)</title><rect x="69.9574%" y="709" width="0.0109%" height="15" fill="rgb(209,27,10)" fg:x="147375" fg:w="23"/><text x="70.2074%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (23 samples, 0.01%)</title><rect x="69.9574%" y="693" width="0.0109%" height="15" fill="rgb(241,44,30)" fg:x="147375" fg:w="23"/><text x="70.2074%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (913 samples, 0.43%)</title><rect x="69.5387%" y="757" width="0.4334%" height="15" fill="rgb(223,216,15)" fg:x="146493" fg:w="913"/><text x="69.7887%" y="767.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (909 samples, 0.43%)</title><rect x="69.5406%" y="741" width="0.4315%" height="15" fill="rgb(227,14,7)" fg:x="146497" fg:w="909"/><text x="69.7906%" y="751.50"></text></g><g><title>async_executor::steal (33 samples, 0.02%)</title><rect x="69.9564%" y="725" width="0.0157%" height="15" fill="rgb(237,14,5)" fg:x="147373" fg:w="33"/><text x="70.2064%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (75 samples, 0.04%)</title><rect x="70.0314%" y="405" width="0.0356%" height="15" fill="rgb(232,14,36)" fg:x="147531" fg:w="75"/><text x="70.2814%" y="415.50"></text></g><g><title>async_io::Async&lt;T&gt;::read_with::{{closure}} (75 samples, 0.04%)</title><rect x="70.0314%" y="389" width="0.0356%" height="15" fill="rgb(234,0,38)" fg:x="147531" fg:w="75"/><text x="70.2814%" y="399.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::accept::{{closure}}::{{closure}} (65 samples, 0.03%)</title><rect x="70.0362%" y="373" width="0.0309%" height="15" fill="rgb(207,170,14)" fg:x="147541" fg:w="65"/><text x="70.2862%" y="383.50"></text></g><g><title>std::net::tcp::TcpListener::accept (65 samples, 0.03%)</title><rect x="70.0362%" y="357" width="0.0309%" height="15" fill="rgb(252,45,13)" fg:x="147541" fg:w="65"/><text x="70.2862%" y="367.50"></text></g><g><title>std::sys_common::net::TcpListener::accept (65 samples, 0.03%)</title><rect x="70.0362%" y="341" width="0.0309%" height="15" fill="rgb(213,142,7)" fg:x="147541" fg:w="65"/><text x="70.2862%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::accept (65 samples, 0.03%)</title><rect x="70.0362%" y="325" width="0.0309%" height="15" fill="rgb(216,157,23)" fg:x="147541" fg:w="65"/><text x="70.2862%" y="335.50"></text></g><g><title>std::sys::unix::cvt_r (65 samples, 0.03%)</title><rect x="70.0362%" y="309" width="0.0309%" height="15" fill="rgb(212,145,33)" fg:x="147541" fg:w="65"/><text x="70.2862%" y="319.50"></text></g><g><title>std::sys::unix::net::Socket::accept::{{closure}} (65 samples, 0.03%)</title><rect x="70.0362%" y="293" width="0.0309%" height="15" fill="rgb(233,26,13)" fg:x="147541" fg:w="65"/><text x="70.2862%" y="303.50"></text></g><g><title>accept4 (65 samples, 0.03%)</title><rect x="70.0362%" y="277" width="0.0309%" height="15" fill="rgb(219,196,19)" fg:x="147541" fg:w="65"/><text x="70.2862%" y="287.50"></text></g><g><title>[unknown] (63 samples, 0.03%)</title><rect x="70.0371%" y="261" width="0.0299%" height="15" fill="rgb(246,56,21)" fg:x="147543" fg:w="63"/><text x="70.2871%" y="271.50"></text></g><g><title>[unknown] (63 samples, 0.03%)</title><rect x="70.0371%" y="245" width="0.0299%" height="15" fill="rgb(222,28,53)" fg:x="147543" fg:w="63"/><text x="70.2871%" y="255.50"></text></g><g><title>[unknown] (63 samples, 0.03%)</title><rect x="70.0371%" y="229" width="0.0299%" height="15" fill="rgb(224,5,27)" fg:x="147543" fg:w="63"/><text x="70.2871%" y="239.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="70.0376%" y="213" width="0.0294%" height="15" fill="rgb(220,153,33)" fg:x="147544" fg:w="62"/><text x="70.2876%" y="223.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="70.0376%" y="197" width="0.0294%" height="15" fill="rgb(226,58,19)" fg:x="147544" fg:w="62"/><text x="70.2876%" y="207.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="70.0419%" y="181" width="0.0252%" height="15" fill="rgb(239,112,23)" fg:x="147553" fg:w="53"/><text x="70.2919%" y="191.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="70.0447%" y="165" width="0.0223%" height="15" fill="rgb(251,213,20)" fg:x="147559" fg:w="47"/><text x="70.2947%" y="175.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="70.0504%" y="149" width="0.0166%" height="15" fill="rgb(215,181,21)" fg:x="147571" fg:w="35"/><text x="70.3004%" y="159.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="70.0514%" y="133" width="0.0157%" height="15" fill="rgb(240,8,35)" fg:x="147573" fg:w="33"/><text x="70.3014%" y="143.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="70.0533%" y="117" width="0.0138%" height="15" fill="rgb(232,203,3)" fg:x="147577" fg:w="29"/><text x="70.3033%" y="127.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="70.0552%" y="101" width="0.0119%" height="15" fill="rgb(214,202,43)" fg:x="147581" fg:w="25"/><text x="70.3052%" y="111.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="70.0566%" y="85" width="0.0104%" height="15" fill="rgb(254,35,11)" fg:x="147584" fg:w="22"/><text x="70.3066%" y="95.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (34 samples, 0.02%)</title><rect x="70.0703%" y="373" width="0.0161%" height="15" fill="rgb(239,173,13)" fg:x="147613" fg:w="34"/><text x="70.3203%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (30 samples, 0.01%)</title><rect x="70.0722%" y="357" width="0.0142%" height="15" fill="rgb(220,141,0)" fg:x="147617" fg:w="30"/><text x="70.3222%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.01%)</title><rect x="70.0722%" y="341" width="0.0142%" height="15" fill="rgb(210,98,12)" fg:x="147617" fg:w="30"/><text x="70.3222%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.01%)</title><rect x="70.0722%" y="325" width="0.0142%" height="15" fill="rgb(254,153,22)" fg:x="147617" fg:w="30"/><text x="70.3222%" y="335.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.01%)</title><rect x="70.0722%" y="309" width="0.0142%" height="15" fill="rgb(247,223,17)" fg:x="147617" fg:w="30"/><text x="70.3222%" y="319.50"></text></g><g><title>malloc (30 samples, 0.01%)</title><rect x="70.0722%" y="293" width="0.0142%" height="15" fill="rgb(246,56,7)" fg:x="147617" fg:w="30"/><text x="70.3222%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;alloc::sync::Arc&lt;async_io::reactor::Source&gt;&gt;&gt;&gt; (51 samples, 0.02%)</title><rect x="70.0865%" y="373" width="0.0242%" height="15" fill="rgb(240,226,12)" fg:x="147647" fg:w="51"/><text x="70.3365%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.02%)</title><rect x="70.0865%" y="357" width="0.0242%" height="15" fill="rgb(205,87,46)" fg:x="147647" fg:w="51"/><text x="70.3365%" y="367.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (51 samples, 0.02%)</title><rect x="70.0865%" y="341" width="0.0242%" height="15" fill="rgb(245,214,51)" fg:x="147647" fg:w="51"/><text x="70.3365%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (51 samples, 0.02%)</title><rect x="70.0865%" y="325" width="0.0242%" height="15" fill="rgb(223,172,33)" fg:x="147647" fg:w="51"/><text x="70.3365%" y="335.50"></text></g><g><title>syscall (44 samples, 0.02%)</title><rect x="70.0898%" y="309" width="0.0209%" height="15" fill="rgb(227,203,34)" fg:x="147654" fg:w="44"/><text x="70.3398%" y="319.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="70.0898%" y="293" width="0.0209%" height="15" fill="rgb(248,143,44)" fg:x="147654" fg:w="44"/><text x="70.3398%" y="303.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="70.0898%" y="277" width="0.0209%" height="15" fill="rgb(226,162,5)" fg:x="147654" fg:w="44"/><text x="70.3398%" y="287.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="70.0898%" y="261" width="0.0209%" height="15" fill="rgb(211,143,1)" fg:x="147654" fg:w="44"/><text x="70.3398%" y="271.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="70.0903%" y="245" width="0.0204%" height="15" fill="rgb(224,96,15)" fg:x="147655" fg:w="43"/><text x="70.3403%" y="255.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="70.0917%" y="229" width="0.0190%" height="15" fill="rgb(222,4,38)" fg:x="147658" fg:w="40"/><text x="70.3417%" y="239.50"></text></g><g><title>[unknown] (27 samples, 0.01%)</title><rect x="70.0979%" y="213" width="0.0128%" height="15" fill="rgb(253,228,15)" fg:x="147671" fg:w="27"/><text x="70.3479%" y="223.50"></text></g><g><title>polling::Poller::add (79 samples, 0.04%)</title><rect x="70.1107%" y="373" width="0.0375%" height="15" fill="rgb(242,194,12)" fg:x="147698" fg:w="79"/><text x="70.3607%" y="383.50"></text></g><g><title>polling::epoll::Poller::add (78 samples, 0.04%)</title><rect x="70.1112%" y="357" width="0.0370%" height="15" fill="rgb(214,177,31)" fg:x="147699" fg:w="78"/><text x="70.3612%" y="367.50"></text></g><g><title>polling::epoll::Poller::ctl (78 samples, 0.04%)</title><rect x="70.1112%" y="341" width="0.0370%" height="15" fill="rgb(226,58,51)" fg:x="147699" fg:w="78"/><text x="70.3612%" y="351.50"></text></g><g><title>epoll_ctl (78 samples, 0.04%)</title><rect x="70.1112%" y="325" width="0.0370%" height="15" fill="rgb(250,119,16)" fg:x="147699" fg:w="78"/><text x="70.3612%" y="335.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="70.1112%" y="309" width="0.0370%" height="15" fill="rgb(223,128,53)" fg:x="147699" fg:w="78"/><text x="70.3612%" y="319.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="70.1112%" y="293" width="0.0370%" height="15" fill="rgb(251,199,15)" fg:x="147699" fg:w="78"/><text x="70.3612%" y="303.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="70.1112%" y="277" width="0.0370%" height="15" fill="rgb(235,168,42)" fg:x="147699" fg:w="78"/><text x="70.3612%" y="287.50"></text></g><g><title>[unknown] (78 samples, 0.04%)</title><rect x="70.1112%" y="261" width="0.0370%" height="15" fill="rgb(250,210,17)" fg:x="147699" fg:w="78"/><text x="70.3612%" y="271.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="70.1264%" y="245" width="0.0218%" height="15" fill="rgb(226,36,41)" fg:x="147731" fg:w="46"/><text x="70.3764%" y="255.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="70.1368%" y="229" width="0.0114%" height="15" fill="rgb(225,87,10)" fg:x="147753" fg:w="24"/><text x="70.3868%" y="239.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (188 samples, 0.09%)</title><rect x="70.0670%" y="405" width="0.0892%" height="15" fill="rgb(228,83,9)" fg:x="147606" fg:w="188"/><text x="70.3170%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (185 samples, 0.09%)</title><rect x="70.0685%" y="389" width="0.0878%" height="15" fill="rgb(225,16,36)" fg:x="147609" fg:w="185"/><text x="70.3185%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (265 samples, 0.13%)</title><rect x="70.0309%" y="437" width="0.1258%" height="15" fill="rgb(242,198,13)" fg:x="147530" fg:w="265"/><text x="70.2809%" y="447.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::accept::{{closure}} (265 samples, 0.13%)</title><rect x="70.0309%" y="421" width="0.1258%" height="15" fill="rgb(239,25,51)" fg:x="147530" fg:w="265"/><text x="70.2809%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (270 samples, 0.13%)</title><rect x="70.0300%" y="469" width="0.1282%" height="15" fill="rgb(239,28,37)" fg:x="147528" fg:w="270"/><text x="70.2800%" y="479.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::accept::{{closure}} (270 samples, 0.13%)</title><rect x="70.0300%" y="453" width="0.1282%" height="15" fill="rgb(234,70,17)" fg:x="147528" fg:w="270"/><text x="70.2800%" y="463.50"></text></g><g><title>zenoh_link_tcp::unicast::accept_task::{{closure}}::accept::{{closure}} (274 samples, 0.13%)</title><rect x="70.0286%" y="485" width="0.1301%" height="15" fill="rgb(231,215,53)" fg:x="147525" fg:w="274"/><text x="70.2786%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (276 samples, 0.13%)</title><rect x="70.0281%" y="501" width="0.1310%" height="15" fill="rgb(218,140,42)" fg:x="147524" fg:w="276"/><text x="70.2781%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (279 samples, 0.13%)</title><rect x="70.0276%" y="533" width="0.1324%" height="15" fill="rgb(233,227,45)" fg:x="147523" fg:w="279"/><text x="70.2776%" y="543.50"></text></g><g><title>&lt;async_std::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (279 samples, 0.13%)</title><rect x="70.0276%" y="517" width="0.1324%" height="15" fill="rgb(225,189,21)" fg:x="147523" fg:w="279"/><text x="70.2776%" y="527.50"></text></g><g><title>&lt;async_std::future::future::race::Race&lt;L,R&gt; as core::future::future::Future&gt;::poll (282 samples, 0.13%)</title><rect x="70.0267%" y="549" width="0.1339%" height="15" fill="rgb(237,176,54)" fg:x="147521" fg:w="282"/><text x="70.2767%" y="559.50"></text></g><g><title>&lt;flume::async::SendFut&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.01%)</title><rect x="70.1615%" y="549" width="0.0114%" height="15" fill="rgb(215,131,46)" fg:x="147805" fg:w="24"/><text x="70.4115%" y="559.50"></text></g><g><title>setsockopt (38 samples, 0.02%)</title><rect x="70.1852%" y="469" width="0.0180%" height="15" fill="rgb(218,95,20)" fg:x="147855" fg:w="38"/><text x="70.4352%" y="479.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="70.1862%" y="453" width="0.0171%" height="15" fill="rgb(208,198,12)" fg:x="147857" fg:w="36"/><text x="70.4362%" y="463.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="70.1862%" y="437" width="0.0171%" height="15" fill="rgb(239,107,50)" fg:x="147857" fg:w="36"/><text x="70.4362%" y="447.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="70.1866%" y="421" width="0.0166%" height="15" fill="rgb(240,217,37)" fg:x="147858" fg:w="35"/><text x="70.4366%" y="431.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="70.1871%" y="405" width="0.0161%" height="15" fill="rgb(242,197,49)" fg:x="147859" fg:w="34"/><text x="70.4371%" y="415.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="70.1895%" y="389" width="0.0138%" height="15" fill="rgb(219,171,17)" fg:x="147864" fg:w="29"/><text x="70.4395%" y="399.50"></text></g><g><title>std::net::tcp::TcpStream::set_nodelay (39 samples, 0.02%)</title><rect x="70.1852%" y="533" width="0.0185%" height="15" fill="rgb(209,81,40)" fg:x="147855" fg:w="39"/><text x="70.4352%" y="543.50"></text></g><g><title>std::sys_common::net::TcpStream::set_nodelay (39 samples, 0.02%)</title><rect x="70.1852%" y="517" width="0.0185%" height="15" fill="rgb(237,156,30)" fg:x="147855" fg:w="39"/><text x="70.4352%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::set_nodelay (39 samples, 0.02%)</title><rect x="70.1852%" y="501" width="0.0185%" height="15" fill="rgb(212,127,16)" fg:x="147855" fg:w="39"/><text x="70.4352%" y="511.50"></text></g><g><title>std::sys_common::net::setsockopt (39 samples, 0.02%)</title><rect x="70.1852%" y="485" width="0.0185%" height="15" fill="rgb(226,66,32)" fg:x="147855" fg:w="39"/><text x="70.4352%" y="495.50"></text></g><g><title>&lt;std::net::ip::Ipv4Addr as core::fmt::Display&gt;::fmt (27 samples, 0.01%)</title><rect x="70.2256%" y="421" width="0.0128%" height="15" fill="rgb(245,22,46)" fg:x="147940" fg:w="27"/><text x="70.4756%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (27 samples, 0.01%)</title><rect x="70.2256%" y="405" width="0.0128%" height="15" fill="rgb(210,112,21)" fg:x="147940" fg:w="27"/><text x="70.4756%" y="415.50"></text></g><g><title>core::fmt::write (27 samples, 0.01%)</title><rect x="70.2256%" y="389" width="0.0128%" height="15" fill="rgb(207,118,39)" fg:x="147940" fg:w="27"/><text x="70.4756%" y="399.50"></text></g><g><title>&lt;std::net::addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (60 samples, 0.03%)</title><rect x="70.2194%" y="469" width="0.0285%" height="15" fill="rgb(205,206,35)" fg:x="147927" fg:w="60"/><text x="70.4694%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (59 samples, 0.03%)</title><rect x="70.2199%" y="453" width="0.0280%" height="15" fill="rgb(222,120,2)" fg:x="147928" fg:w="59"/><text x="70.4699%" y="463.50"></text></g><g><title>core::fmt::write (59 samples, 0.03%)</title><rect x="70.2199%" y="437" width="0.0280%" height="15" fill="rgb(205,38,18)" fg:x="147928" fg:w="59"/><text x="70.4699%" y="447.50"></text></g><g><title>zenoh_protocol_core::locators::Locator::new (105 samples, 0.05%)</title><rect x="70.2037%" y="533" width="0.0498%" height="15" fill="rgb(226,61,2)" fg:x="147894" fg:w="105"/><text x="70.4537%" y="543.50"></text></g><g><title>alloc::fmt::format (93 samples, 0.04%)</title><rect x="70.2094%" y="517" width="0.0441%" height="15" fill="rgb(242,161,23)" fg:x="147906" fg:w="93"/><text x="70.4594%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (89 samples, 0.04%)</title><rect x="70.2113%" y="501" width="0.0422%" height="15" fill="rgb(213,13,52)" fg:x="147910" fg:w="89"/><text x="70.4613%" y="511.50"></text></g><g><title>core::fmt::write (88 samples, 0.04%)</title><rect x="70.2118%" y="485" width="0.0418%" height="15" fill="rgb(246,209,47)" fg:x="147911" fg:w="88"/><text x="70.4618%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (494 samples, 0.23%)</title><rect x="70.0253%" y="581" width="0.2345%" height="15" fill="rgb(214,41,3)" fg:x="147518" fg:w="494"/><text x="70.2753%" y="591.50"></text></g><g><title>zenoh_link_tcp::unicast::accept_task::{{closure}} (493 samples, 0.23%)</title><rect x="70.0257%" y="565" width="0.2340%" height="15" fill="rgb(236,119,38)" fg:x="147519" fg:w="493"/><text x="70.2757%" y="575.50"></text></g><g><title>zenoh_link_tcp::unicast::LinkUnicastTcp::new (162 samples, 0.08%)</title><rect x="70.1829%" y="549" width="0.0769%" height="15" fill="rgb(218,50,11)" fg:x="147850" fg:w="162"/><text x="70.4329%" y="559.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}}::{{closure}} (499 samples, 0.24%)</title><rect x="70.0234%" y="597" width="0.2369%" height="15" fill="rgb(228,38,11)" fg:x="147514" fg:w="499"/><text x="70.2734%" y="607.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::Edges&lt;E,Ty,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.04%)</title><rect x="70.3400%" y="533" width="0.0366%" height="15" fill="rgb(212,13,9)" fg:x="148181" fg:w="77"/><text x="70.5900%" y="543.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (38 samples, 0.02%)</title><rect x="70.3585%" y="517" width="0.0180%" height="15" fill="rgb(208,211,9)" fg:x="148220" fg:w="38"/><text x="70.6085%" y="527.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (38 samples, 0.02%)</title><rect x="70.3585%" y="501" width="0.0180%" height="15" fill="rgb(239,39,32)" fg:x="148220" fg:w="38"/><text x="70.6085%" y="511.50"></text></g><g><title>petgraph::algo::bellman_ford::bellman_ford (185 samples, 0.09%)</title><rect x="70.2944%" y="565" width="0.0878%" height="15" fill="rgb(254,179,26)" fg:x="148085" fg:w="185"/><text x="70.5444%" y="575.50"></text></g><g><title>petgraph::algo::bellman_ford::bellman_ford_initialize_relax (148 samples, 0.07%)</title><rect x="70.3120%" y="549" width="0.0703%" height="15" fill="rgb(249,165,28)" fg:x="148122" fg:w="148"/><text x="70.5620%" y="559.50"></text></g><g><title>petgraph::algo::has_path_connecting (91 samples, 0.04%)</title><rect x="70.3855%" y="437" width="0.0432%" height="15" fill="rgb(225,59,50)" fg:x="148277" fg:w="91"/><text x="70.6355%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (25 samples, 0.01%)</title><rect x="70.4762%" y="341" width="0.0119%" height="15" fill="rgb(209,122,5)" fg:x="148468" fg:w="25"/><text x="70.7262%" y="351.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::get_node::{{closure}} (25 samples, 0.01%)</title><rect x="70.4762%" y="325" width="0.0119%" height="15" fill="rgb(214,65,34)" fg:x="148468" fg:w="25"/><text x="70.7262%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (25 samples, 0.01%)</title><rect x="70.4762%" y="309" width="0.0119%" height="15" fill="rgb(249,183,32)" fg:x="148468" fg:w="25"/><text x="70.7262%" y="319.50"></text></g><g><title>&lt;&amp;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as petgraph::visit::IntoNeighbors&gt;::neighbors (36 samples, 0.02%)</title><rect x="70.4753%" y="421" width="0.0171%" height="15" fill="rgb(218,122,24)" fg:x="148466" fg:w="36"/><text x="70.7253%" y="431.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors (36 samples, 0.02%)</title><rect x="70.4753%" y="405" width="0.0171%" height="15" fill="rgb(224,109,18)" fg:x="148466" fg:w="36"/><text x="70.7253%" y="415.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors_directed (36 samples, 0.02%)</title><rect x="70.4753%" y="389" width="0.0171%" height="15" fill="rgb(210,68,50)" fg:x="148466" fg:w="36"/><text x="70.7253%" y="399.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors_undirected (36 samples, 0.02%)</title><rect x="70.4753%" y="373" width="0.0171%" height="15" fill="rgb(212,184,34)" fg:x="148466" fg:w="36"/><text x="70.7253%" y="383.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::get_node (34 samples, 0.02%)</title><rect x="70.4762%" y="357" width="0.0161%" height="15" fill="rgb(238,105,48)" fg:x="148468" fg:w="34"/><text x="70.7262%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (32 samples, 0.02%)</title><rect x="70.7686%" y="389" width="0.0152%" height="15" fill="rgb(222,134,54)" fg:x="149084" fg:w="32"/><text x="71.0186%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (32 samples, 0.02%)</title><rect x="70.7686%" y="373" width="0.0152%" height="15" fill="rgb(246,24,43)" fg:x="149084" fg:w="32"/><text x="71.0186%" y="383.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::is_visited (656 samples, 0.31%)</title><rect x="70.4923%" y="421" width="0.3114%" height="15" fill="rgb(227,169,22)" fg:x="148502" fg:w="656"/><text x="70.7423%" y="431.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (656 samples, 0.31%)</title><rect x="70.4923%" y="405" width="0.3114%" height="15" fill="rgb(253,152,4)" fg:x="148502" fg:w="656"/><text x="70.7423%" y="415.50"></text></g><g><title>fixedbitset::div_rem (32 samples, 0.02%)</title><rect x="70.7886%" y="389" width="0.0152%" height="15" fill="rgb(219,158,36)" fg:x="149126" fg:w="32"/><text x="71.0386%" y="399.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::visit (99 samples, 0.05%)</title><rect x="70.8037%" y="421" width="0.0470%" height="15" fill="rgb(251,128,40)" fg:x="149158" fg:w="99"/><text x="71.0537%" y="431.50"></text></g><g><title>fixedbitset::FixedBitSet::put (99 samples, 0.05%)</title><rect x="70.8037%" y="405" width="0.0470%" height="15" fill="rgb(254,101,39)" fg:x="149158" fg:w="99"/><text x="71.0537%" y="415.50"></text></g><g><title>&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt; as core::cmp::PartialEq&gt;::ne (49 samples, 0.02%)</title><rect x="71.0316%" y="405" width="0.0233%" height="15" fill="rgb(221,168,40)" fg:x="149638" fg:w="49"/><text x="71.2816%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::ne (49 samples, 0.02%)</title><rect x="71.0316%" y="389" width="0.0233%" height="15" fill="rgb(221,14,27)" fg:x="149638" fg:w="49"/><text x="71.2816%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (141 samples, 0.07%)</title><rect x="71.0549%" y="405" width="0.0669%" height="15" fill="rgb(207,36,43)" fg:x="149687" fg:w="141"/><text x="71.3049%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (141 samples, 0.07%)</title><rect x="71.0549%" y="389" width="0.0669%" height="15" fill="rgb(240,172,53)" fg:x="149687" fg:w="141"/><text x="71.3049%" y="399.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::Neighbors&lt;E,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (702 samples, 0.33%)</title><rect x="70.8507%" y="421" width="0.3332%" height="15" fill="rgb(241,138,43)" fg:x="149257" fg:w="702"/><text x="71.1007%" y="431.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (131 samples, 0.06%)</title><rect x="71.1218%" y="405" width="0.0622%" height="15" fill="rgb(227,78,19)" fg:x="149828" fg:w="131"/><text x="71.3718%" y="415.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (131 samples, 0.06%)</title><rect x="71.1218%" y="389" width="0.0622%" height="15" fill="rgb(215,127,44)" fg:x="149828" fg:w="131"/><text x="71.3718%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (50 samples, 0.02%)</title><rect x="71.1840%" y="421" width="0.0237%" height="15" fill="rgb(227,13,10)" fg:x="149959" fg:w="50"/><text x="71.4340%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.01%)</title><rect x="71.2699%" y="405" width="0.0104%" height="15" fill="rgb(249,177,6)" fg:x="150140" fg:w="22"/><text x="71.5199%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.01%)</title><rect x="71.2699%" y="389" width="0.0104%" height="15" fill="rgb(215,154,26)" fg:x="150140" fg:w="22"/><text x="71.5199%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.01%)</title><rect x="71.2699%" y="373" width="0.0104%" height="15" fill="rgb(250,168,20)" fg:x="150140" fg:w="22"/><text x="71.5199%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.01%)</title><rect x="71.2699%" y="357" width="0.0104%" height="15" fill="rgb(222,53,38)" fg:x="150140" fg:w="22"/><text x="71.5199%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.01%)</title><rect x="71.2699%" y="341" width="0.0104%" height="15" fill="rgb(245,154,5)" fg:x="150140" fg:w="22"/><text x="71.5199%" y="351.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.01%)</title><rect x="71.2699%" y="325" width="0.0104%" height="15" fill="rgb(214,89,50)" fg:x="150140" fg:w="22"/><text x="71.5199%" y="335.50"></text></g><g><title>realloc (22 samples, 0.01%)</title><rect x="71.2699%" y="309" width="0.0104%" height="15" fill="rgb(232,73,14)" fg:x="150140" fg:w="22"/><text x="71.5199%" y="319.50"></text></g><g><title>&lt;petgraph::visit::traversal::WalkerIter&lt;W,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,887 samples, 0.90%)</title><rect x="70.3855%" y="485" width="0.8957%" height="15" fill="rgb(230,101,20)" fg:x="148277" fg:w="1887"/><text x="70.6355%" y="495.50"></text></g><g><title>&lt;&amp;mut W as petgraph::visit::traversal::Walker&lt;C&gt;&gt;::walk_next (1,887 samples, 0.90%)</title><rect x="70.3855%" y="469" width="0.8957%" height="15" fill="rgb(208,56,28)" fg:x="148277" fg:w="1887"/><text x="70.6355%" y="479.50"></text></g><g><title>&lt;petgraph::visit::traversal::Dfs&lt;&lt;G as petgraph::visit::GraphBase&gt;::NodeId,&lt;G as petgraph::visit::Visitable&gt;::Map&gt; as petgraph::visit::traversal::Walker&lt;G&gt;&gt;::walk_next (1,887 samples, 0.90%)</title><rect x="70.3855%" y="453" width="0.8957%" height="15" fill="rgb(247,205,22)" fg:x="148277" fg:w="1887"/><text x="70.6355%" y="463.50"></text></g><g><title>petgraph::visit::traversal::Dfs&lt;N,VM&gt;::next (1,796 samples, 0.85%)</title><rect x="70.4287%" y="437" width="0.8525%" height="15" fill="rgb(252,109,51)" fg:x="148368" fg:w="1796"/><text x="70.6787%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (155 samples, 0.07%)</title><rect x="71.2077%" y="421" width="0.0736%" height="15" fill="rgb(220,40,24)" fg:x="150009" fg:w="155"/><text x="71.4577%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (1,900 samples, 0.90%)</title><rect x="70.3846%" y="517" width="0.9019%" height="15" fill="rgb(251,108,7)" fg:x="148275" fg:w="1900"/><text x="70.6346%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,900 samples, 0.90%)</title><rect x="70.3846%" y="501" width="0.9019%" height="15" fill="rgb(238,102,51)" fg:x="148275" fg:w="1900"/><text x="70.6346%" y="511.50"></text></g><g><title>petgraph::algo::has_path_connecting (1,915 samples, 0.91%)</title><rect x="70.3822%" y="565" width="0.9090%" height="15" fill="rgb(219,149,34)" fg:x="148270" fg:w="1915"/><text x="70.6322%" y="575.50"></text></g><g><title>petgraph::algo::with_dfs (1,911 samples, 0.91%)</title><rect x="70.3841%" y="549" width="0.9071%" height="15" fill="rgb(239,70,0)" fg:x="148274" fg:w="1911"/><text x="70.6341%" y="559.50"></text></g><g><title>petgraph::algo::has_path_connecting::{{closure}} (1,910 samples, 0.91%)</title><rect x="70.3846%" y="533" width="0.9067%" height="15" fill="rgb(246,214,23)" fg:x="148275" fg:w="1910"/><text x="70.6346%" y="543.50"></text></g><g><title>zenoh::net::routing::network::Network::compute_trees (2,157 samples, 1.02%)</title><rect x="70.2678%" y="581" width="1.0239%" height="15" fill="rgb(239,221,51)" fg:x="148029" fg:w="2157"/><text x="70.5178%" y="591.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (50 samples, 0.02%)</title><rect x="71.2931%" y="517" width="0.0237%" height="15" fill="rgb(254,62,14)" fg:x="150189" fg:w="50"/><text x="71.5431%" y="527.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (26 samples, 0.01%)</title><rect x="71.3045%" y="501" width="0.0123%" height="15" fill="rgb(253,57,33)" fg:x="150213" fg:w="26"/><text x="71.5545%" y="511.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (25 samples, 0.01%)</title><rect x="71.3169%" y="501" width="0.0119%" height="15" fill="rgb(229,34,6)" fg:x="150239" fg:w="25"/><text x="71.5669%" y="511.50"></text></g><g><title>zenoh::net::routing::pubsub::insert_faces_for_subs (56 samples, 0.03%)</title><rect x="71.3435%" y="453" width="0.0266%" height="15" fill="rgb(235,191,23)" fg:x="150295" fg:w="56"/><text x="71.5935%" y="463.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (87 samples, 0.04%)</title><rect x="71.3368%" y="469" width="0.0413%" height="15" fill="rgb(217,207,27)" fg:x="150281" fg:w="87"/><text x="71.5868%" y="479.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (105 samples, 0.05%)</title><rect x="71.3288%" y="485" width="0.0498%" height="15" fill="rgb(232,41,44)" fg:x="150264" fg:w="105"/><text x="71.5788%" y="495.50"></text></g><g><title>zenoh::net::routing::pubsub::insert_faces_for_subs (25 samples, 0.01%)</title><rect x="71.3881%" y="437" width="0.0119%" height="15" fill="rgb(221,188,19)" fg:x="150389" fg:w="25"/><text x="71.6381%" y="447.50"></text></g><g><title>zenoh::net::routing::pubsub::pubsub_tree_change (242 samples, 0.11%)</title><rect x="71.2917%" y="581" width="0.1149%" height="15" fill="rgb(245,180,45)" fg:x="150186" fg:w="242"/><text x="71.5417%" y="591.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (242 samples, 0.11%)</title><rect x="71.2917%" y="565" width="0.1149%" height="15" fill="rgb(250,220,42)" fg:x="150186" fg:w="242"/><text x="71.5417%" y="575.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (240 samples, 0.11%)</title><rect x="71.2927%" y="549" width="0.1139%" height="15" fill="rgb(234,16,34)" fg:x="150188" fg:w="240"/><text x="71.5427%" y="559.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (239 samples, 0.11%)</title><rect x="71.2931%" y="533" width="0.1135%" height="15" fill="rgb(233,217,23)" fg:x="150189" fg:w="239"/><text x="71.5431%" y="543.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (189 samples, 0.09%)</title><rect x="71.3169%" y="517" width="0.0897%" height="15" fill="rgb(209,22,46)" fg:x="150239" fg:w="189"/><text x="71.5669%" y="527.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (164 samples, 0.08%)</title><rect x="71.3288%" y="501" width="0.0778%" height="15" fill="rgb(213,101,18)" fg:x="150264" fg:w="164"/><text x="71.5788%" y="511.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (59 samples, 0.03%)</title><rect x="71.3786%" y="485" width="0.0280%" height="15" fill="rgb(215,179,52)" fg:x="150369" fg:w="59"/><text x="71.6286%" y="495.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (59 samples, 0.03%)</title><rect x="71.3786%" y="469" width="0.0280%" height="15" fill="rgb(223,50,25)" fg:x="150369" fg:w="59"/><text x="71.6286%" y="479.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (47 samples, 0.02%)</title><rect x="71.3843%" y="453" width="0.0223%" height="15" fill="rgb(224,51,44)" fg:x="150381" fg:w="47"/><text x="71.6343%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (27 samples, 0.01%)</title><rect x="71.4113%" y="437" width="0.0128%" height="15" fill="rgb(224,13,54)" fg:x="150438" fg:w="27"/><text x="71.6613%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt; (27 samples, 0.01%)</title><rect x="71.4113%" y="421" width="0.0128%" height="15" fill="rgb(219,58,47)" fg:x="150438" fg:w="27"/><text x="71.6613%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (40 samples, 0.02%)</title><rect x="71.4075%" y="501" width="0.0190%" height="15" fill="rgb(246,124,34)" fg:x="150430" fg:w="40"/><text x="71.6575%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;]&gt; (40 samples, 0.02%)</title><rect x="71.4075%" y="485" width="0.0190%" height="15" fill="rgb(245,109,25)" fg:x="150430" fg:w="40"/><text x="71.6575%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt; (40 samples, 0.02%)</title><rect x="71.4075%" y="469" width="0.0190%" height="15" fill="rgb(235,48,23)" fg:x="150430" fg:w="40"/><text x="71.6575%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="71.4075%" y="453" width="0.0190%" height="15" fill="rgb(229,203,36)" fg:x="150430" fg:w="40"/><text x="71.6575%" y="463.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (25 samples, 0.01%)</title><rect x="71.4569%" y="469" width="0.0119%" height="15" fill="rgb(234,180,9)" fg:x="150534" fg:w="25"/><text x="71.7069%" y="479.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (25 samples, 0.01%)</title><rect x="71.4569%" y="453" width="0.0119%" height="15" fill="rgb(228,98,45)" fg:x="150534" fg:w="25"/><text x="71.7069%" y="463.50"></text></g><g><title>zenoh::net::routing::router::Tables::get_face (22 samples, 0.01%)</title><rect x="71.4688%" y="469" width="0.0104%" height="15" fill="rgb(240,24,36)" fg:x="150559" fg:w="22"/><text x="71.7188%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (22 samples, 0.01%)</title><rect x="71.4688%" y="453" width="0.0104%" height="15" fill="rgb(227,154,19)" fg:x="150559" fg:w="22"/><text x="71.7188%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (22 samples, 0.01%)</title><rect x="71.4688%" y="437" width="0.0104%" height="15" fill="rgb(231,2,48)" fg:x="150559" fg:w="22"/><text x="71.7188%" y="447.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (79 samples, 0.04%)</title><rect x="71.4432%" y="485" width="0.0375%" height="15" fill="rgb(219,216,0)" fg:x="150505" fg:w="79"/><text x="71.6932%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (193 samples, 0.09%)</title><rect x="71.4071%" y="517" width="0.0916%" height="15" fill="rgb(251,88,0)" fg:x="150429" fg:w="193"/><text x="71.6571%" y="527.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (128 samples, 0.06%)</title><rect x="71.4379%" y="501" width="0.0608%" height="15" fill="rgb(242,45,45)" fg:x="150494" fg:w="128"/><text x="71.6879%" y="511.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (64 samples, 0.03%)</title><rect x="71.4987%" y="501" width="0.0304%" height="15" fill="rgb(218,149,45)" fg:x="150622" fg:w="64"/><text x="71.7487%" y="511.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (59 samples, 0.03%)</title><rect x="71.5011%" y="485" width="0.0280%" height="15" fill="rgb(247,194,10)" fg:x="150627" fg:w="59"/><text x="71.7511%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (28 samples, 0.01%)</title><rect x="71.5428%" y="453" width="0.0133%" height="15" fill="rgb(234,33,37)" fg:x="150715" fg:w="28"/><text x="71.7928%" y="463.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (44 samples, 0.02%)</title><rect x="71.5566%" y="453" width="0.0209%" height="15" fill="rgb(218,61,13)" fg:x="150744" fg:w="44"/><text x="71.8066%" y="463.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (36 samples, 0.02%)</title><rect x="71.5604%" y="437" width="0.0171%" height="15" fill="rgb(210,80,52)" fg:x="150752" fg:w="36"/><text x="71.8104%" y="447.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (26 samples, 0.01%)</title><rect x="71.5651%" y="421" width="0.0123%" height="15" fill="rgb(218,203,27)" fg:x="150762" fg:w="26"/><text x="71.8151%" y="431.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (147 samples, 0.07%)</title><rect x="71.5291%" y="485" width="0.0698%" height="15" fill="rgb(209,126,33)" fg:x="150686" fg:w="147"/><text x="71.7791%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (132 samples, 0.06%)</title><rect x="71.5362%" y="469" width="0.0627%" height="15" fill="rgb(234,173,41)" fg:x="150701" fg:w="132"/><text x="71.7862%" y="479.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (44 samples, 0.02%)</title><rect x="71.5780%" y="453" width="0.0209%" height="15" fill="rgb(228,166,9)" fg:x="150789" fg:w="44"/><text x="71.8280%" y="463.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (44 samples, 0.02%)</title><rect x="71.5780%" y="437" width="0.0209%" height="15" fill="rgb(208,124,43)" fg:x="150789" fg:w="44"/><text x="71.8280%" y="447.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (492 samples, 0.23%)</title><rect x="71.4071%" y="565" width="0.2335%" height="15" fill="rgb(212,154,38)" fg:x="150429" fg:w="492"/><text x="71.6571%" y="575.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (492 samples, 0.23%)</title><rect x="71.4071%" y="549" width="0.2335%" height="15" fill="rgb(246,179,35)" fg:x="150429" fg:w="492"/><text x="71.6571%" y="559.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (492 samples, 0.23%)</title><rect x="71.4071%" y="533" width="0.2335%" height="15" fill="rgb(251,3,50)" fg:x="150429" fg:w="492"/><text x="71.6571%" y="543.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (299 samples, 0.14%)</title><rect x="71.4987%" y="517" width="0.1419%" height="15" fill="rgb(219,96,8)" fg:x="150622" fg:w="299"/><text x="71.7487%" y="527.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (235 samples, 0.11%)</title><rect x="71.5291%" y="501" width="0.1116%" height="15" fill="rgb(251,216,33)" fg:x="150686" fg:w="235"/><text x="71.7791%" y="511.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (88 samples, 0.04%)</title><rect x="71.5988%" y="485" width="0.0418%" height="15" fill="rgb(243,145,29)" fg:x="150833" fg:w="88"/><text x="71.8488%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (88 samples, 0.04%)</title><rect x="71.5988%" y="469" width="0.0418%" height="15" fill="rgb(210,75,20)" fg:x="150833" fg:w="88"/><text x="71.8488%" y="479.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (74 samples, 0.04%)</title><rect x="71.6055%" y="453" width="0.0351%" height="15" fill="rgb(235,56,8)" fg:x="150847" fg:w="74"/><text x="71.8555%" y="463.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (26 samples, 0.01%)</title><rect x="71.6283%" y="437" width="0.0123%" height="15" fill="rgb(226,175,49)" fg:x="150895" fg:w="26"/><text x="71.8783%" y="447.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (26 samples, 0.01%)</title><rect x="71.6283%" y="421" width="0.0123%" height="15" fill="rgb(242,204,23)" fg:x="150895" fg:w="26"/><text x="71.8783%" y="431.50"></text></g><g><title>zenoh::net::routing::router::Tables::schedule_compute_trees::{{closure}} (2,918 samples, 1.39%)</title><rect x="70.2602%" y="597" width="1.3851%" height="15" fill="rgb(225,104,24)" fg:x="148013" fg:w="2918"/><text x="70.5102%" y="607.50"></text></g><g><title>zenoh::net::routing::queries::queries_tree_change (503 samples, 0.24%)</title><rect x="71.4066%" y="581" width="0.2388%" height="15" fill="rgb(253,34,1)" fg:x="150428" fg:w="503"/><text x="71.6566%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="71.6591%" y="549" width="0.0157%" height="15" fill="rgb(233,199,23)" fg:x="150960" fg:w="33"/><text x="71.9091%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="71.6591%" y="533" width="0.0157%" height="15" fill="rgb(247,7,51)" fg:x="150960" fg:w="33"/><text x="71.9091%" y="543.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::close::{{closure}} (33 samples, 0.02%)</title><rect x="71.6591%" y="517" width="0.0157%" height="15" fill="rgb(214,146,12)" fg:x="150960" fg:w="33"/><text x="71.9091%" y="527.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::shutdown (22 samples, 0.01%)</title><rect x="71.6644%" y="501" width="0.0104%" height="15" fill="rgb(234,181,43)" fg:x="150971" fg:w="22"/><text x="71.9144%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::shutdown (22 samples, 0.01%)</title><rect x="71.6644%" y="485" width="0.0104%" height="15" fill="rgb(239,148,6)" fg:x="150971" fg:w="22"/><text x="71.9144%" y="495.50"></text></g><g><title>shutdown (22 samples, 0.01%)</title><rect x="71.6644%" y="469" width="0.0104%" height="15" fill="rgb(206,151,17)" fg:x="150971" fg:w="22"/><text x="71.9144%" y="479.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="71.6644%" y="453" width="0.0104%" height="15" fill="rgb(213,215,10)" fg:x="150971" fg:w="22"/><text x="71.9144%" y="463.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="71.6644%" y="437" width="0.0104%" height="15" fill="rgb(215,220,44)" fg:x="150971" fg:w="22"/><text x="71.9144%" y="447.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="71.6644%" y="421" width="0.0104%" height="15" fill="rgb(245,205,37)" fg:x="150971" fg:w="22"/><text x="71.9144%" y="431.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="71.6644%" y="405" width="0.0104%" height="15" fill="rgb(245,130,43)" fg:x="150971" fg:w="22"/><text x="71.9144%" y="415.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (36 samples, 0.02%)</title><rect x="71.6776%" y="533" width="0.0171%" height="15" fill="rgb(231,227,38)" fg:x="150999" fg:w="36"/><text x="71.9276%" y="543.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (36 samples, 0.02%)</title><rect x="71.6776%" y="517" width="0.0171%" height="15" fill="rgb(233,185,4)" fg:x="150999" fg:w="36"/><text x="71.9276%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (36 samples, 0.02%)</title><rect x="71.6776%" y="501" width="0.0171%" height="15" fill="rgb(224,154,43)" fg:x="150999" fg:w="36"/><text x="71.9276%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.01%)</title><rect x="71.6843%" y="485" width="0.0104%" height="15" fill="rgb(235,156,15)" fg:x="151013" fg:w="22"/><text x="71.9343%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.01%)</title><rect x="71.6843%" y="469" width="0.0104%" height="15" fill="rgb(211,55,43)" fg:x="151013" fg:w="22"/><text x="71.9343%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.01%)</title><rect x="71.6843%" y="453" width="0.0104%" height="15" fill="rgb(247,149,40)" fg:x="151013" fg:w="22"/><text x="71.9343%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.01%)</title><rect x="71.6843%" y="437" width="0.0104%" height="15" fill="rgb(232,171,16)" fg:x="151013" fg:w="22"/><text x="71.9343%" y="447.50"></text></g><g><title>&lt;zenoh_link_commons::Link as core::convert::From&lt;&amp;zenoh_link_commons::LinkUnicast&gt;&gt;::from (45 samples, 0.02%)</title><rect x="71.6748%" y="549" width="0.0214%" height="15" fill="rgb(215,117,49)" fg:x="150993" fg:w="45"/><text x="71.9248%" y="559.50"></text></g><g><title>&lt;async_io::Async&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.01%)</title><rect x="71.7128%" y="373" width="0.0114%" height="15" fill="rgb(246,194,11)" fg:x="151073" fg:w="24"/><text x="71.9628%" y="383.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (43 samples, 0.02%)</title><rect x="71.7118%" y="405" width="0.0204%" height="15" fill="rgb(242,101,44)" fg:x="151071" fg:w="43"/><text x="71.9618%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Async&lt;std::net::tcp::TcpStream&gt;&gt; (41 samples, 0.02%)</title><rect x="71.7128%" y="389" width="0.0195%" height="15" fill="rgb(226,174,6)" fg:x="151073" fg:w="41"/><text x="71.9628%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::net::tcp::stream::TcpStream&gt; (46 samples, 0.02%)</title><rect x="71.7118%" y="453" width="0.0218%" height="15" fill="rgb(213,150,20)" fg:x="151071" fg:w="46"/><text x="71.9618%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::Async&lt;std::net::tcp::TcpStream&gt;&gt;&gt; (46 samples, 0.02%)</title><rect x="71.7118%" y="437" width="0.0218%" height="15" fill="rgb(222,124,42)" fg:x="151071" fg:w="46"/><text x="71.9618%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.02%)</title><rect x="71.7118%" y="421" width="0.0218%" height="15" fill="rgb(250,19,47)" fg:x="151071" fg:w="46"/><text x="71.9618%" y="431.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (60 samples, 0.03%)</title><rect x="71.7099%" y="501" width="0.0285%" height="15" fill="rgb(241,217,19)" fg:x="151067" fg:w="60"/><text x="71.9599%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::ops::function::Fn&lt;(&amp;str,&amp;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;,&amp;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;)&gt;+Output = core::result::Result&lt;core::option::Option&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Sync+core::marker::Send&gt; (57 samples, 0.03%)</title><rect x="71.7114%" y="485" width="0.0271%" height="15" fill="rgb(207,210,34)" fg:x="151070" fg:w="57"/><text x="71.9614%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_tcp::unicast::LinkUnicastTcp&gt; (57 samples, 0.03%)</title><rect x="71.7114%" y="469" width="0.0271%" height="15" fill="rgb(244,45,4)" fg:x="151070" fg:w="57"/><text x="71.9614%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (203 samples, 0.10%)</title><rect x="71.6468%" y="581" width="0.0964%" height="15" fill="rgb(252,134,50)" fg:x="150934" fg:w="203"/><text x="71.8968%" y="591.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}} (195 samples, 0.09%)</title><rect x="71.6506%" y="565" width="0.0926%" height="15" fill="rgb(238,74,2)" fg:x="150942" fg:w="195"/><text x="71.9006%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_commons::LinkUnicast&gt; (70 samples, 0.03%)</title><rect x="71.7099%" y="549" width="0.0332%" height="15" fill="rgb(226,58,46)" fg:x="151067" fg:w="70"/><text x="71.9599%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn zenoh_link_commons::LinkUnicastTrait&gt;&gt; (70 samples, 0.03%)</title><rect x="71.7099%" y="533" width="0.0332%" height="15" fill="rgb(232,83,35)" fg:x="151067" fg:w="70"/><text x="71.9599%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.03%)</title><rect x="71.7099%" y="517" width="0.0332%" height="15" fill="rgb(212,148,47)" fg:x="151067" fg:w="70"/><text x="71.9599%" y="527.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (27 samples, 0.01%)</title><rect x="71.7465%" y="549" width="0.0128%" height="15" fill="rgb(235,29,1)" fg:x="151144" fg:w="27"/><text x="71.9965%" y="559.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="71.7432%" y="581" width="0.0166%" height="15" fill="rgb(247,55,37)" fg:x="151137" fg:w="35"/><text x="71.9932%" y="591.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (34 samples, 0.02%)</title><rect x="71.7436%" y="565" width="0.0161%" height="15" fill="rgb(222,48,3)" fg:x="151138" fg:w="34"/><text x="71.9936%" y="575.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (3,675 samples, 1.74%)</title><rect x="70.0205%" y="709" width="1.7445%" height="15" fill="rgb(234,21,33)" fg:x="147508" fg:w="3675"/><text x="70.2705%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,675 samples, 1.74%)</title><rect x="70.0205%" y="693" width="1.7445%" height="15" fill="rgb(247,178,53)" fg:x="147508" fg:w="3675"/><text x="70.2705%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,675 samples, 1.74%)</title><rect x="70.0205%" y="677" width="1.7445%" height="15" fill="rgb(225,75,7)" fg:x="147508" fg:w="3675"/><text x="70.2705%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,674 samples, 1.74%)</title><rect x="70.0210%" y="661" width="1.7440%" height="15" fill="rgb(219,199,7)" fg:x="147509" fg:w="3674"/><text x="70.2710%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,672 samples, 1.74%)</title><rect x="70.0219%" y="645" width="1.7431%" height="15" fill="rgb(209,93,42)" fg:x="147511" fg:w="3672"/><text x="70.2719%" y="655.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (3,672 samples, 1.74%)</title><rect x="70.0219%" y="629" width="1.7431%" height="15" fill="rgb(240,175,17)" fg:x="147511" fg:w="3672"/><text x="70.2719%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,672 samples, 1.74%)</title><rect x="70.0219%" y="613" width="1.7431%" height="15" fill="rgb(232,106,7)" fg:x="147511" fg:w="3672"/><text x="70.2719%" y="623.50"></text></g><g><title>zenoh_transport::manager::TransportManager::new::{{closure}} (252 samples, 0.12%)</title><rect x="71.6454%" y="597" width="0.1196%" height="15" fill="rgb(242,106,43)" fg:x="150931" fg:w="252"/><text x="71.8954%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,698 samples, 1.76%)</title><rect x="70.0186%" y="741" width="1.7554%" height="15" fill="rgb(242,61,37)" fg:x="147504" fg:w="3698"/><text x="70.2686%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,697 samples, 1.75%)</title><rect x="70.0191%" y="725" width="1.7549%" height="15" fill="rgb(205,72,10)" fg:x="147505" fg:w="3697"/><text x="70.2691%" y="735.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (51 samples, 0.02%)</title><rect x="71.9150%" y="501" width="0.0242%" height="15" fill="rgb(214,184,36)" fg:x="151499" fg:w="51"/><text x="72.1650%" y="511.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="71.9150%" y="485" width="0.0242%" height="15" fill="rgb(206,107,18)" fg:x="151499" fg:w="51"/><text x="72.1650%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (31 samples, 0.01%)</title><rect x="71.9890%" y="405" width="0.0147%" height="15" fill="rgb(210,75,5)" fg:x="151655" fg:w="31"/><text x="72.2390%" y="415.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="72.0716%" y="213" width="0.0171%" height="15" fill="rgb(205,3,19)" fg:x="151829" fg:w="36"/><text x="72.3216%" y="223.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,469 samples, 1.17%)</title><rect x="72.0470%" y="293" width="1.1720%" height="15" fill="rgb(207,181,42)" fg:x="151777" fg:w="2469"/><text x="72.2970%" y="303.50"></text></g><g><title>std::sys_common::net::TcpStream::read (2,452 samples, 1.16%)</title><rect x="72.0550%" y="277" width="1.1639%" height="15" fill="rgb(229,179,43)" fg:x="151794" fg:w="2452"/><text x="72.3050%" y="287.50"></text></g><g><title>std::sys::unix::net::Socket::read (2,452 samples, 1.16%)</title><rect x="72.0550%" y="261" width="1.1639%" height="15" fill="rgb(246,95,30)" fg:x="151794" fg:w="2452"/><text x="72.3050%" y="271.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2,452 samples, 1.16%)</title><rect x="72.0550%" y="245" width="1.1639%" height="15" fill="rgb(234,144,45)" fg:x="151794" fg:w="2452"/><text x="72.3050%" y="255.50"></text></g><g><title>recv (2,451 samples, 1.16%)</title><rect x="72.0555%" y="229" width="1.1635%" height="15" fill="rgb(250,54,25)" fg:x="151795" fg:w="2451"/><text x="72.3055%" y="239.50"></text></g><g><title>[unknown] (2,381 samples, 1.13%)</title><rect x="72.0887%" y="213" width="1.1302%" height="15" fill="rgb(215,195,40)" fg:x="151865" fg:w="2381"/><text x="72.3387%" y="223.50"></text></g><g><title>[unknown] (2,309 samples, 1.10%)</title><rect x="72.1229%" y="197" width="1.0961%" height="15" fill="rgb(233,188,42)" fg:x="151937" fg:w="2309"/><text x="72.3729%" y="207.50"></text></g><g><title>[unknown] (2,294 samples, 1.09%)</title><rect x="72.1300%" y="181" width="1.0889%" height="15" fill="rgb(247,227,35)" fg:x="151952" fg:w="2294"/><text x="72.3800%" y="191.50"></text></g><g><title>[unknown] (2,231 samples, 1.06%)</title><rect x="72.1599%" y="165" width="1.0590%" height="15" fill="rgb(249,124,27)" fg:x="152015" fg:w="2231"/><text x="72.4099%" y="175.50"></text></g><g><title>[unknown] (2,008 samples, 0.95%)</title><rect x="72.2658%" y="149" width="0.9532%" height="15" fill="rgb(219,207,25)" fg:x="152238" fg:w="2008"/><text x="72.5158%" y="159.50"></text></g><g><title>[unknown] (1,879 samples, 0.89%)</title><rect x="72.3270%" y="133" width="0.8919%" height="15" fill="rgb(241,216,47)" fg:x="152367" fg:w="1879"/><text x="72.5770%" y="143.50"></text></g><g><title>[unknown] (1,586 samples, 0.75%)</title><rect x="72.4661%" y="117" width="0.7529%" height="15" fill="rgb(233,82,50)" fg:x="152660" fg:w="1586"/><text x="72.7161%" y="127.50"></text></g><g><title>[unknown] (1,306 samples, 0.62%)</title><rect x="72.5990%" y="101" width="0.6199%" height="15" fill="rgb(232,63,2)" fg:x="152940" fg:w="1306"/><text x="72.8490%" y="111.50"></text></g><g><title>[unknown] (1,201 samples, 0.57%)</title><rect x="72.6489%" y="85" width="0.5701%" height="15" fill="rgb(236,184,28)" fg:x="153045" fg:w="1201"/><text x="72.8989%" y="95.50"></text></g><g><title>[unknown] (786 samples, 0.37%)</title><rect x="72.8459%" y="69" width="0.3731%" height="15" fill="rgb(254,63,27)" fg:x="153460" fg:w="786"/><text x="73.0959%" y="79.50"></text></g><g><title>[unknown] (744 samples, 0.35%)</title><rect x="72.8658%" y="53" width="0.3532%" height="15" fill="rgb(253,106,28)" fg:x="153502" fg:w="744"/><text x="73.1158%" y="63.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="73.1843%" y="37" width="0.0347%" height="15" fill="rgb(225,141,39)" fg:x="154173" fg:w="73"/><text x="73.4343%" y="47.50"></text></g><g><title>async_io::Async&lt;T&gt;::get_ref (47 samples, 0.02%)</title><rect x="73.2190%" y="293" width="0.0223%" height="15" fill="rgb(222,157,20)" fg:x="154246" fg:w="47"/><text x="73.4690%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (47 samples, 0.02%)</title><rect x="73.2190%" y="277" width="0.0223%" height="15" fill="rgb(210,190,9)" fg:x="154246" fg:w="47"/><text x="73.4690%" y="287.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (2,578 samples, 1.22%)</title><rect x="72.0356%" y="309" width="1.2237%" height="15" fill="rgb(242,167,7)" fg:x="151753" fg:w="2578"/><text x="72.2856%" y="319.50"></text></g><g><title>async_io::Async&lt;T&gt;::poll_readable (38 samples, 0.02%)</title><rect x="73.2413%" y="293" width="0.0180%" height="15" fill="rgb(227,82,41)" fg:x="154293" fg:w="38"/><text x="73.4913%" y="303.50"></text></g><g><title>async_io::reactor::Source::poll_ready (37 samples, 0.02%)</title><rect x="73.2417%" y="277" width="0.0176%" height="15" fill="rgb(222,131,13)" fg:x="154294" fg:w="37"/><text x="73.4917%" y="287.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (2,634 samples, 1.25%)</title><rect x="72.0294%" y="341" width="1.2503%" height="15" fill="rgb(221,98,26)" fg:x="151740" fg:w="2634"/><text x="72.2794%" y="351.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (2,633 samples, 1.25%)</title><rect x="72.0299%" y="325" width="1.2499%" height="15" fill="rgb(251,63,52)" fg:x="151741" fg:w="2633"/><text x="72.2799%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (43 samples, 0.02%)</title><rect x="73.2593%" y="309" width="0.0204%" height="15" fill="rgb(246,25,43)" fg:x="154331" fg:w="43"/><text x="73.5093%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,689 samples, 1.28%)</title><rect x="72.0038%" y="389" width="1.2764%" height="15" fill="rgb(247,167,15)" fg:x="151686" fg:w="2689"/><text x="72.2538%" y="399.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (2,667 samples, 1.27%)</title><rect x="72.0142%" y="373" width="1.2660%" height="15" fill="rgb(240,104,42)" fg:x="151708" fg:w="2667"/><text x="72.2642%" y="383.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,641 samples, 1.25%)</title><rect x="72.0265%" y="357" width="1.2537%" height="15" fill="rgb(224,54,6)" fg:x="151734" fg:w="2641"/><text x="72.2765%" y="367.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,691 samples, 1.28%)</title><rect x="72.0038%" y="405" width="1.2774%" height="15" fill="rgb(244,108,35)" fg:x="151686" fg:w="2691"/><text x="72.2538%" y="415.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact (78 samples, 0.04%)</title><rect x="73.2811%" y="405" width="0.0370%" height="15" fill="rgb(216,154,2)" fg:x="154377" fg:w="78"/><text x="73.5311%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (64 samples, 0.03%)</title><rect x="73.2878%" y="389" width="0.0304%" height="15" fill="rgb(222,8,47)" fg:x="154391" fg:w="64"/><text x="73.5378%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (62 samples, 0.03%)</title><rect x="73.2887%" y="373" width="0.0294%" height="15" fill="rgb(252,93,1)" fg:x="154393" fg:w="62"/><text x="73.5387%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.03%)</title><rect x="73.2887%" y="357" width="0.0294%" height="15" fill="rgb(223,226,51)" fg:x="154393" fg:w="62"/><text x="73.5387%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (62 samples, 0.03%)</title><rect x="73.2887%" y="341" width="0.0294%" height="15" fill="rgb(206,147,9)" fg:x="154393" fg:w="62"/><text x="73.5387%" y="351.50"></text></g><g><title>alloc::alloc::alloc (62 samples, 0.03%)</title><rect x="73.2887%" y="325" width="0.0294%" height="15" fill="rgb(248,180,41)" fg:x="154393" fg:w="62"/><text x="73.5387%" y="335.50"></text></g><g><title>malloc (51 samples, 0.02%)</title><rect x="73.2940%" y="309" width="0.0242%" height="15" fill="rgb(209,47,50)" fg:x="154404" fg:w="51"/><text x="73.5440%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,863 samples, 1.36%)</title><rect x="71.9682%" y="437" width="1.3590%" height="15" fill="rgb(243,65,31)" fg:x="151611" fg:w="2863"/><text x="72.2182%" y="447.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}}::read::{{closure}} (2,842 samples, 1.35%)</title><rect x="71.9781%" y="421" width="1.3491%" height="15" fill="rgb(228,128,1)" fg:x="151632" fg:w="2842"/><text x="72.2281%" y="431.50"></text></g><g><title>&lt;async_std::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (2,878 samples, 1.37%)</title><rect x="71.9615%" y="453" width="1.3662%" height="15" fill="rgb(231,192,16)" fg:x="151597" fg:w="2878"/><text x="72.2115%" y="463.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,892 samples, 1.37%)</title><rect x="71.9615%" y="469" width="1.3728%" height="15" fill="rgb(224,26,40)" fg:x="151597" fg:w="2892"/><text x="72.2115%" y="479.50"></text></g><g><title>&lt;async_std::future::future::race::Race&lt;L,R&gt; as core::future::future::Future&gt;::poll (2,907 samples, 1.38%)</title><rect x="71.9549%" y="485" width="1.3799%" height="15" fill="rgb(214,192,17)" fg:x="151583" fg:w="2907"/><text x="72.2049%" y="495.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (2,928 samples, 1.39%)</title><rect x="71.9454%" y="501" width="1.3899%" height="15" fill="rgb(225,147,18)" fg:x="151563" fg:w="2928"/><text x="72.1954%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (30 samples, 0.01%)</title><rect x="73.3699%" y="485" width="0.0142%" height="15" fill="rgb(205,35,11)" fg:x="154564" fg:w="30"/><text x="73.6199%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (45 samples, 0.02%)</title><rect x="73.5394%" y="453" width="0.0214%" height="15" fill="rgb(242,40,42)" fg:x="154921" fg:w="45"/><text x="73.7894%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (43 samples, 0.02%)</title><rect x="73.5826%" y="437" width="0.0204%" height="15" fill="rgb(250,170,13)" fg:x="155012" fg:w="43"/><text x="73.8326%" y="447.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (42 samples, 0.02%)</title><rect x="73.6030%" y="437" width="0.0199%" height="15" fill="rgb(240,161,28)" fg:x="155055" fg:w="42"/><text x="73.8530%" y="447.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (42 samples, 0.02%)</title><rect x="73.6030%" y="421" width="0.0199%" height="15" fill="rgb(245,179,12)" fg:x="155055" fg:w="42"/><text x="73.8530%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (37 samples, 0.02%)</title><rect x="73.6054%" y="405" width="0.0176%" height="15" fill="rgb(250,92,32)" fg:x="155060" fg:w="37"/><text x="73.8554%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (33 samples, 0.02%)</title><rect x="73.6262%" y="437" width="0.0157%" height="15" fill="rgb(233,10,40)" fg:x="155104" fg:w="33"/><text x="73.8762%" y="447.50"></text></g><g><title>core::ptr::write (30 samples, 0.01%)</title><rect x="73.6277%" y="421" width="0.0142%" height="15" fill="rgb(217,98,1)" fg:x="155107" fg:w="30"/><text x="73.8777%" y="431.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="73.6742%" y="309" width="0.0228%" height="15" fill="rgb(238,202,7)" fg:x="155205" fg:w="48"/><text x="73.9242%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (113 samples, 0.05%)</title><rect x="73.6443%" y="373" width="0.0536%" height="15" fill="rgb(222,91,3)" fg:x="155142" fg:w="113"/><text x="73.8943%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (113 samples, 0.05%)</title><rect x="73.6443%" y="357" width="0.0536%" height="15" fill="rgb(211,170,49)" fg:x="155142" fg:w="113"/><text x="73.8943%" y="367.50"></text></g><g><title>alloc::alloc::alloc (111 samples, 0.05%)</title><rect x="73.6452%" y="341" width="0.0527%" height="15" fill="rgb(253,139,18)" fg:x="155144" fg:w="111"/><text x="73.8952%" y="351.50"></text></g><g><title>malloc (104 samples, 0.05%)</title><rect x="73.6486%" y="325" width="0.0494%" height="15" fill="rgb(222,4,43)" fg:x="155151" fg:w="104"/><text x="73.8986%" y="335.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (270 samples, 0.13%)</title><rect x="73.5702%" y="453" width="0.1282%" height="15" fill="rgb(207,205,12)" fg:x="154986" fg:w="270"/><text x="73.8202%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (119 samples, 0.06%)</title><rect x="73.6419%" y="437" width="0.0565%" height="15" fill="rgb(216,159,46)" fg:x="155137" fg:w="119"/><text x="73.8919%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (119 samples, 0.06%)</title><rect x="73.6419%" y="421" width="0.0565%" height="15" fill="rgb(236,115,1)" fg:x="155137" fg:w="119"/><text x="73.8919%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (119 samples, 0.06%)</title><rect x="73.6419%" y="405" width="0.0565%" height="15" fill="rgb(251,35,33)" fg:x="155137" fg:w="119"/><text x="73.8919%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (115 samples, 0.05%)</title><rect x="73.6438%" y="389" width="0.0546%" height="15" fill="rgb(248,62,51)" fg:x="155141" fg:w="115"/><text x="73.8938%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (593 samples, 0.28%)</title><rect x="73.4397%" y="469" width="0.2815%" height="15" fill="rgb(254,180,19)" fg:x="154711" fg:w="593"/><text x="73.6897%" y="479.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="73.7022%" y="453" width="0.0190%" height="15" fill="rgb(217,100,32)" fg:x="155264" fg:w="40"/><text x="73.9522%" y="463.50"></text></g><g><title>[libc.so.6] (56 samples, 0.03%)</title><rect x="73.7212%" y="469" width="0.0266%" height="15" fill="rgb(224,71,22)" fg:x="155304" fg:w="56"/><text x="73.9712%" y="479.50"></text></g><g><title>[libc.so.6] (84 samples, 0.04%)</title><rect x="73.8318%" y="309" width="0.0399%" height="15" fill="rgb(251,185,33)" fg:x="155537" fg:w="84"/><text x="74.0818%" y="319.50"></text></g><g><title>[libc.so.6] (230 samples, 0.11%)</title><rect x="73.7668%" y="341" width="0.1092%" height="15" fill="rgb(209,75,48)" fg:x="155400" fg:w="230"/><text x="74.0168%" y="351.50"></text></g><g><title>[libc.so.6] (224 samples, 0.11%)</title><rect x="73.7696%" y="325" width="0.1063%" height="15" fill="rgb(253,190,16)" fg:x="155406" fg:w="224"/><text x="74.0196%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (278 samples, 0.13%)</title><rect x="73.7525%" y="405" width="0.1320%" height="15" fill="rgb(226,140,1)" fg:x="155370" fg:w="278"/><text x="74.0025%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (278 samples, 0.13%)</title><rect x="73.7525%" y="389" width="0.1320%" height="15" fill="rgb(206,75,30)" fg:x="155370" fg:w="278"/><text x="74.0025%" y="399.50"></text></g><g><title>alloc::alloc::realloc (276 samples, 0.13%)</title><rect x="73.7535%" y="373" width="0.1310%" height="15" fill="rgb(231,208,37)" fg:x="155372" fg:w="276"/><text x="74.0035%" y="383.50"></text></g><g><title>realloc (272 samples, 0.13%)</title><rect x="73.7554%" y="357" width="0.1291%" height="15" fill="rgb(238,136,40)" fg:x="155376" fg:w="272"/><text x="74.0054%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (284 samples, 0.13%)</title><rect x="73.7506%" y="421" width="0.1348%" height="15" fill="rgb(247,137,17)" fg:x="155366" fg:w="284"/><text x="74.0006%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (295 samples, 0.14%)</title><rect x="73.7482%" y="453" width="0.1400%" height="15" fill="rgb(240,60,40)" fg:x="155361" fg:w="295"/><text x="73.9982%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (294 samples, 0.14%)</title><rect x="73.7487%" y="437" width="0.1396%" height="15" fill="rgb(236,68,50)" fg:x="155362" fg:w="294"/><text x="73.9987%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (386 samples, 0.18%)</title><rect x="73.7478%" y="469" width="0.1832%" height="15" fill="rgb(230,42,12)" fg:x="155360" fg:w="386"/><text x="73.9978%" y="479.50"></text></g><g><title>core::ptr::write (87 samples, 0.04%)</title><rect x="73.8897%" y="453" width="0.0413%" height="15" fill="rgb(219,16,16)" fg:x="155659" fg:w="87"/><text x="74.1397%" y="463.50"></text></g><g><title>[libc.so.6] (86 samples, 0.04%)</title><rect x="73.8902%" y="437" width="0.0408%" height="15" fill="rgb(220,38,35)" fg:x="155660" fg:w="86"/><text x="74.1402%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (55 samples, 0.03%)</title><rect x="73.9310%" y="469" width="0.0261%" height="15" fill="rgb(228,33,1)" fg:x="155746" fg:w="55"/><text x="74.1810%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (55 samples, 0.03%)</title><rect x="73.9310%" y="453" width="0.0261%" height="15" fill="rgb(241,46,31)" fg:x="155746" fg:w="55"/><text x="74.1810%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (55 samples, 0.03%)</title><rect x="73.9310%" y="437" width="0.0261%" height="15" fill="rgb(232,58,20)" fg:x="155746" fg:w="55"/><text x="74.1810%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (55 samples, 0.03%)</title><rect x="73.9310%" y="421" width="0.0261%" height="15" fill="rgb(206,228,53)" fg:x="155746" fg:w="55"/><text x="74.1810%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.02%)</title><rect x="73.9338%" y="405" width="0.0233%" height="15" fill="rgb(206,88,33)" fg:x="155752" fg:w="49"/><text x="74.1838%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.02%)</title><rect x="73.9338%" y="389" width="0.0233%" height="15" fill="rgb(238,69,7)" fg:x="155752" fg:w="49"/><text x="74.1838%" y="399.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.02%)</title><rect x="73.9338%" y="373" width="0.0233%" height="15" fill="rgb(250,21,46)" fg:x="155752" fg:w="49"/><text x="74.1838%" y="383.50"></text></g><g><title>malloc (38 samples, 0.02%)</title><rect x="73.9391%" y="357" width="0.0180%" height="15" fill="rgb(215,212,21)" fg:x="155763" fg:w="38"/><text x="74.1891%" y="367.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (1,213 samples, 0.58%)</title><rect x="73.3932%" y="485" width="0.5758%" height="15" fill="rgb(211,35,12)" fg:x="154613" fg:w="1213"/><text x="73.6432%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (1,315 samples, 0.62%)</title><rect x="73.3471%" y="501" width="0.6242%" height="15" fill="rgb(231,184,16)" fg:x="154516" fg:w="1315"/><text x="73.5971%" y="511.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (23 samples, 0.01%)</title><rect x="73.9713%" y="501" width="0.0109%" height="15" fill="rgb(242,140,15)" fg:x="155831" fg:w="23"/><text x="74.2213%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (23 samples, 0.01%)</title><rect x="73.9713%" y="485" width="0.0109%" height="15" fill="rgb(220,37,14)" fg:x="155831" fg:w="23"/><text x="74.2213%" y="495.50"></text></g><g><title>&lt;zenoh_sync::signal::Signal as core::clone::Clone&gt;::clone (40 samples, 0.02%)</title><rect x="73.9823%" y="501" width="0.0190%" height="15" fill="rgb(223,146,22)" fg:x="155854" fg:w="40"/><text x="74.2323%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.02%)</title><rect x="73.9823%" y="485" width="0.0190%" height="15" fill="rgb(216,132,15)" fg:x="155854" fg:w="40"/><text x="74.2323%" y="495.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="74.0013%" y="501" width="0.0133%" height="15" fill="rgb(248,83,5)" fg:x="155894" fg:w="28"/><text x="74.2513%" y="511.50"></text></g><g><title>[libc.so.6] (32 samples, 0.02%)</title><rect x="74.0221%" y="469" width="0.0152%" height="15" fill="rgb(231,206,48)" fg:x="155938" fg:w="32"/><text x="74.2721%" y="479.50"></text></g><g><title>[[vdso]] (62 samples, 0.03%)</title><rect x="74.0834%" y="357" width="0.0294%" height="15" fill="rgb(253,185,37)" fg:x="156067" fg:w="62"/><text x="74.3334%" y="367.50"></text></g><g><title>clock_gettime (126 samples, 0.06%)</title><rect x="74.0539%" y="389" width="0.0598%" height="15" fill="rgb(208,21,44)" fg:x="156005" fg:w="126"/><text x="74.3039%" y="399.50"></text></g><g><title>__vdso_clock_gettime (92 samples, 0.04%)</title><rect x="74.0701%" y="373" width="0.0437%" height="15" fill="rgb(236,125,4)" fg:x="156039" fg:w="92"/><text x="74.3201%" y="383.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (211 samples, 0.10%)</title><rect x="74.0145%" y="501" width="0.1002%" height="15" fill="rgb(226,134,25)" fg:x="155922" fg:w="211"/><text x="74.2645%" y="511.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (211 samples, 0.10%)</title><rect x="74.0145%" y="485" width="0.1002%" height="15" fill="rgb(250,201,12)" fg:x="155922" fg:w="211"/><text x="74.2645%" y="495.50"></text></g><g><title>async_std::utils::timer_after (163 samples, 0.08%)</title><rect x="74.0373%" y="469" width="0.0774%" height="15" fill="rgb(225,92,18)" fg:x="155970" fg:w="163"/><text x="74.2873%" y="479.50"></text></g><g><title>async_io::Timer::after (154 samples, 0.07%)</title><rect x="74.0416%" y="453" width="0.0731%" height="15" fill="rgb(227,35,22)" fg:x="155979" fg:w="154"/><text x="74.2916%" y="463.50"></text></g><g><title>std::time::Instant::now (135 samples, 0.06%)</title><rect x="74.0506%" y="437" width="0.0641%" height="15" fill="rgb(214,180,52)" fg:x="155998" fg:w="135"/><text x="74.3006%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (128 samples, 0.06%)</title><rect x="74.0539%" y="421" width="0.0608%" height="15" fill="rgb(233,55,38)" fg:x="156005" fg:w="128"/><text x="74.3039%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (128 samples, 0.06%)</title><rect x="74.0539%" y="405" width="0.0608%" height="15" fill="rgb(249,171,43)" fg:x="156005" fg:w="128"/><text x="74.3039%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;async_std::future::future::race::Race&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::link::rx_task_stream::{{closure}}::read::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::link::rx_task_stream::{{closure}}::stop::{{closure}}&gt;&gt;&gt;&gt; (23 samples, 0.01%)</title><rect x="74.1152%" y="501" width="0.0109%" height="15" fill="rgb(239,87,2)" fg:x="156134" fg:w="23"/><text x="74.3652%" y="511.50"></text></g><g><title>zenoh_buffers::traits::reader::Reader::can_read (71 samples, 0.03%)</title><rect x="74.1266%" y="501" width="0.0337%" height="15" fill="rgb(248,141,5)" fg:x="156158" fg:w="71"/><text x="74.3766%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::remaining (69 samples, 0.03%)</title><rect x="74.1275%" y="485" width="0.0328%" height="15" fill="rgb(238,33,42)" fg:x="156160" fg:w="69"/><text x="74.3775%" y="495.50"></text></g><g><title>core::mem::drop (31 samples, 0.01%)</title><rect x="74.1603%" y="469" width="0.0147%" height="15" fill="rgb(231,57,19)" fg:x="156229" fg:w="31"/><text x="74.4103%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;&gt; (31 samples, 0.01%)</title><rect x="74.1603%" y="453" width="0.0147%" height="15" fill="rgb(214,78,53)" fg:x="156229" fg:w="31"/><text x="74.4103%" y="463.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="74.1603%" y="437" width="0.0147%" height="15" fill="rgb(206,132,29)" fg:x="156229" fg:w="31"/><text x="74.4103%" y="447.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (54 samples, 0.03%)</title><rect x="74.1769%" y="437" width="0.0256%" height="15" fill="rgb(248,174,31)" fg:x="156264" fg:w="54"/><text x="74.4269%" y="447.50"></text></g><g><title>[libc.so.6] (74 samples, 0.04%)</title><rect x="74.2163%" y="405" width="0.0351%" height="15" fill="rgb(221,87,13)" fg:x="156347" fg:w="74"/><text x="74.4663%" y="415.50"></text></g><g><title>async_std::task::task::Task::new (195 samples, 0.09%)</title><rect x="74.2538%" y="389" width="0.0926%" height="15" fill="rgb(223,197,17)" fg:x="156426" fg:w="195"/><text x="74.5038%" y="399.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (195 samples, 0.09%)</title><rect x="74.2538%" y="373" width="0.0926%" height="15" fill="rgb(220,144,50)" fg:x="156426" fg:w="195"/><text x="74.5038%" y="383.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::new (34 samples, 0.02%)</title><rect x="74.3464%" y="389" width="0.0161%" height="15" fill="rgb(244,201,11)" fg:x="156621" fg:w="34"/><text x="74.5964%" y="399.50"></text></g><g><title>async_std::task::builder::Builder::build (238 samples, 0.11%)</title><rect x="74.2514%" y="405" width="0.1130%" height="15" fill="rgb(249,81,34)" fg:x="156421" fg:w="238"/><text x="74.5014%" y="415.50"></text></g><g><title>async_std::task::builder::Builder::blocking::NUM_NESTED_BLOCKING::__getit (28 samples, 0.01%)</title><rect x="74.3905%" y="373" width="0.0133%" height="15" fill="rgb(205,161,12)" fg:x="156714" fg:w="28"/><text x="74.6405%" y="383.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="74.4195%" y="325" width="0.0190%" height="15" fill="rgb(252,139,50)" fg:x="156775" fg:w="40"/><text x="74.6695%" y="335.50"></text></g><g><title>[libc.so.6] (32 samples, 0.02%)</title><rect x="74.4403%" y="309" width="0.0152%" height="15" fill="rgb(205,169,14)" fg:x="156819" fg:w="32"/><text x="74.6903%" y="319.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="74.4612%" y="261" width="0.0147%" height="15" fill="rgb(248,198,33)" fg:x="156863" fg:w="31"/><text x="74.7112%" y="271.50"></text></g><g><title>async_global_executor::executor::LOCAL_EXECUTOR::__getit (24 samples, 0.01%)</title><rect x="74.4954%" y="229" width="0.0114%" height="15" fill="rgb(236,23,21)" fg:x="156935" fg:w="24"/><text x="74.7454%" y="239.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="74.5077%" y="213" width="0.0228%" height="15" fill="rgb(231,13,38)" fg:x="156961" fg:w="48"/><text x="74.7577%" y="223.50"></text></g><g><title>async_global_executor::executor::block_on (154 samples, 0.07%)</title><rect x="74.4612%" y="277" width="0.0731%" height="15" fill="rgb(239,139,21)" fg:x="156863" fg:w="154"/><text x="74.7112%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (123 samples, 0.06%)</title><rect x="74.4759%" y="261" width="0.0584%" height="15" fill="rgb(222,164,45)" fg:x="156894" fg:w="123"/><text x="74.7259%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (87 samples, 0.04%)</title><rect x="74.4930%" y="245" width="0.0413%" height="15" fill="rgb(230,52,27)" fg:x="156930" fg:w="87"/><text x="74.7430%" y="255.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (58 samples, 0.03%)</title><rect x="74.5068%" y="229" width="0.0275%" height="15" fill="rgb(227,143,42)" fg:x="156959" fg:w="58"/><text x="74.7568%" y="239.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (163 samples, 0.08%)</title><rect x="74.4603%" y="293" width="0.0774%" height="15" fill="rgb(249,127,1)" fg:x="156861" fg:w="163"/><text x="74.7103%" y="303.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (276 samples, 0.13%)</title><rect x="74.4081%" y="357" width="0.1310%" height="15" fill="rgb(243,107,26)" fg:x="156751" fg:w="276"/><text x="74.6581%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (259 samples, 0.12%)</title><rect x="74.4161%" y="341" width="0.1229%" height="15" fill="rgb(225,7,45)" fg:x="156768" fg:w="259"/><text x="74.6661%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (212 samples, 0.10%)</title><rect x="74.4384%" y="325" width="0.1006%" height="15" fill="rgb(241,88,38)" fg:x="156815" fg:w="212"/><text x="74.6884%" y="335.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (166 samples, 0.08%)</title><rect x="74.4603%" y="309" width="0.0788%" height="15" fill="rgb(226,121,9)" fg:x="156861" fg:w="166"/><text x="74.7103%" y="319.50"></text></g><g><title>async_std::task::block_on::block_on (710 samples, 0.34%)</title><rect x="74.2025%" y="437" width="0.3370%" height="15" fill="rgb(253,60,29)" fg:x="156318" fg:w="710"/><text x="74.4525%" y="447.50"></text></g><g><title>async_std::task::builder::Builder::blocking (710 samples, 0.34%)</title><rect x="74.2025%" y="421" width="0.3370%" height="15" fill="rgb(244,181,39)" fg:x="156318" fg:w="710"/><text x="74.4525%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (369 samples, 0.18%)</title><rect x="74.3644%" y="405" width="0.1752%" height="15" fill="rgb(252,203,31)" fg:x="156659" fg:w="369"/><text x="74.6144%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (338 samples, 0.16%)</title><rect x="74.3791%" y="389" width="0.1604%" height="15" fill="rgb(224,120,8)" fg:x="156690" fg:w="338"/><text x="74.6291%" y="399.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (286 samples, 0.14%)</title><rect x="74.4038%" y="373" width="0.1358%" height="15" fill="rgb(205,171,54)" fg:x="156742" fg:w="286"/><text x="74.6538%" y="383.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (783 samples, 0.37%)</title><rect x="74.1750%" y="453" width="0.3717%" height="15" fill="rgb(235,89,11)" fg:x="156260" fg:w="783"/><text x="74.4250%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;&gt; (25 samples, 0.01%)</title><rect x="74.5467%" y="453" width="0.0119%" height="15" fill="rgb(212,180,28)" fg:x="157043" fg:w="25"/><text x="74.7967%" y="463.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="74.5467%" y="437" width="0.0119%" height="15" fill="rgb(247,84,49)" fg:x="157043" fg:w="25"/><text x="74.7967%" y="447.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (22 samples, 0.01%)</title><rect x="74.5481%" y="421" width="0.0104%" height="15" fill="rgb(236,187,52)" fg:x="157046" fg:w="22"/><text x="74.7981%" y="431.50"></text></g><g><title>alloc::rc::is_dangling (22 samples, 0.01%)</title><rect x="74.5481%" y="405" width="0.0104%" height="15" fill="rgb(227,24,15)" fg:x="157046" fg:w="22"/><text x="74.7981%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (840 samples, 0.40%)</title><rect x="74.1603%" y="485" width="0.3987%" height="15" fill="rgb(227,211,13)" fg:x="156229" fg:w="840"/><text x="74.4103%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (809 samples, 0.38%)</title><rect x="74.1750%" y="469" width="0.3840%" height="15" fill="rgb(245,52,14)" fg:x="156260" fg:w="809"/><text x="74.4250%" y="479.50"></text></g><g><title>cfree (32 samples, 0.02%)</title><rect x="74.5590%" y="485" width="0.0152%" height="15" fill="rgb(225,185,13)" fg:x="157069" fg:w="32"/><text x="74.8090%" y="495.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (896 samples, 0.43%)</title><rect x="74.1603%" y="501" width="0.4253%" height="15" fill="rgb(217,160,29)" fg:x="156229" fg:w="896"/><text x="74.4103%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::zbuf::ZBufInner&gt; (24 samples, 0.01%)</title><rect x="74.5742%" y="485" width="0.0114%" height="15" fill="rgb(216,115,53)" fg:x="157101" fg:w="24"/><text x="74.8242%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::zslice::ZSlice&gt; (23 samples, 0.01%)</title><rect x="74.5747%" y="469" width="0.0109%" height="15" fill="rgb(236,99,5)" fg:x="157102" fg:w="23"/><text x="74.8247%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_buffers::zslice::ZSliceBuffer&gt; (23 samples, 0.01%)</title><rect x="74.5747%" y="453" width="0.0109%" height="15" fill="rgb(222,60,38)" fg:x="157102" fg:w="23"/><text x="74.8247%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;&gt; (23 samples, 0.01%)</title><rect x="74.5747%" y="437" width="0.0109%" height="15" fill="rgb(212,82,22)" fg:x="157102" fg:w="23"/><text x="74.8247%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="74.5747%" y="421" width="0.0109%" height="15" fill="rgb(214,48,28)" fg:x="157102" fg:w="23"/><text x="74.8247%" y="431.50"></text></g><g><title>[libc.so.6] (100 samples, 0.05%)</title><rect x="74.5918%" y="357" width="0.0475%" height="15" fill="rgb(245,196,50)" fg:x="157138" fg:w="100"/><text x="74.8418%" y="367.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="74.6041%" y="341" width="0.0351%" height="15" fill="rgb(225,159,46)" fg:x="157164" fg:w="74"/><text x="74.8541%" y="351.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="74.6055%" y="325" width="0.0337%" height="15" fill="rgb(207,195,48)" fg:x="157167" fg:w="71"/><text x="74.8555%" y="335.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="74.6070%" y="309" width="0.0323%" height="15" fill="rgb(240,73,3)" fg:x="157170" fg:w="68"/><text x="74.8570%" y="319.50"></text></g><g><title>[unknown] (67 samples, 0.03%)</title><rect x="74.6074%" y="293" width="0.0318%" height="15" fill="rgb(245,57,23)" fg:x="157171" fg:w="67"/><text x="74.8574%" y="303.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="74.6108%" y="277" width="0.0285%" height="15" fill="rgb(240,75,18)" fg:x="157178" fg:w="60"/><text x="74.8608%" y="287.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="74.6193%" y="261" width="0.0199%" height="15" fill="rgb(238,168,12)" fg:x="157196" fg:w="42"/><text x="74.8693%" y="271.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="74.6212%" y="245" width="0.0180%" height="15" fill="rgb(226,20,40)" fg:x="157200" fg:w="38"/><text x="74.8712%" y="255.50"></text></g><g><title>[unknown] (34 samples, 0.02%)</title><rect x="74.6231%" y="229" width="0.0161%" height="15" fill="rgb(224,130,35)" fg:x="157204" fg:w="34"/><text x="74.8731%" y="239.50"></text></g><g><title>[libc.so.6] (44 samples, 0.02%)</title><rect x="74.6416%" y="325" width="0.0209%" height="15" fill="rgb(225,63,41)" fg:x="157243" fg:w="44"/><text x="74.8916%" y="335.50"></text></g><g><title>zenoh_collections::object_pool::RecyclingObjectPool&lt;T,F&gt;::new (159 samples, 0.08%)</title><rect x="74.5889%" y="501" width="0.0755%" height="15" fill="rgb(219,3,3)" fg:x="157132" fg:w="159"/><text x="74.8389%" y="511.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}}::{{closure}} (153 samples, 0.07%)</title><rect x="74.5918%" y="485" width="0.0726%" height="15" fill="rgb(218,157,4)" fg:x="157138" fg:w="153"/><text x="74.8418%" y="495.50"></text></g><g><title>alloc::vec::from_elem (153 samples, 0.07%)</title><rect x="74.5918%" y="469" width="0.0726%" height="15" fill="rgb(232,76,36)" fg:x="157138" fg:w="153"/><text x="74.8418%" y="479.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (153 samples, 0.07%)</title><rect x="74.5918%" y="453" width="0.0726%" height="15" fill="rgb(247,36,0)" fg:x="157138" fg:w="153"/><text x="74.8418%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (153 samples, 0.07%)</title><rect x="74.5918%" y="437" width="0.0726%" height="15" fill="rgb(205,2,34)" fg:x="157138" fg:w="153"/><text x="74.8418%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (153 samples, 0.07%)</title><rect x="74.5918%" y="421" width="0.0726%" height="15" fill="rgb(239,136,13)" fg:x="157138" fg:w="153"/><text x="74.8418%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (153 samples, 0.07%)</title><rect x="74.5918%" y="405" width="0.0726%" height="15" fill="rgb(253,122,12)" fg:x="157138" fg:w="153"/><text x="74.8418%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (153 samples, 0.07%)</title><rect x="74.5918%" y="389" width="0.0726%" height="15" fill="rgb(222,174,7)" fg:x="157138" fg:w="153"/><text x="74.8418%" y="399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (153 samples, 0.07%)</title><rect x="74.5918%" y="373" width="0.0726%" height="15" fill="rgb(208,191,42)" fg:x="157138" fg:w="153"/><text x="74.8418%" y="383.50"></text></g><g><title>__libc_calloc (53 samples, 0.03%)</title><rect x="74.6392%" y="357" width="0.0252%" height="15" fill="rgb(237,212,15)" fg:x="157238" fg:w="53"/><text x="74.8892%" y="367.50"></text></g><g><title>[libc.so.6] (52 samples, 0.02%)</title><rect x="74.6397%" y="341" width="0.0247%" height="15" fill="rgb(215,65,20)" fg:x="157239" fg:w="52"/><text x="74.8897%" y="351.50"></text></g><g><title>zenoh_collections::object_pool::RecyclingObjectPool&lt;T,F&gt;::try_take (71 samples, 0.03%)</title><rect x="74.6644%" y="501" width="0.0337%" height="15" fill="rgb(232,103,11)" fg:x="157291" fg:w="71"/><text x="74.9144%" y="511.50"></text></g><g><title>zenoh_collections::lifo_queue::LifoQueue&lt;T&gt;::try_pull (40 samples, 0.02%)</title><rect x="74.6791%" y="485" width="0.0190%" height="15" fill="rgb(235,148,18)" fg:x="157322" fg:w="40"/><text x="74.9291%" y="495.50"></text></g><g><title>zenoh_sync::signal::Signal::is_triggered (72 samples, 0.03%)</title><rect x="74.6981%" y="501" width="0.0342%" height="15" fill="rgb(240,173,7)" fg:x="157362" fg:w="72"/><text x="74.9481%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (60 samples, 0.03%)</title><rect x="74.7038%" y="485" width="0.0285%" height="15" fill="rgb(228,182,25)" fg:x="157374" fg:w="60"/><text x="74.9538%" y="495.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (29 samples, 0.01%)</title><rect x="74.7835%" y="485" width="0.0138%" height="15" fill="rgb(247,3,52)" fg:x="157542" fg:w="29"/><text x="75.0335%" y="495.50"></text></g><g><title>[libc.so.6] (58 samples, 0.03%)</title><rect x="74.8543%" y="469" width="0.0275%" height="15" fill="rgb(226,155,8)" fg:x="157691" fg:w="58"/><text x="75.1043%" y="479.50"></text></g><g><title>[libc.so.6] (41 samples, 0.02%)</title><rect x="74.9122%" y="373" width="0.0195%" height="15" fill="rgb(243,195,38)" fg:x="157813" fg:w="41"/><text x="75.1622%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (96 samples, 0.05%)</title><rect x="74.8870%" y="421" width="0.0456%" height="15" fill="rgb(254,181,33)" fg:x="157760" fg:w="96"/><text x="75.1370%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (96 samples, 0.05%)</title><rect x="74.8870%" y="405" width="0.0456%" height="15" fill="rgb(232,98,23)" fg:x="157760" fg:w="96"/><text x="75.1370%" y="415.50"></text></g><g><title>cfree (90 samples, 0.04%)</title><rect x="74.8899%" y="389" width="0.0427%" height="15" fill="rgb(205,23,10)" fg:x="157766" fg:w="90"/><text x="75.1399%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol::proto::msg::ZenohMessage&gt;&gt; (112 samples, 0.05%)</title><rect x="74.8818%" y="469" width="0.0532%" height="15" fill="rgb(212,124,38)" fg:x="157749" fg:w="112"/><text x="75.1318%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol::proto::msg::ZenohMessage&gt;&gt; (101 samples, 0.05%)</title><rect x="74.8870%" y="453" width="0.0479%" height="15" fill="rgb(228,207,2)" fg:x="157760" fg:w="101"/><text x="75.1370%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.05%)</title><rect x="74.8870%" y="437" width="0.0479%" height="15" fill="rgb(215,120,22)" fg:x="157760" fg:w="101"/><text x="75.1370%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;zenoh_protocol::proto::msg::ZenohMessage&gt;&gt; (30 samples, 0.01%)</title><rect x="74.9350%" y="469" width="0.0142%" height="15" fill="rgb(251,172,33)" fg:x="157861" fg:w="30"/><text x="75.1850%" y="479.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="74.9350%" y="453" width="0.0142%" height="15" fill="rgb(250,83,2)" fg:x="157861" fg:w="30"/><text x="75.1850%" y="463.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.01%)</title><rect x="74.9492%" y="453" width="0.0114%" height="15" fill="rgb(210,132,53)" fg:x="157891" fg:w="24"/><text x="75.1992%" y="463.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.01%)</title><rect x="74.9502%" y="437" width="0.0104%" height="15" fill="rgb(221,208,36)" fg:x="157893" fg:w="22"/><text x="75.2002%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (22 samples, 0.01%)</title><rect x="74.9502%" y="421" width="0.0104%" height="15" fill="rgb(205,192,46)" fg:x="157893" fg:w="22"/><text x="75.2002%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::conduit::TransportChannelRx&gt;&gt; (26 samples, 0.01%)</title><rect x="74.9492%" y="469" width="0.0123%" height="15" fill="rgb(223,163,14)" fg:x="157891" fg:w="26"/><text x="75.1992%" y="479.50"></text></g><g><title>zenoh_transport::common::seq_num::SeqNum::precedes (27 samples, 0.01%)</title><rect x="74.9616%" y="469" width="0.0128%" height="15" fill="rgb(218,41,28)" fg:x="157917" fg:w="27"/><text x="75.2116%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (87 samples, 0.04%)</title><rect x="75.0005%" y="453" width="0.0413%" height="15" fill="rgb(235,104,10)" fg:x="157999" fg:w="87"/><text x="75.2505%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (87 samples, 0.04%)</title><rect x="75.0005%" y="437" width="0.0413%" height="15" fill="rgb(246,17,4)" fg:x="157999" fg:w="87"/><text x="75.2505%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (87 samples, 0.04%)</title><rect x="75.0005%" y="421" width="0.0413%" height="15" fill="rgb(240,7,16)" fg:x="157999" fg:w="87"/><text x="75.2505%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.01%)</title><rect x="75.0475%" y="453" width="0.0142%" height="15" fill="rgb(213,160,23)" fg:x="158098" fg:w="30"/><text x="75.2975%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.01%)</title><rect x="75.0479%" y="437" width="0.0138%" height="15" fill="rgb(251,179,49)" fg:x="158099" fg:w="29"/><text x="75.2979%" y="447.50"></text></g><g><title>[libc.so.6] (69 samples, 0.03%)</title><rect x="75.0726%" y="453" width="0.0328%" height="15" fill="rgb(247,198,10)" fg:x="158151" fg:w="69"/><text x="75.3226%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (35 samples, 0.02%)</title><rect x="75.1334%" y="389" width="0.0166%" height="15" fill="rgb(220,65,29)" fg:x="158279" fg:w="35"/><text x="75.3834%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (35 samples, 0.02%)</title><rect x="75.1334%" y="373" width="0.0166%" height="15" fill="rgb(237,171,28)" fg:x="158279" fg:w="35"/><text x="75.3834%" y="383.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::try_read (63 samples, 0.03%)</title><rect x="75.1239%" y="453" width="0.0299%" height="15" fill="rgb(228,44,26)" fg:x="158259" fg:w="63"/><text x="75.3739%" y="463.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::try_read (56 samples, 0.03%)</title><rect x="75.1272%" y="437" width="0.0266%" height="15" fill="rgb(216,210,27)" fg:x="158266" fg:w="56"/><text x="75.3772%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::try_read (56 samples, 0.03%)</title><rect x="75.1272%" y="421" width="0.0266%" height="15" fill="rgb(252,10,17)" fg:x="158266" fg:w="56"/><text x="75.3772%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_update (56 samples, 0.03%)</title><rect x="75.1272%" y="405" width="0.0266%" height="15" fill="rgb(214,172,30)" fg:x="158266" fg:w="56"/><text x="75.3772%" y="415.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (760 samples, 0.36%)</title><rect x="74.7978%" y="485" width="0.3608%" height="15" fill="rgb(253,130,48)" fg:x="157572" fg:w="760"/><text x="75.0478%" y="495.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (387 samples, 0.18%)</title><rect x="74.9748%" y="469" width="0.1837%" height="15" fill="rgb(226,99,43)" fg:x="157945" fg:w="387"/><text x="75.2248%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,849 samples, 3.25%)</title><rect x="71.9079%" y="565" width="3.2511%" height="15" fill="rgb(239,111,26)" fg:x="151484" fg:w="6849"/><text x="72.1579%" y="575.50">&lt;co..</text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (6,849 samples, 3.25%)</title><rect x="71.9079%" y="549" width="3.2511%" height="15" fill="rgb(240,27,53)" fg:x="151484" fg:w="6849"/><text x="72.1579%" y="559.50">zen..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,849 samples, 3.25%)</title><rect x="71.9079%" y="533" width="3.2511%" height="15" fill="rgb(254,163,12)" fg:x="151484" fg:w="6849"/><text x="72.1579%" y="543.50">&lt;co..</text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (6,847 samples, 3.25%)</title><rect x="71.9088%" y="517" width="3.2502%" height="15" fill="rgb(225,51,48)" fg:x="151486" fg:w="6847"/><text x="72.1588%" y="527.50">zen..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (899 samples, 0.43%)</title><rect x="74.7323%" y="501" width="0.4267%" height="15" fill="rgb(205,19,32)" fg:x="157434" fg:w="899"/><text x="74.9823%" y="511.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (6,855 samples, 3.25%)</title><rect x="71.9060%" y="581" width="3.2540%" height="15" fill="rgb(218,119,26)" fg:x="151480" fg:w="6855"/><text x="72.1560%" y="591.50">zen..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.02%)</title><rect x="75.1856%" y="485" width="0.0176%" height="15" fill="rgb(231,173,33)" fg:x="158389" fg:w="37"/><text x="75.4356%" y="495.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (31 samples, 0.01%)</title><rect x="75.1885%" y="469" width="0.0147%" height="15" fill="rgb(241,100,29)" fg:x="158395" fg:w="31"/><text x="75.4385%" y="479.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (26 samples, 0.01%)</title><rect x="75.2074%" y="437" width="0.0123%" height="15" fill="rgb(250,194,34)" fg:x="158435" fg:w="26"/><text x="75.4574%" y="447.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (26 samples, 0.01%)</title><rect x="75.2074%" y="421" width="0.0123%" height="15" fill="rgb(215,23,50)" fg:x="158435" fg:w="26"/><text x="75.4574%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (26 samples, 0.01%)</title><rect x="75.2074%" y="405" width="0.0123%" height="15" fill="rgb(206,49,37)" fg:x="158435" fg:w="26"/><text x="75.4574%" y="415.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (26 samples, 0.01%)</title><rect x="75.2074%" y="389" width="0.0123%" height="15" fill="rgb(247,39,21)" fg:x="158435" fg:w="26"/><text x="75.4574%" y="399.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="75.2074%" y="373" width="0.0123%" height="15" fill="rgb(209,220,15)" fg:x="158435" fg:w="26"/><text x="75.4574%" y="383.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="75.2079%" y="357" width="0.0119%" height="15" fill="rgb(206,41,33)" fg:x="158436" fg:w="25"/><text x="75.4579%" y="367.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="75.2084%" y="341" width="0.0114%" height="15" fill="rgb(221,225,45)" fg:x="158437" fg:w="24"/><text x="75.4584%" y="351.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="75.2084%" y="325" width="0.0114%" height="15" fill="rgb(216,27,18)" fg:x="158437" fg:w="24"/><text x="75.4584%" y="335.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (80 samples, 0.04%)</title><rect x="75.2032%" y="485" width="0.0380%" height="15" fill="rgb(250,193,34)" fg:x="158426" fg:w="80"/><text x="75.4532%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (80 samples, 0.04%)</title><rect x="75.2032%" y="469" width="0.0380%" height="15" fill="rgb(227,215,20)" fg:x="158426" fg:w="80"/><text x="75.4532%" y="479.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (76 samples, 0.04%)</title><rect x="75.2051%" y="453" width="0.0361%" height="15" fill="rgb(242,211,27)" fg:x="158430" fg:w="76"/><text x="75.4551%" y="463.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (226 samples, 0.11%)</title><rect x="75.1785%" y="501" width="0.1073%" height="15" fill="rgb(229,190,30)" fg:x="158374" fg:w="226"/><text x="75.4285%" y="511.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (44 samples, 0.02%)</title><rect x="75.2953%" y="501" width="0.0209%" height="15" fill="rgb(253,31,29)" fg:x="158620" fg:w="44"/><text x="75.5453%" y="511.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (40 samples, 0.02%)</title><rect x="75.3195%" y="485" width="0.0190%" height="15" fill="rgb(229,177,52)" fg:x="158671" fg:w="40"/><text x="75.5695%" y="495.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (33 samples, 0.02%)</title><rect x="75.3228%" y="469" width="0.0157%" height="15" fill="rgb(226,88,8)" fg:x="158678" fg:w="33"/><text x="75.5728%" y="479.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (77 samples, 0.04%)</title><rect x="75.3180%" y="501" width="0.0366%" height="15" fill="rgb(214,55,27)" fg:x="158668" fg:w="77"/><text x="75.5680%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (399 samples, 0.19%)</title><rect x="75.1766%" y="517" width="0.1894%" height="15" fill="rgb(233,202,5)" fg:x="158370" fg:w="399"/><text x="75.4266%" y="527.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (426 samples, 0.20%)</title><rect x="75.1685%" y="565" width="0.2022%" height="15" fill="rgb(251,49,30)" fg:x="158353" fg:w="426"/><text x="75.4185%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (424 samples, 0.20%)</title><rect x="75.1695%" y="549" width="0.2013%" height="15" fill="rgb(235,18,52)" fg:x="158355" fg:w="424"/><text x="75.4195%" y="559.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (423 samples, 0.20%)</title><rect x="75.1699%" y="533" width="0.2008%" height="15" fill="rgb(250,111,51)" fg:x="158356" fg:w="423"/><text x="75.4199%" y="543.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (498 samples, 0.24%)</title><rect x="75.1609%" y="581" width="0.2364%" height="15" fill="rgb(218,13,25)" fg:x="158337" fg:w="498"/><text x="75.4109%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,361 samples, 3.49%)</title><rect x="71.9041%" y="597" width="3.4942%" height="15" fill="rgb(248,96,7)" fg:x="151476" fg:w="7361"/><text x="72.1541%" y="607.50">&lt;co..</text></g><g><title>core::cell::Cell&lt;T&gt;::replace (57 samples, 0.03%)</title><rect x="75.4272%" y="549" width="0.0271%" height="15" fill="rgb(217,31,15)" fg:x="158898" fg:w="57"/><text x="75.6772%" y="559.50"></text></g><g><title>core::mem::replace (57 samples, 0.03%)</title><rect x="75.4272%" y="533" width="0.0271%" height="15" fill="rgb(228,59,49)" fg:x="158898" fg:w="57"/><text x="75.6772%" y="543.50"></text></g><g><title>core::ptr::read (57 samples, 0.03%)</title><rect x="75.4272%" y="517" width="0.0271%" height="15" fill="rgb(210,152,38)" fg:x="158898" fg:w="57"/><text x="75.6772%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (157 samples, 0.07%)</title><rect x="75.4158%" y="565" width="0.0745%" height="15" fill="rgb(206,71,11)" fg:x="158874" fg:w="157"/><text x="75.6658%" y="575.50"></text></g><g><title>event_listener::Inner::lock (61 samples, 0.03%)</title><rect x="75.4614%" y="549" width="0.0290%" height="15" fill="rgb(244,199,5)" fg:x="158970" fg:w="61"/><text x="75.7114%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (61 samples, 0.03%)</title><rect x="75.4614%" y="533" width="0.0290%" height="15" fill="rgb(253,49,1)" fg:x="158970" fg:w="61"/><text x="75.7114%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (61 samples, 0.03%)</title><rect x="75.4614%" y="517" width="0.0290%" height="15" fill="rgb(225,206,40)" fg:x="158970" fg:w="61"/><text x="75.7114%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (61 samples, 0.03%)</title><rect x="75.4614%" y="501" width="0.0290%" height="15" fill="rgb(243,116,47)" fg:x="158970" fg:w="61"/><text x="75.7114%" y="511.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (34 samples, 0.02%)</title><rect x="75.4904%" y="565" width="0.0161%" height="15" fill="rgb(219,225,16)" fg:x="159031" fg:w="34"/><text x="75.7404%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (34 samples, 0.02%)</title><rect x="75.4904%" y="549" width="0.0161%" height="15" fill="rgb(233,29,47)" fg:x="159031" fg:w="34"/><text x="75.7404%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (22 samples, 0.01%)</title><rect x="75.5065%" y="565" width="0.0104%" height="15" fill="rgb(250,179,18)" fg:x="159065" fg:w="22"/><text x="75.7565%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.02%)</title><rect x="75.5222%" y="549" width="0.0171%" height="15" fill="rgb(215,176,6)" fg:x="159098" fg:w="36"/><text x="75.7722%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (40 samples, 0.02%)</title><rect x="75.5516%" y="533" width="0.0190%" height="15" fill="rgb(214,117,39)" fg:x="159160" fg:w="40"/><text x="75.8016%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (36 samples, 0.02%)</title><rect x="75.5535%" y="517" width="0.0171%" height="15" fill="rgb(247,183,36)" fg:x="159164" fg:w="36"/><text x="75.8035%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.02%)</title><rect x="75.5535%" y="501" width="0.0171%" height="15" fill="rgb(237,200,3)" fg:x="159164" fg:w="36"/><text x="75.8035%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.02%)</title><rect x="75.5535%" y="485" width="0.0171%" height="15" fill="rgb(212,220,24)" fg:x="159164" fg:w="36"/><text x="75.8035%" y="495.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.02%)</title><rect x="75.5535%" y="469" width="0.0171%" height="15" fill="rgb(245,216,20)" fg:x="159164" fg:w="36"/><text x="75.8035%" y="479.50"></text></g><g><title>malloc (33 samples, 0.02%)</title><rect x="75.5549%" y="453" width="0.0157%" height="15" fill="rgb(219,124,7)" fg:x="159167" fg:w="33"/><text x="75.8049%" y="463.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (359 samples, 0.17%)</title><rect x="75.4016%" y="581" width="0.1704%" height="15" fill="rgb(227,167,8)" fg:x="158844" fg:w="359"/><text x="75.6516%" y="591.50"></text></g><g><title>event_listener::Event::listen (116 samples, 0.06%)</title><rect x="75.5169%" y="565" width="0.0551%" height="15" fill="rgb(241,37,2)" fg:x="159087" fg:w="116"/><text x="75.7669%" y="575.50"></text></g><g><title>event_listener::List::insert (46 samples, 0.02%)</title><rect x="75.5502%" y="549" width="0.0218%" height="15" fill="rgb(238,134,33)" fg:x="159157" fg:w="46"/><text x="75.8002%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::notify (31 samples, 0.01%)</title><rect x="75.6698%" y="421" width="0.0147%" height="15" fill="rgb(248,48,27)" fg:x="159409" fg:w="31"/><text x="75.9198%" y="431.50"></text></g><g><title>polling::Poller::notify (31 samples, 0.01%)</title><rect x="75.6698%" y="405" width="0.0147%" height="15" fill="rgb(212,14,16)" fg:x="159409" fg:w="31"/><text x="75.9198%" y="415.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (80 samples, 0.04%)</title><rect x="75.6859%" y="421" width="0.0380%" height="15" fill="rgb(217,205,37)" fg:x="159443" fg:w="80"/><text x="75.9359%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (75 samples, 0.04%)</title><rect x="75.6883%" y="405" width="0.0356%" height="15" fill="rgb(233,185,47)" fg:x="159448" fg:w="75"/><text x="75.9383%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (133 samples, 0.06%)</title><rect x="75.6688%" y="437" width="0.0631%" height="15" fill="rgb(244,88,8)" fg:x="159407" fg:w="133"/><text x="75.9188%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (122 samples, 0.06%)</title><rect x="75.7320%" y="437" width="0.0579%" height="15" fill="rgb(213,0,20)" fg:x="159540" fg:w="122"/><text x="75.9820%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (117 samples, 0.06%)</title><rect x="75.7343%" y="421" width="0.0555%" height="15" fill="rgb(238,159,36)" fg:x="159545" fg:w="117"/><text x="75.9843%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (104 samples, 0.05%)</title><rect x="75.7405%" y="405" width="0.0494%" height="15" fill="rgb(253,173,17)" fg:x="159558" fg:w="104"/><text x="75.9905%" y="415.50"></text></g><g><title>std::time::Instant::now (27 samples, 0.01%)</title><rect x="75.7956%" y="437" width="0.0128%" height="15" fill="rgb(221,23,28)" fg:x="159674" fg:w="27"/><text x="76.0456%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (25 samples, 0.01%)</title><rect x="75.7965%" y="421" width="0.0119%" height="15" fill="rgb(218,113,15)" fg:x="159676" fg:w="25"/><text x="76.0465%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (25 samples, 0.01%)</title><rect x="75.7965%" y="405" width="0.0119%" height="15" fill="rgb(233,58,3)" fg:x="159676" fg:w="25"/><text x="76.0465%" y="415.50"></text></g><g><title>clock_gettime (25 samples, 0.01%)</title><rect x="75.7965%" y="389" width="0.0119%" height="15" fill="rgb(250,46,35)" fg:x="159676" fg:w="25"/><text x="76.0465%" y="399.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (369 samples, 0.18%)</title><rect x="75.6337%" y="469" width="0.1752%" height="15" fill="rgb(210,169,11)" fg:x="159333" fg:w="369"/><text x="75.8837%" y="479.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (351 samples, 0.17%)</title><rect x="75.6423%" y="453" width="0.1666%" height="15" fill="rgb(246,88,19)" fg:x="159351" fg:w="351"/><text x="75.8923%" y="463.50"></text></g><g><title>std::io::error::Error::_new (26 samples, 0.01%)</title><rect x="75.8112%" y="469" width="0.0123%" height="15" fill="rgb(206,81,49)" fg:x="159707" fg:w="26"/><text x="76.0612%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.01%)</title><rect x="75.8117%" y="453" width="0.0119%" height="15" fill="rgb(232,144,18)" fg:x="159708" fg:w="25"/><text x="76.0617%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.01%)</title><rect x="75.8122%" y="437" width="0.0114%" height="15" fill="rgb(235,2,27)" fg:x="159709" fg:w="24"/><text x="76.0622%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.01%)</title><rect x="75.8122%" y="421" width="0.0114%" height="15" fill="rgb(239,157,39)" fg:x="159709" fg:w="24"/><text x="76.0622%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.01%)</title><rect x="75.8122%" y="405" width="0.0114%" height="15" fill="rgb(220,11,17)" fg:x="159709" fg:w="24"/><text x="76.0622%" y="415.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.01%)</title><rect x="75.8122%" y="389" width="0.0114%" height="15" fill="rgb(243,94,50)" fg:x="159709" fg:w="24"/><text x="76.0622%" y="399.50"></text></g><g><title>malloc (22 samples, 0.01%)</title><rect x="75.8131%" y="373" width="0.0104%" height="15" fill="rgb(218,22,0)" fg:x="159711" fg:w="22"/><text x="76.0631%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.01%)</title><rect x="75.8236%" y="309" width="0.0114%" height="15" fill="rgb(249,70,21)" fg:x="159733" fg:w="24"/><text x="76.0736%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.01%)</title><rect x="75.8236%" y="293" width="0.0114%" height="15" fill="rgb(245,111,46)" fg:x="159733" fg:w="24"/><text x="76.0736%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.01%)</title><rect x="75.8236%" y="277" width="0.0114%" height="15" fill="rgb(244,183,12)" fg:x="159733" fg:w="24"/><text x="76.0736%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.01%)</title><rect x="75.8236%" y="261" width="0.0114%" height="15" fill="rgb(207,117,0)" fg:x="159733" fg:w="24"/><text x="76.0736%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.01%)</title><rect x="75.8236%" y="245" width="0.0114%" height="15" fill="rgb(206,20,43)" fg:x="159733" fg:w="24"/><text x="76.0736%" y="255.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.01%)</title><rect x="75.8236%" y="229" width="0.0114%" height="15" fill="rgb(221,104,11)" fg:x="159733" fg:w="24"/><text x="76.0736%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (25 samples, 0.01%)</title><rect x="75.8236%" y="421" width="0.0119%" height="15" fill="rgb(254,36,50)" fg:x="159733" fg:w="25"/><text x="76.0736%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (25 samples, 0.01%)</title><rect x="75.8236%" y="405" width="0.0119%" height="15" fill="rgb(252,17,15)" fg:x="159733" fg:w="25"/><text x="76.0736%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (25 samples, 0.01%)</title><rect x="75.8236%" y="389" width="0.0119%" height="15" fill="rgb(219,129,43)" fg:x="159733" fg:w="25"/><text x="76.0736%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (25 samples, 0.01%)</title><rect x="75.8236%" y="373" width="0.0119%" height="15" fill="rgb(205,34,45)" fg:x="159733" fg:w="25"/><text x="76.0736%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.01%)</title><rect x="75.8236%" y="357" width="0.0119%" height="15" fill="rgb(251,201,32)" fg:x="159733" fg:w="25"/><text x="76.0736%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.01%)</title><rect x="75.8236%" y="341" width="0.0119%" height="15" fill="rgb(205,56,0)" fg:x="159733" fg:w="25"/><text x="76.0736%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.01%)</title><rect x="75.8236%" y="325" width="0.0119%" height="15" fill="rgb(211,193,27)" fg:x="159733" fg:w="25"/><text x="76.0736%" y="335.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (442 samples, 0.21%)</title><rect x="75.6332%" y="485" width="0.2098%" height="15" fill="rgb(231,100,42)" fg:x="159332" fg:w="442"/><text x="75.8832%" y="495.50"></text></g><g><title>std::io::error::Error::new (41 samples, 0.02%)</title><rect x="75.8236%" y="469" width="0.0195%" height="15" fill="rgb(245,85,27)" fg:x="159733" fg:w="41"/><text x="76.0736%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (41 samples, 0.02%)</title><rect x="75.8236%" y="453" width="0.0195%" height="15" fill="rgb(241,76,24)" fg:x="159733" fg:w="41"/><text x="76.0736%" y="463.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (41 samples, 0.02%)</title><rect x="75.8236%" y="437" width="0.0195%" height="15" fill="rgb(249,157,15)" fg:x="159733" fg:w="41"/><text x="76.0736%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (474 samples, 0.23%)</title><rect x="75.6285%" y="517" width="0.2250%" height="15" fill="rgb(222,218,25)" fg:x="159322" fg:w="474"/><text x="75.8785%" y="527.50"></text></g><g><title>async_std::io::timeout::timeout::{{closure}} (474 samples, 0.23%)</title><rect x="75.6285%" y="501" width="0.2250%" height="15" fill="rgb(252,156,52)" fg:x="159322" fg:w="474"/><text x="75.8785%" y="511.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (545 samples, 0.26%)</title><rect x="75.6100%" y="533" width="0.2587%" height="15" fill="rgb(211,185,7)" fg:x="159283" fg:w="545"/><text x="75.8600%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (32 samples, 0.02%)</title><rect x="75.8535%" y="517" width="0.0152%" height="15" fill="rgb(234,108,24)" fg:x="159796" fg:w="32"/><text x="76.1035%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (29 samples, 0.01%)</title><rect x="75.8549%" y="501" width="0.0138%" height="15" fill="rgb(227,218,2)" fg:x="159799" fg:w="29"/><text x="76.1049%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (29 samples, 0.01%)</title><rect x="75.8549%" y="485" width="0.0138%" height="15" fill="rgb(224,0,36)" fg:x="159799" fg:w="29"/><text x="76.1049%" y="495.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="75.8549%" y="469" width="0.0138%" height="15" fill="rgb(233,201,10)" fg:x="159799" fg:w="29"/><text x="76.1049%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::ErrorData&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt;&gt; (29 samples, 0.01%)</title><rect x="75.8549%" y="453" width="0.0138%" height="15" fill="rgb(252,209,14)" fg:x="159799" fg:w="29"/><text x="76.1049%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt; (29 samples, 0.01%)</title><rect x="75.8549%" y="437" width="0.0138%" height="15" fill="rgb(205,93,49)" fg:x="159799" fg:w="29"/><text x="76.1049%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Custom&gt; (28 samples, 0.01%)</title><rect x="75.8554%" y="421" width="0.0133%" height="15" fill="rgb(234,116,45)" fg:x="159800" fg:w="28"/><text x="76.1054%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt; (28 samples, 0.01%)</title><rect x="75.8554%" y="405" width="0.0133%" height="15" fill="rgb(248,89,35)" fg:x="159800" fg:w="28"/><text x="76.1054%" y="415.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (37 samples, 0.02%)</title><rect x="75.8834%" y="485" width="0.0176%" height="15" fill="rgb(233,167,45)" fg:x="159859" fg:w="37"/><text x="76.1334%" y="495.50"></text></g><g><title>[libc.so.6] (37 samples, 0.02%)</title><rect x="75.8834%" y="469" width="0.0176%" height="15" fill="rgb(248,228,14)" fg:x="159859" fg:w="37"/><text x="76.1334%" y="479.50"></text></g><g><title>zenoh_link::LocatorInspector::is_multicast::{{closure}} (27 samples, 0.01%)</title><rect x="75.9290%" y="437" width="0.0128%" height="15" fill="rgb(246,91,14)" fg:x="159955" fg:w="27"/><text x="76.1790%" y="447.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (22 samples, 0.01%)</title><rect x="75.9556%" y="421" width="0.0104%" height="15" fill="rgb(227,142,5)" fg:x="160011" fg:w="22"/><text x="76.2056%" y="431.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="75.9556%" y="405" width="0.0104%" height="15" fill="rgb(221,63,33)" fg:x="160011" fg:w="22"/><text x="76.2056%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.01%)</title><rect x="75.9949%" y="373" width="0.0142%" height="15" fill="rgb(233,49,0)" fg:x="160094" fg:w="30"/><text x="76.2449%" y="383.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (29 samples, 0.01%)</title><rect x="75.9954%" y="357" width="0.0138%" height="15" fill="rgb(251,115,38)" fg:x="160095" fg:w="29"/><text x="76.2454%" y="367.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (78 samples, 0.04%)</title><rect x="75.9736%" y="421" width="0.0370%" height="15" fill="rgb(231,214,32)" fg:x="160049" fg:w="78"/><text x="76.2236%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (78 samples, 0.04%)</title><rect x="75.9736%" y="405" width="0.0370%" height="15" fill="rgb(248,73,46)" fg:x="160049" fg:w="78"/><text x="76.2236%" y="415.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (64 samples, 0.03%)</title><rect x="75.9802%" y="389" width="0.0304%" height="15" fill="rgb(237,156,4)" fg:x="160063" fg:w="64"/><text x="76.2302%" y="399.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link (63 samples, 0.03%)</title><rect x="76.0116%" y="421" width="0.0299%" height="15" fill="rgb(227,132,2)" fg:x="160129" fg:w="63"/><text x="76.2616%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (59 samples, 0.03%)</title><rect x="76.0135%" y="405" width="0.0280%" height="15" fill="rgb(248,161,9)" fg:x="160133" fg:w="59"/><text x="76.2635%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (49 samples, 0.02%)</title><rect x="76.0182%" y="389" width="0.0233%" height="15" fill="rgb(238,77,38)" fg:x="160143" fg:w="49"/><text x="76.2682%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.02%)</title><rect x="76.0182%" y="373" width="0.0233%" height="15" fill="rgb(222,166,40)" fg:x="160143" fg:w="49"/><text x="76.2682%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.02%)</title><rect x="76.0182%" y="357" width="0.0233%" height="15" fill="rgb(214,168,45)" fg:x="160143" fg:w="49"/><text x="76.2682%" y="367.50"></text></g><g><title>alloc::alloc::alloc (49 samples, 0.02%)</title><rect x="76.0182%" y="341" width="0.0233%" height="15" fill="rgb(226,64,37)" fg:x="160143" fg:w="49"/><text x="76.2682%" y="351.50"></text></g><g><title>malloc (45 samples, 0.02%)</title><rect x="76.0201%" y="325" width="0.0214%" height="15" fill="rgb(232,210,43)" fg:x="160147" fg:w="45"/><text x="76.2701%" y="335.50"></text></g><g><title>[libc.so.6] (50 samples, 0.02%)</title><rect x="76.0495%" y="325" width="0.0237%" height="15" fill="rgb(214,76,33)" fg:x="160209" fg:w="50"/><text x="76.2995%" y="335.50"></text></g><g><title>__lll_lock_wait_private (47 samples, 0.02%)</title><rect x="76.0510%" y="309" width="0.0223%" height="15" fill="rgb(210,78,5)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="319.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="76.0510%" y="293" width="0.0223%" height="15" fill="rgb(211,107,37)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="303.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="76.0510%" y="277" width="0.0223%" height="15" fill="rgb(249,67,16)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="287.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="76.0510%" y="261" width="0.0223%" height="15" fill="rgb(222,114,31)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="271.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="76.0510%" y="245" width="0.0223%" height="15" fill="rgb(242,118,19)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="255.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="76.0510%" y="229" width="0.0223%" height="15" fill="rgb(223,115,1)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="239.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="76.0510%" y="213" width="0.0223%" height="15" fill="rgb(241,182,54)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="223.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="76.0510%" y="197" width="0.0223%" height="15" fill="rgb(244,166,36)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="207.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="76.0510%" y="181" width="0.0223%" height="15" fill="rgb(241,52,43)" fg:x="160212" fg:w="47"/><text x="76.3010%" y="191.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="76.0514%" y="165" width="0.0218%" height="15" fill="rgb(236,82,9)" fg:x="160213" fg:w="46"/><text x="76.3014%" y="175.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="76.0538%" y="149" width="0.0195%" height="15" fill="rgb(241,119,0)" fg:x="160218" fg:w="41"/><text x="76.3038%" y="159.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="76.0586%" y="133" width="0.0147%" height="15" fill="rgb(221,19,22)" fg:x="160228" fg:w="31"/><text x="76.3086%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;zenoh_link_commons::LinkUnicast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Send&gt;&gt;&gt; (66 samples, 0.03%)</title><rect x="76.0443%" y="421" width="0.0313%" height="15" fill="rgb(254,144,35)" fg:x="160198" fg:w="66"/><text x="76.2943%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;zenoh_link_commons::LinkUnicast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Send&gt;&gt; (66 samples, 0.03%)</title><rect x="76.0443%" y="405" width="0.0313%" height="15" fill="rgb(246,132,30)" fg:x="160198" fg:w="66"/><text x="76.2943%" y="415.50"></text></g><g><title>alloc::alloc::box_free (65 samples, 0.03%)</title><rect x="76.0448%" y="389" width="0.0309%" height="15" fill="rgb(234,69,28)" fg:x="160199" fg:w="65"/><text x="76.2948%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64 samples, 0.03%)</title><rect x="76.0453%" y="373" width="0.0304%" height="15" fill="rgb(219,106,47)" fg:x="160200" fg:w="64"/><text x="76.2953%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (64 samples, 0.03%)</title><rect x="76.0453%" y="357" width="0.0304%" height="15" fill="rgb(218,79,24)" fg:x="160200" fg:w="64"/><text x="76.2953%" y="367.50"></text></g><g><title>cfree (64 samples, 0.03%)</title><rect x="76.0453%" y="341" width="0.0304%" height="15" fill="rgb(225,26,21)" fg:x="160200" fg:w="64"/><text x="76.2953%" y="351.50"></text></g><g><title>&lt;async_io::Async&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="76.0785%" y="245" width="0.0109%" height="15" fill="rgb(217,68,49)" fg:x="160270" fg:w="23"/><text x="76.3285%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (24 samples, 0.01%)</title><rect x="76.0785%" y="277" width="0.0114%" height="15" fill="rgb(220,204,28)" fg:x="160270" fg:w="24"/><text x="76.3285%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Async&lt;std::net::tcp::TcpStream&gt;&gt; (24 samples, 0.01%)</title><rect x="76.0785%" y="261" width="0.0114%" height="15" fill="rgb(237,208,43)" fg:x="160270" fg:w="24"/><text x="76.3285%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::net::tcp::stream::TcpStream&gt; (26 samples, 0.01%)</title><rect x="76.0785%" y="325" width="0.0123%" height="15" fill="rgb(213,97,42)" fg:x="160270" fg:w="26"/><text x="76.3285%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::Async&lt;std::net::tcp::TcpStream&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="76.0785%" y="309" width="0.0123%" height="15" fill="rgb(238,96,52)" fg:x="160270" fg:w="26"/><text x="76.3285%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="76.0785%" y="293" width="0.0123%" height="15" fill="rgb(228,14,13)" fg:x="160270" fg:w="26"/><text x="76.3285%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (34 samples, 0.02%)</title><rect x="76.0756%" y="373" width="0.0161%" height="15" fill="rgb(219,123,13)" fg:x="160264" fg:w="34"/><text x="76.3256%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::ops::function::Fn&lt;(&amp;str,&amp;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;,&amp;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;)&gt;+Output = core::result::Result&lt;core::option::Option&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Sync+core::marker::Send&gt; (34 samples, 0.02%)</title><rect x="76.0756%" y="357" width="0.0161%" height="15" fill="rgb(216,144,17)" fg:x="160264" fg:w="34"/><text x="76.3256%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_tcp::unicast::LinkUnicastTcp&gt; (34 samples, 0.02%)</title><rect x="76.0756%" y="341" width="0.0161%" height="15" fill="rgb(230,228,29)" fg:x="160264" fg:w="34"/><text x="76.3256%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_commons::LinkUnicast&gt; (36 samples, 0.02%)</title><rect x="76.0756%" y="421" width="0.0171%" height="15" fill="rgb(233,18,5)" fg:x="160264" fg:w="36"/><text x="76.3256%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn zenoh_link_commons::LinkUnicastTrait&gt;&gt; (36 samples, 0.02%)</title><rect x="76.0756%" y="405" width="0.0171%" height="15" fill="rgb(233,197,12)" fg:x="160264" fg:w="36"/><text x="76.3256%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.02%)</title><rect x="76.0756%" y="389" width="0.0171%" height="15" fill="rgb(234,140,29)" fg:x="160264" fg:w="36"/><text x="76.3256%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (38 samples, 0.02%)</title><rect x="76.0980%" y="421" width="0.0180%" height="15" fill="rgb(233,113,19)" fg:x="160311" fg:w="38"/><text x="76.3480%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (38 samples, 0.02%)</title><rect x="76.0980%" y="405" width="0.0180%" height="15" fill="rgb(246,209,13)" fg:x="160311" fg:w="38"/><text x="76.3480%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (38 samples, 0.02%)</title><rect x="76.0980%" y="389" width="0.0180%" height="15" fill="rgb(242,79,54)" fg:x="160311" fg:w="38"/><text x="76.3480%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.01%)</title><rect x="76.1056%" y="373" width="0.0104%" height="15" fill="rgb(219,73,16)" fg:x="160327" fg:w="22"/><text x="76.3556%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.01%)</title><rect x="76.1056%" y="357" width="0.0104%" height="15" fill="rgb(224,52,10)" fg:x="160327" fg:w="22"/><text x="76.3556%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (22 samples, 0.01%)</title><rect x="76.1056%" y="341" width="0.0104%" height="15" fill="rgb(237,179,5)" fg:x="160327" fg:w="22"/><text x="76.3556%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (49 samples, 0.02%)</title><rect x="76.1288%" y="373" width="0.0233%" height="15" fill="rgb(231,20,6)" fg:x="160376" fg:w="49"/><text x="76.3788%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.02%)</title><rect x="76.1336%" y="357" width="0.0185%" height="15" fill="rgb(253,171,45)" fg:x="160386" fg:w="39"/><text x="76.3836%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (39 samples, 0.02%)</title><rect x="76.1336%" y="341" width="0.0185%" height="15" fill="rgb(230,75,49)" fg:x="160386" fg:w="39"/><text x="76.3836%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (39 samples, 0.02%)</title><rect x="76.1336%" y="325" width="0.0185%" height="15" fill="rgb(216,83,46)" fg:x="160386" fg:w="39"/><text x="76.3836%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (50 samples, 0.02%)</title><rect x="76.1288%" y="405" width="0.0237%" height="15" fill="rgb(236,56,9)" fg:x="160376" fg:w="50"/><text x="76.3788%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (50 samples, 0.02%)</title><rect x="76.1288%" y="389" width="0.0237%" height="15" fill="rgb(215,28,34)" fg:x="160376" fg:w="50"/><text x="76.3788%" y="399.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (42 samples, 0.02%)</title><rect x="76.1525%" y="405" width="0.0199%" height="15" fill="rgb(230,222,20)" fg:x="160426" fg:w="42"/><text x="76.4025%" y="415.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (41 samples, 0.02%)</title><rect x="76.1530%" y="389" width="0.0195%" height="15" fill="rgb(235,209,51)" fg:x="160427" fg:w="41"/><text x="76.4030%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (41 samples, 0.02%)</title><rect x="76.1530%" y="373" width="0.0195%" height="15" fill="rgb(235,167,1)" fg:x="160427" fg:w="41"/><text x="76.4030%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (41 samples, 0.02%)</title><rect x="76.1530%" y="357" width="0.0195%" height="15" fill="rgb(248,220,0)" fg:x="160427" fg:w="41"/><text x="76.4030%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (25 samples, 0.01%)</title><rect x="76.1606%" y="341" width="0.0119%" height="15" fill="rgb(239,0,18)" fg:x="160443" fg:w="25"/><text x="76.4106%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (587 samples, 0.28%)</title><rect x="75.9237%" y="453" width="0.2786%" height="15" fill="rgb(229,179,11)" fg:x="159944" fg:w="587"/><text x="76.1737%" y="463.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (549 samples, 0.26%)</title><rect x="75.9418%" y="437" width="0.2606%" height="15" fill="rgb(226,116,53)" fg:x="159982" fg:w="549"/><text x="76.1918%" y="447.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::new_link_manager_unicast (177 samples, 0.08%)</title><rect x="76.1184%" y="421" width="0.0840%" height="15" fill="rgb(218,1,49)" fg:x="160354" fg:w="177"/><text x="76.3684%" y="431.50"></text></g><g><title>syscall (56 samples, 0.03%)</title><rect x="76.1758%" y="405" width="0.0266%" height="15" fill="rgb(208,184,47)" fg:x="160475" fg:w="56"/><text x="76.4258%" y="415.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="76.1758%" y="389" width="0.0266%" height="15" fill="rgb(238,174,3)" fg:x="160475" fg:w="56"/><text x="76.4258%" y="399.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="76.1758%" y="373" width="0.0266%" height="15" fill="rgb(247,188,6)" fg:x="160475" fg:w="56"/><text x="76.4258%" y="383.50"></text></g><g><title>[unknown] (56 samples, 0.03%)</title><rect x="76.1758%" y="357" width="0.0266%" height="15" fill="rgb(211,165,46)" fg:x="160475" fg:w="56"/><text x="76.4258%" y="367.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="76.1772%" y="341" width="0.0252%" height="15" fill="rgb(222,190,10)" fg:x="160478" fg:w="53"/><text x="76.4272%" y="351.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="76.1796%" y="325" width="0.0228%" height="15" fill="rgb(206,185,3)" fg:x="160483" fg:w="48"/><text x="76.4296%" y="335.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="76.1891%" y="309" width="0.0133%" height="15" fill="rgb(244,125,37)" fg:x="160503" fg:w="28"/><text x="76.4391%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (641 samples, 0.30%)</title><rect x="75.9019%" y="485" width="0.3043%" height="15" fill="rgb(211,43,7)" fg:x="159898" fg:w="641"/><text x="76.1519%" y="495.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (638 samples, 0.30%)</title><rect x="75.9033%" y="469" width="0.3029%" height="15" fill="rgb(250,41,42)" fg:x="159901" fg:w="638"/><text x="76.1533%" y="479.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (31 samples, 0.01%)</title><rect x="76.2071%" y="485" width="0.0147%" height="15" fill="rgb(254,54,42)" fg:x="160541" fg:w="31"/><text x="76.4571%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (29 samples, 0.01%)</title><rect x="76.2081%" y="469" width="0.0138%" height="15" fill="rgb(213,71,43)" fg:x="160543" fg:w="29"/><text x="76.4581%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (752 samples, 0.36%)</title><rect x="75.8706%" y="517" width="0.3570%" height="15" fill="rgb(249,3,44)" fg:x="159832" fg:w="752"/><text x="76.1206%" y="527.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (746 samples, 0.35%)</title><rect x="75.8734%" y="501" width="0.3541%" height="15" fill="rgb(229,80,41)" fg:x="159838" fg:w="746"/><text x="76.1234%" y="511.50"></text></g><g><title>zenoh_transport::manager::TransportManager::pid (28 samples, 0.01%)</title><rect x="76.2394%" y="517" width="0.0133%" height="15" fill="rgb(231,25,28)" fg:x="160609" fg:w="28"/><text x="76.4894%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.01%)</title><rect x="76.2589%" y="501" width="0.0114%" height="15" fill="rgb(208,79,48)" fg:x="160650" fg:w="24"/><text x="76.5089%" y="511.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_transport_unicast::{{closure}} (24 samples, 0.01%)</title><rect x="76.2589%" y="485" width="0.0114%" height="15" fill="rgb(207,196,38)" fg:x="160650" fg:w="24"/><text x="76.5089%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.01%)</title><rect x="76.2589%" y="469" width="0.0114%" height="15" fill="rgb(228,105,49)" fg:x="160650" fg:w="24"/><text x="76.5089%" y="479.50"></text></g><g><title>&lt;zenoh_transport::unicast::TransportUnicast as core::convert::From&lt;&amp;alloc::sync::Arc&lt;zenoh_transport::unicast::transport::TransportUnicastInner&gt;&gt;&gt;::from (24 samples, 0.01%)</title><rect x="76.2589%" y="453" width="0.0114%" height="15" fill="rgb(237,99,15)" fg:x="160650" fg:w="24"/><text x="76.5089%" y="463.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_transport_unicast (24 samples, 0.01%)</title><rect x="76.2589%" y="437" width="0.0114%" height="15" fill="rgb(224,207,46)" fg:x="160650" fg:w="24"/><text x="76.5089%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (26 samples, 0.01%)</title><rect x="76.2802%" y="405" width="0.0123%" height="15" fill="rgb(249,117,50)" fg:x="160695" fg:w="26"/><text x="76.5302%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (26 samples, 0.01%)</title><rect x="76.2802%" y="389" width="0.0123%" height="15" fill="rgb(248,17,13)" fg:x="160695" fg:w="26"/><text x="76.5302%" y="399.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (26 samples, 0.01%)</title><rect x="76.2802%" y="373" width="0.0123%" height="15" fill="rgb(228,187,36)" fg:x="160695" fg:w="26"/><text x="76.5302%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (44 samples, 0.02%)</title><rect x="76.2798%" y="421" width="0.0209%" height="15" fill="rgb(234,132,20)" fg:x="160694" fg:w="44"/><text x="76.5298%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (45 samples, 0.02%)</title><rect x="76.2798%" y="453" width="0.0214%" height="15" fill="rgb(209,170,46)" fg:x="160694" fg:w="45"/><text x="76.5298%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (45 samples, 0.02%)</title><rect x="76.2798%" y="437" width="0.0214%" height="15" fill="rgb(237,23,19)" fg:x="160694" fg:w="45"/><text x="76.5298%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (67 samples, 0.03%)</title><rect x="76.2712%" y="469" width="0.0318%" height="15" fill="rgb(227,21,26)" fg:x="160676" fg:w="67"/><text x="76.5212%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (68 samples, 0.03%)</title><rect x="76.2712%" y="501" width="0.0323%" height="15" fill="rgb(222,220,48)" fg:x="160676" fg:w="68"/><text x="76.5212%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (68 samples, 0.03%)</title><rect x="76.2712%" y="485" width="0.0323%" height="15" fill="rgb(214,9,16)" fg:x="160676" fg:w="68"/><text x="76.5212%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,490 samples, 0.71%)</title><rect x="75.6086%" y="549" width="0.7073%" height="15" fill="rgb(209,73,30)" fg:x="159280" fg:w="1490"/><text x="75.8586%" y="559.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (942 samples, 0.45%)</title><rect x="75.8687%" y="533" width="0.4472%" height="15" fill="rgb(207,20,33)" fg:x="159828" fg:w="942"/><text x="76.1187%" y="543.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_transport_unicast (133 samples, 0.06%)</title><rect x="76.2527%" y="517" width="0.0631%" height="15" fill="rgb(219,153,12)" fg:x="160637" fg:w="133"/><text x="76.5027%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.03%)</title><rect x="76.3182%" y="421" width="0.0271%" height="15" fill="rgb(235,97,25)" fg:x="160775" fg:w="57"/><text x="76.5682%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.03%)</title><rect x="76.3182%" y="405" width="0.0271%" height="15" fill="rgb(244,30,34)" fg:x="160775" fg:w="57"/><text x="76.5682%" y="415.50"></text></g><g><title>cfree (57 samples, 0.03%)</title><rect x="76.3182%" y="389" width="0.0271%" height="15" fill="rgb(214,106,45)" fg:x="160775" fg:w="57"/><text x="76.5682%" y="399.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="76.3348%" y="373" width="0.0104%" height="15" fill="rgb(226,41,9)" fg:x="160810" fg:w="22"/><text x="76.5848%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (69 samples, 0.03%)</title><rect x="76.3182%" y="485" width="0.0328%" height="15" fill="rgb(253,139,29)" fg:x="160775" fg:w="69"/><text x="76.5682%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (69 samples, 0.03%)</title><rect x="76.3182%" y="469" width="0.0328%" height="15" fill="rgb(213,205,39)" fg:x="160775" fg:w="69"/><text x="76.5682%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (69 samples, 0.03%)</title><rect x="76.3182%" y="453" width="0.0328%" height="15" fill="rgb(209,27,10)" fg:x="160775" fg:w="69"/><text x="76.5682%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.03%)</title><rect x="76.3182%" y="437" width="0.0328%" height="15" fill="rgb(249,142,16)" fg:x="160775" fg:w="69"/><text x="76.5682%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (72 samples, 0.03%)</title><rect x="76.3182%" y="533" width="0.0342%" height="15" fill="rgb(242,65,12)" fg:x="160775" fg:w="72"/><text x="76.5682%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (72 samples, 0.03%)</title><rect x="76.3182%" y="517" width="0.0342%" height="15" fill="rgb(232,48,10)" fg:x="160775" fg:w="72"/><text x="76.5682%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (72 samples, 0.03%)</title><rect x="76.3182%" y="501" width="0.0342%" height="15" fill="rgb(253,67,19)" fg:x="160775" fg:w="72"/><text x="76.5682%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (80 samples, 0.04%)</title><rect x="76.3182%" y="549" width="0.0380%" height="15" fill="rgb(227,93,29)" fg:x="160775" fg:w="80"/><text x="76.5682%" y="559.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (1,688 samples, 0.80%)</title><rect x="75.5725%" y="565" width="0.8013%" height="15" fill="rgb(226,189,53)" fg:x="159204" fg:w="1688"/><text x="75.8225%" y="575.50"></text></g><g><title>rand::random (30 samples, 0.01%)</title><rect x="76.3595%" y="549" width="0.0142%" height="15" fill="rgb(223,224,1)" fg:x="160862" fg:w="30"/><text x="76.6095%" y="559.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (2,067 samples, 0.98%)</title><rect x="75.3983%" y="597" width="0.9812%" height="15" fill="rgb(221,84,32)" fg:x="158837" fg:w="2067"/><text x="75.6483%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,701 samples, 0.81%)</title><rect x="75.5720%" y="581" width="0.8074%" height="15" fill="rgb(214,189,28)" fg:x="159203" fg:w="1701"/><text x="75.8220%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,429 samples, 4.48%)</title><rect x="71.9041%" y="613" width="4.4758%" height="15" fill="rgb(234,7,52)" fg:x="151476" fg:w="9429"/><text x="72.1541%" y="623.50">&lt;asyn..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,460 samples, 4.49%)</title><rect x="71.8908%" y="693" width="4.4906%" height="15" fill="rgb(249,73,31)" fg:x="151448" fg:w="9460"/><text x="72.1408%" y="703.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,460 samples, 4.49%)</title><rect x="71.8908%" y="677" width="4.4906%" height="15" fill="rgb(253,153,41)" fg:x="151448" fg:w="9460"/><text x="72.1408%" y="687.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,457 samples, 4.49%)</title><rect x="71.8922%" y="661" width="4.4891%" height="15" fill="rgb(249,52,34)" fg:x="151451" fg:w="9457"/><text x="72.1422%" y="671.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,451 samples, 4.49%)</title><rect x="71.8951%" y="645" width="4.4863%" height="15" fill="rgb(236,177,47)" fg:x="151457" fg:w="9451"/><text x="72.1451%" y="655.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,432 samples, 4.48%)</title><rect x="71.9041%" y="629" width="4.4773%" height="15" fill="rgb(252,185,45)" fg:x="151476" fg:w="9432"/><text x="72.1541%" y="639.50">async..</text></g><g><title>[libc.so.6] (283 samples, 0.13%)</title><rect x="76.3813%" y="693" width="0.1343%" height="15" fill="rgb(251,15,30)" fg:x="160908" fg:w="283"/><text x="76.6313%" y="703.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.03%)</title><rect x="76.5176%" y="677" width="0.0256%" height="15" fill="rgb(233,31,4)" fg:x="161195" fg:w="54"/><text x="76.7676%" y="687.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (53 samples, 0.03%)</title><rect x="76.5181%" y="661" width="0.0252%" height="15" fill="rgb(254,44,24)" fg:x="161196" fg:w="53"/><text x="76.7681%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.02%)</title><rect x="76.5276%" y="645" width="0.0157%" height="15" fill="rgb(218,54,1)" fg:x="161216" fg:w="33"/><text x="76.7776%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.02%)</title><rect x="76.5276%" y="629" width="0.0157%" height="15" fill="rgb(243,209,39)" fg:x="161216" fg:w="33"/><text x="76.7776%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (33 samples, 0.02%)</title><rect x="76.5276%" y="613" width="0.0157%" height="15" fill="rgb(206,75,33)" fg:x="161216" fg:w="33"/><text x="76.7776%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (32 samples, 0.02%)</title><rect x="76.5280%" y="597" width="0.0152%" height="15" fill="rgb(223,108,18)" fg:x="161217" fg:w="32"/><text x="76.7780%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (92 samples, 0.04%)</title><rect x="76.5176%" y="693" width="0.0437%" height="15" fill="rgb(244,89,31)" fg:x="161195" fg:w="92"/><text x="76.7676%" y="703.50"></text></g><g><title>syscall (37 samples, 0.02%)</title><rect x="76.5437%" y="677" width="0.0176%" height="15" fill="rgb(222,167,27)" fg:x="161250" fg:w="37"/><text x="76.7937%" y="687.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="76.5442%" y="661" width="0.0171%" height="15" fill="rgb(247,41,16)" fg:x="161251" fg:w="36"/><text x="76.7942%" y="671.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="76.5442%" y="645" width="0.0171%" height="15" fill="rgb(233,168,40)" fg:x="161251" fg:w="36"/><text x="76.7942%" y="655.50"></text></g><g><title>[unknown] (36 samples, 0.02%)</title><rect x="76.5442%" y="629" width="0.0171%" height="15" fill="rgb(205,211,8)" fg:x="161251" fg:w="36"/><text x="76.7942%" y="639.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="76.5446%" y="613" width="0.0166%" height="15" fill="rgb(238,105,11)" fg:x="161252" fg:w="35"/><text x="76.7946%" y="623.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="76.5446%" y="597" width="0.0166%" height="15" fill="rgb(223,142,52)" fg:x="161252" fg:w="35"/><text x="76.7946%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (41 samples, 0.02%)</title><rect x="76.5902%" y="597" width="0.0195%" height="15" fill="rgb(238,51,33)" fg:x="161348" fg:w="41"/><text x="76.8402%" y="607.50"></text></g><g><title>core::mem::drop (48 samples, 0.02%)</title><rect x="76.5902%" y="645" width="0.0228%" height="15" fill="rgb(231,188,43)" fg:x="161348" fg:w="48"/><text x="76.8402%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (48 samples, 0.02%)</title><rect x="76.5902%" y="629" width="0.0228%" height="15" fill="rgb(216,92,17)" fg:x="161348" fg:w="48"/><text x="76.8402%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="76.5902%" y="613" width="0.0228%" height="15" fill="rgb(228,2,40)" fg:x="161348" fg:w="48"/><text x="76.8402%" y="623.50"></text></g><g><title>std::sys::unix::futex::futex_wait (148 samples, 0.07%)</title><rect x="76.6334%" y="581" width="0.0703%" height="15" fill="rgb(226,73,15)" fg:x="161439" fg:w="148"/><text x="76.8834%" y="591.50"></text></g><g><title>syscall (148 samples, 0.07%)</title><rect x="76.6334%" y="565" width="0.0703%" height="15" fill="rgb(227,66,46)" fg:x="161439" fg:w="148"/><text x="76.8834%" y="575.50"></text></g><g><title>[unknown] (146 samples, 0.07%)</title><rect x="76.6344%" y="549" width="0.0693%" height="15" fill="rgb(209,71,6)" fg:x="161441" fg:w="146"/><text x="76.8844%" y="559.50"></text></g><g><title>[unknown] (146 samples, 0.07%)</title><rect x="76.6344%" y="533" width="0.0693%" height="15" fill="rgb(246,100,25)" fg:x="161441" fg:w="146"/><text x="76.8844%" y="543.50"></text></g><g><title>[unknown] (146 samples, 0.07%)</title><rect x="76.6344%" y="517" width="0.0693%" height="15" fill="rgb(248,185,27)" fg:x="161441" fg:w="146"/><text x="76.8844%" y="527.50"></text></g><g><title>[unknown] (144 samples, 0.07%)</title><rect x="76.6353%" y="501" width="0.0684%" height="15" fill="rgb(225,118,47)" fg:x="161443" fg:w="144"/><text x="76.8853%" y="511.50"></text></g><g><title>[unknown] (142 samples, 0.07%)</title><rect x="76.6363%" y="485" width="0.0674%" height="15" fill="rgb(220,185,44)" fg:x="161445" fg:w="142"/><text x="76.8863%" y="495.50"></text></g><g><title>[unknown] (137 samples, 0.07%)</title><rect x="76.6386%" y="469" width="0.0650%" height="15" fill="rgb(227,95,24)" fg:x="161450" fg:w="137"/><text x="76.8886%" y="479.50"></text></g><g><title>[unknown] (132 samples, 0.06%)</title><rect x="76.6410%" y="453" width="0.0627%" height="15" fill="rgb(252,84,24)" fg:x="161455" fg:w="132"/><text x="76.8910%" y="463.50"></text></g><g><title>[unknown] (122 samples, 0.06%)</title><rect x="76.6457%" y="437" width="0.0579%" height="15" fill="rgb(240,34,44)" fg:x="161465" fg:w="122"/><text x="76.8957%" y="447.50"></text></g><g><title>[unknown] (108 samples, 0.05%)</title><rect x="76.6524%" y="421" width="0.0513%" height="15" fill="rgb(209,72,54)" fg:x="161479" fg:w="108"/><text x="76.9024%" y="431.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="76.6704%" y="405" width="0.0332%" height="15" fill="rgb(226,19,45)" fg:x="161517" fg:w="70"/><text x="76.9204%" y="415.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="76.6790%" y="389" width="0.0247%" height="15" fill="rgb(246,7,45)" fg:x="161535" fg:w="52"/><text x="76.9290%" y="399.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="76.6880%" y="373" width="0.0157%" height="15" fill="rgb(225,45,2)" fg:x="161554" fg:w="33"/><text x="76.9380%" y="383.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (519 samples, 0.25%)</title><rect x="76.5613%" y="677" width="0.2464%" height="15" fill="rgb(221,80,29)" fg:x="161287" fg:w="519"/><text x="76.8113%" y="687.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (517 samples, 0.25%)</title><rect x="76.5622%" y="661" width="0.2454%" height="15" fill="rgb(228,11,19)" fg:x="161289" fg:w="517"/><text x="76.8122%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (375 samples, 0.18%)</title><rect x="76.6296%" y="645" width="0.1780%" height="15" fill="rgb(243,17,21)" fg:x="161431" fg:w="375"/><text x="76.8796%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (372 samples, 0.18%)</title><rect x="76.6310%" y="629" width="0.1766%" height="15" fill="rgb(243,88,8)" fg:x="161434" fg:w="372"/><text x="76.8810%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (372 samples, 0.18%)</title><rect x="76.6310%" y="613" width="0.1766%" height="15" fill="rgb(214,17,9)" fg:x="161434" fg:w="372"/><text x="76.8810%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (371 samples, 0.18%)</title><rect x="76.6315%" y="597" width="0.1761%" height="15" fill="rgb(232,169,15)" fg:x="161435" fg:w="371"/><text x="76.8815%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (219 samples, 0.10%)</title><rect x="76.7037%" y="581" width="0.1040%" height="15" fill="rgb(232,86,53)" fg:x="161587" fg:w="219"/><text x="76.9537%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (35 samples, 0.02%)</title><rect x="76.7910%" y="565" width="0.0166%" height="15" fill="rgb(222,100,4)" fg:x="161771" fg:w="35"/><text x="77.0410%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (35 samples, 0.02%)</title><rect x="76.7910%" y="549" width="0.0166%" height="15" fill="rgb(253,151,38)" fg:x="161771" fg:w="35"/><text x="77.0410%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (819 samples, 0.39%)</title><rect x="76.5613%" y="693" width="0.3888%" height="15" fill="rgb(238,215,29)" fg:x="161287" fg:w="819"/><text x="76.8113%" y="703.50"></text></g><g><title>syscall (296 samples, 0.14%)</title><rect x="76.8095%" y="677" width="0.1405%" height="15" fill="rgb(205,128,53)" fg:x="161810" fg:w="296"/><text x="77.0595%" y="687.50"></text></g><g><title>[unknown] (295 samples, 0.14%)</title><rect x="76.8100%" y="661" width="0.1400%" height="15" fill="rgb(248,183,14)" fg:x="161811" fg:w="295"/><text x="77.0600%" y="671.50"></text></g><g><title>[unknown] (292 samples, 0.14%)</title><rect x="76.8114%" y="645" width="0.1386%" height="15" fill="rgb(244,172,35)" fg:x="161814" fg:w="292"/><text x="77.0614%" y="655.50"></text></g><g><title>[unknown] (290 samples, 0.14%)</title><rect x="76.8124%" y="629" width="0.1377%" height="15" fill="rgb(234,93,19)" fg:x="161816" fg:w="290"/><text x="77.0624%" y="639.50"></text></g><g><title>[unknown] (281 samples, 0.13%)</title><rect x="76.8166%" y="613" width="0.1334%" height="15" fill="rgb(227,109,7)" fg:x="161825" fg:w="281"/><text x="77.0666%" y="623.50"></text></g><g><title>[unknown] (266 samples, 0.13%)</title><rect x="76.8238%" y="597" width="0.1263%" height="15" fill="rgb(233,136,54)" fg:x="161840" fg:w="266"/><text x="77.0738%" y="607.50"></text></g><g><title>[unknown] (150 samples, 0.07%)</title><rect x="76.8788%" y="581" width="0.0712%" height="15" fill="rgb(233,19,40)" fg:x="161956" fg:w="150"/><text x="77.1288%" y="591.50"></text></g><g><title>[unknown] (89 samples, 0.04%)</title><rect x="76.9078%" y="565" width="0.0422%" height="15" fill="rgb(247,41,18)" fg:x="162017" fg:w="89"/><text x="77.1578%" y="575.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="76.9177%" y="549" width="0.0323%" height="15" fill="rgb(220,34,34)" fg:x="162038" fg:w="68"/><text x="77.1677%" y="559.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="76.9315%" y="533" width="0.0185%" height="15" fill="rgb(222,135,32)" fg:x="162067" fg:w="39"/><text x="77.1815%" y="543.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="76.9500%" y="677" width="0.0119%" height="15" fill="rgb(214,80,19)" fg:x="162106" fg:w="25"/><text x="77.2000%" y="687.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (25 samples, 0.01%)</title><rect x="76.9500%" y="661" width="0.0119%" height="15" fill="rgb(234,54,46)" fg:x="162106" fg:w="25"/><text x="77.2000%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (32 samples, 0.02%)</title><rect x="76.9500%" y="693" width="0.0152%" height="15" fill="rgb(251,48,23)" fg:x="162106" fg:w="32"/><text x="77.2000%" y="703.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (36 samples, 0.02%)</title><rect x="76.9842%" y="565" width="0.0171%" height="15" fill="rgb(254,109,52)" fg:x="162178" fg:w="36"/><text x="77.2342%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt; (75 samples, 0.04%)</title><rect x="76.9666%" y="693" width="0.0356%" height="15" fill="rgb(240,186,19)" fg:x="162141" fg:w="75"/><text x="77.2166%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt; (64 samples, 0.03%)</title><rect x="76.9719%" y="677" width="0.0304%" height="15" fill="rgb(246,187,17)" fg:x="162152" fg:w="64"/><text x="77.2219%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;stop_token::deadline::Deadline&gt; (58 samples, 0.03%)</title><rect x="76.9747%" y="661" width="0.0275%" height="15" fill="rgb(212,21,5)" fg:x="162158" fg:w="58"/><text x="77.2247%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;stop_token::deadline::DeadlineKind&gt; (58 samples, 0.03%)</title><rect x="76.9747%" y="645" width="0.0275%" height="15" fill="rgb(225,185,18)" fg:x="162158" fg:w="58"/><text x="77.2247%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;stop_token::stop_source::StopToken&gt; (58 samples, 0.03%)</title><rect x="76.9747%" y="629" width="0.0275%" height="15" fill="rgb(245,114,17)" fg:x="162158" fg:w="58"/><text x="77.2247%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;stop_token::stop_source::Never&gt;&gt; (58 samples, 0.03%)</title><rect x="76.9747%" y="613" width="0.0275%" height="15" fill="rgb(223,164,24)" fg:x="162158" fg:w="58"/><text x="77.2247%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (39 samples, 0.02%)</title><rect x="76.9837%" y="597" width="0.0185%" height="15" fill="rgb(211,228,3)" fg:x="162177" fg:w="39"/><text x="77.2337%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (38 samples, 0.02%)</title><rect x="76.9842%" y="581" width="0.0180%" height="15" fill="rgb(223,16,38)" fg:x="162178" fg:w="38"/><text x="77.2342%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,018 samples, 5.23%)</title><rect x="71.7740%" y="725" width="5.2301%" height="15" fill="rgb(207,31,54)" fg:x="151202" fg:w="11018"/><text x="72.0240%" y="735.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,002 samples, 5.22%)</title><rect x="71.7816%" y="709" width="5.2225%" height="15" fill="rgb(220,39,11)" fg:x="151218" fg:w="11002"/><text x="72.0316%" y="719.50">async_..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,021 samples, 5.23%)</title><rect x="71.7740%" y="741" width="5.2316%" height="15" fill="rgb(235,185,0)" fg:x="151202" fg:w="11021"/><text x="72.0240%" y="751.50">&lt;core:..</text></g><g><title>alloc::alloc::box_free (29 samples, 0.01%)</title><rect x="77.0060%" y="645" width="0.0138%" height="15" fill="rgb(249,39,18)" fg:x="162224" fg:w="29"/><text x="77.2560%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.01%)</title><rect x="77.0060%" y="629" width="0.0138%" height="15" fill="rgb(240,110,33)" fg:x="162224" fg:w="29"/><text x="77.2560%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.01%)</title><rect x="77.0060%" y="613" width="0.0138%" height="15" fill="rgb(210,92,42)" fg:x="162224" fg:w="29"/><text x="77.2560%" y="623.50"></text></g><g><title>cfree (29 samples, 0.01%)</title><rect x="77.0060%" y="597" width="0.0138%" height="15" fill="rgb(218,215,28)" fg:x="162224" fg:w="29"/><text x="77.2560%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt;&gt; (30 samples, 0.01%)</title><rect x="77.0060%" y="677" width="0.0142%" height="15" fill="rgb(238,215,36)" fg:x="162224" fg:w="30"/><text x="77.2560%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt; (30 samples, 0.01%)</title><rect x="77.0060%" y="661" width="0.0142%" height="15" fill="rgb(220,31,10)" fg:x="162224" fg:w="30"/><text x="77.2560%" y="671.50"></text></g><g><title>[libc.so.6] (164 samples, 0.08%)</title><rect x="77.0355%" y="581" width="0.0778%" height="15" fill="rgb(212,93,14)" fg:x="162286" fg:w="164"/><text x="77.2855%" y="591.50"></text></g><g><title>__lll_lock_wait_private (78 samples, 0.04%)</title><rect x="77.0763%" y="565" width="0.0370%" height="15" fill="rgb(254,207,2)" fg:x="162372" fg:w="78"/><text x="77.3263%" y="575.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="77.0768%" y="549" width="0.0366%" height="15" fill="rgb(205,57,44)" fg:x="162373" fg:w="77"/><text x="77.3268%" y="559.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="77.0782%" y="533" width="0.0351%" height="15" fill="rgb(226,151,19)" fg:x="162376" fg:w="74"/><text x="77.3282%" y="543.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="77.0782%" y="517" width="0.0351%" height="15" fill="rgb(230,72,30)" fg:x="162376" fg:w="74"/><text x="77.3282%" y="527.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="77.0782%" y="501" width="0.0351%" height="15" fill="rgb(244,0,8)" fg:x="162376" fg:w="74"/><text x="77.3282%" y="511.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="77.0787%" y="485" width="0.0347%" height="15" fill="rgb(230,192,6)" fg:x="162377" fg:w="73"/><text x="77.3287%" y="495.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="77.0787%" y="469" width="0.0347%" height="15" fill="rgb(233,207,13)" fg:x="162377" fg:w="73"/><text x="77.3287%" y="479.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="77.0796%" y="453" width="0.0337%" height="15" fill="rgb(206,227,7)" fg:x="162379" fg:w="71"/><text x="77.3296%" y="463.50"></text></g><g><title>[unknown] (67 samples, 0.03%)</title><rect x="77.0815%" y="437" width="0.0318%" height="15" fill="rgb(213,217,25)" fg:x="162383" fg:w="67"/><text x="77.3315%" y="447.50"></text></g><g><title>[unknown] (60 samples, 0.03%)</title><rect x="77.0848%" y="421" width="0.0285%" height="15" fill="rgb(249,75,4)" fg:x="162390" fg:w="60"/><text x="77.3348%" y="431.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="77.0882%" y="405" width="0.0252%" height="15" fill="rgb(225,114,18)" fg:x="162397" fg:w="53"/><text x="77.3382%" y="415.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="77.0948%" y="389" width="0.0185%" height="15" fill="rgb(211,162,40)" fg:x="162411" fg:w="39"/><text x="77.3448%" y="399.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="77.0996%" y="373" width="0.0138%" height="15" fill="rgb(206,49,29)" fg:x="162421" fg:w="29"/><text x="77.3496%" y="383.50"></text></g><g><title>alloc::alloc::box_free (210 samples, 0.10%)</title><rect x="77.0203%" y="645" width="0.0997%" height="15" fill="rgb(244,8,6)" fg:x="162254" fg:w="210"/><text x="77.2703%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (210 samples, 0.10%)</title><rect x="77.0203%" y="629" width="0.0997%" height="15" fill="rgb(231,194,28)" fg:x="162254" fg:w="210"/><text x="77.2703%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (210 samples, 0.10%)</title><rect x="77.0203%" y="613" width="0.0997%" height="15" fill="rgb(210,69,5)" fg:x="162254" fg:w="210"/><text x="77.2703%" y="623.50"></text></g><g><title>cfree (209 samples, 0.10%)</title><rect x="77.0208%" y="597" width="0.0992%" height="15" fill="rgb(216,186,12)" fg:x="162255" fg:w="209"/><text x="77.2708%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt;&gt; (212 samples, 0.10%)</title><rect x="77.0203%" y="677" width="0.1006%" height="15" fill="rgb(238,61,15)" fg:x="162254" fg:w="212"/><text x="77.2703%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt; (212 samples, 0.10%)</title><rect x="77.0203%" y="661" width="0.1006%" height="15" fill="rgb(226,104,1)" fg:x="162254" fg:w="212"/><text x="77.2703%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (264 samples, 0.13%)</title><rect x="77.0060%" y="741" width="0.1253%" height="15" fill="rgb(229,128,15)" fg:x="162224" fg:w="264"/><text x="77.2560%" y="751.50"></text></g><g><title>async_task::utils::abort_on_panic (264 samples, 0.13%)</title><rect x="77.0060%" y="725" width="0.1253%" height="15" fill="rgb(247,110,15)" fg:x="162224" fg:w="264"/><text x="77.2560%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future::{{closure}} (264 samples, 0.13%)</title><rect x="77.0060%" y="709" width="0.1253%" height="15" fill="rgb(210,74,48)" fg:x="162224" fg:w="264"/><text x="77.2560%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (264 samples, 0.13%)</title><rect x="77.0060%" y="693" width="0.1253%" height="15" fill="rgb(246,121,10)" fg:x="162224" fg:w="264"/><text x="77.2560%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt;&gt; (22 samples, 0.01%)</title><rect x="77.1209%" y="677" width="0.0104%" height="15" fill="rgb(214,156,37)" fg:x="162466" fg:w="22"/><text x="77.3709%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt; (22 samples, 0.01%)</title><rect x="77.1209%" y="661" width="0.0104%" height="15" fill="rgb(214,210,34)" fg:x="162466" fg:w="22"/><text x="77.3709%" y="671.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.01%)</title><rect x="77.1209%" y="645" width="0.0104%" height="15" fill="rgb(237,93,35)" fg:x="162466" fg:w="22"/><text x="77.3709%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.01%)</title><rect x="77.1209%" y="629" width="0.0104%" height="15" fill="rgb(206,36,8)" fg:x="162466" fg:w="22"/><text x="77.3709%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.01%)</title><rect x="77.1209%" y="613" width="0.0104%" height="15" fill="rgb(208,151,12)" fg:x="162466" fg:w="22"/><text x="77.3709%" y="623.50"></text></g><g><title>cfree (22 samples, 0.01%)</title><rect x="77.1209%" y="597" width="0.0104%" height="15" fill="rgb(225,133,52)" fg:x="162466" fg:w="22"/><text x="77.3709%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (66 samples, 0.03%)</title><rect x="77.1337%" y="709" width="0.0313%" height="15" fill="rgb(231,71,53)" fg:x="162493" fg:w="66"/><text x="77.3837%" y="719.50"></text></g><g><title>cfree (62 samples, 0.03%)</title><rect x="77.1356%" y="693" width="0.0294%" height="15" fill="rgb(243,76,21)" fg:x="162497" fg:w="62"/><text x="77.3856%" y="703.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="77.1432%" y="677" width="0.0218%" height="15" fill="rgb(252,144,3)" fg:x="162513" fg:w="46"/><text x="77.3932%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (82 samples, 0.04%)</title><rect x="77.1314%" y="741" width="0.0389%" height="15" fill="rgb(231,199,10)" fg:x="162488" fg:w="82"/><text x="77.3814%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (77 samples, 0.04%)</title><rect x="77.1337%" y="725" width="0.0366%" height="15" fill="rgb(215,18,11)" fg:x="162493" fg:w="77"/><text x="77.3837%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15,167 samples, 7.20%)</title><rect x="69.9787%" y="757" width="7.1996%" height="15" fill="rgb(241,65,24)" fg:x="147420" fg:w="15167"/><text x="70.2287%" y="767.50">async_task..</text></g><g><title>async_task::runnable::Runnable::run (174 samples, 0.08%)</title><rect x="77.1784%" y="757" width="0.0826%" height="15" fill="rgb(251,192,38)" fg:x="162587" fg:w="174"/><text x="77.4284%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,318 samples, 7.75%)</title><rect x="69.5302%" y="805" width="7.7460%" height="15" fill="rgb(205,9,35)" fg:x="146475" fg:w="16318"/><text x="69.7802%" y="815.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,318 samples, 7.75%)</title><rect x="69.5302%" y="789" width="7.7460%" height="15" fill="rgb(229,225,49)" fg:x="146475" fg:w="16318"/><text x="69.7802%" y="799.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (16,318 samples, 7.75%)</title><rect x="69.5302%" y="773" width="7.7460%" height="15" fill="rgb(207,125,39)" fg:x="146475" fg:w="16318"/><text x="69.7802%" y="783.50">async_execu..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (32 samples, 0.02%)</title><rect x="77.2609%" y="757" width="0.0152%" height="15" fill="rgb(222,78,19)" fg:x="162761" fg:w="32"/><text x="77.5109%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (32 samples, 0.02%)</title><rect x="77.2609%" y="741" width="0.0152%" height="15" fill="rgb(248,207,20)" fg:x="162761" fg:w="32"/><text x="77.5109%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (32 samples, 0.02%)</title><rect x="77.2776%" y="789" width="0.0152%" height="15" fill="rgb(205,103,49)" fg:x="162796" fg:w="32"/><text x="77.5276%" y="799.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (26 samples, 0.01%)</title><rect x="77.2804%" y="773" width="0.0123%" height="15" fill="rgb(216,42,28)" fg:x="162802" fg:w="26"/><text x="77.5304%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (16,361 samples, 7.77%)</title><rect x="69.5297%" y="821" width="7.7664%" height="15" fill="rgb(213,205,53)" fg:x="146474" fg:w="16361"/><text x="69.7797%" y="831.50">async_execu..</text></g><g><title>async_executor::Runner::new (42 samples, 0.02%)</title><rect x="77.2761%" y="805" width="0.0199%" height="15" fill="rgb(239,140,53)" fg:x="162793" fg:w="42"/><text x="77.5261%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (50 samples, 0.02%)</title><rect x="77.3345%" y="597" width="0.0237%" height="15" fill="rgb(248,95,9)" fg:x="162916" fg:w="50"/><text x="77.5845%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (103 samples, 0.05%)</title><rect x="77.3208%" y="613" width="0.0489%" height="15" fill="rgb(254,58,47)" fg:x="162887" fg:w="103"/><text x="77.5708%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (24 samples, 0.01%)</title><rect x="77.3583%" y="597" width="0.0114%" height="15" fill="rgb(234,227,14)" fg:x="162966" fg:w="24"/><text x="77.6083%" y="607.50"></text></g><g><title>fastrand::usize (25 samples, 0.01%)</title><rect x="77.3730%" y="613" width="0.0119%" height="15" fill="rgb(205,192,45)" fg:x="162997" fg:w="25"/><text x="77.6230%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (25 samples, 0.01%)</title><rect x="77.3730%" y="597" width="0.0119%" height="15" fill="rgb(253,187,31)" fg:x="162997" fg:w="25"/><text x="77.6230%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.01%)</title><rect x="77.3730%" y="581" width="0.0119%" height="15" fill="rgb(222,6,32)" fg:x="162997" fg:w="25"/><text x="77.6230%" y="591.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (146 samples, 0.07%)</title><rect x="77.3174%" y="629" width="0.0693%" height="15" fill="rgb(249,190,19)" fg:x="162880" fg:w="146"/><text x="77.5674%" y="639.50"></text></g><g><title>async_executor::Ticker::sleep (26 samples, 0.01%)</title><rect x="77.3867%" y="629" width="0.0123%" height="15" fill="rgb(251,28,20)" fg:x="163026" fg:w="26"/><text x="77.6367%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (183 samples, 0.09%)</title><rect x="77.3127%" y="741" width="0.0869%" height="15" fill="rgb(210,223,40)" fg:x="162870" fg:w="183"/><text x="77.5627%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (182 samples, 0.09%)</title><rect x="77.3132%" y="725" width="0.0864%" height="15" fill="rgb(216,137,22)" fg:x="162871" fg:w="182"/><text x="77.5632%" y="735.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (180 samples, 0.09%)</title><rect x="77.3141%" y="709" width="0.0854%" height="15" fill="rgb(247,39,34)" fg:x="162873" fg:w="180"/><text x="77.5641%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 0.08%)</title><rect x="77.3146%" y="693" width="0.0850%" height="15" fill="rgb(239,43,50)" fg:x="162874" fg:w="179"/><text x="77.5646%" y="703.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (179 samples, 0.08%)</title><rect x="77.3146%" y="677" width="0.0850%" height="15" fill="rgb(241,212,9)" fg:x="162874" fg:w="179"/><text x="77.5646%" y="687.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (176 samples, 0.08%)</title><rect x="77.3160%" y="661" width="0.0835%" height="15" fill="rgb(205,8,2)" fg:x="162877" fg:w="176"/><text x="77.5660%" y="671.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (175 samples, 0.08%)</title><rect x="77.3165%" y="645" width="0.0831%" height="15" fill="rgb(217,173,54)" fg:x="162878" fg:w="175"/><text x="77.5665%" y="655.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (32 samples, 0.02%)</title><rect x="77.4081%" y="709" width="0.0152%" height="15" fill="rgb(208,149,52)" fg:x="163071" fg:w="32"/><text x="77.6581%" y="719.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (273 samples, 0.13%)</title><rect x="77.3075%" y="773" width="0.1296%" height="15" fill="rgb(239,99,40)" fg:x="162859" fg:w="273"/><text x="77.5575%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (272 samples, 0.13%)</title><rect x="77.3079%" y="757" width="0.1291%" height="15" fill="rgb(233,214,26)" fg:x="162860" fg:w="272"/><text x="77.5579%" y="767.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (79 samples, 0.04%)</title><rect x="77.3996%" y="741" width="0.0375%" height="15" fill="rgb(231,225,37)" fg:x="163053" fg:w="79"/><text x="77.6496%" y="751.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.03%)</title><rect x="77.4067%" y="725" width="0.0304%" height="15" fill="rgb(252,55,35)" fg:x="163068" fg:w="64"/><text x="77.6567%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.01%)</title><rect x="77.4532%" y="725" width="0.0104%" height="15" fill="rgb(239,43,18)" fg:x="163166" fg:w="22"/><text x="77.7032%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (54 samples, 0.03%)</title><rect x="77.4475%" y="757" width="0.0256%" height="15" fill="rgb(251,125,49)" fg:x="163154" fg:w="54"/><text x="77.6975%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (42 samples, 0.02%)</title><rect x="77.4532%" y="741" width="0.0199%" height="15" fill="rgb(212,83,54)" fg:x="163166" fg:w="42"/><text x="77.7032%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (354 samples, 0.17%)</title><rect x="77.3056%" y="805" width="0.1680%" height="15" fill="rgb(250,75,6)" fg:x="162855" fg:w="354"/><text x="77.5556%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (353 samples, 0.17%)</title><rect x="77.3060%" y="789" width="0.1676%" height="15" fill="rgb(252,36,40)" fg:x="162856" fg:w="353"/><text x="77.5560%" y="799.50"></text></g><g><title>async_executor::Runner::new (58 samples, 0.03%)</title><rect x="77.4461%" y="773" width="0.0275%" height="15" fill="rgb(230,91,51)" fg:x="163151" fg:w="58"/><text x="77.6961%" y="783.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16,740 samples, 7.95%)</title><rect x="69.5278%" y="853" width="7.9463%" height="15" fill="rgb(212,92,28)" fg:x="146470" fg:w="16740"/><text x="69.7778%" y="863.50">&lt;futures_li..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,738 samples, 7.95%)</title><rect x="69.5287%" y="837" width="7.9454%" height="15" fill="rgb(227,13,22)" fg:x="146472" fg:w="16738"/><text x="69.7787%" y="847.50">&lt;core::futu..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (375 samples, 0.18%)</title><rect x="77.2961%" y="821" width="0.1780%" height="15" fill="rgb(239,204,32)" fg:x="162835" fg:w="375"/><text x="77.5461%" y="831.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (24 samples, 0.01%)</title><rect x="77.4817%" y="837" width="0.0114%" height="15" fill="rgb(228,49,41)" fg:x="163226" fg:w="24"/><text x="77.7317%" y="847.50"></text></g><g><title>polling::Poller::wait (30 samples, 0.01%)</title><rect x="77.4969%" y="837" width="0.0142%" height="15" fill="rgb(206,95,6)" fg:x="163258" fg:w="30"/><text x="77.7469%" y="847.50"></text></g><g><title>polling::epoll::Poller::wait (26 samples, 0.01%)</title><rect x="77.4988%" y="821" width="0.0123%" height="15" fill="rgb(251,20,14)" fg:x="163262" fg:w="26"/><text x="77.7488%" y="831.50"></text></g><g><title>async_io::reactor::ReactorLock::react (90 samples, 0.04%)</title><rect x="77.4769%" y="853" width="0.0427%" height="15" fill="rgb(214,99,28)" fg:x="163216" fg:w="90"/><text x="77.7269%" y="863.50"></text></g><g><title>parking::Parker::park (30 samples, 0.01%)</title><rect x="77.5211%" y="853" width="0.0142%" height="15" fill="rgb(239,122,54)" fg:x="163309" fg:w="30"/><text x="77.7711%" y="863.50"></text></g><g><title>parking::Inner::park (30 samples, 0.01%)</title><rect x="77.5211%" y="837" width="0.0142%" height="15" fill="rgb(218,217,46)" fg:x="163309" fg:w="30"/><text x="77.7711%" y="847.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (16,878 samples, 8.01%)</title><rect x="69.5273%" y="885" width="8.0118%" height="15" fill="rgb(249,106,28)" fg:x="146469" fg:w="16878"/><text x="69.7773%" y="895.50">async_globa..</text></g><g><title>async_io::driver::block_on (16,877 samples, 8.01%)</title><rect x="69.5278%" y="869" width="8.0113%" height="15" fill="rgb(250,158,18)" fg:x="146470" fg:w="16877"/><text x="69.7778%" y="879.50">async_io::d..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (16,889 samples, 8.02%)</title><rect x="69.5254%" y="917" width="8.0170%" height="15" fill="rgb(226,137,29)" fg:x="146465" fg:w="16889"/><text x="69.7754%" y="927.50">async_globa..</text></g><g><title>async_global_executor::reactor::block_on (16,889 samples, 8.02%)</title><rect x="69.5254%" y="901" width="8.0170%" height="15" fill="rgb(210,188,1)" fg:x="146465" fg:w="16889"/><text x="69.7754%" y="911.50">async_globa..</text></g><g><title>std::panic::catch_unwind (16,895 samples, 8.02%)</title><rect x="69.5240%" y="1013" width="8.0199%" height="15" fill="rgb(227,84,42)" fg:x="146462" fg:w="16895"/><text x="69.7740%" y="1023.50">std::panic:..</text></g><g><title>std::panicking::try (16,895 samples, 8.02%)</title><rect x="69.5240%" y="997" width="8.0199%" height="15" fill="rgb(222,147,48)" fg:x="146462" fg:w="16895"/><text x="69.7740%" y="1007.50">std::panick..</text></g><g><title>std::panicking::try::do_call (16,895 samples, 8.02%)</title><rect x="69.5240%" y="981" width="8.0199%" height="15" fill="rgb(241,150,43)" fg:x="146462" fg:w="16895"/><text x="69.7740%" y="991.50">std::panick..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (16,895 samples, 8.02%)</title><rect x="69.5240%" y="965" width="8.0199%" height="15" fill="rgb(206,139,52)" fg:x="146462" fg:w="16895"/><text x="69.7740%" y="975.50">async_globa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16,895 samples, 8.02%)</title><rect x="69.5240%" y="949" width="8.0199%" height="15" fill="rgb(230,63,14)" fg:x="146462" fg:w="16895"/><text x="69.7740%" y="959.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,895 samples, 8.02%)</title><rect x="69.5240%" y="933" width="8.0199%" height="15" fill="rgb(247,8,20)" fg:x="146462" fg:w="16895"/><text x="69.7740%" y="943.50">std::thread..</text></g><g><title>core::ops::function::FnOnce::call_once (16,913 samples, 8.03%)</title><rect x="69.5221%" y="1045" width="8.0284%" height="15" fill="rgb(213,115,4)" fg:x="146458" fg:w="16913"/><text x="69.7721%" y="1055.50">core::ops::..</text></g><g><title>async_global_executor::threading::thread_main_loop (16,913 samples, 8.03%)</title><rect x="69.5221%" y="1029" width="8.0284%" height="15" fill="rgb(241,79,49)" fg:x="146458" fg:w="16913"/><text x="69.7721%" y="1039.50">async_globa..</text></g><g><title>async_std::task::builder::Builder::build (24 samples, 0.01%)</title><rect x="77.5557%" y="997" width="0.0114%" height="15" fill="rgb(222,42,35)" fg:x="163382" fg:w="24"/><text x="77.8057%" y="1007.50"></text></g><g><title>async_global_executor::executor::LOCAL_EXECUTOR::__getit (27 samples, 0.01%)</title><rect x="77.5970%" y="821" width="0.0128%" height="15" fill="rgb(247,59,23)" fg:x="163469" fg:w="27"/><text x="77.8470%" y="831.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (27 samples, 0.01%)</title><rect x="77.5970%" y="805" width="0.0128%" height="15" fill="rgb(247,93,18)" fg:x="163469" fg:w="27"/><text x="77.8470%" y="815.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="78.4220%" y="613" width="0.0104%" height="15" fill="rgb(249,107,47)" fg:x="165207" fg:w="22"/><text x="78.6720%" y="623.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (387 samples, 0.18%)</title><rect x="78.4325%" y="613" width="0.1837%" height="15" fill="rgb(219,27,1)" fg:x="165229" fg:w="387"/><text x="78.6825%" y="623.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (349 samples, 0.17%)</title><rect x="78.4505%" y="597" width="0.1657%" height="15" fill="rgb(217,82,32)" fg:x="165267" fg:w="349"/><text x="78.7005%" y="607.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (104 samples, 0.05%)</title><rect x="78.5668%" y="581" width="0.0494%" height="15" fill="rgb(250,129,47)" fg:x="165512" fg:w="104"/><text x="78.8168%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (104 samples, 0.05%)</title><rect x="78.5668%" y="565" width="0.0494%" height="15" fill="rgb(253,88,35)" fg:x="165512" fg:w="104"/><text x="78.8168%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (96 samples, 0.05%)</title><rect x="78.8725%" y="501" width="0.0456%" height="15" fill="rgb(245,221,14)" fg:x="166156" fg:w="96"/><text x="79.1225%" y="511.50"></text></g><g><title>core::mem::replace (96 samples, 0.05%)</title><rect x="78.8725%" y="485" width="0.0456%" height="15" fill="rgb(217,119,54)" fg:x="166156" fg:w="96"/><text x="79.1225%" y="495.50"></text></g><g><title>core::ptr::read (87 samples, 0.04%)</title><rect x="78.8768%" y="469" width="0.0413%" height="15" fill="rgb(247,128,31)" fg:x="166165" fg:w="87"/><text x="79.1268%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (262 samples, 0.12%)</title><rect x="78.9314%" y="485" width="0.1244%" height="15" fill="rgb(211,99,22)" fg:x="166280" fg:w="262"/><text x="79.1814%" y="495.50"></text></g><g><title>core::mem::replace (262 samples, 0.12%)</title><rect x="78.9314%" y="469" width="0.1244%" height="15" fill="rgb(212,20,17)" fg:x="166280" fg:w="262"/><text x="79.1814%" y="479.50"></text></g><g><title>core::ptr::read (261 samples, 0.12%)</title><rect x="78.9319%" y="453" width="0.1239%" height="15" fill="rgb(209,159,29)" fg:x="166281" fg:w="261"/><text x="79.1819%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (299 samples, 0.14%)</title><rect x="78.9181%" y="501" width="0.1419%" height="15" fill="rgb(222,177,53)" fg:x="166252" fg:w="299"/><text x="79.1681%" y="511.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (78 samples, 0.04%)</title><rect x="79.0600%" y="485" width="0.0370%" height="15" fill="rgb(234,46,43)" fg:x="166551" fg:w="78"/><text x="79.3100%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (105 samples, 0.05%)</title><rect x="79.0600%" y="501" width="0.0498%" height="15" fill="rgb(208,108,14)" fg:x="166551" fg:w="105"/><text x="79.3100%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (27 samples, 0.01%)</title><rect x="79.0970%" y="485" width="0.0128%" height="15" fill="rgb(226,78,53)" fg:x="166629" fg:w="27"/><text x="79.3470%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.01%)</title><rect x="79.0970%" y="469" width="0.0128%" height="15" fill="rgb(230,20,41)" fg:x="166629" fg:w="27"/><text x="79.3470%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (25 samples, 0.01%)</title><rect x="79.0980%" y="453" width="0.0119%" height="15" fill="rgb(213,195,35)" fg:x="166631" fg:w="25"/><text x="79.3480%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (25 samples, 0.01%)</title><rect x="79.0980%" y="437" width="0.0119%" height="15" fill="rgb(242,62,36)" fg:x="166631" fg:w="25"/><text x="79.3480%" y="447.50"></text></g><g><title>core::task::wake::Waker::will_wake (80 samples, 0.04%)</title><rect x="79.1099%" y="501" width="0.0380%" height="15" fill="rgb(222,210,37)" fg:x="166656" fg:w="80"/><text x="79.3599%" y="511.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (80 samples, 0.04%)</title><rect x="79.1099%" y="485" width="0.0380%" height="15" fill="rgb(232,107,19)" fg:x="166656" fg:w="80"/><text x="79.3599%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (78 samples, 0.04%)</title><rect x="79.1108%" y="469" width="0.0370%" height="15" fill="rgb(235,85,17)" fg:x="166658" fg:w="78"/><text x="79.3608%" y="479.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (78 samples, 0.04%)</title><rect x="79.1108%" y="453" width="0.0370%" height="15" fill="rgb(219,195,31)" fg:x="166658" fg:w="78"/><text x="79.3608%" y="463.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,003 samples, 0.48%)</title><rect x="78.7937%" y="517" width="0.4761%" height="15" fill="rgb(231,183,30)" fg:x="165990" fg:w="1003"/><text x="79.0437%" y="527.50"></text></g><g><title>event_listener::Inner::lock (257 samples, 0.12%)</title><rect x="79.1478%" y="501" width="0.1220%" height="15" fill="rgb(212,0,11)" fg:x="166736" fg:w="257"/><text x="79.3978%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (255 samples, 0.12%)</title><rect x="79.1488%" y="485" width="0.1210%" height="15" fill="rgb(249,53,54)" fg:x="166738" fg:w="255"/><text x="79.3988%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (255 samples, 0.12%)</title><rect x="79.1488%" y="469" width="0.1210%" height="15" fill="rgb(211,118,13)" fg:x="166738" fg:w="255"/><text x="79.3988%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (255 samples, 0.12%)</title><rect x="79.1488%" y="453" width="0.1210%" height="15" fill="rgb(237,42,9)" fg:x="166738" fg:w="255"/><text x="79.3988%" y="463.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (508 samples, 0.24%)</title><rect x="79.2717%" y="517" width="0.2411%" height="15" fill="rgb(227,68,32)" fg:x="166997" fg:w="508"/><text x="79.5217%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (508 samples, 0.24%)</title><rect x="79.2717%" y="501" width="0.2411%" height="15" fill="rgb(238,10,7)" fg:x="166997" fg:w="508"/><text x="79.5217%" y="511.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (34 samples, 0.02%)</title><rect x="79.4967%" y="485" width="0.0161%" height="15" fill="rgb(224,42,12)" fg:x="167471" fg:w="34"/><text x="79.7467%" y="495.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1,784 samples, 0.85%)</title><rect x="78.6917%" y="533" width="0.8468%" height="15" fill="rgb(252,190,5)" fg:x="165775" fg:w="1784"/><text x="78.9417%" y="543.50"></text></g><g><title>event_listener::Event::listen (54 samples, 0.03%)</title><rect x="79.5129%" y="517" width="0.0256%" height="15" fill="rgb(220,214,39)" fg:x="167505" fg:w="54"/><text x="79.7629%" y="527.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (114 samples, 0.05%)</title><rect x="79.6059%" y="501" width="0.0541%" height="15" fill="rgb(247,98,4)" fg:x="167701" fg:w="114"/><text x="79.8559%" y="511.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (29 samples, 0.01%)</title><rect x="79.9040%" y="405" width="0.0138%" height="15" fill="rgb(211,60,12)" fg:x="168329" fg:w="29"/><text x="80.1540%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (95 samples, 0.05%)</title><rect x="80.0194%" y="389" width="0.0451%" height="15" fill="rgb(224,42,10)" fg:x="168572" fg:w="95"/><text x="80.2694%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::nth (26 samples, 0.01%)</title><rect x="80.0697%" y="325" width="0.0123%" height="15" fill="rgb(217,167,4)" fg:x="168678" fg:w="26"/><text x="80.3197%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (37 samples, 0.02%)</title><rect x="80.1442%" y="293" width="0.0176%" height="15" fill="rgb(253,18,17)" fg:x="168835" fg:w="37"/><text x="80.3942%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (34 samples, 0.02%)</title><rect x="80.1456%" y="277" width="0.0161%" height="15" fill="rgb(249,186,44)" fg:x="168838" fg:w="34"/><text x="80.3956%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.03%)</title><rect x="80.1618%" y="293" width="0.0256%" height="15" fill="rgb(254,124,54)" fg:x="168872" fg:w="54"/><text x="80.4118%" y="303.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (35 samples, 0.02%)</title><rect x="80.1874%" y="293" width="0.0166%" height="15" fill="rgb(220,124,39)" fg:x="168926" fg:w="35"/><text x="80.4374%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (144 samples, 0.07%)</title><rect x="80.2040%" y="277" width="0.0684%" height="15" fill="rgb(225,96,46)" fg:x="168961" fg:w="144"/><text x="80.4540%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (34 samples, 0.02%)</title><rect x="80.2562%" y="261" width="0.0161%" height="15" fill="rgb(221,106,12)" fg:x="169071" fg:w="34"/><text x="80.5062%" y="271.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (34 samples, 0.02%)</title><rect x="80.2562%" y="245" width="0.0161%" height="15" fill="rgb(227,133,23)" fg:x="169071" fg:w="34"/><text x="80.5062%" y="255.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (32 samples, 0.02%)</title><rect x="80.2572%" y="229" width="0.0152%" height="15" fill="rgb(216,44,52)" fg:x="169073" fg:w="32"/><text x="80.5072%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (32 samples, 0.02%)</title><rect x="80.2572%" y="213" width="0.0152%" height="15" fill="rgb(239,149,7)" fg:x="169073" fg:w="32"/><text x="80.5072%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (448 samples, 0.21%)</title><rect x="80.0683%" y="341" width="0.2127%" height="15" fill="rgb(211,157,31)" fg:x="168675" fg:w="448"/><text x="80.3183%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (419 samples, 0.20%)</title><rect x="80.0820%" y="325" width="0.1989%" height="15" fill="rgb(206,215,22)" fg:x="168704" fg:w="419"/><text x="80.3320%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (339 samples, 0.16%)</title><rect x="80.1200%" y="309" width="0.1609%" height="15" fill="rgb(208,113,15)" fg:x="168784" fg:w="339"/><text x="80.3700%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (162 samples, 0.08%)</title><rect x="80.2040%" y="293" width="0.0769%" height="15" fill="rgb(207,189,15)" fg:x="168961" fg:w="162"/><text x="80.4540%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (500 samples, 0.24%)</title><rect x="80.0645%" y="389" width="0.2373%" height="15" fill="rgb(231,115,4)" fg:x="168667" fg:w="500"/><text x="80.3145%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (500 samples, 0.24%)</title><rect x="80.0645%" y="373" width="0.2373%" height="15" fill="rgb(253,117,2)" fg:x="168667" fg:w="500"/><text x="80.3145%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (500 samples, 0.24%)</title><rect x="80.0645%" y="357" width="0.2373%" height="15" fill="rgb(248,48,24)" fg:x="168667" fg:w="500"/><text x="80.3145%" y="367.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (44 samples, 0.02%)</title><rect x="80.2809%" y="341" width="0.0209%" height="15" fill="rgb(241,28,46)" fg:x="169123" fg:w="44"/><text x="80.5309%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (31 samples, 0.01%)</title><rect x="80.4589%" y="373" width="0.0147%" height="15" fill="rgb(216,165,52)" fg:x="169498" fg:w="31"/><text x="80.7089%" y="383.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="81.6267%" y="357" width="0.0237%" height="15" fill="rgb(220,222,34)" fg:x="171958" fg:w="50"/><text x="81.8767%" y="367.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="81.6267%" y="341" width="0.0237%" height="15" fill="rgb(247,222,49)" fg:x="171958" fg:w="50"/><text x="81.8767%" y="351.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="81.6276%" y="325" width="0.0228%" height="15" fill="rgb(240,10,31)" fg:x="171960" fg:w="48"/><text x="81.8776%" y="335.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="81.6290%" y="309" width="0.0214%" height="15" fill="rgb(221,199,35)" fg:x="171963" fg:w="45"/><text x="81.8790%" y="319.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="81.6328%" y="293" width="0.0176%" height="15" fill="rgb(230,223,11)" fg:x="171971" fg:w="37"/><text x="81.8828%" y="303.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="81.6366%" y="277" width="0.0138%" height="15" fill="rgb(218,82,45)" fg:x="171979" fg:w="29"/><text x="81.8866%" y="287.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (2,156 samples, 1.02%)</title><rect x="81.6504%" y="357" width="1.0234%" height="15" fill="rgb(233,213,33)" fg:x="172008" fg:w="2156"/><text x="81.9004%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,930 samples, 0.92%)</title><rect x="81.7577%" y="341" width="0.9162%" height="15" fill="rgb(210,143,52)" fg:x="172234" fg:w="1930"/><text x="82.0077%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1,930 samples, 0.92%)</title><rect x="81.7577%" y="325" width="0.9162%" height="15" fill="rgb(206,95,4)" fg:x="172234" fg:w="1930"/><text x="82.0077%" y="335.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="82.6629%" y="309" width="0.0109%" height="15" fill="rgb(246,164,46)" fg:x="174141" fg:w="23"/><text x="82.9129%" y="319.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (4,695 samples, 2.23%)</title><rect x="80.4736%" y="373" width="2.2287%" height="15" fill="rgb(213,210,47)" fg:x="169529" fg:w="4695"/><text x="80.7236%" y="383.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (60 samples, 0.03%)</title><rect x="82.6738%" y="357" width="0.0285%" height="15" fill="rgb(210,12,38)" fg:x="174164" fg:w="60"/><text x="82.9238%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.02%)</title><rect x="82.6862%" y="341" width="0.0161%" height="15" fill="rgb(252,192,54)" fg:x="174190" fg:w="34"/><text x="82.9362%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.02%)</title><rect x="82.6862%" y="325" width="0.0161%" height="15" fill="rgb(242,92,6)" fg:x="174190" fg:w="34"/><text x="82.9362%" y="335.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (51 samples, 0.02%)</title><rect x="82.7023%" y="373" width="0.0242%" height="15" fill="rgb(253,154,15)" fg:x="174224" fg:w="51"/><text x="82.9523%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.02%)</title><rect x="82.7265%" y="373" width="0.0199%" height="15" fill="rgb(209,20,43)" fg:x="174275" fg:w="42"/><text x="82.9765%" y="383.50"></text></g><g><title>async_executor::steal (5,161 samples, 2.45%)</title><rect x="80.3032%" y="389" width="2.4499%" height="15" fill="rgb(232,28,49)" fg:x="169170" fg:w="5161"/><text x="80.5532%" y="399.50">as..</text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="83.9754%" y="357" width="0.0209%" height="15" fill="rgb(248,131,53)" fg:x="176906" fg:w="44"/><text x="84.2254%" y="367.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="83.9788%" y="341" width="0.0176%" height="15" fill="rgb(214,16,30)" fg:x="176913" fg:w="37"/><text x="84.2288%" y="351.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="83.9797%" y="325" width="0.0166%" height="15" fill="rgb(245,16,0)" fg:x="176915" fg:w="35"/><text x="84.2297%" y="335.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="83.9807%" y="309" width="0.0157%" height="15" fill="rgb(245,17,35)" fg:x="176917" fg:w="33"/><text x="84.2307%" y="319.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="83.9840%" y="293" width="0.0123%" height="15" fill="rgb(249,27,53)" fg:x="176924" fg:w="26"/><text x="84.2340%" y="303.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="83.9859%" y="277" width="0.0104%" height="15" fill="rgb(214,73,24)" fg:x="176928" fg:w="22"/><text x="84.2359%" y="287.50"></text></g><g><title>concurrent_queue::full_fence (28 samples, 0.01%)</title><rect x="83.9968%" y="357" width="0.0133%" height="15" fill="rgb(223,84,37)" fg:x="176951" fg:w="28"/><text x="84.2468%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (28 samples, 0.01%)</title><rect x="83.9968%" y="341" width="0.0133%" height="15" fill="rgb(210,109,28)" fg:x="176951" fg:w="28"/><text x="84.2468%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.01%)</title><rect x="83.9968%" y="325" width="0.0133%" height="15" fill="rgb(208,186,6)" fg:x="176951" fg:w="28"/><text x="84.2468%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.01%)</title><rect x="83.9968%" y="309" width="0.0133%" height="15" fill="rgb(235,201,30)" fg:x="176951" fg:w="28"/><text x="84.2468%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (366 samples, 0.17%)</title><rect x="84.0120%" y="357" width="0.1737%" height="15" fill="rgb(216,198,48)" fg:x="176983" fg:w="366"/><text x="84.2620%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (343 samples, 0.16%)</title><rect x="84.0229%" y="341" width="0.1628%" height="15" fill="rgb(254,186,25)" fg:x="177006" fg:w="343"/><text x="84.2729%" y="351.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,416 samples, 1.15%)</title><rect x="83.0393%" y="373" width="1.1468%" height="15" fill="rgb(227,87,5)" fg:x="174934" fg:w="2416"/><text x="83.2893%" y="383.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="84.6348%" y="357" width="0.0123%" height="15" fill="rgb(236,205,25)" fg:x="178295" fg:w="26"/><text x="84.8848%" y="367.50"></text></g><g><title>[unknown] (26 samples, 0.01%)</title><rect x="84.6348%" y="341" width="0.0123%" height="15" fill="rgb(229,99,32)" fg:x="178295" fg:w="26"/><text x="84.8848%" y="351.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="84.6352%" y="325" width="0.0119%" height="15" fill="rgb(231,177,31)" fg:x="178296" fg:w="25"/><text x="84.8852%" y="335.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="84.6367%" y="309" width="0.0104%" height="15" fill="rgb(246,15,2)" fg:x="178299" fg:w="22"/><text x="84.8867%" y="319.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (34 samples, 0.02%)</title><rect x="84.6590%" y="357" width="0.0161%" height="15" fill="rgb(207,39,15)" fg:x="178346" fg:w="34"/><text x="84.9090%" y="367.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="85.0145%" y="341" width="0.0104%" height="15" fill="rgb(207,44,9)" fg:x="179095" fg:w="22"/><text x="85.2645%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (725 samples, 0.34%)</title><rect x="84.6837%" y="357" width="0.3441%" height="15" fill="rgb(225,224,33)" fg:x="178398" fg:w="725"/><text x="84.9337%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (38 samples, 0.02%)</title><rect x="85.0297%" y="357" width="0.0180%" height="15" fill="rgb(252,151,3)" fg:x="179127" fg:w="38"/><text x="85.2797%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (38 samples, 0.02%)</title><rect x="85.0297%" y="341" width="0.0180%" height="15" fill="rgb(211,140,13)" fg:x="179127" fg:w="38"/><text x="85.2797%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (81 samples, 0.04%)</title><rect x="85.0478%" y="357" width="0.0384%" height="15" fill="rgb(239,225,17)" fg:x="179165" fg:w="81"/><text x="85.2978%" y="367.50"></text></g><g><title>core::ptr::read (81 samples, 0.04%)</title><rect x="85.0478%" y="341" width="0.0384%" height="15" fill="rgb(223,170,52)" fg:x="179165" fg:w="81"/><text x="85.2978%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (535 samples, 0.25%)</title><rect x="85.0910%" y="357" width="0.2540%" height="15" fill="rgb(212,64,21)" fg:x="179256" fg:w="535"/><text x="85.3410%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (535 samples, 0.25%)</title><rect x="85.0910%" y="341" width="0.2540%" height="15" fill="rgb(236,126,48)" fg:x="179256" fg:w="535"/><text x="85.3410%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (81 samples, 0.04%)</title><rect x="85.3463%" y="357" width="0.0384%" height="15" fill="rgb(209,135,11)" fg:x="179794" fg:w="81"/><text x="85.5963%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_or (81 samples, 0.04%)</title><rect x="85.3463%" y="341" width="0.0384%" height="15" fill="rgb(228,126,40)" fg:x="179794" fg:w="81"/><text x="85.5963%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (5,668 samples, 2.69%)</title><rect x="82.7531%" y="389" width="2.6905%" height="15" fill="rgb(205,196,36)" fg:x="174331" fg:w="5668"/><text x="83.0031%" y="399.50">co..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2,649 samples, 1.26%)</title><rect x="84.1862%" y="373" width="1.2575%" height="15" fill="rgb(243,160,33)" fg:x="177350" fg:w="2649"/><text x="84.4362%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (124 samples, 0.06%)</title><rect x="85.3848%" y="357" width="0.0589%" height="15" fill="rgb(210,84,20)" fg:x="179875" fg:w="124"/><text x="85.6348%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (124 samples, 0.06%)</title><rect x="85.3848%" y="341" width="0.0589%" height="15" fill="rgb(228,213,30)" fg:x="179875" fg:w="124"/><text x="85.6348%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::has_writers_waiting (52 samples, 0.02%)</title><rect x="85.5519%" y="325" width="0.0247%" height="15" fill="rgb(252,33,45)" fg:x="180227" fg:w="52"/><text x="85.8019%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (327 samples, 0.16%)</title><rect x="85.4436%" y="389" width="0.1552%" height="15" fill="rgb(254,227,20)" fg:x="179999" fg:w="327"/><text x="85.6936%" y="399.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (327 samples, 0.16%)</title><rect x="85.4436%" y="373" width="0.1552%" height="15" fill="rgb(228,192,2)" fg:x="179999" fg:w="327"/><text x="85.6936%" y="383.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (319 samples, 0.15%)</title><rect x="85.4474%" y="357" width="0.1514%" height="15" fill="rgb(233,32,8)" fg:x="180007" fg:w="319"/><text x="85.6974%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (319 samples, 0.15%)</title><rect x="85.4474%" y="341" width="0.1514%" height="15" fill="rgb(220,146,47)" fg:x="180007" fg:w="319"/><text x="85.6974%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_unlocked (47 samples, 0.02%)</title><rect x="85.5766%" y="325" width="0.0223%" height="15" fill="rgb(246,194,1)" fg:x="180279" fg:w="47"/><text x="85.8266%" y="335.50"></text></g><g><title>fastrand::usize (33 samples, 0.02%)</title><rect x="85.5998%" y="389" width="0.0157%" height="15" fill="rgb(218,203,9)" fg:x="180328" fg:w="33"/><text x="85.8498%" y="399.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (12,405 samples, 5.89%)</title><rect x="79.9183%" y="405" width="5.8885%" height="15" fill="rgb(237,97,14)" fg:x="168359" fg:w="12405"/><text x="80.1683%" y="415.50">async_e..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (403 samples, 0.19%)</title><rect x="85.6155%" y="389" width="0.1913%" height="15" fill="rgb(239,76,15)" fg:x="180361" fg:w="403"/><text x="85.8655%" y="399.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (386 samples, 0.18%)</title><rect x="85.6236%" y="373" width="0.1832%" height="15" fill="rgb(222,53,45)" fg:x="180378" fg:w="386"/><text x="85.8736%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (386 samples, 0.18%)</title><rect x="85.6236%" y="357" width="0.1832%" height="15" fill="rgb(237,88,5)" fg:x="180378" fg:w="386"/><text x="85.8736%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (41 samples, 0.02%)</title><rect x="85.7873%" y="341" width="0.0195%" height="15" fill="rgb(218,223,35)" fg:x="180723" fg:w="41"/><text x="86.0373%" y="351.50"></text></g><g><title>async_executor::Sleepers::notify (122 samples, 0.06%)</title><rect x="85.9914%" y="389" width="0.0579%" height="15" fill="rgb(243,229,38)" fg:x="181153" fg:w="122"/><text x="86.2414%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (76 samples, 0.04%)</title><rect x="86.0498%" y="389" width="0.0361%" height="15" fill="rgb(240,75,41)" fg:x="181276" fg:w="76"/><text x="86.2998%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.04%)</title><rect x="86.0498%" y="373" width="0.0361%" height="15" fill="rgb(209,110,37)" fg:x="181276" fg:w="76"/><text x="86.2998%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (59 samples, 0.03%)</title><rect x="86.0579%" y="357" width="0.0280%" height="15" fill="rgb(221,130,46)" fg:x="181293" fg:w="59"/><text x="86.3079%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (59 samples, 0.03%)</title><rect x="86.0579%" y="341" width="0.0280%" height="15" fill="rgb(237,160,20)" fg:x="181293" fg:w="59"/><text x="86.3079%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (30 samples, 0.01%)</title><rect x="86.1011%" y="373" width="0.0142%" height="15" fill="rgb(234,126,24)" fg:x="181384" fg:w="30"/><text x="86.3511%" y="383.50"></text></g><g><title>core::mem::drop (32 samples, 0.02%)</title><rect x="86.5017%" y="309" width="0.0152%" height="15" fill="rgb(207,177,9)" fg:x="182228" fg:w="32"/><text x="86.7517%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (32 samples, 0.02%)</title><rect x="86.5017%" y="293" width="0.0152%" height="15" fill="rgb(231,191,33)" fg:x="182228" fg:w="32"/><text x="86.7517%" y="303.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.02%)</title><rect x="86.5017%" y="277" width="0.0152%" height="15" fill="rgb(207,42,1)" fg:x="182228" fg:w="32"/><text x="86.7517%" y="287.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (32 samples, 0.02%)</title><rect x="86.5017%" y="261" width="0.0152%" height="15" fill="rgb(218,34,50)" fg:x="182228" fg:w="32"/><text x="86.7517%" y="271.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (32 samples, 0.02%)</title><rect x="86.5017%" y="245" width="0.0152%" height="15" fill="rgb(254,126,39)" fg:x="182228" fg:w="32"/><text x="86.7517%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (713 samples, 0.34%)</title><rect x="86.5174%" y="309" width="0.3385%" height="15" fill="rgb(251,17,26)" fg:x="182261" fg:w="713"/><text x="86.7674%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_swap (713 samples, 0.34%)</title><rect x="86.5174%" y="293" width="0.3385%" height="15" fill="rgb(252,215,34)" fg:x="182261" fg:w="713"/><text x="86.7674%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (24 samples, 0.01%)</title><rect x="86.8687%" y="261" width="0.0114%" height="15" fill="rgb(217,120,44)" fg:x="183001" fg:w="24"/><text x="87.1187%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.01%)</title><rect x="86.8687%" y="245" width="0.0114%" height="15" fill="rgb(211,31,11)" fg:x="183001" fg:w="24"/><text x="87.1187%" y="255.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (84 samples, 0.04%)</title><rect x="86.8558%" y="309" width="0.0399%" height="15" fill="rgb(222,69,51)" fg:x="182974" fg:w="84"/><text x="87.1058%" y="319.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (57 samples, 0.03%)</title><rect x="86.8687%" y="293" width="0.0271%" height="15" fill="rgb(215,229,42)" fg:x="183001" fg:w="57"/><text x="87.1187%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (57 samples, 0.03%)</title><rect x="86.8687%" y="277" width="0.0271%" height="15" fill="rgb(212,102,15)" fg:x="183001" fg:w="57"/><text x="87.1187%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wake (33 samples, 0.02%)</title><rect x="86.8801%" y="261" width="0.0157%" height="15" fill="rgb(205,179,41)" fg:x="183025" fg:w="33"/><text x="87.1301%" y="271.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.02%)</title><rect x="86.8957%" y="309" width="0.0176%" height="15" fill="rgb(219,148,46)" fg:x="183058" fg:w="37"/><text x="87.1457%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.01%)</title><rect x="86.8995%" y="293" width="0.0138%" height="15" fill="rgb(243,40,19)" fg:x="183066" fg:w="29"/><text x="87.1495%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (29 samples, 0.01%)</title><rect x="86.8995%" y="277" width="0.0138%" height="15" fill="rgb(208,206,34)" fg:x="183066" fg:w="29"/><text x="87.1495%" y="287.50"></text></g><g><title>parking::Inner::unpark (9,344 samples, 4.44%)</title><rect x="86.4851%" y="325" width="4.4355%" height="15" fill="rgb(244,184,38)" fg:x="182193" fg:w="9344"/><text x="86.7351%" y="335.50">parki..</text></g><g><title>syscall (8,442 samples, 4.01%)</title><rect x="86.9133%" y="309" width="4.0073%" height="15" fill="rgb(244,151,47)" fg:x="183095" fg:w="8442"/><text x="87.1633%" y="319.50">sysc..</text></g><g><title>[unknown] (8,408 samples, 3.99%)</title><rect x="86.9294%" y="293" width="3.9912%" height="15" fill="rgb(236,134,42)" fg:x="183129" fg:w="8408"/><text x="87.1794%" y="303.50">[unk..</text></g><g><title>[unknown] (8,359 samples, 3.97%)</title><rect x="86.9527%" y="277" width="3.9679%" height="15" fill="rgb(233,93,22)" fg:x="183178" fg:w="8359"/><text x="87.2027%" y="287.50">[unk..</text></g><g><title>[unknown] (8,311 samples, 3.95%)</title><rect x="86.9755%" y="261" width="3.9451%" height="15" fill="rgb(211,202,10)" fg:x="183226" fg:w="8311"/><text x="87.2255%" y="271.50">[unk..</text></g><g><title>[unknown] (8,065 samples, 3.83%)</title><rect x="87.0922%" y="245" width="3.8284%" height="15" fill="rgb(240,63,8)" fg:x="183472" fg:w="8065"/><text x="87.3422%" y="255.50">[unk..</text></g><g><title>[unknown] (7,537 samples, 3.58%)</title><rect x="87.3429%" y="229" width="3.5777%" height="15" fill="rgb(214,9,4)" fg:x="184000" fg:w="7537"/><text x="87.5929%" y="239.50">[unk..</text></g><g><title>[unknown] (5,726 samples, 2.72%)</title><rect x="88.2025%" y="213" width="2.7181%" height="15" fill="rgb(243,66,45)" fg:x="185811" fg:w="5726"/><text x="88.4525%" y="223.50">[u..</text></g><g><title>[unknown] (4,281 samples, 2.03%)</title><rect x="88.8885%" y="197" width="2.0321%" height="15" fill="rgb(220,50,42)" fg:x="187256" fg:w="4281"/><text x="89.1385%" y="207.50">[..</text></g><g><title>[unknown] (3,670 samples, 1.74%)</title><rect x="89.1785%" y="181" width="1.7421%" height="15" fill="rgb(220,134,27)" fg:x="187867" fg:w="3670"/><text x="89.4285%" y="191.50"></text></g><g><title>[unknown] (2,042 samples, 0.97%)</title><rect x="89.9513%" y="165" width="0.9693%" height="15" fill="rgb(246,151,50)" fg:x="189495" fg:w="2042"/><text x="90.2013%" y="175.50"></text></g><g><title>[unknown] (720 samples, 0.34%)</title><rect x="90.5788%" y="149" width="0.3418%" height="15" fill="rgb(238,216,27)" fg:x="190817" fg:w="720"/><text x="90.8288%" y="159.50"></text></g><g><title>[unknown] (351 samples, 0.17%)</title><rect x="90.7540%" y="133" width="0.1666%" height="15" fill="rgb(250,92,11)" fg:x="191186" fg:w="351"/><text x="91.0040%" y="143.50"></text></g><g><title>[unknown] (90 samples, 0.04%)</title><rect x="90.8779%" y="117" width="0.0427%" height="15" fill="rgb(248,183,6)" fg:x="191447" fg:w="90"/><text x="91.1279%" y="127.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="90.9054%" y="101" width="0.0152%" height="15" fill="rgb(211,204,50)" fg:x="191505" fg:w="32"/><text x="91.1554%" y="111.50"></text></g><g><title>parking::Unparker::unpark (9,992 samples, 4.74%)</title><rect x="86.1780%" y="341" width="4.7431%" height="15" fill="rgb(252,55,47)" fg:x="181546" fg:w="9992"/><text x="86.4280%" y="351.50">parkin..</text></g><g><title>async_io::driver::block_on::{{closure}} (10,045 samples, 4.77%)</title><rect x="86.1619%" y="357" width="4.7683%" height="15" fill="rgb(240,198,32)" fg:x="181512" fg:w="10045"/><text x="86.4119%" y="367.50">async_..</text></g><g><title>core::task::wake::Waker::wake (10,209 samples, 4.85%)</title><rect x="86.0859%" y="389" width="4.8461%" height="15" fill="rgb(224,203,19)" fg:x="181352" fg:w="10209"/><text x="86.3359%" y="399.50">core::..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (10,146 samples, 4.82%)</title><rect x="86.1158%" y="373" width="4.8162%" height="15" fill="rgb(205,27,16)" fg:x="181415" fg:w="10146"/><text x="86.3658%" y="383.50">waker_..</text></g><g><title>async_executor::State::notify (10,856 samples, 5.15%)</title><rect x="85.8068%" y="405" width="5.1532%" height="15" fill="rgb(224,226,17)" fg:x="180764" fg:w="10856"/><text x="86.0568%" y="415.50">async_..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.03%)</title><rect x="90.9320%" y="389" width="0.0280%" height="15" fill="rgb(205,216,54)" fg:x="191561" fg:w="59"/><text x="91.1820%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (51 samples, 0.02%)</title><rect x="90.9358%" y="373" width="0.0242%" height="15" fill="rgb(248,168,46)" fg:x="191569" fg:w="51"/><text x="91.1858%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (51 samples, 0.02%)</title><rect x="90.9358%" y="357" width="0.0242%" height="15" fill="rgb(226,111,45)" fg:x="191569" fg:w="51"/><text x="91.1858%" y="367.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (38 samples, 0.02%)</title><rect x="91.0160%" y="389" width="0.0180%" height="15" fill="rgb(231,15,9)" fg:x="191738" fg:w="38"/><text x="91.2660%" y="399.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (109 samples, 0.05%)</title><rect x="91.0925%" y="341" width="0.0517%" height="15" fill="rgb(243,168,3)" fg:x="191899" fg:w="109"/><text x="91.3425%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (109 samples, 0.05%)</title><rect x="91.0925%" y="325" width="0.0517%" height="15" fill="rgb(221,220,54)" fg:x="191899" fg:w="109"/><text x="91.3425%" y="335.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (116 samples, 0.06%)</title><rect x="91.0906%" y="373" width="0.0551%" height="15" fill="rgb(232,174,38)" fg:x="191895" fg:w="116"/><text x="91.3406%" y="383.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (112 samples, 0.05%)</title><rect x="91.0925%" y="357" width="0.0532%" height="15" fill="rgb(205,14,38)" fg:x="191899" fg:w="112"/><text x="91.3425%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (76 samples, 0.04%)</title><rect x="91.1456%" y="373" width="0.0361%" height="15" fill="rgb(234,89,19)" fg:x="192011" fg:w="76"/><text x="91.3956%" y="383.50"></text></g><g><title>async_executor::Sleepers::insert (345 samples, 0.16%)</title><rect x="91.0360%" y="389" width="0.1638%" height="15" fill="rgb(216,68,51)" fg:x="191780" fg:w="345"/><text x="91.2860%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.02%)</title><rect x="91.1817%" y="373" width="0.0180%" height="15" fill="rgb(213,49,2)" fg:x="192087" fg:w="38"/><text x="91.4317%" y="383.50"></text></g><g><title>core::ptr::write (24 samples, 0.01%)</title><rect x="91.1883%" y="357" width="0.0114%" height="15" fill="rgb(242,146,30)" fg:x="192101" fg:w="24"/><text x="91.4383%" y="367.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (122 samples, 0.06%)</title><rect x="91.3725%" y="373" width="0.0579%" height="15" fill="rgb(224,188,11)" fg:x="192489" fg:w="122"/><text x="91.6225%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (122 samples, 0.06%)</title><rect x="91.3725%" y="357" width="0.0579%" height="15" fill="rgb(213,159,11)" fg:x="192489" fg:w="122"/><text x="91.6225%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.02%)</title><rect x="91.4304%" y="373" width="0.0247%" height="15" fill="rgb(229,13,31)" fg:x="192611" fg:w="52"/><text x="91.6804%" y="383.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (137 samples, 0.07%)</title><rect x="91.4618%" y="341" width="0.0650%" height="15" fill="rgb(209,103,11)" fg:x="192677" fg:w="137"/><text x="91.7118%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (137 samples, 0.07%)</title><rect x="91.4618%" y="325" width="0.0650%" height="15" fill="rgb(206,3,4)" fg:x="192677" fg:w="137"/><text x="91.7118%" y="335.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (154 samples, 0.07%)</title><rect x="91.4551%" y="373" width="0.0731%" height="15" fill="rgb(252,10,49)" fg:x="192663" fg:w="154"/><text x="91.7051%" y="383.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (140 samples, 0.07%)</title><rect x="91.4618%" y="357" width="0.0665%" height="15" fill="rgb(217,160,32)" fg:x="192677" fg:w="140"/><text x="91.7118%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.01%)</title><rect x="91.5339%" y="373" width="0.0114%" height="15" fill="rgb(249,196,0)" fg:x="192829" fg:w="24"/><text x="91.7839%" y="383.50"></text></g><g><title>core::ptr::write (22 samples, 0.01%)</title><rect x="91.5349%" y="357" width="0.0104%" height="15" fill="rgb(213,17,48)" fg:x="192831" fg:w="22"/><text x="91.7849%" y="367.50"></text></g><g><title>async_executor::Sleepers::update (775 samples, 0.37%)</title><rect x="91.2069%" y="389" width="0.3679%" height="15" fill="rgb(206,42,46)" fg:x="192140" fg:w="775"/><text x="91.4569%" y="399.50"></text></g><g><title>core::task::wake::Waker::will_wake (62 samples, 0.03%)</title><rect x="91.5453%" y="373" width="0.0294%" height="15" fill="rgb(212,105,24)" fg:x="192853" fg:w="62"/><text x="91.7953%" y="383.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (62 samples, 0.03%)</title><rect x="91.5453%" y="357" width="0.0294%" height="15" fill="rgb(243,216,30)" fg:x="192853" fg:w="62"/><text x="91.7953%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (635 samples, 0.30%)</title><rect x="91.5747%" y="389" width="0.3014%" height="15" fill="rgb(207,121,3)" fg:x="192915" fg:w="635"/><text x="91.8247%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (635 samples, 0.30%)</title><rect x="91.5747%" y="373" width="0.3014%" height="15" fill="rgb(249,78,0)" fg:x="192915" fg:w="635"/><text x="91.8247%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (408 samples, 0.19%)</title><rect x="91.6825%" y="357" width="0.1937%" height="15" fill="rgb(244,151,32)" fg:x="193142" fg:w="408"/><text x="91.9325%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (408 samples, 0.19%)</title><rect x="91.6825%" y="341" width="0.1937%" height="15" fill="rgb(228,63,25)" fg:x="193142" fg:w="408"/><text x="91.9325%" y="351.50"></text></g><g><title>syscall (173 samples, 0.08%)</title><rect x="91.7940%" y="325" width="0.0821%" height="15" fill="rgb(231,158,23)" fg:x="193377" fg:w="173"/><text x="92.0440%" y="335.50"></text></g><g><title>[unknown] (173 samples, 0.08%)</title><rect x="91.7940%" y="309" width="0.0821%" height="15" fill="rgb(248,107,23)" fg:x="193377" fg:w="173"/><text x="92.0440%" y="319.50"></text></g><g><title>[unknown] (173 samples, 0.08%)</title><rect x="91.7940%" y="293" width="0.0821%" height="15" fill="rgb(215,168,21)" fg:x="193377" fg:w="173"/><text x="92.0440%" y="303.50"></text></g><g><title>[unknown] (171 samples, 0.08%)</title><rect x="91.7950%" y="277" width="0.0812%" height="15" fill="rgb(227,83,22)" fg:x="193379" fg:w="171"/><text x="92.0450%" y="287.50"></text></g><g><title>[unknown] (165 samples, 0.08%)</title><rect x="91.7978%" y="261" width="0.0783%" height="15" fill="rgb(217,118,43)" fg:x="193385" fg:w="165"/><text x="92.0478%" y="271.50"></text></g><g><title>[unknown] (159 samples, 0.08%)</title><rect x="91.8007%" y="245" width="0.0755%" height="15" fill="rgb(229,220,41)" fg:x="193391" fg:w="159"/><text x="92.0507%" y="255.50"></text></g><g><title>[unknown] (138 samples, 0.07%)</title><rect x="91.8107%" y="229" width="0.0655%" height="15" fill="rgb(254,146,46)" fg:x="193412" fg:w="138"/><text x="92.0607%" y="239.50"></text></g><g><title>[unknown] (95 samples, 0.05%)</title><rect x="91.8311%" y="213" width="0.0451%" height="15" fill="rgb(233,208,31)" fg:x="193455" fg:w="95"/><text x="92.0811%" y="223.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="91.8429%" y="197" width="0.0332%" height="15" fill="rgb(222,162,7)" fg:x="193480" fg:w="70"/><text x="92.0929%" y="207.50"></text></g><g><title>[unknown] (63 samples, 0.03%)</title><rect x="91.8463%" y="181" width="0.0299%" height="15" fill="rgb(230,117,45)" fg:x="193487" fg:w="63"/><text x="92.0963%" y="191.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="91.8558%" y="165" width="0.0204%" height="15" fill="rgb(239,163,6)" fg:x="193507" fg:w="43"/><text x="92.1058%" y="175.50"></text></g><g><title>async_executor::Ticker::sleep (2,054 samples, 0.98%)</title><rect x="90.9600%" y="405" width="0.9750%" height="15" fill="rgb(246,130,17)" fg:x="191620" fg:w="2054"/><text x="91.2100%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (120 samples, 0.06%)</title><rect x="91.8781%" y="389" width="0.0570%" height="15" fill="rgb(216,84,5)" fg:x="193554" fg:w="120"/><text x="92.1281%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (103 samples, 0.05%)</title><rect x="91.8861%" y="373" width="0.0489%" height="15" fill="rgb(230,200,21)" fg:x="193571" fg:w="103"/><text x="92.1361%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (103 samples, 0.05%)</title><rect x="91.8861%" y="357" width="0.0489%" height="15" fill="rgb(224,2,8)" fg:x="193571" fg:w="103"/><text x="92.1361%" y="367.50"></text></g><g><title>async_executor::Sleepers::is_notified (25 samples, 0.01%)</title><rect x="92.0551%" y="389" width="0.0119%" height="15" fill="rgb(238,178,10)" fg:x="193927" fg:w="25"/><text x="92.3051%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.02%)</title><rect x="92.2189%" y="373" width="0.0214%" height="15" fill="rgb(242,153,24)" fg:x="194272" fg:w="45"/><text x="92.4689%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (45 samples, 0.02%)</title><rect x="92.2189%" y="357" width="0.0214%" height="15" fill="rgb(242,32,48)" fg:x="194272" fg:w="45"/><text x="92.4689%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (45 samples, 0.02%)</title><rect x="92.2189%" y="341" width="0.0214%" height="15" fill="rgb(227,36,0)" fg:x="194272" fg:w="45"/><text x="92.4689%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (36 samples, 0.02%)</title><rect x="92.2232%" y="325" width="0.0171%" height="15" fill="rgb(251,33,35)" fg:x="194281" fg:w="36"/><text x="92.4732%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (438 samples, 0.21%)</title><rect x="92.2431%" y="373" width="0.2079%" height="15" fill="rgb(232,168,51)" fg:x="194323" fg:w="438"/><text x="92.4931%" y="383.50"></text></g><g><title>async_executor::Sleepers::remove (834 samples, 0.40%)</title><rect x="92.0670%" y="389" width="0.3959%" height="15" fill="rgb(228,56,10)" fg:x="193952" fg:w="834"/><text x="92.3170%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (697 samples, 0.33%)</title><rect x="92.4629%" y="389" width="0.3309%" height="15" fill="rgb(231,10,26)" fg:x="194786" fg:w="697"/><text x="92.7129%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (697 samples, 0.33%)</title><rect x="92.4629%" y="373" width="0.3309%" height="15" fill="rgb(226,202,12)" fg:x="194786" fg:w="697"/><text x="92.7129%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (418 samples, 0.20%)</title><rect x="92.5953%" y="357" width="0.1984%" height="15" fill="rgb(251,49,21)" fg:x="195065" fg:w="418"/><text x="92.8453%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (418 samples, 0.20%)</title><rect x="92.5953%" y="341" width="0.1984%" height="15" fill="rgb(206,228,28)" fg:x="195065" fg:w="418"/><text x="92.8453%" y="351.50"></text></g><g><title>syscall (157 samples, 0.07%)</title><rect x="92.7192%" y="325" width="0.0745%" height="15" fill="rgb(205,198,31)" fg:x="195326" fg:w="157"/><text x="92.9692%" y="335.50"></text></g><g><title>[unknown] (155 samples, 0.07%)</title><rect x="92.7202%" y="309" width="0.0736%" height="15" fill="rgb(213,69,1)" fg:x="195328" fg:w="155"/><text x="92.9702%" y="319.50"></text></g><g><title>[unknown] (155 samples, 0.07%)</title><rect x="92.7202%" y="293" width="0.0736%" height="15" fill="rgb(209,177,9)" fg:x="195328" fg:w="155"/><text x="92.9702%" y="303.50"></text></g><g><title>[unknown] (154 samples, 0.07%)</title><rect x="92.7206%" y="277" width="0.0731%" height="15" fill="rgb(227,119,30)" fg:x="195329" fg:w="154"/><text x="92.9706%" y="287.50"></text></g><g><title>[unknown] (147 samples, 0.07%)</title><rect x="92.7240%" y="261" width="0.0698%" height="15" fill="rgb(234,106,41)" fg:x="195336" fg:w="147"/><text x="92.9740%" y="271.50"></text></g><g><title>[unknown] (143 samples, 0.07%)</title><rect x="92.7259%" y="245" width="0.0679%" height="15" fill="rgb(244,103,47)" fg:x="195340" fg:w="143"/><text x="92.9759%" y="255.50"></text></g><g><title>[unknown] (122 samples, 0.06%)</title><rect x="92.7358%" y="229" width="0.0579%" height="15" fill="rgb(212,211,25)" fg:x="195361" fg:w="122"/><text x="92.9858%" y="239.50"></text></g><g><title>[unknown] (81 samples, 0.04%)</title><rect x="92.7553%" y="213" width="0.0384%" height="15" fill="rgb(208,63,53)" fg:x="195402" fg:w="81"/><text x="93.0053%" y="223.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="92.7615%" y="197" width="0.0323%" height="15" fill="rgb(213,176,21)" fg:x="195415" fg:w="68"/><text x="93.0115%" y="207.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="92.7710%" y="181" width="0.0228%" height="15" fill="rgb(243,124,12)" fg:x="195435" fg:w="48"/><text x="93.0210%" y="191.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="92.7790%" y="165" width="0.0147%" height="15" fill="rgb(239,2,35)" fg:x="195452" fg:w="31"/><text x="93.0290%" y="175.50"></text></g><g><title>async_executor::Ticker::wake (2,115 samples, 1.00%)</title><rect x="91.9350%" y="405" width="1.0040%" height="15" fill="rgb(253,169,22)" fg:x="193674" fg:w="2115"/><text x="92.1850%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (303 samples, 0.14%)</title><rect x="92.7952%" y="389" width="0.1438%" height="15" fill="rgb(254,51,12)" fg:x="195486" fg:w="303"/><text x="93.0452%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (285 samples, 0.14%)</title><rect x="92.8037%" y="373" width="0.1353%" height="15" fill="rgb(244,17,47)" fg:x="195504" fg:w="285"/><text x="93.0537%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (285 samples, 0.14%)</title><rect x="92.8037%" y="357" width="0.1353%" height="15" fill="rgb(251,45,46)" fg:x="195504" fg:w="285"/><text x="93.0537%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,723 samples, 13.16%)</title><rect x="79.7815%" y="469" width="13.1598%" height="15" fill="rgb(223,87,43)" fg:x="168071" fg:w="27723"/><text x="80.0315%" y="479.50">&lt;core::future::from_..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (27,722 samples, 13.16%)</title><rect x="79.7820%" y="453" width="13.1593%" height="15" fill="rgb(230,132,31)" fg:x="168072" fg:w="27722"/><text x="80.0320%" y="463.50">async_executor::Tick..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (27,670 samples, 13.13%)</title><rect x="79.8067%" y="437" width="13.1347%" height="15" fill="rgb(206,99,1)" fg:x="168124" fg:w="27670"/><text x="80.0567%" y="447.50">&lt;futures_lite::futur..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (27,542 samples, 13.07%)</title><rect x="79.8675%" y="421" width="13.0739%" height="15" fill="rgb(227,110,25)" fg:x="168252" fg:w="27542"/><text x="80.1175%" y="431.50">async_executor::Tick..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (24 samples, 0.01%)</title><rect x="92.9466%" y="453" width="0.0114%" height="15" fill="rgb(217,182,7)" fg:x="195805" fg:w="24"/><text x="93.1966%" y="463.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (23 samples, 0.01%)</title><rect x="92.9471%" y="437" width="0.0109%" height="15" fill="rgb(250,176,4)" fg:x="195806" fg:w="23"/><text x="93.1971%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28,027 samples, 13.30%)</title><rect x="79.6600%" y="501" width="13.3041%" height="15" fill="rgb(244,98,30)" fg:x="167815" fg:w="28027"/><text x="79.9100%" y="511.50">&lt;core::future::from_..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (27,957 samples, 13.27%)</title><rect x="79.6933%" y="485" width="13.2709%" height="15" fill="rgb(228,150,42)" fg:x="167885" fg:w="27957"/><text x="79.9433%" y="495.50">async_executor::Runn..</text></g><g><title>async_executor::steal (43 samples, 0.02%)</title><rect x="92.9437%" y="469" width="0.0204%" height="15" fill="rgb(231,91,46)" fg:x="195799" fg:w="43"/><text x="93.1937%" y="479.50"></text></g><g><title>async_executor::Runner::runnable (86 samples, 0.04%)</title><rect x="92.9698%" y="501" width="0.0408%" height="15" fill="rgb(252,161,32)" fg:x="195854" fg:w="86"/><text x="93.2198%" y="511.50"></text></g><g><title>core::future::from_generator (41 samples, 0.02%)</title><rect x="92.9912%" y="485" width="0.0195%" height="15" fill="rgb(236,69,41)" fg:x="195899" fg:w="41"/><text x="93.2412%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.02%)</title><rect x="93.1483%" y="485" width="0.0152%" height="15" fill="rgb(212,160,3)" fg:x="196230" fg:w="32"/><text x="93.3983%" y="495.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (51 samples, 0.02%)</title><rect x="93.1635%" y="485" width="0.0242%" height="15" fill="rgb(216,5,50)" fg:x="196262" fg:w="51"/><text x="93.4135%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (75 samples, 0.04%)</title><rect x="93.1944%" y="485" width="0.0356%" height="15" fill="rgb(241,138,25)" fg:x="196327" fg:w="75"/><text x="93.4444%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (75 samples, 0.04%)</title><rect x="93.1944%" y="469" width="0.0356%" height="15" fill="rgb(239,42,18)" fg:x="196327" fg:w="75"/><text x="93.4444%" y="479.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (465 samples, 0.22%)</title><rect x="93.0107%" y="501" width="0.2207%" height="15" fill="rgb(239,40,7)" fg:x="195940" fg:w="465"/><text x="93.2607%" y="511.50"></text></g><g><title>async_task::runnable::Runnable::run (558 samples, 0.26%)</title><rect x="93.2314%" y="501" width="0.2649%" height="15" fill="rgb(239,11,31)" fg:x="196405" fg:w="558"/><text x="93.4814%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (76 samples, 0.04%)</title><rect x="93.4963%" y="501" width="0.0361%" height="15" fill="rgb(224,77,40)" fg:x="196963" fg:w="76"/><text x="93.7463%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (76 samples, 0.04%)</title><rect x="93.4963%" y="485" width="0.0361%" height="15" fill="rgb(226,15,5)" fg:x="196963" fg:w="76"/><text x="93.7463%" y="495.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (31,277 samples, 14.85%)</title><rect x="78.6864%" y="549" width="14.8469%" height="15" fill="rgb(254,188,5)" fg:x="165764" fg:w="31277"/><text x="78.9364%" y="559.50">&lt;futures_lite::future::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29,482 samples, 13.99%)</title><rect x="79.5385%" y="533" width="13.9948%" height="15" fill="rgb(241,148,52)" fg:x="167559" fg:w="29482"/><text x="79.7885%" y="543.50">&lt;core::future::from_g..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (29,416 samples, 13.96%)</title><rect x="79.5698%" y="517" width="13.9635%" height="15" fill="rgb(251,48,36)" fg:x="167625" fg:w="29416"/><text x="79.8198%" y="527.50">async_executor::Execu..</text></g><g><title>async_executor::Executor::state (37 samples, 0.02%)</title><rect x="93.5347%" y="549" width="0.0176%" height="15" fill="rgb(243,83,13)" fg:x="197044" fg:w="37"/><text x="93.7847%" y="559.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (31 samples, 0.01%)</title><rect x="93.5376%" y="533" width="0.0147%" height="15" fill="rgb(210,105,0)" fg:x="197050" fg:w="31"/><text x="93.7876%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (31 samples, 0.01%)</title><rect x="93.5376%" y="517" width="0.0147%" height="15" fill="rgb(239,60,36)" fg:x="197050" fg:w="31"/><text x="93.7876%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31,451 samples, 14.93%)</title><rect x="78.6247%" y="581" width="14.9295%" height="15" fill="rgb(210,20,0)" fg:x="165634" fg:w="31451"/><text x="78.8747%" y="591.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::run::{{closure}} (31,394 samples, 14.90%)</title><rect x="78.6518%" y="565" width="14.9024%" height="15" fill="rgb(244,26,53)" fg:x="165691" fg:w="31394"/><text x="78.9018%" y="575.50">async_executor::Executo..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (31,472 samples, 14.94%)</title><rect x="78.6171%" y="597" width="14.9394%" height="15" fill="rgb(240,100,49)" fg:x="165618" fg:w="31472"/><text x="78.8671%" y="607.50">&lt;async_std::task::build..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (32,524 samples, 15.44%)</title><rect x="78.1320%" y="677" width="15.4388%" height="15" fill="rgb(250,46,45)" fg:x="164596" fg:w="32524"/><text x="78.3820%" y="687.50">&lt;async_std::task::builde..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (32,524 samples, 15.44%)</title><rect x="78.1320%" y="661" width="15.4388%" height="15" fill="rgb(220,181,29)" fg:x="164596" fg:w="32524"/><text x="78.3820%" y="671.50">async_std::task::task_lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32,521 samples, 15.44%)</title><rect x="78.1334%" y="645" width="15.4374%" height="15" fill="rgb(213,137,33)" fg:x="164599" fg:w="32521"/><text x="78.3834%" y="655.50">std::thread::local::Loca..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32,474 samples, 15.42%)</title><rect x="78.1557%" y="629" width="15.4151%" height="15" fill="rgb(213,27,48)" fg:x="164646" fg:w="32474"/><text x="78.4057%" y="639.50">std::thread::local::Loca..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (31,504 samples, 14.95%)</title><rect x="78.6162%" y="613" width="14.9546%" height="15" fill="rgb(245,180,39)" fg:x="165616" fg:w="31504"/><text x="78.8662%" y="623.50">async_std::task::task_l..</text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current&lt;&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt; as core::future::future::Future&gt;::poll::{{closure}},core::task::poll::Poll&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (30 samples, 0.01%)</title><rect x="93.5566%" y="597" width="0.0142%" height="15" fill="rgb(212,158,42)" fg:x="197090" fg:w="30"/><text x="93.8066%" y="607.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;F&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="93.5566%" y="581" width="0.0142%" height="15" fill="rgb(228,193,18)" fg:x="197090" fg:w="30"/><text x="93.8066%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.01%)</title><rect x="93.5566%" y="565" width="0.0142%" height="15" fill="rgb(245,172,29)" fg:x="197090" fg:w="30"/><text x="93.8066%" y="575.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;F&gt; as core::ops::drop::Drop&gt;::drop::{{closure}} (30 samples, 0.01%)</title><rect x="93.5566%" y="549" width="0.0142%" height="15" fill="rgb(207,98,24)" fg:x="197090" fg:w="30"/><text x="93.8066%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (30 samples, 0.01%)</title><rect x="93.5566%" y="533" width="0.0142%" height="15" fill="rgb(249,92,26)" fg:x="197090" fg:w="30"/><text x="93.8066%" y="543.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::{{closure}} (30 samples, 0.01%)</title><rect x="93.5566%" y="517" width="0.0142%" height="15" fill="rgb(217,176,26)" fg:x="197090" fg:w="30"/><text x="93.8066%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (51 samples, 0.02%)</title><rect x="93.6914%" y="421" width="0.0242%" height="15" fill="rgb(221,8,39)" fg:x="197374" fg:w="51"/><text x="93.9414%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 0.03%)</title><rect x="93.6862%" y="485" width="0.0304%" height="15" fill="rgb(208,90,18)" fg:x="197363" fg:w="64"/><text x="93.9362%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 0.03%)</title><rect x="93.6862%" y="469" width="0.0304%" height="15" fill="rgb(207,202,30)" fg:x="197363" fg:w="64"/><text x="93.9362%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (59 samples, 0.03%)</title><rect x="93.6885%" y="453" width="0.0280%" height="15" fill="rgb(231,124,22)" fg:x="197368" fg:w="59"/><text x="93.9385%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (53 samples, 0.03%)</title><rect x="93.6914%" y="437" width="0.0252%" height="15" fill="rgb(206,15,5)" fg:x="197374" fg:w="53"/><text x="93.9414%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.03%)</title><rect x="93.6862%" y="533" width="0.0309%" height="15" fill="rgb(239,16,52)" fg:x="197363" fg:w="65"/><text x="93.9362%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (65 samples, 0.03%)</title><rect x="93.6862%" y="517" width="0.0309%" height="15" fill="rgb(245,213,29)" fg:x="197363" fg:w="65"/><text x="93.9362%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 0.03%)</title><rect x="93.6862%" y="501" width="0.0309%" height="15" fill="rgb(213,203,36)" fg:x="197363" fg:w="65"/><text x="93.9362%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (503 samples, 0.24%)</title><rect x="93.8803%" y="517" width="0.2388%" height="15" fill="rgb(209,55,18)" fg:x="197772" fg:w="503"/><text x="94.1303%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (47 samples, 0.02%)</title><rect x="94.1295%" y="501" width="0.0223%" height="15" fill="rgb(207,133,49)" fg:x="198297" fg:w="47"/><text x="94.3795%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (47 samples, 0.02%)</title><rect x="94.1295%" y="485" width="0.0223%" height="15" fill="rgb(240,33,46)" fg:x="198297" fg:w="47"/><text x="94.3795%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (922 samples, 0.44%)</title><rect x="93.7175%" y="533" width="0.4377%" height="15" fill="rgb(212,35,2)" fg:x="197429" fg:w="922"/><text x="93.9675%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (76 samples, 0.04%)</title><rect x="94.1191%" y="517" width="0.0361%" height="15" fill="rgb(231,119,28)" fg:x="198275" fg:w="76"/><text x="94.3691%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (41 samples, 0.02%)</title><rect x="94.1551%" y="533" width="0.0195%" height="15" fill="rgb(252,178,7)" fg:x="198351" fg:w="41"/><text x="94.4051%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.02%)</title><rect x="94.1551%" y="517" width="0.0195%" height="15" fill="rgb(251,91,4)" fg:x="198351" fg:w="41"/><text x="94.4051%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (37 samples, 0.02%)</title><rect x="94.1570%" y="501" width="0.0176%" height="15" fill="rgb(233,122,19)" fg:x="198355" fg:w="37"/><text x="94.4070%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (37 samples, 0.02%)</title><rect x="94.1570%" y="485" width="0.0176%" height="15" fill="rgb(231,208,46)" fg:x="198355" fg:w="37"/><text x="94.4070%" y="495.50"></text></g><g><title>fastrand::usize (52 samples, 0.02%)</title><rect x="94.1756%" y="533" width="0.0247%" height="15" fill="rgb(243,15,41)" fg:x="198394" fg:w="52"/><text x="94.4256%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 0.02%)</title><rect x="94.1813%" y="517" width="0.0190%" height="15" fill="rgb(210,32,43)" fg:x="198406" fg:w="40"/><text x="94.4313%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.02%)</title><rect x="94.1832%" y="501" width="0.0171%" height="15" fill="rgb(222,177,15)" fg:x="198410" fg:w="36"/><text x="94.4332%" y="511.50"></text></g><g><title>std::sync::poison::Flag::get (23 samples, 0.01%)</title><rect x="94.2002%" y="485" width="0.0109%" height="15" fill="rgb(244,121,34)" fg:x="198446" fg:w="23"/><text x="94.4502%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (23 samples, 0.01%)</title><rect x="94.2002%" y="469" width="0.0109%" height="15" fill="rgb(234,138,4)" fg:x="198446" fg:w="23"/><text x="94.4502%" y="479.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (28 samples, 0.01%)</title><rect x="94.2002%" y="517" width="0.0133%" height="15" fill="rgb(240,97,48)" fg:x="198446" fg:w="28"/><text x="94.4502%" y="527.50"></text></g><g><title>std::sync::poison::Flag::borrow (28 samples, 0.01%)</title><rect x="94.2002%" y="501" width="0.0133%" height="15" fill="rgb(237,65,54)" fg:x="198446" fg:w="28"/><text x="94.4502%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,170 samples, 0.56%)</title><rect x="93.6824%" y="549" width="0.5554%" height="15" fill="rgb(214,25,24)" fg:x="197355" fg:w="1170"/><text x="93.9324%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (79 samples, 0.04%)</title><rect x="94.2002%" y="533" width="0.0375%" height="15" fill="rgb(213,5,3)" fg:x="198446" fg:w="79"/><text x="94.4502%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (51 samples, 0.02%)</title><rect x="94.2135%" y="517" width="0.0242%" height="15" fill="rgb(219,81,29)" fg:x="198474" fg:w="51"/><text x="94.4635%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (51 samples, 0.02%)</title><rect x="94.2135%" y="501" width="0.0242%" height="15" fill="rgb(220,43,48)" fg:x="198474" fg:w="51"/><text x="94.4635%" y="511.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (73 samples, 0.03%)</title><rect x="94.3080%" y="517" width="0.0347%" height="15" fill="rgb(239,157,2)" fg:x="198673" fg:w="73"/><text x="94.5580%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (73 samples, 0.03%)</title><rect x="94.3080%" y="501" width="0.0347%" height="15" fill="rgb(213,104,43)" fg:x="198673" fg:w="73"/><text x="94.5580%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (245 samples, 0.12%)</title><rect x="94.2482%" y="533" width="0.1163%" height="15" fill="rgb(237,84,9)" fg:x="198547" fg:w="245"/><text x="94.4982%" y="543.50"></text></g><g><title>core::task::wake::Waker::will_wake (39 samples, 0.02%)</title><rect x="94.3460%" y="517" width="0.0185%" height="15" fill="rgb(252,6,33)" fg:x="198753" fg:w="39"/><text x="94.5960%" y="527.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (39 samples, 0.02%)</title><rect x="94.3460%" y="501" width="0.0185%" height="15" fill="rgb(251,172,22)" fg:x="198753" fg:w="39"/><text x="94.5960%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.01%)</title><rect x="94.3521%" y="485" width="0.0123%" height="15" fill="rgb(244,91,53)" fg:x="198766" fg:w="26"/><text x="94.6021%" y="495.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (26 samples, 0.01%)</title><rect x="94.3521%" y="469" width="0.0123%" height="15" fill="rgb(219,29,30)" fg:x="198766" fg:w="26"/><text x="94.6021%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,572 samples, 0.75%)</title><rect x="93.6525%" y="645" width="0.7462%" height="15" fill="rgb(213,3,15)" fg:x="197292" fg:w="1572"/><text x="93.9025%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1,559 samples, 0.74%)</title><rect x="93.6586%" y="629" width="0.7400%" height="15" fill="rgb(208,25,28)" fg:x="197305" fg:w="1559"/><text x="93.9086%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,548 samples, 0.73%)</title><rect x="93.6638%" y="613" width="0.7348%" height="15" fill="rgb(252,144,25)" fg:x="197316" fg:w="1548"/><text x="93.9138%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1,548 samples, 0.73%)</title><rect x="93.6638%" y="597" width="0.7348%" height="15" fill="rgb(226,220,25)" fg:x="197316" fg:w="1548"/><text x="93.9138%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,539 samples, 0.73%)</title><rect x="93.6681%" y="581" width="0.7305%" height="15" fill="rgb(212,131,28)" fg:x="197325" fg:w="1539"/><text x="93.9181%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1,521 samples, 0.72%)</title><rect x="93.6767%" y="565" width="0.7220%" height="15" fill="rgb(219,143,52)" fg:x="197343" fg:w="1521"/><text x="93.9267%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (339 samples, 0.16%)</title><rect x="94.2377%" y="549" width="0.1609%" height="15" fill="rgb(215,56,7)" fg:x="198525" fg:w="339"/><text x="94.4877%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (54 samples, 0.03%)</title><rect x="94.3730%" y="533" width="0.0256%" height="15" fill="rgb(239,59,51)" fg:x="198810" fg:w="54"/><text x="94.6230%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (53 samples, 0.03%)</title><rect x="94.3735%" y="517" width="0.0252%" height="15" fill="rgb(209,215,4)" fg:x="198811" fg:w="53"/><text x="94.6235%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (53 samples, 0.03%)</title><rect x="94.3735%" y="501" width="0.0252%" height="15" fill="rgb(221,118,39)" fg:x="198811" fg:w="53"/><text x="94.6235%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,745 samples, 0.83%)</title><rect x="93.5708%" y="677" width="0.8283%" height="15" fill="rgb(236,6,44)" fg:x="197120" fg:w="1745"/><text x="93.8208%" y="687.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,723 samples, 0.82%)</title><rect x="93.5812%" y="661" width="0.8179%" height="15" fill="rgb(216,122,9)" fg:x="197142" fg:w="1723"/><text x="93.8312%" y="671.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (34,302 samples, 16.28%)</title><rect x="78.1168%" y="693" width="16.2828%" height="15" fill="rgb(244,134,42)" fg:x="164564" fg:w="34302"/><text x="78.3668%" y="703.50">&lt;futures_lite::future::Or..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (37 samples, 0.02%)</title><rect x="94.4134%" y="613" width="0.0176%" height="15" fill="rgb(209,189,35)" fg:x="198895" fg:w="37"/><text x="94.6634%" y="623.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (37 samples, 0.02%)</title><rect x="94.4134%" y="597" width="0.0176%" height="15" fill="rgb(250,47,36)" fg:x="198895" fg:w="37"/><text x="94.6634%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (25 samples, 0.01%)</title><rect x="94.4191%" y="581" width="0.0119%" height="15" fill="rgb(252,112,4)" fg:x="198907" fg:w="25"/><text x="94.6691%" y="591.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (25 samples, 0.01%)</title><rect x="94.4191%" y="565" width="0.0119%" height="15" fill="rgb(221,79,51)" fg:x="198907" fg:w="25"/><text x="94.6691%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (25 samples, 0.01%)</title><rect x="94.4191%" y="549" width="0.0119%" height="15" fill="rgb(232,65,53)" fg:x="198907" fg:w="25"/><text x="94.6691%" y="559.50"></text></g><g><title>async_executor::Executor::state (57 samples, 0.03%)</title><rect x="94.4063%" y="693" width="0.0271%" height="15" fill="rgb(211,37,7)" fg:x="198880" fg:w="57"/><text x="94.6563%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (53 samples, 0.03%)</title><rect x="94.4082%" y="677" width="0.0252%" height="15" fill="rgb(234,221,18)" fg:x="198884" fg:w="53"/><text x="94.6582%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (53 samples, 0.03%)</title><rect x="94.4082%" y="661" width="0.0252%" height="15" fill="rgb(220,158,26)" fg:x="198884" fg:w="53"/><text x="94.6582%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (53 samples, 0.03%)</title><rect x="94.4082%" y="645" width="0.0252%" height="15" fill="rgb(220,70,6)" fg:x="198884" fg:w="53"/><text x="94.6582%" y="655.50"></text></g><g><title>once_cell::imp::initialize_or_wait (51 samples, 0.02%)</title><rect x="94.4091%" y="629" width="0.0242%" height="15" fill="rgb(250,39,48)" fg:x="198886" fg:w="51"/><text x="94.6591%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (34,432 samples, 16.34%)</title><rect x="78.0950%" y="709" width="16.3445%" height="15" fill="rgb(206,40,27)" fg:x="164518" fg:w="34432"/><text x="78.3450%" y="719.50">async_executor::Executor:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34,497 samples, 16.38%)</title><rect x="78.0950%" y="725" width="16.3754%" height="15" fill="rgb(247,80,36)" fg:x="164518" fg:w="34497"/><text x="78.3450%" y="735.50">&lt;core::future::from_gener..</text></g><g><title>async_io::driver::block_on (65 samples, 0.03%)</title><rect x="94.4395%" y="709" width="0.0309%" height="15" fill="rgb(222,9,20)" fg:x="198950" fg:w="65"/><text x="94.6895%" y="719.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="94.4770%" y="725" width="0.0209%" height="15" fill="rgb(217,26,45)" fg:x="199029" fg:w="44"/><text x="94.7270%" y="735.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="94.4794%" y="709" width="0.0185%" height="15" fill="rgb(221,67,14)" fg:x="199034" fg:w="39"/><text x="94.7294%" y="719.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="94.4803%" y="693" width="0.0176%" height="15" fill="rgb(248,100,24)" fg:x="199036" fg:w="37"/><text x="94.7303%" y="703.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="94.4822%" y="677" width="0.0157%" height="15" fill="rgb(230,187,16)" fg:x="199040" fg:w="33"/><text x="94.7322%" y="687.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="94.4870%" y="661" width="0.0109%" height="15" fill="rgb(205,108,13)" fg:x="199050" fg:w="23"/><text x="94.7370%" y="671.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (35,547 samples, 16.87%)</title><rect x="77.6326%" y="741" width="16.8738%" height="15" fill="rgb(235,71,51)" fg:x="163544" fg:w="35547"/><text x="77.8826%" y="751.50">async_executor::LocalExecu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35,549 samples, 16.87%)</title><rect x="77.6322%" y="757" width="16.8747%" height="15" fill="rgb(251,172,48)" fg:x="163543" fg:w="35549"/><text x="77.8822%" y="767.50">&lt;core::future::from_genera..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (36 samples, 0.02%)</title><rect x="94.5254%" y="757" width="0.0171%" height="15" fill="rgb(240,96,49)" fg:x="199131" fg:w="36"/><text x="94.7754%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (33 samples, 0.02%)</title><rect x="94.5268%" y="741" width="0.0157%" height="15" fill="rgb(235,46,36)" fg:x="199134" fg:w="33"/><text x="94.7768%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.02%)</title><rect x="94.5268%" y="725" width="0.0157%" height="15" fill="rgb(244,3,49)" fg:x="199134" fg:w="33"/><text x="94.7768%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.02%)</title><rect x="94.5268%" y="709" width="0.0157%" height="15" fill="rgb(206,78,54)" fg:x="199134" fg:w="33"/><text x="94.7768%" y="719.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.02%)</title><rect x="94.5268%" y="693" width="0.0157%" height="15" fill="rgb(208,85,42)" fg:x="199134" fg:w="33"/><text x="94.7768%" y="703.50"></text></g><g><title>malloc (33 samples, 0.02%)</title><rect x="94.5268%" y="677" width="0.0157%" height="15" fill="rgb(219,196,21)" fg:x="199134" fg:w="33"/><text x="94.7768%" y="687.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (104 samples, 0.05%)</title><rect x="94.5871%" y="741" width="0.0494%" height="15" fill="rgb(238,19,9)" fg:x="199261" fg:w="104"/><text x="94.8371%" y="751.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (104 samples, 0.05%)</title><rect x="94.5871%" y="725" width="0.0494%" height="15" fill="rgb(206,86,13)" fg:x="199261" fg:w="104"/><text x="94.8371%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (104 samples, 0.05%)</title><rect x="94.5871%" y="709" width="0.0494%" height="15" fill="rgb(214,123,40)" fg:x="199261" fg:w="104"/><text x="94.8371%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (104 samples, 0.05%)</title><rect x="94.5871%" y="693" width="0.0494%" height="15" fill="rgb(243,53,5)" fg:x="199261" fg:w="104"/><text x="94.8371%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (104 samples, 0.05%)</title><rect x="94.5871%" y="677" width="0.0494%" height="15" fill="rgb(254,186,31)" fg:x="199261" fg:w="104"/><text x="94.8371%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (104 samples, 0.05%)</title><rect x="94.5871%" y="661" width="0.0494%" height="15" fill="rgb(221,216,25)" fg:x="199261" fg:w="104"/><text x="94.8371%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::get (199 samples, 0.09%)</title><rect x="94.5425%" y="757" width="0.0945%" height="15" fill="rgb(248,107,42)" fg:x="199167" fg:w="199"/><text x="94.7925%" y="767.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (568 samples, 0.27%)</title><rect x="94.6370%" y="757" width="0.2696%" height="15" fill="rgb(221,85,43)" fg:x="199366" fg:w="568"/><text x="94.8870%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (512 samples, 0.24%)</title><rect x="94.6635%" y="741" width="0.2430%" height="15" fill="rgb(225,34,24)" fg:x="199422" fg:w="512"/><text x="94.9135%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (512 samples, 0.24%)</title><rect x="94.6635%" y="725" width="0.2430%" height="15" fill="rgb(211,119,1)" fg:x="199422" fg:w="512"/><text x="94.9135%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (512 samples, 0.24%)</title><rect x="94.6635%" y="709" width="0.2430%" height="15" fill="rgb(254,216,46)" fg:x="199422" fg:w="512"/><text x="94.9135%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (512 samples, 0.24%)</title><rect x="94.6635%" y="693" width="0.2430%" height="15" fill="rgb(238,11,38)" fg:x="199422" fg:w="512"/><text x="94.9135%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (512 samples, 0.24%)</title><rect x="94.6635%" y="677" width="0.2430%" height="15" fill="rgb(233,50,15)" fg:x="199422" fg:w="512"/><text x="94.9135%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.01%)</title><rect x="94.9203%" y="725" width="0.0119%" height="15" fill="rgb(217,181,29)" fg:x="199963" fg:w="25"/><text x="95.1703%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.01%)</title><rect x="94.9203%" y="709" width="0.0119%" height="15" fill="rgb(214,56,3)" fg:x="199963" fg:w="25"/><text x="95.1703%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.01%)</title><rect x="94.9203%" y="693" width="0.0119%" height="15" fill="rgb(230,69,45)" fg:x="199963" fg:w="25"/><text x="95.1703%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.01%)</title><rect x="94.9208%" y="677" width="0.0114%" height="15" fill="rgb(224,201,50)" fg:x="199964" fg:w="24"/><text x="95.1708%" y="687.50"></text></g><g><title>async_io::reactor::Direction::drain_into (51 samples, 0.02%)</title><rect x="94.9156%" y="741" width="0.0242%" height="15" fill="rgb(217,228,18)" fg:x="199953" fg:w="51"/><text x="95.1656%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (61 samples, 0.03%)</title><rect x="94.9441%" y="741" width="0.0290%" height="15" fill="rgb(239,33,44)" fg:x="200013" fg:w="61"/><text x="95.1941%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (36 samples, 0.02%)</title><rect x="94.9868%" y="741" width="0.0171%" height="15" fill="rgb(248,210,23)" fg:x="200103" fg:w="36"/><text x="95.2368%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (36 samples, 0.02%)</title><rect x="94.9868%" y="725" width="0.0171%" height="15" fill="rgb(253,135,8)" fg:x="200103" fg:w="36"/><text x="95.2368%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (25 samples, 0.01%)</title><rect x="95.0309%" y="725" width="0.0119%" height="15" fill="rgb(217,98,21)" fg:x="200196" fg:w="25"/><text x="95.2809%" y="735.50"></text></g><g><title>polling::Poller::wait (82 samples, 0.04%)</title><rect x="95.0044%" y="741" width="0.0389%" height="15" fill="rgb(253,130,21)" fg:x="200140" fg:w="82"/><text x="95.2544%" y="751.50"></text></g><g><title>parking::Unparker::unpark (152 samples, 0.07%)</title><rect x="95.0760%" y="549" width="0.0722%" height="15" fill="rgb(207,81,54)" fg:x="200291" fg:w="152"/><text x="95.3260%" y="559.50"></text></g><g><title>parking::Inner::unpark (143 samples, 0.07%)</title><rect x="95.0803%" y="533" width="0.0679%" height="15" fill="rgb(232,48,33)" fg:x="200300" fg:w="143"/><text x="95.3303%" y="543.50"></text></g><g><title>syscall (127 samples, 0.06%)</title><rect x="95.0879%" y="517" width="0.0603%" height="15" fill="rgb(211,9,35)" fg:x="200316" fg:w="127"/><text x="95.3379%" y="527.50"></text></g><g><title>[unknown] (126 samples, 0.06%)</title><rect x="95.0884%" y="501" width="0.0598%" height="15" fill="rgb(205,152,21)" fg:x="200317" fg:w="126"/><text x="95.3384%" y="511.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="95.0893%" y="485" width="0.0589%" height="15" fill="rgb(249,21,27)" fg:x="200319" fg:w="124"/><text x="95.3393%" y="495.50"></text></g><g><title>[unknown] (124 samples, 0.06%)</title><rect x="95.0893%" y="469" width="0.0589%" height="15" fill="rgb(252,29,24)" fg:x="200319" fg:w="124"/><text x="95.3393%" y="479.50"></text></g><g><title>[unknown] (121 samples, 0.06%)</title><rect x="95.0908%" y="453" width="0.0574%" height="15" fill="rgb(230,130,50)" fg:x="200322" fg:w="121"/><text x="95.3408%" y="463.50"></text></g><g><title>[unknown] (118 samples, 0.06%)</title><rect x="95.0922%" y="437" width="0.0560%" height="15" fill="rgb(239,144,14)" fg:x="200325" fg:w="118"/><text x="95.3422%" y="447.50"></text></g><g><title>[unknown] (92 samples, 0.04%)</title><rect x="95.1045%" y="421" width="0.0437%" height="15" fill="rgb(227,111,50)" fg:x="200351" fg:w="92"/><text x="95.3545%" y="431.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="95.1140%" y="405" width="0.0342%" height="15" fill="rgb(254,84,20)" fg:x="200371" fg:w="72"/><text x="95.3640%" y="415.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="95.1192%" y="389" width="0.0290%" height="15" fill="rgb(232,90,48)" fg:x="200382" fg:w="61"/><text x="95.3692%" y="399.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="95.1316%" y="373" width="0.0166%" height="15" fill="rgb(253,63,47)" fg:x="200408" fg:w="35"/><text x="95.3816%" y="383.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (153 samples, 0.07%)</title><rect x="95.0760%" y="565" width="0.0726%" height="15" fill="rgb(251,146,35)" fg:x="200291" fg:w="153"/><text x="95.3260%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (155 samples, 0.07%)</title><rect x="95.0756%" y="597" width="0.0736%" height="15" fill="rgb(229,192,35)" fg:x="200290" fg:w="155"/><text x="95.3256%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (155 samples, 0.07%)</title><rect x="95.0756%" y="581" width="0.0736%" height="15" fill="rgb(225,68,9)" fg:x="200290" fg:w="155"/><text x="95.3256%" y="591.50"></text></g><g><title>async_executor::State::notify (198 samples, 0.09%)</title><rect x="95.0585%" y="613" width="0.0940%" height="15" fill="rgb(214,97,34)" fg:x="200254" fg:w="198"/><text x="95.3085%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (30 samples, 0.01%)</title><rect x="95.1900%" y="581" width="0.0142%" height="15" fill="rgb(253,31,26)" fg:x="200531" fg:w="30"/><text x="95.4400%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.01%)</title><rect x="95.1900%" y="565" width="0.0142%" height="15" fill="rgb(225,151,47)" fg:x="200531" fg:w="30"/><text x="95.4400%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (171 samples, 0.08%)</title><rect x="95.1525%" y="613" width="0.0812%" height="15" fill="rgb(206,185,9)" fg:x="200452" fg:w="171"/><text x="95.4025%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (162 samples, 0.08%)</title><rect x="95.1567%" y="597" width="0.0769%" height="15" fill="rgb(249,65,17)" fg:x="200461" fg:w="162"/><text x="95.4067%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (57 samples, 0.03%)</title><rect x="95.2066%" y="581" width="0.0271%" height="15" fill="rgb(220,110,10)" fg:x="200566" fg:w="57"/><text x="95.4566%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (57 samples, 0.03%)</title><rect x="95.2066%" y="565" width="0.0271%" height="15" fill="rgb(222,198,49)" fg:x="200566" fg:w="57"/><text x="95.4566%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (371 samples, 0.18%)</title><rect x="95.0580%" y="629" width="0.1761%" height="15" fill="rgb(239,81,13)" fg:x="200253" fg:w="371"/><text x="95.3080%" y="639.50"></text></g><g><title>std::panic::catch_unwind (545 samples, 0.26%)</title><rect x="95.0480%" y="741" width="0.2587%" height="15" fill="rgb(216,128,11)" fg:x="200232" fg:w="545"/><text x="95.2980%" y="751.50"></text></g><g><title>std::panicking::try (545 samples, 0.26%)</title><rect x="95.0480%" y="725" width="0.2587%" height="15" fill="rgb(247,156,8)" fg:x="200232" fg:w="545"/><text x="95.2980%" y="735.50"></text></g><g><title>std::panicking::try::do_call (545 samples, 0.26%)</title><rect x="95.0480%" y="709" width="0.2587%" height="15" fill="rgb(219,173,1)" fg:x="200232" fg:w="545"/><text x="95.2980%" y="719.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (545 samples, 0.26%)</title><rect x="95.0480%" y="693" width="0.2587%" height="15" fill="rgb(227,42,24)" fg:x="200232" fg:w="545"/><text x="95.2980%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (545 samples, 0.26%)</title><rect x="95.0480%" y="677" width="0.2587%" height="15" fill="rgb(253,219,50)" fg:x="200232" fg:w="545"/><text x="95.2980%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (545 samples, 0.26%)</title><rect x="95.0480%" y="661" width="0.2587%" height="15" fill="rgb(215,191,54)" fg:x="200232" fg:w="545"/><text x="95.2980%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (533 samples, 0.25%)</title><rect x="95.0537%" y="645" width="0.2530%" height="15" fill="rgb(238,83,12)" fg:x="200244" fg:w="533"/><text x="95.3037%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (153 samples, 0.07%)</title><rect x="95.2341%" y="629" width="0.0726%" height="15" fill="rgb(205,124,9)" fg:x="200624" fg:w="153"/><text x="95.4841%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (153 samples, 0.07%)</title><rect x="95.2341%" y="613" width="0.0726%" height="15" fill="rgb(253,174,7)" fg:x="200624" fg:w="153"/><text x="95.4841%" y="623.50"></text></g><g><title>async_io::reactor::ReactorLock::react (863 samples, 0.41%)</title><rect x="94.9066%" y="757" width="0.4097%" height="15" fill="rgb(206,134,49)" fg:x="199934" fg:w="863"/><text x="95.1566%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (27 samples, 0.01%)</title><rect x="95.3167%" y="757" width="0.0128%" height="15" fill="rgb(221,89,20)" fg:x="200798" fg:w="27"/><text x="95.5667%" y="767.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.01%)</title><rect x="95.3167%" y="741" width="0.0128%" height="15" fill="rgb(240,205,13)" fg:x="200798" fg:w="27"/><text x="95.5667%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (27 samples, 0.01%)</title><rect x="95.3167%" y="725" width="0.0128%" height="15" fill="rgb(237,174,32)" fg:x="200798" fg:w="27"/><text x="95.5667%" y="735.50"></text></g><g><title>std::sync::poison::Flag::done (164 samples, 0.08%)</title><rect x="95.4012%" y="693" width="0.0778%" height="15" fill="rgb(226,12,15)" fg:x="200976" fg:w="164"/><text x="95.6512%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (166 samples, 0.08%)</title><rect x="95.4012%" y="725" width="0.0788%" height="15" fill="rgb(245,160,52)" fg:x="200976" fg:w="166"/><text x="95.6512%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.08%)</title><rect x="95.4012%" y="709" width="0.0788%" height="15" fill="rgb(253,80,21)" fg:x="200976" fg:w="166"/><text x="95.6512%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (23 samples, 0.01%)</title><rect x="95.5707%" y="661" width="0.0109%" height="15" fill="rgb(231,225,22)" fg:x="201333" fg:w="23"/><text x="95.8207%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.01%)</title><rect x="95.5707%" y="645" width="0.0109%" height="15" fill="rgb(253,185,12)" fg:x="201333" fg:w="23"/><text x="95.8207%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (5,388 samples, 2.56%)</title><rect x="95.5816%" y="661" width="2.5576%" height="15" fill="rgb(234,197,21)" fg:x="201356" fg:w="5388"/><text x="95.8316%" y="671.50">st..</text></g><g><title>syscall (5,276 samples, 2.50%)</title><rect x="95.6348%" y="645" width="2.5045%" height="15" fill="rgb(210,47,30)" fg:x="201468" fg:w="5276"/><text x="95.8848%" y="655.50">sy..</text></g><g><title>[unknown] (5,219 samples, 2.48%)</title><rect x="95.6618%" y="629" width="2.4774%" height="15" fill="rgb(246,139,27)" fg:x="201525" fg:w="5219"/><text x="95.9118%" y="639.50">[u..</text></g><g><title>[unknown] (5,177 samples, 2.46%)</title><rect x="95.6817%" y="613" width="2.4575%" height="15" fill="rgb(226,130,16)" fg:x="201567" fg:w="5177"/><text x="95.9317%" y="623.50">[u..</text></g><g><title>[unknown] (5,156 samples, 2.45%)</title><rect x="95.6917%" y="597" width="2.4475%" height="15" fill="rgb(237,208,20)" fg:x="201588" fg:w="5156"/><text x="95.9417%" y="607.50">[u..</text></g><g><title>[unknown] (5,002 samples, 2.37%)</title><rect x="95.7648%" y="581" width="2.3744%" height="15" fill="rgb(245,186,28)" fg:x="201742" fg:w="5002"/><text x="96.0148%" y="591.50">[u..</text></g><g><title>[unknown] (4,734 samples, 2.25%)</title><rect x="95.8920%" y="565" width="2.2472%" height="15" fill="rgb(238,105,39)" fg:x="202010" fg:w="4734"/><text x="96.1420%" y="575.50">[..</text></g><g><title>[unknown] (4,423 samples, 2.10%)</title><rect x="96.0397%" y="549" width="2.0996%" height="15" fill="rgb(253,228,11)" fg:x="202321" fg:w="4423"/><text x="96.2897%" y="559.50">[..</text></g><g><title>[unknown] (4,267 samples, 2.03%)</title><rect x="96.1137%" y="533" width="2.0255%" height="15" fill="rgb(224,136,38)" fg:x="202477" fg:w="4267"/><text x="96.3637%" y="543.50">[..</text></g><g><title>[unknown] (3,559 samples, 1.69%)</title><rect x="96.4498%" y="517" width="1.6894%" height="15" fill="rgb(211,3,25)" fg:x="203185" fg:w="3559"/><text x="96.6998%" y="527.50"></text></g><g><title>[unknown] (2,901 samples, 1.38%)</title><rect x="96.7621%" y="501" width="1.3771%" height="15" fill="rgb(238,66,34)" fg:x="203843" fg:w="2901"/><text x="97.0121%" y="511.50"></text></g><g><title>[unknown] (2,232 samples, 1.06%)</title><rect x="97.0797%" y="485" width="1.0595%" height="15" fill="rgb(223,188,11)" fg:x="204512" fg:w="2232"/><text x="97.3297%" y="495.50"></text></g><g><title>[unknown] (1,357 samples, 0.64%)</title><rect x="97.4951%" y="469" width="0.6442%" height="15" fill="rgb(221,10,35)" fg:x="205387" fg:w="1357"/><text x="97.7451%" y="479.50"></text></g><g><title>[unknown] (666 samples, 0.32%)</title><rect x="97.8231%" y="453" width="0.3161%" height="15" fill="rgb(223,18,44)" fg:x="206078" fg:w="666"/><text x="98.0731%" y="463.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="98.1098%" y="437" width="0.0294%" height="15" fill="rgb(220,97,41)" fg:x="206682" fg:w="62"/><text x="98.3598%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (65 samples, 0.03%)</title><rect x="98.1392%" y="661" width="0.0309%" height="15" fill="rgb(206,95,45)" fg:x="206744" fg:w="65"/><text x="98.3892%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (5,634 samples, 2.67%)</title><rect x="95.5009%" y="693" width="2.6744%" height="15" fill="rgb(209,96,13)" fg:x="201186" fg:w="5634"/><text x="95.7509%" y="703.50">st..</text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (5,522 samples, 2.62%)</title><rect x="95.5541%" y="677" width="2.6212%" height="15" fill="rgb(237,39,34)" fg:x="201298" fg:w="5522"/><text x="95.8041%" y="687.50">st..</text></g><g><title>std::sync::condvar::Condvar::wait (5,717 samples, 2.71%)</title><rect x="95.4852%" y="725" width="2.7138%" height="15" fill="rgb(213,49,47)" fg:x="201153" fg:w="5717"/><text x="95.7352%" y="735.50">st..</text></g><g><title>std::sys_common::condvar::Condvar::wait (5,708 samples, 2.71%)</title><rect x="95.4895%" y="709" width="2.7095%" height="15" fill="rgb(205,107,27)" fg:x="201162" fg:w="5708"/><text x="95.7395%" y="719.50">st..</text></g><g><title>std::sys_common::mutex::MovableMutex::raw (33 samples, 0.02%)</title><rect x="98.1834%" y="693" width="0.0157%" height="15" fill="rgb(212,142,9)" fg:x="206837" fg:w="33"/><text x="98.4334%" y="703.50"></text></g><g><title>parking::Parker::park (6,049 samples, 2.87%)</title><rect x="95.3348%" y="757" width="2.8714%" height="15" fill="rgb(226,182,0)" fg:x="200836" fg:w="6049"/><text x="95.5848%" y="767.50">pa..</text></g><g><title>parking::Inner::park (6,025 samples, 2.86%)</title><rect x="95.3461%" y="741" width="2.8600%" height="15" fill="rgb(231,3,53)" fg:x="200860" fg:w="6025"/><text x="95.5961%" y="751.50">pa..</text></g><g><title>parking::Parker::park_timeout (164 samples, 0.08%)</title><rect x="98.2061%" y="757" width="0.0778%" height="15" fill="rgb(246,111,28)" fg:x="206885" fg:w="164"/><text x="98.4561%" y="767.50"></text></g><g><title>parking::Inner::park (116 samples, 0.06%)</title><rect x="98.2289%" y="741" width="0.0551%" height="15" fill="rgb(254,183,7)" fg:x="206933" fg:w="116"/><text x="98.4789%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (51 samples, 0.02%)</title><rect x="98.2598%" y="725" width="0.0242%" height="15" fill="rgb(247,177,28)" fg:x="206998" fg:w="51"/><text x="98.5098%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (51 samples, 0.02%)</title><rect x="98.2598%" y="709" width="0.0242%" height="15" fill="rgb(244,43,1)" fg:x="206998" fg:w="51"/><text x="98.5098%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (35 samples, 0.02%)</title><rect x="98.2887%" y="725" width="0.0166%" height="15" fill="rgb(207,2,35)" fg:x="207059" fg:w="35"/><text x="98.5387%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.02%)</title><rect x="98.2892%" y="709" width="0.0161%" height="15" fill="rgb(213,83,22)" fg:x="207060" fg:w="34"/><text x="98.5392%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.02%)</title><rect x="98.2892%" y="693" width="0.0161%" height="15" fill="rgb(246,212,13)" fg:x="207060" fg:w="34"/><text x="98.5392%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.02%)</title><rect x="98.2892%" y="677" width="0.0161%" height="15" fill="rgb(213,127,46)" fg:x="207060" fg:w="34"/><text x="98.5392%" y="687.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.02%)</title><rect x="98.2897%" y="661" width="0.0157%" height="15" fill="rgb(219,215,39)" fg:x="207061" fg:w="33"/><text x="98.5397%" y="671.50"></text></g><g><title>malloc (32 samples, 0.02%)</title><rect x="98.2902%" y="645" width="0.0152%" height="15" fill="rgb(227,99,17)" fg:x="207062" fg:w="32"/><text x="98.5402%" y="655.50"></text></g><g><title>parking::Parker::new (36 samples, 0.02%)</title><rect x="98.2887%" y="741" width="0.0171%" height="15" fill="rgb(208,155,18)" fg:x="207059" fg:w="36"/><text x="98.5387%" y="751.50"></text></g><g><title>parking::pair (38 samples, 0.02%)</title><rect x="98.2887%" y="757" width="0.0180%" height="15" fill="rgb(223,204,38)" fg:x="207059" fg:w="38"/><text x="98.5387%" y="767.50"></text></g><g><title>async_io::driver::block_on (43,621 samples, 20.71%)</title><rect x="77.6212%" y="773" width="20.7064%" height="15" fill="rgb(212,114,21)" fg:x="163520" fg:w="43621"/><text x="77.8712%" y="783.50">async_io::driver::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (43,629 samples, 20.71%)</title><rect x="77.6179%" y="789" width="20.7102%" height="15" fill="rgb(250,74,13)" fg:x="163513" fg:w="43629"/><text x="77.8679%" y="799.50">async_global_executor::reactor::b..</text></g><g><title>&lt;tokio::runtime::handle::Handle as core::clone::Clone&gt;::clone (22 samples, 0.01%)</title><rect x="98.3319%" y="773" width="0.0104%" height="15" fill="rgb(234,7,1)" fg:x="207150" fg:w="22"/><text x="98.5819%" y="783.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (22 samples, 0.01%)</title><rect x="98.3319%" y="757" width="0.0104%" height="15" fill="rgb(207,138,31)" fg:x="207150" fg:w="22"/><text x="98.5819%" y="767.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (46 samples, 0.02%)</title><rect x="98.3452%" y="677" width="0.0218%" height="15" fill="rgb(215,186,42)" fg:x="207178" fg:w="46"/><text x="98.5952%" y="687.50"></text></g><g><title>__cxa_thread_atexit_impl (45 samples, 0.02%)</title><rect x="98.3457%" y="661" width="0.0214%" height="15" fill="rgb(229,205,49)" fg:x="207179" fg:w="45"/><text x="98.5957%" y="671.50"></text></g><g><title>async_global_executor::reactor::block_on (43,735 samples, 20.76%)</title><rect x="77.6103%" y="805" width="20.7605%" height="15" fill="rgb(216,156,32)" fg:x="163497" fg:w="43735"/><text x="77.8603%" y="815.50">async_global_executor::reactor::b..</text></g><g><title>tokio::runtime::handle::Handle::enter (82 samples, 0.04%)</title><rect x="98.3319%" y="789" width="0.0389%" height="15" fill="rgb(238,7,21)" fg:x="207150" fg:w="82"/><text x="98.5819%" y="799.50"></text></g><g><title>tokio::runtime::context::enter (60 samples, 0.03%)</title><rect x="98.3424%" y="773" width="0.0285%" height="15" fill="rgb(249,190,22)" fg:x="207172" fg:w="60"/><text x="98.5924%" y="783.50"></text></g><g><title>tokio::runtime::context::try_enter (60 samples, 0.03%)</title><rect x="98.3424%" y="757" width="0.0285%" height="15" fill="rgb(253,51,31)" fg:x="207172" fg:w="60"/><text x="98.5924%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (58 samples, 0.03%)</title><rect x="98.3433%" y="741" width="0.0275%" height="15" fill="rgb(237,90,54)" fg:x="207174" fg:w="58"/><text x="98.5933%" y="751.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (58 samples, 0.03%)</title><rect x="98.3433%" y="725" width="0.0275%" height="15" fill="rgb(250,214,33)" fg:x="207174" fg:w="58"/><text x="98.5933%" y="735.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (58 samples, 0.03%)</title><rect x="98.3433%" y="709" width="0.0275%" height="15" fill="rgb(237,10,49)" fg:x="207174" fg:w="58"/><text x="98.5933%" y="719.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (54 samples, 0.03%)</title><rect x="98.3452%" y="693" width="0.0256%" height="15" fill="rgb(241,56,36)" fg:x="207178" fg:w="54"/><text x="98.5952%" y="703.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (43,743 samples, 20.76%)</title><rect x="77.6098%" y="821" width="20.7643%" height="15" fill="rgb(227,164,12)" fg:x="163496" fg:w="43743"/><text x="77.8598%" y="831.50">async_global_executor::executor::..</text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="98.3989%" y="773" width="0.0109%" height="15" fill="rgb(249,149,35)" fg:x="207291" fg:w="23"/><text x="98.6489%" y="783.50"></text></g><g><title>__libc_calloc (57 samples, 0.03%)</title><rect x="98.4107%" y="773" width="0.0271%" height="15" fill="rgb(238,227,50)" fg:x="207316" fg:w="57"/><text x="98.6607%" y="783.50"></text></g><g><title>__cxa_thread_atexit_impl (154 samples, 0.07%)</title><rect x="98.3846%" y="789" width="0.0731%" height="15" fill="rgb(235,102,45)" fg:x="207261" fg:w="154"/><text x="98.6346%" y="799.50"></text></g><g><title>pthread_mutex_lock (38 samples, 0.02%)</title><rect x="98.4397%" y="773" width="0.0180%" height="15" fill="rgb(211,10,38)" fg:x="207377" fg:w="38"/><text x="98.6897%" y="783.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (181 samples, 0.09%)</title><rect x="98.3742%" y="821" width="0.0859%" height="15" fill="rgb(219,77,48)" fg:x="207239" fg:w="181"/><text x="98.6242%" y="831.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (180 samples, 0.09%)</title><rect x="98.3747%" y="805" width="0.0854%" height="15" fill="rgb(246,6,15)" fg:x="207240" fg:w="180"/><text x="98.6247%" y="815.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (43,978 samples, 20.88%)</title><rect x="77.5880%" y="901" width="20.8759%" height="15" fill="rgb(207,220,2)" fg:x="163450" fg:w="43978"/><text x="77.8380%" y="911.50">async_std::task::task_locals_wrap..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (43,978 samples, 20.88%)</title><rect x="77.5880%" y="885" width="20.8759%" height="15" fill="rgb(242,48,14)" fg:x="163450" fg:w="43978"/><text x="77.8380%" y="895.50">async_std::task::builder::Builder..</text></g><g><title>async_global_executor::executor::block_on (43,978 samples, 20.88%)</title><rect x="77.5880%" y="869" width="20.8759%" height="15" fill="rgb(218,19,27)" fg:x="163450" fg:w="43978"/><text x="77.8380%" y="879.50">async_global_executor::executor::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (43,974 samples, 20.87%)</title><rect x="77.5899%" y="853" width="20.8740%" height="15" fill="rgb(228,0,35)" fg:x="163454" fg:w="43974"/><text x="77.8399%" y="863.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (43,959 samples, 20.87%)</title><rect x="77.5970%" y="837" width="20.8669%" height="15" fill="rgb(244,142,54)" fg:x="163469" fg:w="43959"/><text x="77.8470%" y="847.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (44,005 samples, 20.89%)</title><rect x="77.5757%" y="965" width="20.8887%" height="15" fill="rgb(243,217,40)" fg:x="163424" fg:w="44005"/><text x="77.8257%" y="975.50">async_std::task::builder::Builder..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (44,004 samples, 20.89%)</title><rect x="77.5761%" y="949" width="20.8882%" height="15" fill="rgb(207,114,16)" fg:x="163425" fg:w="44004"/><text x="77.8261%" y="959.50">async_std::task::task_locals_wrap..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (43,998 samples, 20.89%)</title><rect x="77.5790%" y="933" width="20.8854%" height="15" fill="rgb(224,33,25)" fg:x="163431" fg:w="43998"/><text x="77.8290%" y="943.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (43,993 samples, 20.88%)</title><rect x="77.5814%" y="917" width="20.8830%" height="15" fill="rgb(230,93,54)" fg:x="163436" fg:w="43993"/><text x="77.8314%" y="927.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (60,976 samples, 28.94%)</title><rect x="69.5207%" y="1061" width="28.9447%" height="15" fill="rgb(224,56,24)" fg:x="146455" fg:w="60976"/><text x="69.7707%" y="1071.50">std::sys_common::backtrace::__rust_begin_short_..</text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (44,060 samples, 20.91%)</title><rect x="77.5505%" y="1045" width="20.9148%" height="15" fill="rgb(235,189,50)" fg:x="163371" fg:w="44060"/><text x="77.8005%" y="1055.50">zenoh_transport::manager::Transpo..</text></g><g><title>async_std::task::block_on::block_on (44,060 samples, 20.91%)</title><rect x="77.5505%" y="1029" width="20.9148%" height="15" fill="rgb(242,173,8)" fg:x="163371" fg:w="44060"/><text x="77.8005%" y="1039.50">async_std::task::block_on::block_..</text></g><g><title>async_std::task::builder::Builder::blocking (44,059 samples, 20.91%)</title><rect x="77.5510%" y="1013" width="20.9143%" height="15" fill="rgb(209,206,10)" fg:x="163372" fg:w="44059"/><text x="77.8010%" y="1023.50">async_std::task::builder::Builder..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (44,025 samples, 20.90%)</title><rect x="77.5671%" y="997" width="20.8982%" height="15" fill="rgb(213,182,44)" fg:x="163406" fg:w="44025"/><text x="77.8171%" y="1007.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44,019 samples, 20.90%)</title><rect x="77.5700%" y="981" width="20.8954%" height="15" fill="rgb(243,51,15)" fg:x="163412" fg:w="44019"/><text x="77.8200%" y="991.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>std::panic::catch_unwind (60,980 samples, 28.95%)</title><rect x="69.5192%" y="1141" width="28.9466%" height="15" fill="rgb(241,13,14)" fg:x="146452" fg:w="60980"/><text x="69.7692%" y="1151.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (60,980 samples, 28.95%)</title><rect x="69.5192%" y="1125" width="28.9466%" height="15" fill="rgb(239,147,24)" fg:x="146452" fg:w="60980"/><text x="69.7692%" y="1135.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (60,980 samples, 28.95%)</title><rect x="69.5192%" y="1109" width="28.9466%" height="15" fill="rgb(223,129,16)" fg:x="146452" fg:w="60980"/><text x="69.7692%" y="1119.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (60,980 samples, 28.95%)</title><rect x="69.5192%" y="1093" width="28.9466%" height="15" fill="rgb(209,169,13)" fg:x="146452" fg:w="60980"/><text x="69.7692%" y="1103.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; ..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (60,980 samples, 28.95%)</title><rect x="69.5192%" y="1077" width="28.9466%" height="15" fill="rgb(235,159,41)" fg:x="146452" fg:w="60980"/><text x="69.7692%" y="1087.50">std::thread::Builder::spawn_unchecked_::{{closu..</text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="98.6177%" y="1045" width="0.0309%" height="15" fill="rgb(223,219,48)" fg:x="207752" fg:w="65"/><text x="98.8677%" y="1055.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="98.6177%" y="1029" width="0.0309%" height="15" fill="rgb(236,80,13)" fg:x="207752" fg:w="65"/><text x="98.8677%" y="1039.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="98.6177%" y="1013" width="0.0309%" height="15" fill="rgb(213,5,6)" fg:x="207752" fg:w="65"/><text x="98.8677%" y="1023.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="98.6177%" y="997" width="0.0309%" height="15" fill="rgb(205,59,21)" fg:x="207752" fg:w="65"/><text x="98.8677%" y="1007.50"></text></g><g><title>[unknown] (65 samples, 0.03%)</title><rect x="98.6177%" y="981" width="0.0309%" height="15" fill="rgb(247,137,35)" fg:x="207752" fg:w="65"/><text x="98.8677%" y="991.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="98.6196%" y="965" width="0.0290%" height="15" fill="rgb(242,208,28)" fg:x="207756" fg:w="61"/><text x="98.8696%" y="975.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="98.6215%" y="949" width="0.0271%" height="15" fill="rgb(245,62,25)" fg:x="207760" fg:w="57"/><text x="98.8715%" y="959.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="98.6215%" y="933" width="0.0271%" height="15" fill="rgb(233,99,54)" fg:x="207760" fg:w="57"/><text x="98.8715%" y="943.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="98.6258%" y="917" width="0.0228%" height="15" fill="rgb(213,10,37)" fg:x="207769" fg:w="48"/><text x="98.8758%" y="927.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="98.6310%" y="901" width="0.0176%" height="15" fill="rgb(235,143,30)" fg:x="207780" fg:w="37"/><text x="98.8810%" y="911.50"></text></g><g><title>__mmap (172 samples, 0.08%)</title><rect x="98.6486%" y="1045" width="0.0816%" height="15" fill="rgb(250,146,33)" fg:x="207817" fg:w="172"/><text x="98.8986%" y="1055.50"></text></g><g><title>[unknown] (171 samples, 0.08%)</title><rect x="98.6490%" y="1029" width="0.0812%" height="15" fill="rgb(226,198,42)" fg:x="207818" fg:w="171"/><text x="98.8990%" y="1039.50"></text></g><g><title>[unknown] (171 samples, 0.08%)</title><rect x="98.6490%" y="1013" width="0.0812%" height="15" fill="rgb(222,55,6)" fg:x="207818" fg:w="171"/><text x="98.8990%" y="1023.50"></text></g><g><title>[unknown] (171 samples, 0.08%)</title><rect x="98.6490%" y="997" width="0.0812%" height="15" fill="rgb(213,224,31)" fg:x="207818" fg:w="171"/><text x="98.8990%" y="1007.50"></text></g><g><title>[unknown] (165 samples, 0.08%)</title><rect x="98.6519%" y="981" width="0.0783%" height="15" fill="rgb(226,103,35)" fg:x="207824" fg:w="165"/><text x="98.9019%" y="991.50"></text></g><g><title>[unknown] (146 samples, 0.07%)</title><rect x="98.6609%" y="965" width="0.0693%" height="15" fill="rgb(205,66,45)" fg:x="207843" fg:w="146"/><text x="98.9109%" y="975.50"></text></g><g><title>[unknown] (106 samples, 0.05%)</title><rect x="98.6799%" y="949" width="0.0503%" height="15" fill="rgb(226,51,42)" fg:x="207883" fg:w="106"/><text x="98.9299%" y="959.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="98.7103%" y="933" width="0.0199%" height="15" fill="rgb(206,69,1)" fg:x="207947" fg:w="42"/><text x="98.9603%" y="943.50"></text></g><g><title>__mprotect (33 samples, 0.02%)</title><rect x="98.7302%" y="1045" width="0.0157%" height="15" fill="rgb(213,228,47)" fg:x="207989" fg:w="33"/><text x="98.9802%" y="1055.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="98.7302%" y="1029" width="0.0157%" height="15" fill="rgb(224,204,18)" fg:x="207989" fg:w="33"/><text x="98.9802%" y="1039.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="98.7302%" y="1013" width="0.0157%" height="15" fill="rgb(253,187,47)" fg:x="207989" fg:w="33"/><text x="98.9802%" y="1023.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="98.7302%" y="997" width="0.0157%" height="15" fill="rgb(232,61,2)" fg:x="207989" fg:w="33"/><text x="98.9802%" y="1007.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="98.7302%" y="981" width="0.0157%" height="15" fill="rgb(213,132,35)" fg:x="207989" fg:w="33"/><text x="98.9802%" y="991.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="98.7302%" y="965" width="0.0157%" height="15" fill="rgb(247,33,21)" fg:x="207989" fg:w="33"/><text x="98.9802%" y="975.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="98.7302%" y="949" width="0.0157%" height="15" fill="rgb(233,71,46)" fg:x="207989" fg:w="33"/><text x="98.9802%" y="959.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="98.7321%" y="933" width="0.0138%" height="15" fill="rgb(222,173,43)" fg:x="207993" fg:w="29"/><text x="98.9821%" y="943.50"></text></g><g><title>[libc.so.6] (296 samples, 0.14%)</title><rect x="98.6130%" y="1061" width="0.1405%" height="15" fill="rgb(249,218,47)" fg:x="207742" fg:w="296"/><text x="98.8630%" y="1071.50"></text></g><g><title>[libc.so.6] (486 samples, 0.23%)</title><rect x="98.5299%" y="1077" width="0.2307%" height="15" fill="rgb(254,185,48)" fg:x="207567" fg:w="486"/><text x="98.7799%" y="1087.50"></text></g><g><title>[libc.so.6] (540 samples, 0.26%)</title><rect x="98.5052%" y="1093" width="0.2563%" height="15" fill="rgb(252,165,50)" fg:x="207515" fg:w="540"/><text x="98.7552%" y="1103.50"></text></g><g><title>malloc (568 samples, 0.27%)</title><rect x="98.4929%" y="1109" width="0.2696%" height="15" fill="rgb(206,219,6)" fg:x="207489" fg:w="568"/><text x="98.7429%" y="1119.50"></text></g><g><title>pthread_attr_init (22 samples, 0.01%)</title><rect x="98.7625%" y="1109" width="0.0104%" height="15" fill="rgb(212,212,45)" fg:x="208057" fg:w="22"/><text x="99.0125%" y="1119.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="98.7857%" y="1061" width="0.0109%" height="15" fill="rgb(221,31,9)" fg:x="208106" fg:w="23"/><text x="99.0357%" y="1071.50"></text></g><g><title>[libc.so.6] (50 samples, 0.02%)</title><rect x="98.7739%" y="1093" width="0.0237%" height="15" fill="rgb(234,198,39)" fg:x="208081" fg:w="50"/><text x="99.0239%" y="1103.50"></text></g><g><title>__libc_calloc (40 samples, 0.02%)</title><rect x="98.7786%" y="1077" width="0.0190%" height="15" fill="rgb(252,145,46)" fg:x="208091" fg:w="40"/><text x="99.0286%" y="1087.50"></text></g><g><title>pthread_attr_setaffinity_np (64 samples, 0.03%)</title><rect x="98.7729%" y="1109" width="0.0304%" height="15" fill="rgb(237,149,0)" fg:x="208079" fg:w="64"/><text x="99.0229%" y="1119.50"></text></g><g><title>pthread_getaffinity_np (147 samples, 0.07%)</title><rect x="98.8033%" y="1109" width="0.0698%" height="15" fill="rgb(229,65,5)" fg:x="208143" fg:w="147"/><text x="99.0533%" y="1119.50"></text></g><g><title>[unknown] (133 samples, 0.06%)</title><rect x="98.8100%" y="1093" width="0.0631%" height="15" fill="rgb(235,60,36)" fg:x="208157" fg:w="133"/><text x="99.0600%" y="1103.50"></text></g><g><title>[unknown] (130 samples, 0.06%)</title><rect x="98.8114%" y="1077" width="0.0617%" height="15" fill="rgb(222,47,18)" fg:x="208160" fg:w="130"/><text x="99.0614%" y="1087.50"></text></g><g><title>[unknown] (130 samples, 0.06%)</title><rect x="98.8114%" y="1061" width="0.0617%" height="15" fill="rgb(235,114,22)" fg:x="208160" fg:w="130"/><text x="99.0614%" y="1071.50"></text></g><g><title>[unknown] (115 samples, 0.05%)</title><rect x="98.8185%" y="1045" width="0.0546%" height="15" fill="rgb(209,167,11)" fg:x="208175" fg:w="115"/><text x="99.0685%" y="1055.50"></text></g><g><title>[unknown] (111 samples, 0.05%)</title><rect x="98.8204%" y="1029" width="0.0527%" height="15" fill="rgb(251,73,18)" fg:x="208179" fg:w="111"/><text x="99.0704%" y="1039.50"></text></g><g><title>[unknown] (81 samples, 0.04%)</title><rect x="98.8346%" y="1013" width="0.0384%" height="15" fill="rgb(217,60,17)" fg:x="208209" fg:w="81"/><text x="99.0846%" y="1023.50"></text></g><g><title>pthread_getattr_np (857 samples, 0.41%)</title><rect x="98.4753%" y="1125" width="0.4068%" height="15" fill="rgb(224,36,37)" fg:x="207452" fg:w="857"/><text x="98.7253%" y="1135.50"></text></g><g><title>std::sys::unix::thread::guard::current (890 samples, 0.42%)</title><rect x="98.4658%" y="1141" width="0.4225%" height="15" fill="rgb(211,21,32)" fg:x="207432" fg:w="890"/><text x="98.7158%" y="1151.50"></text></g><g><title>__cxa_thread_atexit_impl (61 samples, 0.03%)</title><rect x="98.8897%" y="1061" width="0.0290%" height="15" fill="rgb(231,55,48)" fg:x="208325" fg:w="61"/><text x="99.1397%" y="1071.50"></text></g><g><title>std::sys_common::thread_info::set (65 samples, 0.03%)</title><rect x="98.8883%" y="1141" width="0.0309%" height="15" fill="rgb(227,42,18)" fg:x="208322" fg:w="65"/><text x="99.1383%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (64 samples, 0.03%)</title><rect x="98.8888%" y="1125" width="0.0304%" height="15" fill="rgb(217,2,27)" fg:x="208323" fg:w="64"/><text x="99.1388%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (64 samples, 0.03%)</title><rect x="98.8888%" y="1109" width="0.0304%" height="15" fill="rgb(251,138,23)" fg:x="208323" fg:w="64"/><text x="99.1388%" y="1119.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (64 samples, 0.03%)</title><rect x="98.8888%" y="1093" width="0.0304%" height="15" fill="rgb(226,184,11)" fg:x="208323" fg:w="64"/><text x="99.1388%" y="1103.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (62 samples, 0.03%)</title><rect x="98.8897%" y="1077" width="0.0294%" height="15" fill="rgb(242,142,12)" fg:x="208325" fg:w="62"/><text x="99.1397%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (62,069 samples, 29.46%)</title><rect x="69.4684%" y="1189" width="29.4635%" height="15" fill="rgb(234,187,18)" fg:x="146345" fg:w="62069"/><text x="69.7184%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (62,069 samples, 29.46%)</title><rect x="69.4684%" y="1173" width="29.4635%" height="15" fill="rgb(237,44,42)" fg:x="146345" fg:w="62069"/><text x="69.7184%" y="1183.50">core::ops::function::FnOnce::call_once{{vtable...</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (62,068 samples, 29.46%)</title><rect x="69.4689%" y="1157" width="29.4630%" height="15" fill="rgb(211,90,23)" fg:x="146346" fg:w="62068"/><text x="69.7189%" y="1167.50">std::thread::Builder::spawn_unchecked_::{{closu..</text></g><g><title>std::thread::Thread::cname (27 samples, 0.01%)</title><rect x="98.9191%" y="1141" width="0.0128%" height="15" fill="rgb(207,81,18)" fg:x="208387" fg:w="27"/><text x="99.1691%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (26 samples, 0.01%)</title><rect x="98.9196%" y="1125" width="0.0123%" height="15" fill="rgb(222,107,28)" fg:x="208388" fg:w="26"/><text x="99.1696%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (62,076 samples, 29.47%)</title><rect x="69.4656%" y="1205" width="29.4668%" height="15" fill="rgb(237,83,52)" fg:x="146339" fg:w="62076"/><text x="69.7156%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function:..</text></g><g><title>sigaltstack (88 samples, 0.04%)</title><rect x="98.9443%" y="1173" width="0.0418%" height="15" fill="rgb(208,67,11)" fg:x="208440" fg:w="88"/><text x="99.1943%" y="1183.50"></text></g><g><title>[unknown] (77 samples, 0.04%)</title><rect x="98.9495%" y="1157" width="0.0366%" height="15" fill="rgb(249,157,49)" fg:x="208451" fg:w="77"/><text x="99.1995%" y="1167.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="98.9519%" y="1141" width="0.0342%" height="15" fill="rgb(243,200,1)" fg:x="208456" fg:w="72"/><text x="99.2019%" y="1151.50"></text></g><g><title>[unknown] (68 samples, 0.03%)</title><rect x="98.9538%" y="1125" width="0.0323%" height="15" fill="rgb(225,162,37)" fg:x="208460" fg:w="68"/><text x="99.2038%" y="1135.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="98.9585%" y="1109" width="0.0275%" height="15" fill="rgb(242,92,13)" fg:x="208470" fg:w="58"/><text x="99.2085%" y="1119.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="98.9747%" y="1093" width="0.0114%" height="15" fill="rgb(220,43,36)" fg:x="208504" fg:w="24"/><text x="99.2247%" y="1103.50"></text></g><g><title>__mmap (417 samples, 0.20%)</title><rect x="98.9861%" y="1141" width="0.1979%" height="15" fill="rgb(213,165,48)" fg:x="208528" fg:w="417"/><text x="99.2361%" y="1151.50"></text></g><g><title>[unknown] (416 samples, 0.20%)</title><rect x="98.9865%" y="1125" width="0.1975%" height="15" fill="rgb(227,200,9)" fg:x="208529" fg:w="416"/><text x="99.2365%" y="1135.50"></text></g><g><title>[unknown] (416 samples, 0.20%)</title><rect x="98.9865%" y="1109" width="0.1975%" height="15" fill="rgb(221,222,28)" fg:x="208529" fg:w="416"/><text x="99.2365%" y="1119.50"></text></g><g><title>[unknown] (416 samples, 0.20%)</title><rect x="98.9865%" y="1093" width="0.1975%" height="15" fill="rgb(223,142,26)" fg:x="208529" fg:w="416"/><text x="99.2365%" y="1103.50"></text></g><g><title>[unknown] (401 samples, 0.19%)</title><rect x="98.9937%" y="1077" width="0.1904%" height="15" fill="rgb(243,46,9)" fg:x="208544" fg:w="401"/><text x="99.2437%" y="1087.50"></text></g><g><title>[unknown] (317 samples, 0.15%)</title><rect x="99.0335%" y="1061" width="0.1505%" height="15" fill="rgb(250,56,11)" fg:x="208628" fg:w="317"/><text x="99.2835%" y="1071.50"></text></g><g><title>[unknown] (233 samples, 0.11%)</title><rect x="99.0734%" y="1045" width="0.1106%" height="15" fill="rgb(229,113,5)" fg:x="208712" fg:w="233"/><text x="99.3234%" y="1055.50"></text></g><g><title>[unknown] (57 samples, 0.03%)</title><rect x="99.1570%" y="1029" width="0.0271%" height="15" fill="rgb(244,108,28)" fg:x="208888" fg:w="57"/><text x="99.4070%" y="1039.50"></text></g><g><title>__mprotect (419 samples, 0.20%)</title><rect x="99.1840%" y="1141" width="0.1989%" height="15" fill="rgb(242,119,50)" fg:x="208945" fg:w="419"/><text x="99.4340%" y="1151.50"></text></g><g><title>[unknown] (419 samples, 0.20%)</title><rect x="99.1840%" y="1125" width="0.1989%" height="15" fill="rgb(224,164,23)" fg:x="208945" fg:w="419"/><text x="99.4340%" y="1135.50"></text></g><g><title>[unknown] (419 samples, 0.20%)</title><rect x="99.1840%" y="1109" width="0.1989%" height="15" fill="rgb(214,227,44)" fg:x="208945" fg:w="419"/><text x="99.4340%" y="1119.50"></text></g><g><title>[unknown] (419 samples, 0.20%)</title><rect x="99.1840%" y="1093" width="0.1989%" height="15" fill="rgb(238,202,4)" fg:x="208945" fg:w="419"/><text x="99.4340%" y="1103.50"></text></g><g><title>[unknown] (419 samples, 0.20%)</title><rect x="99.1840%" y="1077" width="0.1989%" height="15" fill="rgb(213,190,30)" fg:x="208945" fg:w="419"/><text x="99.4340%" y="1087.50"></text></g><g><title>[unknown] (416 samples, 0.20%)</title><rect x="99.1854%" y="1061" width="0.1975%" height="15" fill="rgb(239,15,2)" fg:x="208948" fg:w="416"/><text x="99.4354%" y="1071.50"></text></g><g><title>[unknown] (405 samples, 0.19%)</title><rect x="99.1907%" y="1045" width="0.1922%" height="15" fill="rgb(249,229,4)" fg:x="208959" fg:w="405"/><text x="99.4407%" y="1055.50"></text></g><g><title>[unknown] (343 samples, 0.16%)</title><rect x="99.2201%" y="1029" width="0.1628%" height="15" fill="rgb(239,75,44)" fg:x="209021" fg:w="343"/><text x="99.4701%" y="1039.50"></text></g><g><title>[unknown] (53 samples, 0.03%)</title><rect x="99.3577%" y="1013" width="0.0252%" height="15" fill="rgb(251,206,23)" fg:x="209311" fg:w="53"/><text x="99.6077%" y="1023.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="99.3653%" y="997" width="0.0176%" height="15" fill="rgb(215,208,0)" fg:x="209327" fg:w="37"/><text x="99.6153%" y="1007.50"></text></g><g><title>[libc.so.6] (63,459 samples, 30.12%)</title><rect x="69.2971%" y="1237" width="30.1233%" height="15" fill="rgb(230,75,50)" fg:x="145984" fg:w="63459"/><text x="69.5471%" y="1247.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (63,124 samples, 29.96%)</title><rect x="69.4561%" y="1221" width="29.9643%" height="15" fill="rgb(246,180,39)" fg:x="146319" fg:w="63124"/><text x="69.7061%" y="1231.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1,028 samples, 0.49%)</title><rect x="98.9324%" y="1205" width="0.4880%" height="15" fill="rgb(249,175,24)" fg:x="208415" fg:w="1028"/><text x="99.1824%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1,028 samples, 0.49%)</title><rect x="98.9324%" y="1189" width="0.4880%" height="15" fill="rgb(247,176,22)" fg:x="208415" fg:w="1028"/><text x="99.1824%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (915 samples, 0.43%)</title><rect x="98.9861%" y="1173" width="0.4343%" height="15" fill="rgb(241,100,24)" fg:x="208528" fg:w="915"/><text x="99.2361%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (915 samples, 0.43%)</title><rect x="98.9861%" y="1157" width="0.4343%" height="15" fill="rgb(233,4,35)" fg:x="208528" fg:w="915"/><text x="99.2361%" y="1167.50"></text></g><g><title>std::sys::unix::os::page_size (70 samples, 0.03%)</title><rect x="99.3872%" y="1141" width="0.0332%" height="15" fill="rgb(211,164,46)" fg:x="209373" fg:w="70"/><text x="99.6372%" y="1151.50"></text></g><g><title>__sysconf (70 samples, 0.03%)</title><rect x="99.3872%" y="1125" width="0.0332%" height="15" fill="rgb(242,99,53)" fg:x="209373" fg:w="70"/><text x="99.6372%" y="1135.50"></text></g><g><title>__getpagesize (22 samples, 0.01%)</title><rect x="99.4100%" y="1109" width="0.0104%" height="15" fill="rgb(243,45,33)" fg:x="209421" fg:w="22"/><text x="99.6600%" y="1119.50"></text></g><g><title>__clone (63,463 samples, 30.13%)</title><rect x="69.2957%" y="1253" width="30.1252%" height="15" fill="rgb(217,55,21)" fg:x="145981" fg:w="63463"/><text x="69.5457%" y="1263.50">__clone</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (25 samples, 0.01%)</title><rect x="99.4285%" y="1237" width="0.0119%" height="15" fill="rgb(245,145,46)" fg:x="209460" fg:w="25"/><text x="99.6785%" y="1247.50"></text></g><g><title>syscall (23 samples, 0.01%)</title><rect x="99.4403%" y="1237" width="0.0109%" height="15" fill="rgb(215,112,45)" fg:x="209485" fg:w="23"/><text x="99.6903%" y="1247.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="99.4403%" y="1221" width="0.0109%" height="15" fill="rgb(228,104,16)" fg:x="209485" fg:w="23"/><text x="99.6903%" y="1231.50"></text></g><g><title>async_executor::steal (54 samples, 0.03%)</title><rect x="99.4275%" y="1253" width="0.0256%" height="15" fill="rgb(239,186,38)" fg:x="209458" fg:w="54"/><text x="99.6775%" y="1263.50"></text></g><g><title>async-std/runti (205,415 samples, 97.51%)</title><rect x="1.9524%" y="1269" width="97.5084%" height="15" fill="rgb(228,38,35)" fg:x="4113" fg:w="205415"/><text x="2.2024%" y="1279.50">async-std/runti</text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (33 samples, 0.02%)</title><rect x="99.4698%" y="1221" width="0.0157%" height="15" fill="rgb(251,42,40)" fg:x="209547" fg:w="33"/><text x="99.7198%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="99.4698%" y="1205" width="0.0157%" height="15" fill="rgb(210,51,19)" fg:x="209547" fg:w="33"/><text x="99.7198%" y="1215.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (33 samples, 0.02%)</title><rect x="99.4698%" y="1189" width="0.0157%" height="15" fill="rgb(236,94,42)" fg:x="209547" fg:w="33"/><text x="99.7198%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="99.4698%" y="1173" width="0.0157%" height="15" fill="rgb(239,167,16)" fg:x="209547" fg:w="33"/><text x="99.7198%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (33 samples, 0.02%)</title><rect x="99.4698%" y="1157" width="0.0157%" height="15" fill="rgb(252,175,31)" fg:x="209547" fg:w="33"/><text x="99.7198%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="99.4698%" y="1141" width="0.0157%" height="15" fill="rgb(206,166,30)" fg:x="209547" fg:w="33"/><text x="99.7198%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (33 samples, 0.02%)</title><rect x="99.4698%" y="1125" width="0.0157%" height="15" fill="rgb(206,209,37)" fg:x="209547" fg:w="33"/><text x="99.7198%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="99.4698%" y="1109" width="0.0157%" height="15" fill="rgb(226,91,4)" fg:x="209547" fg:w="33"/><text x="99.7198%" y="1119.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (40 samples, 0.02%)</title><rect x="99.4878%" y="1141" width="0.0190%" height="15" fill="rgb(222,167,0)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (40 samples, 0.02%)</title><rect x="99.4878%" y="1125" width="0.0190%" height="15" fill="rgb(211,70,14)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (40 samples, 0.02%)</title><rect x="99.4878%" y="1109" width="0.0190%" height="15" fill="rgb(214,84,42)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1119.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="99.4878%" y="1093" width="0.0190%" height="15" fill="rgb(235,157,37)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1103.50"></text></g><g><title>async_std::task::block_on::block_on (40 samples, 0.02%)</title><rect x="99.4878%" y="1077" width="0.0190%" height="15" fill="rgb(225,13,6)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking (40 samples, 0.02%)</title><rect x="99.4878%" y="1061" width="0.0190%" height="15" fill="rgb(205,202,1)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 0.02%)</title><rect x="99.4878%" y="1045" width="0.0190%" height="15" fill="rgb(232,195,26)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.02%)</title><rect x="99.4878%" y="1029" width="0.0190%" height="15" fill="rgb(208,102,26)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (40 samples, 0.02%)</title><rect x="99.4878%" y="1013" width="0.0190%" height="15" fill="rgb(215,41,39)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (40 samples, 0.02%)</title><rect x="99.4878%" y="997" width="0.0190%" height="15" fill="rgb(247,139,11)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 0.02%)</title><rect x="99.4878%" y="981" width="0.0190%" height="15" fill="rgb(243,99,6)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.02%)</title><rect x="99.4878%" y="965" width="0.0190%" height="15" fill="rgb(230,168,48)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (40 samples, 0.02%)</title><rect x="99.4878%" y="949" width="0.0190%" height="15" fill="rgb(238,227,13)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="959.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (40 samples, 0.02%)</title><rect x="99.4878%" y="933" width="0.0190%" height="15" fill="rgb(209,109,13)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="943.50"></text></g><g><title>async_global_executor::executor::block_on (40 samples, 0.02%)</title><rect x="99.4878%" y="917" width="0.0190%" height="15" fill="rgb(228,195,1)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 0.02%)</title><rect x="99.4878%" y="901" width="0.0190%" height="15" fill="rgb(230,218,0)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.02%)</title><rect x="99.4878%" y="885" width="0.0190%" height="15" fill="rgb(206,1,45)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (40 samples, 0.02%)</title><rect x="99.4878%" y="869" width="0.0190%" height="15" fill="rgb(209,124,26)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on (40 samples, 0.02%)</title><rect x="99.4878%" y="853" width="0.0190%" height="15" fill="rgb(220,59,8)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="863.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (40 samples, 0.02%)</title><rect x="99.4878%" y="837" width="0.0190%" height="15" fill="rgb(251,41,37)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="847.50"></text></g><g><title>async_io::driver::block_on (40 samples, 0.02%)</title><rect x="99.4878%" y="821" width="0.0190%" height="15" fill="rgb(239,152,21)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.02%)</title><rect x="99.4878%" y="805" width="0.0190%" height="15" fill="rgb(226,32,1)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="815.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (40 samples, 0.02%)</title><rect x="99.4878%" y="789" width="0.0190%" height="15" fill="rgb(230,154,36)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.02%)</title><rect x="99.4878%" y="773" width="0.0190%" height="15" fill="rgb(208,228,43)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (40 samples, 0.02%)</title><rect x="99.4878%" y="757" width="0.0190%" height="15" fill="rgb(214,203,3)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="767.50"></text></g><g><title>async_executor::Runner::new (40 samples, 0.02%)</title><rect x="99.4878%" y="741" width="0.0190%" height="15" fill="rgb(207,149,29)" fg:x="209585" fg:w="40"/><text x="99.7378%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (37 samples, 0.02%)</title><rect x="99.4892%" y="725" width="0.0176%" height="15" fill="rgb(250,105,7)" fg:x="209588" fg:w="37"/><text x="99.7392%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (34 samples, 0.02%)</title><rect x="99.4907%" y="709" width="0.0161%" height="15" fill="rgb(232,222,16)" fg:x="209591" fg:w="34"/><text x="99.7407%" y="719.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (42 samples, 0.02%)</title><rect x="99.4878%" y="1221" width="0.0199%" height="15" fill="rgb(209,32,24)" fg:x="209585" fg:w="42"/><text x="99.7378%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="99.4878%" y="1205" width="0.0199%" height="15" fill="rgb(225,13,6)" fg:x="209585" fg:w="42"/><text x="99.7378%" y="1215.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (42 samples, 0.02%)</title><rect x="99.4878%" y="1189" width="0.0199%" height="15" fill="rgb(245,226,26)" fg:x="209585" fg:w="42"/><text x="99.7378%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="99.4878%" y="1173" width="0.0199%" height="15" fill="rgb(229,178,27)" fg:x="209585" fg:w="42"/><text x="99.7378%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (42 samples, 0.02%)</title><rect x="99.4878%" y="1157" width="0.0199%" height="15" fill="rgb(205,227,28)" fg:x="209585" fg:w="42"/><text x="99.7378%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (101 samples, 0.05%)</title><rect x="99.4664%" y="1237" width="0.0479%" height="15" fill="rgb(210,191,45)" fg:x="209540" fg:w="101"/><text x="99.7164%" y="1247.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (26 samples, 0.01%)</title><rect x="99.5234%" y="1077" width="0.0123%" height="15" fill="rgb(206,124,16)" fg:x="209660" fg:w="26"/><text x="99.7734%" y="1087.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (26 samples, 0.01%)</title><rect x="99.5234%" y="1061" width="0.0123%" height="15" fill="rgb(210,162,0)" fg:x="209660" fg:w="26"/><text x="99.7734%" y="1071.50"></text></g><g><title>event_listener::List::notify_additional (23 samples, 0.01%)</title><rect x="99.5248%" y="1045" width="0.0109%" height="15" fill="rgb(211,54,38)" fg:x="209663" fg:w="23"/><text x="99.7748%" y="1055.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (37 samples, 0.02%)</title><rect x="99.5538%" y="997" width="0.0176%" height="15" fill="rgb(248,192,3)" fg:x="209724" fg:w="37"/><text x="99.8038%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (30 samples, 0.01%)</title><rect x="99.5571%" y="981" width="0.0142%" height="15" fill="rgb(233,187,18)" fg:x="209731" fg:w="30"/><text x="99.8071%" y="991.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (39 samples, 0.02%)</title><rect x="99.5533%" y="1013" width="0.0185%" height="15" fill="rgb(237,208,14)" fg:x="209723" fg:w="39"/><text x="99.8033%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (65 samples, 0.03%)</title><rect x="99.5419%" y="1045" width="0.0309%" height="15" fill="rgb(212,77,1)" fg:x="209699" fg:w="65"/><text x="99.7919%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (64 samples, 0.03%)</title><rect x="99.5424%" y="1029" width="0.0304%" height="15" fill="rgb(210,163,22)" fg:x="209700" fg:w="64"/><text x="99.7924%" y="1039.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (68 samples, 0.03%)</title><rect x="99.5410%" y="1061" width="0.0323%" height="15" fill="rgb(250,58,28)" fg:x="209697" fg:w="68"/><text x="99.7910%" y="1071.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (75 samples, 0.04%)</title><rect x="99.5381%" y="1077" width="0.0356%" height="15" fill="rgb(254,28,41)" fg:x="209691" fg:w="75"/><text x="99.7881%" y="1087.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (127 samples, 0.06%)</title><rect x="99.5149%" y="1237" width="0.0603%" height="15" fill="rgb(237,162,36)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1247.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (127 samples, 0.06%)</title><rect x="99.5149%" y="1221" width="0.0603%" height="15" fill="rgb(232,56,6)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (127 samples, 0.06%)</title><rect x="99.5149%" y="1205" width="0.0603%" height="15" fill="rgb(216,127,42)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (127 samples, 0.06%)</title><rect x="99.5149%" y="1189" width="0.0603%" height="15" fill="rgb(241,69,15)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1199.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (127 samples, 0.06%)</title><rect x="99.5149%" y="1173" width="0.0603%" height="15" fill="rgb(227,180,19)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (127 samples, 0.06%)</title><rect x="99.5149%" y="1157" width="0.0603%" height="15" fill="rgb(231,188,29)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (127 samples, 0.06%)</title><rect x="99.5149%" y="1141" width="0.0603%" height="15" fill="rgb(224,176,27)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (127 samples, 0.06%)</title><rect x="99.5149%" y="1125" width="0.0603%" height="15" fill="rgb(249,214,19)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (127 samples, 0.06%)</title><rect x="99.5149%" y="1109" width="0.0603%" height="15" fill="rgb(240,0,4)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1119.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (127 samples, 0.06%)</title><rect x="99.5149%" y="1093" width="0.0603%" height="15" fill="rgb(233,28,41)" fg:x="209642" fg:w="127"/><text x="99.7649%" y="1103.50"></text></g><g><title>async_executor::Executor::spawn (25 samples, 0.01%)</title><rect x="99.5818%" y="1237" width="0.0119%" height="15" fill="rgb(220,90,51)" fg:x="209783" fg:w="25"/><text x="99.8318%" y="1247.50"></text></g><g><title>async_task::runnable::spawn_unchecked (25 samples, 0.01%)</title><rect x="99.5818%" y="1221" width="0.0119%" height="15" fill="rgb(250,52,22)" fg:x="209783" fg:w="25"/><text x="99.8318%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (41 samples, 0.02%)</title><rect x="99.6027%" y="949" width="0.0195%" height="15" fill="rgb(231,152,36)" fg:x="209827" fg:w="41"/><text x="99.8527%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.02%)</title><rect x="99.6027%" y="933" width="0.0195%" height="15" fill="rgb(250,218,4)" fg:x="209827" fg:w="41"/><text x="99.8527%" y="943.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (41 samples, 0.02%)</title><rect x="99.6027%" y="917" width="0.0195%" height="15" fill="rgb(210,38,21)" fg:x="209827" fg:w="41"/><text x="99.8527%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.02%)</title><rect x="99.6027%" y="901" width="0.0195%" height="15" fill="rgb(230,75,13)" fg:x="209827" fg:w="41"/><text x="99.8527%" y="911.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (41 samples, 0.02%)</title><rect x="99.6027%" y="885" width="0.0195%" height="15" fill="rgb(250,68,53)" fg:x="209827" fg:w="41"/><text x="99.8527%" y="895.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (30 samples, 0.01%)</title><rect x="99.6079%" y="869" width="0.0142%" height="15" fill="rgb(250,210,16)" fg:x="209838" fg:w="30"/><text x="99.8579%" y="879.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (30 samples, 0.01%)</title><rect x="99.6079%" y="853" width="0.0142%" height="15" fill="rgb(240,132,5)" fg:x="209838" fg:w="30"/><text x="99.8579%" y="863.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (30 samples, 0.01%)</title><rect x="99.6079%" y="837" width="0.0142%" height="15" fill="rgb(222,148,48)" fg:x="209838" fg:w="30"/><text x="99.8579%" y="847.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (30 samples, 0.01%)</title><rect x="99.6079%" y="821" width="0.0142%" height="15" fill="rgb(247,181,24)" fg:x="209838" fg:w="30"/><text x="99.8579%" y="831.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (30 samples, 0.01%)</title><rect x="99.6079%" y="805" width="0.0142%" height="15" fill="rgb(239,5,31)" fg:x="209838" fg:w="30"/><text x="99.8579%" y="815.50"></text></g><g><title>async_io::driver::block_on (47 samples, 0.02%)</title><rect x="99.6027%" y="1237" width="0.0223%" height="15" fill="rgb(241,152,38)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1247.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="99.6027%" y="1221" width="0.0223%" height="15" fill="rgb(246,200,37)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="99.6027%" y="1205" width="0.0223%" height="15" fill="rgb(243,210,26)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1215.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (47 samples, 0.02%)</title><rect x="99.6027%" y="1189" width="0.0223%" height="15" fill="rgb(222,22,22)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1199.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="99.6027%" y="1173" width="0.0223%" height="15" fill="rgb(208,129,28)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="99.6027%" y="1157" width="0.0223%" height="15" fill="rgb(254,169,28)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (47 samples, 0.02%)</title><rect x="99.6027%" y="1141" width="0.0223%" height="15" fill="rgb(225,45,17)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1151.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (47 samples, 0.02%)</title><rect x="99.6027%" y="1125" width="0.0223%" height="15" fill="rgb(232,199,2)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="99.6027%" y="1109" width="0.0223%" height="15" fill="rgb(235,33,40)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="99.6027%" y="1093" width="0.0223%" height="15" fill="rgb(237,89,50)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1103.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (47 samples, 0.02%)</title><rect x="99.6027%" y="1077" width="0.0223%" height="15" fill="rgb(238,126,5)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1087.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="99.6027%" y="1061" width="0.0223%" height="15" fill="rgb(247,214,42)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1071.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (47 samples, 0.02%)</title><rect x="99.6027%" y="1045" width="0.0223%" height="15" fill="rgb(238,60,45)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (47 samples, 0.02%)</title><rect x="99.6027%" y="1029" width="0.0223%" height="15" fill="rgb(225,69,44)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.02%)</title><rect x="99.6027%" y="1013" width="0.0223%" height="15" fill="rgb(241,13,44)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (47 samples, 0.02%)</title><rect x="99.6027%" y="997" width="0.0223%" height="15" fill="rgb(227,121,22)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (47 samples, 0.02%)</title><rect x="99.6027%" y="981" width="0.0223%" height="15" fill="rgb(231,160,23)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="99.6027%" y="965" width="0.0223%" height="15" fill="rgb(250,179,43)" fg:x="209827" fg:w="47"/><text x="99.8527%" y="975.50"></text></g><g><title>async_global_executor::executor::spawn (22 samples, 0.01%)</title><rect x="99.6421%" y="1157" width="0.0104%" height="15" fill="rgb(233,54,46)" fg:x="209910" fg:w="22"/><text x="99.8921%" y="1167.50"></text></g><g><title>async_executor::Executor::spawn (22 samples, 0.01%)</title><rect x="99.6421%" y="1141" width="0.0104%" height="15" fill="rgb(247,120,42)" fg:x="209910" fg:w="22"/><text x="99.8921%" y="1151.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn (26 samples, 0.01%)</title><rect x="99.6407%" y="1237" width="0.0123%" height="15" fill="rgb(221,219,12)" fg:x="209907" fg:w="26"/><text x="99.8907%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (25 samples, 0.01%)</title><rect x="99.6411%" y="1221" width="0.0119%" height="15" fill="rgb(211,126,8)" fg:x="209908" fg:w="25"/><text x="99.8911%" y="1231.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn::{{closure}} (25 samples, 0.01%)</title><rect x="99.6411%" y="1205" width="0.0119%" height="15" fill="rgb(218,154,33)" fg:x="209908" fg:w="25"/><text x="99.8911%" y="1215.50"></text></g><g><title>async_std::task::spawn::spawn (24 samples, 0.01%)</title><rect x="99.6416%" y="1189" width="0.0114%" height="15" fill="rgb(212,199,16)" fg:x="209909" fg:w="24"/><text x="99.8916%" y="1199.50"></text></g><g><title>async_std::task::builder::Builder::spawn (24 samples, 0.01%)</title><rect x="99.6416%" y="1173" width="0.0114%" height="15" fill="rgb(236,215,46)" fg:x="209909" fg:w="24"/><text x="99.8916%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.01%)</title><rect x="99.6544%" y="1157" width="0.0123%" height="15" fill="rgb(232,32,22)" fg:x="209936" fg:w="26"/><text x="99.9044%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (26 samples, 0.01%)</title><rect x="99.6544%" y="1141" width="0.0123%" height="15" fill="rgb(234,79,15)" fg:x="209936" fg:w="26"/><text x="99.9044%" y="1151.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (26 samples, 0.01%)</title><rect x="99.6544%" y="1125" width="0.0123%" height="15" fill="rgb(235,187,47)" fg:x="209936" fg:w="26"/><text x="99.9044%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (44 samples, 0.02%)</title><rect x="99.6544%" y="1237" width="0.0209%" height="15" fill="rgb(244,69,37)" fg:x="209936" fg:w="44"/><text x="99.9044%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (44 samples, 0.02%)</title><rect x="99.6544%" y="1221" width="0.0209%" height="15" fill="rgb(249,140,25)" fg:x="209936" fg:w="44"/><text x="99.9044%" y="1231.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (44 samples, 0.02%)</title><rect x="99.6544%" y="1205" width="0.0209%" height="15" fill="rgb(213,69,8)" fg:x="209936" fg:w="44"/><text x="99.9044%" y="1215.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (44 samples, 0.02%)</title><rect x="99.6544%" y="1189" width="0.0209%" height="15" fill="rgb(220,136,2)" fg:x="209936" fg:w="44"/><text x="99.9044%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (44 samples, 0.02%)</title><rect x="99.6544%" y="1173" width="0.0209%" height="15" fill="rgb(237,50,36)" fg:x="209936" fg:w="44"/><text x="99.9044%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (39 samples, 0.02%)</title><rect x="99.6929%" y="1093" width="0.0185%" height="15" fill="rgb(226,18,11)" fg:x="210017" fg:w="39"/><text x="99.9429%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (61 samples, 0.03%)</title><rect x="99.6834%" y="1141" width="0.0290%" height="15" fill="rgb(243,156,2)" fg:x="209997" fg:w="61"/><text x="99.9334%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (61 samples, 0.03%)</title><rect x="99.6834%" y="1125" width="0.0290%" height="15" fill="rgb(218,8,34)" fg:x="209997" fg:w="61"/><text x="99.9334%" y="1135.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (61 samples, 0.03%)</title><rect x="99.6834%" y="1109" width="0.0290%" height="15" fill="rgb(250,94,35)" fg:x="209997" fg:w="61"/><text x="99.9334%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (113 samples, 0.05%)</title><rect x="99.6753%" y="1237" width="0.0536%" height="15" fill="rgb(229,127,21)" fg:x="209980" fg:w="113"/><text x="99.9253%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (113 samples, 0.05%)</title><rect x="99.6753%" y="1221" width="0.0536%" height="15" fill="rgb(234,49,5)" fg:x="209980" fg:w="113"/><text x="99.9253%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (113 samples, 0.05%)</title><rect x="99.6753%" y="1205" width="0.0536%" height="15" fill="rgb(248,12,16)" fg:x="209980" fg:w="113"/><text x="99.9253%" y="1215.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (113 samples, 0.05%)</title><rect x="99.6753%" y="1189" width="0.0536%" height="15" fill="rgb(208,220,31)" fg:x="209980" fg:w="113"/><text x="99.9253%" y="1199.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (113 samples, 0.05%)</title><rect x="99.6753%" y="1173" width="0.0536%" height="15" fill="rgb(243,184,0)" fg:x="209980" fg:w="113"/><text x="99.9253%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (112 samples, 0.05%)</title><rect x="99.6758%" y="1157" width="0.0532%" height="15" fill="rgb(217,38,21)" fg:x="209981" fg:w="112"/><text x="99.9258%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (31 samples, 0.01%)</title><rect x="99.7380%" y="837" width="0.0147%" height="15" fill="rgb(239,120,45)" fg:x="210112" fg:w="31"/><text x="99.9880%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (49 samples, 0.02%)</title><rect x="99.7299%" y="901" width="0.0233%" height="15" fill="rgb(235,33,2)" fg:x="210095" fg:w="49"/><text x="99.9799%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (49 samples, 0.02%)</title><rect x="99.7299%" y="885" width="0.0233%" height="15" fill="rgb(249,161,5)" fg:x="210095" fg:w="49"/><text x="99.9799%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (32 samples, 0.02%)</title><rect x="99.7380%" y="869" width="0.0152%" height="15" fill="rgb(250,165,48)" fg:x="210112" fg:w="32"/><text x="99.9880%" y="879.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (32 samples, 0.02%)</title><rect x="99.7380%" y="853" width="0.0152%" height="15" fill="rgb(221,23,45)" fg:x="210112" fg:w="32"/><text x="99.9880%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (87 samples, 0.04%)</title><rect x="99.7290%" y="1029" width="0.0413%" height="15" fill="rgb(217,108,46)" fg:x="210093" fg:w="87"/><text x="99.9790%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (87 samples, 0.04%)</title><rect x="99.7290%" y="1013" width="0.0413%" height="15" fill="rgb(254,26,35)" fg:x="210093" fg:w="87"/><text x="99.9790%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (87 samples, 0.04%)</title><rect x="99.7290%" y="997" width="0.0413%" height="15" fill="rgb(218,223,28)" fg:x="210093" fg:w="87"/><text x="99.9790%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (87 samples, 0.04%)</title><rect x="99.7290%" y="981" width="0.0413%" height="15" fill="rgb(242,27,47)" fg:x="210093" fg:w="87"/><text x="99.9790%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (87 samples, 0.04%)</title><rect x="99.7290%" y="965" width="0.0413%" height="15" fill="rgb(218,39,35)" fg:x="210093" fg:w="87"/><text x="99.9790%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (87 samples, 0.04%)</title><rect x="99.7290%" y="949" width="0.0413%" height="15" fill="rgb(232,127,16)" fg:x="210093" fg:w="87"/><text x="99.9790%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (87 samples, 0.04%)</title><rect x="99.7290%" y="933" width="0.0413%" height="15" fill="rgb(231,219,51)" fg:x="210093" fg:w="87"/><text x="99.9790%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (87 samples, 0.04%)</title><rect x="99.7290%" y="917" width="0.0413%" height="15" fill="rgb(217,220,46)" fg:x="210093" fg:w="87"/><text x="99.9790%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.02%)</title><rect x="99.7532%" y="901" width="0.0171%" height="15" fill="rgb(230,75,1)" fg:x="210144" fg:w="36"/><text x="100.0032%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (36 samples, 0.02%)</title><rect x="99.7532%" y="885" width="0.0171%" height="15" fill="rgb(218,2,8)" fg:x="210144" fg:w="36"/><text x="100.0032%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (36 samples, 0.02%)</title><rect x="99.7532%" y="869" width="0.0171%" height="15" fill="rgb(206,111,30)" fg:x="210144" fg:w="36"/><text x="100.0032%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (104 samples, 0.05%)</title><rect x="99.7290%" y="1061" width="0.0494%" height="15" fill="rgb(209,135,6)" fg:x="210093" fg:w="104"/><text x="99.9790%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (104 samples, 0.05%)</title><rect x="99.7290%" y="1045" width="0.0494%" height="15" fill="rgb(205,169,10)" fg:x="210093" fg:w="104"/><text x="99.9790%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (109 samples, 0.05%)</title><rect x="99.7290%" y="1157" width="0.0517%" height="15" fill="rgb(212,204,38)" fg:x="210093" fg:w="109"/><text x="99.9790%" y="1167.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (109 samples, 0.05%)</title><rect x="99.7290%" y="1141" width="0.0517%" height="15" fill="rgb(205,199,14)" fg:x="210093" fg:w="109"/><text x="99.9790%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (109 samples, 0.05%)</title><rect x="99.7290%" y="1125" width="0.0517%" height="15" fill="rgb(212,4,6)" fg:x="210093" fg:w="109"/><text x="99.9790%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (109 samples, 0.05%)</title><rect x="99.7290%" y="1109" width="0.0517%" height="15" fill="rgb(250,15,10)" fg:x="210093" fg:w="109"/><text x="99.9790%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (109 samples, 0.05%)</title><rect x="99.7290%" y="1093" width="0.0517%" height="15" fill="rgb(212,49,51)" fg:x="210093" fg:w="109"/><text x="99.9790%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (109 samples, 0.05%)</title><rect x="99.7290%" y="1077" width="0.0517%" height="15" fill="rgb(235,21,9)" fg:x="210093" fg:w="109"/><text x="99.9790%" y="1087.50"></text></g><g><title>[unknown] (690 samples, 0.33%)</title><rect x="99.4646%" y="1253" width="0.3275%" height="15" fill="rgb(251,31,32)" fg:x="209536" fg:w="690"/><text x="99.7146%" y="1263.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (133 samples, 0.06%)</title><rect x="99.7290%" y="1237" width="0.0631%" height="15" fill="rgb(246,23,9)" fg:x="210093" fg:w="133"/><text x="99.9790%" y="1247.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (133 samples, 0.06%)</title><rect x="99.7290%" y="1221" width="0.0631%" height="15" fill="rgb(225,216,14)" fg:x="210093" fg:w="133"/><text x="99.9790%" y="1231.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (133 samples, 0.06%)</title><rect x="99.7290%" y="1205" width="0.0631%" height="15" fill="rgb(215,200,26)" fg:x="210093" fg:w="133"/><text x="99.9790%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (133 samples, 0.06%)</title><rect x="99.7290%" y="1189" width="0.0631%" height="15" fill="rgb(237,130,47)" fg:x="210093" fg:w="133"/><text x="99.9790%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (133 samples, 0.06%)</title><rect x="99.7290%" y="1173" width="0.0631%" height="15" fill="rgb(247,74,14)" fg:x="210093" fg:w="133"/><text x="99.9790%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (24 samples, 0.01%)</title><rect x="99.7807%" y="1157" width="0.0114%" height="15" fill="rgb(254,97,46)" fg:x="210202" fg:w="24"/><text x="100.0307%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (24 samples, 0.01%)</title><rect x="99.7807%" y="1141" width="0.0114%" height="15" fill="rgb(234,191,1)" fg:x="210202" fg:w="24"/><text x="100.0307%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (24 samples, 0.01%)</title><rect x="99.7807%" y="1125" width="0.0114%" height="15" fill="rgb(215,165,14)" fg:x="210202" fg:w="24"/><text x="100.0307%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (23 samples, 0.01%)</title><rect x="99.7812%" y="1109" width="0.0109%" height="15" fill="rgb(230,182,6)" fg:x="210203" fg:w="23"/><text x="100.0312%" y="1119.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="99.7954%" y="1221" width="0.0228%" height="15" fill="rgb(210,127,39)" fg:x="210233" fg:w="48"/><text x="100.0454%" y="1231.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.8016%" y="1205" width="0.0166%" height="15" fill="rgb(223,212,51)" fg:x="210246" fg:w="35"/><text x="100.0516%" y="1215.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="99.8030%" y="1189" width="0.0152%" height="15" fill="rgb(226,176,43)" fg:x="210249" fg:w="32"/><text x="100.0530%" y="1199.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="99.8063%" y="1173" width="0.0119%" height="15" fill="rgb(222,155,4)" fg:x="210256" fg:w="25"/><text x="100.0563%" y="1183.50"></text></g><g><title>prctl (55 samples, 0.03%)</title><rect x="99.8215%" y="1141" width="0.0261%" height="15" fill="rgb(215,149,7)" fg:x="210288" fg:w="55"/><text x="100.0715%" y="1151.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="99.8215%" y="1125" width="0.0261%" height="15" fill="rgb(252,199,23)" fg:x="210288" fg:w="55"/><text x="100.0715%" y="1135.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="99.8215%" y="1109" width="0.0261%" height="15" fill="rgb(245,52,29)" fg:x="210288" fg:w="55"/><text x="100.0715%" y="1119.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="99.8215%" y="1093" width="0.0261%" height="15" fill="rgb(221,228,19)" fg:x="210288" fg:w="55"/><text x="100.0715%" y="1103.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.8229%" y="1077" width="0.0247%" height="15" fill="rgb(253,101,6)" fg:x="210291" fg:w="52"/><text x="100.0729%" y="1087.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="99.8310%" y="1061" width="0.0166%" height="15" fill="rgb(211,130,8)" fg:x="210308" fg:w="35"/><text x="100.0810%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (39 samples, 0.02%)</title><rect x="99.8514%" y="581" width="0.0185%" height="15" fill="rgb(238,37,53)" fg:x="210351" fg:w="39"/><text x="100.1014%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.02%)</title><rect x="99.8514%" y="565" width="0.0185%" height="15" fill="rgb(235,145,5)" fg:x="210351" fg:w="39"/><text x="100.1014%" y="575.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (39 samples, 0.02%)</title><rect x="99.8514%" y="549" width="0.0185%" height="15" fill="rgb(244,12,43)" fg:x="210351" fg:w="39"/><text x="100.1014%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.02%)</title><rect x="99.8514%" y="533" width="0.0185%" height="15" fill="rgb(246,195,24)" fg:x="210351" fg:w="39"/><text x="100.1014%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (39 samples, 0.02%)</title><rect x="99.8514%" y="517" width="0.0185%" height="15" fill="rgb(235,163,6)" fg:x="210351" fg:w="39"/><text x="100.1014%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="99.8514%" y="597" width="0.0199%" height="15" fill="rgb(236,218,17)" fg:x="210351" fg:w="42"/><text x="100.1014%" y="607.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="99.8514%" y="693" width="0.0247%" height="15" fill="rgb(235,12,38)" fg:x="210351" fg:w="52"/><text x="100.1014%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (52 samples, 0.02%)</title><rect x="99.8514%" y="677" width="0.0247%" height="15" fill="rgb(225,195,33)" fg:x="210351" fg:w="52"/><text x="100.1014%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (52 samples, 0.02%)</title><rect x="99.8514%" y="661" width="0.0247%" height="15" fill="rgb(238,54,35)" fg:x="210351" fg:w="52"/><text x="100.1014%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (52 samples, 0.02%)</title><rect x="99.8514%" y="645" width="0.0247%" height="15" fill="rgb(238,33,7)" fg:x="210351" fg:w="52"/><text x="100.1014%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (52 samples, 0.02%)</title><rect x="99.8514%" y="629" width="0.0247%" height="15" fill="rgb(245,5,14)" fg:x="210351" fg:w="52"/><text x="100.1014%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (52 samples, 0.02%)</title><rect x="99.8514%" y="613" width="0.0247%" height="15" fill="rgb(251,95,31)" fg:x="210351" fg:w="52"/><text x="100.1014%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (58 samples, 0.03%)</title><rect x="99.8509%" y="741" width="0.0275%" height="15" fill="rgb(222,15,46)" fg:x="210350" fg:w="58"/><text x="100.1009%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.03%)</title><rect x="99.8509%" y="725" width="0.0275%" height="15" fill="rgb(226,182,24)" fg:x="210350" fg:w="58"/><text x="100.1009%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (58 samples, 0.03%)</title><rect x="99.8509%" y="709" width="0.0275%" height="15" fill="rgb(229,105,41)" fg:x="210350" fg:w="58"/><text x="100.1009%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (63 samples, 0.03%)</title><rect x="99.8500%" y="757" width="0.0299%" height="15" fill="rgb(216,99,53)" fg:x="210348" fg:w="63"/><text x="100.1000%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (70 samples, 0.03%)</title><rect x="99.8476%" y="821" width="0.0332%" height="15" fill="rgb(253,26,20)" fg:x="210343" fg:w="70"/><text x="100.0976%" y="831.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (70 samples, 0.03%)</title><rect x="99.8476%" y="805" width="0.0332%" height="15" fill="rgb(249,155,28)" fg:x="210343" fg:w="70"/><text x="100.0976%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.03%)</title><rect x="99.8476%" y="789" width="0.0332%" height="15" fill="rgb(241,221,2)" fg:x="210343" fg:w="70"/><text x="100.0976%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (67 samples, 0.03%)</title><rect x="99.8490%" y="773" width="0.0318%" height="15" fill="rgb(219,124,6)" fg:x="210346" fg:w="67"/><text x="100.0990%" y="783.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="99.8476%" y="853" width="0.0337%" height="15" fill="rgb(233,37,6)" fg:x="210343" fg:w="71"/><text x="100.0976%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="99.8476%" y="837" width="0.0337%" height="15" fill="rgb(238,20,14)" fg:x="210343" fg:w="71"/><text x="100.0976%" y="847.50"></text></g><g><title>std::panic::catch_unwind (77 samples, 0.04%)</title><rect x="99.8476%" y="1141" width="0.0366%" height="15" fill="rgb(232,106,27)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1151.50"></text></g><g><title>std::panicking::try (77 samples, 0.04%)</title><rect x="99.8476%" y="1125" width="0.0366%" height="15" fill="rgb(246,157,24)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (77 samples, 0.04%)</title><rect x="99.8476%" y="1109" width="0.0366%" height="15" fill="rgb(214,153,10)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (77 samples, 0.04%)</title><rect x="99.8476%" y="1093" width="0.0366%" height="15" fill="rgb(212,94,6)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (77 samples, 0.04%)</title><rect x="99.8476%" y="1077" width="0.0366%" height="15" fill="rgb(254,25,27)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (77 samples, 0.04%)</title><rect x="99.8476%" y="1061" width="0.0366%" height="15" fill="rgb(250,43,52)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (77 samples, 0.04%)</title><rect x="99.8476%" y="1045" width="0.0366%" height="15" fill="rgb(221,226,40)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1055.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (77 samples, 0.04%)</title><rect x="99.8476%" y="1029" width="0.0366%" height="15" fill="rgb(235,162,34)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (77 samples, 0.04%)</title><rect x="99.8476%" y="1013" width="0.0366%" height="15" fill="rgb(239,24,26)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1023.50"></text></g><g><title>std::panicking::try (77 samples, 0.04%)</title><rect x="99.8476%" y="997" width="0.0366%" height="15" fill="rgb(244,226,11)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (77 samples, 0.04%)</title><rect x="99.8476%" y="981" width="0.0366%" height="15" fill="rgb(225,23,10)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="991.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (77 samples, 0.04%)</title><rect x="99.8476%" y="965" width="0.0366%" height="15" fill="rgb(249,125,6)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (77 samples, 0.04%)</title><rect x="99.8476%" y="949" width="0.0366%" height="15" fill="rgb(246,212,12)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (77 samples, 0.04%)</title><rect x="99.8476%" y="933" width="0.0366%" height="15" fill="rgb(230,43,32)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="943.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (77 samples, 0.04%)</title><rect x="99.8476%" y="917" width="0.0366%" height="15" fill="rgb(210,95,23)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on (77 samples, 0.04%)</title><rect x="99.8476%" y="901" width="0.0366%" height="15" fill="rgb(229,103,33)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (77 samples, 0.04%)</title><rect x="99.8476%" y="885" width="0.0366%" height="15" fill="rgb(222,104,27)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="895.50"></text></g><g><title>async_io::driver::block_on (77 samples, 0.04%)</title><rect x="99.8476%" y="869" width="0.0366%" height="15" fill="rgb(239,221,23)" fg:x="210343" fg:w="77"/><text x="100.0976%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (134 samples, 0.06%)</title><rect x="99.8215%" y="1205" width="0.0636%" height="15" fill="rgb(222,98,21)" fg:x="210288" fg:w="134"/><text x="100.0715%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (134 samples, 0.06%)</title><rect x="99.8215%" y="1189" width="0.0636%" height="15" fill="rgb(231,101,20)" fg:x="210288" fg:w="134"/><text x="100.0715%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (134 samples, 0.06%)</title><rect x="99.8215%" y="1173" width="0.0636%" height="15" fill="rgb(215,150,22)" fg:x="210288" fg:w="134"/><text x="100.0715%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (134 samples, 0.06%)</title><rect x="99.8215%" y="1157" width="0.0636%" height="15" fill="rgb(248,3,34)" fg:x="210288" fg:w="134"/><text x="100.0715%" y="1167.50"></text></g><g><title>__mmap (58 samples, 0.03%)</title><rect x="99.8899%" y="1141" width="0.0275%" height="15" fill="rgb(220,141,21)" fg:x="210432" fg:w="58"/><text x="100.1399%" y="1151.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="99.8899%" y="1125" width="0.0275%" height="15" fill="rgb(223,41,48)" fg:x="210432" fg:w="58"/><text x="100.1399%" y="1135.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="99.8899%" y="1109" width="0.0275%" height="15" fill="rgb(247,12,5)" fg:x="210432" fg:w="58"/><text x="100.1399%" y="1119.50"></text></g><g><title>[unknown] (58 samples, 0.03%)</title><rect x="99.8899%" y="1093" width="0.0275%" height="15" fill="rgb(206,173,10)" fg:x="210432" fg:w="58"/><text x="100.1399%" y="1103.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="99.8918%" y="1077" width="0.0256%" height="15" fill="rgb(233,214,37)" fg:x="210436" fg:w="54"/><text x="100.1418%" y="1087.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="99.8994%" y="1061" width="0.0180%" height="15" fill="rgb(238,86,43)" fg:x="210452" fg:w="38"/><text x="100.1494%" y="1071.50"></text></g><g><title>__mprotect (62 samples, 0.03%)</title><rect x="99.9174%" y="1141" width="0.0294%" height="15" fill="rgb(212,182,8)" fg:x="210490" fg:w="62"/><text x="100.1674%" y="1151.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="99.9174%" y="1125" width="0.0294%" height="15" fill="rgb(240,91,47)" fg:x="210490" fg:w="62"/><text x="100.1674%" y="1135.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="99.9174%" y="1109" width="0.0294%" height="15" fill="rgb(209,138,26)" fg:x="210490" fg:w="62"/><text x="100.1674%" y="1119.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="99.9174%" y="1093" width="0.0294%" height="15" fill="rgb(231,163,20)" fg:x="210490" fg:w="62"/><text x="100.1674%" y="1103.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="99.9174%" y="1077" width="0.0294%" height="15" fill="rgb(214,91,54)" fg:x="210490" fg:w="62"/><text x="100.1674%" y="1087.50"></text></g><g><title>[unknown] (62 samples, 0.03%)</title><rect x="99.9174%" y="1061" width="0.0294%" height="15" fill="rgb(230,32,17)" fg:x="210490" fg:w="62"/><text x="100.1674%" y="1071.50"></text></g><g><title>[unknown] (61 samples, 0.03%)</title><rect x="99.9179%" y="1045" width="0.0290%" height="15" fill="rgb(231,34,34)" fg:x="210491" fg:w="61"/><text x="100.1679%" y="1055.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="99.9326%" y="1029" width="0.0142%" height="15" fill="rgb(224,228,27)" fg:x="210522" fg:w="30"/><text x="100.1826%" y="1039.50"></text></g><g><title>router-eval-tes (1,039 samples, 0.49%)</title><rect x="99.4608%" y="1269" width="0.4932%" height="15" fill="rgb(219,35,40)" fg:x="209528" fg:w="1039"/><text x="99.7108%" y="1279.50"></text></g><g><title>__clone (341 samples, 0.16%)</title><rect x="99.7921%" y="1253" width="0.1619%" height="15" fill="rgb(234,42,8)" fg:x="210226" fg:w="341"/><text x="100.0421%" y="1263.50"></text></g><g><title>[libc.so.6] (339 samples, 0.16%)</title><rect x="99.7930%" y="1237" width="0.1609%" height="15" fill="rgb(226,75,22)" fg:x="210228" fg:w="339"/><text x="100.0430%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (279 samples, 0.13%)</title><rect x="99.8215%" y="1221" width="0.1324%" height="15" fill="rgb(242,203,28)" fg:x="210288" fg:w="279"/><text x="100.0715%" y="1231.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (145 samples, 0.07%)</title><rect x="99.8851%" y="1205" width="0.0688%" height="15" fill="rgb(221,3,9)" fg:x="210422" fg:w="145"/><text x="100.1351%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (145 samples, 0.07%)</title><rect x="99.8851%" y="1189" width="0.0688%" height="15" fill="rgb(214,34,31)" fg:x="210422" fg:w="145"/><text x="100.1351%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (135 samples, 0.06%)</title><rect x="99.8899%" y="1173" width="0.0641%" height="15" fill="rgb(252,119,15)" fg:x="210432" fg:w="135"/><text x="100.1399%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (135 samples, 0.06%)</title><rect x="99.8899%" y="1157" width="0.0641%" height="15" fill="rgb(244,224,31)" fg:x="210432" fg:w="135"/><text x="100.1399%" y="1167.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.02%)</title><rect x="99.9597%" y="1013" width="0.0157%" height="15" fill="rgb(215,8,51)" fg:x="210579" fg:w="33"/><text x="100.2097%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.02%)</title><rect x="99.9597%" y="997" width="0.0157%" height="15" fill="rgb(207,24,1)" fg:x="210579" fg:w="33"/><text x="100.2097%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.02%)</title><rect x="99.9597%" y="981" width="0.0157%" height="15" fill="rgb(245,90,0)" fg:x="210579" fg:w="33"/><text x="100.2097%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (33 samples, 0.02%)</title><rect x="99.9597%" y="965" width="0.0157%" height="15" fill="rgb(246,43,48)" fg:x="210579" fg:w="33"/><text x="100.2097%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (33 samples, 0.02%)</title><rect x="99.9597%" y="949" width="0.0157%" height="15" fill="rgb(252,218,10)" fg:x="210579" fg:w="33"/><text x="100.2097%" y="959.50"></text></g><g><title>std::panic::catch_unwind (69 samples, 0.03%)</title><rect x="99.9549%" y="1141" width="0.0328%" height="15" fill="rgb(231,24,35)" fg:x="210569" fg:w="69"/><text x="100.2049%" y="1151.50"></text></g><g><title>std::panicking::try (69 samples, 0.03%)</title><rect x="99.9549%" y="1125" width="0.0328%" height="15" fill="rgb(225,66,19)" fg:x="210569" fg:w="69"/><text x="100.2049%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (69 samples, 0.03%)</title><rect x="99.9549%" y="1109" width="0.0328%" height="15" fill="rgb(214,96,51)" fg:x="210569" fg:w="69"/><text x="100.2049%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (69 samples, 0.03%)</title><rect x="99.9549%" y="1093" width="0.0328%" height="15" fill="rgb(251,151,47)" fg:x="210569" fg:w="69"/><text x="100.2049%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (69 samples, 0.03%)</title><rect x="99.9549%" y="1077" width="0.0328%" height="15" fill="rgb(236,79,14)" fg:x="210569" fg:w="69"/><text x="100.2049%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (69 samples, 0.03%)</title><rect x="99.9549%" y="1061" width="0.0328%" height="15" fill="rgb(210,205,11)" fg:x="210569" fg:w="69"/><text x="100.2049%" y="1071.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (69 samples, 0.03%)</title><rect x="99.9549%" y="1045" width="0.0328%" height="15" fill="rgb(233,142,53)" fg:x="210569" fg:w="69"/><text x="100.2049%" y="1055.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (69 samples, 0.03%)</title><rect x="99.9549%" y="1029" width="0.0328%" height="15" fill="rgb(212,116,48)" fg:x="210569" fg:w="69"/><text x="100.2049%" y="1039.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (26 samples, 0.01%)</title><rect x="99.9753%" y="1013" width="0.0123%" height="15" fill="rgb(234,55,33)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="1023.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (26 samples, 0.01%)</title><rect x="99.9753%" y="997" width="0.0123%" height="15" fill="rgb(253,92,27)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="1007.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (26 samples, 0.01%)</title><rect x="99.9753%" y="981" width="0.0123%" height="15" fill="rgb(220,7,35)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (26 samples, 0.01%)</title><rect x="99.9753%" y="965" width="0.0123%" height="15" fill="rgb(246,124,6)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (26 samples, 0.01%)</title><rect x="99.9753%" y="949" width="0.0123%" height="15" fill="rgb(212,111,51)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (26 samples, 0.01%)</title><rect x="99.9753%" y="933" width="0.0123%" height="15" fill="rgb(253,116,7)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="943.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.01%)</title><rect x="99.9753%" y="917" width="0.0123%" height="15" fill="rgb(213,145,18)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="927.50"></text></g><g><title>std::panicking::try (26 samples, 0.01%)</title><rect x="99.9753%" y="901" width="0.0123%" height="15" fill="rgb(219,149,7)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="911.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.01%)</title><rect x="99.9753%" y="885" width="0.0123%" height="15" fill="rgb(225,156,20)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="895.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.01%)</title><rect x="99.9753%" y="869" width="0.0123%" height="15" fill="rgb(211,98,19)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (26 samples, 0.01%)</title><rect x="99.9753%" y="853" width="0.0123%" height="15" fill="rgb(231,192,31)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="863.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (26 samples, 0.01%)</title><rect x="99.9753%" y="837" width="0.0123%" height="15" fill="rgb(249,95,19)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (26 samples, 0.01%)</title><rect x="99.9753%" y="821" width="0.0123%" height="15" fill="rgb(247,101,36)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="831.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (26 samples, 0.01%)</title><rect x="99.9753%" y="805" width="0.0123%" height="15" fill="rgb(221,45,43)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="815.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.01%)</title><rect x="99.9753%" y="789" width="0.0123%" height="15" fill="rgb(220,42,1)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (26 samples, 0.01%)</title><rect x="99.9753%" y="773" width="0.0123%" height="15" fill="rgb(236,19,24)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (26 samples, 0.01%)</title><rect x="99.9753%" y="757" width="0.0123%" height="15" fill="rgb(225,192,6)" fg:x="210612" fg:w="26"/><text x="100.2253%" y="767.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (25 samples, 0.01%)</title><rect x="99.9758%" y="741" width="0.0119%" height="15" fill="rgb(242,30,19)" fg:x="210613" fg:w="25"/><text x="100.2258%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (25 samples, 0.01%)</title><rect x="99.9758%" y="725" width="0.0119%" height="15" fill="rgb(240,36,6)" fg:x="210613" fg:w="25"/><text x="100.2258%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (25 samples, 0.01%)</title><rect x="99.9758%" y="709" width="0.0119%" height="15" fill="rgb(246,40,28)" fg:x="210613" fg:w="25"/><text x="100.2258%" y="719.50"></text></g><g><title>std::sys::unix::thread::guard::current (25 samples, 0.01%)</title><rect x="99.9877%" y="1141" width="0.0119%" height="15" fill="rgb(225,155,33)" fg:x="210638" fg:w="25"/><text x="100.2377%" y="1151.50"></text></g><g><title>pthread_getattr_np (25 samples, 0.01%)</title><rect x="99.9877%" y="1125" width="0.0119%" height="15" fill="rgb(240,65,18)" fg:x="210638" fg:w="25"/><text x="100.2377%" y="1135.50"></text></g><g><title>all (210,664 samples, 100%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(217,0,48)" fg:x="0" fg:w="210664"/><text x="0.2500%" y="1295.50"></text></g><g><title>tokio-runtime-w (97 samples, 0.05%)</title><rect x="99.9540%" y="1269" width="0.0460%" height="15" fill="rgb(217,80,15)" fg:x="210567" fg:w="97"/><text x="100.2040%" y="1279.50"></text></g><g><title>__clone (97 samples, 0.05%)</title><rect x="99.9540%" y="1253" width="0.0460%" height="15" fill="rgb(253,43,51)" fg:x="210567" fg:w="97"/><text x="100.2040%" y="1263.50"></text></g><g><title>[libc.so.6] (97 samples, 0.05%)</title><rect x="99.9540%" y="1237" width="0.0460%" height="15" fill="rgb(246,60,4)" fg:x="210567" fg:w="97"/><text x="100.2040%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (97 samples, 0.05%)</title><rect x="99.9540%" y="1221" width="0.0460%" height="15" fill="rgb(230,40,54)" fg:x="210567" fg:w="97"/><text x="100.2040%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (97 samples, 0.05%)</title><rect x="99.9540%" y="1205" width="0.0460%" height="15" fill="rgb(208,20,44)" fg:x="210567" fg:w="97"/><text x="100.2040%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (97 samples, 0.05%)</title><rect x="99.9540%" y="1189" width="0.0460%" height="15" fill="rgb(230,22,22)" fg:x="210567" fg:w="97"/><text x="100.2040%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (97 samples, 0.05%)</title><rect x="99.9540%" y="1173" width="0.0460%" height="15" fill="rgb(207,57,4)" fg:x="210567" fg:w="97"/><text x="100.2040%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (97 samples, 0.05%)</title><rect x="99.9540%" y="1157" width="0.0460%" height="15" fill="rgb(242,130,33)" fg:x="210567" fg:w="97"/><text x="100.2040%" y="1167.50"></text></g></svg></svg>