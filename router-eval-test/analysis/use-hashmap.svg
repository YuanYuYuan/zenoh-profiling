<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1334" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1317.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1317.00"> </text><svg id="frames" x="10" width="1180" total_samples="275341"><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.01%)</title><rect x="0.0058%" y="725" width="0.0109%" height="15" fill="rgb(227,0,7)" fg:x="16" fg:w="30"/><text x="0.2558%" y="735.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (30 samples, 0.01%)</title><rect x="0.0058%" y="709" width="0.0109%" height="15" fill="rgb(217,0,24)" fg:x="16" fg:w="30"/><text x="0.2558%" y="719.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="1205" width="0.0153%" height="15" fill="rgb(221,193,54)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1215.50"></text></g><g><title>async_global_executor::reactor::block_on (42 samples, 0.02%)</title><rect x="0.0058%" y="1189" width="0.0153%" height="15" fill="rgb(248,212,6)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1199.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="1173" width="0.0153%" height="15" fill="rgb(208,68,35)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1183.50"></text></g><g><title>async_io::driver::block_on (42 samples, 0.02%)</title><rect x="0.0058%" y="1157" width="0.0153%" height="15" fill="rgb(232,128,0)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="1141" width="0.0153%" height="15" fill="rgb(207,160,47)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1151.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="1125" width="0.0153%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="1109" width="0.0153%" height="15" fill="rgb(218,30,26)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1119.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="1093" width="0.0153%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1103.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="1077" width="0.0153%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1087.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="1061" width="0.0153%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1071.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (42 samples, 0.02%)</title><rect x="0.0058%" y="1045" width="0.0153%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (42 samples, 0.02%)</title><rect x="0.0058%" y="1029" width="0.0153%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (42 samples, 0.02%)</title><rect x="0.0058%" y="1013" width="0.0153%" height="15" fill="rgb(217,207,13)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="997" width="0.0153%" height="15" fill="rgb(231,73,38)" fg:x="16" fg:w="42"/><text x="0.2558%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="981" width="0.0153%" height="15" fill="rgb(225,20,46)" fg:x="16" fg:w="42"/><text x="0.2558%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="965" width="0.0153%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="42"/><text x="0.2558%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="949" width="0.0153%" height="15" fill="rgb(221,200,47)" fg:x="16" fg:w="42"/><text x="0.2558%" y="959.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="933" width="0.0153%" height="15" fill="rgb(226,26,5)" fg:x="16" fg:w="42"/><text x="0.2558%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="917" width="0.0153%" height="15" fill="rgb(249,33,26)" fg:x="16" fg:w="42"/><text x="0.2558%" y="927.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="901" width="0.0153%" height="15" fill="rgb(235,183,28)" fg:x="16" fg:w="42"/><text x="0.2558%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (42 samples, 0.02%)</title><rect x="0.0058%" y="885" width="0.0153%" height="15" fill="rgb(221,5,38)" fg:x="16" fg:w="42"/><text x="0.2558%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="869" width="0.0153%" height="15" fill="rgb(247,18,42)" fg:x="16" fg:w="42"/><text x="0.2558%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="853" width="0.0153%" height="15" fill="rgb(241,131,45)" fg:x="16" fg:w="42"/><text x="0.2558%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="837" width="0.0153%" height="15" fill="rgb(249,31,29)" fg:x="16" fg:w="42"/><text x="0.2558%" y="847.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="821" width="0.0153%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="42"/><text x="0.2558%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="805" width="0.0153%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="42"/><text x="0.2558%" y="815.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="789" width="0.0153%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="42"/><text x="0.2558%" y="799.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="773" width="0.0153%" height="15" fill="rgb(232,36,49)" fg:x="16" fg:w="42"/><text x="0.2558%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0058%" y="757" width="0.0153%" height="15" fill="rgb(209,103,24)" fg:x="16" fg:w="42"/><text x="0.2558%" y="767.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (42 samples, 0.02%)</title><rect x="0.0058%" y="741" width="0.0153%" height="15" fill="rgb(229,88,8)" fg:x="16" fg:w="42"/><text x="0.2558%" y="751.50"></text></g><g><title>[unknown] (96 samples, 0.03%)</title><rect x="0.0000%" y="1253" width="0.0349%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="96"/><text x="0.2500%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (80 samples, 0.03%)</title><rect x="0.0058%" y="1237" width="0.0291%" height="15" fill="rgb(254,191,54)" fg:x="16" fg:w="80"/><text x="0.2558%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (80 samples, 0.03%)</title><rect x="0.0058%" y="1221" width="0.0291%" height="15" fill="rgb(241,83,37)" fg:x="16" fg:w="80"/><text x="0.2558%" y="1231.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="1205" width="0.0116%" height="15" fill="rgb(233,36,39)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="1189" width="0.0116%" height="15" fill="rgb(226,3,54)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1199.50"></text></g><g><title>async_global_executor::executor::block_on (32 samples, 0.01%)</title><rect x="0.0232%" y="1173" width="0.0116%" height="15" fill="rgb(245,192,40)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.01%)</title><rect x="0.0232%" y="1157" width="0.0116%" height="15" fill="rgb(238,167,29)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.01%)</title><rect x="0.0232%" y="1141" width="0.0116%" height="15" fill="rgb(232,182,51)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1151.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="1125" width="0.0116%" height="15" fill="rgb(231,60,39)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1135.50"></text></g><g><title>async_global_executor::reactor::block_on (32 samples, 0.01%)</title><rect x="0.0232%" y="1109" width="0.0116%" height="15" fill="rgb(208,69,12)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1119.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="1093" width="0.0116%" height="15" fill="rgb(235,93,37)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1103.50"></text></g><g><title>async_io::driver::block_on (32 samples, 0.01%)</title><rect x="0.0232%" y="1077" width="0.0116%" height="15" fill="rgb(213,116,39)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="1061" width="0.0116%" height="15" fill="rgb(222,207,29)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1071.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="1045" width="0.0116%" height="15" fill="rgb(206,96,30)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="1029" width="0.0116%" height="15" fill="rgb(218,138,4)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1039.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="1013" width="0.0116%" height="15" fill="rgb(250,191,14)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1023.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="997" width="0.0116%" height="15" fill="rgb(239,60,40)" fg:x="64" fg:w="32"/><text x="0.2732%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="981" width="0.0116%" height="15" fill="rgb(206,27,48)" fg:x="64" fg:w="32"/><text x="0.2732%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (32 samples, 0.01%)</title><rect x="0.0232%" y="965" width="0.0116%" height="15" fill="rgb(225,35,8)" fg:x="64" fg:w="32"/><text x="0.2732%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.01%)</title><rect x="0.0232%" y="949" width="0.0116%" height="15" fill="rgb(250,213,24)" fg:x="64" fg:w="32"/><text x="0.2732%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.01%)</title><rect x="0.0232%" y="933" width="0.0116%" height="15" fill="rgb(247,123,22)" fg:x="64" fg:w="32"/><text x="0.2732%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="917" width="0.0116%" height="15" fill="rgb(231,138,38)" fg:x="64" fg:w="32"/><text x="0.2732%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="901" width="0.0116%" height="15" fill="rgb(231,145,46)" fg:x="64" fg:w="32"/><text x="0.2732%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="885" width="0.0116%" height="15" fill="rgb(251,118,11)" fg:x="64" fg:w="32"/><text x="0.2732%" y="895.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="869" width="0.0116%" height="15" fill="rgb(217,147,25)" fg:x="64" fg:w="32"/><text x="0.2732%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="853" width="0.0116%" height="15" fill="rgb(247,81,37)" fg:x="64" fg:w="32"/><text x="0.2732%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="837" width="0.0116%" height="15" fill="rgb(209,12,38)" fg:x="64" fg:w="32"/><text x="0.2732%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="821" width="0.0116%" height="15" fill="rgb(227,1,9)" fg:x="64" fg:w="32"/><text x="0.2732%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (32 samples, 0.01%)</title><rect x="0.0232%" y="805" width="0.0116%" height="15" fill="rgb(248,47,43)" fg:x="64" fg:w="32"/><text x="0.2732%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="789" width="0.0116%" height="15" fill="rgb(221,10,30)" fg:x="64" fg:w="32"/><text x="0.2732%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="773" width="0.0116%" height="15" fill="rgb(210,229,1)" fg:x="64" fg:w="32"/><text x="0.2732%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="757" width="0.0116%" height="15" fill="rgb(222,148,37)" fg:x="64" fg:w="32"/><text x="0.2732%" y="767.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="741" width="0.0116%" height="15" fill="rgb(234,67,33)" fg:x="64" fg:w="32"/><text x="0.2732%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.0232%" y="725" width="0.0116%" height="15" fill="rgb(247,98,35)" fg:x="64" fg:w="32"/><text x="0.2732%" y="735.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (32 samples, 0.01%)</title><rect x="0.0232%" y="709" width="0.0116%" height="15" fill="rgb(247,138,52)" fg:x="64" fg:w="32"/><text x="0.2732%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0374%" y="501" width="0.0153%" height="15" fill="rgb(213,79,30)" fg:x="103" fg:w="42"/><text x="0.2874%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (42 samples, 0.02%)</title><rect x="0.0374%" y="485" width="0.0153%" height="15" fill="rgb(246,177,23)" fg:x="103" fg:w="42"/><text x="0.2874%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.01%)</title><rect x="0.0378%" y="469" width="0.0149%" height="15" fill="rgb(230,62,27)" fg:x="104" fg:w="41"/><text x="0.2878%" y="479.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (41 samples, 0.01%)</title><rect x="0.0378%" y="453" width="0.0149%" height="15" fill="rgb(216,154,8)" fg:x="104" fg:w="41"/><text x="0.2878%" y="463.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (41 samples, 0.01%)</title><rect x="0.0378%" y="437" width="0.0149%" height="15" fill="rgb(244,35,45)" fg:x="104" fg:w="41"/><text x="0.2878%" y="447.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (41 samples, 0.01%)</title><rect x="0.0378%" y="421" width="0.0149%" height="15" fill="rgb(251,115,12)" fg:x="104" fg:w="41"/><text x="0.2878%" y="431.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (50 samples, 0.02%)</title><rect x="0.0360%" y="677" width="0.0182%" height="15" fill="rgb(240,54,50)" fg:x="99" fg:w="50"/><text x="0.2860%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (50 samples, 0.02%)</title><rect x="0.0360%" y="661" width="0.0182%" height="15" fill="rgb(233,84,52)" fg:x="99" fg:w="50"/><text x="0.2860%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 samples, 0.02%)</title><rect x="0.0360%" y="645" width="0.0182%" height="15" fill="rgb(207,117,47)" fg:x="99" fg:w="50"/><text x="0.2860%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (50 samples, 0.02%)</title><rect x="0.0360%" y="629" width="0.0182%" height="15" fill="rgb(249,43,39)" fg:x="99" fg:w="50"/><text x="0.2860%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (49 samples, 0.02%)</title><rect x="0.0363%" y="613" width="0.0178%" height="15" fill="rgb(209,38,44)" fg:x="100" fg:w="49"/><text x="0.2863%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (49 samples, 0.02%)</title><rect x="0.0363%" y="597" width="0.0178%" height="15" fill="rgb(236,212,23)" fg:x="100" fg:w="49"/><text x="0.2863%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="0.0363%" y="581" width="0.0178%" height="15" fill="rgb(242,79,21)" fg:x="100" fg:w="49"/><text x="0.2863%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (49 samples, 0.02%)</title><rect x="0.0363%" y="565" width="0.0178%" height="15" fill="rgb(211,96,35)" fg:x="100" fg:w="49"/><text x="0.2863%" y="575.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="0.0363%" y="549" width="0.0178%" height="15" fill="rgb(253,215,40)" fg:x="100" fg:w="49"/><text x="0.2863%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.02%)</title><rect x="0.0374%" y="533" width="0.0167%" height="15" fill="rgb(211,81,21)" fg:x="103" fg:w="46"/><text x="0.2874%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (46 samples, 0.02%)</title><rect x="0.0374%" y="517" width="0.0167%" height="15" fill="rgb(208,190,38)" fg:x="103" fg:w="46"/><text x="0.2874%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.02%)</title><rect x="0.0352%" y="757" width="0.0200%" height="15" fill="rgb(235,213,38)" fg:x="97" fg:w="55"/><text x="0.2852%" y="767.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (55 samples, 0.02%)</title><rect x="0.0352%" y="741" width="0.0200%" height="15" fill="rgb(237,122,38)" fg:x="97" fg:w="55"/><text x="0.2852%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="0.0360%" y="725" width="0.0192%" height="15" fill="rgb(244,218,35)" fg:x="99" fg:w="53"/><text x="0.2860%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (53 samples, 0.02%)</title><rect x="0.0360%" y="709" width="0.0192%" height="15" fill="rgb(240,68,47)" fg:x="99" fg:w="53"/><text x="0.2860%" y="719.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="0.0360%" y="693" width="0.0192%" height="15" fill="rgb(210,16,53)" fg:x="99" fg:w="53"/><text x="0.2860%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68 samples, 0.02%)</title><rect x="0.0349%" y="1205" width="0.0247%" height="15" fill="rgb(235,124,12)" fg:x="96" fg:w="68"/><text x="0.2849%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68 samples, 0.02%)</title><rect x="0.0349%" y="1189" width="0.0247%" height="15" fill="rgb(224,169,11)" fg:x="96" fg:w="68"/><text x="0.2849%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (68 samples, 0.02%)</title><rect x="0.0349%" y="1173" width="0.0247%" height="15" fill="rgb(250,166,2)" fg:x="96" fg:w="68"/><text x="0.2849%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (68 samples, 0.02%)</title><rect x="0.0349%" y="1157" width="0.0247%" height="15" fill="rgb(242,216,29)" fg:x="96" fg:w="68"/><text x="0.2849%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (67 samples, 0.02%)</title><rect x="0.0352%" y="1141" width="0.0243%" height="15" fill="rgb(230,116,27)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1151.50"></text></g><g><title>std::panicking::try (67 samples, 0.02%)</title><rect x="0.0352%" y="1125" width="0.0243%" height="15" fill="rgb(228,99,48)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (67 samples, 0.02%)</title><rect x="0.0352%" y="1109" width="0.0243%" height="15" fill="rgb(253,11,6)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (67 samples, 0.02%)</title><rect x="0.0352%" y="1093" width="0.0243%" height="15" fill="rgb(247,143,39)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (67 samples, 0.02%)</title><rect x="0.0352%" y="1077" width="0.0243%" height="15" fill="rgb(236,97,10)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (67 samples, 0.02%)</title><rect x="0.0352%" y="1061" width="0.0243%" height="15" fill="rgb(233,208,19)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (67 samples, 0.02%)</title><rect x="0.0352%" y="1045" width="0.0243%" height="15" fill="rgb(216,164,2)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1055.50"></text></g><g><title>async_std::task::block_on::block_on (67 samples, 0.02%)</title><rect x="0.0352%" y="1029" width="0.0243%" height="15" fill="rgb(220,129,5)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking (67 samples, 0.02%)</title><rect x="0.0352%" y="1013" width="0.0243%" height="15" fill="rgb(242,17,10)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (67 samples, 0.02%)</title><rect x="0.0352%" y="997" width="0.0243%" height="15" fill="rgb(242,107,0)" fg:x="97" fg:w="67"/><text x="0.2852%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (67 samples, 0.02%)</title><rect x="0.0352%" y="981" width="0.0243%" height="15" fill="rgb(251,28,31)" fg:x="97" fg:w="67"/><text x="0.2852%" y="991.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (67 samples, 0.02%)</title><rect x="0.0352%" y="965" width="0.0243%" height="15" fill="rgb(233,223,10)" fg:x="97" fg:w="67"/><text x="0.2852%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (67 samples, 0.02%)</title><rect x="0.0352%" y="949" width="0.0243%" height="15" fill="rgb(215,21,27)" fg:x="97" fg:w="67"/><text x="0.2852%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (67 samples, 0.02%)</title><rect x="0.0352%" y="933" width="0.0243%" height="15" fill="rgb(232,23,21)" fg:x="97" fg:w="67"/><text x="0.2852%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (67 samples, 0.02%)</title><rect x="0.0352%" y="917" width="0.0243%" height="15" fill="rgb(244,5,23)" fg:x="97" fg:w="67"/><text x="0.2852%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (67 samples, 0.02%)</title><rect x="0.0352%" y="901" width="0.0243%" height="15" fill="rgb(226,81,46)" fg:x="97" fg:w="67"/><text x="0.2852%" y="911.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (67 samples, 0.02%)</title><rect x="0.0352%" y="885" width="0.0243%" height="15" fill="rgb(247,70,30)" fg:x="97" fg:w="67"/><text x="0.2852%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on (67 samples, 0.02%)</title><rect x="0.0352%" y="869" width="0.0243%" height="15" fill="rgb(212,68,19)" fg:x="97" fg:w="67"/><text x="0.2852%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (67 samples, 0.02%)</title><rect x="0.0352%" y="853" width="0.0243%" height="15" fill="rgb(240,187,13)" fg:x="97" fg:w="67"/><text x="0.2852%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (67 samples, 0.02%)</title><rect x="0.0352%" y="837" width="0.0243%" height="15" fill="rgb(223,113,26)" fg:x="97" fg:w="67"/><text x="0.2852%" y="847.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (67 samples, 0.02%)</title><rect x="0.0352%" y="821" width="0.0243%" height="15" fill="rgb(206,192,2)" fg:x="97" fg:w="67"/><text x="0.2852%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on (67 samples, 0.02%)</title><rect x="0.0352%" y="805" width="0.0243%" height="15" fill="rgb(241,108,4)" fg:x="97" fg:w="67"/><text x="0.2852%" y="815.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (67 samples, 0.02%)</title><rect x="0.0352%" y="789" width="0.0243%" height="15" fill="rgb(247,173,49)" fg:x="97" fg:w="67"/><text x="0.2852%" y="799.50"></text></g><g><title>async_io::driver::block_on (67 samples, 0.02%)</title><rect x="0.0352%" y="773" width="0.0243%" height="15" fill="rgb(224,114,35)" fg:x="97" fg:w="67"/><text x="0.2852%" y="783.50"></text></g><g><title>__clone (69 samples, 0.03%)</title><rect x="0.0349%" y="1253" width="0.0251%" height="15" fill="rgb(245,159,27)" fg:x="96" fg:w="69"/><text x="0.2849%" y="1263.50"></text></g><g><title>[libc.so.6] (69 samples, 0.03%)</title><rect x="0.0349%" y="1237" width="0.0251%" height="15" fill="rgb(245,172,44)" fg:x="96" fg:w="69"/><text x="0.2849%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (69 samples, 0.03%)</title><rect x="0.0349%" y="1221" width="0.0251%" height="15" fill="rgb(236,23,11)" fg:x="96" fg:w="69"/><text x="0.2849%" y="1231.50"></text></g><g><title>:388420 (166 samples, 0.06%)</title><rect x="0.0000%" y="1269" width="0.0603%" height="15" fill="rgb(205,117,38)" fg:x="0" fg:w="166"/><text x="0.2500%" y="1279.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="0.0610%" y="1253" width="0.0167%" height="15" fill="rgb(237,72,25)" fg:x="168" fg:w="46"/><text x="0.3110%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 0.01%)</title><rect x="0.0632%" y="1237" width="0.0145%" height="15" fill="rgb(244,70,9)" fg:x="174" fg:w="40"/><text x="0.3132%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.01%)</title><rect x="0.0632%" y="1221" width="0.0145%" height="15" fill="rgb(217,125,39)" fg:x="174" fg:w="40"/><text x="0.3132%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.02%)</title><rect x="0.0810%" y="501" width="0.0156%" height="15" fill="rgb(235,36,10)" fg:x="223" fg:w="43"/><text x="0.3310%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (42 samples, 0.02%)</title><rect x="0.0814%" y="485" width="0.0153%" height="15" fill="rgb(251,123,47)" fg:x="224" fg:w="42"/><text x="0.3314%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0814%" y="469" width="0.0153%" height="15" fill="rgb(221,13,13)" fg:x="224" fg:w="42"/><text x="0.3314%" y="479.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (42 samples, 0.02%)</title><rect x="0.0814%" y="453" width="0.0153%" height="15" fill="rgb(238,131,9)" fg:x="224" fg:w="42"/><text x="0.3314%" y="463.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="0.0814%" y="437" width="0.0153%" height="15" fill="rgb(211,50,8)" fg:x="224" fg:w="42"/><text x="0.3314%" y="447.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (42 samples, 0.02%)</title><rect x="0.0814%" y="421" width="0.0153%" height="15" fill="rgb(245,182,24)" fg:x="224" fg:w="42"/><text x="0.3314%" y="431.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="0.0784%" y="677" width="0.0192%" height="15" fill="rgb(242,14,37)" fg:x="216" fg:w="53"/><text x="0.3284%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (53 samples, 0.02%)</title><rect x="0.0784%" y="661" width="0.0192%" height="15" fill="rgb(246,228,12)" fg:x="216" fg:w="53"/><text x="0.3284%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (53 samples, 0.02%)</title><rect x="0.0784%" y="645" width="0.0192%" height="15" fill="rgb(213,55,15)" fg:x="216" fg:w="53"/><text x="0.3284%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (53 samples, 0.02%)</title><rect x="0.0784%" y="629" width="0.0192%" height="15" fill="rgb(209,9,3)" fg:x="216" fg:w="53"/><text x="0.3284%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (53 samples, 0.02%)</title><rect x="0.0784%" y="613" width="0.0192%" height="15" fill="rgb(230,59,30)" fg:x="216" fg:w="53"/><text x="0.3284%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (53 samples, 0.02%)</title><rect x="0.0784%" y="597" width="0.0192%" height="15" fill="rgb(209,121,21)" fg:x="216" fg:w="53"/><text x="0.3284%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="0.0784%" y="581" width="0.0192%" height="15" fill="rgb(220,109,13)" fg:x="216" fg:w="53"/><text x="0.3284%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (53 samples, 0.02%)</title><rect x="0.0784%" y="565" width="0.0192%" height="15" fill="rgb(232,18,1)" fg:x="216" fg:w="53"/><text x="0.3284%" y="575.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="0.0784%" y="549" width="0.0192%" height="15" fill="rgb(215,41,42)" fg:x="216" fg:w="53"/><text x="0.3284%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="0.0806%" y="533" width="0.0171%" height="15" fill="rgb(224,123,36)" fg:x="222" fg:w="47"/><text x="0.3306%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (47 samples, 0.02%)</title><rect x="0.0806%" y="517" width="0.0171%" height="15" fill="rgb(240,125,3)" fg:x="222" fg:w="47"/><text x="0.3306%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (61 samples, 0.02%)</title><rect x="0.0777%" y="757" width="0.0222%" height="15" fill="rgb(205,98,50)" fg:x="214" fg:w="61"/><text x="0.3277%" y="767.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (61 samples, 0.02%)</title><rect x="0.0777%" y="741" width="0.0222%" height="15" fill="rgb(205,185,37)" fg:x="214" fg:w="61"/><text x="0.3277%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 0.02%)</title><rect x="0.0784%" y="725" width="0.0214%" height="15" fill="rgb(238,207,15)" fg:x="216" fg:w="59"/><text x="0.3284%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (59 samples, 0.02%)</title><rect x="0.0784%" y="709" width="0.0214%" height="15" fill="rgb(213,199,42)" fg:x="216" fg:w="59"/><text x="0.3284%" y="719.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (59 samples, 0.02%)</title><rect x="0.0784%" y="693" width="0.0214%" height="15" fill="rgb(235,201,11)" fg:x="216" fg:w="59"/><text x="0.3284%" y="703.50"></text></g><g><title>:388427 (122 samples, 0.04%)</title><rect x="0.0603%" y="1269" width="0.0443%" height="15" fill="rgb(207,46,11)" fg:x="166" fg:w="122"/><text x="0.3103%" y="1279.50"></text></g><g><title>__clone (74 samples, 0.03%)</title><rect x="0.0777%" y="1253" width="0.0269%" height="15" fill="rgb(241,35,35)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1263.50"></text></g><g><title>[libc.so.6] (74 samples, 0.03%)</title><rect x="0.0777%" y="1237" width="0.0269%" height="15" fill="rgb(243,32,47)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (74 samples, 0.03%)</title><rect x="0.0777%" y="1221" width="0.0269%" height="15" fill="rgb(247,202,23)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (74 samples, 0.03%)</title><rect x="0.0777%" y="1205" width="0.0269%" height="15" fill="rgb(219,102,11)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (74 samples, 0.03%)</title><rect x="0.0777%" y="1189" width="0.0269%" height="15" fill="rgb(243,110,44)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (74 samples, 0.03%)</title><rect x="0.0777%" y="1173" width="0.0269%" height="15" fill="rgb(222,74,54)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (74 samples, 0.03%)</title><rect x="0.0777%" y="1157" width="0.0269%" height="15" fill="rgb(216,99,12)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (74 samples, 0.03%)</title><rect x="0.0777%" y="1141" width="0.0269%" height="15" fill="rgb(226,22,26)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1151.50"></text></g><g><title>std::panicking::try (74 samples, 0.03%)</title><rect x="0.0777%" y="1125" width="0.0269%" height="15" fill="rgb(217,163,10)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (74 samples, 0.03%)</title><rect x="0.0777%" y="1109" width="0.0269%" height="15" fill="rgb(213,25,53)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (74 samples, 0.03%)</title><rect x="0.0777%" y="1093" width="0.0269%" height="15" fill="rgb(252,105,26)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (74 samples, 0.03%)</title><rect x="0.0777%" y="1077" width="0.0269%" height="15" fill="rgb(220,39,43)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (74 samples, 0.03%)</title><rect x="0.0777%" y="1061" width="0.0269%" height="15" fill="rgb(229,68,48)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (74 samples, 0.03%)</title><rect x="0.0777%" y="1045" width="0.0269%" height="15" fill="rgb(252,8,32)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1055.50"></text></g><g><title>async_std::task::block_on::block_on (74 samples, 0.03%)</title><rect x="0.0777%" y="1029" width="0.0269%" height="15" fill="rgb(223,20,43)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking (74 samples, 0.03%)</title><rect x="0.0777%" y="1013" width="0.0269%" height="15" fill="rgb(229,81,49)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (74 samples, 0.03%)</title><rect x="0.0777%" y="997" width="0.0269%" height="15" fill="rgb(236,28,36)" fg:x="214" fg:w="74"/><text x="0.3277%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (74 samples, 0.03%)</title><rect x="0.0777%" y="981" width="0.0269%" height="15" fill="rgb(249,185,26)" fg:x="214" fg:w="74"/><text x="0.3277%" y="991.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (74 samples, 0.03%)</title><rect x="0.0777%" y="965" width="0.0269%" height="15" fill="rgb(249,174,33)" fg:x="214" fg:w="74"/><text x="0.3277%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (74 samples, 0.03%)</title><rect x="0.0777%" y="949" width="0.0269%" height="15" fill="rgb(233,201,37)" fg:x="214" fg:w="74"/><text x="0.3277%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (74 samples, 0.03%)</title><rect x="0.0777%" y="933" width="0.0269%" height="15" fill="rgb(221,78,26)" fg:x="214" fg:w="74"/><text x="0.3277%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (74 samples, 0.03%)</title><rect x="0.0777%" y="917" width="0.0269%" height="15" fill="rgb(250,127,30)" fg:x="214" fg:w="74"/><text x="0.3277%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (74 samples, 0.03%)</title><rect x="0.0777%" y="901" width="0.0269%" height="15" fill="rgb(230,49,44)" fg:x="214" fg:w="74"/><text x="0.3277%" y="911.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (74 samples, 0.03%)</title><rect x="0.0777%" y="885" width="0.0269%" height="15" fill="rgb(229,67,23)" fg:x="214" fg:w="74"/><text x="0.3277%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on (74 samples, 0.03%)</title><rect x="0.0777%" y="869" width="0.0269%" height="15" fill="rgb(249,83,47)" fg:x="214" fg:w="74"/><text x="0.3277%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (74 samples, 0.03%)</title><rect x="0.0777%" y="853" width="0.0269%" height="15" fill="rgb(215,43,3)" fg:x="214" fg:w="74"/><text x="0.3277%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (74 samples, 0.03%)</title><rect x="0.0777%" y="837" width="0.0269%" height="15" fill="rgb(238,154,13)" fg:x="214" fg:w="74"/><text x="0.3277%" y="847.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (74 samples, 0.03%)</title><rect x="0.0777%" y="821" width="0.0269%" height="15" fill="rgb(219,56,2)" fg:x="214" fg:w="74"/><text x="0.3277%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on (74 samples, 0.03%)</title><rect x="0.0777%" y="805" width="0.0269%" height="15" fill="rgb(233,0,4)" fg:x="214" fg:w="74"/><text x="0.3277%" y="815.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (74 samples, 0.03%)</title><rect x="0.0777%" y="789" width="0.0269%" height="15" fill="rgb(235,30,7)" fg:x="214" fg:w="74"/><text x="0.3277%" y="799.50"></text></g><g><title>async_io::driver::block_on (74 samples, 0.03%)</title><rect x="0.0777%" y="773" width="0.0269%" height="15" fill="rgb(250,79,13)" fg:x="214" fg:w="74"/><text x="0.3277%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.01%)</title><rect x="0.1100%" y="501" width="0.0113%" height="15" fill="rgb(211,146,34)" fg:x="303" fg:w="31"/><text x="0.3600%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (31 samples, 0.01%)</title><rect x="0.1100%" y="485" width="0.0113%" height="15" fill="rgb(228,22,38)" fg:x="303" fg:w="31"/><text x="0.3600%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.01%)</title><rect x="0.1100%" y="469" width="0.0113%" height="15" fill="rgb(235,168,5)" fg:x="303" fg:w="31"/><text x="0.3600%" y="479.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (31 samples, 0.01%)</title><rect x="0.1100%" y="453" width="0.0113%" height="15" fill="rgb(221,155,16)" fg:x="303" fg:w="31"/><text x="0.3600%" y="463.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.01%)</title><rect x="0.1100%" y="437" width="0.0113%" height="15" fill="rgb(215,215,53)" fg:x="303" fg:w="31"/><text x="0.3600%" y="447.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (30 samples, 0.01%)</title><rect x="0.1104%" y="421" width="0.0109%" height="15" fill="rgb(223,4,10)" fg:x="304" fg:w="30"/><text x="0.3604%" y="431.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (39 samples, 0.01%)</title><rect x="0.1075%" y="677" width="0.0142%" height="15" fill="rgb(234,103,6)" fg:x="296" fg:w="39"/><text x="0.3575%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (39 samples, 0.01%)</title><rect x="0.1075%" y="661" width="0.0142%" height="15" fill="rgb(227,97,0)" fg:x="296" fg:w="39"/><text x="0.3575%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.01%)</title><rect x="0.1075%" y="645" width="0.0142%" height="15" fill="rgb(234,150,53)" fg:x="296" fg:w="39"/><text x="0.3575%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.01%)</title><rect x="0.1075%" y="629" width="0.0142%" height="15" fill="rgb(228,201,54)" fg:x="296" fg:w="39"/><text x="0.3575%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (36 samples, 0.01%)</title><rect x="0.1086%" y="613" width="0.0131%" height="15" fill="rgb(222,22,37)" fg:x="299" fg:w="36"/><text x="0.3586%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (36 samples, 0.01%)</title><rect x="0.1086%" y="597" width="0.0131%" height="15" fill="rgb(237,53,32)" fg:x="299" fg:w="36"/><text x="0.3586%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="0.1086%" y="581" width="0.0131%" height="15" fill="rgb(233,25,53)" fg:x="299" fg:w="36"/><text x="0.3586%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (36 samples, 0.01%)</title><rect x="0.1086%" y="565" width="0.0131%" height="15" fill="rgb(210,40,34)" fg:x="299" fg:w="36"/><text x="0.3586%" y="575.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="0.1086%" y="549" width="0.0131%" height="15" fill="rgb(241,220,44)" fg:x="299" fg:w="36"/><text x="0.3586%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="0.1100%" y="533" width="0.0116%" height="15" fill="rgb(235,28,35)" fg:x="303" fg:w="32"/><text x="0.3600%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (32 samples, 0.01%)</title><rect x="0.1100%" y="517" width="0.0116%" height="15" fill="rgb(210,56,17)" fg:x="303" fg:w="32"/><text x="0.3600%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.01%)</title><rect x="0.1075%" y="725" width="0.0149%" height="15" fill="rgb(224,130,29)" fg:x="296" fg:w="41"/><text x="0.3575%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (41 samples, 0.01%)</title><rect x="0.1075%" y="709" width="0.0149%" height="15" fill="rgb(235,212,8)" fg:x="296" fg:w="41"/><text x="0.3575%" y="719.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (41 samples, 0.01%)</title><rect x="0.1075%" y="693" width="0.0149%" height="15" fill="rgb(223,33,50)" fg:x="296" fg:w="41"/><text x="0.3575%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.02%)</title><rect x="0.1061%" y="757" width="0.0167%" height="15" fill="rgb(219,149,13)" fg:x="292" fg:w="46"/><text x="0.3561%" y="767.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (46 samples, 0.02%)</title><rect x="0.1061%" y="741" width="0.0167%" height="15" fill="rgb(250,156,29)" fg:x="292" fg:w="46"/><text x="0.3561%" y="751.50"></text></g><g><title>__clone (68 samples, 0.02%)</title><rect x="0.1061%" y="1253" width="0.0247%" height="15" fill="rgb(216,193,19)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1263.50"></text></g><g><title>[libc.so.6] (68 samples, 0.02%)</title><rect x="0.1061%" y="1237" width="0.0247%" height="15" fill="rgb(216,135,14)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (68 samples, 0.02%)</title><rect x="0.1061%" y="1221" width="0.0247%" height="15" fill="rgb(241,47,5)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68 samples, 0.02%)</title><rect x="0.1061%" y="1205" width="0.0247%" height="15" fill="rgb(233,42,35)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68 samples, 0.02%)</title><rect x="0.1061%" y="1189" width="0.0247%" height="15" fill="rgb(231,13,6)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (68 samples, 0.02%)</title><rect x="0.1061%" y="1173" width="0.0247%" height="15" fill="rgb(207,181,40)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (68 samples, 0.02%)</title><rect x="0.1061%" y="1157" width="0.0247%" height="15" fill="rgb(254,173,49)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (68 samples, 0.02%)</title><rect x="0.1061%" y="1141" width="0.0247%" height="15" fill="rgb(221,1,38)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1151.50"></text></g><g><title>std::panicking::try (68 samples, 0.02%)</title><rect x="0.1061%" y="1125" width="0.0247%" height="15" fill="rgb(206,124,46)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (68 samples, 0.02%)</title><rect x="0.1061%" y="1109" width="0.0247%" height="15" fill="rgb(249,21,11)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (68 samples, 0.02%)</title><rect x="0.1061%" y="1093" width="0.0247%" height="15" fill="rgb(222,201,40)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (68 samples, 0.02%)</title><rect x="0.1061%" y="1077" width="0.0247%" height="15" fill="rgb(235,61,29)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (68 samples, 0.02%)</title><rect x="0.1061%" y="1061" width="0.0247%" height="15" fill="rgb(219,207,3)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (68 samples, 0.02%)</title><rect x="0.1061%" y="1045" width="0.0247%" height="15" fill="rgb(222,56,46)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1055.50"></text></g><g><title>async_std::task::block_on::block_on (68 samples, 0.02%)</title><rect x="0.1061%" y="1029" width="0.0247%" height="15" fill="rgb(239,76,54)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking (68 samples, 0.02%)</title><rect x="0.1061%" y="1013" width="0.0247%" height="15" fill="rgb(231,124,27)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (68 samples, 0.02%)</title><rect x="0.1061%" y="997" width="0.0247%" height="15" fill="rgb(249,195,6)" fg:x="292" fg:w="68"/><text x="0.3561%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (68 samples, 0.02%)</title><rect x="0.1061%" y="981" width="0.0247%" height="15" fill="rgb(237,174,47)" fg:x="292" fg:w="68"/><text x="0.3561%" y="991.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (68 samples, 0.02%)</title><rect x="0.1061%" y="965" width="0.0247%" height="15" fill="rgb(206,201,31)" fg:x="292" fg:w="68"/><text x="0.3561%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (68 samples, 0.02%)</title><rect x="0.1061%" y="949" width="0.0247%" height="15" fill="rgb(231,57,52)" fg:x="292" fg:w="68"/><text x="0.3561%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (68 samples, 0.02%)</title><rect x="0.1061%" y="933" width="0.0247%" height="15" fill="rgb(248,177,22)" fg:x="292" fg:w="68"/><text x="0.3561%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (68 samples, 0.02%)</title><rect x="0.1061%" y="917" width="0.0247%" height="15" fill="rgb(215,211,37)" fg:x="292" fg:w="68"/><text x="0.3561%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (68 samples, 0.02%)</title><rect x="0.1061%" y="901" width="0.0247%" height="15" fill="rgb(241,128,51)" fg:x="292" fg:w="68"/><text x="0.3561%" y="911.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (68 samples, 0.02%)</title><rect x="0.1061%" y="885" width="0.0247%" height="15" fill="rgb(227,165,31)" fg:x="292" fg:w="68"/><text x="0.3561%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on (68 samples, 0.02%)</title><rect x="0.1061%" y="869" width="0.0247%" height="15" fill="rgb(228,167,24)" fg:x="292" fg:w="68"/><text x="0.3561%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (68 samples, 0.02%)</title><rect x="0.1061%" y="853" width="0.0247%" height="15" fill="rgb(228,143,12)" fg:x="292" fg:w="68"/><text x="0.3561%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (68 samples, 0.02%)</title><rect x="0.1061%" y="837" width="0.0247%" height="15" fill="rgb(249,149,8)" fg:x="292" fg:w="68"/><text x="0.3561%" y="847.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (68 samples, 0.02%)</title><rect x="0.1061%" y="821" width="0.0247%" height="15" fill="rgb(243,35,44)" fg:x="292" fg:w="68"/><text x="0.3561%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on (68 samples, 0.02%)</title><rect x="0.1061%" y="805" width="0.0247%" height="15" fill="rgb(246,89,9)" fg:x="292" fg:w="68"/><text x="0.3561%" y="815.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (68 samples, 0.02%)</title><rect x="0.1061%" y="789" width="0.0247%" height="15" fill="rgb(233,213,13)" fg:x="292" fg:w="68"/><text x="0.3561%" y="799.50"></text></g><g><title>async_io::driver::block_on (68 samples, 0.02%)</title><rect x="0.1061%" y="773" width="0.0247%" height="15" fill="rgb(233,141,41)" fg:x="292" fg:w="68"/><text x="0.3561%" y="783.50"></text></g><g><title>:388441 (96 samples, 0.03%)</title><rect x="0.1046%" y="1269" width="0.0349%" height="15" fill="rgb(239,167,4)" fg:x="288" fg:w="96"/><text x="0.3546%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (52 samples, 0.02%)</title><rect x="0.2328%" y="949" width="0.0189%" height="15" fill="rgb(209,217,16)" fg:x="641" fg:w="52"/><text x="0.4828%" y="959.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (33 samples, 0.01%)</title><rect x="0.2397%" y="933" width="0.0120%" height="15" fill="rgb(219,88,35)" fg:x="660" fg:w="33"/><text x="0.4897%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.01%)</title><rect x="0.2397%" y="917" width="0.0120%" height="15" fill="rgb(220,193,23)" fg:x="660" fg:w="33"/><text x="0.4897%" y="927.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="0.2404%" y="901" width="0.0113%" height="15" fill="rgb(230,90,52)" fg:x="662" fg:w="31"/><text x="0.4904%" y="911.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (39 samples, 0.01%)</title><rect x="0.2546%" y="949" width="0.0142%" height="15" fill="rgb(252,106,19)" fg:x="701" fg:w="39"/><text x="0.5046%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (129 samples, 0.05%)</title><rect x="0.2223%" y="981" width="0.0469%" height="15" fill="rgb(206,74,20)" fg:x="612" fg:w="129"/><text x="0.4723%" y="991.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (127 samples, 0.05%)</title><rect x="0.2230%" y="965" width="0.0461%" height="15" fill="rgb(230,138,44)" fg:x="614" fg:w="127"/><text x="0.4730%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (111 samples, 0.04%)</title><rect x="0.2804%" y="949" width="0.0403%" height="15" fill="rgb(235,182,43)" fg:x="772" fg:w="111"/><text x="0.5304%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (109 samples, 0.04%)</title><rect x="0.2811%" y="933" width="0.0396%" height="15" fill="rgb(242,16,51)" fg:x="774" fg:w="109"/><text x="0.5311%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (103 samples, 0.04%)</title><rect x="0.2833%" y="917" width="0.0374%" height="15" fill="rgb(248,9,4)" fg:x="780" fg:w="103"/><text x="0.5333%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (103 samples, 0.04%)</title><rect x="0.2833%" y="901" width="0.0374%" height="15" fill="rgb(210,31,22)" fg:x="780" fg:w="103"/><text x="0.5333%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (44 samples, 0.02%)</title><rect x="0.3047%" y="885" width="0.0160%" height="15" fill="rgb(239,54,39)" fg:x="839" fg:w="44"/><text x="0.5547%" y="895.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (40 samples, 0.01%)</title><rect x="0.3062%" y="869" width="0.0145%" height="15" fill="rgb(230,99,41)" fg:x="843" fg:w="40"/><text x="0.5562%" y="879.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (40 samples, 0.01%)</title><rect x="0.3062%" y="853" width="0.0145%" height="15" fill="rgb(253,106,12)" fg:x="843" fg:w="40"/><text x="0.5562%" y="863.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (40 samples, 0.01%)</title><rect x="0.3062%" y="837" width="0.0145%" height="15" fill="rgb(213,46,41)" fg:x="843" fg:w="40"/><text x="0.5562%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (40 samples, 0.01%)</title><rect x="0.3359%" y="917" width="0.0145%" height="15" fill="rgb(215,133,35)" fg:x="925" fg:w="40"/><text x="0.5859%" y="927.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (205 samples, 0.07%)</title><rect x="0.2778%" y="965" width="0.0745%" height="15" fill="rgb(213,28,5)" fg:x="765" fg:w="205"/><text x="0.5278%" y="975.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (87 samples, 0.03%)</title><rect x="0.3207%" y="949" width="0.0316%" height="15" fill="rgb(215,77,49)" fg:x="883" fg:w="87"/><text x="0.5707%" y="959.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (68 samples, 0.02%)</title><rect x="0.3276%" y="933" width="0.0247%" height="15" fill="rgb(248,100,22)" fg:x="902" fg:w="68"/><text x="0.5776%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (63 samples, 0.02%)</title><rect x="0.3545%" y="933" width="0.0229%" height="15" fill="rgb(208,67,9)" fg:x="976" fg:w="63"/><text x="0.6045%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (61 samples, 0.02%)</title><rect x="0.3552%" y="917" width="0.0222%" height="15" fill="rgb(219,133,21)" fg:x="978" fg:w="61"/><text x="0.6052%" y="927.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (52 samples, 0.02%)</title><rect x="0.3585%" y="901" width="0.0189%" height="15" fill="rgb(246,46,29)" fg:x="987" fg:w="52"/><text x="0.6085%" y="911.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (37 samples, 0.01%)</title><rect x="0.3639%" y="885" width="0.0134%" height="15" fill="rgb(246,185,52)" fg:x="1002" fg:w="37"/><text x="0.6139%" y="895.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (86 samples, 0.03%)</title><rect x="0.3774%" y="933" width="0.0312%" height="15" fill="rgb(252,136,11)" fg:x="1039" fg:w="86"/><text x="0.6274%" y="943.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (77 samples, 0.03%)</title><rect x="0.3806%" y="917" width="0.0280%" height="15" fill="rgb(219,138,53)" fg:x="1048" fg:w="77"/><text x="0.6306%" y="927.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (77 samples, 0.03%)</title><rect x="0.3806%" y="901" width="0.0280%" height="15" fill="rgb(211,51,23)" fg:x="1048" fg:w="77"/><text x="0.6306%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (157 samples, 0.06%)</title><rect x="0.3523%" y="965" width="0.0570%" height="15" fill="rgb(247,221,28)" fg:x="970" fg:w="157"/><text x="0.6023%" y="975.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (157 samples, 0.06%)</title><rect x="0.3523%" y="949" width="0.0570%" height="15" fill="rgb(251,222,45)" fg:x="970" fg:w="157"/><text x="0.6023%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (43 samples, 0.02%)</title><rect x="0.4416%" y="933" width="0.0156%" height="15" fill="rgb(217,162,53)" fg:x="1216" fg:w="43"/><text x="0.6916%" y="943.50"></text></g><g><title>core::ptr::read (43 samples, 0.02%)</title><rect x="0.4416%" y="917" width="0.0156%" height="15" fill="rgb(229,93,14)" fg:x="1216" fg:w="43"/><text x="0.6916%" y="927.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (129 samples, 0.05%)</title><rect x="0.4115%" y="965" width="0.0469%" height="15" fill="rgb(209,67,49)" fg:x="1133" fg:w="129"/><text x="0.6615%" y="975.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (125 samples, 0.05%)</title><rect x="0.4129%" y="949" width="0.0454%" height="15" fill="rgb(213,87,29)" fg:x="1137" fg:w="125"/><text x="0.6629%" y="959.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (541 samples, 0.20%)</title><rect x="0.2757%" y="981" width="0.1965%" height="15" fill="rgb(205,151,52)" fg:x="759" fg:w="541"/><text x="0.5257%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (35 samples, 0.01%)</title><rect x="0.4594%" y="965" width="0.0127%" height="15" fill="rgb(253,215,39)" fg:x="1265" fg:w="35"/><text x="0.7094%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (35 samples, 0.01%)</title><rect x="0.4594%" y="949" width="0.0127%" height="15" fill="rgb(221,220,41)" fg:x="1265" fg:w="35"/><text x="0.7094%" y="959.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="0.4594%" y="933" width="0.0127%" height="15" fill="rgb(218,133,21)" fg:x="1265" fg:w="35"/><text x="0.7094%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (35 samples, 0.01%)</title><rect x="0.4594%" y="917" width="0.0127%" height="15" fill="rgb(221,193,43)" fg:x="1265" fg:w="35"/><text x="0.7094%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (758 samples, 0.28%)</title><rect x="0.2096%" y="997" width="0.2753%" height="15" fill="rgb(240,128,52)" fg:x="577" fg:w="758"/><text x="0.4596%" y="1007.50"></text></g><g><title>polling::epoll::Poller::wait (131 samples, 0.05%)</title><rect x="0.4939%" y="981" width="0.0476%" height="15" fill="rgb(253,114,12)" fg:x="1360" fg:w="131"/><text x="0.7439%" y="991.50"></text></g><g><title>syscall (63 samples, 0.02%)</title><rect x="0.5186%" y="965" width="0.0229%" height="15" fill="rgb(215,223,47)" fg:x="1428" fg:w="63"/><text x="0.7686%" y="975.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="0.5194%" y="949" width="0.0222%" height="15" fill="rgb(248,225,23)" fg:x="1430" fg:w="61"/><text x="0.7694%" y="959.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="0.5194%" y="933" width="0.0222%" height="15" fill="rgb(250,108,0)" fg:x="1430" fg:w="61"/><text x="0.7694%" y="943.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="0.5197%" y="917" width="0.0218%" height="15" fill="rgb(228,208,7)" fg:x="1431" fg:w="60"/><text x="0.7697%" y="927.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="0.5215%" y="901" width="0.0200%" height="15" fill="rgb(244,45,10)" fg:x="1436" fg:w="55"/><text x="0.7715%" y="911.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="0.5244%" y="885" width="0.0171%" height="15" fill="rgb(207,125,25)" fg:x="1444" fg:w="47"/><text x="0.7744%" y="895.50"></text></g><g><title>polling::Poller::wait (148 samples, 0.05%)</title><rect x="0.4907%" y="997" width="0.0538%" height="15" fill="rgb(210,195,18)" fg:x="1351" fg:w="148"/><text x="0.7407%" y="1007.50"></text></g><g><title>async_executor::State::notify (45 samples, 0.02%)</title><rect x="0.5499%" y="869" width="0.0163%" height="15" fill="rgb(249,80,12)" fg:x="1514" fg:w="45"/><text x="0.7999%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (42 samples, 0.02%)</title><rect x="0.5510%" y="853" width="0.0153%" height="15" fill="rgb(221,65,9)" fg:x="1517" fg:w="42"/><text x="0.8010%" y="863.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (42 samples, 0.02%)</title><rect x="0.5510%" y="837" width="0.0153%" height="15" fill="rgb(235,49,36)" fg:x="1517" fg:w="42"/><text x="0.8010%" y="847.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (42 samples, 0.02%)</title><rect x="0.5510%" y="821" width="0.0153%" height="15" fill="rgb(225,32,20)" fg:x="1517" fg:w="42"/><text x="0.8010%" y="831.50"></text></g><g><title>parking::Unparker::unpark (41 samples, 0.01%)</title><rect x="0.5513%" y="805" width="0.0149%" height="15" fill="rgb(215,141,46)" fg:x="1518" fg:w="41"/><text x="0.8013%" y="815.50"></text></g><g><title>parking::Inner::unpark (40 samples, 0.01%)</title><rect x="0.5517%" y="789" width="0.0145%" height="15" fill="rgb(250,160,47)" fg:x="1519" fg:w="40"/><text x="0.8017%" y="799.50"></text></g><g><title>syscall (38 samples, 0.01%)</title><rect x="0.5524%" y="773" width="0.0138%" height="15" fill="rgb(216,222,40)" fg:x="1521" fg:w="38"/><text x="0.8024%" y="783.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="0.5524%" y="757" width="0.0138%" height="15" fill="rgb(234,217,39)" fg:x="1521" fg:w="38"/><text x="0.8024%" y="767.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="0.5524%" y="741" width="0.0138%" height="15" fill="rgb(207,178,40)" fg:x="1521" fg:w="38"/><text x="0.8024%" y="751.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="0.5524%" y="725" width="0.0138%" height="15" fill="rgb(221,136,13)" fg:x="1521" fg:w="38"/><text x="0.8024%" y="735.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="0.5524%" y="709" width="0.0138%" height="15" fill="rgb(249,199,10)" fg:x="1521" fg:w="38"/><text x="0.8024%" y="719.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="0.5524%" y="693" width="0.0138%" height="15" fill="rgb(249,222,13)" fg:x="1521" fg:w="38"/><text x="0.8024%" y="703.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (67 samples, 0.02%)</title><rect x="0.5495%" y="885" width="0.0243%" height="15" fill="rgb(244,185,38)" fg:x="1513" fg:w="67"/><text x="0.7995%" y="895.50"></text></g><g><title>std::panic::catch_unwind (113 samples, 0.04%)</title><rect x="0.5459%" y="997" width="0.0410%" height="15" fill="rgb(236,202,9)" fg:x="1503" fg:w="113"/><text x="0.7959%" y="1007.50"></text></g><g><title>std::panicking::try (113 samples, 0.04%)</title><rect x="0.5459%" y="981" width="0.0410%" height="15" fill="rgb(250,229,37)" fg:x="1503" fg:w="113"/><text x="0.7959%" y="991.50"></text></g><g><title>std::panicking::try::do_call (113 samples, 0.04%)</title><rect x="0.5459%" y="965" width="0.0410%" height="15" fill="rgb(206,174,23)" fg:x="1503" fg:w="113"/><text x="0.7959%" y="975.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (113 samples, 0.04%)</title><rect x="0.5459%" y="949" width="0.0410%" height="15" fill="rgb(211,33,43)" fg:x="1503" fg:w="113"/><text x="0.7959%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (113 samples, 0.04%)</title><rect x="0.5459%" y="933" width="0.0410%" height="15" fill="rgb(245,58,50)" fg:x="1503" fg:w="113"/><text x="0.7959%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (113 samples, 0.04%)</title><rect x="0.5459%" y="917" width="0.0410%" height="15" fill="rgb(244,68,36)" fg:x="1503" fg:w="113"/><text x="0.7959%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (108 samples, 0.04%)</title><rect x="0.5477%" y="901" width="0.0392%" height="15" fill="rgb(232,229,15)" fg:x="1508" fg:w="108"/><text x="0.7977%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.01%)</title><rect x="0.5738%" y="885" width="0.0131%" height="15" fill="rgb(254,30,23)" fg:x="1580" fg:w="36"/><text x="0.8238%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.01%)</title><rect x="0.5738%" y="869" width="0.0131%" height="15" fill="rgb(235,160,14)" fg:x="1580" fg:w="36"/><text x="0.8238%" y="879.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,069 samples, 0.39%)</title><rect x="0.2023%" y="1013" width="0.3882%" height="15" fill="rgb(212,155,44)" fg:x="557" fg:w="1069"/><text x="0.4523%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (202 samples, 0.07%)</title><rect x="0.6178%" y="901" width="0.0734%" height="15" fill="rgb(226,2,50)" fg:x="1701" fg:w="202"/><text x="0.8678%" y="911.50"></text></g><g><title>std::sys::unix::futex::futex_wait::{{closure}} (199 samples, 0.07%)</title><rect x="0.6189%" y="885" width="0.0723%" height="15" fill="rgb(234,177,6)" fg:x="1704" fg:w="199"/><text x="0.8689%" y="895.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (188 samples, 0.07%)</title><rect x="0.6229%" y="869" width="0.0683%" height="15" fill="rgb(217,24,9)" fg:x="1715" fg:w="188"/><text x="0.8729%" y="879.50"></text></g><g><title>clock_gettime (188 samples, 0.07%)</title><rect x="0.6229%" y="853" width="0.0683%" height="15" fill="rgb(220,13,46)" fg:x="1715" fg:w="188"/><text x="0.8729%" y="863.50"></text></g><g><title>__vdso_clock_gettime (113 samples, 0.04%)</title><rect x="0.6501%" y="837" width="0.0410%" height="15" fill="rgb(239,221,27)" fg:x="1790" fg:w="113"/><text x="0.9001%" y="847.50"></text></g><g><title>std::sys::unix::futex::futex_wait (2,363 samples, 0.86%)</title><rect x="0.6127%" y="917" width="0.8582%" height="15" fill="rgb(222,198,25)" fg:x="1687" fg:w="2363"/><text x="0.8627%" y="927.50"></text></g><g><title>syscall (2,141 samples, 0.78%)</title><rect x="0.6933%" y="901" width="0.7776%" height="15" fill="rgb(211,99,13)" fg:x="1909" fg:w="2141"/><text x="0.9433%" y="911.50"></text></g><g><title>[unknown] (2,125 samples, 0.77%)</title><rect x="0.6991%" y="885" width="0.7718%" height="15" fill="rgb(232,111,31)" fg:x="1925" fg:w="2125"/><text x="0.9491%" y="895.50"></text></g><g><title>[unknown] (2,081 samples, 0.76%)</title><rect x="0.7151%" y="869" width="0.7558%" height="15" fill="rgb(245,82,37)" fg:x="1969" fg:w="2081"/><text x="0.9651%" y="879.50"></text></g><g><title>[unknown] (2,078 samples, 0.75%)</title><rect x="0.7162%" y="853" width="0.7547%" height="15" fill="rgb(227,149,46)" fg:x="1972" fg:w="2078"/><text x="0.9662%" y="863.50"></text></g><g><title>[unknown] (1,970 samples, 0.72%)</title><rect x="0.7554%" y="837" width="0.7155%" height="15" fill="rgb(218,36,50)" fg:x="2080" fg:w="1970"/><text x="1.0054%" y="847.50"></text></g><g><title>[unknown] (1,880 samples, 0.68%)</title><rect x="0.7881%" y="821" width="0.6828%" height="15" fill="rgb(226,80,48)" fg:x="2170" fg:w="1880"/><text x="1.0381%" y="831.50"></text></g><g><title>[unknown] (1,795 samples, 0.65%)</title><rect x="0.8190%" y="805" width="0.6519%" height="15" fill="rgb(238,224,15)" fg:x="2255" fg:w="1795"/><text x="1.0690%" y="815.50"></text></g><g><title>[unknown] (1,700 samples, 0.62%)</title><rect x="0.8535%" y="789" width="0.6174%" height="15" fill="rgb(241,136,10)" fg:x="2350" fg:w="1700"/><text x="1.1035%" y="799.50"></text></g><g><title>[unknown] (1,289 samples, 0.47%)</title><rect x="1.0028%" y="773" width="0.4681%" height="15" fill="rgb(208,32,45)" fg:x="2761" fg:w="1289"/><text x="1.2528%" y="783.50"></text></g><g><title>[unknown] (806 samples, 0.29%)</title><rect x="1.1782%" y="757" width="0.2927%" height="15" fill="rgb(207,135,9)" fg:x="3244" fg:w="806"/><text x="1.4282%" y="767.50"></text></g><g><title>[unknown] (503 samples, 0.18%)</title><rect x="1.2882%" y="741" width="0.1827%" height="15" fill="rgb(206,86,44)" fg:x="3547" fg:w="503"/><text x="1.5382%" y="751.50"></text></g><g><title>[unknown] (260 samples, 0.09%)</title><rect x="1.3765%" y="725" width="0.0944%" height="15" fill="rgb(245,177,15)" fg:x="3790" fg:w="260"/><text x="1.6265%" y="735.50"></text></g><g><title>[unknown] (142 samples, 0.05%)</title><rect x="1.4193%" y="709" width="0.0516%" height="15" fill="rgb(206,64,50)" fg:x="3908" fg:w="142"/><text x="1.6693%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_timeout (2,392 samples, 0.87%)</title><rect x="0.6058%" y="949" width="0.8687%" height="15" fill="rgb(234,36,40)" fg:x="1668" fg:w="2392"/><text x="0.8558%" y="959.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (2,382 samples, 0.87%)</title><rect x="0.6094%" y="933" width="0.8651%" height="15" fill="rgb(213,64,8)" fg:x="1678" fg:w="2382"/><text x="0.8594%" y="943.50"></text></g><g><title>std::sync::condvar::Condvar::wait_timeout (2,405 samples, 0.87%)</title><rect x="0.6043%" y="981" width="0.8735%" height="15" fill="rgb(210,75,36)" fg:x="1664" fg:w="2405"/><text x="0.8543%" y="991.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait_timeout (2,405 samples, 0.87%)</title><rect x="0.6043%" y="965" width="0.8735%" height="15" fill="rgb(229,88,21)" fg:x="1664" fg:w="2405"/><text x="0.8543%" y="975.50"></text></g><g><title>async-io (3,685 samples, 1.34%)</title><rect x="0.1398%" y="1269" width="1.3383%" height="15" fill="rgb(252,204,47)" fg:x="385" fg:w="3685"/><text x="0.3898%" y="1279.50"></text></g><g><title>__clone (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1253" width="1.3325%" height="15" fill="rgb(208,77,27)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1263.50"></text></g><g><title>[libc.so.6] (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1237" width="1.3325%" height="15" fill="rgb(221,76,26)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1221" width="1.3325%" height="15" fill="rgb(225,139,18)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1205" width="1.3325%" height="15" fill="rgb(230,137,11)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1189" width="1.3325%" height="15" fill="rgb(212,28,1)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1173" width="1.3325%" height="15" fill="rgb(248,164,17)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1157" width="1.3325%" height="15" fill="rgb(222,171,42)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1141" width="1.3325%" height="15" fill="rgb(243,84,45)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1151.50"></text></g><g><title>std::panicking::try (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1125" width="1.3325%" height="15" fill="rgb(252,49,23)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1109" width="1.3325%" height="15" fill="rgb(215,19,7)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1093" width="1.3325%" height="15" fill="rgb(238,81,41)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1077" width="1.3325%" height="15" fill="rgb(210,199,37)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1061" width="1.3325%" height="15" fill="rgb(244,192,49)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1071.50"></text></g><g><title>async_io::driver::UNPARKER::{{closure}}::{{closure}} (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1045" width="1.3325%" height="15" fill="rgb(226,211,11)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1055.50"></text></g><g><title>async_io::driver::main_loop (3,669 samples, 1.33%)</title><rect x="0.1456%" y="1029" width="1.3325%" height="15" fill="rgb(236,162,54)" fg:x="401" fg:w="3669"/><text x="0.3956%" y="1039.50"></text></g><g><title>parking::Parker::park_timeout (2,436 samples, 0.88%)</title><rect x="0.5934%" y="1013" width="0.8847%" height="15" fill="rgb(220,229,9)" fg:x="1634" fg:w="2436"/><text x="0.8434%" y="1023.50"></text></g><g><title>parking::Inner::park (2,429 samples, 0.88%)</title><rect x="0.5960%" y="997" width="0.8822%" height="15" fill="rgb(250,87,22)" fg:x="1641" fg:w="2429"/><text x="0.8460%" y="1007.50"></text></g><g><title>syscall (101 samples, 0.04%)</title><rect x="1.5356%" y="1237" width="0.0367%" height="15" fill="rgb(239,43,17)" fg:x="4228" fg:w="101"/><text x="1.7856%" y="1247.50"></text></g><g><title>[unknown] (101 samples, 0.04%)</title><rect x="1.5356%" y="1221" width="0.0367%" height="15" fill="rgb(231,177,25)" fg:x="4228" fg:w="101"/><text x="1.7856%" y="1231.50"></text></g><g><title>[anon] (265 samples, 0.10%)</title><rect x="1.4785%" y="1253" width="0.0962%" height="15" fill="rgb(219,179,1)" fg:x="4071" fg:w="265"/><text x="1.7285%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (75 samples, 0.03%)</title><rect x="1.6728%" y="405" width="0.0272%" height="15" fill="rgb(238,219,53)" fg:x="4606" fg:w="75"/><text x="1.9228%" y="415.50"></text></g><g><title>async_lock::mutex::Mutex&lt;T&gt;::lock::{{closure}} (74 samples, 0.03%)</title><rect x="1.6732%" y="389" width="0.0269%" height="15" fill="rgb(232,167,36)" fg:x="4607" fg:w="74"/><text x="1.9232%" y="399.50"></text></g><g><title>core::mem::drop (84 samples, 0.03%)</title><rect x="1.7004%" y="405" width="0.0305%" height="15" fill="rgb(244,19,51)" fg:x="4682" fg:w="84"/><text x="1.9504%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_lock::mutex::MutexGuard&lt;zenoh_collections::stack_buffer::StackBuffer&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt;&gt; (84 samples, 0.03%)</title><rect x="1.7004%" y="389" width="0.0305%" height="15" fill="rgb(224,6,22)" fg:x="4682" fg:w="84"/><text x="1.9504%" y="399.50"></text></g><g><title>&lt;async_lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.03%)</title><rect x="1.7004%" y="373" width="0.0305%" height="15" fill="rgb(224,145,5)" fg:x="4682" fg:w="84"/><text x="1.9504%" y="383.50"></text></g><g><title>event_listener::Event::notify (79 samples, 0.03%)</title><rect x="1.7023%" y="357" width="0.0287%" height="15" fill="rgb(234,130,49)" fg:x="4687" fg:w="79"/><text x="1.9523%" y="367.50"></text></g><g><title>event_listener::full_fence (75 samples, 0.03%)</title><rect x="1.7037%" y="341" width="0.0272%" height="15" fill="rgb(254,6,2)" fg:x="4691" fg:w="75"/><text x="1.9537%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (69 samples, 0.03%)</title><rect x="1.7059%" y="325" width="0.0251%" height="15" fill="rgb(208,96,46)" fg:x="4697" fg:w="69"/><text x="1.9559%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (69 samples, 0.03%)</title><rect x="1.7059%" y="309" width="0.0251%" height="15" fill="rgb(239,3,39)" fg:x="4697" fg:w="69"/><text x="1.9559%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (28 samples, 0.01%)</title><rect x="1.7400%" y="373" width="0.0102%" height="15" fill="rgb(233,210,1)" fg:x="4791" fg:w="28"/><text x="1.9900%" y="383.50"></text></g><g><title>core::ptr::write (28 samples, 0.01%)</title><rect x="1.7400%" y="357" width="0.0102%" height="15" fill="rgb(244,137,37)" fg:x="4791" fg:w="28"/><text x="1.9900%" y="367.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (30 samples, 0.01%)</title><rect x="1.7400%" y="389" width="0.0109%" height="15" fill="rgb(240,136,2)" fg:x="4791" fg:w="30"/><text x="1.9900%" y="399.50"></text></g><g><title>zenoh_collections::stack_buffer::StackBuffer&lt;T&gt;::push (34 samples, 0.01%)</title><rect x="1.7397%" y="405" width="0.0123%" height="15" fill="rgb(239,18,37)" fg:x="4790" fg:w="34"/><text x="1.9897%" y="415.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (296 samples, 0.11%)</title><rect x="1.6518%" y="549" width="0.1075%" height="15" fill="rgb(218,185,22)" fg:x="4548" fg:w="296"/><text x="1.9018%" y="559.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (296 samples, 0.11%)</title><rect x="1.6518%" y="533" width="0.1075%" height="15" fill="rgb(225,218,4)" fg:x="4548" fg:w="296"/><text x="1.9018%" y="543.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (296 samples, 0.11%)</title><rect x="1.6518%" y="517" width="0.1075%" height="15" fill="rgb(230,182,32)" fg:x="4548" fg:w="296"/><text x="1.9018%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (296 samples, 0.11%)</title><rect x="1.6518%" y="501" width="0.1075%" height="15" fill="rgb(242,56,43)" fg:x="4548" fg:w="296"/><text x="1.9018%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (296 samples, 0.11%)</title><rect x="1.6518%" y="485" width="0.1075%" height="15" fill="rgb(233,99,24)" fg:x="4548" fg:w="296"/><text x="1.9018%" y="495.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (296 samples, 0.11%)</title><rect x="1.6518%" y="469" width="0.1075%" height="15" fill="rgb(234,209,42)" fg:x="4548" fg:w="296"/><text x="1.9018%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (296 samples, 0.11%)</title><rect x="1.6518%" y="453" width="0.1075%" height="15" fill="rgb(227,7,12)" fg:x="4548" fg:w="296"/><text x="1.9018%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (296 samples, 0.11%)</title><rect x="1.6518%" y="437" width="0.1075%" height="15" fill="rgb(245,203,43)" fg:x="4548" fg:w="296"/><text x="1.9018%" y="447.50"></text></g><g><title>zenoh_collections::lifo_queue::LifoQueue&lt;T&gt;::push::{{closure}} (287 samples, 0.10%)</title><rect x="1.6550%" y="421" width="0.1042%" height="15" fill="rgb(238,205,33)" fg:x="4557" fg:w="287"/><text x="1.9050%" y="431.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (53 samples, 0.02%)</title><rect x="1.7593%" y="533" width="0.0192%" height="15" fill="rgb(231,56,7)" fg:x="4844" fg:w="53"/><text x="2.0093%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (53 samples, 0.02%)</title><rect x="1.7593%" y="517" width="0.0192%" height="15" fill="rgb(244,186,29)" fg:x="4844" fg:w="53"/><text x="2.0093%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (52 samples, 0.02%)</title><rect x="1.7596%" y="501" width="0.0189%" height="15" fill="rgb(234,111,31)" fg:x="4845" fg:w="52"/><text x="2.0096%" y="511.50"></text></g><g><title>core::mem::drop (32 samples, 0.01%)</title><rect x="1.7669%" y="485" width="0.0116%" height="15" fill="rgb(241,149,10)" fg:x="4865" fg:w="32"/><text x="2.0169%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;,alloc::alloc::Global&gt;&gt; (32 samples, 0.01%)</title><rect x="1.7669%" y="469" width="0.0116%" height="15" fill="rgb(249,206,44)" fg:x="4865" fg:w="32"/><text x="2.0169%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="1.7669%" y="453" width="0.0116%" height="15" fill="rgb(251,153,30)" fg:x="4865" fg:w="32"/><text x="2.0169%" y="463.50"></text></g><g><title>cfree (53 samples, 0.02%)</title><rect x="1.7785%" y="485" width="0.0192%" height="15" fill="rgb(239,152,38)" fg:x="4897" fg:w="53"/><text x="2.0285%" y="495.50"></text></g><g><title>[libc.so.6] (53 samples, 0.02%)</title><rect x="1.7785%" y="469" width="0.0192%" height="15" fill="rgb(249,139,47)" fg:x="4897" fg:w="53"/><text x="2.0285%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (110 samples, 0.04%)</title><rect x="1.7785%" y="501" width="0.0400%" height="15" fill="rgb(244,64,35)" fg:x="4897" fg:w="110"/><text x="2.0285%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (57 samples, 0.02%)</title><rect x="1.7978%" y="485" width="0.0207%" height="15" fill="rgb(216,46,15)" fg:x="4950" fg:w="57"/><text x="2.0478%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (57 samples, 0.02%)</title><rect x="1.7978%" y="469" width="0.0207%" height="15" fill="rgb(250,74,19)" fg:x="4950" fg:w="57"/><text x="2.0478%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (57 samples, 0.02%)</title><rect x="1.7978%" y="453" width="0.0207%" height="15" fill="rgb(249,42,33)" fg:x="4950" fg:w="57"/><text x="2.0478%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (57 samples, 0.02%)</title><rect x="1.7978%" y="437" width="0.0207%" height="15" fill="rgb(242,149,17)" fg:x="4950" fg:w="57"/><text x="2.0478%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (50 samples, 0.02%)</title><rect x="1.8003%" y="421" width="0.0182%" height="15" fill="rgb(244,29,21)" fg:x="4957" fg:w="50"/><text x="2.0503%" y="431.50"></text></g><g><title>alloc::alloc::box_free (50 samples, 0.02%)</title><rect x="1.8003%" y="405" width="0.0182%" height="15" fill="rgb(220,130,37)" fg:x="4957" fg:w="50"/><text x="2.0503%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.02%)</title><rect x="1.8003%" y="389" width="0.0182%" height="15" fill="rgb(211,67,2)" fg:x="4957" fg:w="50"/><text x="2.0503%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.02%)</title><rect x="1.8003%" y="373" width="0.0182%" height="15" fill="rgb(235,68,52)" fg:x="4957" fg:w="50"/><text x="2.0503%" y="383.50"></text></g><g><title>cfree (50 samples, 0.02%)</title><rect x="1.8003%" y="357" width="0.0182%" height="15" fill="rgb(246,142,3)" fg:x="4957" fg:w="50"/><text x="2.0503%" y="367.50"></text></g><g><title>[libc.so.6] (50 samples, 0.02%)</title><rect x="1.8003%" y="341" width="0.0182%" height="15" fill="rgb(241,25,7)" fg:x="4957" fg:w="50"/><text x="2.0503%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (174 samples, 0.06%)</title><rect x="1.7593%" y="549" width="0.0632%" height="15" fill="rgb(242,119,39)" fg:x="4844" fg:w="174"/><text x="2.0093%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (121 samples, 0.04%)</title><rect x="1.7785%" y="533" width="0.0439%" height="15" fill="rgb(241,98,45)" fg:x="4897" fg:w="121"/><text x="2.0285%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (121 samples, 0.04%)</title><rect x="1.7785%" y="517" width="0.0439%" height="15" fill="rgb(254,28,30)" fg:x="4897" fg:w="121"/><text x="2.0285%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (489 samples, 0.18%)</title><rect x="1.6518%" y="613" width="0.1776%" height="15" fill="rgb(241,142,54)" fg:x="4548" fg:w="489"/><text x="1.9018%" y="623.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (489 samples, 0.18%)</title><rect x="1.6518%" y="597" width="0.1776%" height="15" fill="rgb(222,85,15)" fg:x="4548" fg:w="489"/><text x="1.9018%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (489 samples, 0.18%)</title><rect x="1.6518%" y="581" width="0.1776%" height="15" fill="rgb(210,85,47)" fg:x="4548" fg:w="489"/><text x="1.9018%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (489 samples, 0.18%)</title><rect x="1.6518%" y="565" width="0.1776%" height="15" fill="rgb(224,206,25)" fg:x="4548" fg:w="489"/><text x="1.9018%" y="575.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (504 samples, 0.18%)</title><rect x="1.6518%" y="1029" width="0.1830%" height="15" fill="rgb(243,201,19)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (504 samples, 0.18%)</title><rect x="1.6518%" y="1013" width="0.1830%" height="15" fill="rgb(236,59,4)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (504 samples, 0.18%)</title><rect x="1.6518%" y="997" width="0.1830%" height="15" fill="rgb(254,179,45)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (504 samples, 0.18%)</title><rect x="1.6518%" y="981" width="0.1830%" height="15" fill="rgb(226,14,10)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="991.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (504 samples, 0.18%)</title><rect x="1.6518%" y="965" width="0.1830%" height="15" fill="rgb(244,27,41)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="975.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (504 samples, 0.18%)</title><rect x="1.6518%" y="949" width="0.1830%" height="15" fill="rgb(235,35,32)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (504 samples, 0.18%)</title><rect x="1.6518%" y="933" width="0.1830%" height="15" fill="rgb(218,68,31)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (504 samples, 0.18%)</title><rect x="1.6518%" y="917" width="0.1830%" height="15" fill="rgb(207,120,37)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="927.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (504 samples, 0.18%)</title><rect x="1.6518%" y="901" width="0.1830%" height="15" fill="rgb(227,98,0)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="911.50"></text></g><g><title>async_std::task::block_on::block_on (504 samples, 0.18%)</title><rect x="1.6518%" y="885" width="0.1830%" height="15" fill="rgb(207,7,3)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="895.50"></text></g><g><title>async_std::task::builder::Builder::blocking (504 samples, 0.18%)</title><rect x="1.6518%" y="869" width="0.1830%" height="15" fill="rgb(206,98,19)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (504 samples, 0.18%)</title><rect x="1.6518%" y="853" width="0.1830%" height="15" fill="rgb(217,5,26)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (504 samples, 0.18%)</title><rect x="1.6518%" y="837" width="0.1830%" height="15" fill="rgb(235,190,38)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="847.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (504 samples, 0.18%)</title><rect x="1.6518%" y="821" width="0.1830%" height="15" fill="rgb(247,86,24)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="831.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (504 samples, 0.18%)</title><rect x="1.6518%" y="805" width="0.1830%" height="15" fill="rgb(205,101,16)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (504 samples, 0.18%)</title><rect x="1.6518%" y="789" width="0.1830%" height="15" fill="rgb(246,168,33)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (504 samples, 0.18%)</title><rect x="1.6518%" y="773" width="0.1830%" height="15" fill="rgb(231,114,1)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (504 samples, 0.18%)</title><rect x="1.6518%" y="757" width="0.1830%" height="15" fill="rgb(207,184,53)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="767.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (504 samples, 0.18%)</title><rect x="1.6518%" y="741" width="0.1830%" height="15" fill="rgb(224,95,51)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="751.50"></text></g><g><title>async_global_executor::executor::block_on (504 samples, 0.18%)</title><rect x="1.6518%" y="725" width="0.1830%" height="15" fill="rgb(212,188,45)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (504 samples, 0.18%)</title><rect x="1.6518%" y="709" width="0.1830%" height="15" fill="rgb(223,154,38)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (504 samples, 0.18%)</title><rect x="1.6518%" y="693" width="0.1830%" height="15" fill="rgb(251,22,52)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="703.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (504 samples, 0.18%)</title><rect x="1.6518%" y="677" width="0.1830%" height="15" fill="rgb(229,209,22)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="687.50"></text></g><g><title>async_global_executor::reactor::block_on (504 samples, 0.18%)</title><rect x="1.6518%" y="661" width="0.1830%" height="15" fill="rgb(234,138,34)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="671.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (504 samples, 0.18%)</title><rect x="1.6518%" y="645" width="0.1830%" height="15" fill="rgb(212,95,11)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="655.50"></text></g><g><title>async_io::driver::block_on (504 samples, 0.18%)</title><rect x="1.6518%" y="629" width="0.1830%" height="15" fill="rgb(240,179,47)" fg:x="4548" fg:w="504"/><text x="1.9018%" y="639.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (31 samples, 0.01%)</title><rect x="1.8377%" y="933" width="0.0113%" height="15" fill="rgb(240,163,11)" fg:x="5060" fg:w="31"/><text x="2.0877%" y="943.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (31 samples, 0.01%)</title><rect x="1.8377%" y="917" width="0.0113%" height="15" fill="rgb(236,37,12)" fg:x="5060" fg:w="31"/><text x="2.0877%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (31 samples, 0.01%)</title><rect x="1.8377%" y="901" width="0.0113%" height="15" fill="rgb(232,164,16)" fg:x="5060" fg:w="31"/><text x="2.0877%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (31 samples, 0.01%)</title><rect x="1.8377%" y="885" width="0.0113%" height="15" fill="rgb(244,205,15)" fg:x="5060" fg:w="31"/><text x="2.0877%" y="895.50"></text></g><g><title>[unknown] (471 samples, 0.17%)</title><rect x="1.8722%" y="485" width="0.1711%" height="15" fill="rgb(223,117,47)" fg:x="5155" fg:w="471"/><text x="2.1222%" y="495.50"></text></g><g><title>[unknown] (462 samples, 0.17%)</title><rect x="1.8755%" y="469" width="0.1678%" height="15" fill="rgb(244,107,35)" fg:x="5164" fg:w="462"/><text x="2.1255%" y="479.50"></text></g><g><title>[unknown] (454 samples, 0.16%)</title><rect x="1.8784%" y="453" width="0.1649%" height="15" fill="rgb(205,140,8)" fg:x="5172" fg:w="454"/><text x="2.1284%" y="463.50"></text></g><g><title>[unknown] (448 samples, 0.16%)</title><rect x="1.8806%" y="437" width="0.1627%" height="15" fill="rgb(228,84,46)" fg:x="5178" fg:w="448"/><text x="2.1306%" y="447.50"></text></g><g><title>[unknown] (390 samples, 0.14%)</title><rect x="1.9016%" y="421" width="0.1416%" height="15" fill="rgb(254,188,9)" fg:x="5236" fg:w="390"/><text x="2.1516%" y="431.50"></text></g><g><title>[unknown] (329 samples, 0.12%)</title><rect x="1.9238%" y="405" width="0.1195%" height="15" fill="rgb(206,112,54)" fg:x="5297" fg:w="329"/><text x="2.1738%" y="415.50"></text></g><g><title>[unknown] (288 samples, 0.10%)</title><rect x="1.9387%" y="389" width="0.1046%" height="15" fill="rgb(216,84,49)" fg:x="5338" fg:w="288"/><text x="2.1887%" y="399.50"></text></g><g><title>[unknown] (259 samples, 0.09%)</title><rect x="1.9492%" y="373" width="0.0941%" height="15" fill="rgb(214,194,35)" fg:x="5367" fg:w="259"/><text x="2.1992%" y="383.50"></text></g><g><title>[unknown] (192 samples, 0.07%)</title><rect x="1.9736%" y="357" width="0.0697%" height="15" fill="rgb(249,28,3)" fg:x="5434" fg:w="192"/><text x="2.2236%" y="367.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="2.0284%" y="341" width="0.0149%" height="15" fill="rgb(222,56,52)" fg:x="5585" fg:w="41"/><text x="2.2784%" y="351.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (1,058 samples, 0.38%)</title><rect x="1.8519%" y="661" width="0.3843%" height="15" fill="rgb(245,217,50)" fg:x="5099" fg:w="1058"/><text x="2.1019%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,057 samples, 0.38%)</title><rect x="1.8522%" y="645" width="0.3839%" height="15" fill="rgb(213,201,24)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,057 samples, 0.38%)</title><rect x="1.8522%" y="629" width="0.3839%" height="15" fill="rgb(248,116,28)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,057 samples, 0.38%)</title><rect x="1.8522%" y="613" width="0.3839%" height="15" fill="rgb(219,72,43)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,057 samples, 0.38%)</title><rect x="1.8522%" y="597" width="0.3839%" height="15" fill="rgb(209,138,14)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,057 samples, 0.38%)</title><rect x="1.8522%" y="581" width="0.3839%" height="15" fill="rgb(222,18,33)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,057 samples, 0.38%)</title><rect x="1.8522%" y="565" width="0.3839%" height="15" fill="rgb(213,199,7)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1,057 samples, 0.38%)</title><rect x="1.8522%" y="549" width="0.3839%" height="15" fill="rgb(250,110,10)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="559.50"></text></g><g><title>malloc (1,057 samples, 0.38%)</title><rect x="1.8522%" y="533" width="0.3839%" height="15" fill="rgb(248,123,6)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="543.50"></text></g><g><title>[libc.so.6] (1,057 samples, 0.38%)</title><rect x="1.8522%" y="517" width="0.3839%" height="15" fill="rgb(206,91,31)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="527.50"></text></g><g><title>[libc.so.6] (1,057 samples, 0.38%)</title><rect x="1.8522%" y="501" width="0.3839%" height="15" fill="rgb(211,154,13)" fg:x="5100" fg:w="1057"/><text x="2.1022%" y="511.50"></text></g><g><title>__mprotect (526 samples, 0.19%)</title><rect x="2.0451%" y="485" width="0.1910%" height="15" fill="rgb(225,148,7)" fg:x="5631" fg:w="526"/><text x="2.2951%" y="495.50"></text></g><g><title>[unknown] (523 samples, 0.19%)</title><rect x="2.0462%" y="469" width="0.1899%" height="15" fill="rgb(220,160,43)" fg:x="5634" fg:w="523"/><text x="2.2962%" y="479.50"></text></g><g><title>[unknown] (510 samples, 0.19%)</title><rect x="2.0509%" y="453" width="0.1852%" height="15" fill="rgb(213,52,39)" fg:x="5647" fg:w="510"/><text x="2.3009%" y="463.50"></text></g><g><title>[unknown] (502 samples, 0.18%)</title><rect x="2.0538%" y="437" width="0.1823%" height="15" fill="rgb(243,137,7)" fg:x="5655" fg:w="502"/><text x="2.3038%" y="447.50"></text></g><g><title>[unknown] (491 samples, 0.18%)</title><rect x="2.0578%" y="421" width="0.1783%" height="15" fill="rgb(230,79,13)" fg:x="5666" fg:w="491"/><text x="2.3078%" y="431.50"></text></g><g><title>[unknown] (440 samples, 0.16%)</title><rect x="2.0763%" y="405" width="0.1598%" height="15" fill="rgb(247,105,23)" fg:x="5717" fg:w="440"/><text x="2.3263%" y="415.50"></text></g><g><title>[unknown] (353 samples, 0.13%)</title><rect x="2.1079%" y="389" width="0.1282%" height="15" fill="rgb(223,179,41)" fg:x="5804" fg:w="353"/><text x="2.3579%" y="399.50"></text></g><g><title>[unknown] (261 samples, 0.09%)</title><rect x="2.1413%" y="373" width="0.0948%" height="15" fill="rgb(218,9,34)" fg:x="5896" fg:w="261"/><text x="2.3913%" y="383.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="2.2078%" y="357" width="0.0283%" height="15" fill="rgb(222,106,8)" fg:x="6079" fg:w="78"/><text x="2.4578%" y="367.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="2.2198%" y="341" width="0.0163%" height="15" fill="rgb(211,220,0)" fg:x="6112" fg:w="45"/><text x="2.4698%" y="351.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="2.2245%" y="325" width="0.0116%" height="15" fill="rgb(229,52,16)" fg:x="6125" fg:w="32"/><text x="2.4745%" y="335.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,610 samples, 0.58%)</title><rect x="1.6518%" y="1045" width="0.5847%" height="15" fill="rgb(212,155,18)" fg:x="4548" fg:w="1610"/><text x="1.9018%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (1,106 samples, 0.40%)</title><rect x="1.8348%" y="1029" width="0.4017%" height="15" fill="rgb(242,21,14)" fg:x="5052" fg:w="1106"/><text x="2.0848%" y="1039.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,106 samples, 0.40%)</title><rect x="1.8348%" y="1013" width="0.4017%" height="15" fill="rgb(222,19,48)" fg:x="5052" fg:w="1106"/><text x="2.0848%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,106 samples, 0.40%)</title><rect x="1.8348%" y="997" width="0.4017%" height="15" fill="rgb(232,45,27)" fg:x="5052" fg:w="1106"/><text x="2.0848%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (1,106 samples, 0.40%)</title><rect x="1.8348%" y="981" width="0.4017%" height="15" fill="rgb(249,103,42)" fg:x="5052" fg:w="1106"/><text x="2.0848%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,106 samples, 0.40%)</title><rect x="1.8348%" y="965" width="0.4017%" height="15" fill="rgb(246,81,33)" fg:x="5052" fg:w="1106"/><text x="2.0848%" y="975.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (1,098 samples, 0.40%)</title><rect x="1.8377%" y="949" width="0.3988%" height="15" fill="rgb(252,33,42)" fg:x="5060" fg:w="1098"/><text x="2.0877%" y="959.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (1,067 samples, 0.39%)</title><rect x="1.8490%" y="933" width="0.3875%" height="15" fill="rgb(209,212,41)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="943.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (1,067 samples, 0.39%)</title><rect x="1.8490%" y="917" width="0.3875%" height="15" fill="rgb(207,154,6)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="927.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (1,067 samples, 0.39%)</title><rect x="1.8490%" y="901" width="0.3875%" height="15" fill="rgb(223,64,47)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,067 samples, 0.39%)</title><rect x="1.8490%" y="885" width="0.3875%" height="15" fill="rgb(211,161,38)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,067 samples, 0.39%)</title><rect x="1.8490%" y="869" width="0.3875%" height="15" fill="rgb(219,138,40)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,067 samples, 0.39%)</title><rect x="1.8490%" y="853" width="0.3875%" height="15" fill="rgb(241,228,46)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,067 samples, 0.39%)</title><rect x="1.8490%" y="837" width="0.3875%" height="15" fill="rgb(223,209,38)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,067 samples, 0.39%)</title><rect x="1.8490%" y="821" width="0.3875%" height="15" fill="rgb(236,164,45)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,067 samples, 0.39%)</title><rect x="1.8490%" y="805" width="0.3875%" height="15" fill="rgb(231,15,5)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,067 samples, 0.39%)</title><rect x="1.8490%" y="789" width="0.3875%" height="15" fill="rgb(252,35,15)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,067 samples, 0.39%)</title><rect x="1.8490%" y="773" width="0.3875%" height="15" fill="rgb(248,181,18)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,067 samples, 0.39%)</title><rect x="1.8490%" y="757" width="0.3875%" height="15" fill="rgb(233,39,42)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1,067 samples, 0.39%)</title><rect x="1.8490%" y="741" width="0.3875%" height="15" fill="rgb(238,110,33)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,067 samples, 0.39%)</title><rect x="1.8490%" y="725" width="0.3875%" height="15" fill="rgb(233,195,10)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="735.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (1,067 samples, 0.39%)</title><rect x="1.8490%" y="709" width="0.3875%" height="15" fill="rgb(254,105,3)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="719.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (1,067 samples, 0.39%)</title><rect x="1.8490%" y="693" width="0.3875%" height="15" fill="rgb(221,225,9)" fg:x="5091" fg:w="1067"/><text x="2.0990%" y="703.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (1,059 samples, 0.38%)</title><rect x="1.8519%" y="677" width="0.3846%" height="15" fill="rgb(224,227,45)" fg:x="5099" fg:w="1059"/><text x="2.1019%" y="687.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1221" width="0.5887%" height="15" fill="rgb(229,198,43)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1231.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1205" width="0.5887%" height="15" fill="rgb(206,209,35)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1189" width="0.5887%" height="15" fill="rgb(245,195,53)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1173" width="0.5887%" height="15" fill="rgb(240,92,26)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1183.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1157" width="0.5887%" height="15" fill="rgb(207,40,23)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1167.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1141" width="0.5887%" height="15" fill="rgb(223,111,35)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1125" width="0.5887%" height="15" fill="rgb(229,147,28)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1109" width="0.5887%" height="15" fill="rgb(211,29,28)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1093" width="0.5887%" height="15" fill="rgb(228,72,33)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1077" width="0.5887%" height="15" fill="rgb(205,214,31)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1087.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,621 samples, 0.59%)</title><rect x="1.6518%" y="1061" width="0.5887%" height="15" fill="rgb(224,111,15)" fg:x="4548" fg:w="1621"/><text x="1.9018%" y="1071.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (47 samples, 0.02%)</title><rect x="2.2416%" y="485" width="0.0171%" height="15" fill="rgb(253,21,26)" fg:x="6172" fg:w="47"/><text x="2.4916%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (45 samples, 0.02%)</title><rect x="2.2423%" y="469" width="0.0163%" height="15" fill="rgb(245,139,43)" fg:x="6174" fg:w="45"/><text x="2.4923%" y="479.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (45 samples, 0.02%)</title><rect x="2.2423%" y="453" width="0.0163%" height="15" fill="rgb(252,170,7)" fg:x="6174" fg:w="45"/><text x="2.4923%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (97 samples, 0.04%)</title><rect x="2.2416%" y="501" width="0.0352%" height="15" fill="rgb(231,118,14)" fg:x="6172" fg:w="97"/><text x="2.4916%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (50 samples, 0.02%)</title><rect x="2.2587%" y="485" width="0.0182%" height="15" fill="rgb(238,83,0)" fg:x="6219" fg:w="50"/><text x="2.5087%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="2.2587%" y="469" width="0.0182%" height="15" fill="rgb(221,39,39)" fg:x="6219" fg:w="50"/><text x="2.5087%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (50 samples, 0.02%)</title><rect x="2.2587%" y="453" width="0.0182%" height="15" fill="rgb(222,119,46)" fg:x="6219" fg:w="50"/><text x="2.5087%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (50 samples, 0.02%)</title><rect x="2.2587%" y="437" width="0.0182%" height="15" fill="rgb(222,165,49)" fg:x="6219" fg:w="50"/><text x="2.5087%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (50 samples, 0.02%)</title><rect x="2.2587%" y="421" width="0.0182%" height="15" fill="rgb(219,113,52)" fg:x="6219" fg:w="50"/><text x="2.5087%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (50 samples, 0.02%)</title><rect x="2.2587%" y="405" width="0.0182%" height="15" fill="rgb(214,7,15)" fg:x="6219" fg:w="50"/><text x="2.5087%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (50 samples, 0.02%)</title><rect x="2.2587%" y="389" width="0.0182%" height="15" fill="rgb(235,32,4)" fg:x="6219" fg:w="50"/><text x="2.5087%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (41 samples, 0.01%)</title><rect x="2.2619%" y="373" width="0.0149%" height="15" fill="rgb(238,90,54)" fg:x="6228" fg:w="41"/><text x="2.5119%" y="383.50"></text></g><g><title>alloc::alloc::box_free (41 samples, 0.01%)</title><rect x="2.2619%" y="357" width="0.0149%" height="15" fill="rgb(213,208,19)" fg:x="6228" fg:w="41"/><text x="2.5119%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.01%)</title><rect x="2.2619%" y="341" width="0.0149%" height="15" fill="rgb(233,156,4)" fg:x="6228" fg:w="41"/><text x="2.5119%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 0.01%)</title><rect x="2.2619%" y="325" width="0.0149%" height="15" fill="rgb(207,194,5)" fg:x="6228" fg:w="41"/><text x="2.5119%" y="335.50"></text></g><g><title>cfree (41 samples, 0.01%)</title><rect x="2.2619%" y="309" width="0.0149%" height="15" fill="rgb(206,111,30)" fg:x="6228" fg:w="41"/><text x="2.5119%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.04%)</title><rect x="2.2412%" y="565" width="0.0392%" height="15" fill="rgb(243,70,54)" fg:x="6171" fg:w="108"/><text x="2.4912%" y="575.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (108 samples, 0.04%)</title><rect x="2.2412%" y="549" width="0.0392%" height="15" fill="rgb(242,28,8)" fg:x="6171" fg:w="108"/><text x="2.4912%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.04%)</title><rect x="2.2412%" y="533" width="0.0392%" height="15" fill="rgb(219,106,18)" fg:x="6171" fg:w="108"/><text x="2.4912%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (108 samples, 0.04%)</title><rect x="2.2412%" y="517" width="0.0392%" height="15" fill="rgb(244,222,10)" fg:x="6171" fg:w="108"/><text x="2.4912%" y="527.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (122 samples, 0.04%)</title><rect x="2.2412%" y="901" width="0.0443%" height="15" fill="rgb(236,179,52)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (122 samples, 0.04%)</title><rect x="2.2412%" y="885" width="0.0443%" height="15" fill="rgb(213,23,39)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (122 samples, 0.04%)</title><rect x="2.2412%" y="869" width="0.0443%" height="15" fill="rgb(238,48,10)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="879.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.04%)</title><rect x="2.2412%" y="853" width="0.0443%" height="15" fill="rgb(251,196,23)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="863.50"></text></g><g><title>async_std::task::block_on::block_on (122 samples, 0.04%)</title><rect x="2.2412%" y="837" width="0.0443%" height="15" fill="rgb(250,152,24)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="847.50"></text></g><g><title>async_std::task::builder::Builder::blocking (122 samples, 0.04%)</title><rect x="2.2412%" y="821" width="0.0443%" height="15" fill="rgb(209,150,17)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (122 samples, 0.04%)</title><rect x="2.2412%" y="805" width="0.0443%" height="15" fill="rgb(234,202,34)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (122 samples, 0.04%)</title><rect x="2.2412%" y="789" width="0.0443%" height="15" fill="rgb(253,148,53)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="799.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (122 samples, 0.04%)</title><rect x="2.2412%" y="773" width="0.0443%" height="15" fill="rgb(218,129,16)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="783.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (122 samples, 0.04%)</title><rect x="2.2412%" y="757" width="0.0443%" height="15" fill="rgb(216,85,19)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (122 samples, 0.04%)</title><rect x="2.2412%" y="741" width="0.0443%" height="15" fill="rgb(235,228,7)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (122 samples, 0.04%)</title><rect x="2.2412%" y="725" width="0.0443%" height="15" fill="rgb(245,175,0)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="735.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (122 samples, 0.04%)</title><rect x="2.2412%" y="709" width="0.0443%" height="15" fill="rgb(208,168,36)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="719.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (122 samples, 0.04%)</title><rect x="2.2412%" y="693" width="0.0443%" height="15" fill="rgb(246,171,24)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="703.50"></text></g><g><title>async_global_executor::executor::block_on (122 samples, 0.04%)</title><rect x="2.2412%" y="677" width="0.0443%" height="15" fill="rgb(215,142,24)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (122 samples, 0.04%)</title><rect x="2.2412%" y="661" width="0.0443%" height="15" fill="rgb(250,187,7)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (122 samples, 0.04%)</title><rect x="2.2412%" y="645" width="0.0443%" height="15" fill="rgb(228,66,33)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="655.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (122 samples, 0.04%)</title><rect x="2.2412%" y="629" width="0.0443%" height="15" fill="rgb(234,215,21)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="639.50"></text></g><g><title>async_global_executor::reactor::block_on (122 samples, 0.04%)</title><rect x="2.2412%" y="613" width="0.0443%" height="15" fill="rgb(222,191,20)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="623.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (122 samples, 0.04%)</title><rect x="2.2412%" y="597" width="0.0443%" height="15" fill="rgb(245,79,54)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="607.50"></text></g><g><title>async_io::driver::block_on (122 samples, 0.04%)</title><rect x="2.2412%" y="581" width="0.0443%" height="15" fill="rgb(240,10,37)" fg:x="6171" fg:w="122"/><text x="2.4912%" y="591.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (134 samples, 0.05%)</title><rect x="2.2412%" y="981" width="0.0487%" height="15" fill="rgb(214,192,32)" fg:x="6171" fg:w="134"/><text x="2.4912%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (134 samples, 0.05%)</title><rect x="2.2412%" y="965" width="0.0487%" height="15" fill="rgb(209,36,54)" fg:x="6171" fg:w="134"/><text x="2.4912%" y="975.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (134 samples, 0.05%)</title><rect x="2.2412%" y="949" width="0.0487%" height="15" fill="rgb(220,10,11)" fg:x="6171" fg:w="134"/><text x="2.4912%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (134 samples, 0.05%)</title><rect x="2.2412%" y="933" width="0.0487%" height="15" fill="rgb(221,106,17)" fg:x="6171" fg:w="134"/><text x="2.4912%" y="943.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (134 samples, 0.05%)</title><rect x="2.2412%" y="917" width="0.0487%" height="15" fill="rgb(251,142,44)" fg:x="6171" fg:w="134"/><text x="2.4912%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.05%)</title><rect x="2.2412%" y="997" width="0.0516%" height="15" fill="rgb(238,13,15)" fg:x="6171" fg:w="142"/><text x="2.4912%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (155 samples, 0.06%)</title><rect x="2.2405%" y="1221" width="0.0563%" height="15" fill="rgb(208,107,27)" fg:x="6169" fg:w="155"/><text x="2.4905%" y="1231.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="2.2405%" y="1205" width="0.0563%" height="15" fill="rgb(205,136,37)" fg:x="6169" fg:w="155"/><text x="2.4905%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="2.2405%" y="1189" width="0.0563%" height="15" fill="rgb(250,205,27)" fg:x="6169" fg:w="155"/><text x="2.4905%" y="1199.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (155 samples, 0.06%)</title><rect x="2.2405%" y="1173" width="0.0563%" height="15" fill="rgb(210,80,43)" fg:x="6169" fg:w="155"/><text x="2.4905%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (155 samples, 0.06%)</title><rect x="2.2405%" y="1157" width="0.0563%" height="15" fill="rgb(247,160,36)" fg:x="6169" fg:w="155"/><text x="2.4905%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (153 samples, 0.06%)</title><rect x="2.2412%" y="1141" width="0.0556%" height="15" fill="rgb(234,13,49)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (153 samples, 0.06%)</title><rect x="2.2412%" y="1125" width="0.0556%" height="15" fill="rgb(234,122,0)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1135.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (153 samples, 0.06%)</title><rect x="2.2412%" y="1109" width="0.0556%" height="15" fill="rgb(207,146,38)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1119.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (153 samples, 0.06%)</title><rect x="2.2412%" y="1093" width="0.0556%" height="15" fill="rgb(207,177,25)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (153 samples, 0.06%)</title><rect x="2.2412%" y="1077" width="0.0556%" height="15" fill="rgb(211,178,42)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (153 samples, 0.06%)</title><rect x="2.2412%" y="1061" width="0.0556%" height="15" fill="rgb(230,69,54)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (153 samples, 0.06%)</title><rect x="2.2412%" y="1045" width="0.0556%" height="15" fill="rgb(214,135,41)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1055.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (153 samples, 0.06%)</title><rect x="2.2412%" y="1029" width="0.0556%" height="15" fill="rgb(237,67,25)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1039.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (153 samples, 0.06%)</title><rect x="2.2412%" y="1013" width="0.0556%" height="15" fill="rgb(222,189,50)" fg:x="6171" fg:w="153"/><text x="2.4912%" y="1023.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (53 samples, 0.02%)</title><rect x="2.2968%" y="1221" width="0.0192%" height="15" fill="rgb(245,148,34)" fg:x="6324" fg:w="53"/><text x="2.5468%" y="1231.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="2.2968%" y="1205" width="0.0192%" height="15" fill="rgb(222,29,6)" fg:x="6324" fg:w="53"/><text x="2.5468%" y="1215.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (53 samples, 0.02%)</title><rect x="2.2968%" y="1189" width="0.0192%" height="15" fill="rgb(221,189,43)" fg:x="6324" fg:w="53"/><text x="2.5468%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (53 samples, 0.02%)</title><rect x="2.2968%" y="1173" width="0.0192%" height="15" fill="rgb(207,36,27)" fg:x="6324" fg:w="53"/><text x="2.5468%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (53 samples, 0.02%)</title><rect x="2.2968%" y="1157" width="0.0192%" height="15" fill="rgb(217,90,24)" fg:x="6324" fg:w="53"/><text x="2.5468%" y="1167.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (53 samples, 0.02%)</title><rect x="2.2968%" y="1141" width="0.0192%" height="15" fill="rgb(224,66,35)" fg:x="6324" fg:w="53"/><text x="2.5468%" y="1151.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (53 samples, 0.02%)</title><rect x="2.2968%" y="1125" width="0.0192%" height="15" fill="rgb(221,13,50)" fg:x="6324" fg:w="53"/><text x="2.5468%" y="1135.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="2.3022%" y="1109" width="0.0138%" height="15" fill="rgb(236,68,49)" fg:x="6339" fg:w="38"/><text x="2.5522%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="2.3022%" y="1093" width="0.0138%" height="15" fill="rgb(229,146,28)" fg:x="6339" fg:w="38"/><text x="2.5522%" y="1103.50"></text></g><g><title>&lt;zenoh::queryable::QueryableBuilder as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="2.3186%" y="1205" width="0.0102%" height="15" fill="rgb(225,31,38)" fg:x="6384" fg:w="28"/><text x="2.5686%" y="1215.50"></text></g><g><title>&lt;zenoh::queryable::QueryableBuilder as zenoh_sync::Runnable&gt;::run (28 samples, 0.01%)</title><rect x="2.3186%" y="1189" width="0.0102%" height="15" fill="rgb(250,208,3)" fg:x="6384" fg:w="28"/><text x="2.5686%" y="1199.50"></text></g><g><title>std::sys::unix::thread::Thread::new (52 samples, 0.02%)</title><rect x="2.3571%" y="1013" width="0.0189%" height="15" fill="rgb(246,54,23)" fg:x="6490" fg:w="52"/><text x="2.6071%" y="1023.50"></text></g><g><title>pthread_create (47 samples, 0.02%)</title><rect x="2.3589%" y="997" width="0.0171%" height="15" fill="rgb(243,76,11)" fg:x="6495" fg:w="47"/><text x="2.6089%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.03%)</title><rect x="2.3451%" y="1093" width="0.0316%" height="15" fill="rgb(245,21,50)" fg:x="6457" fg:w="87"/><text x="2.5951%" y="1103.50"></text></g><g><title>async_global_executor::threading::spawn_more_threads::{{closure}} (87 samples, 0.03%)</title><rect x="2.3451%" y="1077" width="0.0316%" height="15" fill="rgb(228,9,43)" fg:x="6457" fg:w="87"/><text x="2.5951%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn (64 samples, 0.02%)</title><rect x="2.3534%" y="1061" width="0.0232%" height="15" fill="rgb(208,100,47)" fg:x="6480" fg:w="64"/><text x="2.6034%" y="1071.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (64 samples, 0.02%)</title><rect x="2.3534%" y="1045" width="0.0232%" height="15" fill="rgb(232,26,8)" fg:x="6480" fg:w="64"/><text x="2.6034%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (63 samples, 0.02%)</title><rect x="2.3538%" y="1029" width="0.0229%" height="15" fill="rgb(216,166,38)" fg:x="6481" fg:w="63"/><text x="2.6038%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (110 samples, 0.04%)</title><rect x="2.3422%" y="1125" width="0.0400%" height="15" fill="rgb(251,202,51)" fg:x="6449" fg:w="110"/><text x="2.5922%" y="1135.50"></text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}} (105 samples, 0.04%)</title><rect x="2.3440%" y="1109" width="0.0381%" height="15" fill="rgb(254,216,34)" fg:x="6454" fg:w="105"/><text x="2.5940%" y="1119.50"></text></g><g><title>&lt;zenoh_sync::ZPinBoxFuture&lt;T&gt; as core::future::future::Future&gt;::poll (129 samples, 0.05%)</title><rect x="2.3367%" y="1205" width="0.0469%" height="15" fill="rgb(251,32,27)" fg:x="6434" fg:w="129"/><text x="2.5867%" y="1215.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (129 samples, 0.05%)</title><rect x="2.3367%" y="1189" width="0.0469%" height="15" fill="rgb(208,127,28)" fg:x="6434" fg:w="129"/><text x="2.5867%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (129 samples, 0.05%)</title><rect x="2.3367%" y="1173" width="0.0469%" height="15" fill="rgb(224,137,22)" fg:x="6434" fg:w="129"/><text x="2.5867%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (129 samples, 0.05%)</title><rect x="2.3367%" y="1157" width="0.0469%" height="15" fill="rgb(254,70,32)" fg:x="6434" fg:w="129"/><text x="2.5867%" y="1167.50"></text></g><g><title>zenoh::session::Session::new::{{closure}} (115 samples, 0.04%)</title><rect x="2.3418%" y="1141" width="0.0418%" height="15" fill="rgb(229,75,37)" fg:x="6448" fg:w="115"/><text x="2.5918%" y="1151.50"></text></g><g><title>router_eval_test::main::main::{{closure}}::{{closure}}::{{closure}} (188 samples, 0.07%)</title><rect x="2.3160%" y="1221" width="0.0683%" height="15" fill="rgb(252,64,23)" fg:x="6377" fg:w="188"/><text x="2.5660%" y="1231.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (96 samples, 0.03%)</title><rect x="2.4025%" y="917" width="0.0349%" height="15" fill="rgb(232,162,48)" fg:x="6615" fg:w="96"/><text x="2.6525%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (58 samples, 0.02%)</title><rect x="2.4163%" y="901" width="0.0211%" height="15" fill="rgb(246,160,12)" fg:x="6653" fg:w="58"/><text x="2.6663%" y="911.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (148 samples, 0.05%)</title><rect x="2.3865%" y="1029" width="0.0538%" height="15" fill="rgb(247,166,0)" fg:x="6571" fg:w="148"/><text x="2.6365%" y="1039.50"></text></g><g><title>rsa::pkcs1v15::encrypt (148 samples, 0.05%)</title><rect x="2.3865%" y="1013" width="0.0538%" height="15" fill="rgb(249,219,21)" fg:x="6571" fg:w="148"/><text x="2.6365%" y="1023.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::raw::EncryptionPrimitive&gt;::raw_encryption_primitive (148 samples, 0.05%)</title><rect x="2.3865%" y="997" width="0.0538%" height="15" fill="rgb(205,209,3)" fg:x="6571" fg:w="148"/><text x="2.6365%" y="1007.50"></text></g><g><title>rsa::internals::encrypt (148 samples, 0.05%)</title><rect x="2.3865%" y="981" width="0.0538%" height="15" fill="rgb(243,44,1)" fg:x="6571" fg:w="148"/><text x="2.6365%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (148 samples, 0.05%)</title><rect x="2.3865%" y="965" width="0.0538%" height="15" fill="rgb(206,159,16)" fg:x="6571" fg:w="148"/><text x="2.6365%" y="975.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (148 samples, 0.05%)</title><rect x="2.3865%" y="949" width="0.0538%" height="15" fill="rgb(244,77,30)" fg:x="6571" fg:w="148"/><text x="2.6365%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (129 samples, 0.05%)</title><rect x="2.3934%" y="933" width="0.0469%" height="15" fill="rgb(218,69,12)" fg:x="6590" fg:w="129"/><text x="2.6434%" y="943.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (29 samples, 0.01%)</title><rect x="2.4519%" y="885" width="0.0105%" height="15" fill="rgb(212,87,7)" fg:x="6751" fg:w="29"/><text x="2.7019%" y="895.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (29 samples, 0.01%)</title><rect x="2.4519%" y="869" width="0.0105%" height="15" fill="rgb(245,114,25)" fg:x="6751" fg:w="29"/><text x="2.7019%" y="879.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (29 samples, 0.01%)</title><rect x="2.4519%" y="853" width="0.0105%" height="15" fill="rgb(210,61,42)" fg:x="6751" fg:w="29"/><text x="2.7019%" y="863.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (30 samples, 0.01%)</title><rect x="2.4519%" y="901" width="0.0109%" height="15" fill="rgb(211,52,33)" fg:x="6751" fg:w="30"/><text x="2.7019%" y="911.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::RemAssign&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem_assign (30 samples, 0.01%)</title><rect x="2.4628%" y="901" width="0.0109%" height="15" fill="rgb(234,58,33)" fg:x="6781" fg:w="30"/><text x="2.7128%" y="911.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (30 samples, 0.01%)</title><rect x="2.4628%" y="885" width="0.0109%" height="15" fill="rgb(220,115,36)" fg:x="6781" fg:w="30"/><text x="2.7128%" y="895.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (30 samples, 0.01%)</title><rect x="2.4628%" y="869" width="0.0109%" height="15" fill="rgb(243,153,54)" fg:x="6781" fg:w="30"/><text x="2.7128%" y="879.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (30 samples, 0.01%)</title><rect x="2.4628%" y="853" width="0.0109%" height="15" fill="rgb(251,47,18)" fg:x="6781" fg:w="30"/><text x="2.7128%" y="863.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (223 samples, 0.08%)</title><rect x="2.5198%" y="885" width="0.0810%" height="15" fill="rgb(242,102,42)" fg:x="6938" fg:w="223"/><text x="2.7698%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (110 samples, 0.04%)</title><rect x="2.5608%" y="869" width="0.0400%" height="15" fill="rgb(234,31,38)" fg:x="7051" fg:w="110"/><text x="2.8108%" y="879.50"></text></g><g><title>rsa::internals::decrypt (503 samples, 0.18%)</title><rect x="2.4421%" y="949" width="0.1827%" height="15" fill="rgb(221,117,51)" fg:x="6724" fg:w="503"/><text x="2.6921%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (488 samples, 0.18%)</title><rect x="2.4475%" y="933" width="0.1772%" height="15" fill="rgb(212,20,18)" fg:x="6739" fg:w="488"/><text x="2.6975%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (487 samples, 0.18%)</title><rect x="2.4479%" y="917" width="0.1769%" height="15" fill="rgb(245,133,36)" fg:x="6740" fg:w="487"/><text x="2.6979%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (383 samples, 0.14%)</title><rect x="2.4856%" y="901" width="0.1391%" height="15" fill="rgb(212,6,19)" fg:x="6844" fg:w="383"/><text x="2.7356%" y="911.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (52 samples, 0.02%)</title><rect x="2.6059%" y="885" width="0.0189%" height="15" fill="rgb(218,1,36)" fg:x="7175" fg:w="52"/><text x="2.8559%" y="895.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (45 samples, 0.02%)</title><rect x="2.6084%" y="869" width="0.0163%" height="15" fill="rgb(246,84,54)" fg:x="7182" fg:w="45"/><text x="2.8584%" y="879.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (124 samples, 0.05%)</title><rect x="2.6422%" y="885" width="0.0450%" height="15" fill="rgb(242,110,6)" fg:x="7275" fg:w="124"/><text x="2.8922%" y="895.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (54 samples, 0.02%)</title><rect x="2.6676%" y="869" width="0.0196%" height="15" fill="rgb(214,47,5)" fg:x="7345" fg:w="54"/><text x="2.9176%" y="879.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (861 samples, 0.31%)</title><rect x="2.3865%" y="1045" width="0.3127%" height="15" fill="rgb(218,159,25)" fg:x="6571" fg:w="861"/><text x="2.6365%" y="1055.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (713 samples, 0.26%)</title><rect x="2.4402%" y="1029" width="0.2590%" height="15" fill="rgb(215,211,28)" fg:x="6719" fg:w="713"/><text x="2.6902%" y="1039.50"></text></g><g><title>rsa::pkcs1v15::decrypt (713 samples, 0.26%)</title><rect x="2.4402%" y="1013" width="0.2590%" height="15" fill="rgb(238,59,32)" fg:x="6719" fg:w="713"/><text x="2.6902%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (713 samples, 0.26%)</title><rect x="2.4402%" y="997" width="0.2590%" height="15" fill="rgb(226,82,3)" fg:x="6719" fg:w="713"/><text x="2.6902%" y="1007.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (713 samples, 0.26%)</title><rect x="2.4402%" y="981" width="0.2590%" height="15" fill="rgb(240,164,32)" fg:x="6719" fg:w="713"/><text x="2.6902%" y="991.50"></text></g><g><title>rsa::internals::decrypt_and_check (708 samples, 0.26%)</title><rect x="2.4421%" y="965" width="0.2571%" height="15" fill="rgb(232,46,7)" fg:x="6724" fg:w="708"/><text x="2.6921%" y="975.50"></text></g><g><title>rsa::internals::encrypt (205 samples, 0.07%)</title><rect x="2.6247%" y="949" width="0.0745%" height="15" fill="rgb(229,129,53)" fg:x="7227" fg:w="205"/><text x="2.8747%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (205 samples, 0.07%)</title><rect x="2.6247%" y="933" width="0.0745%" height="15" fill="rgb(234,188,29)" fg:x="7227" fg:w="205"/><text x="2.8747%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (205 samples, 0.07%)</title><rect x="2.6247%" y="917" width="0.0745%" height="15" fill="rgb(246,141,4)" fg:x="7227" fg:w="205"/><text x="2.8747%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (182 samples, 0.07%)</title><rect x="2.6331%" y="901" width="0.0661%" height="15" fill="rgb(229,23,39)" fg:x="7250" fg:w="182"/><text x="2.8831%" y="911.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (32 samples, 0.01%)</title><rect x="2.6876%" y="885" width="0.0116%" height="15" fill="rgb(206,12,3)" fg:x="7400" fg:w="32"/><text x="2.9376%" y="895.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (31 samples, 0.01%)</title><rect x="2.6879%" y="869" width="0.0113%" height="15" fill="rgb(252,226,20)" fg:x="7401" fg:w="31"/><text x="2.9379%" y="879.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (877 samples, 0.32%)</title><rect x="2.3843%" y="1093" width="0.3185%" height="15" fill="rgb(216,123,35)" fg:x="6565" fg:w="877"/><text x="2.6343%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (871 samples, 0.32%)</title><rect x="2.3865%" y="1077" width="0.3163%" height="15" fill="rgb(212,68,40)" fg:x="6571" fg:w="871"/><text x="2.6365%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (871 samples, 0.32%)</title><rect x="2.3865%" y="1061" width="0.3163%" height="15" fill="rgb(254,125,32)" fg:x="6571" fg:w="871"/><text x="2.6365%" y="1071.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (93 samples, 0.03%)</title><rect x="2.7362%" y="901" width="0.0338%" height="15" fill="rgb(253,97,22)" fg:x="7534" fg:w="93"/><text x="2.9862%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (92 samples, 0.03%)</title><rect x="2.7366%" y="885" width="0.0334%" height="15" fill="rgb(241,101,14)" fg:x="7535" fg:w="92"/><text x="2.9866%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (57 samples, 0.02%)</title><rect x="2.7493%" y="869" width="0.0207%" height="15" fill="rgb(238,103,29)" fg:x="7570" fg:w="57"/><text x="2.9993%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (57 samples, 0.02%)</title><rect x="2.7493%" y="853" width="0.0207%" height="15" fill="rgb(233,195,47)" fg:x="7570" fg:w="57"/><text x="2.9993%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (57 samples, 0.02%)</title><rect x="2.7493%" y="837" width="0.0207%" height="15" fill="rgb(246,218,30)" fg:x="7570" fg:w="57"/><text x="2.9993%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (57 samples, 0.02%)</title><rect x="2.7493%" y="821" width="0.0207%" height="15" fill="rgb(219,145,47)" fg:x="7570" fg:w="57"/><text x="2.9993%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (51 samples, 0.02%)</title><rect x="2.7515%" y="805" width="0.0185%" height="15" fill="rgb(243,12,26)" fg:x="7576" fg:w="51"/><text x="3.0015%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 0.02%)</title><rect x="2.7515%" y="789" width="0.0185%" height="15" fill="rgb(214,87,16)" fg:x="7576" fg:w="51"/><text x="3.0015%" y="799.50"></text></g><g><title>[libc.so.6] (51 samples, 0.02%)</title><rect x="2.7515%" y="773" width="0.0185%" height="15" fill="rgb(208,99,42)" fg:x="7576" fg:w="51"/><text x="3.0015%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (97 samples, 0.04%)</title><rect x="2.7362%" y="981" width="0.0352%" height="15" fill="rgb(253,99,2)" fg:x="7534" fg:w="97"/><text x="2.9862%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (97 samples, 0.04%)</title><rect x="2.7362%" y="965" width="0.0352%" height="15" fill="rgb(220,168,23)" fg:x="7534" fg:w="97"/><text x="2.9862%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (97 samples, 0.04%)</title><rect x="2.7362%" y="949" width="0.0352%" height="15" fill="rgb(242,38,24)" fg:x="7534" fg:w="97"/><text x="2.9862%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (97 samples, 0.04%)</title><rect x="2.7362%" y="933" width="0.0352%" height="15" fill="rgb(225,182,9)" fg:x="7534" fg:w="97"/><text x="2.9862%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (97 samples, 0.04%)</title><rect x="2.7362%" y="917" width="0.0352%" height="15" fill="rgb(243,178,37)" fg:x="7534" fg:w="97"/><text x="2.9862%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (119 samples, 0.04%)</title><rect x="2.7322%" y="1013" width="0.0432%" height="15" fill="rgb(232,139,19)" fg:x="7523" fg:w="119"/><text x="2.9822%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (109 samples, 0.04%)</title><rect x="2.7359%" y="997" width="0.0396%" height="15" fill="rgb(225,201,24)" fg:x="7533" fg:w="109"/><text x="2.9859%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (121 samples, 0.04%)</title><rect x="2.7322%" y="1029" width="0.0439%" height="15" fill="rgb(221,47,46)" fg:x="7523" fg:w="121"/><text x="2.9822%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 0.01%)</title><rect x="2.7802%" y="981" width="0.0123%" height="15" fill="rgb(249,23,13)" fg:x="7655" fg:w="34"/><text x="3.0302%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (34 samples, 0.01%)</title><rect x="2.7802%" y="965" width="0.0123%" height="15" fill="rgb(219,9,5)" fg:x="7655" fg:w="34"/><text x="3.0302%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.01%)</title><rect x="2.7802%" y="949" width="0.0123%" height="15" fill="rgb(254,171,16)" fg:x="7655" fg:w="34"/><text x="3.0302%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (34 samples, 0.01%)</title><rect x="2.7802%" y="933" width="0.0123%" height="15" fill="rgb(230,171,20)" fg:x="7655" fg:w="34"/><text x="3.0302%" y="943.50"></text></g><g><title>getifaddrs (60 samples, 0.02%)</title><rect x="2.8045%" y="853" width="0.0218%" height="15" fill="rgb(210,71,41)" fg:x="7722" fg:w="60"/><text x="3.0545%" y="863.50"></text></g><g><title>[libc.so.6] (59 samples, 0.02%)</title><rect x="2.8049%" y="837" width="0.0214%" height="15" fill="rgb(206,173,20)" fg:x="7723" fg:w="59"/><text x="3.0549%" y="847.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (100 samples, 0.04%)</title><rect x="2.7951%" y="933" width="0.0363%" height="15" fill="rgb(233,88,34)" fg:x="7696" fg:w="100"/><text x="3.0451%" y="943.50"></text></g><g><title>zenoh_util::net::get_local_addresses (87 samples, 0.03%)</title><rect x="2.7998%" y="917" width="0.0316%" height="15" fill="rgb(223,209,46)" fg:x="7709" fg:w="87"/><text x="3.0498%" y="927.50"></text></g><g><title>pnet_datalink::interfaces (85 samples, 0.03%)</title><rect x="2.8005%" y="901" width="0.0309%" height="15" fill="rgb(250,43,18)" fg:x="7711" fg:w="85"/><text x="3.0505%" y="911.50"></text></g><g><title>pnet_datalink::backend::interfaces (84 samples, 0.03%)</title><rect x="2.8009%" y="885" width="0.0305%" height="15" fill="rgb(208,13,10)" fg:x="7712" fg:w="84"/><text x="3.0509%" y="895.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (84 samples, 0.03%)</title><rect x="2.8009%" y="869" width="0.0305%" height="15" fill="rgb(212,200,36)" fg:x="7712" fg:w="84"/><text x="3.0509%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (143 samples, 0.05%)</title><rect x="2.7798%" y="1013" width="0.0519%" height="15" fill="rgb(225,90,30)" fg:x="7654" fg:w="143"/><text x="3.0298%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (142 samples, 0.05%)</title><rect x="2.7802%" y="997" width="0.0516%" height="15" fill="rgb(236,182,39)" fg:x="7655" fg:w="142"/><text x="3.0302%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (108 samples, 0.04%)</title><rect x="2.7925%" y="981" width="0.0392%" height="15" fill="rgb(212,144,35)" fg:x="7689" fg:w="108"/><text x="3.0425%" y="991.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (108 samples, 0.04%)</title><rect x="2.7925%" y="965" width="0.0392%" height="15" fill="rgb(228,63,44)" fg:x="7689" fg:w="108"/><text x="3.0425%" y="975.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (107 samples, 0.04%)</title><rect x="2.7929%" y="949" width="0.0389%" height="15" fill="rgb(228,109,6)" fg:x="7690" fg:w="107"/><text x="3.0429%" y="959.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (171 samples, 0.06%)</title><rect x="2.7762%" y="1029" width="0.0621%" height="15" fill="rgb(238,117,24)" fg:x="7644" fg:w="171"/><text x="3.0262%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (374 samples, 0.14%)</title><rect x="2.7028%" y="1045" width="0.1358%" height="15" fill="rgb(242,26,26)" fg:x="7442" fg:w="374"/><text x="2.9528%" y="1055.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (384 samples, 0.14%)</title><rect x="2.7028%" y="1077" width="0.1395%" height="15" fill="rgb(221,92,48)" fg:x="7442" fg:w="384"/><text x="2.9528%" y="1087.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (384 samples, 0.14%)</title><rect x="2.7028%" y="1061" width="0.1395%" height="15" fill="rgb(209,209,32)" fg:x="7442" fg:w="384"/><text x="2.9528%" y="1071.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (67 samples, 0.02%)</title><rect x="2.8597%" y="821" width="0.0243%" height="15" fill="rgb(221,70,22)" fg:x="7874" fg:w="67"/><text x="3.1097%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (67 samples, 0.02%)</title><rect x="2.8597%" y="805" width="0.0243%" height="15" fill="rgb(248,145,5)" fg:x="7874" fg:w="67"/><text x="3.1097%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66 samples, 0.02%)</title><rect x="2.8601%" y="789" width="0.0240%" height="15" fill="rgb(226,116,26)" fg:x="7875" fg:w="66"/><text x="3.1101%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (66 samples, 0.02%)</title><rect x="2.8601%" y="773" width="0.0240%" height="15" fill="rgb(244,5,17)" fg:x="7875" fg:w="66"/><text x="3.1101%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (66 samples, 0.02%)</title><rect x="2.8601%" y="757" width="0.0240%" height="15" fill="rgb(252,159,33)" fg:x="7875" fg:w="66"/><text x="3.1101%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (66 samples, 0.02%)</title><rect x="2.8601%" y="741" width="0.0240%" height="15" fill="rgb(206,71,0)" fg:x="7875" fg:w="66"/><text x="3.1101%" y="751.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.02%)</title><rect x="2.8601%" y="725" width="0.0240%" height="15" fill="rgb(233,118,54)" fg:x="7875" fg:w="66"/><text x="3.1101%" y="735.50"></text></g><g><title>malloc (64 samples, 0.02%)</title><rect x="2.8608%" y="709" width="0.0232%" height="15" fill="rgb(234,83,48)" fg:x="7877" fg:w="64"/><text x="3.1108%" y="719.50"></text></g><g><title>[libc.so.6] (57 samples, 0.02%)</title><rect x="2.8634%" y="693" width="0.0207%" height="15" fill="rgb(228,3,54)" fg:x="7884" fg:w="57"/><text x="3.1134%" y="703.50"></text></g><g><title>[libc.so.6] (41 samples, 0.01%)</title><rect x="2.8692%" y="677" width="0.0149%" height="15" fill="rgb(226,155,13)" fg:x="7900" fg:w="41"/><text x="3.1192%" y="687.50"></text></g><g><title>[unknown] (130 samples, 0.05%)</title><rect x="2.8997%" y="645" width="0.0472%" height="15" fill="rgb(241,28,37)" fg:x="7984" fg:w="130"/><text x="3.1497%" y="655.50"></text></g><g><title>[unknown] (130 samples, 0.05%)</title><rect x="2.8997%" y="629" width="0.0472%" height="15" fill="rgb(233,93,10)" fg:x="7984" fg:w="130"/><text x="3.1497%" y="639.50"></text></g><g><title>[unknown] (127 samples, 0.05%)</title><rect x="2.9008%" y="613" width="0.0461%" height="15" fill="rgb(225,113,19)" fg:x="7987" fg:w="127"/><text x="3.1508%" y="623.50"></text></g><g><title>[unknown] (125 samples, 0.05%)</title><rect x="2.9015%" y="597" width="0.0454%" height="15" fill="rgb(241,2,18)" fg:x="7989" fg:w="125"/><text x="3.1515%" y="607.50"></text></g><g><title>[unknown] (110 samples, 0.04%)</title><rect x="2.9069%" y="581" width="0.0400%" height="15" fill="rgb(228,207,21)" fg:x="8004" fg:w="110"/><text x="3.1569%" y="591.50"></text></g><g><title>[unknown] (92 samples, 0.03%)</title><rect x="2.9135%" y="565" width="0.0334%" height="15" fill="rgb(213,211,35)" fg:x="8022" fg:w="92"/><text x="3.1635%" y="575.50"></text></g><g><title>[unknown] (82 samples, 0.03%)</title><rect x="2.9171%" y="549" width="0.0298%" height="15" fill="rgb(209,83,10)" fg:x="8032" fg:w="82"/><text x="3.1671%" y="559.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="2.9211%" y="533" width="0.0258%" height="15" fill="rgb(209,164,1)" fg:x="8043" fg:w="71"/><text x="3.1711%" y="543.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="2.9287%" y="517" width="0.0182%" height="15" fill="rgb(213,184,43)" fg:x="8064" fg:w="50"/><text x="3.1787%" y="527.50"></text></g><g><title>[libc.so.6] (303 samples, 0.11%)</title><rect x="2.8953%" y="661" width="0.1100%" height="15" fill="rgb(231,61,34)" fg:x="7972" fg:w="303"/><text x="3.1453%" y="671.50"></text></g><g><title>__mprotect (160 samples, 0.06%)</title><rect x="2.9473%" y="645" width="0.0581%" height="15" fill="rgb(235,75,3)" fg:x="8115" fg:w="160"/><text x="3.1973%" y="655.50"></text></g><g><title>[unknown] (160 samples, 0.06%)</title><rect x="2.9473%" y="629" width="0.0581%" height="15" fill="rgb(220,106,47)" fg:x="8115" fg:w="160"/><text x="3.1973%" y="639.50"></text></g><g><title>[unknown] (155 samples, 0.06%)</title><rect x="2.9491%" y="613" width="0.0563%" height="15" fill="rgb(210,196,33)" fg:x="8120" fg:w="155"/><text x="3.1991%" y="623.50"></text></g><g><title>[unknown] (154 samples, 0.06%)</title><rect x="2.9494%" y="597" width="0.0559%" height="15" fill="rgb(229,154,42)" fg:x="8121" fg:w="154"/><text x="3.1994%" y="607.50"></text></g><g><title>[unknown] (151 samples, 0.05%)</title><rect x="2.9505%" y="581" width="0.0548%" height="15" fill="rgb(228,114,26)" fg:x="8124" fg:w="151"/><text x="3.2005%" y="591.50"></text></g><g><title>[unknown] (136 samples, 0.05%)</title><rect x="2.9560%" y="565" width="0.0494%" height="15" fill="rgb(208,144,1)" fg:x="8139" fg:w="136"/><text x="3.2060%" y="575.50"></text></g><g><title>[unknown] (113 samples, 0.04%)</title><rect x="2.9643%" y="549" width="0.0410%" height="15" fill="rgb(239,112,37)" fg:x="8162" fg:w="113"/><text x="3.2143%" y="559.50"></text></g><g><title>[unknown] (85 samples, 0.03%)</title><rect x="2.9745%" y="533" width="0.0309%" height="15" fill="rgb(210,96,50)" fg:x="8190" fg:w="85"/><text x="3.2245%" y="543.50"></text></g><g><title>[libc.so.6] (309 samples, 0.11%)</title><rect x="2.8935%" y="677" width="0.1122%" height="15" fill="rgb(222,178,2)" fg:x="7967" fg:w="309"/><text x="3.1435%" y="687.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (356 samples, 0.13%)</title><rect x="2.8841%" y="821" width="0.1293%" height="15" fill="rgb(226,74,18)" fg:x="7941" fg:w="356"/><text x="3.1341%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (338 samples, 0.12%)</title><rect x="2.8906%" y="805" width="0.1228%" height="15" fill="rgb(225,67,54)" fg:x="7959" fg:w="338"/><text x="3.1406%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (338 samples, 0.12%)</title><rect x="2.8906%" y="789" width="0.1228%" height="15" fill="rgb(251,92,32)" fg:x="7959" fg:w="338"/><text x="3.1406%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (337 samples, 0.12%)</title><rect x="2.8910%" y="773" width="0.1224%" height="15" fill="rgb(228,149,22)" fg:x="7960" fg:w="337"/><text x="3.1410%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (337 samples, 0.12%)</title><rect x="2.8910%" y="757" width="0.1224%" height="15" fill="rgb(243,54,13)" fg:x="7960" fg:w="337"/><text x="3.1410%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (337 samples, 0.12%)</title><rect x="2.8910%" y="741" width="0.1224%" height="15" fill="rgb(243,180,28)" fg:x="7960" fg:w="337"/><text x="3.1410%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (337 samples, 0.12%)</title><rect x="2.8910%" y="725" width="0.1224%" height="15" fill="rgb(208,167,24)" fg:x="7960" fg:w="337"/><text x="3.1410%" y="735.50"></text></g><g><title>alloc::alloc::alloc (337 samples, 0.12%)</title><rect x="2.8910%" y="709" width="0.1224%" height="15" fill="rgb(245,73,45)" fg:x="7960" fg:w="337"/><text x="3.1410%" y="719.50"></text></g><g><title>malloc (336 samples, 0.12%)</title><rect x="2.8913%" y="693" width="0.1220%" height="15" fill="rgb(237,203,48)" fg:x="7961" fg:w="336"/><text x="3.1413%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (35 samples, 0.01%)</title><rect x="3.0235%" y="789" width="0.0127%" height="15" fill="rgb(211,197,16)" fg:x="8325" fg:w="35"/><text x="3.2735%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.01%)</title><rect x="3.0235%" y="773" width="0.0127%" height="15" fill="rgb(243,99,51)" fg:x="8325" fg:w="35"/><text x="3.2735%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.01%)</title><rect x="3.0235%" y="757" width="0.0127%" height="15" fill="rgb(215,123,29)" fg:x="8325" fg:w="35"/><text x="3.2735%" y="767.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.01%)</title><rect x="3.0235%" y="741" width="0.0127%" height="15" fill="rgb(239,186,37)" fg:x="8325" fg:w="35"/><text x="3.2735%" y="751.50"></text></g><g><title>malloc (34 samples, 0.01%)</title><rect x="3.0239%" y="725" width="0.0123%" height="15" fill="rgb(252,136,39)" fg:x="8326" fg:w="34"/><text x="3.2739%" y="735.50"></text></g><g><title>[unknown] (274 samples, 0.10%)</title><rect x="3.0609%" y="629" width="0.0995%" height="15" fill="rgb(223,213,32)" fg:x="8428" fg:w="274"/><text x="3.3109%" y="639.50"></text></g><g><title>[unknown] (267 samples, 0.10%)</title><rect x="3.0635%" y="613" width="0.0970%" height="15" fill="rgb(233,115,5)" fg:x="8435" fg:w="267"/><text x="3.3135%" y="623.50"></text></g><g><title>[unknown] (263 samples, 0.10%)</title><rect x="3.0649%" y="597" width="0.0955%" height="15" fill="rgb(207,226,44)" fg:x="8439" fg:w="263"/><text x="3.3149%" y="607.50"></text></g><g><title>[unknown] (258 samples, 0.09%)</title><rect x="3.0667%" y="581" width="0.0937%" height="15" fill="rgb(208,126,0)" fg:x="8444" fg:w="258"/><text x="3.3167%" y="591.50"></text></g><g><title>[unknown] (229 samples, 0.08%)</title><rect x="3.0773%" y="565" width="0.0832%" height="15" fill="rgb(244,66,21)" fg:x="8473" fg:w="229"/><text x="3.3273%" y="575.50"></text></g><g><title>[unknown] (188 samples, 0.07%)</title><rect x="3.0922%" y="549" width="0.0683%" height="15" fill="rgb(222,97,12)" fg:x="8514" fg:w="188"/><text x="3.3422%" y="559.50"></text></g><g><title>[unknown] (163 samples, 0.06%)</title><rect x="3.1012%" y="533" width="0.0592%" height="15" fill="rgb(219,213,19)" fg:x="8539" fg:w="163"/><text x="3.3512%" y="543.50"></text></g><g><title>[unknown] (139 samples, 0.05%)</title><rect x="3.1100%" y="517" width="0.0505%" height="15" fill="rgb(252,169,30)" fg:x="8563" fg:w="139"/><text x="3.3600%" y="527.50"></text></g><g><title>[unknown] (110 samples, 0.04%)</title><rect x="3.1205%" y="501" width="0.0400%" height="15" fill="rgb(206,32,51)" fg:x="8592" fg:w="110"/><text x="3.3705%" y="511.50"></text></g><g><title>[libc.so.6] (602 samples, 0.22%)</title><rect x="3.0515%" y="645" width="0.2186%" height="15" fill="rgb(250,172,42)" fg:x="8402" fg:w="602"/><text x="3.3015%" y="655.50"></text></g><g><title>__mprotect (300 samples, 0.11%)</title><rect x="3.1612%" y="629" width="0.1090%" height="15" fill="rgb(209,34,43)" fg:x="8704" fg:w="300"/><text x="3.4112%" y="639.50"></text></g><g><title>[unknown] (299 samples, 0.11%)</title><rect x="3.1615%" y="613" width="0.1086%" height="15" fill="rgb(223,11,35)" fg:x="8705" fg:w="299"/><text x="3.4115%" y="623.50"></text></g><g><title>[unknown] (291 samples, 0.11%)</title><rect x="3.1644%" y="597" width="0.1057%" height="15" fill="rgb(251,219,26)" fg:x="8713" fg:w="291"/><text x="3.4144%" y="607.50"></text></g><g><title>[unknown] (291 samples, 0.11%)</title><rect x="3.1644%" y="581" width="0.1057%" height="15" fill="rgb(231,119,3)" fg:x="8713" fg:w="291"/><text x="3.4144%" y="591.50"></text></g><g><title>[unknown] (284 samples, 0.10%)</title><rect x="3.1670%" y="565" width="0.1031%" height="15" fill="rgb(216,97,11)" fg:x="8720" fg:w="284"/><text x="3.4170%" y="575.50"></text></g><g><title>[unknown] (261 samples, 0.09%)</title><rect x="3.1753%" y="549" width="0.0948%" height="15" fill="rgb(223,59,9)" fg:x="8743" fg:w="261"/><text x="3.4253%" y="559.50"></text></g><g><title>[unknown] (221 samples, 0.08%)</title><rect x="3.1899%" y="533" width="0.0803%" height="15" fill="rgb(233,93,31)" fg:x="8783" fg:w="221"/><text x="3.4399%" y="543.50"></text></g><g><title>[unknown] (152 samples, 0.06%)</title><rect x="3.2149%" y="517" width="0.0552%" height="15" fill="rgb(239,81,33)" fg:x="8852" fg:w="152"/><text x="3.4649%" y="527.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="3.2541%" y="501" width="0.0160%" height="15" fill="rgb(213,120,34)" fg:x="8960" fg:w="44"/><text x="3.5041%" y="511.50"></text></g><g><title>[libc.so.6] (632 samples, 0.23%)</title><rect x="3.0428%" y="661" width="0.2295%" height="15" fill="rgb(243,49,53)" fg:x="8378" fg:w="632"/><text x="3.2928%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (750 samples, 0.27%)</title><rect x="3.0192%" y="805" width="0.2724%" height="15" fill="rgb(247,216,33)" fg:x="8313" fg:w="750"/><text x="3.2692%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (703 samples, 0.26%)</title><rect x="3.0362%" y="789" width="0.2553%" height="15" fill="rgb(226,26,14)" fg:x="8360" fg:w="703"/><text x="3.2862%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (703 samples, 0.26%)</title><rect x="3.0362%" y="773" width="0.2553%" height="15" fill="rgb(215,49,53)" fg:x="8360" fg:w="703"/><text x="3.2862%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (703 samples, 0.26%)</title><rect x="3.0362%" y="757" width="0.2553%" height="15" fill="rgb(245,162,40)" fg:x="8360" fg:w="703"/><text x="3.2862%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (703 samples, 0.26%)</title><rect x="3.0362%" y="741" width="0.2553%" height="15" fill="rgb(229,68,17)" fg:x="8360" fg:w="703"/><text x="3.2862%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (703 samples, 0.26%)</title><rect x="3.0362%" y="725" width="0.2553%" height="15" fill="rgb(213,182,10)" fg:x="8360" fg:w="703"/><text x="3.2862%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (703 samples, 0.26%)</title><rect x="3.0362%" y="709" width="0.2553%" height="15" fill="rgb(245,125,30)" fg:x="8360" fg:w="703"/><text x="3.2862%" y="719.50"></text></g><g><title>alloc::alloc::alloc (702 samples, 0.25%)</title><rect x="3.0366%" y="693" width="0.2550%" height="15" fill="rgb(232,202,2)" fg:x="8361" fg:w="702"/><text x="3.2866%" y="703.50"></text></g><g><title>malloc (698 samples, 0.25%)</title><rect x="3.0381%" y="677" width="0.2535%" height="15" fill="rgb(237,140,51)" fg:x="8365" fg:w="698"/><text x="3.2881%" y="687.50"></text></g><g><title>__lll_lock_wake_private (51 samples, 0.02%)</title><rect x="3.2730%" y="661" width="0.0185%" height="15" fill="rgb(236,157,25)" fg:x="9012" fg:w="51"/><text x="3.5230%" y="671.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="3.2734%" y="645" width="0.0182%" height="15" fill="rgb(219,209,0)" fg:x="9013" fg:w="50"/><text x="3.5234%" y="655.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="3.2738%" y="629" width="0.0178%" height="15" fill="rgb(240,116,54)" fg:x="9014" fg:w="49"/><text x="3.5238%" y="639.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="3.2738%" y="613" width="0.0178%" height="15" fill="rgb(216,10,36)" fg:x="9014" fg:w="49"/><text x="3.5238%" y="623.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="3.2738%" y="597" width="0.0178%" height="15" fill="rgb(222,72,44)" fg:x="9014" fg:w="49"/><text x="3.5238%" y="607.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="3.2741%" y="581" width="0.0174%" height="15" fill="rgb(232,159,9)" fg:x="9015" fg:w="48"/><text x="3.5241%" y="591.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="3.2759%" y="565" width="0.0156%" height="15" fill="rgb(210,39,32)" fg:x="9020" fg:w="43"/><text x="3.5259%" y="575.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="3.2781%" y="549" width="0.0134%" height="15" fill="rgb(216,194,45)" fg:x="9026" fg:w="37"/><text x="3.5281%" y="559.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="3.2792%" y="533" width="0.0123%" height="15" fill="rgb(218,18,35)" fg:x="9029" fg:w="34"/><text x="3.5292%" y="543.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="3.2814%" y="517" width="0.0102%" height="15" fill="rgb(207,83,51)" fg:x="9035" fg:w="28"/><text x="3.5314%" y="527.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (1,245 samples, 0.45%)</title><rect x="2.8492%" y="837" width="0.4522%" height="15" fill="rgb(225,63,43)" fg:x="7845" fg:w="1245"/><text x="3.0992%" y="847.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (793 samples, 0.29%)</title><rect x="3.0134%" y="821" width="0.2880%" height="15" fill="rgb(207,57,36)" fg:x="8297" fg:w="793"/><text x="3.2634%" y="831.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::new (32 samples, 0.01%)</title><rect x="3.3014%" y="837" width="0.0116%" height="15" fill="rgb(216,99,33)" fg:x="9090" fg:w="32"/><text x="3.5514%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (32 samples, 0.01%)</title><rect x="3.3014%" y="821" width="0.0116%" height="15" fill="rgb(225,42,16)" fg:x="9090" fg:w="32"/><text x="3.5514%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (32 samples, 0.01%)</title><rect x="3.3014%" y="805" width="0.0116%" height="15" fill="rgb(220,201,45)" fg:x="9090" fg:w="32"/><text x="3.5514%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.01%)</title><rect x="3.3017%" y="789" width="0.0113%" height="15" fill="rgb(225,33,4)" fg:x="9091" fg:w="31"/><text x="3.5517%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.01%)</title><rect x="3.3017%" y="773" width="0.0113%" height="15" fill="rgb(224,33,50)" fg:x="9091" fg:w="31"/><text x="3.5517%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.01%)</title><rect x="3.3017%" y="757" width="0.0113%" height="15" fill="rgb(246,198,51)" fg:x="9091" fg:w="31"/><text x="3.5517%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.01%)</title><rect x="3.3017%" y="741" width="0.0113%" height="15" fill="rgb(205,22,4)" fg:x="9091" fg:w="31"/><text x="3.5517%" y="751.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.01%)</title><rect x="3.3017%" y="725" width="0.0113%" height="15" fill="rgb(206,3,8)" fg:x="9091" fg:w="31"/><text x="3.5517%" y="735.50"></text></g><g><title>malloc (30 samples, 0.01%)</title><rect x="3.3021%" y="709" width="0.0109%" height="15" fill="rgb(251,23,15)" fg:x="9092" fg:w="30"/><text x="3.5521%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,316 samples, 0.48%)</title><rect x="2.8430%" y="965" width="0.4780%" height="15" fill="rgb(252,88,28)" fg:x="7828" fg:w="1316"/><text x="3.0930%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,316 samples, 0.48%)</title><rect x="2.8430%" y="949" width="0.4780%" height="15" fill="rgb(212,127,14)" fg:x="7828" fg:w="1316"/><text x="3.0930%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,316 samples, 0.48%)</title><rect x="2.8430%" y="933" width="0.4780%" height="15" fill="rgb(247,145,37)" fg:x="7828" fg:w="1316"/><text x="3.0930%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,316 samples, 0.48%)</title><rect x="2.8430%" y="917" width="0.4780%" height="15" fill="rgb(209,117,53)" fg:x="7828" fg:w="1316"/><text x="3.0930%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,315 samples, 0.48%)</title><rect x="2.8434%" y="901" width="0.4776%" height="15" fill="rgb(212,90,42)" fg:x="7829" fg:w="1315"/><text x="3.0934%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1,315 samples, 0.48%)</title><rect x="2.8434%" y="885" width="0.4776%" height="15" fill="rgb(218,164,37)" fg:x="7829" fg:w="1315"/><text x="3.0934%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,315 samples, 0.48%)</title><rect x="2.8434%" y="869" width="0.4776%" height="15" fill="rgb(246,65,34)" fg:x="7829" fg:w="1315"/><text x="3.0934%" y="879.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (1,308 samples, 0.48%)</title><rect x="2.8459%" y="853" width="0.4750%" height="15" fill="rgb(231,100,33)" fg:x="7836" fg:w="1308"/><text x="3.0959%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,592 samples, 0.94%)</title><rect x="2.3843%" y="1141" width="0.9414%" height="15" fill="rgb(228,126,14)" fg:x="6565" fg:w="2592"/><text x="2.6343%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (2,592 samples, 0.94%)</title><rect x="2.3843%" y="1125" width="0.9414%" height="15" fill="rgb(215,173,21)" fg:x="6565" fg:w="2592"/><text x="2.6343%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,592 samples, 0.94%)</title><rect x="2.3843%" y="1109" width="0.9414%" height="15" fill="rgb(210,6,40)" fg:x="6565" fg:w="2592"/><text x="2.6343%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (1,715 samples, 0.62%)</title><rect x="2.7028%" y="1093" width="0.6229%" height="15" fill="rgb(212,48,18)" fg:x="7442" fg:w="1715"/><text x="2.9528%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (1,331 samples, 0.48%)</title><rect x="2.8423%" y="1077" width="0.4834%" height="15" fill="rgb(230,214,11)" fg:x="7826" fg:w="1331"/><text x="3.0923%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (1,331 samples, 0.48%)</title><rect x="2.8423%" y="1061" width="0.4834%" height="15" fill="rgb(254,105,39)" fg:x="7826" fg:w="1331"/><text x="3.0923%" y="1071.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (1,331 samples, 0.48%)</title><rect x="2.8423%" y="1045" width="0.4834%" height="15" fill="rgb(245,158,5)" fg:x="7826" fg:w="1331"/><text x="3.0923%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,329 samples, 0.48%)</title><rect x="2.8430%" y="1029" width="0.4827%" height="15" fill="rgb(249,208,11)" fg:x="7828" fg:w="1329"/><text x="3.0930%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,329 samples, 0.48%)</title><rect x="2.8430%" y="1013" width="0.4827%" height="15" fill="rgb(210,39,28)" fg:x="7828" fg:w="1329"/><text x="3.0930%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,329 samples, 0.48%)</title><rect x="2.8430%" y="997" width="0.4827%" height="15" fill="rgb(211,56,53)" fg:x="7828" fg:w="1329"/><text x="3.0930%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,329 samples, 0.48%)</title><rect x="2.8430%" y="981" width="0.4827%" height="15" fill="rgb(226,201,30)" fg:x="7828" fg:w="1329"/><text x="3.0930%" y="991.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (2,593 samples, 0.94%)</title><rect x="2.3843%" y="1221" width="0.9417%" height="15" fill="rgb(239,101,34)" fg:x="6565" fg:w="2593"/><text x="2.6343%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,593 samples, 0.94%)</title><rect x="2.3843%" y="1205" width="0.9417%" height="15" fill="rgb(226,209,5)" fg:x="6565" fg:w="2593"/><text x="2.6343%" y="1215.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (2,593 samples, 0.94%)</title><rect x="2.3843%" y="1189" width="0.9417%" height="15" fill="rgb(250,105,47)" fg:x="6565" fg:w="2593"/><text x="2.6343%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,593 samples, 0.94%)</title><rect x="2.3843%" y="1173" width="0.9417%" height="15" fill="rgb(230,72,3)" fg:x="6565" fg:w="2593"/><text x="2.6343%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (2,593 samples, 0.94%)</title><rect x="2.3843%" y="1157" width="0.9417%" height="15" fill="rgb(232,218,39)" fg:x="6565" fg:w="2593"/><text x="2.6343%" y="1167.50"></text></g><g><title>rsa::internals::decrypt (50 samples, 0.02%)</title><rect x="3.3264%" y="949" width="0.0182%" height="15" fill="rgb(248,166,6)" fg:x="9159" fg:w="50"/><text x="3.5764%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (50 samples, 0.02%)</title><rect x="3.3264%" y="933" width="0.0182%" height="15" fill="rgb(247,89,20)" fg:x="9159" fg:w="50"/><text x="3.5764%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (50 samples, 0.02%)</title><rect x="3.3264%" y="917" width="0.0182%" height="15" fill="rgb(248,130,54)" fg:x="9159" fg:w="50"/><text x="3.5764%" y="927.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (81 samples, 0.03%)</title><rect x="3.3261%" y="1093" width="0.0294%" height="15" fill="rgb(234,196,4)" fg:x="9158" fg:w="81"/><text x="3.5761%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (81 samples, 0.03%)</title><rect x="3.3261%" y="1077" width="0.0294%" height="15" fill="rgb(250,143,31)" fg:x="9158" fg:w="81"/><text x="3.5761%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (81 samples, 0.03%)</title><rect x="3.3261%" y="1061" width="0.0294%" height="15" fill="rgb(211,110,34)" fg:x="9158" fg:w="81"/><text x="3.5761%" y="1071.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (81 samples, 0.03%)</title><rect x="3.3261%" y="1045" width="0.0294%" height="15" fill="rgb(215,124,48)" fg:x="9158" fg:w="81"/><text x="3.5761%" y="1055.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (80 samples, 0.03%)</title><rect x="3.3264%" y="1029" width="0.0291%" height="15" fill="rgb(216,46,13)" fg:x="9159" fg:w="80"/><text x="3.5764%" y="1039.50"></text></g><g><title>rsa::pkcs1v15::decrypt (80 samples, 0.03%)</title><rect x="3.3264%" y="1013" width="0.0291%" height="15" fill="rgb(205,184,25)" fg:x="9159" fg:w="80"/><text x="3.5764%" y="1023.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (80 samples, 0.03%)</title><rect x="3.3264%" y="997" width="0.0291%" height="15" fill="rgb(228,1,10)" fg:x="9159" fg:w="80"/><text x="3.5764%" y="1007.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (80 samples, 0.03%)</title><rect x="3.3264%" y="981" width="0.0291%" height="15" fill="rgb(213,116,27)" fg:x="9159" fg:w="80"/><text x="3.5764%" y="991.50"></text></g><g><title>rsa::internals::decrypt_and_check (80 samples, 0.03%)</title><rect x="3.3264%" y="965" width="0.0291%" height="15" fill="rgb(241,95,50)" fg:x="9159" fg:w="80"/><text x="3.5764%" y="975.50"></text></g><g><title>rsa::internals::encrypt (30 samples, 0.01%)</title><rect x="3.3446%" y="949" width="0.0109%" height="15" fill="rgb(238,48,32)" fg:x="9209" fg:w="30"/><text x="3.5946%" y="959.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (30 samples, 0.01%)</title><rect x="3.3446%" y="933" width="0.0109%" height="15" fill="rgb(235,113,49)" fg:x="9209" fg:w="30"/><text x="3.5946%" y="943.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (30 samples, 0.01%)</title><rect x="3.3446%" y="917" width="0.0109%" height="15" fill="rgb(205,127,43)" fg:x="9209" fg:w="30"/><text x="3.5946%" y="927.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (28 samples, 0.01%)</title><rect x="3.3453%" y="901" width="0.0102%" height="15" fill="rgb(250,162,2)" fg:x="9211" fg:w="28"/><text x="3.5953%" y="911.50"></text></g><g><title>getifaddrs (28 samples, 0.01%)</title><rect x="3.3627%" y="853" width="0.0102%" height="15" fill="rgb(220,13,41)" fg:x="9259" fg:w="28"/><text x="3.6127%" y="863.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="3.3627%" y="837" width="0.0102%" height="15" fill="rgb(249,221,25)" fg:x="9259" fg:w="28"/><text x="3.6127%" y="847.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (55 samples, 0.02%)</title><rect x="3.3562%" y="933" width="0.0200%" height="15" fill="rgb(215,208,19)" fg:x="9241" fg:w="55"/><text x="3.6062%" y="943.50"></text></g><g><title>zenoh_util::net::get_local_addresses (47 samples, 0.02%)</title><rect x="3.3591%" y="917" width="0.0171%" height="15" fill="rgb(236,175,2)" fg:x="9249" fg:w="47"/><text x="3.6091%" y="927.50"></text></g><g><title>pnet_datalink::interfaces (46 samples, 0.02%)</title><rect x="3.3595%" y="901" width="0.0167%" height="15" fill="rgb(241,52,2)" fg:x="9250" fg:w="46"/><text x="3.6095%" y="911.50"></text></g><g><title>pnet_datalink::backend::interfaces (46 samples, 0.02%)</title><rect x="3.3595%" y="885" width="0.0167%" height="15" fill="rgb(248,140,14)" fg:x="9250" fg:w="46"/><text x="3.6095%" y="895.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (46 samples, 0.02%)</title><rect x="3.3595%" y="869" width="0.0167%" height="15" fill="rgb(253,22,42)" fg:x="9250" fg:w="46"/><text x="3.6095%" y="879.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (58 samples, 0.02%)</title><rect x="3.3555%" y="1077" width="0.0211%" height="15" fill="rgb(234,61,47)" fg:x="9239" fg:w="58"/><text x="3.6055%" y="1087.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (58 samples, 0.02%)</title><rect x="3.3555%" y="1061" width="0.0211%" height="15" fill="rgb(208,226,15)" fg:x="9239" fg:w="58"/><text x="3.6055%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (58 samples, 0.02%)</title><rect x="3.3555%" y="1045" width="0.0211%" height="15" fill="rgb(217,221,4)" fg:x="9239" fg:w="58"/><text x="3.6055%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (58 samples, 0.02%)</title><rect x="3.3555%" y="1029" width="0.0211%" height="15" fill="rgb(212,174,34)" fg:x="9239" fg:w="58"/><text x="3.6055%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (58 samples, 0.02%)</title><rect x="3.3555%" y="1013" width="0.0211%" height="15" fill="rgb(253,83,4)" fg:x="9239" fg:w="58"/><text x="3.6055%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (58 samples, 0.02%)</title><rect x="3.3555%" y="997" width="0.0211%" height="15" fill="rgb(250,195,49)" fg:x="9239" fg:w="58"/><text x="3.6055%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (56 samples, 0.02%)</title><rect x="3.3562%" y="981" width="0.0203%" height="15" fill="rgb(241,192,25)" fg:x="9241" fg:w="56"/><text x="3.6062%" y="991.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (56 samples, 0.02%)</title><rect x="3.3562%" y="965" width="0.0203%" height="15" fill="rgb(208,124,10)" fg:x="9241" fg:w="56"/><text x="3.6062%" y="975.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (56 samples, 0.02%)</title><rect x="3.3562%" y="949" width="0.0203%" height="15" fill="rgb(222,33,0)" fg:x="9241" fg:w="56"/><text x="3.6062%" y="959.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="3.4005%" y="645" width="0.0229%" height="15" fill="rgb(234,209,28)" fg:x="9363" fg:w="63"/><text x="3.6505%" y="655.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="3.4009%" y="629" width="0.0225%" height="15" fill="rgb(224,11,23)" fg:x="9364" fg:w="62"/><text x="3.6509%" y="639.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="3.4016%" y="613" width="0.0218%" height="15" fill="rgb(232,99,1)" fg:x="9366" fg:w="60"/><text x="3.6516%" y="623.50"></text></g><g><title>[unknown] (57 samples, 0.02%)</title><rect x="3.4027%" y="597" width="0.0207%" height="15" fill="rgb(237,95,45)" fg:x="9369" fg:w="57"/><text x="3.6527%" y="607.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="3.4038%" y="581" width="0.0196%" height="15" fill="rgb(208,109,11)" fg:x="9372" fg:w="54"/><text x="3.6538%" y="591.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="3.4056%" y="565" width="0.0178%" height="15" fill="rgb(216,190,48)" fg:x="9377" fg:w="49"/><text x="3.6556%" y="575.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="3.4074%" y="549" width="0.0160%" height="15" fill="rgb(251,171,36)" fg:x="9382" fg:w="44"/><text x="3.6574%" y="559.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="3.4096%" y="533" width="0.0138%" height="15" fill="rgb(230,62,22)" fg:x="9388" fg:w="38"/><text x="3.6596%" y="543.50"></text></g><g><title>[libc.so.6] (134 samples, 0.05%)</title><rect x="3.3991%" y="661" width="0.0487%" height="15" fill="rgb(225,114,35)" fg:x="9359" fg:w="134"/><text x="3.6491%" y="671.50"></text></g><g><title>__mprotect (65 samples, 0.02%)</title><rect x="3.4241%" y="645" width="0.0236%" height="15" fill="rgb(215,118,42)" fg:x="9428" fg:w="65"/><text x="3.6741%" y="655.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="3.4245%" y="629" width="0.0232%" height="15" fill="rgb(243,119,21)" fg:x="9429" fg:w="64"/><text x="3.6745%" y="639.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="3.4245%" y="613" width="0.0232%" height="15" fill="rgb(252,177,53)" fg:x="9429" fg:w="64"/><text x="3.6745%" y="623.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="3.4245%" y="597" width="0.0232%" height="15" fill="rgb(237,209,29)" fg:x="9429" fg:w="64"/><text x="3.6745%" y="607.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="3.4245%" y="581" width="0.0232%" height="15" fill="rgb(212,65,23)" fg:x="9429" fg:w="64"/><text x="3.6745%" y="591.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="3.4263%" y="565" width="0.0214%" height="15" fill="rgb(230,222,46)" fg:x="9434" fg:w="59"/><text x="3.6763%" y="575.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="3.4299%" y="549" width="0.0178%" height="15" fill="rgb(215,135,32)" fg:x="9444" fg:w="49"/><text x="3.6799%" y="559.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="3.4365%" y="533" width="0.0113%" height="15" fill="rgb(246,101,22)" fg:x="9462" fg:w="31"/><text x="3.6865%" y="543.50"></text></g><g><title>[libc.so.6] (142 samples, 0.05%)</title><rect x="3.3965%" y="677" width="0.0516%" height="15" fill="rgb(206,107,13)" fg:x="9352" fg:w="142"/><text x="3.6465%" y="687.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (172 samples, 0.06%)</title><rect x="3.3907%" y="821" width="0.0625%" height="15" fill="rgb(250,100,44)" fg:x="9336" fg:w="172"/><text x="3.6407%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (159 samples, 0.06%)</title><rect x="3.3954%" y="805" width="0.0577%" height="15" fill="rgb(231,147,38)" fg:x="9349" fg:w="159"/><text x="3.6454%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (159 samples, 0.06%)</title><rect x="3.3954%" y="789" width="0.0577%" height="15" fill="rgb(229,8,40)" fg:x="9349" fg:w="159"/><text x="3.6454%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (159 samples, 0.06%)</title><rect x="3.3954%" y="773" width="0.0577%" height="15" fill="rgb(221,135,30)" fg:x="9349" fg:w="159"/><text x="3.6454%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (159 samples, 0.06%)</title><rect x="3.3954%" y="757" width="0.0577%" height="15" fill="rgb(249,193,18)" fg:x="9349" fg:w="159"/><text x="3.6454%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (159 samples, 0.06%)</title><rect x="3.3954%" y="741" width="0.0577%" height="15" fill="rgb(209,133,39)" fg:x="9349" fg:w="159"/><text x="3.6454%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (159 samples, 0.06%)</title><rect x="3.3954%" y="725" width="0.0577%" height="15" fill="rgb(232,100,14)" fg:x="9349" fg:w="159"/><text x="3.6454%" y="735.50"></text></g><g><title>alloc::alloc::alloc (159 samples, 0.06%)</title><rect x="3.3954%" y="709" width="0.0577%" height="15" fill="rgb(224,185,1)" fg:x="9349" fg:w="159"/><text x="3.6454%" y="719.50"></text></g><g><title>malloc (158 samples, 0.06%)</title><rect x="3.3958%" y="693" width="0.0574%" height="15" fill="rgb(223,139,8)" fg:x="9350" fg:w="158"/><text x="3.6458%" y="703.50"></text></g><g><title>[unknown] (155 samples, 0.06%)</title><rect x="3.4739%" y="629" width="0.0563%" height="15" fill="rgb(232,213,38)" fg:x="9565" fg:w="155"/><text x="3.7239%" y="639.50"></text></g><g><title>[unknown] (153 samples, 0.06%)</title><rect x="3.4746%" y="613" width="0.0556%" height="15" fill="rgb(207,94,22)" fg:x="9567" fg:w="153"/><text x="3.7246%" y="623.50"></text></g><g><title>[unknown] (150 samples, 0.05%)</title><rect x="3.4757%" y="597" width="0.0545%" height="15" fill="rgb(219,183,54)" fg:x="9570" fg:w="150"/><text x="3.7257%" y="607.50"></text></g><g><title>[unknown] (150 samples, 0.05%)</title><rect x="3.4757%" y="581" width="0.0545%" height="15" fill="rgb(216,185,54)" fg:x="9570" fg:w="150"/><text x="3.7257%" y="591.50"></text></g><g><title>[unknown] (140 samples, 0.05%)</title><rect x="3.4793%" y="565" width="0.0508%" height="15" fill="rgb(254,217,39)" fg:x="9580" fg:w="140"/><text x="3.7293%" y="575.50"></text></g><g><title>[unknown] (125 samples, 0.05%)</title><rect x="3.4848%" y="549" width="0.0454%" height="15" fill="rgb(240,178,23)" fg:x="9595" fg:w="125"/><text x="3.7348%" y="559.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="3.4924%" y="533" width="0.0378%" height="15" fill="rgb(218,11,47)" fg:x="9616" fg:w="104"/><text x="3.7424%" y="543.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="3.4975%" y="517" width="0.0327%" height="15" fill="rgb(218,51,51)" fg:x="9630" fg:w="90"/><text x="3.7475%" y="527.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="3.5051%" y="501" width="0.0251%" height="15" fill="rgb(238,126,27)" fg:x="9651" fg:w="69"/><text x="3.7551%" y="511.50"></text></g><g><title>[libc.so.6] (345 samples, 0.13%)</title><rect x="3.4702%" y="645" width="0.1253%" height="15" fill="rgb(249,202,22)" fg:x="9555" fg:w="345"/><text x="3.7202%" y="655.50"></text></g><g><title>__mprotect (180 samples, 0.07%)</title><rect x="3.5302%" y="629" width="0.0654%" height="15" fill="rgb(254,195,49)" fg:x="9720" fg:w="180"/><text x="3.7802%" y="639.50"></text></g><g><title>[unknown] (179 samples, 0.07%)</title><rect x="3.5305%" y="613" width="0.0650%" height="15" fill="rgb(208,123,14)" fg:x="9721" fg:w="179"/><text x="3.7805%" y="623.50"></text></g><g><title>[unknown] (171 samples, 0.06%)</title><rect x="3.5334%" y="597" width="0.0621%" height="15" fill="rgb(224,200,8)" fg:x="9729" fg:w="171"/><text x="3.7834%" y="607.50"></text></g><g><title>[unknown] (171 samples, 0.06%)</title><rect x="3.5334%" y="581" width="0.0621%" height="15" fill="rgb(217,61,36)" fg:x="9729" fg:w="171"/><text x="3.7834%" y="591.50"></text></g><g><title>[unknown] (166 samples, 0.06%)</title><rect x="3.5353%" y="565" width="0.0603%" height="15" fill="rgb(206,35,45)" fg:x="9734" fg:w="166"/><text x="3.7853%" y="575.50"></text></g><g><title>[unknown] (148 samples, 0.05%)</title><rect x="3.5418%" y="549" width="0.0538%" height="15" fill="rgb(217,65,33)" fg:x="9752" fg:w="148"/><text x="3.7918%" y="559.50"></text></g><g><title>[unknown] (132 samples, 0.05%)</title><rect x="3.5476%" y="533" width="0.0479%" height="15" fill="rgb(222,158,48)" fg:x="9768" fg:w="132"/><text x="3.7976%" y="543.50"></text></g><g><title>[unknown] (87 samples, 0.03%)</title><rect x="3.5639%" y="517" width="0.0316%" height="15" fill="rgb(254,2,54)" fg:x="9813" fg:w="87"/><text x="3.8139%" y="527.50"></text></g><g><title>[libc.so.6] (356 samples, 0.13%)</title><rect x="3.4681%" y="661" width="0.1293%" height="15" fill="rgb(250,143,38)" fg:x="9549" fg:w="356"/><text x="3.7181%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (408 samples, 0.15%)</title><rect x="3.4575%" y="805" width="0.1482%" height="15" fill="rgb(248,25,0)" fg:x="9520" fg:w="408"/><text x="3.7075%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (384 samples, 0.14%)</title><rect x="3.4662%" y="789" width="0.1395%" height="15" fill="rgb(206,152,27)" fg:x="9544" fg:w="384"/><text x="3.7162%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (384 samples, 0.14%)</title><rect x="3.4662%" y="773" width="0.1395%" height="15" fill="rgb(240,77,30)" fg:x="9544" fg:w="384"/><text x="3.7162%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (384 samples, 0.14%)</title><rect x="3.4662%" y="757" width="0.1395%" height="15" fill="rgb(231,5,3)" fg:x="9544" fg:w="384"/><text x="3.7162%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (384 samples, 0.14%)</title><rect x="3.4662%" y="741" width="0.1395%" height="15" fill="rgb(207,226,32)" fg:x="9544" fg:w="384"/><text x="3.7162%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (384 samples, 0.14%)</title><rect x="3.4662%" y="725" width="0.1395%" height="15" fill="rgb(222,207,47)" fg:x="9544" fg:w="384"/><text x="3.7162%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (384 samples, 0.14%)</title><rect x="3.4662%" y="709" width="0.1395%" height="15" fill="rgb(229,115,45)" fg:x="9544" fg:w="384"/><text x="3.7162%" y="719.50"></text></g><g><title>alloc::alloc::alloc (384 samples, 0.14%)</title><rect x="3.4662%" y="693" width="0.1395%" height="15" fill="rgb(224,191,6)" fg:x="9544" fg:w="384"/><text x="3.7162%" y="703.50"></text></g><g><title>malloc (381 samples, 0.14%)</title><rect x="3.4673%" y="677" width="0.1384%" height="15" fill="rgb(230,227,24)" fg:x="9547" fg:w="381"/><text x="3.7173%" y="687.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (653 samples, 0.24%)</title><rect x="3.3765%" y="837" width="0.2372%" height="15" fill="rgb(228,80,19)" fg:x="9297" fg:w="653"/><text x="3.6265%" y="847.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (442 samples, 0.16%)</title><rect x="3.4532%" y="821" width="0.1605%" height="15" fill="rgb(247,229,0)" fg:x="9508" fg:w="442"/><text x="3.7032%" y="831.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (798 samples, 0.29%)</title><rect x="3.3261%" y="1221" width="0.2898%" height="15" fill="rgb(237,194,15)" fg:x="9158" fg:w="798"/><text x="3.5761%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (798 samples, 0.29%)</title><rect x="3.3261%" y="1205" width="0.2898%" height="15" fill="rgb(219,203,20)" fg:x="9158" fg:w="798"/><text x="3.5761%" y="1215.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (798 samples, 0.29%)</title><rect x="3.3261%" y="1189" width="0.2898%" height="15" fill="rgb(234,128,8)" fg:x="9158" fg:w="798"/><text x="3.5761%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (798 samples, 0.29%)</title><rect x="3.3261%" y="1173" width="0.2898%" height="15" fill="rgb(248,202,8)" fg:x="9158" fg:w="798"/><text x="3.5761%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (798 samples, 0.29%)</title><rect x="3.3261%" y="1157" width="0.2898%" height="15" fill="rgb(206,104,37)" fg:x="9158" fg:w="798"/><text x="3.5761%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (798 samples, 0.29%)</title><rect x="3.3261%" y="1141" width="0.2898%" height="15" fill="rgb(223,8,27)" fg:x="9158" fg:w="798"/><text x="3.5761%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (798 samples, 0.29%)</title><rect x="3.3261%" y="1125" width="0.2898%" height="15" fill="rgb(216,217,28)" fg:x="9158" fg:w="798"/><text x="3.5761%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (798 samples, 0.29%)</title><rect x="3.3261%" y="1109" width="0.2898%" height="15" fill="rgb(249,199,1)" fg:x="9158" fg:w="798"/><text x="3.5761%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (717 samples, 0.26%)</title><rect x="3.3555%" y="1093" width="0.2604%" height="15" fill="rgb(240,85,17)" fg:x="9239" fg:w="717"/><text x="3.6055%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (659 samples, 0.24%)</title><rect x="3.3765%" y="1077" width="0.2393%" height="15" fill="rgb(206,108,45)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (659 samples, 0.24%)</title><rect x="3.3765%" y="1061" width="0.2393%" height="15" fill="rgb(245,210,41)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="1071.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (659 samples, 0.24%)</title><rect x="3.3765%" y="1045" width="0.2393%" height="15" fill="rgb(206,13,37)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (659 samples, 0.24%)</title><rect x="3.3765%" y="1029" width="0.2393%" height="15" fill="rgb(250,61,18)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (659 samples, 0.24%)</title><rect x="3.3765%" y="1013" width="0.2393%" height="15" fill="rgb(235,172,48)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (659 samples, 0.24%)</title><rect x="3.3765%" y="997" width="0.2393%" height="15" fill="rgb(249,201,17)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (659 samples, 0.24%)</title><rect x="3.3765%" y="981" width="0.2393%" height="15" fill="rgb(219,208,6)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (659 samples, 0.24%)</title><rect x="3.3765%" y="965" width="0.2393%" height="15" fill="rgb(248,31,23)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (659 samples, 0.24%)</title><rect x="3.3765%" y="949" width="0.2393%" height="15" fill="rgb(245,15,42)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (659 samples, 0.24%)</title><rect x="3.3765%" y="933" width="0.2393%" height="15" fill="rgb(222,217,39)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (659 samples, 0.24%)</title><rect x="3.3765%" y="917" width="0.2393%" height="15" fill="rgb(210,219,27)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (659 samples, 0.24%)</title><rect x="3.3765%" y="901" width="0.2393%" height="15" fill="rgb(252,166,36)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (659 samples, 0.24%)</title><rect x="3.3765%" y="885" width="0.2393%" height="15" fill="rgb(245,132,34)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (659 samples, 0.24%)</title><rect x="3.3765%" y="869" width="0.2393%" height="15" fill="rgb(236,54,3)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="879.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (659 samples, 0.24%)</title><rect x="3.3765%" y="853" width="0.2393%" height="15" fill="rgb(241,173,43)" fg:x="9297" fg:w="659"/><text x="3.6265%" y="863.50"></text></g><g><title>shared_memory::ShmemConf::open (31 samples, 0.01%)</title><rect x="3.6369%" y="885" width="0.0113%" height="15" fill="rgb(215,190,9)" fg:x="10014" fg:w="31"/><text x="3.8869%" y="895.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::connect_map_to_shm (44 samples, 0.02%)</title><rect x="3.6359%" y="901" width="0.0160%" height="15" fill="rgb(242,101,16)" fg:x="10011" fg:w="44"/><text x="3.8859%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (57 samples, 0.02%)</title><rect x="3.6322%" y="981" width="0.0207%" height="15" fill="rgb(223,190,21)" fg:x="10001" fg:w="57"/><text x="3.8822%" y="991.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (57 samples, 0.02%)</title><rect x="3.6322%" y="965" width="0.0207%" height="15" fill="rgb(215,228,25)" fg:x="10001" fg:w="57"/><text x="3.8822%" y="975.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (51 samples, 0.02%)</title><rect x="3.6344%" y="949" width="0.0185%" height="15" fill="rgb(225,36,22)" fg:x="10007" fg:w="51"/><text x="3.8844%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (51 samples, 0.02%)</title><rect x="3.6344%" y="933" width="0.0185%" height="15" fill="rgb(251,106,46)" fg:x="10007" fg:w="51"/><text x="3.8844%" y="943.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (51 samples, 0.02%)</title><rect x="3.6344%" y="917" width="0.0185%" height="15" fill="rgb(208,90,1)" fg:x="10007" fg:w="51"/><text x="3.8844%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (91 samples, 0.03%)</title><rect x="3.6206%" y="1045" width="0.0330%" height="15" fill="rgb(243,10,4)" fg:x="9969" fg:w="91"/><text x="3.8706%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.03%)</title><rect x="3.6206%" y="1029" width="0.0330%" height="15" fill="rgb(212,137,27)" fg:x="9969" fg:w="91"/><text x="3.8706%" y="1039.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (80 samples, 0.03%)</title><rect x="3.6246%" y="1013" width="0.0291%" height="15" fill="rgb(231,220,49)" fg:x="9980" fg:w="80"/><text x="3.8746%" y="1023.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (62 samples, 0.02%)</title><rect x="3.6311%" y="997" width="0.0225%" height="15" fill="rgb(237,96,20)" fg:x="9998" fg:w="62"/><text x="3.8811%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (114 samples, 0.04%)</title><rect x="3.6159%" y="1061" width="0.0414%" height="15" fill="rgb(239,229,30)" fg:x="9956" fg:w="114"/><text x="3.8659%" y="1071.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (102 samples, 0.04%)</title><rect x="3.6704%" y="1045" width="0.0370%" height="15" fill="rgb(219,65,33)" fg:x="10106" fg:w="102"/><text x="3.9204%" y="1055.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (94 samples, 0.03%)</title><rect x="3.6733%" y="1029" width="0.0341%" height="15" fill="rgb(243,134,7)" fg:x="10114" fg:w="94"/><text x="3.9233%" y="1039.50"></text></g><g><title>zenoh::net::routing::router::Tables::schedule_compute_trees (88 samples, 0.03%)</title><rect x="3.6754%" y="1013" width="0.0320%" height="15" fill="rgb(216,177,54)" fg:x="10120" fg:w="88"/><text x="3.9254%" y="1023.50"></text></g><g><title>async_std::task::spawn::spawn (88 samples, 0.03%)</title><rect x="3.6754%" y="997" width="0.0320%" height="15" fill="rgb(211,160,20)" fg:x="10120" fg:w="88"/><text x="3.9254%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::spawn (88 samples, 0.03%)</title><rect x="3.6754%" y="981" width="0.0320%" height="15" fill="rgb(239,85,39)" fg:x="10120" fg:w="88"/><text x="3.9254%" y="991.50"></text></g><g><title>async_global_executor::executor::spawn (87 samples, 0.03%)</title><rect x="3.6758%" y="965" width="0.0316%" height="15" fill="rgb(232,125,22)" fg:x="10121" fg:w="87"/><text x="3.9258%" y="975.50"></text></g><g><title>async_executor::Executor::spawn (87 samples, 0.03%)</title><rect x="3.6758%" y="949" width="0.0316%" height="15" fill="rgb(244,57,34)" fg:x="10121" fg:w="87"/><text x="3.9258%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (53 samples, 0.02%)</title><rect x="3.6882%" y="933" width="0.0192%" height="15" fill="rgb(214,203,32)" fg:x="10155" fg:w="53"/><text x="3.9382%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (52 samples, 0.02%)</title><rect x="3.6885%" y="917" width="0.0189%" height="15" fill="rgb(207,58,43)" fg:x="10156" fg:w="52"/><text x="3.9385%" y="927.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (52 samples, 0.02%)</title><rect x="3.6885%" y="901" width="0.0189%" height="15" fill="rgb(215,193,15)" fg:x="10156" fg:w="52"/><text x="3.9385%" y="911.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (52 samples, 0.02%)</title><rect x="3.6885%" y="885" width="0.0189%" height="15" fill="rgb(232,15,44)" fg:x="10156" fg:w="52"/><text x="3.9385%" y="895.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (38 samples, 0.01%)</title><rect x="3.6936%" y="869" width="0.0138%" height="15" fill="rgb(212,3,48)" fg:x="10170" fg:w="38"/><text x="3.9436%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (30 samples, 0.01%)</title><rect x="3.7168%" y="933" width="0.0109%" height="15" fill="rgb(218,128,7)" fg:x="10234" fg:w="30"/><text x="3.9668%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (30 samples, 0.01%)</title><rect x="3.7168%" y="917" width="0.0109%" height="15" fill="rgb(226,216,39)" fg:x="10234" fg:w="30"/><text x="3.9668%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.01%)</title><rect x="3.7168%" y="901" width="0.0109%" height="15" fill="rgb(243,47,51)" fg:x="10234" fg:w="30"/><text x="3.9668%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.01%)</title><rect x="3.7168%" y="885" width="0.0109%" height="15" fill="rgb(241,183,40)" fg:x="10234" fg:w="30"/><text x="3.9668%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (28 samples, 0.01%)</title><rect x="3.7176%" y="869" width="0.0102%" height="15" fill="rgb(231,217,32)" fg:x="10236" fg:w="28"/><text x="3.9676%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (28 samples, 0.01%)</title><rect x="3.7176%" y="853" width="0.0102%" height="15" fill="rgb(229,61,38)" fg:x="10236" fg:w="28"/><text x="3.9676%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (28 samples, 0.01%)</title><rect x="3.7176%" y="837" width="0.0102%" height="15" fill="rgb(225,210,5)" fg:x="10236" fg:w="28"/><text x="3.9676%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.02%)</title><rect x="3.7168%" y="997" width="0.0156%" height="15" fill="rgb(231,79,45)" fg:x="10234" fg:w="43"/><text x="3.9668%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.02%)</title><rect x="3.7168%" y="981" width="0.0156%" height="15" fill="rgb(224,100,7)" fg:x="10234" fg:w="43"/><text x="3.9668%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (43 samples, 0.02%)</title><rect x="3.7168%" y="965" width="0.0156%" height="15" fill="rgb(241,198,18)" fg:x="10234" fg:w="43"/><text x="3.9668%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (43 samples, 0.02%)</title><rect x="3.7168%" y="949" width="0.0156%" height="15" fill="rgb(252,97,53)" fg:x="10234" fg:w="43"/><text x="3.9668%" y="959.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (172 samples, 0.06%)</title><rect x="3.6704%" y="1061" width="0.0625%" height="15" fill="rgb(220,88,7)" fg:x="10106" fg:w="172"/><text x="3.9204%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (67 samples, 0.02%)</title><rect x="3.7085%" y="1045" width="0.0243%" height="15" fill="rgb(213,176,14)" fg:x="10211" fg:w="67"/><text x="3.9585%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (67 samples, 0.02%)</title><rect x="3.7085%" y="1029" width="0.0243%" height="15" fill="rgb(246,73,7)" fg:x="10211" fg:w="67"/><text x="3.9585%" y="1039.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (58 samples, 0.02%)</title><rect x="3.7118%" y="1013" width="0.0211%" height="15" fill="rgb(245,64,36)" fg:x="10220" fg:w="58"/><text x="3.9618%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (353 samples, 0.13%)</title><rect x="3.6159%" y="1077" width="0.1282%" height="15" fill="rgb(245,80,10)" fg:x="9956" fg:w="353"/><text x="3.8659%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_init::{{closure}} (31 samples, 0.01%)</title><rect x="3.7328%" y="1061" width="0.0113%" height="15" fill="rgb(232,107,50)" fg:x="10278" fg:w="31"/><text x="3.9828%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::init_transport_unicast (30 samples, 0.01%)</title><rect x="3.7332%" y="1045" width="0.0109%" height="15" fill="rgb(253,3,0)" fg:x="10279" fg:w="30"/><text x="3.9832%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (354 samples, 0.13%)</title><rect x="3.6159%" y="1109" width="0.1286%" height="15" fill="rgb(212,99,53)" fg:x="9956" fg:w="354"/><text x="3.8659%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (354 samples, 0.13%)</title><rect x="3.6159%" y="1093" width="0.1286%" height="15" fill="rgb(249,111,54)" fg:x="9956" fg:w="354"/><text x="3.8659%" y="1103.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (360 samples, 0.13%)</title><rect x="3.6159%" y="1221" width="0.1307%" height="15" fill="rgb(249,55,30)" fg:x="9956" fg:w="360"/><text x="3.8659%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (360 samples, 0.13%)</title><rect x="3.6159%" y="1205" width="0.1307%" height="15" fill="rgb(237,47,42)" fg:x="9956" fg:w="360"/><text x="3.8659%" y="1215.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (360 samples, 0.13%)</title><rect x="3.6159%" y="1189" width="0.1307%" height="15" fill="rgb(211,20,18)" fg:x="9956" fg:w="360"/><text x="3.8659%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (360 samples, 0.13%)</title><rect x="3.6159%" y="1173" width="0.1307%" height="15" fill="rgb(231,203,46)" fg:x="9956" fg:w="360"/><text x="3.8659%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (360 samples, 0.13%)</title><rect x="3.6159%" y="1157" width="0.1307%" height="15" fill="rgb(237,142,3)" fg:x="9956" fg:w="360"/><text x="3.8659%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (360 samples, 0.13%)</title><rect x="3.6159%" y="1141" width="0.1307%" height="15" fill="rgb(241,107,1)" fg:x="9956" fg:w="360"/><text x="3.8659%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (360 samples, 0.13%)</title><rect x="3.6159%" y="1125" width="0.1307%" height="15" fill="rgb(229,83,13)" fg:x="9956" fg:w="360"/><text x="3.8659%" y="1135.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (38 samples, 0.01%)</title><rect x="3.7586%" y="917" width="0.0138%" height="15" fill="rgb(241,91,40)" fg:x="10349" fg:w="38"/><text x="4.0086%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (28 samples, 0.01%)</title><rect x="3.7622%" y="901" width="0.0102%" height="15" fill="rgb(225,3,45)" fg:x="10359" fg:w="28"/><text x="4.0122%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (89 samples, 0.03%)</title><rect x="3.7579%" y="965" width="0.0323%" height="15" fill="rgb(244,223,14)" fg:x="10347" fg:w="89"/><text x="4.0079%" y="975.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::bind::{{closure}} (88 samples, 0.03%)</title><rect x="3.7582%" y="949" width="0.0320%" height="15" fill="rgb(224,124,37)" fg:x="10348" fg:w="88"/><text x="4.0082%" y="959.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::bind (87 samples, 0.03%)</title><rect x="3.7586%" y="933" width="0.0316%" height="15" fill="rgb(251,171,30)" fg:x="10349" fg:w="87"/><text x="4.0086%" y="943.50"></text></g><g><title>std::net::tcp::TcpListener::bind (49 samples, 0.02%)</title><rect x="3.7724%" y="917" width="0.0178%" height="15" fill="rgb(236,46,54)" fg:x="10387" fg:w="49"/><text x="4.0224%" y="927.50"></text></g><g><title>std::net::each_addr (49 samples, 0.02%)</title><rect x="3.7724%" y="901" width="0.0178%" height="15" fill="rgb(245,213,5)" fg:x="10387" fg:w="49"/><text x="4.0224%" y="911.50"></text></g><g><title>core::ops::function::FnMut::call_mut (49 samples, 0.02%)</title><rect x="3.7724%" y="885" width="0.0178%" height="15" fill="rgb(230,144,27)" fg:x="10387" fg:w="49"/><text x="4.0224%" y="895.50"></text></g><g><title>std::sys_common::net::TcpListener::bind (49 samples, 0.02%)</title><rect x="3.7724%" y="869" width="0.0178%" height="15" fill="rgb(220,86,6)" fg:x="10387" fg:w="49"/><text x="4.0224%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (138 samples, 0.05%)</title><rect x="3.7557%" y="1013" width="0.0501%" height="15" fill="rgb(240,20,13)" fg:x="10341" fg:w="138"/><text x="4.0057%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (138 samples, 0.05%)</title><rect x="3.7557%" y="997" width="0.0501%" height="15" fill="rgb(217,89,34)" fg:x="10341" fg:w="138"/><text x="4.0057%" y="1007.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}} (137 samples, 0.05%)</title><rect x="3.7561%" y="981" width="0.0498%" height="15" fill="rgb(229,13,5)" fg:x="10342" fg:w="137"/><text x="4.0061%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (153 samples, 0.06%)</title><rect x="3.7546%" y="1045" width="0.0556%" height="15" fill="rgb(244,67,35)" fg:x="10338" fg:w="153"/><text x="4.0046%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::add_listener_unicast::{{closure}} (152 samples, 0.06%)</title><rect x="3.7550%" y="1029" width="0.0552%" height="15" fill="rgb(221,40,2)" fg:x="10339" fg:w="152"/><text x="4.0050%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (154 samples, 0.06%)</title><rect x="3.7546%" y="1077" width="0.0559%" height="15" fill="rgb(237,157,21)" fg:x="10338" fg:w="154"/><text x="4.0046%" y="1087.50"></text></g><g><title>zenoh_transport::manager::TransportManager::add_listener::{{closure}} (154 samples, 0.06%)</title><rect x="3.7546%" y="1061" width="0.0559%" height="15" fill="rgb(222,94,11)" fg:x="10338" fg:w="154"/><text x="4.0046%" y="1071.50"></text></g><g><title>getifaddrs (115 samples, 0.04%)</title><rect x="3.8178%" y="965" width="0.0418%" height="15" fill="rgb(249,113,6)" fg:x="10512" fg:w="115"/><text x="4.0678%" y="975.50"></text></g><g><title>[libc.so.6] (115 samples, 0.04%)</title><rect x="3.8178%" y="949" width="0.0418%" height="15" fill="rgb(238,137,36)" fg:x="10512" fg:w="115"/><text x="4.0678%" y="959.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (134 samples, 0.05%)</title><rect x="3.8124%" y="1045" width="0.0487%" height="15" fill="rgb(210,102,26)" fg:x="10497" fg:w="134"/><text x="4.0624%" y="1055.50"></text></g><g><title>zenoh_util::net::get_local_addresses (130 samples, 0.05%)</title><rect x="3.8138%" y="1029" width="0.0472%" height="15" fill="rgb(218,30,30)" fg:x="10501" fg:w="130"/><text x="4.0638%" y="1039.50"></text></g><g><title>pnet_datalink::interfaces (130 samples, 0.05%)</title><rect x="3.8138%" y="1013" width="0.0472%" height="15" fill="rgb(214,67,26)" fg:x="10501" fg:w="130"/><text x="4.0638%" y="1023.50"></text></g><g><title>pnet_datalink::backend::interfaces (129 samples, 0.05%)</title><rect x="3.8142%" y="997" width="0.0469%" height="15" fill="rgb(251,9,53)" fg:x="10502" fg:w="129"/><text x="4.0642%" y="1007.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (129 samples, 0.05%)</title><rect x="3.8142%" y="981" width="0.0469%" height="15" fill="rgb(228,204,25)" fg:x="10502" fg:w="129"/><text x="4.0642%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (308 samples, 0.11%)</title><rect x="3.7499%" y="1109" width="0.1119%" height="15" fill="rgb(207,153,8)" fg:x="10325" fg:w="308"/><text x="3.9999%" y="1119.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::bind_listeners::{{closure}} (295 samples, 0.11%)</title><rect x="3.7546%" y="1093" width="0.1071%" height="15" fill="rgb(242,9,16)" fg:x="10338" fg:w="295"/><text x="4.0046%" y="1103.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (140 samples, 0.05%)</title><rect x="3.8109%" y="1077" width="0.0508%" height="15" fill="rgb(217,211,10)" fg:x="10493" fg:w="140"/><text x="4.0609%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (140 samples, 0.05%)</title><rect x="3.8109%" y="1061" width="0.0508%" height="15" fill="rgb(219,228,52)" fg:x="10493" fg:w="140"/><text x="4.0609%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (318 samples, 0.12%)</title><rect x="3.7470%" y="1141" width="0.1155%" height="15" fill="rgb(231,92,29)" fg:x="10317" fg:w="318"/><text x="3.9970%" y="1151.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}} (318 samples, 0.12%)</title><rect x="3.7470%" y="1125" width="0.1155%" height="15" fill="rgb(232,8,23)" fg:x="10317" fg:w="318"/><text x="3.9970%" y="1135.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (319 samples, 0.12%)</title><rect x="3.7470%" y="1157" width="0.1159%" height="15" fill="rgb(216,211,34)" fg:x="10317" fg:w="319"/><text x="3.9970%" y="1167.50"></text></g><g><title>shared_memory::unix::create_mapping (48 samples, 0.02%)</title><rect x="3.8941%" y="1013" width="0.0174%" height="15" fill="rgb(236,151,0)" fg:x="10722" fg:w="48"/><text x="4.1441%" y="1023.50"></text></g><g><title>std::fs::OpenOptions::open (44 samples, 0.02%)</title><rect x="3.9115%" y="1013" width="0.0160%" height="15" fill="rgb(209,168,3)" fg:x="10770" fg:w="44"/><text x="4.1615%" y="1023.50"></text></g><g><title>std::fs::OpenOptions::_open (44 samples, 0.02%)</title><rect x="3.9115%" y="997" width="0.0160%" height="15" fill="rgb(208,129,28)" fg:x="10770" fg:w="44"/><text x="4.1615%" y="1007.50"></text></g><g><title>std::sys::unix::fs::File::open (43 samples, 0.02%)</title><rect x="3.9119%" y="981" width="0.0156%" height="15" fill="rgb(229,78,22)" fg:x="10771" fg:w="43"/><text x="4.1619%" y="991.50"></text></g><g><title>shared_memory::ShmemConf::create (119 samples, 0.04%)</title><rect x="3.8897%" y="1029" width="0.0432%" height="15" fill="rgb(228,187,13)" fg:x="10710" fg:w="119"/><text x="4.1397%" y="1039.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryManager::make (137 samples, 0.05%)</title><rect x="3.8835%" y="1045" width="0.0498%" height="15" fill="rgb(240,119,24)" fg:x="10693" fg:w="137"/><text x="4.1335%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (179 samples, 0.07%)</title><rect x="3.8687%" y="1077" width="0.0650%" height="15" fill="rgb(209,194,42)" fg:x="10652" fg:w="179"/><text x="4.1187%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator::from_config::{{closure}} (179 samples, 0.07%)</title><rect x="3.8687%" y="1061" width="0.0650%" height="15" fill="rgb(247,200,46)" fg:x="10652" fg:w="179"/><text x="4.1187%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (193 samples, 0.07%)</title><rect x="3.8654%" y="1109" width="0.0701%" height="15" fill="rgb(218,76,16)" fg:x="10643" fg:w="193"/><text x="4.1154%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::PeerAuthenticator::from_config::{{closure}} (193 samples, 0.07%)</title><rect x="3.8654%" y="1093" width="0.0701%" height="15" fill="rgb(225,21,48)" fg:x="10643" fg:w="193"/><text x="4.1154%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (212 samples, 0.08%)</title><rect x="3.8639%" y="1141" width="0.0770%" height="15" fill="rgb(239,223,50)" fg:x="10639" fg:w="212"/><text x="4.1139%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::from_config::{{closure}} (208 samples, 0.08%)</title><rect x="3.8654%" y="1125" width="0.0755%" height="15" fill="rgb(244,45,21)" fg:x="10643" fg:w="208"/><text x="4.1154%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (541 samples, 0.20%)</title><rect x="3.7470%" y="1173" width="0.1965%" height="15" fill="rgb(232,33,43)" fg:x="10317" fg:w="541"/><text x="3.9970%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::from_config::{{closure}} (222 samples, 0.08%)</title><rect x="3.8628%" y="1157" width="0.0806%" height="15" fill="rgb(209,8,3)" fg:x="10636" fg:w="222"/><text x="4.1128%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::builder (28 samples, 0.01%)</title><rect x="3.9475%" y="1173" width="0.0102%" height="15" fill="rgb(214,25,53)" fg:x="10869" fg:w="28"/><text x="4.1975%" y="1183.50"></text></g><g><title>&lt;zenoh_transport::manager::TransportManagerBuilder as core::default::Default&gt;::default (28 samples, 0.01%)</title><rect x="3.9475%" y="1157" width="0.0102%" height="15" fill="rgb(254,186,54)" fg:x="10869" fg:w="28"/><text x="4.1975%" y="1167.50"></text></g><g><title>&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast as core::default::Default&gt;::default (28 samples, 0.01%)</title><rect x="3.9475%" y="1141" width="0.0102%" height="15" fill="rgb(208,174,49)" fg:x="10869" fg:w="28"/><text x="4.1975%" y="1151.50"></text></g><g><title>async_executor::Executor::spawn (38 samples, 0.01%)</title><rect x="3.9613%" y="1093" width="0.0138%" height="15" fill="rgb(233,191,51)" fg:x="10907" fg:w="38"/><text x="4.2113%" y="1103.50"></text></g><g><title>async_global_executor::executor::spawn (43 samples, 0.02%)</title><rect x="3.9605%" y="1109" width="0.0156%" height="15" fill="rgb(222,134,10)" fg:x="10905" fg:w="43"/><text x="4.2105%" y="1119.50"></text></g><g><title>async_std::task::spawn::spawn (47 samples, 0.02%)</title><rect x="3.9602%" y="1141" width="0.0171%" height="15" fill="rgb(230,226,20)" fg:x="10904" fg:w="47"/><text x="4.2102%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::spawn (47 samples, 0.02%)</title><rect x="3.9602%" y="1125" width="0.0171%" height="15" fill="rgb(251,111,25)" fg:x="10904" fg:w="47"/><text x="4.2102%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinHandle&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt; (42 samples, 0.02%)</title><rect x="3.9838%" y="1125" width="0.0153%" height="15" fill="rgb(224,40,46)" fg:x="10969" fg:w="42"/><text x="4.2338%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::thread::JoinInner&lt;core::result::Result&lt;(),async_channel::RecvError&gt;&gt;&gt; (42 samples, 0.02%)</title><rect x="3.9838%" y="1109" width="0.0153%" height="15" fill="rgb(236,108,47)" fg:x="10969" fg:w="42"/><text x="4.2338%" y="1119.50"></text></g><g><title>[libc.so.6] (92 samples, 0.03%)</title><rect x="4.0593%" y="1029" width="0.0334%" height="15" fill="rgb(234,93,0)" fg:x="11177" fg:w="92"/><text x="4.3093%" y="1039.50"></text></g><g><title>[libc.so.6] (73 samples, 0.03%)</title><rect x="4.0662%" y="1013" width="0.0265%" height="15" fill="rgb(224,213,32)" fg:x="11196" fg:w="73"/><text x="4.3162%" y="1023.50"></text></g><g><title>__clone (72 samples, 0.03%)</title><rect x="4.0666%" y="997" width="0.0261%" height="15" fill="rgb(251,11,48)" fg:x="11197" fg:w="72"/><text x="4.3166%" y="1007.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="4.0677%" y="981" width="0.0251%" height="15" fill="rgb(236,173,5)" fg:x="11200" fg:w="69"/><text x="4.3177%" y="991.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="4.0680%" y="965" width="0.0247%" height="15" fill="rgb(230,95,12)" fg:x="11201" fg:w="68"/><text x="4.3180%" y="975.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="4.0680%" y="949" width="0.0247%" height="15" fill="rgb(232,209,1)" fg:x="11201" fg:w="68"/><text x="4.3180%" y="959.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="4.0684%" y="933" width="0.0243%" height="15" fill="rgb(232,6,1)" fg:x="11202" fg:w="67"/><text x="4.3184%" y="943.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="4.0753%" y="917" width="0.0174%" height="15" fill="rgb(210,224,50)" fg:x="11221" fg:w="48"/><text x="4.3253%" y="927.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="4.0786%" y="901" width="0.0142%" height="15" fill="rgb(228,127,35)" fg:x="11230" fg:w="39"/><text x="4.3286%" y="911.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="4.0811%" y="885" width="0.0116%" height="15" fill="rgb(245,102,45)" fg:x="11237" fg:w="32"/><text x="4.3311%" y="895.50"></text></g><g><title>[unknown] (167 samples, 0.06%)</title><rect x="4.0927%" y="1029" width="0.0607%" height="15" fill="rgb(214,1,49)" fg:x="11269" fg:w="167"/><text x="4.3427%" y="1039.50"></text></g><g><title>[unknown] (142 samples, 0.05%)</title><rect x="4.1018%" y="1013" width="0.0516%" height="15" fill="rgb(226,163,40)" fg:x="11294" fg:w="142"/><text x="4.3518%" y="1023.50"></text></g><g><title>[unknown] (141 samples, 0.05%)</title><rect x="4.1022%" y="997" width="0.0512%" height="15" fill="rgb(239,212,28)" fg:x="11295" fg:w="141"/><text x="4.3522%" y="1007.50"></text></g><g><title>[unknown] (132 samples, 0.05%)</title><rect x="4.1055%" y="981" width="0.0479%" height="15" fill="rgb(220,20,13)" fg:x="11304" fg:w="132"/><text x="4.3555%" y="991.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="4.1138%" y="965" width="0.0396%" height="15" fill="rgb(210,164,35)" fg:x="11327" fg:w="109"/><text x="4.3638%" y="975.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="4.1309%" y="949" width="0.0225%" height="15" fill="rgb(248,109,41)" fg:x="11374" fg:w="62"/><text x="4.3809%" y="959.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="4.1338%" y="933" width="0.0196%" height="15" fill="rgb(238,23,50)" fg:x="11382" fg:w="54"/><text x="4.3838%" y="943.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="4.1363%" y="917" width="0.0171%" height="15" fill="rgb(211,48,49)" fg:x="11389" fg:w="47"/><text x="4.3863%" y="927.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="4.1389%" y="901" width="0.0145%" height="15" fill="rgb(223,36,21)" fg:x="11396" fg:w="40"/><text x="4.3889%" y="911.50"></text></g><g><title>__mmap (86 samples, 0.03%)</title><rect x="4.1592%" y="1029" width="0.0312%" height="15" fill="rgb(207,123,46)" fg:x="11452" fg:w="86"/><text x="4.4092%" y="1039.50"></text></g><g><title>[unknown] (85 samples, 0.03%)</title><rect x="4.1596%" y="1013" width="0.0309%" height="15" fill="rgb(240,218,32)" fg:x="11453" fg:w="85"/><text x="4.4096%" y="1023.50"></text></g><g><title>[unknown] (84 samples, 0.03%)</title><rect x="4.1599%" y="997" width="0.0305%" height="15" fill="rgb(252,5,43)" fg:x="11454" fg:w="84"/><text x="4.4099%" y="1007.50"></text></g><g><title>[unknown] (84 samples, 0.03%)</title><rect x="4.1599%" y="981" width="0.0305%" height="15" fill="rgb(252,84,19)" fg:x="11454" fg:w="84"/><text x="4.4099%" y="991.50"></text></g><g><title>[unknown] (76 samples, 0.03%)</title><rect x="4.1628%" y="965" width="0.0276%" height="15" fill="rgb(243,152,39)" fg:x="11462" fg:w="76"/><text x="4.4128%" y="975.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="4.1701%" y="949" width="0.0203%" height="15" fill="rgb(234,160,15)" fg:x="11482" fg:w="56"/><text x="4.4201%" y="959.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="4.1734%" y="933" width="0.0171%" height="15" fill="rgb(237,34,20)" fg:x="11491" fg:w="47"/><text x="4.4234%" y="943.50"></text></g><g><title>__mprotect (75 samples, 0.03%)</title><rect x="4.1904%" y="1029" width="0.0272%" height="15" fill="rgb(229,97,13)" fg:x="11538" fg:w="75"/><text x="4.4404%" y="1039.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="4.1904%" y="1013" width="0.0272%" height="15" fill="rgb(234,71,50)" fg:x="11538" fg:w="75"/><text x="4.4404%" y="1023.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="4.1904%" y="997" width="0.0272%" height="15" fill="rgb(253,155,4)" fg:x="11538" fg:w="75"/><text x="4.4404%" y="1007.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="4.1908%" y="981" width="0.0269%" height="15" fill="rgb(222,185,37)" fg:x="11539" fg:w="74"/><text x="4.4408%" y="991.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="4.1908%" y="965" width="0.0269%" height="15" fill="rgb(251,177,13)" fg:x="11539" fg:w="74"/><text x="4.4408%" y="975.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="4.1912%" y="949" width="0.0265%" height="15" fill="rgb(250,179,40)" fg:x="11540" fg:w="73"/><text x="4.4412%" y="959.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="4.1933%" y="933" width="0.0243%" height="15" fill="rgb(242,44,2)" fg:x="11546" fg:w="67"/><text x="4.4433%" y="943.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="4.1992%" y="917" width="0.0185%" height="15" fill="rgb(216,177,13)" fg:x="11562" fg:w="51"/><text x="4.4492%" y="927.50"></text></g><g><title>_dl_allocate_tls (48 samples, 0.02%)</title><rect x="4.2177%" y="1029" width="0.0174%" height="15" fill="rgb(216,106,43)" fg:x="11613" fg:w="48"/><text x="4.4677%" y="1039.50"></text></g><g><title>[ld-linux-x86-64.so.2] (48 samples, 0.02%)</title><rect x="4.2177%" y="1013" width="0.0174%" height="15" fill="rgb(216,183,2)" fg:x="11613" fg:w="48"/><text x="4.4677%" y="1023.50"></text></g><g><title>__libc_calloc (40 samples, 0.01%)</title><rect x="4.2206%" y="997" width="0.0145%" height="15" fill="rgb(249,75,3)" fg:x="11621" fg:w="40"/><text x="4.4706%" y="1007.50"></text></g><g><title>pthread_create (618 samples, 0.22%)</title><rect x="4.0346%" y="1045" width="0.2244%" height="15" fill="rgb(219,67,39)" fg:x="11109" fg:w="618"/><text x="4.2846%" y="1055.50"></text></g><g><title>_dl_allocate_tls_init (66 samples, 0.02%)</title><rect x="4.2351%" y="1029" width="0.0240%" height="15" fill="rgb(253,228,2)" fg:x="11661" fg:w="66"/><text x="4.4851%" y="1039.50"></text></g><g><title>std::sys::unix::thread::Thread::new (656 samples, 0.24%)</title><rect x="4.0216%" y="1061" width="0.2383%" height="15" fill="rgb(235,138,27)" fg:x="11073" fg:w="656"/><text x="4.2716%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit::{{closure}} (65 samples, 0.02%)</title><rect x="4.2605%" y="997" width="0.0236%" height="15" fill="rgb(236,97,51)" fg:x="11731" fg:w="65"/><text x="4.5105%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.02%)</title><rect x="4.2605%" y="981" width="0.0236%" height="15" fill="rgb(240,80,30)" fg:x="11731" fg:w="65"/><text x="4.5105%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.02%)</title><rect x="4.2605%" y="965" width="0.0236%" height="15" fill="rgb(230,178,19)" fg:x="11731" fg:w="65"/><text x="4.5105%" y="975.50"></text></g><g><title>alloc::alloc::alloc (65 samples, 0.02%)</title><rect x="4.2605%" y="949" width="0.0236%" height="15" fill="rgb(210,190,27)" fg:x="11731" fg:w="65"/><text x="4.5105%" y="959.50"></text></g><g><title>malloc (61 samples, 0.02%)</title><rect x="4.2620%" y="933" width="0.0222%" height="15" fill="rgb(222,107,31)" fg:x="11735" fg:w="61"/><text x="4.5120%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new_uninit (67 samples, 0.02%)</title><rect x="4.2605%" y="1045" width="0.0243%" height="15" fill="rgb(216,127,34)" fg:x="11731" fg:w="67"/><text x="4.5105%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::allocate_for_layout (67 samples, 0.02%)</title><rect x="4.2605%" y="1029" width="0.0243%" height="15" fill="rgb(234,116,52)" fg:x="11731" fg:w="67"/><text x="4.5105%" y="1039.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::try_allocate_for_layout (67 samples, 0.02%)</title><rect x="4.2605%" y="1013" width="0.0243%" height="15" fill="rgb(222,124,15)" fg:x="11731" fg:w="67"/><text x="4.5105%" y="1023.50"></text></g><g><title>zenoh_transport::manager::TransportManager::new (918 samples, 0.33%)</title><rect x="3.9576%" y="1157" width="0.3334%" height="15" fill="rgb(231,179,28)" fg:x="10897" fg:w="918"/><text x="4.2076%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new (863 samples, 0.31%)</title><rect x="3.9776%" y="1141" width="0.3134%" height="15" fill="rgb(226,93,45)" fg:x="10952" fg:w="863"/><text x="4.2276%" y="1151.50"></text></g><g><title>std::thread::spawn (804 samples, 0.29%)</title><rect x="3.9990%" y="1125" width="0.2920%" height="15" fill="rgb(215,8,51)" fg:x="11011" fg:w="804"/><text x="4.2490%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn (799 samples, 0.29%)</title><rect x="4.0009%" y="1109" width="0.2902%" height="15" fill="rgb(223,106,5)" fg:x="11016" fg:w="799"/><text x="4.2509%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (799 samples, 0.29%)</title><rect x="4.0009%" y="1093" width="0.2902%" height="15" fill="rgb(250,191,5)" fg:x="11016" fg:w="799"/><text x="4.2509%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (798 samples, 0.29%)</title><rect x="4.0012%" y="1077" width="0.2898%" height="15" fill="rgb(242,132,44)" fg:x="11017" fg:w="798"/><text x="4.2512%" y="1087.50"></text></g><g><title>std::thread::Thread::new (84 samples, 0.03%)</title><rect x="4.2605%" y="1061" width="0.0305%" height="15" fill="rgb(251,152,29)" fg:x="11731" fg:w="84"/><text x="4.5105%" y="1071.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (40 samples, 0.01%)</title><rect x="4.2939%" y="1013" width="0.0145%" height="15" fill="rgb(218,179,5)" fg:x="11823" fg:w="40"/><text x="4.5439%" y="1023.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (40 samples, 0.01%)</title><rect x="4.2939%" y="997" width="0.0145%" height="15" fill="rgb(227,67,19)" fg:x="11823" fg:w="40"/><text x="4.5439%" y="1007.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (42 samples, 0.02%)</title><rect x="4.2939%" y="1029" width="0.0153%" height="15" fill="rgb(233,119,31)" fg:x="11823" fg:w="42"/><text x="4.5439%" y="1039.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_lucas (45 samples, 0.02%)</title><rect x="4.2932%" y="1045" width="0.0163%" height="15" fill="rgb(241,120,22)" fg:x="11821" fg:w="45"/><text x="4.5432%" y="1055.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (55 samples, 0.02%)</title><rect x="4.2918%" y="1061" width="0.0200%" height="15" fill="rgb(224,102,30)" fg:x="11817" fg:w="55"/><text x="4.5418%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,557 samples, 0.57%)</title><rect x="3.7466%" y="1205" width="0.5655%" height="15" fill="rgb(210,164,37)" fg:x="10316" fg:w="1557"/><text x="3.9966%" y="1215.50"></text></g><g><title>zenoh::net::runtime::Runtime::new::{{closure}} (1,556 samples, 0.57%)</title><rect x="3.7470%" y="1189" width="0.5651%" height="15" fill="rgb(226,191,16)" fg:x="10317" fg:w="1556"/><text x="3.9970%" y="1199.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::build (976 samples, 0.35%)</title><rect x="3.9576%" y="1173" width="0.3545%" height="15" fill="rgb(214,40,45)" fg:x="10897" fg:w="976"/><text x="4.2076%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (58 samples, 0.02%)</title><rect x="4.2910%" y="1157" width="0.0211%" height="15" fill="rgb(244,29,26)" fg:x="11815" fg:w="58"/><text x="4.5410%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (58 samples, 0.02%)</title><rect x="4.2910%" y="1141" width="0.0211%" height="15" fill="rgb(216,16,5)" fg:x="11815" fg:w="58"/><text x="4.5410%" y="1151.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (57 samples, 0.02%)</title><rect x="4.2914%" y="1125" width="0.0207%" height="15" fill="rgb(249,76,35)" fg:x="11816" fg:w="57"/><text x="4.5414%" y="1135.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (57 samples, 0.02%)</title><rect x="4.2914%" y="1109" width="0.0207%" height="15" fill="rgb(207,11,44)" fg:x="11816" fg:w="57"/><text x="4.5414%" y="1119.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (57 samples, 0.02%)</title><rect x="4.2914%" y="1093" width="0.0207%" height="15" fill="rgb(228,190,49)" fg:x="11816" fg:w="57"/><text x="4.5414%" y="1103.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (57 samples, 0.02%)</title><rect x="4.2914%" y="1077" width="0.0207%" height="15" fill="rgb(214,173,12)" fg:x="11816" fg:w="57"/><text x="4.5414%" y="1087.50"></text></g><g><title>zenoh::session::Session::new::{{closure}} (1,579 samples, 0.57%)</title><rect x="3.7466%" y="1221" width="0.5735%" height="15" fill="rgb(218,26,35)" fg:x="10316" fg:w="1579"/><text x="3.9966%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.01%)</title><rect x="4.3433%" y="1013" width="0.0105%" height="15" fill="rgb(220,200,19)" fg:x="11959" fg:w="29"/><text x="4.5933%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.01%)</title><rect x="4.3433%" y="997" width="0.0105%" height="15" fill="rgb(239,95,49)" fg:x="11959" fg:w="29"/><text x="4.5933%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.01%)</title><rect x="4.3433%" y="981" width="0.0105%" height="15" fill="rgb(235,85,53)" fg:x="11959" fg:w="29"/><text x="4.5933%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (29 samples, 0.01%)</title><rect x="4.3433%" y="965" width="0.0105%" height="15" fill="rgb(233,133,31)" fg:x="11959" fg:w="29"/><text x="4.5933%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (29 samples, 0.01%)</title><rect x="4.3433%" y="949" width="0.0105%" height="15" fill="rgb(218,25,20)" fg:x="11959" fg:w="29"/><text x="4.5933%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.01%)</title><rect x="4.3539%" y="789" width="0.0123%" height="15" fill="rgb(252,210,38)" fg:x="11988" fg:w="34"/><text x="4.6039%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34 samples, 0.01%)</title><rect x="4.3539%" y="773" width="0.0123%" height="15" fill="rgb(242,134,21)" fg:x="11988" fg:w="34"/><text x="4.6039%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.03%)</title><rect x="4.3539%" y="917" width="0.0261%" height="15" fill="rgb(213,28,48)" fg:x="11988" fg:w="72"/><text x="4.6039%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (72 samples, 0.03%)</title><rect x="4.3539%" y="901" width="0.0261%" height="15" fill="rgb(250,196,2)" fg:x="11988" fg:w="72"/><text x="4.6039%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (72 samples, 0.03%)</title><rect x="4.3539%" y="885" width="0.0261%" height="15" fill="rgb(227,5,17)" fg:x="11988" fg:w="72"/><text x="4.6039%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (72 samples, 0.03%)</title><rect x="4.3539%" y="869" width="0.0261%" height="15" fill="rgb(221,226,24)" fg:x="11988" fg:w="72"/><text x="4.6039%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (72 samples, 0.03%)</title><rect x="4.3539%" y="853" width="0.0261%" height="15" fill="rgb(211,5,48)" fg:x="11988" fg:w="72"/><text x="4.6039%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (72 samples, 0.03%)</title><rect x="4.3539%" y="837" width="0.0261%" height="15" fill="rgb(219,150,6)" fg:x="11988" fg:w="72"/><text x="4.6039%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (72 samples, 0.03%)</title><rect x="4.3539%" y="821" width="0.0261%" height="15" fill="rgb(251,46,16)" fg:x="11988" fg:w="72"/><text x="4.6039%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (72 samples, 0.03%)</title><rect x="4.3539%" y="805" width="0.0261%" height="15" fill="rgb(220,204,40)" fg:x="11988" fg:w="72"/><text x="4.6039%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.01%)</title><rect x="4.3662%" y="789" width="0.0138%" height="15" fill="rgb(211,85,2)" fg:x="12022" fg:w="38"/><text x="4.6162%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.01%)</title><rect x="4.3662%" y="773" width="0.0138%" height="15" fill="rgb(229,17,7)" fg:x="12022" fg:w="38"/><text x="4.6162%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.01%)</title><rect x="4.3662%" y="757" width="0.0138%" height="15" fill="rgb(239,72,28)" fg:x="12022" fg:w="38"/><text x="4.6162%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.01%)</title><rect x="4.3807%" y="853" width="0.0105%" height="15" fill="rgb(230,47,54)" fg:x="12062" fg:w="29"/><text x="4.6307%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (104 samples, 0.04%)</title><rect x="4.3539%" y="949" width="0.0378%" height="15" fill="rgb(214,50,8)" fg:x="11988" fg:w="104"/><text x="4.6039%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (104 samples, 0.04%)</title><rect x="4.3539%" y="933" width="0.0378%" height="15" fill="rgb(216,198,43)" fg:x="11988" fg:w="104"/><text x="4.6039%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="4.3800%" y="917" width="0.0116%" height="15" fill="rgb(234,20,35)" fg:x="12060" fg:w="32"/><text x="4.6300%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="4.3800%" y="901" width="0.0116%" height="15" fill="rgb(254,45,19)" fg:x="12060" fg:w="32"/><text x="4.6300%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.01%)</title><rect x="4.3800%" y="885" width="0.0116%" height="15" fill="rgb(219,14,44)" fg:x="12060" fg:w="32"/><text x="4.6300%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.01%)</title><rect x="4.3800%" y="869" width="0.0116%" height="15" fill="rgb(217,220,26)" fg:x="12060" fg:w="32"/><text x="4.6300%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="4.3916%" y="949" width="0.0131%" height="15" fill="rgb(213,158,28)" fg:x="12092" fg:w="36"/><text x="4.6416%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (36 samples, 0.01%)</title><rect x="4.3916%" y="933" width="0.0131%" height="15" fill="rgb(252,51,52)" fg:x="12092" fg:w="36"/><text x="4.6416%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (36 samples, 0.01%)</title><rect x="4.3916%" y="917" width="0.0131%" height="15" fill="rgb(246,89,16)" fg:x="12092" fg:w="36"/><text x="4.6416%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (36 samples, 0.01%)</title><rect x="4.3916%" y="901" width="0.0131%" height="15" fill="rgb(216,158,49)" fg:x="12092" fg:w="36"/><text x="4.6416%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (36 samples, 0.01%)</title><rect x="4.3916%" y="885" width="0.0131%" height="15" fill="rgb(236,107,19)" fg:x="12092" fg:w="36"/><text x="4.6416%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.01%)</title><rect x="4.3916%" y="869" width="0.0131%" height="15" fill="rgb(228,185,30)" fg:x="12092" fg:w="36"/><text x="4.6416%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.01%)</title><rect x="4.3916%" y="853" width="0.0131%" height="15" fill="rgb(246,134,8)" fg:x="12092" fg:w="36"/><text x="4.6416%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.01%)</title><rect x="4.3916%" y="837" width="0.0131%" height="15" fill="rgb(214,143,50)" fg:x="12092" fg:w="36"/><text x="4.6416%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (143 samples, 0.05%)</title><rect x="4.3539%" y="1013" width="0.0519%" height="15" fill="rgb(228,75,8)" fg:x="11988" fg:w="143"/><text x="4.6039%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (143 samples, 0.05%)</title><rect x="4.3539%" y="997" width="0.0519%" height="15" fill="rgb(207,175,4)" fg:x="11988" fg:w="143"/><text x="4.6039%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (143 samples, 0.05%)</title><rect x="4.3539%" y="981" width="0.0519%" height="15" fill="rgb(205,108,24)" fg:x="11988" fg:w="143"/><text x="4.6039%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (143 samples, 0.05%)</title><rect x="4.3539%" y="965" width="0.0519%" height="15" fill="rgb(244,120,49)" fg:x="11988" fg:w="143"/><text x="4.6039%" y="975.50"></text></g><g><title>getifaddrs (90 samples, 0.03%)</title><rect x="4.4153%" y="885" width="0.0327%" height="15" fill="rgb(223,47,38)" fg:x="12157" fg:w="90"/><text x="4.6653%" y="895.50"></text></g><g><title>[libc.so.6] (90 samples, 0.03%)</title><rect x="4.4153%" y="869" width="0.0327%" height="15" fill="rgb(229,179,11)" fg:x="12157" fg:w="90"/><text x="4.6653%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (316 samples, 0.11%)</title><rect x="4.3364%" y="1045" width="0.1148%" height="15" fill="rgb(231,122,1)" fg:x="11940" fg:w="316"/><text x="4.5864%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (297 samples, 0.11%)</title><rect x="4.3433%" y="1029" width="0.1079%" height="15" fill="rgb(245,119,9)" fg:x="11959" fg:w="297"/><text x="4.5933%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (125 samples, 0.05%)</title><rect x="4.4058%" y="1013" width="0.0454%" height="15" fill="rgb(241,163,25)" fg:x="12131" fg:w="125"/><text x="4.6558%" y="1023.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (125 samples, 0.05%)</title><rect x="4.4058%" y="997" width="0.0454%" height="15" fill="rgb(217,214,3)" fg:x="12131" fg:w="125"/><text x="4.6558%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (125 samples, 0.05%)</title><rect x="4.4058%" y="981" width="0.0454%" height="15" fill="rgb(240,86,28)" fg:x="12131" fg:w="125"/><text x="4.6558%" y="991.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (125 samples, 0.05%)</title><rect x="4.4058%" y="965" width="0.0454%" height="15" fill="rgb(215,47,9)" fg:x="12131" fg:w="125"/><text x="4.6558%" y="975.50"></text></g><g><title>zenoh_util::net::get_local_addresses (111 samples, 0.04%)</title><rect x="4.4109%" y="949" width="0.0403%" height="15" fill="rgb(252,25,45)" fg:x="12145" fg:w="111"/><text x="4.6609%" y="959.50"></text></g><g><title>pnet_datalink::interfaces (108 samples, 0.04%)</title><rect x="4.4120%" y="933" width="0.0392%" height="15" fill="rgb(251,164,9)" fg:x="12148" fg:w="108"/><text x="4.6620%" y="943.50"></text></g><g><title>pnet_datalink::backend::interfaces (108 samples, 0.04%)</title><rect x="4.4120%" y="917" width="0.0392%" height="15" fill="rgb(233,194,0)" fg:x="12148" fg:w="108"/><text x="4.6620%" y="927.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (108 samples, 0.04%)</title><rect x="4.4120%" y="901" width="0.0392%" height="15" fill="rgb(249,111,24)" fg:x="12148" fg:w="108"/><text x="4.6620%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (34 samples, 0.01%)</title><rect x="4.4657%" y="869" width="0.0123%" height="15" fill="rgb(250,223,3)" fg:x="12296" fg:w="34"/><text x="4.7157%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (35 samples, 0.01%)</title><rect x="4.4657%" y="885" width="0.0127%" height="15" fill="rgb(236,178,37)" fg:x="12296" fg:w="35"/><text x="4.7157%" y="895.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (39 samples, 0.01%)</title><rect x="4.4843%" y="869" width="0.0142%" height="15" fill="rgb(241,158,50)" fg:x="12347" fg:w="39"/><text x="4.7343%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (34 samples, 0.01%)</title><rect x="4.4861%" y="853" width="0.0123%" height="15" fill="rgb(213,121,41)" fg:x="12352" fg:w="34"/><text x="4.7361%" y="863.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (47 samples, 0.02%)</title><rect x="4.4821%" y="885" width="0.0171%" height="15" fill="rgb(240,92,3)" fg:x="12341" fg:w="47"/><text x="4.7321%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (102 samples, 0.04%)</title><rect x="4.4639%" y="933" width="0.0370%" height="15" fill="rgb(205,123,3)" fg:x="12291" fg:w="102"/><text x="4.7139%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (100 samples, 0.04%)</title><rect x="4.4646%" y="917" width="0.0363%" height="15" fill="rgb(205,97,47)" fg:x="12293" fg:w="100"/><text x="4.7146%" y="927.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (100 samples, 0.04%)</title><rect x="4.4646%" y="901" width="0.0363%" height="15" fill="rgb(247,152,14)" fg:x="12293" fg:w="100"/><text x="4.7146%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (454 samples, 0.16%)</title><rect x="4.3364%" y="1061" width="0.1649%" height="15" fill="rgb(248,195,53)" fg:x="11940" fg:w="454"/><text x="4.5864%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (138 samples, 0.05%)</title><rect x="4.4512%" y="1045" width="0.0501%" height="15" fill="rgb(226,201,16)" fg:x="12256" fg:w="138"/><text x="4.7012%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (138 samples, 0.05%)</title><rect x="4.4512%" y="1029" width="0.0501%" height="15" fill="rgb(205,98,0)" fg:x="12256" fg:w="138"/><text x="4.7012%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (138 samples, 0.05%)</title><rect x="4.4512%" y="1013" width="0.0501%" height="15" fill="rgb(214,191,48)" fg:x="12256" fg:w="138"/><text x="4.7012%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (138 samples, 0.05%)</title><rect x="4.4512%" y="997" width="0.0501%" height="15" fill="rgb(237,112,39)" fg:x="12256" fg:w="138"/><text x="4.7012%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (138 samples, 0.05%)</title><rect x="4.4512%" y="981" width="0.0501%" height="15" fill="rgb(247,203,27)" fg:x="12256" fg:w="138"/><text x="4.7012%" y="991.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (137 samples, 0.05%)</title><rect x="4.4516%" y="965" width="0.0498%" height="15" fill="rgb(235,124,28)" fg:x="12257" fg:w="137"/><text x="4.7016%" y="975.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (106 samples, 0.04%)</title><rect x="4.4628%" y="949" width="0.0385%" height="15" fill="rgb(208,207,46)" fg:x="12288" fg:w="106"/><text x="4.7128%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (29 samples, 0.01%)</title><rect x="4.5238%" y="933" width="0.0105%" height="15" fill="rgb(234,176,4)" fg:x="12456" fg:w="29"/><text x="4.7738%" y="943.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (546 samples, 0.20%)</title><rect x="4.3364%" y="1109" width="0.1983%" height="15" fill="rgb(230,133,28)" fg:x="11940" fg:w="546"/><text x="4.5864%" y="1119.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (546 samples, 0.20%)</title><rect x="4.3364%" y="1093" width="0.1983%" height="15" fill="rgb(211,137,40)" fg:x="11940" fg:w="546"/><text x="4.5864%" y="1103.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (546 samples, 0.20%)</title><rect x="4.3364%" y="1077" width="0.1983%" height="15" fill="rgb(254,35,13)" fg:x="11940" fg:w="546"/><text x="4.5864%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (92 samples, 0.03%)</title><rect x="4.5013%" y="1061" width="0.0334%" height="15" fill="rgb(225,49,51)" fg:x="12394" fg:w="92"/><text x="4.7513%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (79 samples, 0.03%)</title><rect x="4.5060%" y="1045" width="0.0287%" height="15" fill="rgb(251,10,15)" fg:x="12407" fg:w="79"/><text x="4.7560%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (79 samples, 0.03%)</title><rect x="4.5060%" y="1029" width="0.0287%" height="15" fill="rgb(228,207,15)" fg:x="12407" fg:w="79"/><text x="4.7560%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (79 samples, 0.03%)</title><rect x="4.5060%" y="1013" width="0.0287%" height="15" fill="rgb(241,99,19)" fg:x="12407" fg:w="79"/><text x="4.7560%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (79 samples, 0.03%)</title><rect x="4.5060%" y="997" width="0.0287%" height="15" fill="rgb(207,104,49)" fg:x="12407" fg:w="79"/><text x="4.7560%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (79 samples, 0.03%)</title><rect x="4.5060%" y="981" width="0.0287%" height="15" fill="rgb(234,99,18)" fg:x="12407" fg:w="79"/><text x="4.7560%" y="991.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (79 samples, 0.03%)</title><rect x="4.5060%" y="965" width="0.0287%" height="15" fill="rgb(213,191,49)" fg:x="12407" fg:w="79"/><text x="4.7560%" y="975.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (35 samples, 0.01%)</title><rect x="4.5220%" y="949" width="0.0127%" height="15" fill="rgb(210,226,19)" fg:x="12451" fg:w="35"/><text x="4.7720%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (45 samples, 0.02%)</title><rect x="4.5416%" y="1045" width="0.0163%" height="15" fill="rgb(229,97,18)" fg:x="12505" fg:w="45"/><text x="4.7916%" y="1055.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (45 samples, 0.02%)</title><rect x="4.5416%" y="1029" width="0.0163%" height="15" fill="rgb(211,167,15)" fg:x="12505" fg:w="45"/><text x="4.7916%" y="1039.50"></text></g><g><title>async_task::runnable::spawn_unchecked (32 samples, 0.01%)</title><rect x="4.5583%" y="1045" width="0.0116%" height="15" fill="rgb(210,169,34)" fg:x="12551" fg:w="32"/><text x="4.8083%" y="1055.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (679 samples, 0.25%)</title><rect x="4.3288%" y="1221" width="0.2466%" height="15" fill="rgb(241,121,31)" fg:x="11919" fg:w="679"/><text x="4.5788%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (679 samples, 0.25%)</title><rect x="4.3288%" y="1205" width="0.2466%" height="15" fill="rgb(232,40,11)" fg:x="11919" fg:w="679"/><text x="4.5788%" y="1215.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (679 samples, 0.25%)</title><rect x="4.3288%" y="1189" width="0.2466%" height="15" fill="rgb(205,86,26)" fg:x="11919" fg:w="679"/><text x="4.5788%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (679 samples, 0.25%)</title><rect x="4.3288%" y="1173" width="0.2466%" height="15" fill="rgb(231,126,28)" fg:x="11919" fg:w="679"/><text x="4.5788%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (679 samples, 0.25%)</title><rect x="4.3288%" y="1157" width="0.2466%" height="15" fill="rgb(219,221,18)" fg:x="11919" fg:w="679"/><text x="4.5788%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (679 samples, 0.25%)</title><rect x="4.3288%" y="1141" width="0.2466%" height="15" fill="rgb(211,40,0)" fg:x="11919" fg:w="679"/><text x="4.5788%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (658 samples, 0.24%)</title><rect x="4.3364%" y="1125" width="0.2390%" height="15" fill="rgb(239,85,43)" fg:x="11940" fg:w="658"/><text x="4.5864%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (103 samples, 0.04%)</title><rect x="4.5380%" y="1109" width="0.0374%" height="15" fill="rgb(231,55,21)" fg:x="12495" fg:w="103"/><text x="4.7880%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (103 samples, 0.04%)</title><rect x="4.5380%" y="1093" width="0.0374%" height="15" fill="rgb(225,184,43)" fg:x="12495" fg:w="103"/><text x="4.7880%" y="1103.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::spawn (103 samples, 0.04%)</title><rect x="4.5380%" y="1077" width="0.0374%" height="15" fill="rgb(251,158,41)" fg:x="12495" fg:w="103"/><text x="4.7880%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn (103 samples, 0.04%)</title><rect x="4.5380%" y="1061" width="0.0374%" height="15" fill="rgb(234,159,37)" fg:x="12495" fg:w="103"/><text x="4.7880%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (160 samples, 0.06%)</title><rect x="4.5885%" y="725" width="0.0581%" height="15" fill="rgb(216,204,22)" fg:x="12634" fg:w="160"/><text x="4.8385%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (144 samples, 0.05%)</title><rect x="4.5943%" y="709" width="0.0523%" height="15" fill="rgb(214,17,3)" fg:x="12650" fg:w="144"/><text x="4.8443%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (144 samples, 0.05%)</title><rect x="4.5943%" y="693" width="0.0523%" height="15" fill="rgb(212,111,17)" fg:x="12650" fg:w="144"/><text x="4.8443%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (144 samples, 0.05%)</title><rect x="4.5943%" y="677" width="0.0523%" height="15" fill="rgb(221,157,24)" fg:x="12650" fg:w="144"/><text x="4.8443%" y="687.50"></text></g><g><title>alloc::alloc::alloc (144 samples, 0.05%)</title><rect x="4.5943%" y="661" width="0.0523%" height="15" fill="rgb(252,16,13)" fg:x="12650" fg:w="144"/><text x="4.8443%" y="671.50"></text></g><g><title>malloc (134 samples, 0.05%)</title><rect x="4.5979%" y="645" width="0.0487%" height="15" fill="rgb(221,62,2)" fg:x="12660" fg:w="134"/><text x="4.8479%" y="655.50"></text></g><g><title>[libc.so.6] (107 samples, 0.04%)</title><rect x="4.6520%" y="693" width="0.0389%" height="15" fill="rgb(247,87,22)" fg:x="12809" fg:w="107"/><text x="4.9020%" y="703.50"></text></g><g><title>[libc.so.6] (70 samples, 0.03%)</title><rect x="4.9615%" y="517" width="0.0254%" height="15" fill="rgb(215,73,9)" fg:x="13661" fg:w="70"/><text x="5.2115%" y="527.50"></text></g><g><title>[libc.so.6] (587 samples, 0.21%)</title><rect x="4.7766%" y="549" width="0.2132%" height="15" fill="rgb(207,175,33)" fg:x="13152" fg:w="587"/><text x="5.0266%" y="559.50"></text></g><g><title>[libc.so.6] (550 samples, 0.20%)</title><rect x="4.7901%" y="533" width="0.1998%" height="15" fill="rgb(243,129,54)" fg:x="13189" fg:w="550"/><text x="5.0401%" y="543.50"></text></g><g><title>[libc.so.6] (710 samples, 0.26%)</title><rect x="4.7370%" y="565" width="0.2579%" height="15" fill="rgb(227,119,45)" fg:x="13043" fg:w="710"/><text x="4.9870%" y="575.50"></text></g><g><title>__rdl_alloc (826 samples, 0.30%)</title><rect x="4.6956%" y="629" width="0.3000%" height="15" fill="rgb(205,109,36)" fg:x="12929" fg:w="826"/><text x="4.9456%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (798 samples, 0.29%)</title><rect x="4.7058%" y="613" width="0.2898%" height="15" fill="rgb(205,6,39)" fg:x="12957" fg:w="798"/><text x="4.9558%" y="623.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (798 samples, 0.29%)</title><rect x="4.7058%" y="597" width="0.2898%" height="15" fill="rgb(221,32,16)" fg:x="12957" fg:w="798"/><text x="4.9558%" y="607.50"></text></g><g><title>posix_memalign (789 samples, 0.29%)</title><rect x="4.7091%" y="581" width="0.2866%" height="15" fill="rgb(228,144,50)" fg:x="12966" fg:w="789"/><text x="4.9591%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (969 samples, 0.35%)</title><rect x="4.6520%" y="709" width="0.3519%" height="15" fill="rgb(229,201,53)" fg:x="12809" fg:w="969"/><text x="4.9020%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (862 samples, 0.31%)</title><rect x="4.6909%" y="693" width="0.3131%" height="15" fill="rgb(249,153,27)" fg:x="12916" fg:w="862"/><text x="4.9409%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (862 samples, 0.31%)</title><rect x="4.6909%" y="677" width="0.3131%" height="15" fill="rgb(227,106,25)" fg:x="12916" fg:w="862"/><text x="4.9409%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (862 samples, 0.31%)</title><rect x="4.6909%" y="661" width="0.3131%" height="15" fill="rgb(230,65,29)" fg:x="12916" fg:w="862"/><text x="4.9409%" y="671.50"></text></g><g><title>alloc::alloc::alloc (862 samples, 0.31%)</title><rect x="4.6909%" y="645" width="0.3131%" height="15" fill="rgb(221,57,46)" fg:x="12916" fg:w="862"/><text x="4.9409%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (89 samples, 0.03%)</title><rect x="5.5095%" y="677" width="0.0323%" height="15" fill="rgb(229,161,17)" fg:x="15170" fg:w="89"/><text x="5.7595%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,765 samples, 0.64%)</title><rect x="5.0323%" y="693" width="0.6410%" height="15" fill="rgb(222,213,11)" fg:x="13856" fg:w="1765"/><text x="5.2823%" y="703.50"></text></g><g><title>core::ptr::write (362 samples, 0.13%)</title><rect x="5.5419%" y="677" width="0.1315%" height="15" fill="rgb(235,35,13)" fg:x="15259" fg:w="362"/><text x="5.7919%" y="687.50"></text></g><g><title>[unknown] (224 samples, 0.08%)</title><rect x="5.5920%" y="661" width="0.0814%" height="15" fill="rgb(233,158,34)" fg:x="15397" fg:w="224"/><text x="5.8420%" y="671.50"></text></g><g><title>[unknown] (221 samples, 0.08%)</title><rect x="5.5931%" y="645" width="0.0803%" height="15" fill="rgb(215,151,48)" fg:x="15400" fg:w="221"/><text x="5.8431%" y="655.50"></text></g><g><title>[unknown] (211 samples, 0.08%)</title><rect x="5.5967%" y="629" width="0.0766%" height="15" fill="rgb(229,84,14)" fg:x="15410" fg:w="211"/><text x="5.8467%" y="639.50"></text></g><g><title>[unknown] (203 samples, 0.07%)</title><rect x="5.5996%" y="613" width="0.0737%" height="15" fill="rgb(229,68,14)" fg:x="15418" fg:w="203"/><text x="5.8496%" y="623.50"></text></g><g><title>[unknown] (142 samples, 0.05%)</title><rect x="5.6218%" y="597" width="0.0516%" height="15" fill="rgb(243,106,26)" fg:x="15479" fg:w="142"/><text x="5.8718%" y="607.50"></text></g><g><title>[unknown] (89 samples, 0.03%)</title><rect x="5.6410%" y="581" width="0.0323%" height="15" fill="rgb(206,45,38)" fg:x="15532" fg:w="89"/><text x="5.8910%" y="591.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="5.6450%" y="565" width="0.0283%" height="15" fill="rgb(226,6,15)" fg:x="15543" fg:w="78"/><text x="5.8950%" y="575.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="5.6508%" y="549" width="0.0225%" height="15" fill="rgb(232,22,54)" fg:x="15559" fg:w="62"/><text x="5.9008%" y="559.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="5.6577%" y="533" width="0.0156%" height="15" fill="rgb(229,222,32)" fg:x="15578" fg:w="43"/><text x="5.9077%" y="543.50"></text></g><g><title>[unknown] (363 samples, 0.13%)</title><rect x="5.8110%" y="533" width="0.1318%" height="15" fill="rgb(228,62,29)" fg:x="16000" fg:w="363"/><text x="6.0610%" y="543.50"></text></g><g><title>[unknown] (341 samples, 0.12%)</title><rect x="5.8190%" y="517" width="0.1238%" height="15" fill="rgb(251,103,34)" fg:x="16022" fg:w="341"/><text x="6.0690%" y="527.50"></text></g><g><title>[unknown] (323 samples, 0.12%)</title><rect x="5.8255%" y="501" width="0.1173%" height="15" fill="rgb(233,12,30)" fg:x="16040" fg:w="323"/><text x="6.0755%" y="511.50"></text></g><g><title>[unknown] (306 samples, 0.11%)</title><rect x="5.8317%" y="485" width="0.1111%" height="15" fill="rgb(238,52,0)" fg:x="16057" fg:w="306"/><text x="6.0817%" y="495.50"></text></g><g><title>[unknown] (224 samples, 0.08%)</title><rect x="5.8615%" y="469" width="0.0814%" height="15" fill="rgb(223,98,5)" fg:x="16139" fg:w="224"/><text x="6.1115%" y="479.50"></text></g><g><title>[unknown] (132 samples, 0.05%)</title><rect x="5.8949%" y="453" width="0.0479%" height="15" fill="rgb(228,75,37)" fg:x="16231" fg:w="132"/><text x="6.1449%" y="463.50"></text></g><g><title>[unknown] (85 samples, 0.03%)</title><rect x="5.9119%" y="437" width="0.0309%" height="15" fill="rgb(205,115,49)" fg:x="16278" fg:w="85"/><text x="6.1619%" y="447.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="5.9196%" y="421" width="0.0232%" height="15" fill="rgb(250,154,43)" fg:x="16299" fg:w="64"/><text x="6.1696%" y="431.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="5.9297%" y="405" width="0.0131%" height="15" fill="rgb(226,43,29)" fg:x="16327" fg:w="36"/><text x="6.1797%" y="415.50"></text></g><g><title>[libc.so.6] (688 samples, 0.25%)</title><rect x="5.7441%" y="549" width="0.2499%" height="15" fill="rgb(249,228,39)" fg:x="15816" fg:w="688"/><text x="5.9941%" y="559.50"></text></g><g><title>__mprotect (141 samples, 0.05%)</title><rect x="5.9428%" y="533" width="0.0512%" height="15" fill="rgb(216,79,43)" fg:x="16363" fg:w="141"/><text x="6.1928%" y="543.50"></text></g><g><title>[unknown] (141 samples, 0.05%)</title><rect x="5.9428%" y="517" width="0.0512%" height="15" fill="rgb(228,95,12)" fg:x="16363" fg:w="141"/><text x="6.1928%" y="527.50"></text></g><g><title>[unknown] (122 samples, 0.04%)</title><rect x="5.9497%" y="501" width="0.0443%" height="15" fill="rgb(249,221,15)" fg:x="16382" fg:w="122"/><text x="6.1997%" y="511.50"></text></g><g><title>[unknown] (118 samples, 0.04%)</title><rect x="5.9512%" y="485" width="0.0429%" height="15" fill="rgb(233,34,13)" fg:x="16386" fg:w="118"/><text x="6.2012%" y="495.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="5.9523%" y="469" width="0.0418%" height="15" fill="rgb(214,103,39)" fg:x="16389" fg:w="115"/><text x="6.2023%" y="479.50"></text></g><g><title>[unknown] (100 samples, 0.04%)</title><rect x="5.9577%" y="453" width="0.0363%" height="15" fill="rgb(251,126,39)" fg:x="16404" fg:w="100"/><text x="6.2077%" y="463.50"></text></g><g><title>[unknown] (79 samples, 0.03%)</title><rect x="5.9653%" y="437" width="0.0287%" height="15" fill="rgb(214,216,36)" fg:x="16425" fg:w="79"/><text x="6.2153%" y="447.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="5.9791%" y="421" width="0.0149%" height="15" fill="rgb(220,221,8)" fg:x="16463" fg:w="41"/><text x="6.2291%" y="431.50"></text></g><g><title>[libc.so.6] (841 samples, 0.31%)</title><rect x="5.6908%" y="565" width="0.3054%" height="15" fill="rgb(240,216,3)" fg:x="15669" fg:w="841"/><text x="5.9408%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (984 samples, 0.36%)</title><rect x="5.6733%" y="693" width="0.3574%" height="15" fill="rgb(232,218,17)" fg:x="15621" fg:w="984"/><text x="5.9233%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (984 samples, 0.36%)</title><rect x="5.6733%" y="677" width="0.3574%" height="15" fill="rgb(229,163,45)" fg:x="15621" fg:w="984"/><text x="5.9233%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (984 samples, 0.36%)</title><rect x="5.6733%" y="661" width="0.3574%" height="15" fill="rgb(231,110,42)" fg:x="15621" fg:w="984"/><text x="5.9233%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (984 samples, 0.36%)</title><rect x="5.6733%" y="645" width="0.3574%" height="15" fill="rgb(208,170,48)" fg:x="15621" fg:w="984"/><text x="5.9233%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (984 samples, 0.36%)</title><rect x="5.6733%" y="629" width="0.3574%" height="15" fill="rgb(239,116,25)" fg:x="15621" fg:w="984"/><text x="5.9233%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (984 samples, 0.36%)</title><rect x="5.6733%" y="613" width="0.3574%" height="15" fill="rgb(219,200,50)" fg:x="15621" fg:w="984"/><text x="5.9233%" y="623.50"></text></g><g><title>alloc::alloc::alloc (982 samples, 0.36%)</title><rect x="5.6741%" y="597" width="0.3566%" height="15" fill="rgb(245,200,0)" fg:x="15623" fg:w="982"/><text x="5.9241%" y="607.50"></text></g><g><title>malloc (956 samples, 0.35%)</title><rect x="5.6835%" y="581" width="0.3472%" height="15" fill="rgb(245,119,33)" fg:x="15649" fg:w="956"/><text x="5.9335%" y="591.50"></text></g><g><title>__lll_lock_wake_private (92 samples, 0.03%)</title><rect x="5.9973%" y="565" width="0.0334%" height="15" fill="rgb(231,125,12)" fg:x="16513" fg:w="92"/><text x="6.2473%" y="575.50"></text></g><g><title>[unknown] (92 samples, 0.03%)</title><rect x="5.9973%" y="549" width="0.0334%" height="15" fill="rgb(216,96,41)" fg:x="16513" fg:w="92"/><text x="6.2473%" y="559.50"></text></g><g><title>[unknown] (89 samples, 0.03%)</title><rect x="5.9984%" y="533" width="0.0323%" height="15" fill="rgb(248,43,45)" fg:x="16516" fg:w="89"/><text x="6.2484%" y="543.50"></text></g><g><title>[unknown] (89 samples, 0.03%)</title><rect x="5.9984%" y="517" width="0.0323%" height="15" fill="rgb(217,222,7)" fg:x="16516" fg:w="89"/><text x="6.2484%" y="527.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="5.9987%" y="501" width="0.0320%" height="15" fill="rgb(233,28,6)" fg:x="16517" fg:w="88"/><text x="6.2487%" y="511.50"></text></g><g><title>[unknown] (81 samples, 0.03%)</title><rect x="6.0013%" y="485" width="0.0294%" height="15" fill="rgb(231,218,15)" fg:x="16524" fg:w="81"/><text x="6.2513%" y="495.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="6.0089%" y="469" width="0.0218%" height="15" fill="rgb(226,171,48)" fg:x="16545" fg:w="60"/><text x="6.2589%" y="479.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="6.0140%" y="453" width="0.0167%" height="15" fill="rgb(235,201,9)" fg:x="16559" fg:w="46"/><text x="6.2640%" y="463.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="6.0162%" y="437" width="0.0145%" height="15" fill="rgb(217,80,15)" fg:x="16565" fg:w="40"/><text x="6.2662%" y="447.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (53 samples, 0.02%)</title><rect x="6.0332%" y="661" width="0.0192%" height="15" fill="rgb(219,152,8)" fg:x="16612" fg:w="53"/><text x="6.2832%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (53 samples, 0.02%)</title><rect x="6.0332%" y="645" width="0.0192%" height="15" fill="rgb(243,107,38)" fg:x="16612" fg:w="53"/><text x="6.2832%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (149 samples, 0.05%)</title><rect x="6.0307%" y="693" width="0.0541%" height="15" fill="rgb(231,17,5)" fg:x="16605" fg:w="149"/><text x="6.2807%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (149 samples, 0.05%)</title><rect x="6.0307%" y="677" width="0.0541%" height="15" fill="rgb(209,25,54)" fg:x="16605" fg:w="149"/><text x="6.2807%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (89 samples, 0.03%)</title><rect x="6.0525%" y="661" width="0.0323%" height="15" fill="rgb(219,0,2)" fg:x="16665" fg:w="89"/><text x="6.3025%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (3,948 samples, 1.43%)</title><rect x="4.6520%" y="725" width="1.4339%" height="15" fill="rgb(246,9,5)" fg:x="12809" fg:w="3948"/><text x="4.9020%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (2,978 samples, 1.08%)</title><rect x="5.0043%" y="709" width="1.0816%" height="15" fill="rgb(226,159,4)" fg:x="13779" fg:w="2978"/><text x="5.2543%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (30 samples, 0.01%)</title><rect x="6.0859%" y="725" width="0.0109%" height="15" fill="rgb(219,175,34)" fg:x="16757" fg:w="30"/><text x="6.3359%" y="735.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="6.0859%" y="709" width="0.0109%" height="15" fill="rgb(236,10,46)" fg:x="16757" fg:w="30"/><text x="6.3359%" y="719.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (30 samples, 0.01%)</title><rect x="6.0859%" y="693" width="0.0109%" height="15" fill="rgb(240,211,16)" fg:x="16757" fg:w="30"/><text x="6.3359%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (30 samples, 0.01%)</title><rect x="6.0859%" y="677" width="0.0109%" height="15" fill="rgb(205,3,43)" fg:x="16757" fg:w="30"/><text x="6.3359%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,228 samples, 1.54%)</title><rect x="4.5754%" y="805" width="1.5356%" height="15" fill="rgb(245,7,22)" fg:x="12598" fg:w="4228"/><text x="4.8254%" y="815.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (4,228 samples, 1.54%)</title><rect x="4.5754%" y="789" width="1.5356%" height="15" fill="rgb(239,132,32)" fg:x="12598" fg:w="4228"/><text x="4.8254%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,228 samples, 1.54%)</title><rect x="4.5754%" y="773" width="1.5356%" height="15" fill="rgb(228,202,34)" fg:x="12598" fg:w="4228"/><text x="4.8254%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (4,228 samples, 1.54%)</title><rect x="4.5754%" y="757" width="1.5356%" height="15" fill="rgb(254,200,22)" fg:x="12598" fg:w="4228"/><text x="4.8254%" y="767.50"></text></g><g><title>async_executor::Runner::new (4,228 samples, 1.54%)</title><rect x="4.5754%" y="741" width="1.5356%" height="15" fill="rgb(219,10,39)" fg:x="12598" fg:w="4228"/><text x="4.8254%" y="751.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (39 samples, 0.01%)</title><rect x="6.0968%" y="725" width="0.0142%" height="15" fill="rgb(226,210,39)" fg:x="16787" fg:w="39"/><text x="6.3468%" y="735.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1141" width="1.5370%" height="15" fill="rgb(208,219,16)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1125" width="1.5370%" height="15" fill="rgb(216,158,51)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1109" width="1.5370%" height="15" fill="rgb(233,14,44)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1119.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1093" width="1.5370%" height="15" fill="rgb(237,97,39)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1103.50"></text></g><g><title>async_std::task::block_on::block_on (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1077" width="1.5370%" height="15" fill="rgb(218,198,43)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1061" width="1.5370%" height="15" fill="rgb(231,104,20)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1045" width="1.5370%" height="15" fill="rgb(254,36,13)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1029" width="1.5370%" height="15" fill="rgb(248,14,50)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (4,232 samples, 1.54%)</title><rect x="4.5754%" y="1013" width="1.5370%" height="15" fill="rgb(217,107,29)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (4,232 samples, 1.54%)</title><rect x="4.5754%" y="997" width="1.5370%" height="15" fill="rgb(251,169,33)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,232 samples, 1.54%)</title><rect x="4.5754%" y="981" width="1.5370%" height="15" fill="rgb(217,108,32)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,232 samples, 1.54%)</title><rect x="4.5754%" y="965" width="1.5370%" height="15" fill="rgb(219,66,42)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (4,232 samples, 1.54%)</title><rect x="4.5754%" y="949" width="1.5370%" height="15" fill="rgb(206,180,7)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="959.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (4,232 samples, 1.54%)</title><rect x="4.5754%" y="933" width="1.5370%" height="15" fill="rgb(208,226,31)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="943.50"></text></g><g><title>async_global_executor::executor::block_on (4,232 samples, 1.54%)</title><rect x="4.5754%" y="917" width="1.5370%" height="15" fill="rgb(218,26,49)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,232 samples, 1.54%)</title><rect x="4.5754%" y="901" width="1.5370%" height="15" fill="rgb(233,197,48)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,232 samples, 1.54%)</title><rect x="4.5754%" y="885" width="1.5370%" height="15" fill="rgb(252,181,51)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (4,232 samples, 1.54%)</title><rect x="4.5754%" y="869" width="1.5370%" height="15" fill="rgb(253,90,19)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on (4,232 samples, 1.54%)</title><rect x="4.5754%" y="853" width="1.5370%" height="15" fill="rgb(215,171,30)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="863.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (4,232 samples, 1.54%)</title><rect x="4.5754%" y="837" width="1.5370%" height="15" fill="rgb(214,222,9)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="847.50"></text></g><g><title>async_io::driver::block_on (4,232 samples, 1.54%)</title><rect x="4.5754%" y="821" width="1.5370%" height="15" fill="rgb(223,3,22)" fg:x="12598" fg:w="4232"/><text x="4.8254%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (34 samples, 0.01%)</title><rect x="6.1222%" y="981" width="0.0123%" height="15" fill="rgb(225,196,46)" fg:x="16857" fg:w="34"/><text x="6.3722%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;]&gt; (34 samples, 0.01%)</title><rect x="6.1222%" y="965" width="0.0123%" height="15" fill="rgb(209,110,37)" fg:x="16857" fg:w="34"/><text x="6.3722%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt; (34 samples, 0.01%)</title><rect x="6.1222%" y="949" width="0.0123%" height="15" fill="rgb(249,89,12)" fg:x="16857" fg:w="34"/><text x="6.3722%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="6.1222%" y="933" width="0.0123%" height="15" fill="rgb(226,27,33)" fg:x="16857" fg:w="34"/><text x="6.3722%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt; (36 samples, 0.01%)</title><rect x="6.1429%" y="981" width="0.0131%" height="15" fill="rgb(213,82,22)" fg:x="16914" fg:w="36"/><text x="6.3929%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="6.1429%" y="965" width="0.0131%" height="15" fill="rgb(248,140,0)" fg:x="16914" fg:w="36"/><text x="6.3929%" y="975.50"></text></g><g><title>alloc::str::join_generic_copy (36 samples, 0.01%)</title><rect x="6.2054%" y="901" width="0.0131%" height="15" fill="rgb(228,106,3)" fg:x="17086" fg:w="36"/><text x="6.4554%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (42 samples, 0.02%)</title><rect x="6.2039%" y="949" width="0.0153%" height="15" fill="rgb(209,23,37)" fg:x="17082" fg:w="42"/><text x="6.4539%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (41 samples, 0.01%)</title><rect x="6.2043%" y="933" width="0.0149%" height="15" fill="rgb(241,93,50)" fg:x="17083" fg:w="41"/><text x="6.4543%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (38 samples, 0.01%)</title><rect x="6.2054%" y="917" width="0.0138%" height="15" fill="rgb(253,46,43)" fg:x="17086" fg:w="38"/><text x="6.4554%" y="927.50"></text></g><g><title>alloc::str::join_generic_copy (51 samples, 0.02%)</title><rect x="6.2254%" y="885" width="0.0185%" height="15" fill="rgb(226,206,43)" fg:x="17141" fg:w="51"/><text x="6.4754%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (55 samples, 0.02%)</title><rect x="6.2246%" y="933" width="0.0200%" height="15" fill="rgb(217,54,7)" fg:x="17139" fg:w="55"/><text x="6.4746%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (55 samples, 0.02%)</title><rect x="6.2246%" y="917" width="0.0200%" height="15" fill="rgb(223,5,52)" fg:x="17139" fg:w="55"/><text x="6.4746%" y="927.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (53 samples, 0.02%)</title><rect x="6.2254%" y="901" width="0.0192%" height="15" fill="rgb(206,52,46)" fg:x="17141" fg:w="53"/><text x="6.4754%" y="911.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (139 samples, 0.05%)</title><rect x="6.1999%" y="965" width="0.0505%" height="15" fill="rgb(253,136,11)" fg:x="17071" fg:w="139"/><text x="6.4499%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (77 samples, 0.03%)</title><rect x="6.2225%" y="949" width="0.0280%" height="15" fill="rgb(208,106,33)" fg:x="17133" fg:w="77"/><text x="6.4725%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (30 samples, 0.01%)</title><rect x="6.2504%" y="965" width="0.0109%" height="15" fill="rgb(206,54,4)" fg:x="17210" fg:w="30"/><text x="6.5004%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (30 samples, 0.01%)</title><rect x="6.2504%" y="949" width="0.0109%" height="15" fill="rgb(213,3,15)" fg:x="17210" fg:w="30"/><text x="6.5004%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (32 samples, 0.01%)</title><rect x="6.2777%" y="933" width="0.0116%" height="15" fill="rgb(252,211,39)" fg:x="17285" fg:w="32"/><text x="6.5277%" y="943.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (373 samples, 0.14%)</title><rect x="6.1560%" y="981" width="0.1355%" height="15" fill="rgb(223,6,36)" fg:x="16950" fg:w="373"/><text x="6.4060%" y="991.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (81 samples, 0.03%)</title><rect x="6.2621%" y="965" width="0.0294%" height="15" fill="rgb(252,169,45)" fg:x="17242" fg:w="81"/><text x="6.5121%" y="975.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (81 samples, 0.03%)</title><rect x="6.2621%" y="949" width="0.0294%" height="15" fill="rgb(212,48,26)" fg:x="17242" fg:w="81"/><text x="6.5121%" y="959.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (475 samples, 0.17%)</title><rect x="6.1193%" y="1013" width="0.1725%" height="15" fill="rgb(251,102,48)" fg:x="16849" fg:w="475"/><text x="6.3693%" y="1023.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (474 samples, 0.17%)</title><rect x="6.1197%" y="997" width="0.1722%" height="15" fill="rgb(243,208,16)" fg:x="16850" fg:w="474"/><text x="6.3697%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches (32 samples, 0.01%)</title><rect x="6.3038%" y="997" width="0.0116%" height="15" fill="rgb(219,96,24)" fg:x="17357" fg:w="32"/><text x="6.5538%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (32 samples, 0.01%)</title><rect x="6.3038%" y="981" width="0.0116%" height="15" fill="rgb(219,33,29)" fg:x="17357" fg:w="32"/><text x="6.5538%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (32 samples, 0.01%)</title><rect x="6.3038%" y="965" width="0.0116%" height="15" fill="rgb(223,176,5)" fg:x="17357" fg:w="32"/><text x="6.5538%" y="975.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (555 samples, 0.20%)</title><rect x="6.1142%" y="1045" width="0.2016%" height="15" fill="rgb(228,140,14)" fg:x="16835" fg:w="555"/><text x="6.3642%" y="1055.50"></text></g><g><title>zenoh::net::routing::queries::declare_peer_queryable (543 samples, 0.20%)</title><rect x="6.1186%" y="1029" width="0.1972%" height="15" fill="rgb(217,179,31)" fg:x="16847" fg:w="543"/><text x="6.3686%" y="1039.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (38 samples, 0.01%)</title><rect x="6.3020%" y="1013" width="0.0138%" height="15" fill="rgb(230,9,30)" fg:x="17352" fg:w="38"/><text x="6.5520%" y="1023.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (56 samples, 0.02%)</title><rect x="6.3467%" y="949" width="0.0203%" height="15" fill="rgb(230,136,20)" fg:x="17475" fg:w="56"/><text x="6.5967%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches (70 samples, 0.03%)</title><rect x="6.3420%" y="997" width="0.0254%" height="15" fill="rgb(215,210,22)" fg:x="17462" fg:w="70"/><text x="6.5920%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (70 samples, 0.03%)</title><rect x="6.3420%" y="981" width="0.0254%" height="15" fill="rgb(218,43,5)" fg:x="17462" fg:w="70"/><text x="6.5920%" y="991.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_matches::get_matches_from (67 samples, 0.02%)</title><rect x="6.3430%" y="965" width="0.0243%" height="15" fill="rgb(216,11,5)" fg:x="17465" fg:w="67"/><text x="6.5930%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::match_resource (90 samples, 0.03%)</title><rect x="6.3351%" y="1013" width="0.0327%" height="15" fill="rgb(209,82,29)" fg:x="17443" fg:w="90"/><text x="6.5851%" y="1023.50"></text></g><g><title>[libc.so.6] (50 samples, 0.02%)</title><rect x="6.3863%" y="805" width="0.0182%" height="15" fill="rgb(244,115,12)" fg:x="17584" fg:w="50"/><text x="6.6363%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (75 samples, 0.03%)</title><rect x="6.3775%" y="901" width="0.0272%" height="15" fill="rgb(222,82,18)" fg:x="17560" fg:w="75"/><text x="6.6275%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (67 samples, 0.02%)</title><rect x="6.3805%" y="885" width="0.0243%" height="15" fill="rgb(249,227,8)" fg:x="17568" fg:w="67"/><text x="6.6305%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.02%)</title><rect x="6.3805%" y="869" width="0.0243%" height="15" fill="rgb(253,141,45)" fg:x="17568" fg:w="67"/><text x="6.6305%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.02%)</title><rect x="6.3805%" y="853" width="0.0243%" height="15" fill="rgb(234,184,4)" fg:x="17568" fg:w="67"/><text x="6.6305%" y="863.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.02%)</title><rect x="6.3805%" y="837" width="0.0243%" height="15" fill="rgb(218,194,23)" fg:x="17568" fg:w="67"/><text x="6.6305%" y="847.50"></text></g><g><title>malloc (66 samples, 0.02%)</title><rect x="6.3808%" y="821" width="0.0240%" height="15" fill="rgb(235,66,41)" fg:x="17569" fg:w="66"/><text x="6.6308%" y="831.50"></text></g><g><title>&lt;alloc::vec::ExtendFunc&lt;F&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (79 samples, 0.03%)</title><rect x="6.3775%" y="933" width="0.0287%" height="15" fill="rgb(245,217,1)" fg:x="17560" fg:w="79"/><text x="6.6275%" y="943.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes::{{closure}} (79 samples, 0.03%)</title><rect x="6.3775%" y="917" width="0.0287%" height="15" fill="rgb(229,91,1)" fg:x="17560" fg:w="79"/><text x="6.6275%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (95 samples, 0.03%)</title><rect x="6.3754%" y="965" width="0.0345%" height="15" fill="rgb(207,101,30)" fg:x="17554" fg:w="95"/><text x="6.6254%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (93 samples, 0.03%)</title><rect x="6.3761%" y="949" width="0.0338%" height="15" fill="rgb(223,82,49)" fg:x="17556" fg:w="93"/><text x="6.6261%" y="959.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (53 samples, 0.02%)</title><rect x="6.4633%" y="949" width="0.0192%" height="15" fill="rgb(218,167,17)" fg:x="17796" fg:w="53"/><text x="6.7133%" y="959.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (163 samples, 0.06%)</title><rect x="6.4251%" y="965" width="0.0592%" height="15" fill="rgb(208,103,14)" fg:x="17691" fg:w="163"/><text x="6.6751%" y="975.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (321 samples, 0.12%)</title><rect x="6.3685%" y="981" width="0.1166%" height="15" fill="rgb(238,20,8)" fg:x="17535" fg:w="321"/><text x="6.6185%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (30 samples, 0.01%)</title><rect x="6.4876%" y="901" width="0.0109%" height="15" fill="rgb(218,80,54)" fg:x="17863" fg:w="30"/><text x="6.7376%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt; (29 samples, 0.01%)</title><rect x="6.4880%" y="885" width="0.0105%" height="15" fill="rgb(240,144,17)" fg:x="17864" fg:w="29"/><text x="6.7380%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (38 samples, 0.01%)</title><rect x="6.4869%" y="965" width="0.0138%" height="15" fill="rgb(245,27,50)" fg:x="17861" fg:w="38"/><text x="6.7369%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;]&gt; (38 samples, 0.01%)</title><rect x="6.4869%" y="949" width="0.0138%" height="15" fill="rgb(251,51,7)" fg:x="17861" fg:w="38"/><text x="6.7369%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt; (38 samples, 0.01%)</title><rect x="6.4869%" y="933" width="0.0138%" height="15" fill="rgb(245,217,29)" fg:x="17861" fg:w="38"/><text x="6.7369%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.01%)</title><rect x="6.4869%" y="917" width="0.0138%" height="15" fill="rgb(221,176,29)" fg:x="17861" fg:w="38"/><text x="6.7369%" y="927.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="6.5087%" y="805" width="0.0109%" height="15" fill="rgb(212,180,24)" fg:x="17921" fg:w="30"/><text x="6.7587%" y="815.50"></text></g><g><title>&lt;alloc::vec::ExtendFunc&lt;F&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (52 samples, 0.02%)</title><rect x="6.5010%" y="933" width="0.0189%" height="15" fill="rgb(254,24,2)" fg:x="17900" fg:w="52"/><text x="6.7510%" y="943.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes::{{closure}} (52 samples, 0.02%)</title><rect x="6.5010%" y="917" width="0.0189%" height="15" fill="rgb(230,100,2)" fg:x="17900" fg:w="52"/><text x="6.7510%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (52 samples, 0.02%)</title><rect x="6.5010%" y="901" width="0.0189%" height="15" fill="rgb(219,142,25)" fg:x="17900" fg:w="52"/><text x="6.7510%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (46 samples, 0.02%)</title><rect x="6.5032%" y="885" width="0.0167%" height="15" fill="rgb(240,73,43)" fg:x="17906" fg:w="46"/><text x="6.7532%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.02%)</title><rect x="6.5032%" y="869" width="0.0167%" height="15" fill="rgb(214,114,15)" fg:x="17906" fg:w="46"/><text x="6.7532%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.02%)</title><rect x="6.5032%" y="853" width="0.0167%" height="15" fill="rgb(207,130,4)" fg:x="17906" fg:w="46"/><text x="6.7532%" y="863.50"></text></g><g><title>alloc::alloc::alloc (46 samples, 0.02%)</title><rect x="6.5032%" y="837" width="0.0167%" height="15" fill="rgb(221,25,40)" fg:x="17906" fg:w="46"/><text x="6.7532%" y="847.50"></text></g><g><title>malloc (46 samples, 0.02%)</title><rect x="6.5032%" y="821" width="0.0167%" height="15" fill="rgb(241,184,7)" fg:x="17906" fg:w="46"/><text x="6.7532%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (59 samples, 0.02%)</title><rect x="6.5007%" y="965" width="0.0214%" height="15" fill="rgb(235,159,4)" fg:x="17899" fg:w="59"/><text x="6.7507%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (59 samples, 0.02%)</title><rect x="6.5007%" y="949" width="0.0214%" height="15" fill="rgb(214,87,48)" fg:x="17899" fg:w="59"/><text x="6.7507%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (28 samples, 0.01%)</title><rect x="6.5384%" y="949" width="0.0102%" height="15" fill="rgb(246,198,24)" fg:x="18003" fg:w="28"/><text x="6.7884%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (28 samples, 0.01%)</title><rect x="6.5384%" y="933" width="0.0102%" height="15" fill="rgb(209,66,40)" fg:x="18003" fg:w="28"/><text x="6.7884%" y="943.50"></text></g><g><title>alloc::str::join_generic_copy (33 samples, 0.01%)</title><rect x="6.5693%" y="885" width="0.0120%" height="15" fill="rgb(233,147,39)" fg:x="18088" fg:w="33"/><text x="6.8193%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (41 samples, 0.01%)</title><rect x="6.5679%" y="933" width="0.0149%" height="15" fill="rgb(231,145,52)" fg:x="18084" fg:w="41"/><text x="6.8179%" y="943.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (39 samples, 0.01%)</title><rect x="6.5686%" y="917" width="0.0142%" height="15" fill="rgb(206,20,26)" fg:x="18086" fg:w="39"/><text x="6.8186%" y="927.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (37 samples, 0.01%)</title><rect x="6.5693%" y="901" width="0.0134%" height="15" fill="rgb(238,220,4)" fg:x="18088" fg:w="37"/><text x="6.8193%" y="911.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (76 samples, 0.03%)</title><rect x="6.5631%" y="949" width="0.0276%" height="15" fill="rgb(252,195,42)" fg:x="18071" fg:w="76"/><text x="6.8131%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (29 samples, 0.01%)</title><rect x="6.6020%" y="917" width="0.0105%" height="15" fill="rgb(209,10,6)" fg:x="18178" fg:w="29"/><text x="6.8520%" y="927.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_matches_routes (685 samples, 0.25%)</title><rect x="6.3677%" y="1013" width="0.2488%" height="15" fill="rgb(229,3,52)" fg:x="17533" fg:w="685"/><text x="6.6177%" y="1023.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_routes (684 samples, 0.25%)</title><rect x="6.3681%" y="997" width="0.2484%" height="15" fill="rgb(253,49,37)" fg:x="17534" fg:w="684"/><text x="6.6181%" y="1007.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (362 samples, 0.13%)</title><rect x="6.4850%" y="981" width="0.1315%" height="15" fill="rgb(240,103,49)" fg:x="17856" fg:w="362"/><text x="6.7350%" y="991.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (238 samples, 0.09%)</title><rect x="6.5301%" y="965" width="0.0864%" height="15" fill="rgb(250,182,30)" fg:x="17980" fg:w="238"/><text x="6.7801%" y="975.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (58 samples, 0.02%)</title><rect x="6.5955%" y="949" width="0.0211%" height="15" fill="rgb(248,8,30)" fg:x="18160" fg:w="58"/><text x="6.8455%" y="959.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (58 samples, 0.02%)</title><rect x="6.5955%" y="933" width="0.0211%" height="15" fill="rgb(237,120,30)" fg:x="18160" fg:w="58"/><text x="6.8455%" y="943.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (829 samples, 0.30%)</title><rect x="6.3158%" y="1045" width="0.3011%" height="15" fill="rgb(221,146,34)" fg:x="17390" fg:w="829"/><text x="6.5658%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (802 samples, 0.29%)</title><rect x="6.3256%" y="1029" width="0.2913%" height="15" fill="rgb(242,55,13)" fg:x="17417" fg:w="802"/><text x="6.5756%" y="1039.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,413 samples, 0.51%)</title><rect x="6.1128%" y="1061" width="0.5132%" height="15" fill="rgb(242,112,31)" fg:x="16831" fg:w="1413"/><text x="6.3628%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (5,650 samples, 2.05%)</title><rect x="4.5754%" y="1221" width="2.0520%" height="15" fill="rgb(249,192,27)" fg:x="12598" fg:w="5650"/><text x="4.8254%" y="1231.50">z..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,650 samples, 2.05%)</title><rect x="4.5754%" y="1205" width="2.0520%" height="15" fill="rgb(208,204,44)" fg:x="12598" fg:w="5650"/><text x="4.8254%" y="1215.50">&lt;..</text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (5,650 samples, 2.05%)</title><rect x="4.5754%" y="1189" width="2.0520%" height="15" fill="rgb(208,93,54)" fg:x="12598" fg:w="5650"/><text x="4.8254%" y="1199.50">z..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,650 samples, 2.05%)</title><rect x="4.5754%" y="1173" width="2.0520%" height="15" fill="rgb(242,1,31)" fg:x="12598" fg:w="5650"/><text x="4.8254%" y="1183.50">&lt;..</text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (5,650 samples, 2.05%)</title><rect x="4.5754%" y="1157" width="2.0520%" height="15" fill="rgb(241,83,25)" fg:x="12598" fg:w="5650"/><text x="4.8254%" y="1167.50">z..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (1,418 samples, 0.51%)</title><rect x="6.1124%" y="1141" width="0.5150%" height="15" fill="rgb(205,169,50)" fg:x="16830" fg:w="1418"/><text x="6.3624%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (1,417 samples, 0.51%)</title><rect x="6.1128%" y="1125" width="0.5146%" height="15" fill="rgb(239,186,37)" fg:x="16831" fg:w="1417"/><text x="6.3628%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (1,417 samples, 0.51%)</title><rect x="6.1128%" y="1109" width="0.5146%" height="15" fill="rgb(205,221,10)" fg:x="16831" fg:w="1417"/><text x="6.3628%" y="1119.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,417 samples, 0.51%)</title><rect x="6.1128%" y="1093" width="0.5146%" height="15" fill="rgb(218,196,15)" fg:x="16831" fg:w="1417"/><text x="6.3628%" y="1103.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (1,417 samples, 0.51%)</title><rect x="6.1128%" y="1077" width="0.5146%" height="15" fill="rgb(218,196,35)" fg:x="16831" fg:w="1417"/><text x="6.3628%" y="1087.50"></text></g><g><title>rsa::internals::decrypt (46 samples, 0.02%)</title><rect x="6.6325%" y="997" width="0.0167%" height="15" fill="rgb(233,63,24)" fg:x="18262" fg:w="46"/><text x="6.8825%" y="1007.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (45 samples, 0.02%)</title><rect x="6.6329%" y="981" width="0.0163%" height="15" fill="rgb(225,8,4)" fg:x="18263" fg:w="45"/><text x="6.8829%" y="991.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (45 samples, 0.02%)</title><rect x="6.6329%" y="965" width="0.0163%" height="15" fill="rgb(234,105,35)" fg:x="18263" fg:w="45"/><text x="6.8829%" y="975.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (57 samples, 0.02%)</title><rect x="6.6325%" y="1141" width="0.0207%" height="15" fill="rgb(236,21,32)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (57 samples, 0.02%)</title><rect x="6.6325%" y="1125" width="0.0207%" height="15" fill="rgb(228,109,6)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.02%)</title><rect x="6.6325%" y="1109" width="0.0207%" height="15" fill="rgb(229,215,31)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1119.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (57 samples, 0.02%)</title><rect x="6.6325%" y="1093" width="0.0207%" height="15" fill="rgb(221,52,54)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1103.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (57 samples, 0.02%)</title><rect x="6.6325%" y="1077" width="0.0207%" height="15" fill="rgb(252,129,43)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1087.50"></text></g><g><title>rsa::pkcs1v15::decrypt (57 samples, 0.02%)</title><rect x="6.6325%" y="1061" width="0.0207%" height="15" fill="rgb(248,183,27)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1071.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (57 samples, 0.02%)</title><rect x="6.6325%" y="1045" width="0.0207%" height="15" fill="rgb(250,0,22)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1055.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (57 samples, 0.02%)</title><rect x="6.6325%" y="1029" width="0.0207%" height="15" fill="rgb(213,166,10)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1039.50"></text></g><g><title>rsa::internals::decrypt_and_check (57 samples, 0.02%)</title><rect x="6.6325%" y="1013" width="0.0207%" height="15" fill="rgb(207,163,36)" fg:x="18262" fg:w="57"/><text x="6.8825%" y="1023.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="6.6554%" y="901" width="0.0142%" height="15" fill="rgb(208,122,22)" fg:x="18325" fg:w="39"/><text x="6.9054%" y="911.50"></text></g><g><title>[libc.so.6] (41 samples, 0.01%)</title><rect x="6.6550%" y="917" width="0.0149%" height="15" fill="rgb(207,104,49)" fg:x="18324" fg:w="41"/><text x="6.9050%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (45 samples, 0.02%)</title><rect x="6.6543%" y="981" width="0.0163%" height="15" fill="rgb(248,211,50)" fg:x="18322" fg:w="45"/><text x="6.9043%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (45 samples, 0.02%)</title><rect x="6.6543%" y="965" width="0.0163%" height="15" fill="rgb(217,13,45)" fg:x="18322" fg:w="45"/><text x="6.9043%" y="975.50"></text></g><g><title>alloc::alloc::realloc (45 samples, 0.02%)</title><rect x="6.6543%" y="949" width="0.0163%" height="15" fill="rgb(211,216,49)" fg:x="18322" fg:w="45"/><text x="6.9043%" y="959.50"></text></g><g><title>realloc (44 samples, 0.02%)</title><rect x="6.6547%" y="933" width="0.0160%" height="15" fill="rgb(221,58,53)" fg:x="18323" fg:w="44"/><text x="6.9047%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (48 samples, 0.02%)</title><rect x="6.6536%" y="1029" width="0.0174%" height="15" fill="rgb(220,112,41)" fg:x="18320" fg:w="48"/><text x="6.9036%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (47 samples, 0.02%)</title><rect x="6.6539%" y="1013" width="0.0171%" height="15" fill="rgb(236,38,28)" fg:x="18321" fg:w="47"/><text x="6.9039%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (46 samples, 0.02%)</title><rect x="6.6543%" y="997" width="0.0167%" height="15" fill="rgb(227,195,22)" fg:x="18322" fg:w="46"/><text x="6.9043%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.02%)</title><rect x="6.6536%" y="1045" width="0.0178%" height="15" fill="rgb(214,55,33)" fg:x="18320" fg:w="49"/><text x="6.9036%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (33 samples, 0.01%)</title><rect x="6.6932%" y="853" width="0.0120%" height="15" fill="rgb(248,80,13)" fg:x="18429" fg:w="33"/><text x="6.9432%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33 samples, 0.01%)</title><rect x="6.6932%" y="837" width="0.0120%" height="15" fill="rgb(238,52,6)" fg:x="18429" fg:w="33"/><text x="6.9432%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (33 samples, 0.01%)</title><rect x="6.6932%" y="821" width="0.0120%" height="15" fill="rgb(224,198,47)" fg:x="18429" fg:w="33"/><text x="6.9432%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.01%)</title><rect x="6.6935%" y="805" width="0.0116%" height="15" fill="rgb(233,171,20)" fg:x="18430" fg:w="32"/><text x="6.9435%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.01%)</title><rect x="6.6935%" y="789" width="0.0116%" height="15" fill="rgb(241,30,25)" fg:x="18430" fg:w="32"/><text x="6.9435%" y="799.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.01%)</title><rect x="6.6935%" y="773" width="0.0116%" height="15" fill="rgb(207,171,38)" fg:x="18430" fg:w="32"/><text x="6.9435%" y="783.50"></text></g><g><title>malloc (31 samples, 0.01%)</title><rect x="6.6939%" y="757" width="0.0113%" height="15" fill="rgb(234,70,1)" fg:x="18431" fg:w="31"/><text x="6.9439%" y="767.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (153 samples, 0.06%)</title><rect x="6.6772%" y="949" width="0.0556%" height="15" fill="rgb(232,178,18)" fg:x="18385" fg:w="153"/><text x="6.9272%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (150 samples, 0.05%)</title><rect x="6.6783%" y="933" width="0.0545%" height="15" fill="rgb(241,78,40)" fg:x="18388" fg:w="150"/><text x="6.9283%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (109 samples, 0.04%)</title><rect x="6.6932%" y="917" width="0.0396%" height="15" fill="rgb(222,35,25)" fg:x="18429" fg:w="109"/><text x="6.9432%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (109 samples, 0.04%)</title><rect x="6.6932%" y="901" width="0.0396%" height="15" fill="rgb(207,92,16)" fg:x="18429" fg:w="109"/><text x="6.9432%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (109 samples, 0.04%)</title><rect x="6.6932%" y="885" width="0.0396%" height="15" fill="rgb(216,59,51)" fg:x="18429" fg:w="109"/><text x="6.9432%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (109 samples, 0.04%)</title><rect x="6.6932%" y="869" width="0.0396%" height="15" fill="rgb(213,80,28)" fg:x="18429" fg:w="109"/><text x="6.9432%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (76 samples, 0.03%)</title><rect x="6.7051%" y="853" width="0.0276%" height="15" fill="rgb(220,93,7)" fg:x="18462" fg:w="76"/><text x="6.9551%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (76 samples, 0.03%)</title><rect x="6.7051%" y="837" width="0.0276%" height="15" fill="rgb(225,24,44)" fg:x="18462" fg:w="76"/><text x="6.9551%" y="847.50"></text></g><g><title>[libc.so.6] (76 samples, 0.03%)</title><rect x="6.7051%" y="821" width="0.0276%" height="15" fill="rgb(243,74,40)" fg:x="18462" fg:w="76"/><text x="6.9551%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (184 samples, 0.07%)</title><rect x="6.6757%" y="1029" width="0.0668%" height="15" fill="rgb(228,39,7)" fg:x="18381" fg:w="184"/><text x="6.9257%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (180 samples, 0.07%)</title><rect x="6.6772%" y="1013" width="0.0654%" height="15" fill="rgb(227,79,8)" fg:x="18385" fg:w="180"/><text x="6.9272%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (180 samples, 0.07%)</title><rect x="6.6772%" y="997" width="0.0654%" height="15" fill="rgb(236,58,11)" fg:x="18385" fg:w="180"/><text x="6.9272%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (180 samples, 0.07%)</title><rect x="6.6772%" y="981" width="0.0654%" height="15" fill="rgb(249,63,35)" fg:x="18385" fg:w="180"/><text x="6.9272%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (180 samples, 0.07%)</title><rect x="6.6772%" y="965" width="0.0654%" height="15" fill="rgb(252,114,16)" fg:x="18385" fg:w="180"/><text x="6.9272%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (70 samples, 0.03%)</title><rect x="6.7458%" y="805" width="0.0254%" height="15" fill="rgb(254,151,24)" fg:x="18574" fg:w="70"/><text x="6.9958%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (70 samples, 0.03%)</title><rect x="6.7458%" y="789" width="0.0254%" height="15" fill="rgb(253,54,39)" fg:x="18574" fg:w="70"/><text x="6.9958%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (39 samples, 0.01%)</title><rect x="6.7571%" y="773" width="0.0142%" height="15" fill="rgb(243,25,45)" fg:x="18605" fg:w="39"/><text x="7.0071%" y="783.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (39 samples, 0.01%)</title><rect x="6.7571%" y="757" width="0.0142%" height="15" fill="rgb(234,134,9)" fg:x="18605" fg:w="39"/><text x="7.0071%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (39 samples, 0.01%)</title><rect x="6.7571%" y="741" width="0.0142%" height="15" fill="rgb(227,166,31)" fg:x="18605" fg:w="39"/><text x="7.0071%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (43 samples, 0.02%)</title><rect x="6.7727%" y="741" width="0.0156%" height="15" fill="rgb(245,143,41)" fg:x="18648" fg:w="43"/><text x="7.0227%" y="751.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (43 samples, 0.02%)</title><rect x="6.7727%" y="725" width="0.0156%" height="15" fill="rgb(238,181,32)" fg:x="18648" fg:w="43"/><text x="7.0227%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (44 samples, 0.02%)</title><rect x="6.7727%" y="757" width="0.0160%" height="15" fill="rgb(224,113,18)" fg:x="18648" fg:w="44"/><text x="7.0227%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (62 samples, 0.02%)</title><rect x="6.7712%" y="805" width="0.0225%" height="15" fill="rgb(240,229,28)" fg:x="18644" fg:w="62"/><text x="7.0212%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (62 samples, 0.02%)</title><rect x="6.7712%" y="789" width="0.0225%" height="15" fill="rgb(250,185,3)" fg:x="18644" fg:w="62"/><text x="7.0212%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (62 samples, 0.02%)</title><rect x="6.7712%" y="773" width="0.0225%" height="15" fill="rgb(212,59,25)" fg:x="18644" fg:w="62"/><text x="7.0212%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 0.05%)</title><rect x="6.7455%" y="933" width="0.0494%" height="15" fill="rgb(221,87,20)" fg:x="18573" fg:w="136"/><text x="6.9955%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (136 samples, 0.05%)</title><rect x="6.7455%" y="917" width="0.0494%" height="15" fill="rgb(213,74,28)" fg:x="18573" fg:w="136"/><text x="6.9955%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (136 samples, 0.05%)</title><rect x="6.7455%" y="901" width="0.0494%" height="15" fill="rgb(224,132,34)" fg:x="18573" fg:w="136"/><text x="6.9955%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (136 samples, 0.05%)</title><rect x="6.7455%" y="885" width="0.0494%" height="15" fill="rgb(222,101,24)" fg:x="18573" fg:w="136"/><text x="6.9955%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (135 samples, 0.05%)</title><rect x="6.7458%" y="869" width="0.0490%" height="15" fill="rgb(254,142,4)" fg:x="18574" fg:w="135"/><text x="6.9958%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (135 samples, 0.05%)</title><rect x="6.7458%" y="853" width="0.0490%" height="15" fill="rgb(230,229,49)" fg:x="18574" fg:w="135"/><text x="6.9958%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (135 samples, 0.05%)</title><rect x="6.7458%" y="837" width="0.0490%" height="15" fill="rgb(238,70,47)" fg:x="18574" fg:w="135"/><text x="6.9958%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (135 samples, 0.05%)</title><rect x="6.7458%" y="821" width="0.0490%" height="15" fill="rgb(231,160,17)" fg:x="18574" fg:w="135"/><text x="6.9958%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (36 samples, 0.01%)</title><rect x="6.7956%" y="869" width="0.0131%" height="15" fill="rgb(218,68,53)" fg:x="18711" fg:w="36"/><text x="7.0456%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (35 samples, 0.01%)</title><rect x="6.7959%" y="853" width="0.0127%" height="15" fill="rgb(236,111,10)" fg:x="18712" fg:w="35"/><text x="7.0459%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (35 samples, 0.01%)</title><rect x="6.7959%" y="837" width="0.0127%" height="15" fill="rgb(224,34,41)" fg:x="18712" fg:w="35"/><text x="7.0459%" y="847.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.01%)</title><rect x="6.7963%" y="821" width="0.0123%" height="15" fill="rgb(241,118,19)" fg:x="18713" fg:w="34"/><text x="7.0463%" y="831.50"></text></g><g><title>realloc (33 samples, 0.01%)</title><rect x="6.7967%" y="805" width="0.0120%" height="15" fill="rgb(238,129,25)" fg:x="18714" fg:w="33"/><text x="7.0467%" y="815.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="6.7981%" y="789" width="0.0105%" height="15" fill="rgb(238,22,31)" fg:x="18718" fg:w="29"/><text x="7.0481%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (175 samples, 0.06%)</title><rect x="6.7455%" y="965" width="0.0636%" height="15" fill="rgb(222,174,48)" fg:x="18573" fg:w="175"/><text x="6.9955%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (175 samples, 0.06%)</title><rect x="6.7455%" y="949" width="0.0636%" height="15" fill="rgb(206,152,40)" fg:x="18573" fg:w="175"/><text x="6.9955%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 0.01%)</title><rect x="6.7948%" y="933" width="0.0142%" height="15" fill="rgb(218,99,54)" fg:x="18709" fg:w="39"/><text x="7.0448%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.01%)</title><rect x="6.7948%" y="917" width="0.0142%" height="15" fill="rgb(220,174,26)" fg:x="18709" fg:w="39"/><text x="7.0448%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.01%)</title><rect x="6.7952%" y="901" width="0.0138%" height="15" fill="rgb(245,116,9)" fg:x="18710" fg:w="38"/><text x="7.0452%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.01%)</title><rect x="6.7952%" y="885" width="0.0138%" height="15" fill="rgb(209,72,35)" fg:x="18710" fg:w="38"/><text x="7.0452%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.01%)</title><rect x="6.8094%" y="837" width="0.0116%" height="15" fill="rgb(226,126,21)" fg:x="18749" fg:w="32"/><text x="7.0594%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32 samples, 0.01%)</title><rect x="6.8094%" y="821" width="0.0116%" height="15" fill="rgb(227,192,1)" fg:x="18749" fg:w="32"/><text x="7.0594%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (29 samples, 0.01%)</title><rect x="6.8105%" y="805" width="0.0105%" height="15" fill="rgb(237,180,29)" fg:x="18752" fg:w="29"/><text x="7.0605%" y="815.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (29 samples, 0.01%)</title><rect x="6.8105%" y="789" width="0.0105%" height="15" fill="rgb(230,197,35)" fg:x="18752" fg:w="29"/><text x="7.0605%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.02%)</title><rect x="6.8090%" y="965" width="0.0178%" height="15" fill="rgb(246,193,31)" fg:x="18748" fg:w="49"/><text x="7.0590%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (49 samples, 0.02%)</title><rect x="6.8090%" y="949" width="0.0178%" height="15" fill="rgb(241,36,4)" fg:x="18748" fg:w="49"/><text x="7.0590%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (49 samples, 0.02%)</title><rect x="6.8090%" y="933" width="0.0178%" height="15" fill="rgb(241,130,17)" fg:x="18748" fg:w="49"/><text x="7.0590%" y="943.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (49 samples, 0.02%)</title><rect x="6.8090%" y="917" width="0.0178%" height="15" fill="rgb(206,137,32)" fg:x="18748" fg:w="49"/><text x="7.0590%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (49 samples, 0.02%)</title><rect x="6.8090%" y="901" width="0.0178%" height="15" fill="rgb(237,228,51)" fg:x="18748" fg:w="49"/><text x="7.0590%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (49 samples, 0.02%)</title><rect x="6.8090%" y="885" width="0.0178%" height="15" fill="rgb(243,6,42)" fg:x="18748" fg:w="49"/><text x="7.0590%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (49 samples, 0.02%)</title><rect x="6.8090%" y="869" width="0.0178%" height="15" fill="rgb(251,74,28)" fg:x="18748" fg:w="49"/><text x="7.0590%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (48 samples, 0.02%)</title><rect x="6.8094%" y="853" width="0.0174%" height="15" fill="rgb(218,20,49)" fg:x="18749" fg:w="48"/><text x="7.0594%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (240 samples, 0.09%)</title><rect x="6.7436%" y="1029" width="0.0872%" height="15" fill="rgb(238,28,14)" fg:x="18568" fg:w="240"/><text x="6.9936%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (240 samples, 0.09%)</title><rect x="6.7436%" y="1013" width="0.0872%" height="15" fill="rgb(229,40,46)" fg:x="18568" fg:w="240"/><text x="6.9936%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (240 samples, 0.09%)</title><rect x="6.7436%" y="997" width="0.0872%" height="15" fill="rgb(244,195,20)" fg:x="18568" fg:w="240"/><text x="6.9936%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (239 samples, 0.09%)</title><rect x="6.7440%" y="981" width="0.0868%" height="15" fill="rgb(253,56,35)" fg:x="18569" fg:w="239"/><text x="6.9940%" y="991.50"></text></g><g><title>getifaddrs (64 samples, 0.02%)</title><rect x="6.8424%" y="901" width="0.0232%" height="15" fill="rgb(210,149,44)" fg:x="18840" fg:w="64"/><text x="7.0924%" y="911.50"></text></g><g><title>[libc.so.6] (64 samples, 0.02%)</title><rect x="6.8424%" y="885" width="0.0232%" height="15" fill="rgb(240,135,12)" fg:x="18840" fg:w="64"/><text x="7.0924%" y="895.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (105 samples, 0.04%)</title><rect x="6.8312%" y="981" width="0.0381%" height="15" fill="rgb(251,24,50)" fg:x="18809" fg:w="105"/><text x="7.0812%" y="991.50"></text></g><g><title>zenoh_util::net::get_local_addresses (90 samples, 0.03%)</title><rect x="6.8366%" y="965" width="0.0327%" height="15" fill="rgb(243,200,47)" fg:x="18824" fg:w="90"/><text x="7.0866%" y="975.50"></text></g><g><title>pnet_datalink::interfaces (87 samples, 0.03%)</title><rect x="6.8377%" y="949" width="0.0316%" height="15" fill="rgb(224,166,26)" fg:x="18827" fg:w="87"/><text x="7.0877%" y="959.50"></text></g><g><title>pnet_datalink::backend::interfaces (87 samples, 0.03%)</title><rect x="6.8377%" y="933" width="0.0316%" height="15" fill="rgb(233,0,47)" fg:x="18827" fg:w="87"/><text x="7.0877%" y="943.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (87 samples, 0.03%)</title><rect x="6.8377%" y="917" width="0.0316%" height="15" fill="rgb(253,80,5)" fg:x="18827" fg:w="87"/><text x="7.0877%" y="927.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (599 samples, 0.22%)</title><rect x="6.6532%" y="1061" width="0.2175%" height="15" fill="rgb(214,133,25)" fg:x="18319" fg:w="599"/><text x="6.9032%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (548 samples, 0.20%)</title><rect x="6.6717%" y="1045" width="0.1990%" height="15" fill="rgb(209,27,14)" fg:x="18370" fg:w="548"/><text x="6.9217%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (110 samples, 0.04%)</title><rect x="6.8308%" y="1029" width="0.0400%" height="15" fill="rgb(219,102,51)" fg:x="18808" fg:w="110"/><text x="7.0808%" y="1039.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (110 samples, 0.04%)</title><rect x="6.8308%" y="1013" width="0.0400%" height="15" fill="rgb(237,18,16)" fg:x="18808" fg:w="110"/><text x="7.0808%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (110 samples, 0.04%)</title><rect x="6.8308%" y="997" width="0.0400%" height="15" fill="rgb(241,85,17)" fg:x="18808" fg:w="110"/><text x="7.0808%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::ZenohMessage&gt; (28 samples, 0.01%)</title><rect x="6.8740%" y="965" width="0.0102%" height="15" fill="rgb(236,90,42)" fg:x="18927" fg:w="28"/><text x="7.1240%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::ZenohBody&gt; (28 samples, 0.01%)</title><rect x="6.8740%" y="949" width="0.0102%" height="15" fill="rgb(249,57,21)" fg:x="18927" fg:w="28"/><text x="7.1240%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::LinkStateList&gt; (28 samples, 0.01%)</title><rect x="6.8740%" y="933" width="0.0102%" height="15" fill="rgb(243,12,36)" fg:x="18927" fg:w="28"/><text x="7.1240%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol::proto::msg::LinkState&gt;&gt; (28 samples, 0.01%)</title><rect x="6.8740%" y="917" width="0.0102%" height="15" fill="rgb(253,128,47)" fg:x="18927" fg:w="28"/><text x="7.1240%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="6.8740%" y="901" width="0.0102%" height="15" fill="rgb(207,33,20)" fg:x="18927" fg:w="28"/><text x="7.1240%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol::proto::msg::LinkState]&gt; (28 samples, 0.01%)</title><rect x="6.8740%" y="885" width="0.0102%" height="15" fill="rgb(233,215,35)" fg:x="18927" fg:w="28"/><text x="7.1240%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::LinkState&gt; (28 samples, 0.01%)</title><rect x="6.8740%" y="869" width="0.0102%" height="15" fill="rgb(249,188,52)" fg:x="18927" fg:w="28"/><text x="7.1240%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40 samples, 0.01%)</title><rect x="6.8962%" y="837" width="0.0145%" height="15" fill="rgb(225,12,32)" fg:x="18988" fg:w="40"/><text x="7.1462%" y="847.50"></text></g><g><title>alloc::string::String::push_str (39 samples, 0.01%)</title><rect x="6.8965%" y="821" width="0.0142%" height="15" fill="rgb(247,98,14)" fg:x="18989" fg:w="39"/><text x="7.1465%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (39 samples, 0.01%)</title><rect x="6.8965%" y="805" width="0.0142%" height="15" fill="rgb(247,219,48)" fg:x="18989" fg:w="39"/><text x="7.1465%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (39 samples, 0.01%)</title><rect x="6.8965%" y="789" width="0.0142%" height="15" fill="rgb(253,60,48)" fg:x="18989" fg:w="39"/><text x="7.1465%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (39 samples, 0.01%)</title><rect x="6.8965%" y="773" width="0.0142%" height="15" fill="rgb(245,15,52)" fg:x="18989" fg:w="39"/><text x="7.1465%" y="783.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::fmt::Display&gt;::fmt (58 samples, 0.02%)</title><rect x="6.8940%" y="853" width="0.0211%" height="15" fill="rgb(220,133,28)" fg:x="18982" fg:w="58"/><text x="7.1440%" y="863.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (65 samples, 0.02%)</title><rect x="6.8940%" y="869" width="0.0236%" height="15" fill="rgb(217,180,4)" fg:x="18982" fg:w="65"/><text x="7.1440%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (98 samples, 0.04%)</title><rect x="6.8940%" y="885" width="0.0356%" height="15" fill="rgb(251,24,1)" fg:x="18982" fg:w="98"/><text x="7.1440%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (105 samples, 0.04%)</title><rect x="6.8936%" y="901" width="0.0381%" height="15" fill="rgb(212,185,49)" fg:x="18981" fg:w="105"/><text x="7.1436%" y="911.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (53 samples, 0.02%)</title><rect x="6.9405%" y="885" width="0.0192%" height="15" fill="rgb(215,175,22)" fg:x="19110" fg:w="53"/><text x="7.1905%" y="895.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (44 samples, 0.02%)</title><rect x="6.9438%" y="869" width="0.0160%" height="15" fill="rgb(250,205,14)" fg:x="19119" fg:w="44"/><text x="7.1938%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (60 samples, 0.02%)</title><rect x="6.9383%" y="901" width="0.0218%" height="15" fill="rgb(225,211,22)" fg:x="19104" fg:w="60"/><text x="7.1883%" y="911.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (851 samples, 0.31%)</title><rect x="6.6532%" y="1077" width="0.3091%" height="15" fill="rgb(251,179,42)" fg:x="18319" fg:w="851"/><text x="6.9032%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (252 samples, 0.09%)</title><rect x="6.8708%" y="1061" width="0.0915%" height="15" fill="rgb(208,216,51)" fg:x="18918" fg:w="252"/><text x="7.1208%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (251 samples, 0.09%)</title><rect x="6.8711%" y="1045" width="0.0912%" height="15" fill="rgb(235,36,11)" fg:x="18919" fg:w="251"/><text x="7.1211%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (251 samples, 0.09%)</title><rect x="6.8711%" y="1029" width="0.0912%" height="15" fill="rgb(213,189,28)" fg:x="18919" fg:w="251"/><text x="7.1211%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (250 samples, 0.09%)</title><rect x="6.8715%" y="1013" width="0.0908%" height="15" fill="rgb(227,203,42)" fg:x="18920" fg:w="250"/><text x="7.1215%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (249 samples, 0.09%)</title><rect x="6.8718%" y="997" width="0.0904%" height="15" fill="rgb(244,72,36)" fg:x="18921" fg:w="249"/><text x="7.1218%" y="1007.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (243 samples, 0.09%)</title><rect x="6.8740%" y="981" width="0.0883%" height="15" fill="rgb(213,53,17)" fg:x="18927" fg:w="243"/><text x="7.1240%" y="991.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (203 samples, 0.07%)</title><rect x="6.8885%" y="965" width="0.0737%" height="15" fill="rgb(207,167,3)" fg:x="18967" fg:w="203"/><text x="7.1385%" y="975.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (199 samples, 0.07%)</title><rect x="6.8900%" y="949" width="0.0723%" height="15" fill="rgb(216,98,30)" fg:x="18971" fg:w="199"/><text x="7.1400%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (199 samples, 0.07%)</title><rect x="6.8900%" y="933" width="0.0723%" height="15" fill="rgb(236,123,15)" fg:x="18971" fg:w="199"/><text x="7.1400%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (197 samples, 0.07%)</title><rect x="6.8907%" y="917" width="0.0715%" height="15" fill="rgb(248,81,50)" fg:x="18973" fg:w="197"/><text x="7.1407%" y="927.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="7.0059%" y="869" width="0.0116%" height="15" fill="rgb(214,120,4)" fg:x="19290" fg:w="32"/><text x="7.2559%" y="879.50"></text></g><g><title>getifaddrs (128 samples, 0.05%)</title><rect x="6.9833%" y="901" width="0.0465%" height="15" fill="rgb(208,179,34)" fg:x="19228" fg:w="128"/><text x="7.2333%" y="911.50"></text></g><g><title>[libc.so.6] (128 samples, 0.05%)</title><rect x="6.9833%" y="885" width="0.0465%" height="15" fill="rgb(227,140,7)" fg:x="19228" fg:w="128"/><text x="7.2333%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (187 samples, 0.07%)</title><rect x="6.9652%" y="1061" width="0.0679%" height="15" fill="rgb(214,22,6)" fg:x="19178" fg:w="187"/><text x="7.2152%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (187 samples, 0.07%)</title><rect x="6.9652%" y="1045" width="0.0679%" height="15" fill="rgb(207,137,27)" fg:x="19178" fg:w="187"/><text x="7.2152%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (187 samples, 0.07%)</title><rect x="6.9652%" y="1029" width="0.0679%" height="15" fill="rgb(210,8,46)" fg:x="19178" fg:w="187"/><text x="7.2152%" y="1039.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (187 samples, 0.07%)</title><rect x="6.9652%" y="1013" width="0.0679%" height="15" fill="rgb(240,16,54)" fg:x="19178" fg:w="187"/><text x="7.2152%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (187 samples, 0.07%)</title><rect x="6.9652%" y="997" width="0.0679%" height="15" fill="rgb(211,209,29)" fg:x="19178" fg:w="187"/><text x="7.2152%" y="1007.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (187 samples, 0.07%)</title><rect x="6.9652%" y="981" width="0.0679%" height="15" fill="rgb(226,228,24)" fg:x="19178" fg:w="187"/><text x="7.2152%" y="991.50"></text></g><g><title>zenoh_util::net::get_local_addresses (176 samples, 0.06%)</title><rect x="6.9692%" y="965" width="0.0639%" height="15" fill="rgb(222,84,9)" fg:x="19189" fg:w="176"/><text x="7.2192%" y="975.50"></text></g><g><title>pnet_datalink::interfaces (170 samples, 0.06%)</title><rect x="6.9714%" y="949" width="0.0617%" height="15" fill="rgb(234,203,30)" fg:x="19195" fg:w="170"/><text x="7.2214%" y="959.50"></text></g><g><title>pnet_datalink::backend::interfaces (170 samples, 0.06%)</title><rect x="6.9714%" y="933" width="0.0617%" height="15" fill="rgb(238,109,14)" fg:x="19195" fg:w="170"/><text x="7.2214%" y="943.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (170 samples, 0.06%)</title><rect x="6.9714%" y="917" width="0.0617%" height="15" fill="rgb(233,206,34)" fg:x="19195" fg:w="170"/><text x="7.2214%" y="927.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (28 samples, 0.01%)</title><rect x="7.0444%" y="965" width="0.0102%" height="15" fill="rgb(220,167,47)" fg:x="19396" fg:w="28"/><text x="7.2944%" y="975.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (28 samples, 0.01%)</title><rect x="7.0444%" y="949" width="0.0102%" height="15" fill="rgb(238,105,10)" fg:x="19396" fg:w="28"/><text x="7.2944%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (49 samples, 0.02%)</title><rect x="7.0589%" y="949" width="0.0178%" height="15" fill="rgb(213,227,17)" fg:x="19436" fg:w="49"/><text x="7.3089%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (45 samples, 0.02%)</title><rect x="7.0603%" y="933" width="0.0163%" height="15" fill="rgb(217,132,38)" fg:x="19440" fg:w="45"/><text x="7.3103%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (43 samples, 0.02%)</title><rect x="7.0611%" y="917" width="0.0156%" height="15" fill="rgb(242,146,4)" fg:x="19442" fg:w="43"/><text x="7.3111%" y="927.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (57 samples, 0.02%)</title><rect x="7.0567%" y="965" width="0.0207%" height="15" fill="rgb(212,61,9)" fg:x="19430" fg:w="57"/><text x="7.3067%" y="975.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (1,170 samples, 0.42%)</title><rect x="6.6532%" y="1125" width="0.4249%" height="15" fill="rgb(247,126,22)" fg:x="18319" fg:w="1170"/><text x="6.9032%" y="1135.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (1,170 samples, 0.42%)</title><rect x="6.6532%" y="1109" width="0.4249%" height="15" fill="rgb(220,196,2)" fg:x="18319" fg:w="1170"/><text x="6.9032%" y="1119.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (1,170 samples, 0.42%)</title><rect x="6.6532%" y="1093" width="0.4249%" height="15" fill="rgb(208,46,4)" fg:x="18319" fg:w="1170"/><text x="6.9032%" y="1103.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (319 samples, 0.12%)</title><rect x="6.9623%" y="1077" width="0.1159%" height="15" fill="rgb(252,104,46)" fg:x="19170" fg:w="319"/><text x="7.2123%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (124 samples, 0.05%)</title><rect x="7.0331%" y="1061" width="0.0450%" height="15" fill="rgb(237,152,48)" fg:x="19365" fg:w="124"/><text x="7.2831%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (124 samples, 0.05%)</title><rect x="7.0331%" y="1045" width="0.0450%" height="15" fill="rgb(221,59,37)" fg:x="19365" fg:w="124"/><text x="7.2831%" y="1055.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (124 samples, 0.05%)</title><rect x="7.0331%" y="1029" width="0.0450%" height="15" fill="rgb(209,202,51)" fg:x="19365" fg:w="124"/><text x="7.2831%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (124 samples, 0.05%)</title><rect x="7.0331%" y="1013" width="0.0450%" height="15" fill="rgb(228,81,30)" fg:x="19365" fg:w="124"/><text x="7.2831%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (124 samples, 0.05%)</title><rect x="7.0331%" y="997" width="0.0450%" height="15" fill="rgb(227,42,39)" fg:x="19365" fg:w="124"/><text x="7.2831%" y="1007.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (124 samples, 0.05%)</title><rect x="7.0331%" y="981" width="0.0450%" height="15" fill="rgb(221,26,2)" fg:x="19365" fg:w="124"/><text x="7.2831%" y="991.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (32 samples, 0.01%)</title><rect x="7.0818%" y="1045" width="0.0116%" height="15" fill="rgb(254,61,31)" fg:x="19499" fg:w="32"/><text x="7.3318%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (33 samples, 0.01%)</title><rect x="7.0818%" y="1061" width="0.0120%" height="15" fill="rgb(222,173,38)" fg:x="19499" fg:w="33"/><text x="7.3318%" y="1071.50"></text></g><g><title>async_task::runnable::spawn_unchecked (33 samples, 0.01%)</title><rect x="7.0941%" y="1061" width="0.0120%" height="15" fill="rgb(218,50,12)" fg:x="19533" fg:w="33"/><text x="7.3441%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,054 samples, 5.47%)</title><rect x="1.6467%" y="1237" width="5.4674%" height="15" fill="rgb(223,88,40)" fg:x="4534" fg:w="15054"/><text x="1.8967%" y="1247.50">&lt;core::..</text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (1,340 samples, 0.49%)</title><rect x="6.6274%" y="1221" width="0.4867%" height="15" fill="rgb(237,54,19)" fg:x="18248" fg:w="1340"/><text x="6.8774%" y="1231.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,340 samples, 0.49%)</title><rect x="6.6274%" y="1205" width="0.4867%" height="15" fill="rgb(251,129,25)" fg:x="18248" fg:w="1340"/><text x="6.8774%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,340 samples, 0.49%)</title><rect x="6.6274%" y="1189" width="0.4867%" height="15" fill="rgb(238,97,19)" fg:x="18248" fg:w="1340"/><text x="6.8774%" y="1199.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (1,340 samples, 0.49%)</title><rect x="6.6274%" y="1173" width="0.4867%" height="15" fill="rgb(240,169,18)" fg:x="18248" fg:w="1340"/><text x="6.8774%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,340 samples, 0.49%)</title><rect x="6.6274%" y="1157" width="0.4867%" height="15" fill="rgb(230,187,49)" fg:x="18248" fg:w="1340"/><text x="6.8774%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (1,269 samples, 0.46%)</title><rect x="6.6532%" y="1141" width="0.4609%" height="15" fill="rgb(209,44,26)" fg:x="18319" fg:w="1269"/><text x="6.9032%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (98 samples, 0.04%)</title><rect x="7.0785%" y="1125" width="0.0356%" height="15" fill="rgb(244,0,6)" fg:x="19490" fg:w="98"/><text x="7.3285%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (98 samples, 0.04%)</title><rect x="7.0785%" y="1109" width="0.0356%" height="15" fill="rgb(248,18,21)" fg:x="19490" fg:w="98"/><text x="7.3285%" y="1119.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::spawn (98 samples, 0.04%)</title><rect x="7.0785%" y="1093" width="0.0356%" height="15" fill="rgb(245,180,19)" fg:x="19490" fg:w="98"/><text x="7.3285%" y="1103.50"></text></g><g><title>async_executor::Executor::spawn (98 samples, 0.04%)</title><rect x="7.0785%" y="1077" width="0.0356%" height="15" fill="rgb(252,118,36)" fg:x="19490" fg:w="98"/><text x="7.3285%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (38 samples, 0.01%)</title><rect x="7.1257%" y="885" width="0.0138%" height="15" fill="rgb(210,224,19)" fg:x="19620" fg:w="38"/><text x="7.3757%" y="895.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (38 samples, 0.01%)</title><rect x="7.1257%" y="869" width="0.0138%" height="15" fill="rgb(218,30,24)" fg:x="19620" fg:w="38"/><text x="7.3757%" y="879.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::connect_map_to_shm (38 samples, 0.01%)</title><rect x="7.1257%" y="853" width="0.0138%" height="15" fill="rgb(219,75,50)" fg:x="19620" fg:w="38"/><text x="7.3757%" y="863.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (60 samples, 0.02%)</title><rect x="7.1181%" y="1013" width="0.0218%" height="15" fill="rgb(234,72,50)" fg:x="19599" fg:w="60"/><text x="7.3681%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (58 samples, 0.02%)</title><rect x="7.1188%" y="997" width="0.0211%" height="15" fill="rgb(219,100,48)" fg:x="19601" fg:w="58"/><text x="7.3688%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.02%)</title><rect x="7.1188%" y="981" width="0.0211%" height="15" fill="rgb(253,5,41)" fg:x="19601" fg:w="58"/><text x="7.3688%" y="991.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (39 samples, 0.01%)</title><rect x="7.1257%" y="965" width="0.0142%" height="15" fill="rgb(247,181,11)" fg:x="19620" fg:w="39"/><text x="7.3757%" y="975.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (39 samples, 0.01%)</title><rect x="7.1257%" y="949" width="0.0142%" height="15" fill="rgb(222,223,25)" fg:x="19620" fg:w="39"/><text x="7.3757%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (39 samples, 0.01%)</title><rect x="7.1257%" y="933" width="0.0142%" height="15" fill="rgb(214,198,28)" fg:x="19620" fg:w="39"/><text x="7.3757%" y="943.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (39 samples, 0.01%)</title><rect x="7.1257%" y="917" width="0.0142%" height="15" fill="rgb(230,46,43)" fg:x="19620" fg:w="39"/><text x="7.3757%" y="927.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (39 samples, 0.01%)</title><rect x="7.1257%" y="901" width="0.0142%" height="15" fill="rgb(233,65,53)" fg:x="19620" fg:w="39"/><text x="7.3757%" y="911.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (107 samples, 0.04%)</title><rect x="7.1177%" y="1237" width="0.0389%" height="15" fill="rgb(221,121,27)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.04%)</title><rect x="7.1177%" y="1221" width="0.0389%" height="15" fill="rgb(247,70,47)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (107 samples, 0.04%)</title><rect x="7.1177%" y="1205" width="0.0389%" height="15" fill="rgb(228,85,35)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.04%)</title><rect x="7.1177%" y="1189" width="0.0389%" height="15" fill="rgb(209,50,18)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1199.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (107 samples, 0.04%)</title><rect x="7.1177%" y="1173" width="0.0389%" height="15" fill="rgb(250,19,35)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.04%)</title><rect x="7.1177%" y="1157" width="0.0389%" height="15" fill="rgb(253,107,29)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1167.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (107 samples, 0.04%)</title><rect x="7.1177%" y="1141" width="0.0389%" height="15" fill="rgb(252,179,29)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.04%)</title><rect x="7.1177%" y="1125" width="0.0389%" height="15" fill="rgb(238,194,6)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1135.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (107 samples, 0.04%)</title><rect x="7.1177%" y="1109" width="0.0389%" height="15" fill="rgb(238,164,29)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.04%)</title><rect x="7.1177%" y="1093" width="0.0389%" height="15" fill="rgb(224,25,9)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (107 samples, 0.04%)</title><rect x="7.1177%" y="1077" width="0.0389%" height="15" fill="rgb(244,153,23)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.04%)</title><rect x="7.1177%" y="1061" width="0.0389%" height="15" fill="rgb(212,203,14)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1071.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (107 samples, 0.04%)</title><rect x="7.1177%" y="1045" width="0.0389%" height="15" fill="rgb(220,164,20)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (107 samples, 0.04%)</title><rect x="7.1177%" y="1029" width="0.0389%" height="15" fill="rgb(222,203,48)" fg:x="19598" fg:w="107"/><text x="7.3677%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (46 samples, 0.02%)</title><rect x="7.1399%" y="1013" width="0.0167%" height="15" fill="rgb(215,159,22)" fg:x="19659" fg:w="46"/><text x="7.3899%" y="1023.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (28 samples, 0.01%)</title><rect x="7.1464%" y="997" width="0.0102%" height="15" fill="rgb(216,183,47)" fg:x="19677" fg:w="28"/><text x="7.3964%" y="1007.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (28 samples, 0.01%)</title><rect x="7.1464%" y="981" width="0.0102%" height="15" fill="rgb(229,195,25)" fg:x="19677" fg:w="28"/><text x="7.3964%" y="991.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (28 samples, 0.01%)</title><rect x="7.1464%" y="965" width="0.0102%" height="15" fill="rgb(224,132,51)" fg:x="19677" fg:w="28"/><text x="7.3964%" y="975.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (116 samples, 0.04%)</title><rect x="7.3578%" y="373" width="0.0421%" height="15" fill="rgb(240,63,7)" fg:x="20259" fg:w="116"/><text x="7.6078%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (101 samples, 0.04%)</title><rect x="7.3632%" y="357" width="0.0367%" height="15" fill="rgb(249,182,41)" fg:x="20274" fg:w="101"/><text x="7.6132%" y="367.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::curr_slice (35 samples, 0.01%)</title><rect x="7.4003%" y="373" width="0.0127%" height="15" fill="rgb(243,47,26)" fg:x="20376" fg:w="35"/><text x="7.6503%" y="383.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::get_zslice (35 samples, 0.01%)</title><rect x="7.4003%" y="357" width="0.0127%" height="15" fill="rgb(233,48,2)" fg:x="20376" fg:w="35"/><text x="7.6503%" y="367.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (458 samples, 0.17%)</title><rect x="7.2601%" y="405" width="0.1663%" height="15" fill="rgb(244,165,34)" fg:x="19990" fg:w="458"/><text x="7.5101%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (413 samples, 0.15%)</title><rect x="7.2764%" y="389" width="0.1500%" height="15" fill="rgb(207,89,7)" fg:x="20035" fg:w="413"/><text x="7.5264%" y="399.50"></text></g><g><title>zenoh_buffers::zbuf::ZBufReader::skip_bytes_no_check (37 samples, 0.01%)</title><rect x="7.4130%" y="373" width="0.0134%" height="15" fill="rgb(244,117,36)" fg:x="20411" fg:w="37"/><text x="7.6630%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (464 samples, 0.17%)</title><rect x="7.2583%" y="421" width="0.1685%" height="15" fill="rgb(226,144,34)" fg:x="19985" fg:w="464"/><text x="7.5083%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (119 samples, 0.04%)</title><rect x="7.4420%" y="357" width="0.0432%" height="15" fill="rgb(213,23,19)" fg:x="20491" fg:w="119"/><text x="7.6920%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (119 samples, 0.04%)</title><rect x="7.4420%" y="341" width="0.0432%" height="15" fill="rgb(217,75,12)" fg:x="20491" fg:w="119"/><text x="7.6920%" y="351.50"></text></g><g><title>alloc::alloc::alloc (119 samples, 0.04%)</title><rect x="7.4420%" y="325" width="0.0432%" height="15" fill="rgb(224,159,17)" fg:x="20491" fg:w="119"/><text x="7.6920%" y="335.50"></text></g><g><title>malloc (109 samples, 0.04%)</title><rect x="7.4457%" y="309" width="0.0396%" height="15" fill="rgb(217,118,1)" fg:x="20501" fg:w="109"/><text x="7.6957%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (137 samples, 0.05%)</title><rect x="7.4359%" y="421" width="0.0498%" height="15" fill="rgb(232,180,48)" fg:x="20474" fg:w="137"/><text x="7.6859%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (137 samples, 0.05%)</title><rect x="7.4359%" y="405" width="0.0498%" height="15" fill="rgb(230,27,33)" fg:x="20474" fg:w="137"/><text x="7.6859%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (136 samples, 0.05%)</title><rect x="7.4362%" y="389" width="0.0494%" height="15" fill="rgb(205,31,21)" fg:x="20475" fg:w="136"/><text x="7.6862%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (130 samples, 0.05%)</title><rect x="7.4384%" y="373" width="0.0472%" height="15" fill="rgb(253,59,4)" fg:x="20481" fg:w="130"/><text x="7.6884%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (875 samples, 0.32%)</title><rect x="7.1758%" y="437" width="0.3178%" height="15" fill="rgb(224,201,9)" fg:x="19758" fg:w="875"/><text x="7.4258%" y="447.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (908 samples, 0.33%)</title><rect x="7.1715%" y="581" width="0.3298%" height="15" fill="rgb(229,206,30)" fg:x="19746" fg:w="908"/><text x="7.4215%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (908 samples, 0.33%)</title><rect x="7.1715%" y="565" width="0.3298%" height="15" fill="rgb(212,67,47)" fg:x="19746" fg:w="908"/><text x="7.4215%" y="575.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (908 samples, 0.33%)</title><rect x="7.1715%" y="549" width="0.3298%" height="15" fill="rgb(211,96,50)" fg:x="19746" fg:w="908"/><text x="7.4215%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (908 samples, 0.33%)</title><rect x="7.1715%" y="533" width="0.3298%" height="15" fill="rgb(252,114,18)" fg:x="19746" fg:w="908"/><text x="7.4215%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (908 samples, 0.33%)</title><rect x="7.1715%" y="517" width="0.3298%" height="15" fill="rgb(223,58,37)" fg:x="19746" fg:w="908"/><text x="7.4215%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (908 samples, 0.33%)</title><rect x="7.1715%" y="501" width="0.3298%" height="15" fill="rgb(237,70,4)" fg:x="19746" fg:w="908"/><text x="7.4215%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (908 samples, 0.33%)</title><rect x="7.1715%" y="485" width="0.3298%" height="15" fill="rgb(244,85,46)" fg:x="19746" fg:w="908"/><text x="7.4215%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (908 samples, 0.33%)</title><rect x="7.1715%" y="469" width="0.3298%" height="15" fill="rgb(223,39,52)" fg:x="19746" fg:w="908"/><text x="7.4215%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (896 samples, 0.33%)</title><rect x="7.1758%" y="453" width="0.3254%" height="15" fill="rgb(218,200,14)" fg:x="19758" fg:w="896"/><text x="7.4258%" y="463.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (70 samples, 0.03%)</title><rect x="7.5056%" y="485" width="0.0254%" height="15" fill="rgb(208,171,16)" fg:x="20666" fg:w="70"/><text x="7.7556%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (70 samples, 0.03%)</title><rect x="7.5056%" y="469" width="0.0254%" height="15" fill="rgb(234,200,18)" fg:x="20666" fg:w="70"/><text x="7.7556%" y="479.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (70 samples, 0.03%)</title><rect x="7.5056%" y="453" width="0.0254%" height="15" fill="rgb(228,45,11)" fg:x="20666" fg:w="70"/><text x="7.7556%" y="463.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (95 samples, 0.03%)</title><rect x="7.5012%" y="501" width="0.0345%" height="15" fill="rgb(237,182,11)" fg:x="20654" fg:w="95"/><text x="7.7512%" y="511.50"></text></g><g><title>std::sys::unix::futex::futex_wait (33 samples, 0.01%)</title><rect x="7.5470%" y="389" width="0.0120%" height="15" fill="rgb(241,175,49)" fg:x="20780" fg:w="33"/><text x="7.7970%" y="399.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (100 samples, 0.04%)</title><rect x="7.5463%" y="453" width="0.0363%" height="15" fill="rgb(247,38,35)" fg:x="20778" fg:w="100"/><text x="7.7963%" y="463.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (100 samples, 0.04%)</title><rect x="7.5463%" y="437" width="0.0363%" height="15" fill="rgb(228,39,49)" fg:x="20778" fg:w="100"/><text x="7.7963%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (100 samples, 0.04%)</title><rect x="7.5463%" y="421" width="0.0363%" height="15" fill="rgb(226,101,26)" fg:x="20778" fg:w="100"/><text x="7.7963%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_contended (100 samples, 0.04%)</title><rect x="7.5463%" y="405" width="0.0363%" height="15" fill="rgb(206,141,19)" fg:x="20778" fg:w="100"/><text x="7.7963%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_write (65 samples, 0.02%)</title><rect x="7.5590%" y="389" width="0.0236%" height="15" fill="rgb(211,200,13)" fg:x="20813" fg:w="65"/><text x="7.8090%" y="399.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_until (65 samples, 0.02%)</title><rect x="7.5590%" y="373" width="0.0236%" height="15" fill="rgb(241,121,6)" fg:x="20813" fg:w="65"/><text x="7.8090%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_write::{{closure}} (47 samples, 0.02%)</title><rect x="7.5655%" y="357" width="0.0171%" height="15" fill="rgb(234,221,29)" fg:x="20831" fg:w="47"/><text x="7.8155%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_unlocked (47 samples, 0.02%)</title><rect x="7.5655%" y="341" width="0.0171%" height="15" fill="rgb(229,136,5)" fg:x="20831" fg:w="47"/><text x="7.8155%" y="351.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (103 samples, 0.04%)</title><rect x="7.5463%" y="501" width="0.0374%" height="15" fill="rgb(238,36,11)" fg:x="20778" fg:w="103"/><text x="7.7963%" y="511.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (103 samples, 0.04%)</title><rect x="7.5463%" y="485" width="0.0374%" height="15" fill="rgb(251,55,41)" fg:x="20778" fg:w="103"/><text x="7.7963%" y="495.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (103 samples, 0.04%)</title><rect x="7.5463%" y="469" width="0.0374%" height="15" fill="rgb(242,34,40)" fg:x="20778" fg:w="103"/><text x="7.7963%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,136 samples, 0.41%)</title><rect x="7.1715%" y="597" width="0.4126%" height="15" fill="rgb(215,42,17)" fg:x="19746" fg:w="1136"/><text x="7.4215%" y="607.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (228 samples, 0.08%)</title><rect x="7.5012%" y="581" width="0.0828%" height="15" fill="rgb(207,44,46)" fg:x="20654" fg:w="228"/><text x="7.7512%" y="591.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (228 samples, 0.08%)</title><rect x="7.5012%" y="565" width="0.0828%" height="15" fill="rgb(211,206,28)" fg:x="20654" fg:w="228"/><text x="7.7512%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (228 samples, 0.08%)</title><rect x="7.5012%" y="549" width="0.0828%" height="15" fill="rgb(237,167,16)" fg:x="20654" fg:w="228"/><text x="7.7512%" y="559.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (228 samples, 0.08%)</title><rect x="7.5012%" y="533" width="0.0828%" height="15" fill="rgb(233,66,6)" fg:x="20654" fg:w="228"/><text x="7.7512%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (228 samples, 0.08%)</title><rect x="7.5012%" y="517" width="0.0828%" height="15" fill="rgb(246,123,29)" fg:x="20654" fg:w="228"/><text x="7.7512%" y="527.50"></text></g><g><title>&lt;async_io::reactor::Writable&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="7.5873%" y="309" width="0.0138%" height="15" fill="rgb(209,62,40)" fg:x="20891" fg:w="38"/><text x="7.8373%" y="319.50"></text></g><g><title>&lt;async_io::reactor::Ready&lt;H,T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="7.5873%" y="293" width="0.0138%" height="15" fill="rgb(218,4,25)" fg:x="20891" fg:w="38"/><text x="7.8373%" y="303.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (42 samples, 0.02%)</title><rect x="7.6011%" y="309" width="0.0153%" height="15" fill="rgb(253,91,49)" fg:x="20929" fg:w="42"/><text x="7.8511%" y="319.50"></text></g><g><title>__libc_fcntl64 (42 samples, 0.02%)</title><rect x="7.6011%" y="293" width="0.0153%" height="15" fill="rgb(228,155,29)" fg:x="20929" fg:w="42"/><text x="7.8511%" y="303.50"></text></g><g><title>[libc.so.6] (41 samples, 0.01%)</title><rect x="7.6015%" y="277" width="0.0149%" height="15" fill="rgb(243,57,37)" fg:x="20930" fg:w="41"/><text x="7.8515%" y="287.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="7.6026%" y="261" width="0.0138%" height="15" fill="rgb(244,167,17)" fg:x="20933" fg:w="38"/><text x="7.8526%" y="271.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="7.6040%" y="245" width="0.0123%" height="15" fill="rgb(207,181,38)" fg:x="20937" fg:w="34"/><text x="7.8540%" y="255.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="7.6040%" y="229" width="0.0123%" height="15" fill="rgb(211,8,23)" fg:x="20937" fg:w="34"/><text x="7.8540%" y="239.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="7.6058%" y="213" width="0.0105%" height="15" fill="rgb(235,11,44)" fg:x="20942" fg:w="29"/><text x="7.8558%" y="223.50"></text></g><g><title>socket2::socket::Socket::connect (94 samples, 0.03%)</title><rect x="7.6167%" y="293" width="0.0341%" height="15" fill="rgb(248,18,52)" fg:x="20972" fg:w="94"/><text x="7.8667%" y="303.50"></text></g><g><title>socket2::sys::connect (91 samples, 0.03%)</title><rect x="7.6178%" y="277" width="0.0330%" height="15" fill="rgb(208,4,7)" fg:x="20975" fg:w="91"/><text x="7.8678%" y="287.50"></text></g><g><title>connect (81 samples, 0.03%)</title><rect x="7.6215%" y="261" width="0.0294%" height="15" fill="rgb(240,17,39)" fg:x="20985" fg:w="81"/><text x="7.8715%" y="271.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="7.6273%" y="245" width="0.0236%" height="15" fill="rgb(207,170,3)" fg:x="21001" fg:w="65"/><text x="7.8773%" y="255.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="7.6273%" y="229" width="0.0236%" height="15" fill="rgb(236,100,52)" fg:x="21001" fg:w="65"/><text x="7.8773%" y="239.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="7.6273%" y="213" width="0.0236%" height="15" fill="rgb(246,78,51)" fg:x="21001" fg:w="65"/><text x="7.8773%" y="223.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="7.6276%" y="197" width="0.0232%" height="15" fill="rgb(211,17,15)" fg:x="21002" fg:w="64"/><text x="7.8776%" y="207.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="7.6313%" y="181" width="0.0196%" height="15" fill="rgb(209,59,46)" fg:x="21012" fg:w="54"/><text x="7.8813%" y="191.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="7.6353%" y="165" width="0.0156%" height="15" fill="rgb(210,92,25)" fg:x="21023" fg:w="43"/><text x="7.8853%" y="175.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="7.6371%" y="149" width="0.0138%" height="15" fill="rgb(238,174,52)" fg:x="21028" fg:w="38"/><text x="7.8871%" y="159.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="7.6407%" y="133" width="0.0102%" height="15" fill="rgb(230,73,7)" fg:x="21038" fg:w="28"/><text x="7.8907%" y="143.50"></text></g><g><title>socket2::socket::Socket::new (71 samples, 0.03%)</title><rect x="7.6509%" y="293" width="0.0258%" height="15" fill="rgb(243,124,40)" fg:x="21066" fg:w="71"/><text x="7.9009%" y="303.50"></text></g><g><title>socket2::socket::Socket::new_raw (68 samples, 0.02%)</title><rect x="7.6520%" y="277" width="0.0247%" height="15" fill="rgb(244,170,11)" fg:x="21069" fg:w="68"/><text x="7.9020%" y="287.50"></text></g><g><title>socket2::sys::socket (68 samples, 0.02%)</title><rect x="7.6520%" y="261" width="0.0247%" height="15" fill="rgb(207,114,54)" fg:x="21069" fg:w="68"/><text x="7.9020%" y="271.50"></text></g><g><title>__socket (67 samples, 0.02%)</title><rect x="7.6523%" y="245" width="0.0243%" height="15" fill="rgb(205,42,20)" fg:x="21070" fg:w="67"/><text x="7.9023%" y="255.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="7.6531%" y="229" width="0.0236%" height="15" fill="rgb(230,30,28)" fg:x="21072" fg:w="65"/><text x="7.9031%" y="239.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="7.6531%" y="213" width="0.0236%" height="15" fill="rgb(205,73,54)" fg:x="21072" fg:w="65"/><text x="7.9031%" y="223.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="7.6534%" y="197" width="0.0232%" height="15" fill="rgb(254,227,23)" fg:x="21073" fg:w="64"/><text x="7.9034%" y="207.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="7.6538%" y="181" width="0.0229%" height="15" fill="rgb(228,202,34)" fg:x="21074" fg:w="63"/><text x="7.9038%" y="191.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="7.6552%" y="165" width="0.0214%" height="15" fill="rgb(222,225,37)" fg:x="21078" fg:w="59"/><text x="7.9052%" y="175.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="7.6556%" y="149" width="0.0211%" height="15" fill="rgb(221,14,54)" fg:x="21079" fg:w="58"/><text x="7.9056%" y="159.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="7.6578%" y="133" width="0.0189%" height="15" fill="rgb(254,102,2)" fg:x="21085" fg:w="52"/><text x="7.9078%" y="143.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="7.6585%" y="117" width="0.0182%" height="15" fill="rgb(232,104,17)" fg:x="21087" fg:w="50"/><text x="7.9085%" y="127.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="7.6596%" y="101" width="0.0171%" height="15" fill="rgb(250,220,14)" fg:x="21090" fg:w="47"/><text x="7.9096%" y="111.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="7.6618%" y="85" width="0.0149%" height="15" fill="rgb(241,158,9)" fg:x="21096" fg:w="41"/><text x="7.9118%" y="95.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="7.6654%" y="69" width="0.0113%" height="15" fill="rgb(246,9,43)" fg:x="21106" fg:w="31"/><text x="7.9154%" y="79.50"></text></g><g><title>async_io::connect (167 samples, 0.06%)</title><rect x="7.6164%" y="309" width="0.0607%" height="15" fill="rgb(206,73,33)" fg:x="20971" fg:w="167"/><text x="7.8664%" y="319.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (259 samples, 0.09%)</title><rect x="7.5844%" y="373" width="0.0941%" height="15" fill="rgb(222,79,8)" fg:x="20883" fg:w="259"/><text x="7.8344%" y="383.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (259 samples, 0.09%)</title><rect x="7.5844%" y="357" width="0.0941%" height="15" fill="rgb(234,8,54)" fg:x="20883" fg:w="259"/><text x="7.8344%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (258 samples, 0.09%)</title><rect x="7.5848%" y="341" width="0.0937%" height="15" fill="rgb(209,134,38)" fg:x="20884" fg:w="258"/><text x="7.8348%" y="351.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (258 samples, 0.09%)</title><rect x="7.5848%" y="325" width="0.0937%" height="15" fill="rgb(230,127,29)" fg:x="20884" fg:w="258"/><text x="7.8348%" y="335.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (279 samples, 0.10%)</title><rect x="7.5844%" y="421" width="0.1013%" height="15" fill="rgb(242,44,41)" fg:x="20883" fg:w="279"/><text x="7.8344%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (279 samples, 0.10%)</title><rect x="7.5844%" y="405" width="0.1013%" height="15" fill="rgb(222,56,43)" fg:x="20883" fg:w="279"/><text x="7.8344%" y="415.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (279 samples, 0.10%)</title><rect x="7.5844%" y="389" width="0.1013%" height="15" fill="rgb(238,39,47)" fg:x="20883" fg:w="279"/><text x="7.8344%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,447 samples, 0.53%)</title><rect x="7.1715%" y="1045" width="0.5255%" height="15" fill="rgb(226,79,43)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="1055.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (1,447 samples, 0.53%)</title><rect x="7.1715%" y="1029" width="0.5255%" height="15" fill="rgb(242,105,53)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (1,447 samples, 0.53%)</title><rect x="7.1715%" y="1013" width="0.5255%" height="15" fill="rgb(251,132,46)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="1023.50"></text></g><g><title>std::panicking::try (1,447 samples, 0.53%)</title><rect x="7.1715%" y="997" width="0.5255%" height="15" fill="rgb(231,77,14)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (1,447 samples, 0.53%)</title><rect x="7.1715%" y="981" width="0.5255%" height="15" fill="rgb(240,135,9)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="991.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (1,447 samples, 0.53%)</title><rect x="7.1715%" y="965" width="0.5255%" height="15" fill="rgb(248,109,14)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,447 samples, 0.53%)</title><rect x="7.1715%" y="949" width="0.5255%" height="15" fill="rgb(227,146,52)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,447 samples, 0.53%)</title><rect x="7.1715%" y="933" width="0.5255%" height="15" fill="rgb(232,54,3)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="943.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,447 samples, 0.53%)</title><rect x="7.1715%" y="917" width="0.5255%" height="15" fill="rgb(229,201,43)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on (1,447 samples, 0.53%)</title><rect x="7.1715%" y="901" width="0.5255%" height="15" fill="rgb(252,161,33)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="911.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,447 samples, 0.53%)</title><rect x="7.1715%" y="885" width="0.5255%" height="15" fill="rgb(226,146,40)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="895.50"></text></g><g><title>async_io::driver::block_on (1,447 samples, 0.53%)</title><rect x="7.1715%" y="869" width="0.5255%" height="15" fill="rgb(219,47,25)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="879.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,447 samples, 0.53%)</title><rect x="7.1715%" y="853" width="0.5255%" height="15" fill="rgb(250,135,13)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,447 samples, 0.53%)</title><rect x="7.1715%" y="837" width="0.5255%" height="15" fill="rgb(219,229,18)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="847.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,447 samples, 0.53%)</title><rect x="7.1715%" y="821" width="0.5255%" height="15" fill="rgb(217,152,27)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="831.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,447 samples, 0.53%)</title><rect x="7.1715%" y="805" width="0.5255%" height="15" fill="rgb(225,71,47)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,447 samples, 0.53%)</title><rect x="7.1715%" y="789" width="0.5255%" height="15" fill="rgb(220,139,14)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,447 samples, 0.53%)</title><rect x="7.1715%" y="773" width="0.5255%" height="15" fill="rgb(247,54,32)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,447 samples, 0.53%)</title><rect x="7.1715%" y="757" width="0.5255%" height="15" fill="rgb(252,131,39)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,447 samples, 0.53%)</title><rect x="7.1715%" y="741" width="0.5255%" height="15" fill="rgb(210,108,39)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,447 samples, 0.53%)</title><rect x="7.1715%" y="725" width="0.5255%" height="15" fill="rgb(205,23,29)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,447 samples, 0.53%)</title><rect x="7.1715%" y="709" width="0.5255%" height="15" fill="rgb(246,139,46)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,447 samples, 0.53%)</title><rect x="7.1715%" y="693" width="0.5255%" height="15" fill="rgb(250,81,26)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,447 samples, 0.53%)</title><rect x="7.1715%" y="677" width="0.5255%" height="15" fill="rgb(214,104,7)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,447 samples, 0.53%)</title><rect x="7.1715%" y="661" width="0.5255%" height="15" fill="rgb(233,189,8)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,447 samples, 0.53%)</title><rect x="7.1715%" y="645" width="0.5255%" height="15" fill="rgb(228,141,17)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,447 samples, 0.53%)</title><rect x="7.1715%" y="629" width="0.5255%" height="15" fill="rgb(247,157,1)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="639.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,447 samples, 0.53%)</title><rect x="7.1715%" y="613" width="0.5255%" height="15" fill="rgb(249,225,5)" fg:x="19746" fg:w="1447"/><text x="7.4215%" y="623.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (311 samples, 0.11%)</title><rect x="7.5841%" y="597" width="0.1130%" height="15" fill="rgb(242,55,13)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (311 samples, 0.11%)</title><rect x="7.5841%" y="581" width="0.1130%" height="15" fill="rgb(230,49,50)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="591.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (311 samples, 0.11%)</title><rect x="7.5841%" y="565" width="0.1130%" height="15" fill="rgb(241,111,38)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (311 samples, 0.11%)</title><rect x="7.5841%" y="549" width="0.1130%" height="15" fill="rgb(252,155,4)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="559.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (311 samples, 0.11%)</title><rect x="7.5841%" y="533" width="0.1130%" height="15" fill="rgb(212,69,32)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (311 samples, 0.11%)</title><rect x="7.5841%" y="517" width="0.1130%" height="15" fill="rgb(243,107,47)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="527.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (311 samples, 0.11%)</title><rect x="7.5841%" y="501" width="0.1130%" height="15" fill="rgb(247,130,12)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (311 samples, 0.11%)</title><rect x="7.5841%" y="485" width="0.1130%" height="15" fill="rgb(233,74,16)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="495.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (311 samples, 0.11%)</title><rect x="7.5841%" y="469" width="0.1130%" height="15" fill="rgb(208,58,18)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (311 samples, 0.11%)</title><rect x="7.5841%" y="453" width="0.1130%" height="15" fill="rgb(242,225,1)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="463.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (311 samples, 0.11%)</title><rect x="7.5841%" y="437" width="0.1130%" height="15" fill="rgb(249,39,40)" fg:x="20882" fg:w="311"/><text x="7.8341%" y="447.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link (31 samples, 0.01%)</title><rect x="7.6857%" y="421" width="0.0113%" height="15" fill="rgb(207,72,44)" fg:x="21162" fg:w="31"/><text x="7.9357%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (31 samples, 0.01%)</title><rect x="7.6857%" y="405" width="0.0113%" height="15" fill="rgb(215,193,12)" fg:x="21162" fg:w="31"/><text x="7.9357%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (31 samples, 0.01%)</title><rect x="7.6857%" y="389" width="0.0113%" height="15" fill="rgb(248,41,39)" fg:x="21162" fg:w="31"/><text x="7.9357%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.01%)</title><rect x="7.6857%" y="373" width="0.0113%" height="15" fill="rgb(253,85,4)" fg:x="21162" fg:w="31"/><text x="7.9357%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.01%)</title><rect x="7.6857%" y="357" width="0.0113%" height="15" fill="rgb(243,70,31)" fg:x="21162" fg:w="31"/><text x="7.9357%" y="367.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.01%)</title><rect x="7.6857%" y="341" width="0.0113%" height="15" fill="rgb(253,195,26)" fg:x="21162" fg:w="31"/><text x="7.9357%" y="351.50"></text></g><g><title>malloc (31 samples, 0.01%)</title><rect x="7.6857%" y="325" width="0.0113%" height="15" fill="rgb(243,42,11)" fg:x="21162" fg:w="31"/><text x="7.9357%" y="335.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="7.6857%" y="309" width="0.0113%" height="15" fill="rgb(239,66,17)" fg:x="21162" fg:w="31"/><text x="7.9357%" y="319.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (97 samples, 0.04%)</title><rect x="7.6981%" y="357" width="0.0352%" height="15" fill="rgb(217,132,21)" fg:x="21196" fg:w="97"/><text x="7.9481%" y="367.50"></text></g><g><title>cfree (81 samples, 0.03%)</title><rect x="7.8187%" y="341" width="0.0294%" height="15" fill="rgb(252,202,21)" fg:x="21528" fg:w="81"/><text x="8.0687%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (47 samples, 0.02%)</title><rect x="7.8492%" y="341" width="0.0171%" height="15" fill="rgb(233,98,36)" fg:x="21612" fg:w="47"/><text x="8.0992%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (139 samples, 0.05%)</title><rect x="7.8742%" y="341" width="0.0505%" height="15" fill="rgb(216,153,54)" fg:x="21681" fg:w="139"/><text x="8.1242%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (51 samples, 0.02%)</title><rect x="7.9258%" y="341" width="0.0185%" height="15" fill="rgb(250,99,7)" fg:x="21823" fg:w="51"/><text x="8.1758%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (51 samples, 0.02%)</title><rect x="7.9258%" y="325" width="0.0185%" height="15" fill="rgb(207,56,50)" fg:x="21823" fg:w="51"/><text x="8.1758%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (63 samples, 0.02%)</title><rect x="7.9512%" y="341" width="0.0229%" height="15" fill="rgb(244,61,34)" fg:x="21893" fg:w="63"/><text x="8.2012%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_or (63 samples, 0.02%)</title><rect x="7.9512%" y="325" width="0.0229%" height="15" fill="rgb(241,50,38)" fg:x="21893" fg:w="63"/><text x="8.2012%" y="335.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (908 samples, 0.33%)</title><rect x="7.6981%" y="373" width="0.3298%" height="15" fill="rgb(212,166,30)" fg:x="21196" fg:w="908"/><text x="7.9481%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (811 samples, 0.29%)</title><rect x="7.7333%" y="357" width="0.2945%" height="15" fill="rgb(249,127,32)" fg:x="21293" fg:w="811"/><text x="7.9833%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (148 samples, 0.05%)</title><rect x="7.9741%" y="341" width="0.0538%" height="15" fill="rgb(209,103,0)" fg:x="21956" fg:w="148"/><text x="8.2241%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (148 samples, 0.05%)</title><rect x="7.9741%" y="325" width="0.0538%" height="15" fill="rgb(238,209,51)" fg:x="21956" fg:w="148"/><text x="8.2241%" y="335.50"></text></g><g><title>async_executor::steal (1,735 samples, 0.63%)</title><rect x="7.6981%" y="389" width="0.6301%" height="15" fill="rgb(237,56,23)" fg:x="21196" fg:w="1735"/><text x="7.9481%" y="399.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (827 samples, 0.30%)</title><rect x="8.0279%" y="373" width="0.3004%" height="15" fill="rgb(215,153,46)" fg:x="22104" fg:w="827"/><text x="8.2779%" y="383.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (827 samples, 0.30%)</title><rect x="8.0279%" y="357" width="0.3004%" height="15" fill="rgb(224,49,31)" fg:x="22104" fg:w="827"/><text x="8.2779%" y="367.50"></text></g><g><title>[libc.so.6] (69 samples, 0.03%)</title><rect x="8.3424%" y="341" width="0.0251%" height="15" fill="rgb(250,18,42)" fg:x="22970" fg:w="69"/><text x="8.5924%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (114 samples, 0.04%)</title><rect x="8.3282%" y="389" width="0.0414%" height="15" fill="rgb(215,176,39)" fg:x="22931" fg:w="114"/><text x="8.5782%" y="399.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (114 samples, 0.04%)</title><rect x="8.3282%" y="373" width="0.0414%" height="15" fill="rgb(223,77,29)" fg:x="22931" fg:w="114"/><text x="8.5782%" y="383.50"></text></g><g><title>cfree (114 samples, 0.04%)</title><rect x="8.3282%" y="357" width="0.0414%" height="15" fill="rgb(234,94,52)" fg:x="22931" fg:w="114"/><text x="8.5782%" y="367.50"></text></g><g><title>fastrand::RNG::__getit (353 samples, 0.13%)</title><rect x="8.3733%" y="341" width="0.1282%" height="15" fill="rgb(220,154,50)" fg:x="23055" fg:w="353"/><text x="8.6233%" y="351.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (213 samples, 0.08%)</title><rect x="8.4241%" y="325" width="0.0774%" height="15" fill="rgb(212,11,10)" fg:x="23195" fg:w="213"/><text x="8.6741%" y="335.50"></text></g><g><title>fastrand::usize::{{closure}} (30 samples, 0.01%)</title><rect x="8.5015%" y="341" width="0.0109%" height="15" fill="rgb(205,166,19)" fg:x="23408" fg:w="30"/><text x="8.7515%" y="351.50"></text></g><g><title>fastrand::Rng::usize (30 samples, 0.01%)</title><rect x="8.5015%" y="325" width="0.0109%" height="15" fill="rgb(244,198,16)" fg:x="23408" fg:w="30"/><text x="8.7515%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (2,243 samples, 0.81%)</title><rect x="7.6981%" y="405" width="0.8146%" height="15" fill="rgb(219,69,12)" fg:x="21196" fg:w="2243"/><text x="7.9481%" y="415.50"></text></g><g><title>fastrand::usize (394 samples, 0.14%)</title><rect x="8.3696%" y="389" width="0.1431%" height="15" fill="rgb(245,30,7)" fg:x="23045" fg:w="394"/><text x="8.6196%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (394 samples, 0.14%)</title><rect x="8.3696%" y="373" width="0.1431%" height="15" fill="rgb(218,221,48)" fg:x="23045" fg:w="394"/><text x="8.6196%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (391 samples, 0.14%)</title><rect x="8.3707%" y="357" width="0.1420%" height="15" fill="rgb(216,66,15)" fg:x="23048" fg:w="391"/><text x="8.6207%" y="367.50"></text></g><g><title>async_io::reactor::Reactor::notify (59 samples, 0.02%)</title><rect x="8.5142%" y="341" width="0.0214%" height="15" fill="rgb(226,122,50)" fg:x="23443" fg:w="59"/><text x="8.7642%" y="351.50"></text></g><g><title>polling::Poller::notify (59 samples, 0.02%)</title><rect x="8.5142%" y="325" width="0.0214%" height="15" fill="rgb(239,156,16)" fg:x="23443" fg:w="59"/><text x="8.7642%" y="335.50"></text></g><g><title>polling::epoll::Poller::notify (50 samples, 0.02%)</title><rect x="8.5174%" y="309" width="0.0182%" height="15" fill="rgb(224,27,38)" fg:x="23452" fg:w="50"/><text x="8.7674%" y="319.50"></text></g><g><title>write (50 samples, 0.02%)</title><rect x="8.5174%" y="293" width="0.0182%" height="15" fill="rgb(224,39,27)" fg:x="23452" fg:w="50"/><text x="8.7674%" y="303.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="8.5185%" y="277" width="0.0171%" height="15" fill="rgb(215,92,29)" fg:x="23455" fg:w="47"/><text x="8.7685%" y="287.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="8.5185%" y="261" width="0.0171%" height="15" fill="rgb(207,159,16)" fg:x="23455" fg:w="47"/><text x="8.7685%" y="271.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="8.5185%" y="245" width="0.0171%" height="15" fill="rgb(238,163,47)" fg:x="23455" fg:w="47"/><text x="8.7685%" y="255.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="8.5193%" y="229" width="0.0163%" height="15" fill="rgb(219,91,49)" fg:x="23457" fg:w="45"/><text x="8.7693%" y="239.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="8.5203%" y="213" width="0.0153%" height="15" fill="rgb(227,167,31)" fg:x="23460" fg:w="42"/><text x="8.7703%" y="223.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="8.5229%" y="197" width="0.0127%" height="15" fill="rgb(234,80,54)" fg:x="23467" fg:w="35"/><text x="8.7729%" y="207.50"></text></g><g><title>core::task::wake::Waker::wake (87 samples, 0.03%)</title><rect x="8.5127%" y="389" width="0.0316%" height="15" fill="rgb(212,114,2)" fg:x="23439" fg:w="87"/><text x="8.7627%" y="399.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (83 samples, 0.03%)</title><rect x="8.5142%" y="373" width="0.0301%" height="15" fill="rgb(234,50,24)" fg:x="23443" fg:w="83"/><text x="8.7642%" y="383.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (83 samples, 0.03%)</title><rect x="8.5142%" y="357" width="0.0301%" height="15" fill="rgb(221,68,8)" fg:x="23443" fg:w="83"/><text x="8.7642%" y="367.50"></text></g><g><title>async_executor::State::notify (89 samples, 0.03%)</title><rect x="8.5127%" y="405" width="0.0323%" height="15" fill="rgb(254,180,31)" fg:x="23439" fg:w="89"/><text x="8.7627%" y="415.50"></text></g><g><title>async_executor::Ticker::sleep (57 samples, 0.02%)</title><rect x="8.5450%" y="405" width="0.0207%" height="15" fill="rgb(247,130,50)" fg:x="23528" fg:w="57"/><text x="8.7950%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (56 samples, 0.02%)</title><rect x="8.5454%" y="389" width="0.0203%" height="15" fill="rgb(211,109,4)" fg:x="23529" fg:w="56"/><text x="8.7954%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (56 samples, 0.02%)</title><rect x="8.5454%" y="373" width="0.0203%" height="15" fill="rgb(238,50,21)" fg:x="23529" fg:w="56"/><text x="8.7954%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (56 samples, 0.02%)</title><rect x="8.5454%" y="357" width="0.0203%" height="15" fill="rgb(225,57,45)" fg:x="23529" fg:w="56"/><text x="8.7954%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (56 samples, 0.02%)</title><rect x="8.5454%" y="341" width="0.0203%" height="15" fill="rgb(209,196,50)" fg:x="23529" fg:w="56"/><text x="8.7954%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (44 samples, 0.02%)</title><rect x="8.5498%" y="325" width="0.0160%" height="15" fill="rgb(242,140,13)" fg:x="23541" fg:w="44"/><text x="8.7998%" y="335.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,402 samples, 0.87%)</title><rect x="7.6981%" y="469" width="0.8724%" height="15" fill="rgb(217,111,7)" fg:x="21196" fg:w="2402"/><text x="7.9481%" y="479.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (2,402 samples, 0.87%)</title><rect x="7.6981%" y="453" width="0.8724%" height="15" fill="rgb(253,193,51)" fg:x="21196" fg:w="2402"/><text x="7.9481%" y="463.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,402 samples, 0.87%)</title><rect x="7.6981%" y="437" width="0.8724%" height="15" fill="rgb(252,70,29)" fg:x="21196" fg:w="2402"/><text x="7.9481%" y="447.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2,402 samples, 0.87%)</title><rect x="7.6981%" y="421" width="0.8724%" height="15" fill="rgb(232,127,12)" fg:x="21196" fg:w="2402"/><text x="7.9481%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,404 samples, 0.87%)</title><rect x="7.6981%" y="501" width="0.8731%" height="15" fill="rgb(211,180,21)" fg:x="21196" fg:w="2404"/><text x="7.9481%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (2,404 samples, 0.87%)</title><rect x="7.6981%" y="485" width="0.8731%" height="15" fill="rgb(229,72,13)" fg:x="21196" fg:w="2404"/><text x="7.9481%" y="495.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,431 samples, 0.88%)</title><rect x="7.6970%" y="549" width="0.8829%" height="15" fill="rgb(240,211,49)" fg:x="21193" fg:w="2431"/><text x="7.9470%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,428 samples, 0.88%)</title><rect x="7.6981%" y="533" width="0.8818%" height="15" fill="rgb(219,149,40)" fg:x="21196" fg:w="2428"/><text x="7.9481%" y="543.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2,428 samples, 0.88%)</title><rect x="7.6981%" y="517" width="0.8818%" height="15" fill="rgb(210,127,46)" fg:x="21196" fg:w="2428"/><text x="7.9481%" y="527.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (2,435 samples, 0.88%)</title><rect x="7.6970%" y="677" width="0.8844%" height="15" fill="rgb(220,106,7)" fg:x="21193" fg:w="2435"/><text x="7.9470%" y="687.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,435 samples, 0.88%)</title><rect x="7.6970%" y="661" width="0.8844%" height="15" fill="rgb(249,31,22)" fg:x="21193" fg:w="2435"/><text x="7.9470%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,435 samples, 0.88%)</title><rect x="7.6970%" y="645" width="0.8844%" height="15" fill="rgb(253,1,49)" fg:x="21193" fg:w="2435"/><text x="7.9470%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,435 samples, 0.88%)</title><rect x="7.6970%" y="629" width="0.8844%" height="15" fill="rgb(227,144,33)" fg:x="21193" fg:w="2435"/><text x="7.9470%" y="639.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,435 samples, 0.88%)</title><rect x="7.6970%" y="613" width="0.8844%" height="15" fill="rgb(249,163,44)" fg:x="21193" fg:w="2435"/><text x="7.9470%" y="623.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (2,435 samples, 0.88%)</title><rect x="7.6970%" y="597" width="0.8844%" height="15" fill="rgb(234,15,39)" fg:x="21193" fg:w="2435"/><text x="7.9470%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,435 samples, 0.88%)</title><rect x="7.6970%" y="581" width="0.8844%" height="15" fill="rgb(207,66,16)" fg:x="21193" fg:w="2435"/><text x="7.9470%" y="591.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,435 samples, 0.88%)</title><rect x="7.6970%" y="565" width="0.8844%" height="15" fill="rgb(233,112,24)" fg:x="21193" fg:w="2435"/><text x="7.9470%" y="575.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2,438 samples, 0.89%)</title><rect x="7.6970%" y="693" width="0.8854%" height="15" fill="rgb(230,90,22)" fg:x="21193" fg:w="2438"/><text x="7.9470%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,460 samples, 0.89%)</title><rect x="7.6970%" y="757" width="0.8934%" height="15" fill="rgb(229,61,13)" fg:x="21193" fg:w="2460"/><text x="7.9470%" y="767.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (2,460 samples, 0.89%)</title><rect x="7.6970%" y="741" width="0.8934%" height="15" fill="rgb(225,57,24)" fg:x="21193" fg:w="2460"/><text x="7.9470%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,460 samples, 0.89%)</title><rect x="7.6970%" y="725" width="0.8934%" height="15" fill="rgb(208,169,48)" fg:x="21193" fg:w="2460"/><text x="7.9470%" y="735.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2,460 samples, 0.89%)</title><rect x="7.6970%" y="709" width="0.8934%" height="15" fill="rgb(244,218,51)" fg:x="21193" fg:w="2460"/><text x="7.9470%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V&gt;::dying_next (60 samples, 0.02%)</title><rect x="8.5966%" y="709" width="0.0218%" height="15" fill="rgb(214,148,10)" fg:x="23670" fg:w="60"/><text x="8.8466%" y="719.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (32 samples, 0.01%)</title><rect x="8.6068%" y="693" width="0.0116%" height="15" fill="rgb(225,174,27)" fg:x="23698" fg:w="32"/><text x="8.8568%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.04%)</title><rect x="8.5908%" y="725" width="0.0414%" height="15" fill="rgb(230,96,26)" fg:x="23654" fg:w="114"/><text x="8.8408%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (38 samples, 0.01%)</title><rect x="8.6184%" y="709" width="0.0138%" height="15" fill="rgb(232,10,30)" fg:x="23730" fg:w="38"/><text x="8.8684%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (35 samples, 0.01%)</title><rect x="8.6195%" y="693" width="0.0127%" height="15" fill="rgb(222,8,50)" fg:x="23733" fg:w="35"/><text x="8.8695%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_key_val (35 samples, 0.01%)</title><rect x="8.6195%" y="677" width="0.0127%" height="15" fill="rgb(213,81,27)" fg:x="23733" fg:w="35"/><text x="8.8695%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.01%)</title><rect x="8.6326%" y="725" width="0.0105%" height="15" fill="rgb(245,50,10)" fg:x="23769" fg:w="29"/><text x="8.8826%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (29 samples, 0.01%)</title><rect x="8.6326%" y="709" width="0.0105%" height="15" fill="rgb(216,100,18)" fg:x="23769" fg:w="29"/><text x="8.8826%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.01%)</title><rect x="8.6326%" y="693" width="0.0105%" height="15" fill="rgb(236,147,54)" fg:x="23769" fg:w="29"/><text x="8.8826%" y="703.50"></text></g><g><title>clock_gettime (34 samples, 0.01%)</title><rect x="8.6522%" y="677" width="0.0123%" height="15" fill="rgb(205,143,26)" fg:x="23823" fg:w="34"/><text x="8.9022%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (204 samples, 0.07%)</title><rect x="8.5908%" y="741" width="0.0741%" height="15" fill="rgb(236,26,9)" fg:x="23654" fg:w="204"/><text x="8.8408%" y="751.50"></text></g><g><title>std::time::Instant::now (38 samples, 0.01%)</title><rect x="8.6511%" y="725" width="0.0138%" height="15" fill="rgb(221,165,53)" fg:x="23820" fg:w="38"/><text x="8.9011%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (35 samples, 0.01%)</title><rect x="8.6522%" y="709" width="0.0127%" height="15" fill="rgb(214,110,17)" fg:x="23823" fg:w="35"/><text x="8.9022%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (35 samples, 0.01%)</title><rect x="8.6522%" y="693" width="0.0127%" height="15" fill="rgb(237,197,12)" fg:x="23823" fg:w="35"/><text x="8.9022%" y="703.50"></text></g><g><title>epoll_wait (57 samples, 0.02%)</title><rect x="8.6711%" y="709" width="0.0207%" height="15" fill="rgb(205,84,17)" fg:x="23875" fg:w="57"/><text x="8.9211%" y="719.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="8.6732%" y="693" width="0.0185%" height="15" fill="rgb(237,18,45)" fg:x="23881" fg:w="51"/><text x="8.9232%" y="703.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="8.6751%" y="677" width="0.0167%" height="15" fill="rgb(221,87,14)" fg:x="23886" fg:w="46"/><text x="8.9251%" y="687.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="8.6751%" y="661" width="0.0167%" height="15" fill="rgb(238,186,15)" fg:x="23886" fg:w="46"/><text x="8.9251%" y="671.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="8.6758%" y="645" width="0.0160%" height="15" fill="rgb(208,115,11)" fg:x="23888" fg:w="44"/><text x="8.9258%" y="655.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="8.6776%" y="629" width="0.0142%" height="15" fill="rgb(254,175,0)" fg:x="23893" fg:w="39"/><text x="8.9276%" y="639.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="8.6812%" y="613" width="0.0105%" height="15" fill="rgb(227,24,42)" fg:x="23903" fg:w="29"/><text x="8.9312%" y="623.50"></text></g><g><title>read (314 samples, 0.11%)</title><rect x="8.6954%" y="709" width="0.1140%" height="15" fill="rgb(223,211,37)" fg:x="23942" fg:w="314"/><text x="8.9454%" y="719.50"></text></g><g><title>[unknown] (298 samples, 0.11%)</title><rect x="8.7012%" y="693" width="0.1082%" height="15" fill="rgb(235,49,27)" fg:x="23958" fg:w="298"/><text x="8.9512%" y="703.50"></text></g><g><title>[unknown] (282 samples, 0.10%)</title><rect x="8.7070%" y="677" width="0.1024%" height="15" fill="rgb(254,97,51)" fg:x="23974" fg:w="282"/><text x="8.9570%" y="687.50"></text></g><g><title>[unknown] (281 samples, 0.10%)</title><rect x="8.7074%" y="661" width="0.1021%" height="15" fill="rgb(249,51,40)" fg:x="23975" fg:w="281"/><text x="8.9574%" y="671.50"></text></g><g><title>[unknown] (270 samples, 0.10%)</title><rect x="8.7114%" y="645" width="0.0981%" height="15" fill="rgb(210,128,45)" fg:x="23986" fg:w="270"/><text x="8.9614%" y="655.50"></text></g><g><title>[unknown] (228 samples, 0.08%)</title><rect x="8.7266%" y="629" width="0.0828%" height="15" fill="rgb(224,137,50)" fg:x="24028" fg:w="228"/><text x="8.9766%" y="639.50"></text></g><g><title>[unknown] (141 samples, 0.05%)</title><rect x="8.7582%" y="613" width="0.0512%" height="15" fill="rgb(242,15,9)" fg:x="24115" fg:w="141"/><text x="9.0082%" y="623.50"></text></g><g><title>[unknown] (119 samples, 0.04%)</title><rect x="8.7662%" y="597" width="0.0432%" height="15" fill="rgb(233,187,41)" fg:x="24137" fg:w="119"/><text x="9.0162%" y="607.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="8.7895%" y="581" width="0.0200%" height="15" fill="rgb(227,2,29)" fg:x="24201" fg:w="55"/><text x="9.0395%" y="591.50"></text></g><g><title>polling::Poller::wait (687 samples, 0.25%)</title><rect x="8.6649%" y="741" width="0.2495%" height="15" fill="rgb(222,70,3)" fg:x="23858" fg:w="687"/><text x="8.9149%" y="751.50"></text></g><g><title>polling::epoll::Poller::wait (687 samples, 0.25%)</title><rect x="8.6649%" y="725" width="0.2495%" height="15" fill="rgb(213,11,42)" fg:x="23858" fg:w="687"/><text x="8.9149%" y="735.50"></text></g><g><title>syscall (276 samples, 0.10%)</title><rect x="8.8142%" y="709" width="0.1002%" height="15" fill="rgb(225,150,9)" fg:x="24269" fg:w="276"/><text x="9.0642%" y="719.50"></text></g><g><title>[unknown] (268 samples, 0.10%)</title><rect x="8.8171%" y="693" width="0.0973%" height="15" fill="rgb(230,162,45)" fg:x="24277" fg:w="268"/><text x="9.0671%" y="703.50"></text></g><g><title>[unknown] (260 samples, 0.09%)</title><rect x="8.8200%" y="677" width="0.0944%" height="15" fill="rgb(222,14,52)" fg:x="24285" fg:w="260"/><text x="9.0700%" y="687.50"></text></g><g><title>[unknown] (256 samples, 0.09%)</title><rect x="8.8214%" y="661" width="0.0930%" height="15" fill="rgb(254,198,14)" fg:x="24289" fg:w="256"/><text x="9.0714%" y="671.50"></text></g><g><title>[unknown] (243 samples, 0.09%)</title><rect x="8.8261%" y="645" width="0.0883%" height="15" fill="rgb(220,217,30)" fg:x="24302" fg:w="243"/><text x="9.0761%" y="655.50"></text></g><g><title>[unknown] (204 samples, 0.07%)</title><rect x="8.8403%" y="629" width="0.0741%" height="15" fill="rgb(215,146,41)" fg:x="24341" fg:w="204"/><text x="9.0903%" y="639.50"></text></g><g><title>[unknown] (116 samples, 0.04%)</title><rect x="8.8723%" y="613" width="0.0421%" height="15" fill="rgb(217,27,36)" fg:x="24429" fg:w="116"/><text x="9.1223%" y="623.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="8.8962%" y="597" width="0.0182%" height="15" fill="rgb(219,218,39)" fg:x="24495" fg:w="50"/><text x="9.1462%" y="607.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1221" width="1.7447%" height="15" fill="rgb(219,4,42)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1205" width="1.7447%" height="15" fill="rgb(249,119,36)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1189" width="1.7447%" height="15" fill="rgb(209,23,33)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1173" width="1.7447%" height="15" fill="rgb(211,10,0)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1157" width="1.7447%" height="15" fill="rgb(208,99,37)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1141" width="1.7447%" height="15" fill="rgb(213,132,31)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1151.50"></text></g><g><title>std::panicking::try (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1125" width="1.7447%" height="15" fill="rgb(243,129,40)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1109" width="1.7447%" height="15" fill="rgb(210,66,33)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1093" width="1.7447%" height="15" fill="rgb(209,189,4)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1077" width="1.7447%" height="15" fill="rgb(214,107,37)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,804 samples, 1.74%)</title><rect x="7.1715%" y="1061" width="1.7447%" height="15" fill="rgb(245,88,54)" fg:x="19746" fg:w="4804"/><text x="7.4215%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (3,357 samples, 1.22%)</title><rect x="7.6970%" y="1045" width="1.2192%" height="15" fill="rgb(205,146,20)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="1055.50"></text></g><g><title>async_std::task::block_on::block_on (3,357 samples, 1.22%)</title><rect x="7.6970%" y="1029" width="1.2192%" height="15" fill="rgb(220,161,25)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="1039.50"></text></g><g><title>async_std::task::builder::Builder::blocking (3,357 samples, 1.22%)</title><rect x="7.6970%" y="1013" width="1.2192%" height="15" fill="rgb(215,152,15)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,357 samples, 1.22%)</title><rect x="7.6970%" y="997" width="1.2192%" height="15" fill="rgb(233,192,44)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,357 samples, 1.22%)</title><rect x="7.6970%" y="981" width="1.2192%" height="15" fill="rgb(240,170,46)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="991.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (3,357 samples, 1.22%)</title><rect x="7.6970%" y="965" width="1.2192%" height="15" fill="rgb(207,104,33)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="975.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (3,357 samples, 1.22%)</title><rect x="7.6970%" y="949" width="1.2192%" height="15" fill="rgb(219,21,39)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,357 samples, 1.22%)</title><rect x="7.6970%" y="933" width="1.2192%" height="15" fill="rgb(214,133,29)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,357 samples, 1.22%)</title><rect x="7.6970%" y="917" width="1.2192%" height="15" fill="rgb(226,93,6)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (3,357 samples, 1.22%)</title><rect x="7.6970%" y="901" width="1.2192%" height="15" fill="rgb(252,222,34)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="911.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (3,357 samples, 1.22%)</title><rect x="7.6970%" y="885" width="1.2192%" height="15" fill="rgb(252,92,48)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="895.50"></text></g><g><title>async_global_executor::executor::block_on (3,357 samples, 1.22%)</title><rect x="7.6970%" y="869" width="1.2192%" height="15" fill="rgb(245,223,24)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,357 samples, 1.22%)</title><rect x="7.6970%" y="853" width="1.2192%" height="15" fill="rgb(205,176,3)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,357 samples, 1.22%)</title><rect x="7.6970%" y="837" width="1.2192%" height="15" fill="rgb(235,151,15)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="847.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (3,357 samples, 1.22%)</title><rect x="7.6970%" y="821" width="1.2192%" height="15" fill="rgb(237,209,11)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on (3,357 samples, 1.22%)</title><rect x="7.6970%" y="805" width="1.2192%" height="15" fill="rgb(243,227,24)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="815.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (3,357 samples, 1.22%)</title><rect x="7.6970%" y="789" width="1.2192%" height="15" fill="rgb(239,193,16)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="799.50"></text></g><g><title>async_io::driver::block_on (3,357 samples, 1.22%)</title><rect x="7.6970%" y="773" width="1.2192%" height="15" fill="rgb(231,27,9)" fg:x="21193" fg:w="3357"/><text x="7.9470%" y="783.50"></text></g><g><title>async_io::reactor::ReactorLock::react (897 samples, 0.33%)</title><rect x="8.5904%" y="757" width="0.3258%" height="15" fill="rgb(219,169,10)" fg:x="23653" fg:w="897"/><text x="8.8404%" y="767.50"></text></g><g><title>[libc.so.6] (4,838 samples, 1.76%)</title><rect x="7.1617%" y="1237" width="1.7571%" height="15" fill="rgb(244,229,43)" fg:x="19719" fg:w="4838"/><text x="7.4117%" y="1247.50"></text></g><g><title>[unknown] (349 samples, 0.13%)</title><rect x="8.9188%" y="1237" width="0.1268%" height="15" fill="rgb(254,38,20)" fg:x="24557" fg:w="349"/><text x="9.1688%" y="1247.50"></text></g><g><title>[unknown] (344 samples, 0.12%)</title><rect x="8.9206%" y="1221" width="0.1249%" height="15" fill="rgb(250,47,30)" fg:x="24562" fg:w="344"/><text x="9.1706%" y="1231.50"></text></g><g><title>[unknown] (339 samples, 0.12%)</title><rect x="8.9224%" y="1205" width="0.1231%" height="15" fill="rgb(224,124,36)" fg:x="24567" fg:w="339"/><text x="9.1724%" y="1215.50"></text></g><g><title>[unknown] (232 samples, 0.08%)</title><rect x="8.9613%" y="1189" width="0.0843%" height="15" fill="rgb(246,68,51)" fg:x="24674" fg:w="232"/><text x="9.2113%" y="1199.50"></text></g><g><title>[unknown] (177 samples, 0.06%)</title><rect x="8.9812%" y="1173" width="0.0643%" height="15" fill="rgb(253,43,49)" fg:x="24729" fg:w="177"/><text x="9.2312%" y="1183.50"></text></g><g><title>[unknown] (140 samples, 0.05%)</title><rect x="8.9947%" y="1157" width="0.0508%" height="15" fill="rgb(219,54,36)" fg:x="24766" fg:w="140"/><text x="9.2447%" y="1167.50"></text></g><g><title>[unknown] (116 samples, 0.04%)</title><rect x="9.0034%" y="1141" width="0.0421%" height="15" fill="rgb(227,133,34)" fg:x="24790" fg:w="116"/><text x="9.2534%" y="1151.50"></text></g><g><title>[unknown] (76 samples, 0.03%)</title><rect x="9.0179%" y="1125" width="0.0276%" height="15" fill="rgb(247,227,15)" fg:x="24830" fg:w="76"/><text x="9.2679%" y="1135.50"></text></g><g><title>__clone (128 samples, 0.05%)</title><rect x="9.0455%" y="1237" width="0.0465%" height="15" fill="rgb(229,96,14)" fg:x="24906" fg:w="128"/><text x="9.2955%" y="1247.50"></text></g><g><title>[unknown] (128 samples, 0.05%)</title><rect x="9.0455%" y="1221" width="0.0465%" height="15" fill="rgb(220,79,17)" fg:x="24906" fg:w="128"/><text x="9.2955%" y="1231.50"></text></g><g><title>[unknown] (128 samples, 0.05%)</title><rect x="9.0455%" y="1205" width="0.0465%" height="15" fill="rgb(205,131,53)" fg:x="24906" fg:w="128"/><text x="9.2955%" y="1215.50"></text></g><g><title>[unknown] (128 samples, 0.05%)</title><rect x="9.0455%" y="1189" width="0.0465%" height="15" fill="rgb(209,50,29)" fg:x="24906" fg:w="128"/><text x="9.2955%" y="1199.50"></text></g><g><title>[unknown] (126 samples, 0.05%)</title><rect x="9.0462%" y="1173" width="0.0458%" height="15" fill="rgb(245,86,46)" fg:x="24908" fg:w="126"/><text x="9.2962%" y="1183.50"></text></g><g><title>[unknown] (120 samples, 0.04%)</title><rect x="9.0484%" y="1157" width="0.0436%" height="15" fill="rgb(235,66,46)" fg:x="24914" fg:w="120"/><text x="9.2984%" y="1167.50"></text></g><g><title>[unknown] (108 samples, 0.04%)</title><rect x="9.0528%" y="1141" width="0.0392%" height="15" fill="rgb(232,148,31)" fg:x="24926" fg:w="108"/><text x="9.3028%" y="1151.50"></text></g><g><title>[unknown] (77 samples, 0.03%)</title><rect x="9.0640%" y="1125" width="0.0280%" height="15" fill="rgb(217,149,8)" fg:x="24957" fg:w="77"/><text x="9.3140%" y="1135.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="9.0815%" y="1109" width="0.0105%" height="15" fill="rgb(209,183,11)" fg:x="25005" fg:w="29"/><text x="9.3315%" y="1119.50"></text></g><g><title>__rust_probestack (98 samples, 0.04%)</title><rect x="9.0935%" y="1237" width="0.0356%" height="15" fill="rgb(208,55,20)" fg:x="25038" fg:w="98"/><text x="9.3435%" y="1247.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="9.1403%" y="1221" width="0.0171%" height="15" fill="rgb(218,39,14)" fg:x="25167" fg:w="47"/><text x="9.3903%" y="1231.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="9.1432%" y="1205" width="0.0142%" height="15" fill="rgb(216,169,33)" fg:x="25175" fg:w="39"/><text x="9.3932%" y="1215.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="9.1439%" y="1189" width="0.0134%" height="15" fill="rgb(233,80,24)" fg:x="25177" fg:w="37"/><text x="9.3939%" y="1199.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="9.1439%" y="1173" width="0.0134%" height="15" fill="rgb(213,179,31)" fg:x="25177" fg:w="37"/><text x="9.3939%" y="1183.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="9.1465%" y="1157" width="0.0109%" height="15" fill="rgb(209,19,5)" fg:x="25184" fg:w="30"/><text x="9.3965%" y="1167.50"></text></g><g><title>[libc.so.6] (619 samples, 0.22%)</title><rect x="9.1654%" y="1205" width="0.2248%" height="15" fill="rgb(219,18,35)" fg:x="25236" fg:w="619"/><text x="9.4154%" y="1215.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="9.3735%" y="1189" width="0.0167%" height="15" fill="rgb(209,169,16)" fg:x="25809" fg:w="46"/><text x="9.6235%" y="1199.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="9.3742%" y="1173" width="0.0160%" height="15" fill="rgb(245,90,51)" fg:x="25811" fg:w="44"/><text x="9.6242%" y="1183.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="9.3753%" y="1157" width="0.0149%" height="15" fill="rgb(220,99,45)" fg:x="25814" fg:w="41"/><text x="9.6253%" y="1167.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="9.3760%" y="1141" width="0.0142%" height="15" fill="rgb(249,89,25)" fg:x="25816" fg:w="39"/><text x="9.6260%" y="1151.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="9.3793%" y="1125" width="0.0109%" height="15" fill="rgb(239,193,0)" fg:x="25825" fg:w="30"/><text x="9.6293%" y="1135.50"></text></g><g><title>__rust_probestack (86 samples, 0.03%)</title><rect x="9.3967%" y="1205" width="0.0312%" height="15" fill="rgb(231,126,1)" fg:x="25873" fg:w="86"/><text x="9.6467%" y="1215.50"></text></g><g><title>[libc.so.6] (568 samples, 0.21%)</title><rect x="9.4279%" y="1189" width="0.2063%" height="15" fill="rgb(243,166,3)" fg:x="25959" fg:w="568"/><text x="9.6779%" y="1199.50"></text></g><g><title>[libc.so.6] (47 samples, 0.02%)</title><rect x="10.0043%" y="1077" width="0.0171%" height="15" fill="rgb(223,22,34)" fg:x="27546" fg:w="47"/><text x="10.2543%" y="1087.50"></text></g><g><title>[unknown] (145 samples, 0.05%)</title><rect x="10.0214%" y="1077" width="0.0527%" height="15" fill="rgb(251,52,51)" fg:x="27593" fg:w="145"/><text x="10.2714%" y="1087.50"></text></g><g><title>[unknown] (143 samples, 0.05%)</title><rect x="10.0221%" y="1061" width="0.0519%" height="15" fill="rgb(221,165,28)" fg:x="27595" fg:w="143"/><text x="10.2721%" y="1071.50"></text></g><g><title>[unknown] (138 samples, 0.05%)</title><rect x="10.0239%" y="1045" width="0.0501%" height="15" fill="rgb(218,121,47)" fg:x="27600" fg:w="138"/><text x="10.2739%" y="1055.50"></text></g><g><title>[unknown] (133 samples, 0.05%)</title><rect x="10.0257%" y="1029" width="0.0483%" height="15" fill="rgb(209,120,9)" fg:x="27605" fg:w="133"/><text x="10.2757%" y="1039.50"></text></g><g><title>[unknown] (116 samples, 0.04%)</title><rect x="10.0319%" y="1013" width="0.0421%" height="15" fill="rgb(236,68,12)" fg:x="27622" fg:w="116"/><text x="10.2819%" y="1023.50"></text></g><g><title>[unknown] (91 samples, 0.03%)</title><rect x="10.0410%" y="997" width="0.0330%" height="15" fill="rgb(225,194,26)" fg:x="27647" fg:w="91"/><text x="10.2910%" y="1007.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="10.0483%" y="981" width="0.0258%" height="15" fill="rgb(231,84,39)" fg:x="27667" fg:w="71"/><text x="10.2983%" y="991.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="10.0537%" y="965" width="0.0203%" height="15" fill="rgb(210,11,45)" fg:x="27682" fg:w="56"/><text x="10.3037%" y="975.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="10.0573%" y="949" width="0.0167%" height="15" fill="rgb(224,54,52)" fg:x="27692" fg:w="46"/><text x="10.3073%" y="959.50"></text></g><g><title>[libc.so.6] (885 samples, 0.32%)</title><rect x="9.8038%" y="1093" width="0.3214%" height="15" fill="rgb(238,102,14)" fg:x="26994" fg:w="885"/><text x="10.0538%" y="1103.50"></text></g><g><title>__mprotect (138 samples, 0.05%)</title><rect x="10.0751%" y="1077" width="0.0501%" height="15" fill="rgb(243,160,52)" fg:x="27741" fg:w="138"/><text x="10.3251%" y="1087.50"></text></g><g><title>[unknown] (138 samples, 0.05%)</title><rect x="10.0751%" y="1061" width="0.0501%" height="15" fill="rgb(216,114,19)" fg:x="27741" fg:w="138"/><text x="10.3251%" y="1071.50"></text></g><g><title>[unknown] (136 samples, 0.05%)</title><rect x="10.0759%" y="1045" width="0.0494%" height="15" fill="rgb(244,166,37)" fg:x="27743" fg:w="136"/><text x="10.3259%" y="1055.50"></text></g><g><title>[unknown] (135 samples, 0.05%)</title><rect x="10.0762%" y="1029" width="0.0490%" height="15" fill="rgb(246,29,44)" fg:x="27744" fg:w="135"/><text x="10.3262%" y="1039.50"></text></g><g><title>[unknown] (128 samples, 0.05%)</title><rect x="10.0788%" y="1013" width="0.0465%" height="15" fill="rgb(215,56,53)" fg:x="27751" fg:w="128"/><text x="10.3288%" y="1023.50"></text></g><g><title>[unknown] (116 samples, 0.04%)</title><rect x="10.0831%" y="997" width="0.0421%" height="15" fill="rgb(217,60,2)" fg:x="27763" fg:w="116"/><text x="10.3331%" y="1007.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="10.0951%" y="981" width="0.0301%" height="15" fill="rgb(207,26,24)" fg:x="27796" fg:w="83"/><text x="10.3451%" y="991.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="10.1057%" y="965" width="0.0196%" height="15" fill="rgb(252,210,15)" fg:x="27825" fg:w="54"/><text x="10.3557%" y="975.50"></text></g><g><title>[libc.so.6] (1,204 samples, 0.44%)</title><rect x="9.6992%" y="1109" width="0.4373%" height="15" fill="rgb(253,209,26)" fg:x="26706" fg:w="1204"/><text x="9.9492%" y="1119.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.1253%" y="1093" width="0.0113%" height="15" fill="rgb(238,170,14)" fg:x="27879" fg:w="31"/><text x="10.3753%" y="1103.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.1253%" y="1077" width="0.0113%" height="15" fill="rgb(216,178,15)" fg:x="27879" fg:w="31"/><text x="10.3753%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,408 samples, 0.51%)</title><rect x="9.6342%" y="1189" width="0.5114%" height="15" fill="rgb(250,197,2)" fg:x="26527" fg:w="1408"/><text x="9.8842%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,408 samples, 0.51%)</title><rect x="9.6342%" y="1173" width="0.5114%" height="15" fill="rgb(212,70,42)" fg:x="26527" fg:w="1408"/><text x="9.8842%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,408 samples, 0.51%)</title><rect x="9.6342%" y="1157" width="0.5114%" height="15" fill="rgb(227,213,9)" fg:x="26527" fg:w="1408"/><text x="9.8842%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1,407 samples, 0.51%)</title><rect x="9.6346%" y="1141" width="0.5110%" height="15" fill="rgb(245,99,25)" fg:x="26528" fg:w="1407"/><text x="9.8846%" y="1151.50"></text></g><g><title>malloc (1,388 samples, 0.50%)</title><rect x="9.6415%" y="1125" width="0.5041%" height="15" fill="rgb(250,82,29)" fg:x="26547" fg:w="1388"/><text x="9.8915%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1,984 samples, 0.72%)</title><rect x="9.4279%" y="1205" width="0.7206%" height="15" fill="rgb(241,226,54)" fg:x="25959" fg:w="1984"/><text x="9.6779%" y="1215.50"></text></g><g><title>[libc.so.6] (64 samples, 0.02%)</title><rect x="10.1932%" y="1157" width="0.0232%" height="15" fill="rgb(221,99,41)" fg:x="28066" fg:w="64"/><text x="10.4432%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (180 samples, 0.07%)</title><rect x="10.1521%" y="1189" width="0.0654%" height="15" fill="rgb(213,90,21)" fg:x="27953" fg:w="180"/><text x="10.4021%" y="1199.50"></text></g><g><title>malloc (166 samples, 0.06%)</title><rect x="10.1572%" y="1173" width="0.0603%" height="15" fill="rgb(205,208,24)" fg:x="27967" fg:w="166"/><text x="10.4072%" y="1183.50"></text></g><g><title>async_task::runnable::spawn_unchecked (2,903 samples, 1.05%)</title><rect x="9.1646%" y="1221" width="1.0543%" height="15" fill="rgb(246,31,12)" fg:x="25234" fg:w="2903"/><text x="9.4146%" y="1231.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (194 samples, 0.07%)</title><rect x="10.1485%" y="1205" width="0.0705%" height="15" fill="rgb(213,154,6)" fg:x="27943" fg:w="194"/><text x="10.3985%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (34 samples, 0.01%)</title><rect x="10.2190%" y="1221" width="0.0123%" height="15" fill="rgb(222,163,29)" fg:x="28137" fg:w="34"/><text x="10.4690%" y="1231.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="10.2190%" y="1205" width="0.0123%" height="15" fill="rgb(227,201,8)" fg:x="28137" fg:w="34"/><text x="10.4690%" y="1215.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.01%)</title><rect x="10.2193%" y="1189" width="0.0120%" height="15" fill="rgb(233,9,32)" fg:x="28138" fg:w="33"/><text x="10.4693%" y="1199.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (33 samples, 0.01%)</title><rect x="10.2193%" y="1173" width="0.0120%" height="15" fill="rgb(217,54,24)" fg:x="28138" fg:w="33"/><text x="10.4693%" y="1183.50"></text></g><g><title>std::sys::unix::futex::futex_wait (32 samples, 0.01%)</title><rect x="10.2331%" y="1157" width="0.0116%" height="15" fill="rgb(235,192,0)" fg:x="28176" fg:w="32"/><text x="10.4831%" y="1167.50"></text></g><g><title>syscall (30 samples, 0.01%)</title><rect x="10.2339%" y="1141" width="0.0109%" height="15" fill="rgb(235,45,9)" fg:x="28178" fg:w="30"/><text x="10.4839%" y="1151.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="10.2339%" y="1125" width="0.0109%" height="15" fill="rgb(246,42,40)" fg:x="28178" fg:w="30"/><text x="10.4839%" y="1135.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="10.2339%" y="1109" width="0.0109%" height="15" fill="rgb(248,111,24)" fg:x="28178" fg:w="30"/><text x="10.4839%" y="1119.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="10.2339%" y="1093" width="0.0109%" height="15" fill="rgb(249,65,22)" fg:x="28178" fg:w="30"/><text x="10.4839%" y="1103.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="10.2339%" y="1077" width="0.0109%" height="15" fill="rgb(238,111,51)" fg:x="28178" fg:w="30"/><text x="10.4839%" y="1087.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="10.2346%" y="1061" width="0.0102%" height="15" fill="rgb(250,118,22)" fg:x="28180" fg:w="28"/><text x="10.4846%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.02%)</title><rect x="10.2328%" y="1221" width="0.0189%" height="15" fill="rgb(234,84,26)" fg:x="28175" fg:w="52"/><text x="10.4828%" y="1231.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (51 samples, 0.02%)</title><rect x="10.2331%" y="1205" width="0.0185%" height="15" fill="rgb(243,172,12)" fg:x="28176" fg:w="51"/><text x="10.4831%" y="1215.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (51 samples, 0.02%)</title><rect x="10.2331%" y="1189" width="0.0185%" height="15" fill="rgb(236,150,49)" fg:x="28176" fg:w="51"/><text x="10.4831%" y="1199.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (51 samples, 0.02%)</title><rect x="10.2331%" y="1173" width="0.0185%" height="15" fill="rgb(225,197,26)" fg:x="28176" fg:w="51"/><text x="10.4831%" y="1183.50"></text></g><g><title>async_executor::Executor::spawn (3,086 samples, 1.12%)</title><rect x="9.1352%" y="1237" width="1.1208%" height="15" fill="rgb(214,17,42)" fg:x="25153" fg:w="3086"/><text x="9.3852%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="1189" width="0.0102%" height="15" fill="rgb(224,165,40)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1199.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="1173" width="0.0102%" height="15" fill="rgb(246,100,4)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="1157" width="0.0102%" height="15" fill="rgb(222,103,0)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1167.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="1141" width="0.0102%" height="15" fill="rgb(227,189,26)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="1125" width="0.0102%" height="15" fill="rgb(214,202,17)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1135.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="1109" width="0.0102%" height="15" fill="rgb(229,111,3)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1119.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (28 samples, 0.01%)</title><rect x="10.2575%" y="1093" width="0.0102%" height="15" fill="rgb(229,172,15)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.01%)</title><rect x="10.2575%" y="1077" width="0.0102%" height="15" fill="rgb(230,224,35)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.01%)</title><rect x="10.2575%" y="1061" width="0.0102%" height="15" fill="rgb(251,141,6)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1071.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="1045" width="0.0102%" height="15" fill="rgb(225,208,6)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1055.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="1029" width="0.0102%" height="15" fill="rgb(246,181,16)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="1013" width="0.0102%" height="15" fill="rgb(227,129,36)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1023.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="997" width="0.0102%" height="15" fill="rgb(248,117,24)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="1007.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="981" width="0.0102%" height="15" fill="rgb(214,185,35)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="965" width="0.0102%" height="15" fill="rgb(236,150,34)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="949" width="0.0102%" height="15" fill="rgb(243,228,27)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (28 samples, 0.01%)</title><rect x="10.2575%" y="933" width="0.0102%" height="15" fill="rgb(245,77,44)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="917" width="0.0102%" height="15" fill="rgb(235,214,42)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="901" width="0.0102%" height="15" fill="rgb(221,74,3)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="885" width="0.0102%" height="15" fill="rgb(206,121,29)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="895.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="869" width="0.0102%" height="15" fill="rgb(249,131,53)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="853" width="0.0102%" height="15" fill="rgb(236,170,29)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="837" width="0.0102%" height="15" fill="rgb(247,96,15)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="847.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="821" width="0.0102%" height="15" fill="rgb(211,210,7)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="805" width="0.0102%" height="15" fill="rgb(240,88,50)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="815.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="789" width="0.0102%" height="15" fill="rgb(209,229,26)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="773" width="0.0102%" height="15" fill="rgb(210,68,23)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="783.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="757" width="0.0102%" height="15" fill="rgb(229,180,13)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="741" width="0.0102%" height="15" fill="rgb(236,53,44)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="751.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="725" width="0.0102%" height="15" fill="rgb(244,214,29)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="709" width="0.0102%" height="15" fill="rgb(220,75,29)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="719.50"></text></g><g><title>async_std::io::timeout::timeout::{{closure}} (28 samples, 0.01%)</title><rect x="10.2575%" y="693" width="0.0102%" height="15" fill="rgb(214,183,37)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="703.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="677" width="0.0102%" height="15" fill="rgb(239,117,29)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="687.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="10.2575%" y="661" width="0.0102%" height="15" fill="rgb(237,171,35)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="671.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (28 samples, 0.01%)</title><rect x="10.2575%" y="645" width="0.0102%" height="15" fill="rgb(229,178,53)" fg:x="28243" fg:w="28"/><text x="10.5075%" y="655.50"></text></g><g><title>[libc.so.6] (41 samples, 0.01%)</title><rect x="10.2698%" y="533" width="0.0149%" height="15" fill="rgb(210,102,19)" fg:x="28277" fg:w="41"/><text x="10.5198%" y="543.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (41 samples, 0.01%)</title><rect x="10.3021%" y="453" width="0.0149%" height="15" fill="rgb(235,127,22)" fg:x="28366" fg:w="41"/><text x="10.5521%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::handle::Handle&gt;&gt; (37 samples, 0.01%)</title><rect x="10.3036%" y="437" width="0.0134%" height="15" fill="rgb(244,31,31)" fg:x="28370" fg:w="37"/><text x="10.5536%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::Handle&gt; (37 samples, 0.01%)</title><rect x="10.3036%" y="421" width="0.0134%" height="15" fill="rgb(231,43,21)" fg:x="28370" fg:w="37"/><text x="10.5536%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (37 samples, 0.01%)</title><rect x="10.3036%" y="405" width="0.0134%" height="15" fill="rgb(217,131,35)" fg:x="28370" fg:w="37"/><text x="10.5536%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::thread_pool::Spawner&gt; (37 samples, 0.01%)</title><rect x="10.3036%" y="389" width="0.0134%" height="15" fill="rgb(221,149,4)" fg:x="28370" fg:w="37"/><text x="10.5536%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt; (37 samples, 0.01%)</title><rect x="10.3036%" y="373" width="0.0134%" height="15" fill="rgb(232,170,28)" fg:x="28370" fg:w="37"/><text x="10.5536%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.01%)</title><rect x="10.3036%" y="357" width="0.0134%" height="15" fill="rgb(238,56,10)" fg:x="28370" fg:w="37"/><text x="10.5536%" y="367.50"></text></g><g><title>&lt;tokio::runtime::context::EnterGuard as core::ops::drop::Drop&gt;::drop (61 samples, 0.02%)</title><rect x="10.2985%" y="501" width="0.0222%" height="15" fill="rgb(235,196,14)" fg:x="28356" fg:w="61"/><text x="10.5485%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (51 samples, 0.02%)</title><rect x="10.3021%" y="485" width="0.0185%" height="15" fill="rgb(216,45,48)" fg:x="28366" fg:w="51"/><text x="10.5521%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (51 samples, 0.02%)</title><rect x="10.3021%" y="469" width="0.0185%" height="15" fill="rgb(238,213,17)" fg:x="28366" fg:w="51"/><text x="10.5521%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::handle::EnterGuard&gt; (64 samples, 0.02%)</title><rect x="10.2981%" y="533" width="0.0232%" height="15" fill="rgb(212,13,2)" fg:x="28355" fg:w="64"/><text x="10.5481%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::context::EnterGuard&gt; (64 samples, 0.02%)</title><rect x="10.2981%" y="517" width="0.0232%" height="15" fill="rgb(240,114,20)" fg:x="28355" fg:w="64"/><text x="10.5481%" y="527.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (83 samples, 0.03%)</title><rect x="10.3232%" y="501" width="0.0301%" height="15" fill="rgb(228,41,40)" fg:x="28424" fg:w="83"/><text x="10.5732%" y="511.50"></text></g><g><title>&lt;tokio::runtime::handle::Handle as core::clone::Clone&gt;::clone (84 samples, 0.03%)</title><rect x="10.3232%" y="517" width="0.0305%" height="15" fill="rgb(244,132,35)" fg:x="28424" fg:w="84"/><text x="10.5732%" y="527.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (257 samples, 0.09%)</title><rect x="10.2676%" y="837" width="0.0933%" height="15" fill="rgb(253,189,4)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (257 samples, 0.09%)</title><rect x="10.2676%" y="821" width="0.0933%" height="15" fill="rgb(224,37,19)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (257 samples, 0.09%)</title><rect x="10.2676%" y="805" width="0.0933%" height="15" fill="rgb(235,223,18)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="815.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (257 samples, 0.09%)</title><rect x="10.2676%" y="789" width="0.0933%" height="15" fill="rgb(235,163,25)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="799.50"></text></g><g><title>async_std::task::block_on::block_on (257 samples, 0.09%)</title><rect x="10.2676%" y="773" width="0.0933%" height="15" fill="rgb(217,145,28)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="783.50"></text></g><g><title>async_std::task::builder::Builder::blocking (257 samples, 0.09%)</title><rect x="10.2676%" y="757" width="0.0933%" height="15" fill="rgb(223,223,32)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (257 samples, 0.09%)</title><rect x="10.2676%" y="741" width="0.0933%" height="15" fill="rgb(227,189,39)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (257 samples, 0.09%)</title><rect x="10.2676%" y="725" width="0.0933%" height="15" fill="rgb(248,10,22)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="735.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (257 samples, 0.09%)</title><rect x="10.2676%" y="709" width="0.0933%" height="15" fill="rgb(248,46,39)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (257 samples, 0.09%)</title><rect x="10.2676%" y="693" width="0.0933%" height="15" fill="rgb(248,113,48)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (257 samples, 0.09%)</title><rect x="10.2676%" y="677" width="0.0933%" height="15" fill="rgb(245,16,25)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (257 samples, 0.09%)</title><rect x="10.2676%" y="661" width="0.0933%" height="15" fill="rgb(249,152,16)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (257 samples, 0.09%)</title><rect x="10.2676%" y="645" width="0.0933%" height="15" fill="rgb(250,16,1)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="655.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (257 samples, 0.09%)</title><rect x="10.2676%" y="629" width="0.0933%" height="15" fill="rgb(249,138,3)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="639.50"></text></g><g><title>async_global_executor::executor::block_on (257 samples, 0.09%)</title><rect x="10.2676%" y="613" width="0.0933%" height="15" fill="rgb(227,71,41)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (257 samples, 0.09%)</title><rect x="10.2676%" y="597" width="0.0933%" height="15" fill="rgb(209,184,23)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (257 samples, 0.09%)</title><rect x="10.2676%" y="581" width="0.0933%" height="15" fill="rgb(223,215,31)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="591.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (257 samples, 0.09%)</title><rect x="10.2676%" y="565" width="0.0933%" height="15" fill="rgb(210,146,28)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="575.50"></text></g><g><title>async_global_executor::reactor::block_on (257 samples, 0.09%)</title><rect x="10.2676%" y="549" width="0.0933%" height="15" fill="rgb(209,183,41)" fg:x="28271" fg:w="257"/><text x="10.5176%" y="559.50"></text></g><g><title>tokio::runtime::handle::Handle::enter (109 samples, 0.04%)</title><rect x="10.3214%" y="533" width="0.0396%" height="15" fill="rgb(209,224,45)" fg:x="28419" fg:w="109"/><text x="10.5714%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (314 samples, 0.11%)</title><rect x="10.2676%" y="917" width="0.1140%" height="15" fill="rgb(224,209,51)" fg:x="28271" fg:w="314"/><text x="10.5176%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (314 samples, 0.11%)</title><rect x="10.2676%" y="901" width="0.1140%" height="15" fill="rgb(223,17,39)" fg:x="28271" fg:w="314"/><text x="10.5176%" y="911.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (314 samples, 0.11%)</title><rect x="10.2676%" y="885" width="0.1140%" height="15" fill="rgb(234,204,37)" fg:x="28271" fg:w="314"/><text x="10.5176%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (314 samples, 0.11%)</title><rect x="10.2676%" y="869" width="0.1140%" height="15" fill="rgb(236,120,5)" fg:x="28271" fg:w="314"/><text x="10.5176%" y="879.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (314 samples, 0.11%)</title><rect x="10.2676%" y="853" width="0.1140%" height="15" fill="rgb(248,97,27)" fg:x="28271" fg:w="314"/><text x="10.5176%" y="863.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (57 samples, 0.02%)</title><rect x="10.3610%" y="837" width="0.0207%" height="15" fill="rgb(240,66,17)" fg:x="28528" fg:w="57"/><text x="10.6110%" y="847.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (57 samples, 0.02%)</title><rect x="10.3610%" y="821" width="0.0207%" height="15" fill="rgb(210,79,3)" fg:x="28528" fg:w="57"/><text x="10.6110%" y="831.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (57 samples, 0.02%)</title><rect x="10.3610%" y="805" width="0.0207%" height="15" fill="rgb(214,176,27)" fg:x="28528" fg:w="57"/><text x="10.6110%" y="815.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (57 samples, 0.02%)</title><rect x="10.3610%" y="789" width="0.0207%" height="15" fill="rgb(235,185,3)" fg:x="28528" fg:w="57"/><text x="10.6110%" y="799.50"></text></g><g><title>shared_memory::ShmemConf::open (43 samples, 0.02%)</title><rect x="10.3922%" y="661" width="0.0156%" height="15" fill="rgb(227,24,12)" fg:x="28614" fg:w="43"/><text x="10.6422%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (36 samples, 0.01%)</title><rect x="10.4136%" y="613" width="0.0131%" height="15" fill="rgb(252,169,48)" fg:x="28673" fg:w="36"/><text x="10.6636%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (36 samples, 0.01%)</title><rect x="10.4136%" y="597" width="0.0131%" height="15" fill="rgb(212,65,1)" fg:x="28673" fg:w="36"/><text x="10.6636%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (35 samples, 0.01%)</title><rect x="10.4140%" y="581" width="0.0127%" height="15" fill="rgb(242,39,24)" fg:x="28674" fg:w="35"/><text x="10.6640%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (35 samples, 0.01%)</title><rect x="10.4140%" y="565" width="0.0127%" height="15" fill="rgb(249,32,23)" fg:x="28674" fg:w="35"/><text x="10.6640%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (99 samples, 0.04%)</title><rect x="10.3911%" y="709" width="0.0360%" height="15" fill="rgb(251,195,23)" fg:x="28611" fg:w="99"/><text x="10.6411%" y="719.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (99 samples, 0.04%)</title><rect x="10.3911%" y="693" width="0.0360%" height="15" fill="rgb(236,174,8)" fg:x="28611" fg:w="99"/><text x="10.6411%" y="703.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::connect_map_to_shm (99 samples, 0.04%)</title><rect x="10.3911%" y="677" width="0.0360%" height="15" fill="rgb(220,197,8)" fg:x="28611" fg:w="99"/><text x="10.6411%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (53 samples, 0.02%)</title><rect x="10.4078%" y="661" width="0.0192%" height="15" fill="rgb(240,108,37)" fg:x="28657" fg:w="53"/><text x="10.6578%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (53 samples, 0.02%)</title><rect x="10.4078%" y="645" width="0.0192%" height="15" fill="rgb(232,176,24)" fg:x="28657" fg:w="53"/><text x="10.6578%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (38 samples, 0.01%)</title><rect x="10.4133%" y="629" width="0.0138%" height="15" fill="rgb(243,35,29)" fg:x="28672" fg:w="38"/><text x="10.6633%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (106 samples, 0.04%)</title><rect x="10.3911%" y="757" width="0.0385%" height="15" fill="rgb(210,37,18)" fg:x="28611" fg:w="106"/><text x="10.6411%" y="767.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (106 samples, 0.04%)</title><rect x="10.3911%" y="741" width="0.0385%" height="15" fill="rgb(224,184,40)" fg:x="28611" fg:w="106"/><text x="10.6411%" y="751.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (106 samples, 0.04%)</title><rect x="10.3911%" y="725" width="0.0385%" height="15" fill="rgb(236,39,29)" fg:x="28611" fg:w="106"/><text x="10.6411%" y="735.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (142 samples, 0.05%)</title><rect x="10.3817%" y="837" width="0.0516%" height="15" fill="rgb(232,48,39)" fg:x="28585" fg:w="142"/><text x="10.6317%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (142 samples, 0.05%)</title><rect x="10.3817%" y="821" width="0.0516%" height="15" fill="rgb(236,34,42)" fg:x="28585" fg:w="142"/><text x="10.6317%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (142 samples, 0.05%)</title><rect x="10.3817%" y="805" width="0.0516%" height="15" fill="rgb(243,106,37)" fg:x="28585" fg:w="142"/><text x="10.6317%" y="815.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (116 samples, 0.04%)</title><rect x="10.3911%" y="789" width="0.0421%" height="15" fill="rgb(218,96,6)" fg:x="28611" fg:w="116"/><text x="10.6411%" y="799.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (116 samples, 0.04%)</title><rect x="10.3911%" y="773" width="0.0421%" height="15" fill="rgb(235,130,12)" fg:x="28611" fg:w="116"/><text x="10.6411%" y="783.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (95 samples, 0.03%)</title><rect x="10.4460%" y="789" width="0.0345%" height="15" fill="rgb(231,95,0)" fg:x="28762" fg:w="95"/><text x="10.6960%" y="799.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (103 samples, 0.04%)</title><rect x="10.4460%" y="821" width="0.0374%" height="15" fill="rgb(228,12,23)" fg:x="28762" fg:w="103"/><text x="10.6960%" y="831.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (103 samples, 0.04%)</title><rect x="10.4460%" y="805" width="0.0374%" height="15" fill="rgb(216,12,1)" fg:x="28762" fg:w="103"/><text x="10.6960%" y="815.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="10.5342%" y="437" width="0.0105%" height="15" fill="rgb(219,59,3)" fg:x="29005" fg:w="29"/><text x="10.7842%" y="447.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::new (46 samples, 0.02%)</title><rect x="10.5284%" y="581" width="0.0167%" height="15" fill="rgb(215,208,46)" fg:x="28989" fg:w="46"/><text x="10.7784%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (46 samples, 0.02%)</title><rect x="10.5284%" y="565" width="0.0167%" height="15" fill="rgb(254,224,29)" fg:x="28989" fg:w="46"/><text x="10.7784%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (46 samples, 0.02%)</title><rect x="10.5284%" y="549" width="0.0167%" height="15" fill="rgb(232,14,29)" fg:x="28989" fg:w="46"/><text x="10.7784%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44 samples, 0.02%)</title><rect x="10.5291%" y="533" width="0.0160%" height="15" fill="rgb(208,45,52)" fg:x="28991" fg:w="44"/><text x="10.7791%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.02%)</title><rect x="10.5291%" y="517" width="0.0160%" height="15" fill="rgb(234,191,28)" fg:x="28991" fg:w="44"/><text x="10.7791%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.02%)</title><rect x="10.5291%" y="501" width="0.0160%" height="15" fill="rgb(244,67,43)" fg:x="28991" fg:w="44"/><text x="10.7791%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.02%)</title><rect x="10.5291%" y="485" width="0.0160%" height="15" fill="rgb(236,189,24)" fg:x="28991" fg:w="44"/><text x="10.7791%" y="495.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.02%)</title><rect x="10.5295%" y="469" width="0.0156%" height="15" fill="rgb(239,214,33)" fg:x="28992" fg:w="43"/><text x="10.7795%" y="479.50"></text></g><g><title>malloc (43 samples, 0.02%)</title><rect x="10.5295%" y="453" width="0.0156%" height="15" fill="rgb(226,176,41)" fg:x="28992" fg:w="43"/><text x="10.7795%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (108 samples, 0.04%)</title><rect x="10.5121%" y="629" width="0.0392%" height="15" fill="rgb(248,47,8)" fg:x="28944" fg:w="108"/><text x="10.7621%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (108 samples, 0.04%)</title><rect x="10.5121%" y="613" width="0.0392%" height="15" fill="rgb(218,81,44)" fg:x="28944" fg:w="108"/><text x="10.7621%" y="623.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (98 samples, 0.04%)</title><rect x="10.5157%" y="597" width="0.0356%" height="15" fill="rgb(213,98,6)" fg:x="28954" fg:w="98"/><text x="10.7657%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (118 samples, 0.04%)</title><rect x="10.5095%" y="709" width="0.0429%" height="15" fill="rgb(222,85,22)" fg:x="28937" fg:w="118"/><text x="10.7595%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (118 samples, 0.04%)</title><rect x="10.5095%" y="693" width="0.0429%" height="15" fill="rgb(239,46,39)" fg:x="28937" fg:w="118"/><text x="10.7595%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (118 samples, 0.04%)</title><rect x="10.5095%" y="677" width="0.0429%" height="15" fill="rgb(237,12,29)" fg:x="28937" fg:w="118"/><text x="10.7595%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (118 samples, 0.04%)</title><rect x="10.5095%" y="661" width="0.0429%" height="15" fill="rgb(214,77,8)" fg:x="28937" fg:w="118"/><text x="10.7595%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (117 samples, 0.04%)</title><rect x="10.5099%" y="645" width="0.0425%" height="15" fill="rgb(217,168,37)" fg:x="28938" fg:w="117"/><text x="10.7599%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (148 samples, 0.05%)</title><rect x="10.5077%" y="741" width="0.0538%" height="15" fill="rgb(221,217,23)" fg:x="28932" fg:w="148"/><text x="10.7577%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (143 samples, 0.05%)</title><rect x="10.5095%" y="725" width="0.0519%" height="15" fill="rgb(243,229,36)" fg:x="28937" fg:w="143"/><text x="10.7595%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (150 samples, 0.05%)</title><rect x="10.5077%" y="773" width="0.0545%" height="15" fill="rgb(251,163,40)" fg:x="28932" fg:w="150"/><text x="10.7577%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (150 samples, 0.05%)</title><rect x="10.5077%" y="757" width="0.0545%" height="15" fill="rgb(237,222,12)" fg:x="28932" fg:w="150"/><text x="10.7577%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (322 samples, 0.12%)</title><rect x="10.4460%" y="837" width="0.1169%" height="15" fill="rgb(248,132,6)" fg:x="28762" fg:w="322"/><text x="10.6960%" y="847.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (210 samples, 0.08%)</title><rect x="10.4866%" y="821" width="0.0763%" height="15" fill="rgb(227,167,50)" fg:x="28874" fg:w="210"/><text x="10.7366%" y="831.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (210 samples, 0.08%)</title><rect x="10.4866%" y="805" width="0.0763%" height="15" fill="rgb(242,84,37)" fg:x="28874" fg:w="210"/><text x="10.7366%" y="815.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (195 samples, 0.07%)</title><rect x="10.4921%" y="789" width="0.0708%" height="15" fill="rgb(212,4,50)" fg:x="28889" fg:w="195"/><text x="10.7421%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (822 samples, 0.30%)</title><rect x="10.2676%" y="933" width="0.2985%" height="15" fill="rgb(230,228,32)" fg:x="28271" fg:w="822"/><text x="10.5176%" y="943.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (508 samples, 0.18%)</title><rect x="10.3817%" y="917" width="0.1845%" height="15" fill="rgb(248,217,23)" fg:x="28585" fg:w="508"/><text x="10.6317%" y="927.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (508 samples, 0.18%)</title><rect x="10.3817%" y="901" width="0.1845%" height="15" fill="rgb(238,197,32)" fg:x="28585" fg:w="508"/><text x="10.6317%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (508 samples, 0.18%)</title><rect x="10.3817%" y="885" width="0.1845%" height="15" fill="rgb(236,106,1)" fg:x="28585" fg:w="508"/><text x="10.6317%" y="895.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (508 samples, 0.18%)</title><rect x="10.3817%" y="869" width="0.1845%" height="15" fill="rgb(219,228,13)" fg:x="28585" fg:w="508"/><text x="10.6317%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (508 samples, 0.18%)</title><rect x="10.3817%" y="853" width="0.1845%" height="15" fill="rgb(238,30,35)" fg:x="28585" fg:w="508"/><text x="10.6317%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.01%)</title><rect x="10.5861%" y="693" width="0.0105%" height="15" fill="rgb(236,70,23)" fg:x="29148" fg:w="29"/><text x="10.8361%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (29 samples, 0.01%)</title><rect x="10.5861%" y="677" width="0.0105%" height="15" fill="rgb(249,104,48)" fg:x="29148" fg:w="29"/><text x="10.8361%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (30 samples, 0.01%)</title><rect x="10.6025%" y="661" width="0.0109%" height="15" fill="rgb(254,117,50)" fg:x="29193" fg:w="30"/><text x="10.8525%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (141 samples, 0.05%)</title><rect x="10.5967%" y="693" width="0.0512%" height="15" fill="rgb(223,152,4)" fg:x="29177" fg:w="141"/><text x="10.8467%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (141 samples, 0.05%)</title><rect x="10.5967%" y="677" width="0.0512%" height="15" fill="rgb(245,6,2)" fg:x="29177" fg:w="141"/><text x="10.8467%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (95 samples, 0.03%)</title><rect x="10.6134%" y="661" width="0.0345%" height="15" fill="rgb(249,150,24)" fg:x="29223" fg:w="95"/><text x="10.8634%" y="671.50"></text></g><g><title>zenoh_transport::unicast::establishment::attachment_from_properties (31 samples, 0.01%)</title><rect x="10.6697%" y="693" width="0.0113%" height="15" fill="rgb(228,185,42)" fg:x="29378" fg:w="31"/><text x="10.9197%" y="703.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (291 samples, 0.11%)</title><rect x="10.5782%" y="709" width="0.1057%" height="15" fill="rgb(226,39,33)" fg:x="29126" fg:w="291"/><text x="10.8282%" y="719.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (33 samples, 0.01%)</title><rect x="10.6951%" y="565" width="0.0120%" height="15" fill="rgb(221,166,19)" fg:x="29448" fg:w="33"/><text x="10.9451%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::write (33 samples, 0.01%)</title><rect x="10.6951%" y="549" width="0.0120%" height="15" fill="rgb(209,109,2)" fg:x="29448" fg:w="33"/><text x="10.9451%" y="559.50"></text></g><g><title>__send (33 samples, 0.01%)</title><rect x="10.6951%" y="533" width="0.0120%" height="15" fill="rgb(252,216,26)" fg:x="29448" fg:w="33"/><text x="10.9451%" y="543.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.6958%" y="517" width="0.0113%" height="15" fill="rgb(227,173,36)" fg:x="29450" fg:w="31"/><text x="10.9458%" y="527.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.6958%" y="501" width="0.0113%" height="15" fill="rgb(209,90,7)" fg:x="29450" fg:w="31"/><text x="10.9458%" y="511.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="10.6958%" y="485" width="0.0113%" height="15" fill="rgb(250,194,11)" fg:x="29450" fg:w="31"/><text x="10.9458%" y="495.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="10.6966%" y="469" width="0.0105%" height="15" fill="rgb(220,72,50)" fg:x="29452" fg:w="29"/><text x="10.9466%" y="479.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (34 samples, 0.01%)</title><rect x="10.6951%" y="581" width="0.0123%" height="15" fill="rgb(222,106,48)" fg:x="29448" fg:w="34"/><text x="10.9451%" y="591.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (36 samples, 0.01%)</title><rect x="10.6947%" y="597" width="0.0131%" height="15" fill="rgb(216,220,45)" fg:x="29447" fg:w="36"/><text x="10.9447%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (43 samples, 0.02%)</title><rect x="10.6926%" y="661" width="0.0156%" height="15" fill="rgb(234,112,18)" fg:x="29441" fg:w="43"/><text x="10.9426%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.02%)</title><rect x="10.6926%" y="645" width="0.0156%" height="15" fill="rgb(206,179,9)" fg:x="29441" fg:w="43"/><text x="10.9426%" y="655.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all::{{closure}} (38 samples, 0.01%)</title><rect x="10.6944%" y="629" width="0.0138%" height="15" fill="rgb(215,115,40)" fg:x="29446" fg:w="38"/><text x="10.9444%" y="639.50"></text></g><g><title>&lt;async_std::io::write::write_all::WriteAllFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.01%)</title><rect x="10.6944%" y="613" width="0.0138%" height="15" fill="rgb(222,69,34)" fg:x="29446" fg:w="38"/><text x="10.9444%" y="623.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_transport_message (28 samples, 0.01%)</title><rect x="10.7107%" y="661" width="0.0102%" height="15" fill="rgb(209,161,10)" fg:x="29491" fg:w="28"/><text x="10.9607%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (32 samples, 0.01%)</title><rect x="10.7271%" y="645" width="0.0116%" height="15" fill="rgb(217,6,38)" fg:x="29536" fg:w="32"/><text x="10.9771%" y="655.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous::{{closure}} (28 samples, 0.01%)</title><rect x="10.7285%" y="629" width="0.0102%" height="15" fill="rgb(229,229,48)" fg:x="29540" fg:w="28"/><text x="10.9785%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (28 samples, 0.01%)</title><rect x="10.7285%" y="613" width="0.0102%" height="15" fill="rgb(225,21,28)" fg:x="29540" fg:w="28"/><text x="10.9785%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (28 samples, 0.01%)</title><rect x="10.7285%" y="597" width="0.0102%" height="15" fill="rgb(206,33,13)" fg:x="29540" fg:w="28"/><text x="10.9785%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (28 samples, 0.01%)</title><rect x="10.7285%" y="581" width="0.0102%" height="15" fill="rgb(242,178,17)" fg:x="29540" fg:w="28"/><text x="10.9785%" y="591.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (38 samples, 0.01%)</title><rect x="10.7252%" y="661" width="0.0138%" height="15" fill="rgb(220,162,5)" fg:x="29531" fg:w="38"/><text x="10.9752%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (135 samples, 0.05%)</title><rect x="10.6907%" y="693" width="0.0490%" height="15" fill="rgb(210,33,43)" fg:x="29436" fg:w="135"/><text x="10.9407%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (135 samples, 0.05%)</title><rect x="10.6907%" y="677" width="0.0490%" height="15" fill="rgb(216,116,54)" fg:x="29436" fg:w="135"/><text x="10.9407%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::get_init_syn_properties::{{closure}} (56 samples, 0.02%)</title><rect x="10.7398%" y="661" width="0.0203%" height="15" fill="rgb(249,92,24)" fg:x="29571" fg:w="56"/><text x="10.9898%" y="671.50"></text></g><g><title>zenoh_buffers::traits::SplitBuffer::contiguous (31 samples, 0.01%)</title><rect x="10.7830%" y="645" width="0.0113%" height="15" fill="rgb(231,189,14)" fg:x="29690" fg:w="31"/><text x="11.0330%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (28 samples, 0.01%)</title><rect x="10.7841%" y="629" width="0.0102%" height="15" fill="rgb(230,8,41)" fg:x="29693" fg:w="28"/><text x="11.0341%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="10.7398%" y="693" width="0.0563%" height="15" fill="rgb(249,7,27)" fg:x="29571" fg:w="155"/><text x="10.9898%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="10.7398%" y="677" width="0.0563%" height="15" fill="rgb(232,86,5)" fg:x="29571" fg:w="155"/><text x="10.9898%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::get_init_syn_properties::{{closure}} (99 samples, 0.04%)</title><rect x="10.7601%" y="661" width="0.0360%" height="15" fill="rgb(224,175,18)" fg:x="29627" fg:w="99"/><text x="11.0101%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (33 samples, 0.01%)</title><rect x="10.8269%" y="613" width="0.0120%" height="15" fill="rgb(220,129,12)" fg:x="29811" fg:w="33"/><text x="11.0769%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (31 samples, 0.01%)</title><rect x="10.8277%" y="597" width="0.0113%" height="15" fill="rgb(210,19,36)" fg:x="29813" fg:w="31"/><text x="11.0777%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.01%)</title><rect x="10.8277%" y="581" width="0.0113%" height="15" fill="rgb(219,96,14)" fg:x="29813" fg:w="31"/><text x="11.0777%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.01%)</title><rect x="10.8277%" y="565" width="0.0113%" height="15" fill="rgb(249,106,1)" fg:x="29813" fg:w="31"/><text x="11.0777%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.01%)</title><rect x="10.8277%" y="549" width="0.0113%" height="15" fill="rgb(249,155,20)" fg:x="29813" fg:w="31"/><text x="11.0777%" y="559.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_bytes_array (34 samples, 0.01%)</title><rect x="10.8269%" y="645" width="0.0123%" height="15" fill="rgb(244,168,9)" fg:x="29811" fg:w="34"/><text x="11.0769%" y="655.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;[u8]&gt;&gt;::write (34 samples, 0.01%)</title><rect x="10.8269%" y="629" width="0.0123%" height="15" fill="rgb(216,23,50)" fg:x="29811" fg:w="34"/><text x="11.0769%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_property (35 samples, 0.01%)</title><rect x="10.8269%" y="661" width="0.0127%" height="15" fill="rgb(224,219,20)" fg:x="29811" fg:w="35"/><text x="11.0769%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_properties (39 samples, 0.01%)</title><rect x="10.8262%" y="677" width="0.0142%" height="15" fill="rgb(222,156,15)" fg:x="29809" fg:w="39"/><text x="11.0762%" y="687.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_syn::send::{{closure}} (434 samples, 0.16%)</title><rect x="10.6838%" y="709" width="0.1576%" height="15" fill="rgb(231,97,17)" fg:x="29417" fg:w="434"/><text x="10.9338%" y="719.50"></text></g><g><title>zenoh_transport::unicast::establishment::attachment_from_properties (69 samples, 0.03%)</title><rect x="10.8164%" y="693" width="0.0251%" height="15" fill="rgb(218,70,48)" fg:x="29782" fg:w="69"/><text x="11.0664%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="10.8531%" y="693" width="0.0258%" height="15" fill="rgb(212,196,52)" fg:x="29883" fg:w="71"/><text x="11.1031%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (71 samples, 0.03%)</title><rect x="10.8531%" y="677" width="0.0258%" height="15" fill="rgb(243,203,18)" fg:x="29883" fg:w="71"/><text x="11.1031%" y="687.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_syn::send::{{closure}} (76 samples, 0.03%)</title><rect x="10.8527%" y="709" width="0.0276%" height="15" fill="rgb(252,125,41)" fg:x="29882" fg:w="76"/><text x="11.1027%" y="719.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (38 samples, 0.01%)</title><rect x="10.8869%" y="661" width="0.0138%" height="15" fill="rgb(223,180,33)" fg:x="29976" fg:w="38"/><text x="11.1369%" y="671.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (38 samples, 0.01%)</title><rect x="10.8869%" y="645" width="0.0138%" height="15" fill="rgb(254,159,46)" fg:x="29976" fg:w="38"/><text x="11.1369%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (38 samples, 0.01%)</title><rect x="10.8869%" y="629" width="0.0138%" height="15" fill="rgb(254,38,10)" fg:x="29976" fg:w="38"/><text x="11.1369%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_contended (38 samples, 0.01%)</title><rect x="10.8869%" y="613" width="0.0138%" height="15" fill="rgb(208,217,32)" fg:x="29976" fg:w="38"/><text x="11.1369%" y="623.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (62 samples, 0.02%)</title><rect x="10.8829%" y="693" width="0.0225%" height="15" fill="rgb(221,120,13)" fg:x="29965" fg:w="62"/><text x="11.1329%" y="703.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (59 samples, 0.02%)</title><rect x="10.8840%" y="677" width="0.0214%" height="15" fill="rgb(246,54,52)" fg:x="29968" fg:w="59"/><text x="11.1340%" y="687.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (94 samples, 0.03%)</title><rect x="10.8803%" y="709" width="0.0341%" height="15" fill="rgb(242,34,25)" fg:x="29958" fg:w="94"/><text x="11.1303%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (963 samples, 0.35%)</title><rect x="10.5749%" y="725" width="0.3497%" height="15" fill="rgb(247,209,9)" fg:x="29117" fg:w="963"/><text x="10.8249%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,006 samples, 0.37%)</title><rect x="10.5662%" y="757" width="0.3654%" height="15" fill="rgb(228,71,26)" fg:x="29093" fg:w="1006"/><text x="10.8162%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (1,006 samples, 0.37%)</title><rect x="10.5662%" y="741" width="0.3654%" height="15" fill="rgb(222,145,49)" fg:x="29093" fg:w="1006"/><text x="10.8162%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (31 samples, 0.01%)</title><rect x="10.9442%" y="501" width="0.0113%" height="15" fill="rgb(218,121,17)" fg:x="30134" fg:w="31"/><text x="11.1942%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (31 samples, 0.01%)</title><rect x="10.9442%" y="485" width="0.0113%" height="15" fill="rgb(244,50,7)" fg:x="30134" fg:w="31"/><text x="11.1942%" y="495.50"></text></g><g><title>alloc::string::String::push_str (31 samples, 0.01%)</title><rect x="10.9442%" y="469" width="0.0113%" height="15" fill="rgb(246,229,37)" fg:x="30134" fg:w="31"/><text x="11.1942%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (31 samples, 0.01%)</title><rect x="10.9442%" y="453" width="0.0113%" height="15" fill="rgb(225,18,5)" fg:x="30134" fg:w="31"/><text x="11.1942%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (31 samples, 0.01%)</title><rect x="10.9442%" y="437" width="0.0113%" height="15" fill="rgb(213,204,8)" fg:x="30134" fg:w="31"/><text x="11.1942%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (31 samples, 0.01%)</title><rect x="10.9442%" y="421" width="0.0113%" height="15" fill="rgb(238,103,6)" fg:x="30134" fg:w="31"/><text x="11.1942%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (39 samples, 0.01%)</title><rect x="10.9424%" y="533" width="0.0142%" height="15" fill="rgb(222,25,35)" fg:x="30129" fg:w="39"/><text x="11.1924%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (35 samples, 0.01%)</title><rect x="10.9439%" y="517" width="0.0127%" height="15" fill="rgb(213,203,35)" fg:x="30133" fg:w="35"/><text x="11.1939%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (47 samples, 0.02%)</title><rect x="10.9399%" y="565" width="0.0171%" height="15" fill="rgb(221,79,53)" fg:x="30122" fg:w="47"/><text x="11.1899%" y="575.50"></text></g><g><title>core::fmt::write (43 samples, 0.02%)</title><rect x="10.9413%" y="549" width="0.0156%" height="15" fill="rgb(243,200,35)" fg:x="30126" fg:w="43"/><text x="11.1913%" y="559.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (1,077 samples, 0.39%)</title><rect x="10.5662%" y="901" width="0.3912%" height="15" fill="rgb(248,60,25)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,077 samples, 0.39%)</title><rect x="10.5662%" y="885" width="0.3912%" height="15" fill="rgb(227,53,46)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="895.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (1,077 samples, 0.39%)</title><rect x="10.5662%" y="869" width="0.3912%" height="15" fill="rgb(216,120,32)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,077 samples, 0.39%)</title><rect x="10.5662%" y="853" width="0.3912%" height="15" fill="rgb(220,134,1)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="863.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (1,077 samples, 0.39%)</title><rect x="10.5662%" y="837" width="0.3912%" height="15" fill="rgb(237,168,5)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,077 samples, 0.39%)</title><rect x="10.5662%" y="821" width="0.3912%" height="15" fill="rgb(231,100,33)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="831.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (1,077 samples, 0.39%)</title><rect x="10.5662%" y="805" width="0.3912%" height="15" fill="rgb(236,177,47)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,077 samples, 0.39%)</title><rect x="10.5662%" y="789" width="0.3912%" height="15" fill="rgb(235,7,49)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="799.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (1,077 samples, 0.39%)</title><rect x="10.5662%" y="773" width="0.3912%" height="15" fill="rgb(232,119,22)" fg:x="29093" fg:w="1077"/><text x="10.8162%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="10.9315%" y="757" width="0.0258%" height="15" fill="rgb(254,73,53)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="10.9315%" y="741" width="0.0258%" height="15" fill="rgb(251,35,20)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="751.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (71 samples, 0.03%)</title><rect x="10.9315%" y="725" width="0.0258%" height="15" fill="rgb(241,119,20)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="735.50"></text></g><g><title>zenoh_link_tcp::unicast::LinkUnicastTcp::new (71 samples, 0.03%)</title><rect x="10.9315%" y="709" width="0.0258%" height="15" fill="rgb(207,102,14)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="719.50"></text></g><g><title>zenoh_protocol_core::locators::Locator::new (71 samples, 0.03%)</title><rect x="10.9315%" y="693" width="0.0258%" height="15" fill="rgb(248,201,50)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="703.50"></text></g><g><title>alloc::fmt::format (71 samples, 0.03%)</title><rect x="10.9315%" y="677" width="0.0258%" height="15" fill="rgb(222,185,44)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (71 samples, 0.03%)</title><rect x="10.9315%" y="661" width="0.0258%" height="15" fill="rgb(218,107,18)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="671.50"></text></g><g><title>core::fmt::write (71 samples, 0.03%)</title><rect x="10.9315%" y="645" width="0.0258%" height="15" fill="rgb(237,177,39)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="655.50"></text></g><g><title>&lt;std::net::addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (71 samples, 0.03%)</title><rect x="10.9315%" y="629" width="0.0258%" height="15" fill="rgb(246,69,6)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (71 samples, 0.03%)</title><rect x="10.9315%" y="613" width="0.0258%" height="15" fill="rgb(234,208,37)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="623.50"></text></g><g><title>core::fmt::write (71 samples, 0.03%)</title><rect x="10.9315%" y="597" width="0.0258%" height="15" fill="rgb(225,4,6)" fg:x="30099" fg:w="71"/><text x="11.1815%" y="607.50"></text></g><g><title>&lt;std::net::ip::Ipv4Addr as core::fmt::Display&gt;::fmt (49 samples, 0.02%)</title><rect x="10.9395%" y="581" width="0.0178%" height="15" fill="rgb(233,45,0)" fg:x="30121" fg:w="49"/><text x="11.1895%" y="591.50"></text></g><g><title>async_global_executor::reactor::block_on (1,943 samples, 0.71%)</title><rect x="10.2575%" y="1237" width="0.7057%" height="15" fill="rgb(226,136,5)" fg:x="28243" fg:w="1943"/><text x="10.5075%" y="1247.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,943 samples, 0.71%)</title><rect x="10.2575%" y="1221" width="0.7057%" height="15" fill="rgb(211,91,47)" fg:x="28243" fg:w="1943"/><text x="10.5075%" y="1231.50"></text></g><g><title>async_io::driver::block_on (1,943 samples, 0.71%)</title><rect x="10.2575%" y="1205" width="0.7057%" height="15" fill="rgb(242,88,51)" fg:x="28243" fg:w="1943"/><text x="10.5075%" y="1215.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1189" width="0.6955%" height="15" fill="rgb(230,91,28)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1173" width="0.6955%" height="15" fill="rgb(254,186,29)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1183.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1157" width="0.6955%" height="15" fill="rgb(238,6,4)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1141" width="0.6955%" height="15" fill="rgb(221,151,16)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1125" width="0.6955%" height="15" fill="rgb(251,143,52)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1109" width="0.6955%" height="15" fill="rgb(206,90,15)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1093" width="0.6955%" height="15" fill="rgb(218,35,8)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1077" width="0.6955%" height="15" fill="rgb(239,215,6)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1061" width="0.6955%" height="15" fill="rgb(245,116,39)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1071.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1045" width="0.6955%" height="15" fill="rgb(242,65,28)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1055.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1029" width="0.6955%" height="15" fill="rgb(252,132,53)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1039.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,915 samples, 0.70%)</title><rect x="10.2676%" y="1013" width="0.6955%" height="15" fill="rgb(224,159,50)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,915 samples, 0.70%)</title><rect x="10.2676%" y="997" width="0.6955%" height="15" fill="rgb(224,93,4)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,915 samples, 0.70%)</title><rect x="10.2676%" y="981" width="0.6955%" height="15" fill="rgb(208,81,34)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,915 samples, 0.70%)</title><rect x="10.2676%" y="965" width="0.6955%" height="15" fill="rgb(233,92,54)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="975.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,915 samples, 0.70%)</title><rect x="10.2676%" y="949" width="0.6955%" height="15" fill="rgb(237,21,14)" fg:x="28271" fg:w="1915"/><text x="10.5176%" y="959.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (1,093 samples, 0.40%)</title><rect x="10.5662%" y="933" width="0.3970%" height="15" fill="rgb(249,128,51)" fg:x="29093" fg:w="1093"/><text x="10.8162%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,093 samples, 0.40%)</title><rect x="10.5662%" y="917" width="0.3970%" height="15" fill="rgb(223,129,24)" fg:x="29093" fg:w="1093"/><text x="10.8162%" y="927.50"></text></g><g><title>alloc::string::String::from_utf8 (56 samples, 0.02%)</title><rect x="10.9846%" y="565" width="0.0203%" height="15" fill="rgb(231,168,25)" fg:x="30245" fg:w="56"/><text x="11.2346%" y="575.50"></text></g><g><title>core::str::converts::from_utf8 (29 samples, 0.01%)</title><rect x="10.9944%" y="549" width="0.0105%" height="15" fill="rgb(224,39,20)" fg:x="30272" fg:w="29"/><text x="11.2444%" y="559.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (88 samples, 0.03%)</title><rect x="10.9740%" y="581" width="0.0320%" height="15" fill="rgb(225,152,53)" fg:x="30216" fg:w="88"/><text x="11.2240%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (46 samples, 0.02%)</title><rect x="11.0205%" y="565" width="0.0167%" height="15" fill="rgb(252,17,24)" fg:x="30344" fg:w="46"/><text x="11.2705%" y="575.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (46 samples, 0.02%)</title><rect x="11.0205%" y="549" width="0.0167%" height="15" fill="rgb(250,114,30)" fg:x="30344" fg:w="46"/><text x="11.2705%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (46 samples, 0.02%)</title><rect x="11.0205%" y="533" width="0.0167%" height="15" fill="rgb(229,5,4)" fg:x="30344" fg:w="46"/><text x="11.2705%" y="543.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (46 samples, 0.02%)</title><rect x="11.0205%" y="517" width="0.0167%" height="15" fill="rgb(225,176,49)" fg:x="30344" fg:w="46"/><text x="11.2705%" y="527.50"></text></g><g><title>core::slice::memchr::memchr (45 samples, 0.02%)</title><rect x="11.0209%" y="501" width="0.0163%" height="15" fill="rgb(224,221,49)" fg:x="30345" fg:w="45"/><text x="11.2709%" y="511.50"></text></g><g><title>core::slice::memchr::memchr_general_case (42 samples, 0.02%)</title><rect x="11.0220%" y="485" width="0.0153%" height="15" fill="rgb(253,169,27)" fg:x="30348" fg:w="42"/><text x="11.2720%" y="495.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (45 samples, 0.02%)</title><rect x="11.0579%" y="453" width="0.0163%" height="15" fill="rgb(211,206,16)" fg:x="30447" fg:w="45"/><text x="11.3079%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (91 samples, 0.03%)</title><rect x="11.0478%" y="533" width="0.0330%" height="15" fill="rgb(244,87,35)" fg:x="30419" fg:w="91"/><text x="11.2978%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (66 samples, 0.02%)</title><rect x="11.0568%" y="517" width="0.0240%" height="15" fill="rgb(246,28,10)" fg:x="30444" fg:w="66"/><text x="11.3068%" y="527.50"></text></g><g><title>std::collections::hash::map::RandomState::new (66 samples, 0.02%)</title><rect x="11.0568%" y="501" width="0.0240%" height="15" fill="rgb(229,12,44)" fg:x="30444" fg:w="66"/><text x="11.3068%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (66 samples, 0.02%)</title><rect x="11.0568%" y="485" width="0.0240%" height="15" fill="rgb(210,145,37)" fg:x="30444" fg:w="66"/><text x="11.3068%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (66 samples, 0.02%)</title><rect x="11.0568%" y="469" width="0.0240%" height="15" fill="rgb(227,112,52)" fg:x="30444" fg:w="66"/><text x="11.3068%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (134 samples, 0.05%)</title><rect x="11.0372%" y="565" width="0.0487%" height="15" fill="rgb(238,155,34)" fg:x="30390" fg:w="134"/><text x="11.2872%" y="575.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str (134 samples, 0.05%)</title><rect x="11.0372%" y="549" width="0.0487%" height="15" fill="rgb(239,226,36)" fg:x="30390" fg:w="134"/><text x="11.2872%" y="559.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;zenoh_protocol_core::locators::Locator,R&gt;&gt;::read (372 samples, 0.14%)</title><rect x="10.9740%" y="597" width="0.1351%" height="15" fill="rgb(230,16,23)" fg:x="30216" fg:w="372"/><text x="11.2240%" y="607.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (284 samples, 0.10%)</title><rect x="11.0060%" y="581" width="0.1031%" height="15" fill="rgb(236,171,36)" fg:x="30304" fg:w="284"/><text x="11.2560%" y="591.50"></text></g><g><title>zenoh_protocol_core::split_once (64 samples, 0.02%)</title><rect x="11.0859%" y="565" width="0.0232%" height="15" fill="rgb(221,22,14)" fg:x="30524" fg:w="64"/><text x="11.3359%" y="575.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (32 samples, 0.01%)</title><rect x="11.0975%" y="549" width="0.0116%" height="15" fill="rgb(242,43,11)" fg:x="30556" fg:w="32"/><text x="11.3475%" y="559.50"></text></g><g><title>[libc.so.6] (64 samples, 0.02%)</title><rect x="11.1248%" y="469" width="0.0232%" height="15" fill="rgb(232,69,23)" fg:x="30631" fg:w="64"/><text x="11.3748%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (502 samples, 0.18%)</title><rect x="10.9664%" y="629" width="0.1823%" height="15" fill="rgb(216,180,54)" fg:x="30195" fg:w="502"/><text x="11.2164%" y="639.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (502 samples, 0.18%)</title><rect x="10.9664%" y="613" width="0.1823%" height="15" fill="rgb(216,5,24)" fg:x="30195" fg:w="502"/><text x="11.2164%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (109 samples, 0.04%)</title><rect x="11.1091%" y="597" width="0.0396%" height="15" fill="rgb(225,89,9)" fg:x="30588" fg:w="109"/><text x="11.3591%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (109 samples, 0.04%)</title><rect x="11.1091%" y="581" width="0.0396%" height="15" fill="rgb(243,75,33)" fg:x="30588" fg:w="109"/><text x="11.3591%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (109 samples, 0.04%)</title><rect x="11.1091%" y="565" width="0.0396%" height="15" fill="rgb(247,141,45)" fg:x="30588" fg:w="109"/><text x="11.3591%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (109 samples, 0.04%)</title><rect x="11.1091%" y="549" width="0.0396%" height="15" fill="rgb(232,177,36)" fg:x="30588" fg:w="109"/><text x="11.3591%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (109 samples, 0.04%)</title><rect x="11.1091%" y="533" width="0.0396%" height="15" fill="rgb(219,125,36)" fg:x="30588" fg:w="109"/><text x="11.3591%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (109 samples, 0.04%)</title><rect x="11.1091%" y="517" width="0.0396%" height="15" fill="rgb(227,94,9)" fg:x="30588" fg:w="109"/><text x="11.3591%" y="527.50"></text></g><g><title>alloc::alloc::alloc (109 samples, 0.04%)</title><rect x="11.1091%" y="501" width="0.0396%" height="15" fill="rgb(240,34,52)" fg:x="30588" fg:w="109"/><text x="11.3591%" y="511.50"></text></g><g><title>malloc (109 samples, 0.04%)</title><rect x="11.1091%" y="485" width="0.0396%" height="15" fill="rgb(216,45,12)" fg:x="30588" fg:w="109"/><text x="11.3591%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (524 samples, 0.19%)</title><rect x="10.9631%" y="677" width="0.1903%" height="15" fill="rgb(246,21,19)" fg:x="30186" fg:w="524"/><text x="11.2131%" y="687.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (515 samples, 0.19%)</title><rect x="10.9664%" y="661" width="0.1870%" height="15" fill="rgb(213,98,42)" fg:x="30195" fg:w="515"/><text x="11.2164%" y="671.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (515 samples, 0.19%)</title><rect x="10.9664%" y="645" width="0.1870%" height="15" fill="rgb(250,136,47)" fg:x="30195" fg:w="515"/><text x="11.2164%" y="655.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (525 samples, 0.19%)</title><rect x="10.9631%" y="789" width="0.1907%" height="15" fill="rgb(251,124,27)" fg:x="30186" fg:w="525"/><text x="11.2131%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (525 samples, 0.19%)</title><rect x="10.9631%" y="773" width="0.1907%" height="15" fill="rgb(229,180,14)" fg:x="30186" fg:w="525"/><text x="11.2131%" y="783.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (525 samples, 0.19%)</title><rect x="10.9631%" y="757" width="0.1907%" height="15" fill="rgb(245,216,25)" fg:x="30186" fg:w="525"/><text x="11.2131%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (525 samples, 0.19%)</title><rect x="10.9631%" y="741" width="0.1907%" height="15" fill="rgb(251,43,5)" fg:x="30186" fg:w="525"/><text x="11.2131%" y="751.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (525 samples, 0.19%)</title><rect x="10.9631%" y="725" width="0.1907%" height="15" fill="rgb(250,128,24)" fg:x="30186" fg:w="525"/><text x="11.2131%" y="735.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (525 samples, 0.19%)</title><rect x="10.9631%" y="709" width="0.1907%" height="15" fill="rgb(217,117,27)" fg:x="30186" fg:w="525"/><text x="11.2131%" y="719.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (525 samples, 0.19%)</title><rect x="10.9631%" y="693" width="0.1907%" height="15" fill="rgb(245,147,4)" fg:x="30186" fg:w="525"/><text x="11.2131%" y="703.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (41 samples, 0.01%)</title><rect x="11.1542%" y="661" width="0.0149%" height="15" fill="rgb(242,201,35)" fg:x="30712" fg:w="41"/><text x="11.4042%" y="671.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="11.1716%" y="453" width="0.0109%" height="15" fill="rgb(218,181,1)" fg:x="30760" fg:w="30"/><text x="11.4216%" y="463.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="11.1723%" y="437" width="0.0102%" height="15" fill="rgb(222,6,29)" fg:x="30762" fg:w="28"/><text x="11.4223%" y="447.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_transport::unicast::establishment::authenticator::shm::WShm&gt;::write_init_ack_property_shm (38 samples, 0.01%)</title><rect x="11.1691%" y="645" width="0.0138%" height="15" fill="rgb(208,186,3)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="655.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zslice_array (38 samples, 0.01%)</title><rect x="11.1691%" y="629" width="0.0138%" height="15" fill="rgb(216,36,26)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::InsertBuffer&lt;T&gt;&gt;::append (38 samples, 0.01%)</title><rect x="11.1691%" y="613" width="0.0138%" height="15" fill="rgb(248,201,23)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_zslice (38 samples, 0.01%)</title><rect x="11.1691%" y="597" width="0.0138%" height="15" fill="rgb(251,170,31)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.01%)</title><rect x="11.1691%" y="581" width="0.0138%" height="15" fill="rgb(207,110,25)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (38 samples, 0.01%)</title><rect x="11.1691%" y="565" width="0.0138%" height="15" fill="rgb(250,54,15)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.01%)</title><rect x="11.1691%" y="549" width="0.0138%" height="15" fill="rgb(227,68,33)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.01%)</title><rect x="11.1691%" y="533" width="0.0138%" height="15" fill="rgb(238,34,41)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (38 samples, 0.01%)</title><rect x="11.1691%" y="517" width="0.0138%" height="15" fill="rgb(220,11,15)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (38 samples, 0.01%)</title><rect x="11.1691%" y="501" width="0.0138%" height="15" fill="rgb(246,111,35)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="511.50"></text></g><g><title>alloc::alloc::realloc (38 samples, 0.01%)</title><rect x="11.1691%" y="485" width="0.0138%" height="15" fill="rgb(209,88,53)" fg:x="30753" fg:w="38"/><text x="11.4191%" y="495.50"></text></g><g><title>realloc (37 samples, 0.01%)</title><rect x="11.1694%" y="469" width="0.0134%" height="15" fill="rgb(231,185,47)" fg:x="30754" fg:w="37"/><text x="11.4194%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (28 samples, 0.01%)</title><rect x="11.1901%" y="629" width="0.0102%" height="15" fill="rgb(233,154,1)" fg:x="30811" fg:w="28"/><text x="11.4401%" y="639.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (28 samples, 0.01%)</title><rect x="11.1901%" y="613" width="0.0102%" height="15" fill="rgb(225,15,46)" fg:x="30811" fg:w="28"/><text x="11.4401%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="11.1538%" y="693" width="0.0508%" height="15" fill="rgb(211,135,41)" fg:x="30711" fg:w="140"/><text x="11.4038%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (140 samples, 0.05%)</title><rect x="11.1538%" y="677" width="0.0508%" height="15" fill="rgb(208,54,0)" fg:x="30711" fg:w="140"/><text x="11.4038%" y="687.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (98 samples, 0.04%)</title><rect x="11.1691%" y="661" width="0.0356%" height="15" fill="rgb(244,136,14)" fg:x="30753" fg:w="98"/><text x="11.4191%" y="671.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (46 samples, 0.02%)</title><rect x="11.1879%" y="645" width="0.0167%" height="15" fill="rgb(241,56,14)" fg:x="30805" fg:w="46"/><text x="11.4379%" y="655.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (145 samples, 0.05%)</title><rect x="11.1538%" y="709" width="0.0527%" height="15" fill="rgb(205,80,24)" fg:x="30711" fg:w="145"/><text x="11.4038%" y="719.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (32 samples, 0.01%)</title><rect x="11.2065%" y="549" width="0.0116%" height="15" fill="rgb(220,57,4)" fg:x="30856" fg:w="32"/><text x="11.4565%" y="559.50"></text></g><g><title>std::sys_common::net::TcpStream::read (32 samples, 0.01%)</title><rect x="11.2065%" y="533" width="0.0116%" height="15" fill="rgb(226,193,50)" fg:x="30856" fg:w="32"/><text x="11.4565%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::read (32 samples, 0.01%)</title><rect x="11.2065%" y="517" width="0.0116%" height="15" fill="rgb(231,168,22)" fg:x="30856" fg:w="32"/><text x="11.4565%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (32 samples, 0.01%)</title><rect x="11.2065%" y="501" width="0.0116%" height="15" fill="rgb(254,215,14)" fg:x="30856" fg:w="32"/><text x="11.4565%" y="511.50"></text></g><g><title>recv (32 samples, 0.01%)</title><rect x="11.2065%" y="485" width="0.0116%" height="15" fill="rgb(211,115,16)" fg:x="30856" fg:w="32"/><text x="11.4565%" y="495.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.2072%" y="469" width="0.0109%" height="15" fill="rgb(236,210,16)" fg:x="30858" fg:w="30"/><text x="11.4572%" y="479.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.2072%" y="453" width="0.0109%" height="15" fill="rgb(221,94,12)" fg:x="30858" fg:w="30"/><text x="11.4572%" y="463.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="11.2076%" y="437" width="0.0105%" height="15" fill="rgb(235,218,49)" fg:x="30859" fg:w="29"/><text x="11.4576%" y="447.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="11.2079%" y="421" width="0.0102%" height="15" fill="rgb(217,114,14)" fg:x="30860" fg:w="28"/><text x="11.4579%" y="431.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_syn::recv::{{closure}} (34 samples, 0.01%)</title><rect x="11.2065%" y="709" width="0.0123%" height="15" fill="rgb(216,145,22)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="11.2065%" y="693" width="0.0123%" height="15" fill="rgb(217,112,39)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="703.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (34 samples, 0.01%)</title><rect x="11.2065%" y="677" width="0.0123%" height="15" fill="rgb(225,85,32)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="11.2065%" y="661" width="0.0123%" height="15" fill="rgb(245,209,47)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="11.2065%" y="645" width="0.0123%" height="15" fill="rgb(218,220,15)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="655.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (34 samples, 0.01%)</title><rect x="11.2065%" y="629" width="0.0123%" height="15" fill="rgb(222,202,31)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="639.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="11.2065%" y="613" width="0.0123%" height="15" fill="rgb(243,203,4)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="623.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (34 samples, 0.01%)</title><rect x="11.2065%" y="597" width="0.0123%" height="15" fill="rgb(237,92,17)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="607.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (34 samples, 0.01%)</title><rect x="11.2065%" y="581" width="0.0123%" height="15" fill="rgb(231,119,7)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="591.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (34 samples, 0.01%)</title><rect x="11.2065%" y="565" width="0.0123%" height="15" fill="rgb(237,82,41)" fg:x="30856" fg:w="34"/><text x="11.4565%" y="575.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (36 samples, 0.01%)</title><rect x="11.2188%" y="709" width="0.0131%" height="15" fill="rgb(226,81,48)" fg:x="30890" fg:w="36"/><text x="11.4688%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (226 samples, 0.08%)</title><rect x="11.1538%" y="725" width="0.0821%" height="15" fill="rgb(234,70,51)" fg:x="30711" fg:w="226"/><text x="11.4038%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (753 samples, 0.27%)</title><rect x="10.9631%" y="805" width="0.2735%" height="15" fill="rgb(251,86,4)" fg:x="30186" fg:w="753"/><text x="11.2131%" y="815.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (228 samples, 0.08%)</title><rect x="11.1538%" y="789" width="0.0828%" height="15" fill="rgb(244,144,28)" fg:x="30711" fg:w="228"/><text x="11.4038%" y="799.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (228 samples, 0.08%)</title><rect x="11.1538%" y="773" width="0.0828%" height="15" fill="rgb(232,161,39)" fg:x="30711" fg:w="228"/><text x="11.4038%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (228 samples, 0.08%)</title><rect x="11.1538%" y="757" width="0.0828%" height="15" fill="rgb(247,34,51)" fg:x="30711" fg:w="228"/><text x="11.4038%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (228 samples, 0.08%)</title><rect x="11.1538%" y="741" width="0.0828%" height="15" fill="rgb(225,132,2)" fg:x="30711" fg:w="228"/><text x="11.4038%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (51 samples, 0.02%)</title><rect x="11.2471%" y="485" width="0.0185%" height="15" fill="rgb(209,159,44)" fg:x="30968" fg:w="51"/><text x="11.4971%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (47 samples, 0.02%)</title><rect x="11.2486%" y="469" width="0.0171%" height="15" fill="rgb(251,214,1)" fg:x="30972" fg:w="47"/><text x="11.4986%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.02%)</title><rect x="11.2486%" y="453" width="0.0171%" height="15" fill="rgb(247,84,47)" fg:x="30972" fg:w="47"/><text x="11.4986%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.02%)</title><rect x="11.2486%" y="437" width="0.0171%" height="15" fill="rgb(240,111,43)" fg:x="30972" fg:w="47"/><text x="11.4986%" y="447.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.02%)</title><rect x="11.2486%" y="421" width="0.0171%" height="15" fill="rgb(215,214,35)" fg:x="30972" fg:w="47"/><text x="11.4986%" y="431.50"></text></g><g><title>malloc (46 samples, 0.02%)</title><rect x="11.2490%" y="405" width="0.0167%" height="15" fill="rgb(248,207,23)" fg:x="30973" fg:w="46"/><text x="11.4990%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;alloc::sync::Arc&lt;async_io::reactor::Source&gt;&gt;&gt;&gt; (85 samples, 0.03%)</title><rect x="11.2657%" y="485" width="0.0309%" height="15" fill="rgb(214,186,4)" fg:x="31019" fg:w="85"/><text x="11.5157%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (85 samples, 0.03%)</title><rect x="11.2657%" y="469" width="0.0309%" height="15" fill="rgb(220,133,22)" fg:x="31019" fg:w="85"/><text x="11.5157%" y="479.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (85 samples, 0.03%)</title><rect x="11.2657%" y="453" width="0.0309%" height="15" fill="rgb(239,134,19)" fg:x="31019" fg:w="85"/><text x="11.5157%" y="463.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (85 samples, 0.03%)</title><rect x="11.2657%" y="437" width="0.0309%" height="15" fill="rgb(250,140,9)" fg:x="31019" fg:w="85"/><text x="11.5157%" y="447.50"></text></g><g><title>syscall (80 samples, 0.03%)</title><rect x="11.2675%" y="421" width="0.0291%" height="15" fill="rgb(225,59,14)" fg:x="31024" fg:w="80"/><text x="11.5175%" y="431.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="11.2682%" y="405" width="0.0283%" height="15" fill="rgb(214,152,51)" fg:x="31026" fg:w="78"/><text x="11.5182%" y="415.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="11.2682%" y="389" width="0.0283%" height="15" fill="rgb(251,227,43)" fg:x="31026" fg:w="78"/><text x="11.5182%" y="399.50"></text></g><g><title>[unknown] (77 samples, 0.03%)</title><rect x="11.2686%" y="373" width="0.0280%" height="15" fill="rgb(241,96,17)" fg:x="31027" fg:w="77"/><text x="11.5186%" y="383.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="11.2697%" y="357" width="0.0269%" height="15" fill="rgb(234,198,43)" fg:x="31030" fg:w="74"/><text x="11.5197%" y="367.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="11.2722%" y="341" width="0.0243%" height="15" fill="rgb(220,108,29)" fg:x="31037" fg:w="67"/><text x="11.5222%" y="351.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="11.2787%" y="325" width="0.0178%" height="15" fill="rgb(226,163,33)" fg:x="31055" fg:w="49"/><text x="11.5287%" y="335.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="11.2835%" y="309" width="0.0131%" height="15" fill="rgb(205,194,45)" fg:x="31068" fg:w="36"/><text x="11.5335%" y="319.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="11.2856%" y="293" width="0.0109%" height="15" fill="rgb(206,143,44)" fg:x="31074" fg:w="30"/><text x="11.5356%" y="303.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (206 samples, 0.07%)</title><rect x="11.2366%" y="565" width="0.0748%" height="15" fill="rgb(236,136,36)" fg:x="30939" fg:w="206"/><text x="11.4866%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (206 samples, 0.07%)</title><rect x="11.2366%" y="549" width="0.0748%" height="15" fill="rgb(249,172,42)" fg:x="30939" fg:w="206"/><text x="11.4866%" y="559.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (206 samples, 0.07%)</title><rect x="11.2366%" y="533" width="0.0748%" height="15" fill="rgb(216,139,23)" fg:x="30939" fg:w="206"/><text x="11.4866%" y="543.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (193 samples, 0.07%)</title><rect x="11.2413%" y="517" width="0.0701%" height="15" fill="rgb(207,166,20)" fg:x="30952" fg:w="193"/><text x="11.4913%" y="527.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (193 samples, 0.07%)</title><rect x="11.2413%" y="501" width="0.0701%" height="15" fill="rgb(210,209,22)" fg:x="30952" fg:w="193"/><text x="11.4913%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.01%)</title><rect x="11.3013%" y="485" width="0.0102%" height="15" fill="rgb(232,118,20)" fg:x="31117" fg:w="28"/><text x="11.5513%" y="495.50"></text></g><g><title>&lt;str as async_std::net::addr::ToSocketAddrs&gt;::to_socket_addrs (52 samples, 0.02%)</title><rect x="11.3114%" y="549" width="0.0189%" height="15" fill="rgb(238,113,42)" fg:x="31145" fg:w="52"/><text x="11.5614%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (36 samples, 0.01%)</title><rect x="11.3172%" y="533" width="0.0131%" height="15" fill="rgb(231,42,5)" fg:x="31161" fg:w="36"/><text x="11.5672%" y="543.50"></text></g><g><title>std::net::parser::&lt;impl core::str::traits::FromStr for std::net::addr::SocketAddr&gt;::from_str (36 samples, 0.01%)</title><rect x="11.3172%" y="517" width="0.0131%" height="15" fill="rgb(243,166,24)" fg:x="31161" fg:w="36"/><text x="11.5672%" y="527.50"></text></g><g><title>std::net::parser::Parser::parse_with (36 samples, 0.01%)</title><rect x="11.3172%" y="501" width="0.0131%" height="15" fill="rgb(237,226,12)" fg:x="31161" fg:w="36"/><text x="11.5672%" y="511.50"></text></g><g><title>std::net::parser::&lt;impl core::str::traits::FromStr for std::net::addr::SocketAddr&gt;::from_str::{{closure}} (36 samples, 0.01%)</title><rect x="11.3172%" y="485" width="0.0131%" height="15" fill="rgb(229,133,24)" fg:x="31161" fg:w="36"/><text x="11.5672%" y="495.50"></text></g><g><title>std::net::parser::Parser::read_socket_addr (36 samples, 0.01%)</title><rect x="11.3172%" y="469" width="0.0131%" height="15" fill="rgb(238,33,43)" fg:x="31161" fg:w="36"/><text x="11.5672%" y="479.50"></text></g><g><title>std::net::parser::Parser::read_socket_addr_v4 (36 samples, 0.01%)</title><rect x="11.3172%" y="453" width="0.0131%" height="15" fill="rgb(227,59,38)" fg:x="31161" fg:w="36"/><text x="11.5672%" y="463.50"></text></g><g><title>std::net::parser::Parser::read_atomically (36 samples, 0.01%)</title><rect x="11.3172%" y="437" width="0.0131%" height="15" fill="rgb(230,97,0)" fg:x="31161" fg:w="36"/><text x="11.5672%" y="447.50"></text></g><g><title>std::net::parser::Parser::read_socket_addr_v4::{{closure}} (36 samples, 0.01%)</title><rect x="11.3172%" y="421" width="0.0131%" height="15" fill="rgb(250,173,50)" fg:x="31161" fg:w="36"/><text x="11.5672%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (259 samples, 0.09%)</title><rect x="11.2366%" y="581" width="0.0941%" height="15" fill="rgb(240,15,50)" fg:x="30939" fg:w="259"/><text x="11.4866%" y="591.50"></text></g><g><title>zenoh_link_tcp::get_tcp_addr::{{closure}} (53 samples, 0.02%)</title><rect x="11.3114%" y="565" width="0.0192%" height="15" fill="rgb(221,93,22)" fg:x="31145" fg:w="53"/><text x="11.5614%" y="575.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1237" width="0.3792%" height="15" fill="rgb(245,180,53)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1221" width="0.3792%" height="15" fill="rgb(231,88,51)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1231.50"></text></g><g><title>std::panicking::try (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1205" width="0.3792%" height="15" fill="rgb(240,58,21)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1189" width="0.3792%" height="15" fill="rgb(237,21,10)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1199.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1173" width="0.3792%" height="15" fill="rgb(218,43,11)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1157" width="0.3792%" height="15" fill="rgb(218,221,29)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1141" width="0.3792%" height="15" fill="rgb(214,118,42)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1151.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1125" width="0.3792%" height="15" fill="rgb(251,200,26)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1135.50"></text></g><g><title>async_global_executor::reactor::block_on (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1109" width="0.3792%" height="15" fill="rgb(237,101,39)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1119.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1093" width="0.3792%" height="15" fill="rgb(251,117,11)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1103.50"></text></g><g><title>async_io::driver::block_on (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1077" width="0.3792%" height="15" fill="rgb(216,223,23)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1087.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1061" width="0.3792%" height="15" fill="rgb(251,54,12)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1045" width="0.3792%" height="15" fill="rgb(254,176,54)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1055.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1029" width="0.3792%" height="15" fill="rgb(210,32,8)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1039.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,044 samples, 0.38%)</title><rect x="10.9631%" y="1013" width="0.3792%" height="15" fill="rgb(235,52,38)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,044 samples, 0.38%)</title><rect x="10.9631%" y="997" width="0.3792%" height="15" fill="rgb(231,4,44)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,044 samples, 0.38%)</title><rect x="10.9631%" y="981" width="0.3792%" height="15" fill="rgb(249,2,32)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,044 samples, 0.38%)</title><rect x="10.9631%" y="965" width="0.3792%" height="15" fill="rgb(224,65,26)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,044 samples, 0.38%)</title><rect x="10.9631%" y="949" width="0.3792%" height="15" fill="rgb(250,73,40)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,044 samples, 0.38%)</title><rect x="10.9631%" y="933" width="0.3792%" height="15" fill="rgb(253,177,16)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,044 samples, 0.38%)</title><rect x="10.9631%" y="917" width="0.3792%" height="15" fill="rgb(217,32,34)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,044 samples, 0.38%)</title><rect x="10.9631%" y="901" width="0.3792%" height="15" fill="rgb(212,7,10)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,044 samples, 0.38%)</title><rect x="10.9631%" y="885" width="0.3792%" height="15" fill="rgb(245,89,8)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,044 samples, 0.38%)</title><rect x="10.9631%" y="869" width="0.3792%" height="15" fill="rgb(237,16,53)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,044 samples, 0.38%)</title><rect x="10.9631%" y="853" width="0.3792%" height="15" fill="rgb(250,204,30)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,044 samples, 0.38%)</title><rect x="10.9631%" y="837" width="0.3792%" height="15" fill="rgb(208,77,27)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="847.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,044 samples, 0.38%)</title><rect x="10.9631%" y="821" width="0.3792%" height="15" fill="rgb(250,204,28)" fg:x="30186" fg:w="1044"/><text x="11.2131%" y="831.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (291 samples, 0.11%)</title><rect x="11.2366%" y="805" width="0.1057%" height="15" fill="rgb(244,63,21)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (291 samples, 0.11%)</title><rect x="11.2366%" y="789" width="0.1057%" height="15" fill="rgb(236,85,44)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="799.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (291 samples, 0.11%)</title><rect x="11.2366%" y="773" width="0.1057%" height="15" fill="rgb(215,98,4)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (291 samples, 0.11%)</title><rect x="11.2366%" y="757" width="0.1057%" height="15" fill="rgb(235,38,11)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="767.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (291 samples, 0.11%)</title><rect x="11.2366%" y="741" width="0.1057%" height="15" fill="rgb(254,186,25)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (291 samples, 0.11%)</title><rect x="11.2366%" y="725" width="0.1057%" height="15" fill="rgb(225,55,31)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="735.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (291 samples, 0.11%)</title><rect x="11.2366%" y="709" width="0.1057%" height="15" fill="rgb(211,15,21)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (291 samples, 0.11%)</title><rect x="11.2366%" y="693" width="0.1057%" height="15" fill="rgb(215,187,41)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="703.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (291 samples, 0.11%)</title><rect x="11.2366%" y="677" width="0.1057%" height="15" fill="rgb(248,69,32)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (291 samples, 0.11%)</title><rect x="11.2366%" y="661" width="0.1057%" height="15" fill="rgb(252,102,52)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="671.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (291 samples, 0.11%)</title><rect x="11.2366%" y="645" width="0.1057%" height="15" fill="rgb(253,140,32)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (291 samples, 0.11%)</title><rect x="11.2366%" y="629" width="0.1057%" height="15" fill="rgb(216,56,42)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (291 samples, 0.11%)</title><rect x="11.2366%" y="613" width="0.1057%" height="15" fill="rgb(216,184,14)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="623.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (291 samples, 0.11%)</title><rect x="11.2366%" y="597" width="0.1057%" height="15" fill="rgb(237,187,27)" fg:x="30939" fg:w="291"/><text x="11.4866%" y="607.50"></text></g><g><title>zenoh_link_tcp::unicast::LinkUnicastTcp::new (32 samples, 0.01%)</title><rect x="11.3307%" y="581" width="0.0116%" height="15" fill="rgb(219,65,3)" fg:x="31198" fg:w="32"/><text x="11.5807%" y="591.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (57 samples, 0.02%)</title><rect x="11.3721%" y="389" width="0.0207%" height="15" fill="rgb(245,83,25)" fg:x="31312" fg:w="57"/><text x="11.6221%" y="399.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (82 samples, 0.03%)</title><rect x="11.3663%" y="469" width="0.0298%" height="15" fill="rgb(214,205,45)" fg:x="31296" fg:w="82"/><text x="11.6163%" y="479.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (81 samples, 0.03%)</title><rect x="11.3666%" y="453" width="0.0294%" height="15" fill="rgb(241,20,18)" fg:x="31297" fg:w="81"/><text x="11.6166%" y="463.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (81 samples, 0.03%)</title><rect x="11.3666%" y="437" width="0.0294%" height="15" fill="rgb(232,163,23)" fg:x="31297" fg:w="81"/><text x="11.6166%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (79 samples, 0.03%)</title><rect x="11.3674%" y="421" width="0.0287%" height="15" fill="rgb(214,5,46)" fg:x="31299" fg:w="79"/><text x="11.6174%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (67 samples, 0.02%)</title><rect x="11.3717%" y="405" width="0.0243%" height="15" fill="rgb(229,78,17)" fg:x="31311" fg:w="67"/><text x="11.6217%" y="415.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="11.3961%" y="469" width="0.0167%" height="15" fill="rgb(248,89,10)" fg:x="31378" fg:w="46"/><text x="11.6461%" y="479.50"></text></g><g><title>async_executor::Runner::new (28 samples, 0.01%)</title><rect x="11.4175%" y="469" width="0.0102%" height="15" fill="rgb(248,54,15)" fg:x="31437" fg:w="28"/><text x="11.6675%" y="479.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (77 samples, 0.03%)</title><rect x="11.4284%" y="453" width="0.0280%" height="15" fill="rgb(223,116,6)" fg:x="31467" fg:w="77"/><text x="11.6784%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (87 samples, 0.03%)</title><rect x="11.4596%" y="421" width="0.0316%" height="15" fill="rgb(205,125,38)" fg:x="31553" fg:w="87"/><text x="11.7096%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt; (54 samples, 0.02%)</title><rect x="11.4716%" y="405" width="0.0196%" height="15" fill="rgb(251,78,38)" fg:x="31586" fg:w="54"/><text x="11.7216%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::Inner&lt;async_task::runnable::Runnable&gt;&gt; (36 samples, 0.01%)</title><rect x="11.4781%" y="389" width="0.0131%" height="15" fill="rgb(253,78,28)" fg:x="31604" fg:w="36"/><text x="11.7281%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt;&gt; (35 samples, 0.01%)</title><rect x="11.4785%" y="373" width="0.0127%" height="15" fill="rgb(209,120,3)" fg:x="31605" fg:w="35"/><text x="11.7285%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;concurrent_queue::bounded::Bounded&lt;async_task::runnable::Runnable&gt;&gt; (33 samples, 0.01%)</title><rect x="11.4792%" y="357" width="0.0120%" height="15" fill="rgb(238,229,9)" fg:x="31607" fg:w="33"/><text x="11.7292%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[concurrent_queue::bounded::Slot&lt;async_task::runnable::Runnable&gt;]&gt;&gt; (28 samples, 0.01%)</title><rect x="11.4810%" y="341" width="0.0102%" height="15" fill="rgb(253,159,18)" fg:x="31612" fg:w="28"/><text x="11.7310%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt; (122 samples, 0.04%)</title><rect x="11.4563%" y="453" width="0.0443%" height="15" fill="rgb(244,42,34)" fg:x="31544" fg:w="122"/><text x="11.7063%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (122 samples, 0.04%)</title><rect x="11.4563%" y="437" width="0.0443%" height="15" fill="rgb(224,8,7)" fg:x="31544" fg:w="122"/><text x="11.7063%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (257 samples, 0.09%)</title><rect x="11.4276%" y="469" width="0.0933%" height="15" fill="rgb(210,201,45)" fg:x="31465" fg:w="257"/><text x="11.6776%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Ticker&gt; (56 samples, 0.02%)</title><rect x="11.5006%" y="453" width="0.0203%" height="15" fill="rgb(252,185,21)" fg:x="31666" fg:w="56"/><text x="11.7506%" y="463.50"></text></g><g><title>&lt;async_executor::Ticker as core::ops::drop::Drop&gt;::drop (56 samples, 0.02%)</title><rect x="11.5006%" y="437" width="0.0203%" height="15" fill="rgb(223,131,1)" fg:x="31666" fg:w="56"/><text x="11.7506%" y="447.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop (44 samples, 0.02%)</title><rect x="11.5352%" y="421" width="0.0160%" height="15" fill="rgb(245,141,16)" fg:x="31761" fg:w="44"/><text x="11.7852%" y="431.50"></text></g><g><title>async_std::utils::abort_on_panic (42 samples, 0.02%)</title><rect x="11.5359%" y="405" width="0.0153%" height="15" fill="rgb(229,55,45)" fg:x="31763" fg:w="42"/><text x="11.7859%" y="415.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop::{{closure}} (42 samples, 0.02%)</title><rect x="11.5359%" y="389" width="0.0153%" height="15" fill="rgb(208,92,15)" fg:x="31763" fg:w="42"/><text x="11.7859%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (71 samples, 0.03%)</title><rect x="11.5272%" y="437" width="0.0258%" height="15" fill="rgb(234,185,47)" fg:x="31739" fg:w="71"/><text x="11.7772%" y="447.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (563 samples, 0.20%)</title><rect x="11.3565%" y="485" width="0.2045%" height="15" fill="rgb(253,104,50)" fg:x="31269" fg:w="563"/><text x="11.6065%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::Or&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt;&gt; (110 samples, 0.04%)</title><rect x="11.5210%" y="469" width="0.0400%" height="15" fill="rgb(205,70,7)" fg:x="31722" fg:w="110"/><text x="11.7710%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt; (110 samples, 0.04%)</title><rect x="11.5210%" y="453" width="0.0400%" height="15" fill="rgb(240,178,43)" fg:x="31722" fg:w="110"/><text x="11.7710%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (567 samples, 0.21%)</title><rect x="11.3565%" y="501" width="0.2059%" height="15" fill="rgb(214,112,2)" fg:x="31269" fg:w="567"/><text x="11.6065%" y="511.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="11.5624%" y="501" width="0.0174%" height="15" fill="rgb(206,46,17)" fg:x="31836" fg:w="48"/><text x="11.8124%" y="511.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (670 samples, 0.24%)</title><rect x="11.3423%" y="517" width="0.2433%" height="15" fill="rgb(225,220,16)" fg:x="31230" fg:w="670"/><text x="11.5923%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (671 samples, 0.24%)</title><rect x="11.3423%" y="533" width="0.2437%" height="15" fill="rgb(238,65,40)" fg:x="31230" fg:w="671"/><text x="11.5923%" y="543.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (39 samples, 0.01%)</title><rect x="11.6092%" y="485" width="0.0142%" height="15" fill="rgb(230,151,21)" fg:x="31965" fg:w="39"/><text x="11.8592%" y="495.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (39 samples, 0.01%)</title><rect x="11.6092%" y="469" width="0.0142%" height="15" fill="rgb(218,58,49)" fg:x="31965" fg:w="39"/><text x="11.8592%" y="479.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (39 samples, 0.01%)</title><rect x="11.6092%" y="453" width="0.0142%" height="15" fill="rgb(219,179,14)" fg:x="31965" fg:w="39"/><text x="11.8592%" y="463.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (39 samples, 0.01%)</title><rect x="11.6092%" y="437" width="0.0142%" height="15" fill="rgb(223,72,1)" fg:x="31965" fg:w="39"/><text x="11.8592%" y="447.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (39 samples, 0.01%)</title><rect x="11.6092%" y="421" width="0.0142%" height="15" fill="rgb(238,126,10)" fg:x="31965" fg:w="39"/><text x="11.8592%" y="431.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (39 samples, 0.01%)</title><rect x="11.6092%" y="405" width="0.0142%" height="15" fill="rgb(224,206,38)" fg:x="31965" fg:w="39"/><text x="11.8592%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (110 samples, 0.04%)</title><rect x="11.6241%" y="485" width="0.0400%" height="15" fill="rgb(212,201,54)" fg:x="32006" fg:w="110"/><text x="11.8741%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (110 samples, 0.04%)</title><rect x="11.6241%" y="469" width="0.0400%" height="15" fill="rgb(218,154,48)" fg:x="32006" fg:w="110"/><text x="11.8741%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (96 samples, 0.03%)</title><rect x="11.6666%" y="453" width="0.0349%" height="15" fill="rgb(232,93,24)" fg:x="32123" fg:w="96"/><text x="11.9166%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_swap (96 samples, 0.03%)</title><rect x="11.6666%" y="437" width="0.0349%" height="15" fill="rgb(245,30,21)" fg:x="32123" fg:w="96"/><text x="11.9166%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (493 samples, 0.18%)</title><rect x="11.6092%" y="533" width="0.1791%" height="15" fill="rgb(242,148,29)" fg:x="31965" fg:w="493"/><text x="11.8592%" y="543.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (493 samples, 0.18%)</title><rect x="11.6092%" y="517" width="0.1791%" height="15" fill="rgb(244,153,54)" fg:x="31965" fg:w="493"/><text x="11.8592%" y="527.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (493 samples, 0.18%)</title><rect x="11.6092%" y="501" width="0.1791%" height="15" fill="rgb(252,87,22)" fg:x="31965" fg:w="493"/><text x="11.8592%" y="511.50"></text></g><g><title>parking::Unparker::unpark (342 samples, 0.12%)</title><rect x="11.6641%" y="485" width="0.1242%" height="15" fill="rgb(210,51,29)" fg:x="32116" fg:w="342"/><text x="11.9141%" y="495.50"></text></g><g><title>parking::Inner::unpark (338 samples, 0.12%)</title><rect x="11.6655%" y="469" width="0.1228%" height="15" fill="rgb(242,136,47)" fg:x="32120" fg:w="338"/><text x="11.9155%" y="479.50"></text></g><g><title>syscall (231 samples, 0.08%)</title><rect x="11.7044%" y="453" width="0.0839%" height="15" fill="rgb(238,68,4)" fg:x="32227" fg:w="231"/><text x="11.9544%" y="463.50"></text></g><g><title>[unknown] (225 samples, 0.08%)</title><rect x="11.7066%" y="437" width="0.0817%" height="15" fill="rgb(242,161,30)" fg:x="32233" fg:w="225"/><text x="11.9566%" y="447.50"></text></g><g><title>[unknown] (223 samples, 0.08%)</title><rect x="11.7073%" y="421" width="0.0810%" height="15" fill="rgb(218,58,44)" fg:x="32235" fg:w="223"/><text x="11.9573%" y="431.50"></text></g><g><title>[unknown] (222 samples, 0.08%)</title><rect x="11.7077%" y="405" width="0.0806%" height="15" fill="rgb(252,125,32)" fg:x="32236" fg:w="222"/><text x="11.9577%" y="415.50"></text></g><g><title>[unknown] (213 samples, 0.08%)</title><rect x="11.7109%" y="389" width="0.0774%" height="15" fill="rgb(219,178,0)" fg:x="32245" fg:w="213"/><text x="11.9609%" y="399.50"></text></g><g><title>[unknown] (195 samples, 0.07%)</title><rect x="11.7175%" y="373" width="0.0708%" height="15" fill="rgb(213,152,7)" fg:x="32263" fg:w="195"/><text x="11.9675%" y="383.50"></text></g><g><title>[unknown] (132 samples, 0.05%)</title><rect x="11.7404%" y="357" width="0.0479%" height="15" fill="rgb(249,109,34)" fg:x="32326" fg:w="132"/><text x="11.9904%" y="367.50"></text></g><g><title>[unknown] (100 samples, 0.04%)</title><rect x="11.7520%" y="341" width="0.0363%" height="15" fill="rgb(232,96,21)" fg:x="32358" fg:w="100"/><text x="12.0020%" y="351.50"></text></g><g><title>[unknown] (85 samples, 0.03%)</title><rect x="11.7574%" y="325" width="0.0309%" height="15" fill="rgb(228,27,39)" fg:x="32373" fg:w="85"/><text x="12.0074%" y="335.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="11.7705%" y="309" width="0.0178%" height="15" fill="rgb(211,182,52)" fg:x="32409" fg:w="49"/><text x="12.0205%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (67 samples, 0.02%)</title><rect x="11.8148%" y="437" width="0.0243%" height="15" fill="rgb(234,178,38)" fg:x="32531" fg:w="67"/><text x="12.0648%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::block_on&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt; (64 samples, 0.02%)</title><rect x="11.8159%" y="421" width="0.0232%" height="15" fill="rgb(221,111,3)" fg:x="32534" fg:w="64"/><text x="12.0659%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (49 samples, 0.02%)</title><rect x="11.8213%" y="405" width="0.0178%" height="15" fill="rgb(228,175,21)" fg:x="32549" fg:w="49"/><text x="12.0713%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (49 samples, 0.02%)</title><rect x="11.8213%" y="389" width="0.0178%" height="15" fill="rgb(228,174,43)" fg:x="32549" fg:w="49"/><text x="12.0713%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.02%)</title><rect x="11.8213%" y="373" width="0.0178%" height="15" fill="rgb(211,191,0)" fg:x="32549" fg:w="49"/><text x="12.0713%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (161 samples, 0.06%)</title><rect x="11.7883%" y="533" width="0.0585%" height="15" fill="rgb(253,117,3)" fg:x="32458" fg:w="161"/><text x="12.0383%" y="543.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (161 samples, 0.06%)</title><rect x="11.7883%" y="517" width="0.0585%" height="15" fill="rgb(241,127,19)" fg:x="32458" fg:w="161"/><text x="12.0383%" y="527.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (160 samples, 0.06%)</title><rect x="11.7887%" y="501" width="0.0581%" height="15" fill="rgb(218,103,12)" fg:x="32459" fg:w="160"/><text x="12.0387%" y="511.50"></text></g><g><title>core::mem::drop (115 samples, 0.04%)</title><rect x="11.8050%" y="485" width="0.0418%" height="15" fill="rgb(236,214,43)" fg:x="32504" fg:w="115"/><text x="12.0550%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_collections::lifo_queue::LifoQueue&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;::push::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (115 samples, 0.04%)</title><rect x="11.8050%" y="469" width="0.0418%" height="15" fill="rgb(244,144,19)" fg:x="32504" fg:w="115"/><text x="12.0550%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.04%)</title><rect x="11.8050%" y="453" width="0.0418%" height="15" fill="rgb(246,188,10)" fg:x="32504" fg:w="115"/><text x="12.0550%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (59 samples, 0.02%)</title><rect x="11.8493%" y="469" width="0.0214%" height="15" fill="rgb(212,193,33)" fg:x="32626" fg:w="59"/><text x="12.0993%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Inner&gt; (48 samples, 0.02%)</title><rect x="11.8533%" y="453" width="0.0174%" height="15" fill="rgb(241,51,29)" fg:x="32637" fg:w="48"/><text x="12.1033%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Parker&gt; (86 samples, 0.03%)</title><rect x="11.8468%" y="533" width="0.0312%" height="15" fill="rgb(211,58,19)" fg:x="32619" fg:w="86"/><text x="12.0968%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (86 samples, 0.03%)</title><rect x="11.8468%" y="517" width="0.0312%" height="15" fill="rgb(229,111,26)" fg:x="32619" fg:w="86"/><text x="12.0968%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (86 samples, 0.03%)</title><rect x="11.8468%" y="501" width="0.0312%" height="15" fill="rgb(213,115,40)" fg:x="32619" fg:w="86"/><text x="12.0968%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.03%)</title><rect x="11.8468%" y="485" width="0.0312%" height="15" fill="rgb(209,56,44)" fg:x="32619" fg:w="86"/><text x="12.0968%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (95 samples, 0.03%)</title><rect x="11.8780%" y="533" width="0.0345%" height="15" fill="rgb(230,108,32)" fg:x="32705" fg:w="95"/><text x="12.1280%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_add (95 samples, 0.03%)</title><rect x="11.8780%" y="517" width="0.0345%" height="15" fill="rgb(216,165,31)" fg:x="32705" fg:w="95"/><text x="12.1280%" y="527.50"></text></g><g><title>parking::Parker::new (30 samples, 0.01%)</title><rect x="11.9136%" y="517" width="0.0109%" height="15" fill="rgb(218,122,21)" fg:x="32803" fg:w="30"/><text x="12.1636%" y="527.50"></text></g><g><title>parking::pair (33 samples, 0.01%)</title><rect x="11.9129%" y="533" width="0.0120%" height="15" fill="rgb(223,224,47)" fg:x="32801" fg:w="33"/><text x="12.1629%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,635 samples, 0.59%)</title><rect x="11.3423%" y="757" width="0.5938%" height="15" fill="rgb(238,102,44)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="767.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (1,635 samples, 0.59%)</title><rect x="11.3423%" y="741" width="0.5938%" height="15" fill="rgb(236,46,40)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="751.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,635 samples, 0.59%)</title><rect x="11.3423%" y="725" width="0.5938%" height="15" fill="rgb(247,202,50)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,635 samples, 0.59%)</title><rect x="11.3423%" y="709" width="0.5938%" height="15" fill="rgb(209,99,20)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,635 samples, 0.59%)</title><rect x="11.3423%" y="693" width="0.5938%" height="15" fill="rgb(252,27,34)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,635 samples, 0.59%)</title><rect x="11.3423%" y="677" width="0.5938%" height="15" fill="rgb(215,206,23)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="687.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (1,635 samples, 0.59%)</title><rect x="11.3423%" y="661" width="0.5938%" height="15" fill="rgb(212,135,36)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="671.50"></text></g><g><title>async_global_executor::executor::block_on (1,635 samples, 0.59%)</title><rect x="11.3423%" y="645" width="0.5938%" height="15" fill="rgb(240,189,1)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,635 samples, 0.59%)</title><rect x="11.3423%" y="629" width="0.5938%" height="15" fill="rgb(242,56,20)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,635 samples, 0.59%)</title><rect x="11.3423%" y="613" width="0.5938%" height="15" fill="rgb(247,132,33)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="623.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (1,635 samples, 0.59%)</title><rect x="11.3423%" y="597" width="0.5938%" height="15" fill="rgb(208,149,11)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="607.50"></text></g><g><title>async_global_executor::reactor::block_on (1,635 samples, 0.59%)</title><rect x="11.3423%" y="581" width="0.5938%" height="15" fill="rgb(211,33,11)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="591.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,635 samples, 0.59%)</title><rect x="11.3423%" y="565" width="0.5938%" height="15" fill="rgb(221,29,38)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="575.50"></text></g><g><title>async_io::driver::block_on (1,635 samples, 0.59%)</title><rect x="11.3423%" y="549" width="0.5938%" height="15" fill="rgb(206,182,49)" fg:x="31230" fg:w="1635"/><text x="11.5923%" y="559.50"></text></g><g><title>waker_fn::waker_fn (31 samples, 0.01%)</title><rect x="11.9248%" y="533" width="0.0113%" height="15" fill="rgb(216,140,1)" fg:x="32834" fg:w="31"/><text x="12.1748%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (31 samples, 0.01%)</title><rect x="11.9248%" y="517" width="0.0113%" height="15" fill="rgb(232,57,40)" fg:x="32834" fg:w="31"/><text x="12.1748%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (30 samples, 0.01%)</title><rect x="11.9252%" y="501" width="0.0109%" height="15" fill="rgb(224,186,18)" fg:x="32835" fg:w="30"/><text x="12.1752%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.01%)</title><rect x="11.9252%" y="485" width="0.0109%" height="15" fill="rgb(215,121,11)" fg:x="32835" fg:w="30"/><text x="12.1752%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.01%)</title><rect x="11.9252%" y="469" width="0.0109%" height="15" fill="rgb(245,147,10)" fg:x="32835" fg:w="30"/><text x="12.1752%" y="479.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="11.9259%" y="453" width="0.0102%" height="15" fill="rgb(238,153,13)" fg:x="32837" fg:w="28"/><text x="12.1759%" y="463.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (1,636 samples, 0.59%)</title><rect x="11.3423%" y="869" width="0.5942%" height="15" fill="rgb(233,108,0)" fg:x="31230" fg:w="1636"/><text x="11.5923%" y="879.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1,636 samples, 0.59%)</title><rect x="11.3423%" y="853" width="0.5942%" height="15" fill="rgb(212,157,17)" fg:x="31230" fg:w="1636"/><text x="11.5923%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (1,636 samples, 0.59%)</title><rect x="11.3423%" y="837" width="0.5942%" height="15" fill="rgb(225,213,38)" fg:x="31230" fg:w="1636"/><text x="11.5923%" y="847.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,636 samples, 0.59%)</title><rect x="11.3423%" y="821" width="0.5942%" height="15" fill="rgb(248,16,11)" fg:x="31230" fg:w="1636"/><text x="11.5923%" y="831.50"></text></g><g><title>async_std::task::block_on::block_on (1,636 samples, 0.59%)</title><rect x="11.3423%" y="805" width="0.5942%" height="15" fill="rgb(241,33,4)" fg:x="31230" fg:w="1636"/><text x="11.5923%" y="815.50"></text></g><g><title>async_std::task::builder::Builder::blocking (1,636 samples, 0.59%)</title><rect x="11.3423%" y="789" width="0.5942%" height="15" fill="rgb(222,26,43)" fg:x="31230" fg:w="1636"/><text x="11.5923%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,636 samples, 0.59%)</title><rect x="11.3423%" y="773" width="0.5942%" height="15" fill="rgb(243,29,36)" fg:x="31230" fg:w="1636"/><text x="11.5923%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (47 samples, 0.02%)</title><rect x="11.9862%" y="789" width="0.0171%" height="15" fill="rgb(241,9,27)" fg:x="33003" fg:w="47"/><text x="12.2362%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;zenoh::net::routing::router::Tables&gt;&gt; (414 samples, 0.15%)</title><rect x="12.0251%" y="789" width="0.1504%" height="15" fill="rgb(205,117,26)" fg:x="33110" fg:w="414"/><text x="12.2751%" y="799.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (414 samples, 0.15%)</title><rect x="12.0251%" y="773" width="0.1504%" height="15" fill="rgb(209,80,39)" fg:x="33110" fg:w="414"/><text x="12.2751%" y="783.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write_unlock (407 samples, 0.15%)</title><rect x="12.0276%" y="757" width="0.1478%" height="15" fill="rgb(239,155,6)" fg:x="33117" fg:w="407"/><text x="12.2776%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_unlock (407 samples, 0.15%)</title><rect x="12.0276%" y="741" width="0.1478%" height="15" fill="rgb(212,104,12)" fg:x="33117" fg:w="407"/><text x="12.2776%" y="751.50"></text></g><g><title>syscall (357 samples, 0.13%)</title><rect x="12.0458%" y="725" width="0.1297%" height="15" fill="rgb(234,204,3)" fg:x="33167" fg:w="357"/><text x="12.2958%" y="735.50"></text></g><g><title>[unknown] (354 samples, 0.13%)</title><rect x="12.0469%" y="709" width="0.1286%" height="15" fill="rgb(251,218,7)" fg:x="33170" fg:w="354"/><text x="12.2969%" y="719.50"></text></g><g><title>[unknown] (350 samples, 0.13%)</title><rect x="12.0483%" y="693" width="0.1271%" height="15" fill="rgb(221,81,32)" fg:x="33174" fg:w="350"/><text x="12.2983%" y="703.50"></text></g><g><title>[unknown] (349 samples, 0.13%)</title><rect x="12.0487%" y="677" width="0.1268%" height="15" fill="rgb(214,152,26)" fg:x="33175" fg:w="349"/><text x="12.2987%" y="687.50"></text></g><g><title>[unknown] (335 samples, 0.12%)</title><rect x="12.0538%" y="661" width="0.1217%" height="15" fill="rgb(223,22,3)" fg:x="33189" fg:w="335"/><text x="12.3038%" y="671.50"></text></g><g><title>[unknown] (316 samples, 0.11%)</title><rect x="12.0607%" y="645" width="0.1148%" height="15" fill="rgb(207,174,7)" fg:x="33208" fg:w="316"/><text x="12.3107%" y="655.50"></text></g><g><title>[unknown] (258 samples, 0.09%)</title><rect x="12.0817%" y="629" width="0.0937%" height="15" fill="rgb(224,19,52)" fg:x="33266" fg:w="258"/><text x="12.3317%" y="639.50"></text></g><g><title>[unknown] (192 samples, 0.07%)</title><rect x="12.1057%" y="613" width="0.0697%" height="15" fill="rgb(228,24,14)" fg:x="33332" fg:w="192"/><text x="12.3557%" y="623.50"></text></g><g><title>[unknown] (176 samples, 0.06%)</title><rect x="12.1115%" y="597" width="0.0639%" height="15" fill="rgb(230,153,43)" fg:x="33348" fg:w="176"/><text x="12.3615%" y="607.50"></text></g><g><title>[unknown] (105 samples, 0.04%)</title><rect x="12.1373%" y="581" width="0.0381%" height="15" fill="rgb(231,106,12)" fg:x="33419" fg:w="105"/><text x="12.3873%" y="591.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="12.1635%" y="565" width="0.0120%" height="15" fill="rgb(215,92,2)" fg:x="33491" fg:w="33"/><text x="12.4135%" y="575.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (32 samples, 0.01%)</title><rect x="12.1805%" y="773" width="0.0116%" height="15" fill="rgb(249,143,25)" fg:x="33538" fg:w="32"/><text x="12.4305%" y="783.50"></text></g><g><title>std::sync::poison::Flag::borrow (32 samples, 0.01%)</title><rect x="12.1805%" y="757" width="0.0116%" height="15" fill="rgb(252,7,35)" fg:x="33538" fg:w="32"/><text x="12.4305%" y="767.50"></text></g><g><title>std::thread::panicking (29 samples, 0.01%)</title><rect x="12.1816%" y="741" width="0.0105%" height="15" fill="rgb(216,69,40)" fg:x="33541" fg:w="29"/><text x="12.4316%" y="751.50"></text></g><g><title>std::panicking::panicking (29 samples, 0.01%)</title><rect x="12.1816%" y="725" width="0.0105%" height="15" fill="rgb(240,36,33)" fg:x="33541" fg:w="29"/><text x="12.4316%" y="735.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (29 samples, 0.01%)</title><rect x="12.1816%" y="709" width="0.0105%" height="15" fill="rgb(231,128,14)" fg:x="33541" fg:w="29"/><text x="12.4316%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (37 samples, 0.01%)</title><rect x="12.2328%" y="709" width="0.0134%" height="15" fill="rgb(245,143,14)" fg:x="33682" fg:w="37"/><text x="12.4828%" y="719.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1,445 samples, 0.52%)</title><rect x="12.2190%" y="725" width="0.5248%" height="15" fill="rgb(222,130,28)" fg:x="33644" fg:w="1445"/><text x="12.4690%" y="735.50"></text></g><g><title>syscall (1,366 samples, 0.50%)</title><rect x="12.2477%" y="709" width="0.4961%" height="15" fill="rgb(212,10,48)" fg:x="33723" fg:w="1366"/><text x="12.4977%" y="719.50"></text></g><g><title>[unknown] (1,350 samples, 0.49%)</title><rect x="12.2535%" y="693" width="0.4903%" height="15" fill="rgb(254,118,45)" fg:x="33739" fg:w="1350"/><text x="12.5035%" y="703.50"></text></g><g><title>[unknown] (1,331 samples, 0.48%)</title><rect x="12.2604%" y="677" width="0.4834%" height="15" fill="rgb(228,6,45)" fg:x="33758" fg:w="1331"/><text x="12.5104%" y="687.50"></text></g><g><title>[unknown] (1,324 samples, 0.48%)</title><rect x="12.2630%" y="661" width="0.4809%" height="15" fill="rgb(241,18,35)" fg:x="33765" fg:w="1324"/><text x="12.5130%" y="671.50"></text></g><g><title>[unknown] (1,275 samples, 0.46%)</title><rect x="12.2808%" y="645" width="0.4631%" height="15" fill="rgb(227,214,53)" fg:x="33814" fg:w="1275"/><text x="12.5308%" y="655.50"></text></g><g><title>[unknown] (1,172 samples, 0.43%)</title><rect x="12.3182%" y="629" width="0.4257%" height="15" fill="rgb(224,107,51)" fg:x="33917" fg:w="1172"/><text x="12.5682%" y="639.50"></text></g><g><title>[unknown] (1,068 samples, 0.39%)</title><rect x="12.3560%" y="613" width="0.3879%" height="15" fill="rgb(248,60,28)" fg:x="34021" fg:w="1068"/><text x="12.6060%" y="623.50"></text></g><g><title>[unknown] (1,026 samples, 0.37%)</title><rect x="12.3712%" y="597" width="0.3726%" height="15" fill="rgb(249,101,23)" fg:x="34063" fg:w="1026"/><text x="12.6212%" y="607.50"></text></g><g><title>[unknown] (852 samples, 0.31%)</title><rect x="12.4344%" y="581" width="0.3094%" height="15" fill="rgb(228,51,19)" fg:x="34237" fg:w="852"/><text x="12.6844%" y="591.50"></text></g><g><title>[unknown] (603 samples, 0.22%)</title><rect x="12.5248%" y="565" width="0.2190%" height="15" fill="rgb(213,20,6)" fg:x="34486" fg:w="603"/><text x="12.7748%" y="575.50"></text></g><g><title>[unknown] (471 samples, 0.17%)</title><rect x="12.5728%" y="549" width="0.1711%" height="15" fill="rgb(212,124,10)" fg:x="34618" fg:w="471"/><text x="12.8228%" y="559.50"></text></g><g><title>[unknown] (307 samples, 0.11%)</title><rect x="12.6323%" y="533" width="0.1115%" height="15" fill="rgb(248,3,40)" fg:x="34782" fg:w="307"/><text x="12.8823%" y="543.50"></text></g><g><title>[unknown] (145 samples, 0.05%)</title><rect x="12.6912%" y="517" width="0.0527%" height="15" fill="rgb(223,178,23)" fg:x="34944" fg:w="145"/><text x="12.9412%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (536 samples, 0.19%)</title><rect x="12.7896%" y="693" width="0.1947%" height="15" fill="rgb(240,132,45)" fg:x="35215" fg:w="536"/><text x="13.0396%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (536 samples, 0.19%)</title><rect x="12.7896%" y="677" width="0.1947%" height="15" fill="rgb(245,164,36)" fg:x="35215" fg:w="536"/><text x="13.0396%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_write (3,001 samples, 1.09%)</title><rect x="12.7438%" y="725" width="1.0899%" height="15" fill="rgb(231,188,53)" fg:x="35089" fg:w="3001"/><text x="12.9938%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_until (3,001 samples, 1.09%)</title><rect x="12.7438%" y="709" width="1.0899%" height="15" fill="rgb(237,198,39)" fg:x="35089" fg:w="3001"/><text x="12.9938%" y="719.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::spin_write::{{closure}} (2,339 samples, 0.85%)</title><rect x="12.9843%" y="693" width="0.8495%" height="15" fill="rgb(223,120,35)" fg:x="35751" fg:w="2339"/><text x="13.2343%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_unlocked (2,339 samples, 0.85%)</title><rect x="12.9843%" y="677" width="0.8495%" height="15" fill="rgb(253,107,49)" fg:x="35751" fg:w="2339"/><text x="13.2343%" y="687.50"></text></g><g><title>[unknown] (92 samples, 0.03%)</title><rect x="13.8003%" y="661" width="0.0334%" height="15" fill="rgb(216,44,31)" fg:x="37998" fg:w="92"/><text x="14.0503%" y="671.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="13.8094%" y="645" width="0.0243%" height="15" fill="rgb(253,87,21)" fg:x="38023" fg:w="67"/><text x="14.0594%" y="655.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="13.8098%" y="629" width="0.0240%" height="15" fill="rgb(226,18,2)" fg:x="38024" fg:w="66"/><text x="14.0598%" y="639.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="13.8109%" y="613" width="0.0229%" height="15" fill="rgb(216,8,46)" fg:x="38027" fg:w="63"/><text x="14.0609%" y="623.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="13.8145%" y="597" width="0.0192%" height="15" fill="rgb(226,140,39)" fg:x="38037" fg:w="53"/><text x="14.0645%" y="607.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="13.8185%" y="581" width="0.0153%" height="15" fill="rgb(221,194,54)" fg:x="38048" fg:w="42"/><text x="14.0685%" y="591.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="13.8200%" y="565" width="0.0138%" height="15" fill="rgb(213,92,11)" fg:x="38052" fg:w="38"/><text x="14.0700%" y="575.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="13.8225%" y="549" width="0.0113%" height="15" fill="rgb(229,162,46)" fg:x="38059" fg:w="31"/><text x="14.0725%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write_contended (4,526 samples, 1.64%)</title><rect x="12.1922%" y="741" width="1.6438%" height="15" fill="rgb(214,111,36)" fg:x="33570" fg:w="4526"/><text x="12.4422%" y="751.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (4,559 samples, 1.66%)</title><rect x="12.1805%" y="789" width="1.6558%" height="15" fill="rgb(207,6,21)" fg:x="33538" fg:w="4559"/><text x="12.4305%" y="799.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::write (4,527 samples, 1.64%)</title><rect x="12.1922%" y="773" width="1.6441%" height="15" fill="rgb(213,127,38)" fg:x="33570" fg:w="4527"/><text x="12.4422%" y="783.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::write (4,527 samples, 1.64%)</title><rect x="12.1922%" y="757" width="1.6441%" height="15" fill="rgb(238,118,32)" fg:x="33570" fg:w="4527"/><text x="12.4422%" y="767.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (51 samples, 0.02%)</title><rect x="13.8396%" y="789" width="0.0185%" height="15" fill="rgb(240,139,39)" fg:x="38106" fg:w="51"/><text x="14.0896%" y="799.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (53 samples, 0.02%)</title><rect x="13.8610%" y="773" width="0.0192%" height="15" fill="rgb(235,10,37)" fg:x="38165" fg:w="53"/><text x="14.1110%" y="783.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (53 samples, 0.02%)</title><rect x="13.8610%" y="757" width="0.0192%" height="15" fill="rgb(249,171,38)" fg:x="38165" fg:w="53"/><text x="14.1110%" y="767.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_pid (78 samples, 0.03%)</title><rect x="13.8585%" y="789" width="0.0283%" height="15" fill="rgb(242,144,32)" fg:x="38158" fg:w="78"/><text x="14.1085%" y="799.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (152 samples, 0.06%)</title><rect x="13.8919%" y="773" width="0.0552%" height="15" fill="rgb(217,117,21)" fg:x="38250" fg:w="152"/><text x="14.1419%" y="783.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (152 samples, 0.06%)</title><rect x="13.8919%" y="757" width="0.0552%" height="15" fill="rgb(249,87,1)" fg:x="38250" fg:w="152"/><text x="14.1419%" y="767.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::inner (65 samples, 0.02%)</title><rect x="13.9235%" y="741" width="0.0236%" height="15" fill="rgb(248,196,48)" fg:x="38337" fg:w="65"/><text x="14.1735%" y="751.50"></text></g><g><title>alloc::rc::is_dangling (65 samples, 0.02%)</title><rect x="13.9235%" y="725" width="0.0236%" height="15" fill="rgb(251,206,33)" fg:x="38337" fg:w="65"/><text x="14.1735%" y="735.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (7,183 samples, 2.61%)</title><rect x="11.3423%" y="949" width="2.6088%" height="15" fill="rgb(232,141,28)" fg:x="31230" fg:w="7183"/><text x="11.5923%" y="959.50">ze..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,183 samples, 2.61%)</title><rect x="11.3423%" y="933" width="2.6088%" height="15" fill="rgb(209,167,14)" fg:x="31230" fg:w="7183"/><text x="11.5923%" y="943.50">&lt;c..</text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (7,183 samples, 2.61%)</title><rect x="11.3423%" y="917" width="2.6088%" height="15" fill="rgb(225,11,50)" fg:x="31230" fg:w="7183"/><text x="11.5923%" y="927.50">ze..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,183 samples, 2.61%)</title><rect x="11.3423%" y="901" width="2.6088%" height="15" fill="rgb(209,50,20)" fg:x="31230" fg:w="7183"/><text x="11.5923%" y="911.50">&lt;c..</text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (7,183 samples, 2.61%)</title><rect x="11.3423%" y="885" width="2.6088%" height="15" fill="rgb(212,17,46)" fg:x="31230" fg:w="7183"/><text x="11.5923%" y="895.50">ze..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (5,547 samples, 2.01%)</title><rect x="11.9365%" y="869" width="2.0146%" height="15" fill="rgb(216,101,39)" fg:x="32866" fg:w="5547"/><text x="12.1865%" y="879.50">z..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (5,547 samples, 2.01%)</title><rect x="11.9365%" y="853" width="2.0146%" height="15" fill="rgb(212,228,48)" fg:x="32866" fg:w="5547"/><text x="12.1865%" y="863.50">z..</text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (5,547 samples, 2.01%)</title><rect x="11.9365%" y="837" width="2.0146%" height="15" fill="rgb(250,6,50)" fg:x="32866" fg:w="5547"/><text x="12.1865%" y="847.50">z..</text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (5,547 samples, 2.01%)</title><rect x="11.9365%" y="821" width="2.0146%" height="15" fill="rgb(250,160,48)" fg:x="32866" fg:w="5547"/><text x="12.1865%" y="831.50">&lt;..</text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (5,547 samples, 2.01%)</title><rect x="11.9365%" y="805" width="2.0146%" height="15" fill="rgb(244,216,33)" fg:x="32866" fg:w="5547"/><text x="12.1865%" y="815.50">&lt;..</text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_whatami (177 samples, 0.06%)</title><rect x="13.8868%" y="789" width="0.0643%" height="15" fill="rgb(207,157,5)" fg:x="38236" fg:w="177"/><text x="14.1368%" y="799.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (213 samples, 0.08%)</title><rect x="13.9819%" y="693" width="0.0774%" height="15" fill="rgb(228,199,8)" fg:x="38498" fg:w="213"/><text x="14.2319%" y="703.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (104 samples, 0.04%)</title><rect x="14.0215%" y="677" width="0.0378%" height="15" fill="rgb(227,80,20)" fg:x="38607" fg:w="104"/><text x="14.2715%" y="687.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.01%)</title><rect x="14.0669%" y="613" width="0.0138%" height="15" fill="rgb(222,9,33)" fg:x="38732" fg:w="38"/><text x="14.3169%" y="623.50"></text></g><g><title>malloc (38 samples, 0.01%)</title><rect x="14.0669%" y="597" width="0.0138%" height="15" fill="rgb(239,44,28)" fg:x="38732" fg:w="38"/><text x="14.3169%" y="607.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (51 samples, 0.02%)</title><rect x="14.0658%" y="645" width="0.0185%" height="15" fill="rgb(249,187,43)" fg:x="38729" fg:w="51"/><text x="14.3158%" y="655.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (48 samples, 0.02%)</title><rect x="14.0669%" y="629" width="0.0174%" height="15" fill="rgb(216,141,28)" fg:x="38732" fg:w="48"/><text x="14.3169%" y="639.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (52 samples, 0.02%)</title><rect x="14.0658%" y="661" width="0.0189%" height="15" fill="rgb(230,154,53)" fg:x="38729" fg:w="52"/><text x="14.3158%" y="671.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (369 samples, 0.13%)</title><rect x="13.9511%" y="869" width="0.1340%" height="15" fill="rgb(227,82,4)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (369 samples, 0.13%)</title><rect x="13.9511%" y="853" width="0.1340%" height="15" fill="rgb(220,107,16)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (369 samples, 0.13%)</title><rect x="13.9511%" y="837" width="0.1340%" height="15" fill="rgb(207,187,2)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="847.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (369 samples, 0.13%)</title><rect x="13.9511%" y="821" width="0.1340%" height="15" fill="rgb(210,162,52)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="831.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::key::PublicKey&gt;::encrypt (369 samples, 0.13%)</title><rect x="13.9511%" y="805" width="0.1340%" height="15" fill="rgb(217,216,49)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="815.50"></text></g><g><title>rsa::pkcs1v15::encrypt (369 samples, 0.13%)</title><rect x="13.9511%" y="789" width="0.1340%" height="15" fill="rgb(218,146,49)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="799.50"></text></g><g><title>&lt;rsa::key::RsaPublicKey as rsa::raw::EncryptionPrimitive&gt;::raw_encryption_primitive (369 samples, 0.13%)</title><rect x="13.9511%" y="773" width="0.1340%" height="15" fill="rgb(216,55,40)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="783.50"></text></g><g><title>rsa::internals::encrypt (369 samples, 0.13%)</title><rect x="13.9511%" y="757" width="0.1340%" height="15" fill="rgb(208,196,21)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="767.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (369 samples, 0.13%)</title><rect x="13.9511%" y="741" width="0.1340%" height="15" fill="rgb(242,117,42)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="751.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (369 samples, 0.13%)</title><rect x="13.9511%" y="725" width="0.1340%" height="15" fill="rgb(210,11,23)" fg:x="38413" fg:w="369"/><text x="14.2011%" y="735.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (333 samples, 0.12%)</title><rect x="13.9641%" y="709" width="0.1209%" height="15" fill="rgb(217,110,2)" fg:x="38449" fg:w="333"/><text x="14.2141%" y="719.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (64 samples, 0.02%)</title><rect x="14.0618%" y="693" width="0.0232%" height="15" fill="rgb(229,77,54)" fg:x="38718" fg:w="64"/><text x="14.3118%" y="703.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (63 samples, 0.02%)</title><rect x="14.0622%" y="677" width="0.0229%" height="15" fill="rgb(218,53,16)" fg:x="38719" fg:w="63"/><text x="14.3122%" y="687.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (29 samples, 0.01%)</title><rect x="14.0851%" y="869" width="0.0105%" height="15" fill="rgb(215,38,13)" fg:x="38782" fg:w="29"/><text x="14.3351%" y="879.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (29 samples, 0.01%)</title><rect x="14.0851%" y="853" width="0.0105%" height="15" fill="rgb(235,42,18)" fg:x="38782" fg:w="29"/><text x="14.3351%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.01%)</title><rect x="14.0851%" y="837" width="0.0105%" height="15" fill="rgb(219,66,54)" fg:x="38782" fg:w="29"/><text x="14.3351%" y="847.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (29 samples, 0.01%)</title><rect x="14.0851%" y="821" width="0.0105%" height="15" fill="rgb(222,205,4)" fg:x="38782" fg:w="29"/><text x="14.3351%" y="831.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (29 samples, 0.01%)</title><rect x="14.0851%" y="805" width="0.0105%" height="15" fill="rgb(227,213,46)" fg:x="38782" fg:w="29"/><text x="14.3351%" y="815.50"></text></g><g><title>rsa::pkcs1v15::decrypt (29 samples, 0.01%)</title><rect x="14.0851%" y="789" width="0.0105%" height="15" fill="rgb(250,145,42)" fg:x="38782" fg:w="29"/><text x="14.3351%" y="799.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (29 samples, 0.01%)</title><rect x="14.0851%" y="773" width="0.0105%" height="15" fill="rgb(219,15,2)" fg:x="38782" fg:w="29"/><text x="14.3351%" y="783.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (29 samples, 0.01%)</title><rect x="14.0851%" y="757" width="0.0105%" height="15" fill="rgb(231,181,52)" fg:x="38782" fg:w="29"/><text x="14.3351%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (40 samples, 0.01%)</title><rect x="14.1232%" y="693" width="0.0145%" height="15" fill="rgb(235,1,42)" fg:x="38887" fg:w="40"/><text x="14.3732%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (40 samples, 0.01%)</title><rect x="14.1232%" y="677" width="0.0145%" height="15" fill="rgb(249,88,27)" fg:x="38887" fg:w="40"/><text x="14.3732%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (80 samples, 0.03%)</title><rect x="14.1232%" y="757" width="0.0291%" height="15" fill="rgb(235,145,16)" fg:x="38887" fg:w="80"/><text x="14.3732%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (80 samples, 0.03%)</title><rect x="14.1232%" y="741" width="0.0291%" height="15" fill="rgb(237,114,19)" fg:x="38887" fg:w="80"/><text x="14.3732%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (80 samples, 0.03%)</title><rect x="14.1232%" y="725" width="0.0291%" height="15" fill="rgb(238,51,50)" fg:x="38887" fg:w="80"/><text x="14.3732%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (80 samples, 0.03%)</title><rect x="14.1232%" y="709" width="0.0291%" height="15" fill="rgb(205,194,25)" fg:x="38887" fg:w="80"/><text x="14.3732%" y="719.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (174 samples, 0.06%)</title><rect x="14.0956%" y="853" width="0.0632%" height="15" fill="rgb(215,203,17)" fg:x="38811" fg:w="174"/><text x="14.3456%" y="863.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (174 samples, 0.06%)</title><rect x="14.0956%" y="837" width="0.0632%" height="15" fill="rgb(233,112,49)" fg:x="38811" fg:w="174"/><text x="14.3456%" y="847.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (174 samples, 0.06%)</title><rect x="14.0956%" y="821" width="0.0632%" height="15" fill="rgb(241,130,26)" fg:x="38811" fg:w="174"/><text x="14.3456%" y="831.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (105 samples, 0.04%)</title><rect x="14.1207%" y="805" width="0.0381%" height="15" fill="rgb(252,223,19)" fg:x="38880" fg:w="105"/><text x="14.3707%" y="815.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (103 samples, 0.04%)</title><rect x="14.1214%" y="789" width="0.0374%" height="15" fill="rgb(211,95,25)" fg:x="38882" fg:w="103"/><text x="14.3714%" y="799.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (100 samples, 0.04%)</title><rect x="14.1225%" y="773" width="0.0363%" height="15" fill="rgb(251,182,27)" fg:x="38885" fg:w="100"/><text x="14.3725%" y="783.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="14.1951%" y="453" width="0.0142%" height="15" fill="rgb(238,24,4)" fg:x="39085" fg:w="39"/><text x="14.4451%" y="463.50"></text></g><g><title>[libc.so.6] (78 samples, 0.03%)</title><rect x="14.1831%" y="469" width="0.0283%" height="15" fill="rgb(224,220,25)" fg:x="39052" fg:w="78"/><text x="14.4331%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (101 samples, 0.04%)</title><rect x="14.1762%" y="549" width="0.0367%" height="15" fill="rgb(239,133,26)" fg:x="39033" fg:w="101"/><text x="14.4262%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (101 samples, 0.04%)</title><rect x="14.1762%" y="533" width="0.0367%" height="15" fill="rgb(211,94,48)" fg:x="39033" fg:w="101"/><text x="14.4262%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (101 samples, 0.04%)</title><rect x="14.1762%" y="517" width="0.0367%" height="15" fill="rgb(239,87,6)" fg:x="39033" fg:w="101"/><text x="14.4262%" y="527.50"></text></g><g><title>alloc::alloc::alloc (100 samples, 0.04%)</title><rect x="14.1766%" y="501" width="0.0363%" height="15" fill="rgb(227,62,0)" fg:x="39034" fg:w="100"/><text x="14.4266%" y="511.50"></text></g><g><title>malloc (98 samples, 0.04%)</title><rect x="14.1773%" y="485" width="0.0356%" height="15" fill="rgb(211,226,4)" fg:x="39036" fg:w="98"/><text x="14.4273%" y="495.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::with_capacity (106 samples, 0.04%)</title><rect x="14.1748%" y="597" width="0.0385%" height="15" fill="rgb(253,38,52)" fg:x="39029" fg:w="106"/><text x="14.4248%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::with_capacity_in (106 samples, 0.04%)</title><rect x="14.1748%" y="581" width="0.0385%" height="15" fill="rgb(229,126,40)" fg:x="39029" fg:w="106"/><text x="14.4248%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (102 samples, 0.04%)</title><rect x="14.1762%" y="565" width="0.0370%" height="15" fill="rgb(229,165,44)" fg:x="39033" fg:w="102"/><text x="14.4262%" y="575.50"></text></g><g><title>alloc::alloc::exchange_malloc (33 samples, 0.01%)</title><rect x="14.2166%" y="581" width="0.0120%" height="15" fill="rgb(247,95,47)" fg:x="39144" fg:w="33"/><text x="14.4666%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (33 samples, 0.01%)</title><rect x="14.2166%" y="565" width="0.0120%" height="15" fill="rgb(216,140,30)" fg:x="39144" fg:w="33"/><text x="14.4666%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.01%)</title><rect x="14.2166%" y="549" width="0.0120%" height="15" fill="rgb(246,214,8)" fg:x="39144" fg:w="33"/><text x="14.4666%" y="559.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.01%)</title><rect x="14.2166%" y="533" width="0.0120%" height="15" fill="rgb(227,224,15)" fg:x="39144" fg:w="33"/><text x="14.4666%" y="543.50"></text></g><g><title>malloc (33 samples, 0.01%)</title><rect x="14.2166%" y="517" width="0.0120%" height="15" fill="rgb(233,175,4)" fg:x="39144" fg:w="33"/><text x="14.4666%" y="527.50"></text></g><g><title>[unknown] (208 samples, 0.08%)</title><rect x="14.2482%" y="421" width="0.0755%" height="15" fill="rgb(221,66,45)" fg:x="39231" fg:w="208"/><text x="14.4982%" y="431.50"></text></g><g><title>[unknown] (207 samples, 0.08%)</title><rect x="14.2485%" y="405" width="0.0752%" height="15" fill="rgb(221,178,18)" fg:x="39232" fg:w="207"/><text x="14.4985%" y="415.50"></text></g><g><title>[unknown] (204 samples, 0.07%)</title><rect x="14.2496%" y="389" width="0.0741%" height="15" fill="rgb(213,81,29)" fg:x="39235" fg:w="204"/><text x="14.4996%" y="399.50"></text></g><g><title>[unknown] (200 samples, 0.07%)</title><rect x="14.2511%" y="373" width="0.0726%" height="15" fill="rgb(220,89,49)" fg:x="39239" fg:w="200"/><text x="14.5011%" y="383.50"></text></g><g><title>[unknown] (175 samples, 0.06%)</title><rect x="14.2601%" y="357" width="0.0636%" height="15" fill="rgb(227,60,33)" fg:x="39264" fg:w="175"/><text x="14.5101%" y="367.50"></text></g><g><title>[unknown] (145 samples, 0.05%)</title><rect x="14.2710%" y="341" width="0.0527%" height="15" fill="rgb(205,113,12)" fg:x="39294" fg:w="145"/><text x="14.5210%" y="351.50"></text></g><g><title>[unknown] (129 samples, 0.05%)</title><rect x="14.2768%" y="325" width="0.0469%" height="15" fill="rgb(211,32,1)" fg:x="39310" fg:w="129"/><text x="14.5268%" y="335.50"></text></g><g><title>[unknown] (114 samples, 0.04%)</title><rect x="14.2823%" y="309" width="0.0414%" height="15" fill="rgb(246,2,12)" fg:x="39325" fg:w="114"/><text x="14.5323%" y="319.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="14.2935%" y="293" width="0.0301%" height="15" fill="rgb(243,37,27)" fg:x="39356" fg:w="83"/><text x="14.5435%" y="303.50"></text></g><g><title>[libc.so.6] (470 samples, 0.17%)</title><rect x="14.2405%" y="437" width="0.1707%" height="15" fill="rgb(248,211,31)" fg:x="39210" fg:w="470"/><text x="14.4905%" y="447.50"></text></g><g><title>__mprotect (236 samples, 0.09%)</title><rect x="14.3255%" y="421" width="0.0857%" height="15" fill="rgb(242,146,47)" fg:x="39444" fg:w="236"/><text x="14.5755%" y="431.50"></text></g><g><title>[unknown] (235 samples, 0.09%)</title><rect x="14.3259%" y="405" width="0.0853%" height="15" fill="rgb(206,70,20)" fg:x="39445" fg:w="235"/><text x="14.5759%" y="415.50"></text></g><g><title>[unknown] (234 samples, 0.08%)</title><rect x="14.3262%" y="389" width="0.0850%" height="15" fill="rgb(215,10,51)" fg:x="39446" fg:w="234"/><text x="14.5762%" y="399.50"></text></g><g><title>[unknown] (231 samples, 0.08%)</title><rect x="14.3273%" y="373" width="0.0839%" height="15" fill="rgb(243,178,53)" fg:x="39449" fg:w="231"/><text x="14.5773%" y="383.50"></text></g><g><title>[unknown] (227 samples, 0.08%)</title><rect x="14.3288%" y="357" width="0.0824%" height="15" fill="rgb(233,221,20)" fg:x="39453" fg:w="227"/><text x="14.5788%" y="367.50"></text></g><g><title>[unknown] (207 samples, 0.08%)</title><rect x="14.3360%" y="341" width="0.0752%" height="15" fill="rgb(218,95,35)" fg:x="39473" fg:w="207"/><text x="14.5860%" y="351.50"></text></g><g><title>[unknown] (175 samples, 0.06%)</title><rect x="14.3477%" y="325" width="0.0636%" height="15" fill="rgb(229,13,5)" fg:x="39505" fg:w="175"/><text x="14.5977%" y="335.50"></text></g><g><title>[unknown] (120 samples, 0.04%)</title><rect x="14.3676%" y="309" width="0.0436%" height="15" fill="rgb(252,164,30)" fg:x="39560" fg:w="120"/><text x="14.6176%" y="319.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="14.3996%" y="293" width="0.0116%" height="15" fill="rgb(232,68,36)" fg:x="39648" fg:w="32"/><text x="14.6496%" y="303.50"></text></g><g><title>[libc.so.6] (495 samples, 0.18%)</title><rect x="14.2329%" y="453" width="0.1798%" height="15" fill="rgb(219,59,54)" fg:x="39189" fg:w="495"/><text x="14.4829%" y="463.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (590 samples, 0.21%)</title><rect x="14.2147%" y="597" width="0.2143%" height="15" fill="rgb(250,92,33)" fg:x="39139" fg:w="590"/><text x="14.4647%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (552 samples, 0.20%)</title><rect x="14.2285%" y="581" width="0.2005%" height="15" fill="rgb(229,162,54)" fg:x="39177" fg:w="552"/><text x="14.4785%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (552 samples, 0.20%)</title><rect x="14.2285%" y="565" width="0.2005%" height="15" fill="rgb(244,114,52)" fg:x="39177" fg:w="552"/><text x="14.4785%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (552 samples, 0.20%)</title><rect x="14.2285%" y="549" width="0.2005%" height="15" fill="rgb(212,211,43)" fg:x="39177" fg:w="552"/><text x="14.4785%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (552 samples, 0.20%)</title><rect x="14.2285%" y="533" width="0.2005%" height="15" fill="rgb(226,147,8)" fg:x="39177" fg:w="552"/><text x="14.4785%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (552 samples, 0.20%)</title><rect x="14.2285%" y="517" width="0.2005%" height="15" fill="rgb(226,23,13)" fg:x="39177" fg:w="552"/><text x="14.4785%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (552 samples, 0.20%)</title><rect x="14.2285%" y="501" width="0.2005%" height="15" fill="rgb(240,63,4)" fg:x="39177" fg:w="552"/><text x="14.4785%" y="511.50"></text></g><g><title>alloc::alloc::alloc (552 samples, 0.20%)</title><rect x="14.2285%" y="485" width="0.2005%" height="15" fill="rgb(221,1,32)" fg:x="39177" fg:w="552"/><text x="14.4785%" y="495.50"></text></g><g><title>malloc (551 samples, 0.20%)</title><rect x="14.2289%" y="469" width="0.2001%" height="15" fill="rgb(242,117,10)" fg:x="39178" fg:w="551"/><text x="14.4789%" y="479.50"></text></g><g><title>__lll_lock_wake_private (41 samples, 0.01%)</title><rect x="14.4141%" y="453" width="0.0149%" height="15" fill="rgb(249,172,44)" fg:x="39688" fg:w="41"/><text x="14.6641%" y="463.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="14.4141%" y="437" width="0.0149%" height="15" fill="rgb(244,46,45)" fg:x="39688" fg:w="41"/><text x="14.6641%" y="447.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="14.4141%" y="421" width="0.0149%" height="15" fill="rgb(206,43,17)" fg:x="39688" fg:w="41"/><text x="14.6641%" y="431.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="14.4141%" y="405" width="0.0149%" height="15" fill="rgb(239,218,39)" fg:x="39688" fg:w="41"/><text x="14.6641%" y="415.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="14.4141%" y="389" width="0.0149%" height="15" fill="rgb(208,169,54)" fg:x="39688" fg:w="41"/><text x="14.6641%" y="399.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="14.4149%" y="373" width="0.0142%" height="15" fill="rgb(247,25,42)" fg:x="39690" fg:w="39"/><text x="14.6649%" y="383.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="14.4454%" y="485" width="0.0142%" height="15" fill="rgb(226,23,31)" fg:x="39774" fg:w="39"/><text x="14.6954%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (61 samples, 0.02%)</title><rect x="14.4388%" y="565" width="0.0222%" height="15" fill="rgb(247,16,28)" fg:x="39756" fg:w="61"/><text x="14.6888%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.02%)</title><rect x="14.4388%" y="549" width="0.0222%" height="15" fill="rgb(231,147,38)" fg:x="39756" fg:w="61"/><text x="14.6888%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.02%)</title><rect x="14.4388%" y="533" width="0.0222%" height="15" fill="rgb(253,81,48)" fg:x="39756" fg:w="61"/><text x="14.6888%" y="543.50"></text></g><g><title>alloc::alloc::alloc (61 samples, 0.02%)</title><rect x="14.4388%" y="517" width="0.0222%" height="15" fill="rgb(249,222,43)" fg:x="39756" fg:w="61"/><text x="14.6888%" y="527.50"></text></g><g><title>malloc (60 samples, 0.02%)</title><rect x="14.4392%" y="501" width="0.0218%" height="15" fill="rgb(221,3,27)" fg:x="39757" fg:w="60"/><text x="14.6892%" y="511.50"></text></g><g><title>[libc.so.6] (61 samples, 0.02%)</title><rect x="14.4704%" y="437" width="0.0222%" height="15" fill="rgb(228,180,5)" fg:x="39843" fg:w="61"/><text x="14.7204%" y="447.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::new (269 samples, 0.10%)</title><rect x="14.4341%" y="581" width="0.0977%" height="15" fill="rgb(227,131,42)" fg:x="39743" fg:w="269"/><text x="14.6841%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (195 samples, 0.07%)</title><rect x="14.4610%" y="565" width="0.0708%" height="15" fill="rgb(212,3,39)" fg:x="39817" fg:w="195"/><text x="14.7110%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (195 samples, 0.07%)</title><rect x="14.4610%" y="549" width="0.0708%" height="15" fill="rgb(226,45,5)" fg:x="39817" fg:w="195"/><text x="14.7110%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (194 samples, 0.07%)</title><rect x="14.4613%" y="533" width="0.0705%" height="15" fill="rgb(215,167,45)" fg:x="39818" fg:w="194"/><text x="14.7113%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (194 samples, 0.07%)</title><rect x="14.4613%" y="517" width="0.0705%" height="15" fill="rgb(250,218,53)" fg:x="39818" fg:w="194"/><text x="14.7113%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (192 samples, 0.07%)</title><rect x="14.4621%" y="501" width="0.0697%" height="15" fill="rgb(207,140,0)" fg:x="39820" fg:w="192"/><text x="14.7121%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (192 samples, 0.07%)</title><rect x="14.4621%" y="485" width="0.0697%" height="15" fill="rgb(238,133,51)" fg:x="39820" fg:w="192"/><text x="14.7121%" y="495.50"></text></g><g><title>alloc::alloc::alloc (189 samples, 0.07%)</title><rect x="14.4632%" y="469" width="0.0686%" height="15" fill="rgb(218,203,53)" fg:x="39823" fg:w="189"/><text x="14.7132%" y="479.50"></text></g><g><title>malloc (185 samples, 0.07%)</title><rect x="14.4646%" y="453" width="0.0672%" height="15" fill="rgb(226,184,25)" fg:x="39827" fg:w="185"/><text x="14.7146%" y="463.50"></text></g><g><title>__lll_lock_wake_private (106 samples, 0.04%)</title><rect x="14.4933%" y="437" width="0.0385%" height="15" fill="rgb(231,121,21)" fg:x="39906" fg:w="106"/><text x="14.7433%" y="447.50"></text></g><g><title>[unknown] (106 samples, 0.04%)</title><rect x="14.4933%" y="421" width="0.0385%" height="15" fill="rgb(251,14,34)" fg:x="39906" fg:w="106"/><text x="14.7433%" y="431.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="14.4940%" y="405" width="0.0378%" height="15" fill="rgb(249,193,11)" fg:x="39908" fg:w="104"/><text x="14.7440%" y="415.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="14.4940%" y="389" width="0.0378%" height="15" fill="rgb(220,172,37)" fg:x="39908" fg:w="104"/><text x="14.7440%" y="399.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="14.4940%" y="373" width="0.0378%" height="15" fill="rgb(231,229,43)" fg:x="39908" fg:w="104"/><text x="14.7440%" y="383.50"></text></g><g><title>[unknown] (99 samples, 0.04%)</title><rect x="14.4958%" y="357" width="0.0360%" height="15" fill="rgb(250,161,5)" fg:x="39913" fg:w="99"/><text x="14.7458%" y="367.50"></text></g><g><title>[unknown] (81 samples, 0.03%)</title><rect x="14.5024%" y="341" width="0.0294%" height="15" fill="rgb(218,225,18)" fg:x="39931" fg:w="81"/><text x="14.7524%" y="351.50"></text></g><g><title>[unknown] (76 samples, 0.03%)</title><rect x="14.5042%" y="325" width="0.0276%" height="15" fill="rgb(245,45,42)" fg:x="39936" fg:w="76"/><text x="14.7542%" y="335.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="14.5067%" y="309" width="0.0251%" height="15" fill="rgb(211,115,1)" fg:x="39943" fg:w="69"/><text x="14.7567%" y="319.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="14.5122%" y="293" width="0.0196%" height="15" fill="rgb(248,133,52)" fg:x="39958" fg:w="54"/><text x="14.7622%" y="303.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (30 samples, 0.01%)</title><rect x="14.5322%" y="565" width="0.0109%" height="15" fill="rgb(238,100,21)" fg:x="40013" fg:w="30"/><text x="14.7822%" y="575.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::new (1,078 samples, 0.39%)</title><rect x="14.1595%" y="613" width="0.3915%" height="15" fill="rgb(247,144,11)" fg:x="38987" fg:w="1078"/><text x="14.4095%" y="623.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::new (336 samples, 0.12%)</title><rect x="14.4290%" y="597" width="0.1220%" height="15" fill="rgb(206,164,16)" fg:x="39729" fg:w="336"/><text x="14.6790%" y="607.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::clear (53 samples, 0.02%)</title><rect x="14.5318%" y="581" width="0.0192%" height="15" fill="rgb(222,34,3)" fg:x="40012" fg:w="53"/><text x="14.7818%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,844 samples, 3.21%)</title><rect x="11.3423%" y="965" width="3.2120%" height="15" fill="rgb(248,82,4)" fg:x="31230" fg:w="8844"/><text x="11.5923%" y="975.50">&lt;co..</text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (1,661 samples, 0.60%)</title><rect x="13.9511%" y="949" width="0.6033%" height="15" fill="rgb(228,81,46)" fg:x="38413" fg:w="1661"/><text x="14.2011%" y="959.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,661 samples, 0.60%)</title><rect x="13.9511%" y="933" width="0.6033%" height="15" fill="rgb(227,67,47)" fg:x="38413" fg:w="1661"/><text x="14.2011%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,661 samples, 0.60%)</title><rect x="13.9511%" y="917" width="0.6033%" height="15" fill="rgb(215,93,53)" fg:x="38413" fg:w="1661"/><text x="14.2011%" y="927.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (1,661 samples, 0.60%)</title><rect x="13.9511%" y="901" width="0.6033%" height="15" fill="rgb(248,194,39)" fg:x="38413" fg:w="1661"/><text x="14.2011%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,661 samples, 0.60%)</title><rect x="13.9511%" y="885" width="0.6033%" height="15" fill="rgb(215,5,19)" fg:x="38413" fg:w="1661"/><text x="14.2011%" y="895.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (1,263 samples, 0.46%)</title><rect x="14.0956%" y="869" width="0.4587%" height="15" fill="rgb(226,215,51)" fg:x="38811" fg:w="1263"/><text x="14.3456%" y="879.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::start_tx (1,089 samples, 0.40%)</title><rect x="14.1588%" y="853" width="0.3955%" height="15" fill="rgb(225,56,26)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx (1,089 samples, 0.40%)</title><rect x="14.1588%" y="837" width="0.3955%" height="15" fill="rgb(222,75,29)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="847.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new (1,089 samples, 0.40%)</title><rect x="14.1588%" y="821" width="0.3955%" height="15" fill="rgb(236,139,6)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,089 samples, 0.40%)</title><rect x="14.1588%" y="805" width="0.3955%" height="15" fill="rgb(223,137,36)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,089 samples, 0.40%)</title><rect x="14.1588%" y="789" width="0.3955%" height="15" fill="rgb(226,99,2)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,089 samples, 0.40%)</title><rect x="14.1588%" y="773" width="0.3955%" height="15" fill="rgb(206,133,23)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,089 samples, 0.40%)</title><rect x="14.1588%" y="757" width="0.3955%" height="15" fill="rgb(243,173,15)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,089 samples, 0.40%)</title><rect x="14.1588%" y="741" width="0.3955%" height="15" fill="rgb(228,69,28)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,089 samples, 0.40%)</title><rect x="14.1588%" y="725" width="0.3955%" height="15" fill="rgb(212,51,22)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,089 samples, 0.40%)</title><rect x="14.1588%" y="709" width="0.3955%" height="15" fill="rgb(227,113,0)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,089 samples, 0.40%)</title><rect x="14.1588%" y="693" width="0.3955%" height="15" fill="rgb(252,84,27)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,089 samples, 0.40%)</title><rect x="14.1588%" y="677" width="0.3955%" height="15" fill="rgb(223,145,39)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1,089 samples, 0.40%)</title><rect x="14.1588%" y="661" width="0.3955%" height="15" fill="rgb(239,219,30)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="671.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1,089 samples, 0.40%)</title><rect x="14.1588%" y="645" width="0.3955%" height="15" fill="rgb(224,196,39)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="655.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::new::{{closure}} (1,089 samples, 0.40%)</title><rect x="14.1588%" y="629" width="0.3955%" height="15" fill="rgb(205,35,43)" fg:x="38985" fg:w="1089"/><text x="14.4088%" y="639.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (43 samples, 0.02%)</title><rect x="14.5590%" y="581" width="0.0156%" height="15" fill="rgb(228,201,21)" fg:x="40087" fg:w="43"/><text x="14.8090%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::read (43 samples, 0.02%)</title><rect x="14.5590%" y="565" width="0.0156%" height="15" fill="rgb(237,118,16)" fg:x="40087" fg:w="43"/><text x="14.8090%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::read (43 samples, 0.02%)</title><rect x="14.5590%" y="549" width="0.0156%" height="15" fill="rgb(241,17,19)" fg:x="40087" fg:w="43"/><text x="14.8090%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (43 samples, 0.02%)</title><rect x="14.5590%" y="533" width="0.0156%" height="15" fill="rgb(214,10,25)" fg:x="40087" fg:w="43"/><text x="14.8090%" y="543.50"></text></g><g><title>recv (42 samples, 0.02%)</title><rect x="14.5594%" y="517" width="0.0153%" height="15" fill="rgb(238,37,29)" fg:x="40088" fg:w="42"/><text x="14.8094%" y="527.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="14.5609%" y="501" width="0.0138%" height="15" fill="rgb(253,83,25)" fg:x="40092" fg:w="38"/><text x="14.8109%" y="511.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="14.5616%" y="485" width="0.0131%" height="15" fill="rgb(234,192,12)" fg:x="40094" fg:w="36"/><text x="14.8116%" y="495.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="14.5616%" y="469" width="0.0131%" height="15" fill="rgb(241,216,45)" fg:x="40094" fg:w="36"/><text x="14.8116%" y="479.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="14.5630%" y="453" width="0.0116%" height="15" fill="rgb(242,22,33)" fg:x="40098" fg:w="32"/><text x="14.8130%" y="463.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="14.5638%" y="437" width="0.0109%" height="15" fill="rgb(231,105,49)" fg:x="40100" fg:w="30"/><text x="14.8138%" y="447.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="14.5590%" y="645" width="0.0258%" height="15" fill="rgb(218,204,15)" fg:x="40087" fg:w="71"/><text x="14.8090%" y="655.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (71 samples, 0.03%)</title><rect x="14.5590%" y="629" width="0.0258%" height="15" fill="rgb(235,138,41)" fg:x="40087" fg:w="71"/><text x="14.8090%" y="639.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (71 samples, 0.03%)</title><rect x="14.5590%" y="613" width="0.0258%" height="15" fill="rgb(246,0,9)" fg:x="40087" fg:w="71"/><text x="14.8090%" y="623.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (71 samples, 0.03%)</title><rect x="14.5590%" y="597" width="0.0258%" height="15" fill="rgb(210,74,4)" fg:x="40087" fg:w="71"/><text x="14.8090%" y="607.50"></text></g><g><title>async_io::Async&lt;T&gt;::poll_readable (28 samples, 0.01%)</title><rect x="14.5747%" y="581" width="0.0102%" height="15" fill="rgb(250,60,41)" fg:x="40130" fg:w="28"/><text x="14.8247%" y="591.50"></text></g><g><title>async_io::reactor::Source::poll_ready (28 samples, 0.01%)</title><rect x="14.5747%" y="565" width="0.0102%" height="15" fill="rgb(220,115,12)" fg:x="40130" fg:w="28"/><text x="14.8247%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (72 samples, 0.03%)</title><rect x="14.5590%" y="725" width="0.0261%" height="15" fill="rgb(237,100,13)" fg:x="40087" fg:w="72"/><text x="14.8090%" y="735.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::read_transport_message::{{closure}} (72 samples, 0.03%)</title><rect x="14.5590%" y="709" width="0.0261%" height="15" fill="rgb(213,55,26)" fg:x="40087" fg:w="72"/><text x="14.8090%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (72 samples, 0.03%)</title><rect x="14.5590%" y="693" width="0.0261%" height="15" fill="rgb(216,17,4)" fg:x="40087" fg:w="72"/><text x="14.8090%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (72 samples, 0.03%)</title><rect x="14.5590%" y="677" width="0.0261%" height="15" fill="rgb(220,153,47)" fg:x="40087" fg:w="72"/><text x="14.8090%" y="687.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (72 samples, 0.03%)</title><rect x="14.5590%" y="661" width="0.0261%" height="15" fill="rgb(215,131,9)" fg:x="40087" fg:w="72"/><text x="14.8090%" y="671.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (41 samples, 0.01%)</title><rect x="14.5852%" y="693" width="0.0149%" height="15" fill="rgb(233,46,42)" fg:x="40159" fg:w="41"/><text x="14.8352%" y="703.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (29 samples, 0.01%)</title><rect x="14.6004%" y="597" width="0.0105%" height="15" fill="rgb(226,86,7)" fg:x="40201" fg:w="29"/><text x="14.8504%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (31 samples, 0.01%)</title><rect x="14.6004%" y="613" width="0.0113%" height="15" fill="rgb(239,226,21)" fg:x="40201" fg:w="31"/><text x="14.8504%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (38 samples, 0.01%)</title><rect x="14.6001%" y="661" width="0.0138%" height="15" fill="rgb(244,137,22)" fg:x="40200" fg:w="38"/><text x="14.8501%" y="671.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (38 samples, 0.01%)</title><rect x="14.6001%" y="645" width="0.0138%" height="15" fill="rgb(211,139,35)" fg:x="40200" fg:w="38"/><text x="14.8501%" y="655.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (37 samples, 0.01%)</title><rect x="14.6004%" y="629" width="0.0134%" height="15" fill="rgb(214,62,50)" fg:x="40201" fg:w="37"/><text x="14.8504%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (96 samples, 0.03%)</title><rect x="14.5852%" y="725" width="0.0349%" height="15" fill="rgb(212,113,44)" fg:x="40159" fg:w="96"/><text x="14.8352%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (96 samples, 0.03%)</title><rect x="14.5852%" y="709" width="0.0349%" height="15" fill="rgb(226,150,43)" fg:x="40159" fg:w="96"/><text x="14.8352%" y="719.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_ack::{{closure}} (55 samples, 0.02%)</title><rect x="14.6001%" y="693" width="0.0200%" height="15" fill="rgb(250,71,37)" fg:x="40200" fg:w="55"/><text x="14.8501%" y="703.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (55 samples, 0.02%)</title><rect x="14.6001%" y="677" width="0.0200%" height="15" fill="rgb(219,76,19)" fg:x="40200" fg:w="55"/><text x="14.8501%" y="687.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::init_ack::recv::{{closure}} (169 samples, 0.06%)</title><rect x="14.5590%" y="741" width="0.0614%" height="15" fill="rgb(250,39,11)" fg:x="40087" fg:w="169"/><text x="14.8090%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (285 samples, 0.10%)</title><rect x="14.5543%" y="757" width="0.1035%" height="15" fill="rgb(230,64,31)" fg:x="40074" fg:w="285"/><text x="14.8043%" y="767.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_init::{{closure}} (61 samples, 0.02%)</title><rect x="14.6357%" y="741" width="0.0222%" height="15" fill="rgb(208,222,23)" fg:x="40298" fg:w="61"/><text x="14.8857%" y="751.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::init_transport_unicast (61 samples, 0.02%)</title><rect x="14.6357%" y="725" width="0.0222%" height="15" fill="rgb(227,125,18)" fg:x="40298" fg:w="61"/><text x="14.8857%" y="735.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::make (55 samples, 0.02%)</title><rect x="14.6378%" y="709" width="0.0200%" height="15" fill="rgb(234,210,9)" fg:x="40304" fg:w="55"/><text x="14.8878%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (289 samples, 0.10%)</title><rect x="14.5543%" y="789" width="0.1050%" height="15" fill="rgb(217,127,24)" fg:x="40074" fg:w="289"/><text x="14.8043%" y="799.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (289 samples, 0.10%)</title><rect x="14.5543%" y="773" width="0.1050%" height="15" fill="rgb(239,141,48)" fg:x="40074" fg:w="289"/><text x="14.8043%" y="783.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (290 samples, 0.11%)</title><rect x="14.5543%" y="933" width="0.1053%" height="15" fill="rgb(227,109,8)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.11%)</title><rect x="14.5543%" y="917" width="0.1053%" height="15" fill="rgb(235,184,23)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="927.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (290 samples, 0.11%)</title><rect x="14.5543%" y="901" width="0.1053%" height="15" fill="rgb(227,226,48)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.11%)</title><rect x="14.5543%" y="885" width="0.1053%" height="15" fill="rgb(206,150,11)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="895.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (290 samples, 0.11%)</title><rect x="14.5543%" y="869" width="0.1053%" height="15" fill="rgb(254,2,33)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.11%)</title><rect x="14.5543%" y="853" width="0.1053%" height="15" fill="rgb(243,160,20)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="863.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (290 samples, 0.11%)</title><rect x="14.5543%" y="837" width="0.1053%" height="15" fill="rgb(218,208,30)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.11%)</title><rect x="14.5543%" y="821" width="0.1053%" height="15" fill="rgb(224,120,49)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="831.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (290 samples, 0.11%)</title><rect x="14.5543%" y="805" width="0.1053%" height="15" fill="rgb(246,12,2)" fg:x="40074" fg:w="290"/><text x="14.8043%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="14.6607%" y="741" width="0.0153%" height="15" fill="rgb(236,117,3)" fg:x="40367" fg:w="42"/><text x="14.9107%" y="751.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (42 samples, 0.02%)</title><rect x="14.6607%" y="725" width="0.0153%" height="15" fill="rgb(216,128,52)" fg:x="40367" fg:w="42"/><text x="14.9107%" y="735.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (44 samples, 0.02%)</title><rect x="14.6607%" y="757" width="0.0160%" height="15" fill="rgb(246,145,19)" fg:x="40367" fg:w="44"/><text x="14.9107%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.02%)</title><rect x="14.6604%" y="773" width="0.0167%" height="15" fill="rgb(222,11,46)" fg:x="40366" fg:w="46"/><text x="14.9104%" y="783.50"></text></g><g><title>async_io::driver::block_on (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1237" width="3.3362%" height="15" fill="rgb(245,82,36)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1247.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1221" width="3.3362%" height="15" fill="rgb(250,73,51)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1231.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1205" width="3.3362%" height="15" fill="rgb(221,189,23)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1215.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}} (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1189" width="3.3362%" height="15" fill="rgb(210,33,7)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1199.50">asy..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1173" width="3.3362%" height="15" fill="rgb(210,107,22)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1183.50">&lt;fu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1157" width="3.3362%" height="15" fill="rgb(222,116,37)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1167.50">&lt;co..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1141" width="3.3362%" height="15" fill="rgb(254,17,48)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1151.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1125" width="3.3362%" height="15" fill="rgb(224,36,32)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1135.50">asy..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1109" width="3.3362%" height="15" fill="rgb(232,90,46)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1119.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1093" width="3.3362%" height="15" fill="rgb(241,66,40)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1103.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1077" width="3.3362%" height="15" fill="rgb(249,184,29)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1087.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1061" width="3.3362%" height="15" fill="rgb(231,181,1)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1071.50">&lt;as..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1045" width="3.3362%" height="15" fill="rgb(224,94,2)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1055.50">asy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1029" width="3.3362%" height="15" fill="rgb(229,170,15)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1039.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9,186 samples, 3.34%)</title><rect x="11.3423%" y="1013" width="3.3362%" height="15" fill="rgb(240,127,35)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1023.50">std..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (9,186 samples, 3.34%)</title><rect x="11.3423%" y="997" width="3.3362%" height="15" fill="rgb(248,196,34)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="1007.50">asy..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (9,186 samples, 3.34%)</title><rect x="11.3423%" y="981" width="3.3362%" height="15" fill="rgb(236,137,7)" fg:x="31230" fg:w="9186"/><text x="11.5923%" y="991.50">&lt;as..</text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (342 samples, 0.12%)</title><rect x="14.5543%" y="965" width="0.1242%" height="15" fill="rgb(235,127,16)" fg:x="40074" fg:w="342"/><text x="14.8043%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (342 samples, 0.12%)</title><rect x="14.5543%" y="949" width="0.1242%" height="15" fill="rgb(250,192,54)" fg:x="40074" fg:w="342"/><text x="14.8043%" y="959.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (52 samples, 0.02%)</title><rect x="14.6596%" y="933" width="0.0189%" height="15" fill="rgb(218,98,20)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="14.6596%" y="917" width="0.0189%" height="15" fill="rgb(230,176,47)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="927.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (52 samples, 0.02%)</title><rect x="14.6596%" y="901" width="0.0189%" height="15" fill="rgb(244,2,33)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="14.6596%" y="885" width="0.0189%" height="15" fill="rgb(231,100,17)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="895.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (52 samples, 0.02%)</title><rect x="14.6596%" y="869" width="0.0189%" height="15" fill="rgb(245,23,12)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="14.6596%" y="853" width="0.0189%" height="15" fill="rgb(249,55,22)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="863.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (52 samples, 0.02%)</title><rect x="14.6596%" y="837" width="0.0189%" height="15" fill="rgb(207,134,9)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="14.6596%" y="821" width="0.0189%" height="15" fill="rgb(218,134,0)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.02%)</title><rect x="14.6596%" y="805" width="0.0189%" height="15" fill="rgb(213,212,33)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="815.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (52 samples, 0.02%)</title><rect x="14.6596%" y="789" width="0.0189%" height="15" fill="rgb(252,106,18)" fg:x="40364" fg:w="52"/><text x="14.9096%" y="799.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="14.6785%" y="917" width="0.0102%" height="15" fill="rgb(208,126,42)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="14.6785%" y="901" width="0.0102%" height="15" fill="rgb(246,175,29)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="911.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (28 samples, 0.01%)</title><rect x="14.6785%" y="885" width="0.0102%" height="15" fill="rgb(215,13,50)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.01%)</title><rect x="14.6785%" y="869" width="0.0102%" height="15" fill="rgb(216,172,15)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.01%)</title><rect x="14.6785%" y="853" width="0.0102%" height="15" fill="rgb(212,103,13)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (28 samples, 0.01%)</title><rect x="14.6785%" y="837" width="0.0102%" height="15" fill="rgb(231,171,36)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="847.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (28 samples, 0.01%)</title><rect x="14.6785%" y="821" width="0.0102%" height="15" fill="rgb(250,123,20)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="14.6785%" y="805" width="0.0102%" height="15" fill="rgb(212,53,50)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (28 samples, 0.01%)</title><rect x="14.6785%" y="789" width="0.0102%" height="15" fill="rgb(243,54,12)" fg:x="40416" fg:w="28"/><text x="14.9285%" y="799.50"></text></g><g><title>[libc.so.6] (55 samples, 0.02%)</title><rect x="14.6967%" y="565" width="0.0200%" height="15" fill="rgb(234,101,34)" fg:x="40466" fg:w="55"/><text x="14.9467%" y="575.50"></text></g><g><title>[libc.so.6] (68 samples, 0.02%)</title><rect x="14.6923%" y="581" width="0.0247%" height="15" fill="rgb(254,67,22)" fg:x="40454" fg:w="68"/><text x="14.9423%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (111 samples, 0.04%)</title><rect x="14.6785%" y="981" width="0.0403%" height="15" fill="rgb(250,35,47)" fg:x="40416" fg:w="111"/><text x="14.9285%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (111 samples, 0.04%)</title><rect x="14.6785%" y="965" width="0.0403%" height="15" fill="rgb(226,126,38)" fg:x="40416" fg:w="111"/><text x="14.9285%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (111 samples, 0.04%)</title><rect x="14.6785%" y="949" width="0.0403%" height="15" fill="rgb(216,138,53)" fg:x="40416" fg:w="111"/><text x="14.9285%" y="959.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (111 samples, 0.04%)</title><rect x="14.6785%" y="933" width="0.0403%" height="15" fill="rgb(246,199,43)" fg:x="40416" fg:w="111"/><text x="14.9285%" y="943.50"></text></g><g><title>async_executor::Executor::state (83 samples, 0.03%)</title><rect x="14.6887%" y="917" width="0.0301%" height="15" fill="rgb(232,125,11)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (83 samples, 0.03%)</title><rect x="14.6887%" y="901" width="0.0301%" height="15" fill="rgb(218,219,45)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="911.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (83 samples, 0.03%)</title><rect x="14.6887%" y="885" width="0.0301%" height="15" fill="rgb(216,102,54)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="895.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (83 samples, 0.03%)</title><rect x="14.6887%" y="869" width="0.0301%" height="15" fill="rgb(250,228,7)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="879.50"></text></g><g><title>once_cell::imp::initialize_or_wait (83 samples, 0.03%)</title><rect x="14.6887%" y="853" width="0.0301%" height="15" fill="rgb(226,125,25)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (83 samples, 0.03%)</title><rect x="14.6887%" y="837" width="0.0301%" height="15" fill="rgb(224,165,27)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="847.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (83 samples, 0.03%)</title><rect x="14.6887%" y="821" width="0.0301%" height="15" fill="rgb(233,86,3)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="831.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (83 samples, 0.03%)</title><rect x="14.6887%" y="805" width="0.0301%" height="15" fill="rgb(228,116,20)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="815.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (83 samples, 0.03%)</title><rect x="14.6887%" y="789" width="0.0301%" height="15" fill="rgb(209,192,17)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="799.50"></text></g><g><title>async_executor::State::new (83 samples, 0.03%)</title><rect x="14.6887%" y="773" width="0.0301%" height="15" fill="rgb(224,88,34)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::unbounded (83 samples, 0.03%)</title><rect x="14.6887%" y="757" width="0.0301%" height="15" fill="rgb(233,38,6)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (83 samples, 0.03%)</title><rect x="14.6887%" y="741" width="0.0301%" height="15" fill="rgb(212,59,30)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.03%)</title><rect x="14.6887%" y="725" width="0.0301%" height="15" fill="rgb(213,80,3)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.03%)</title><rect x="14.6887%" y="709" width="0.0301%" height="15" fill="rgb(251,178,7)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.03%)</title><rect x="14.6887%" y="693" width="0.0301%" height="15" fill="rgb(213,154,26)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="703.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.03%)</title><rect x="14.6887%" y="677" width="0.0301%" height="15" fill="rgb(238,165,49)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="687.50"></text></g><g><title>__rdl_alloc (83 samples, 0.03%)</title><rect x="14.6887%" y="661" width="0.0301%" height="15" fill="rgb(248,91,46)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (83 samples, 0.03%)</title><rect x="14.6887%" y="645" width="0.0301%" height="15" fill="rgb(244,21,52)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="655.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (83 samples, 0.03%)</title><rect x="14.6887%" y="629" width="0.0301%" height="15" fill="rgb(247,122,20)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="639.50"></text></g><g><title>posix_memalign (83 samples, 0.03%)</title><rect x="14.6887%" y="613" width="0.0301%" height="15" fill="rgb(218,27,9)" fg:x="40444" fg:w="83"/><text x="14.9387%" y="623.50"></text></g><g><title>[libc.so.6] (80 samples, 0.03%)</title><rect x="14.6898%" y="597" width="0.0291%" height="15" fill="rgb(246,7,6)" fg:x="40447" fg:w="80"/><text x="14.9398%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (46 samples, 0.02%)</title><rect x="14.7690%" y="869" width="0.0167%" height="15" fill="rgb(227,135,54)" fg:x="40665" fg:w="46"/><text x="15.0190%" y="879.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (30 samples, 0.01%)</title><rect x="14.7748%" y="853" width="0.0109%" height="15" fill="rgb(247,14,11)" fg:x="40681" fg:w="30"/><text x="15.0248%" y="863.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (73 samples, 0.03%)</title><rect x="14.7679%" y="885" width="0.0265%" height="15" fill="rgb(206,149,34)" fg:x="40662" fg:w="73"/><text x="15.0179%" y="895.50"></text></g><g><title>core::intrinsics::copy (84 samples, 0.03%)</title><rect x="14.7998%" y="837" width="0.0305%" height="15" fill="rgb(227,228,4)" fg:x="40750" fg:w="84"/><text x="15.0498%" y="847.50"></text></g><g><title>[libc.so.6] (80 samples, 0.03%)</title><rect x="14.8013%" y="821" width="0.0291%" height="15" fill="rgb(238,218,28)" fg:x="40754" fg:w="80"/><text x="15.0513%" y="831.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (109 samples, 0.04%)</title><rect x="14.7969%" y="869" width="0.0396%" height="15" fill="rgb(252,86,40)" fg:x="40742" fg:w="109"/><text x="15.0469%" y="879.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (103 samples, 0.04%)</title><rect x="14.7991%" y="853" width="0.0374%" height="15" fill="rgb(251,225,11)" fg:x="40748" fg:w="103"/><text x="15.0491%" y="863.50"></text></g><g><title>[libc.so.6] (33 samples, 0.01%)</title><rect x="14.8634%" y="725" width="0.0120%" height="15" fill="rgb(206,46,49)" fg:x="40925" fg:w="33"/><text x="15.1134%" y="735.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split (109 samples, 0.04%)</title><rect x="14.8376%" y="869" width="0.0396%" height="15" fill="rgb(245,128,24)" fg:x="40854" fg:w="109"/><text x="15.0876%" y="879.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (94 samples, 0.03%)</title><rect x="14.8430%" y="853" width="0.0341%" height="15" fill="rgb(219,177,34)" fg:x="40869" fg:w="94"/><text x="15.0930%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (94 samples, 0.03%)</title><rect x="14.8430%" y="837" width="0.0341%" height="15" fill="rgb(218,60,48)" fg:x="40869" fg:w="94"/><text x="15.0930%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (94 samples, 0.03%)</title><rect x="14.8430%" y="821" width="0.0341%" height="15" fill="rgb(221,11,5)" fg:x="40869" fg:w="94"/><text x="15.0930%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (94 samples, 0.03%)</title><rect x="14.8430%" y="805" width="0.0341%" height="15" fill="rgb(220,148,13)" fg:x="40869" fg:w="94"/><text x="15.0930%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.03%)</title><rect x="14.8430%" y="789" width="0.0341%" height="15" fill="rgb(210,16,3)" fg:x="40869" fg:w="94"/><text x="15.0930%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.03%)</title><rect x="14.8430%" y="773" width="0.0341%" height="15" fill="rgb(236,80,2)" fg:x="40869" fg:w="94"/><text x="15.0930%" y="783.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.03%)</title><rect x="14.8430%" y="757" width="0.0341%" height="15" fill="rgb(239,129,19)" fg:x="40869" fg:w="94"/><text x="15.0930%" y="767.50"></text></g><g><title>malloc (85 samples, 0.03%)</title><rect x="14.8463%" y="741" width="0.0309%" height="15" fill="rgb(220,106,35)" fg:x="40878" fg:w="85"/><text x="15.0963%" y="751.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (247 samples, 0.09%)</title><rect x="14.7944%" y="885" width="0.0897%" height="15" fill="rgb(252,139,45)" fg:x="40735" fg:w="247"/><text x="15.0444%" y="895.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (354 samples, 0.13%)</title><rect x="14.7588%" y="901" width="0.1286%" height="15" fill="rgb(229,8,36)" fg:x="40637" fg:w="354"/><text x="15.0088%" y="911.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (465 samples, 0.17%)</title><rect x="14.7188%" y="933" width="0.1689%" height="15" fill="rgb(230,126,33)" fg:x="40527" fg:w="465"/><text x="14.9688%" y="943.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (465 samples, 0.17%)</title><rect x="14.7188%" y="917" width="0.1689%" height="15" fill="rgb(239,140,21)" fg:x="40527" fg:w="465"/><text x="14.9688%" y="927.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_internal_kv (41 samples, 0.01%)</title><rect x="14.8877%" y="853" width="0.0149%" height="15" fill="rgb(254,104,9)" fg:x="40992" fg:w="41"/><text x="15.1377%" y="863.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (41 samples, 0.01%)</title><rect x="14.8877%" y="837" width="0.0149%" height="15" fill="rgb(239,52,14)" fg:x="40992" fg:w="41"/><text x="15.1377%" y="847.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child_edge (64 samples, 0.02%)</title><rect x="14.9233%" y="837" width="0.0232%" height="15" fill="rgb(208,227,44)" fg:x="41090" fg:w="64"/><text x="15.1733%" y="847.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (64 samples, 0.02%)</title><rect x="14.9233%" y="821" width="0.0232%" height="15" fill="rgb(246,18,19)" fg:x="41090" fg:w="64"/><text x="15.1733%" y="831.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (34 samples, 0.01%)</title><rect x="14.9342%" y="805" width="0.0123%" height="15" fill="rgb(235,228,25)" fg:x="41120" fg:w="34"/><text x="15.1842%" y="815.50"></text></g><g><title>cfree (30 samples, 0.01%)</title><rect x="14.9357%" y="789" width="0.0109%" height="15" fill="rgb(240,156,20)" fg:x="41124" fg:w="30"/><text x="15.1857%" y="799.50"></text></g><g><title>core::intrinsics::copy (60 samples, 0.02%)</title><rect x="14.9538%" y="805" width="0.0218%" height="15" fill="rgb(224,8,20)" fg:x="41174" fg:w="60"/><text x="15.2038%" y="815.50"></text></g><g><title>[libc.so.6] (54 samples, 0.02%)</title><rect x="14.9560%" y="789" width="0.0196%" height="15" fill="rgb(214,12,52)" fg:x="41180" fg:w="54"/><text x="15.2060%" y="799.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (82 samples, 0.03%)</title><rect x="14.9531%" y="837" width="0.0298%" height="15" fill="rgb(211,220,47)" fg:x="41172" fg:w="82"/><text x="15.2031%" y="847.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (82 samples, 0.03%)</title><rect x="14.9531%" y="821" width="0.0298%" height="15" fill="rgb(250,173,5)" fg:x="41172" fg:w="82"/><text x="15.2031%" y="831.50"></text></g><g><title>async_std::task::builder::Builder::blocking (843 samples, 0.31%)</title><rect x="14.6785%" y="1237" width="0.3062%" height="15" fill="rgb(250,125,52)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (843 samples, 0.31%)</title><rect x="14.6785%" y="1221" width="0.3062%" height="15" fill="rgb(209,133,18)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (843 samples, 0.31%)</title><rect x="14.6785%" y="1205" width="0.3062%" height="15" fill="rgb(216,173,22)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (843 samples, 0.31%)</title><rect x="14.6785%" y="1189" width="0.3062%" height="15" fill="rgb(205,3,22)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1199.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (843 samples, 0.31%)</title><rect x="14.6785%" y="1173" width="0.3062%" height="15" fill="rgb(248,22,20)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (843 samples, 0.31%)</title><rect x="14.6785%" y="1157" width="0.3062%" height="15" fill="rgb(233,6,29)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (843 samples, 0.31%)</title><rect x="14.6785%" y="1141" width="0.3062%" height="15" fill="rgb(240,22,54)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (843 samples, 0.31%)</title><rect x="14.6785%" y="1125" width="0.3062%" height="15" fill="rgb(231,133,32)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (843 samples, 0.31%)</title><rect x="14.6785%" y="1109" width="0.3062%" height="15" fill="rgb(248,193,4)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1119.50"></text></g><g><title>async_global_executor::executor::block_on (843 samples, 0.31%)</title><rect x="14.6785%" y="1093" width="0.3062%" height="15" fill="rgb(211,178,46)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (843 samples, 0.31%)</title><rect x="14.6785%" y="1077" width="0.3062%" height="15" fill="rgb(224,5,42)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (843 samples, 0.31%)</title><rect x="14.6785%" y="1061" width="0.3062%" height="15" fill="rgb(239,176,25)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (843 samples, 0.31%)</title><rect x="14.6785%" y="1045" width="0.3062%" height="15" fill="rgb(245,187,50)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1055.50"></text></g><g><title>async_global_executor::reactor::block_on (843 samples, 0.31%)</title><rect x="14.6785%" y="1029" width="0.3062%" height="15" fill="rgb(248,24,15)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1039.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (843 samples, 0.31%)</title><rect x="14.6785%" y="1013" width="0.3062%" height="15" fill="rgb(205,166,13)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1023.50"></text></g><g><title>async_io::driver::block_on (843 samples, 0.31%)</title><rect x="14.6785%" y="997" width="0.3062%" height="15" fill="rgb(208,114,23)" fg:x="40416" fg:w="843"/><text x="14.9285%" y="1007.50"></text></g><g><title>async_io::reactor::ReactorLock::react (732 samples, 0.27%)</title><rect x="14.7188%" y="981" width="0.2659%" height="15" fill="rgb(239,127,18)" fg:x="40527" fg:w="732"/><text x="14.9688%" y="991.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (732 samples, 0.27%)</title><rect x="14.7188%" y="965" width="0.2659%" height="15" fill="rgb(219,154,28)" fg:x="40527" fg:w="732"/><text x="14.9688%" y="975.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (732 samples, 0.27%)</title><rect x="14.7188%" y="949" width="0.2659%" height="15" fill="rgb(225,157,23)" fg:x="40527" fg:w="732"/><text x="14.9688%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (267 samples, 0.10%)</title><rect x="14.8877%" y="933" width="0.0970%" height="15" fill="rgb(219,8,6)" fg:x="40992" fg:w="267"/><text x="15.1377%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (267 samples, 0.10%)</title><rect x="14.8877%" y="917" width="0.0970%" height="15" fill="rgb(212,47,6)" fg:x="40992" fg:w="267"/><text x="15.1377%" y="927.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (267 samples, 0.10%)</title><rect x="14.8877%" y="901" width="0.0970%" height="15" fill="rgb(224,190,4)" fg:x="40992" fg:w="267"/><text x="15.1377%" y="911.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (267 samples, 0.10%)</title><rect x="14.8877%" y="885" width="0.0970%" height="15" fill="rgb(239,183,29)" fg:x="40992" fg:w="267"/><text x="15.1377%" y="895.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (267 samples, 0.10%)</title><rect x="14.8877%" y="869" width="0.0970%" height="15" fill="rgb(213,57,7)" fg:x="40992" fg:w="267"/><text x="15.1377%" y="879.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (226 samples, 0.08%)</title><rect x="14.9026%" y="853" width="0.0821%" height="15" fill="rgb(216,148,1)" fg:x="41033" fg:w="226"/><text x="15.1526%" y="863.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (34 samples, 0.01%)</title><rect x="15.0014%" y="1173" width="0.0123%" height="15" fill="rgb(236,182,29)" fg:x="41305" fg:w="34"/><text x="15.2514%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (38 samples, 0.01%)</title><rect x="15.0003%" y="1189" width="0.0138%" height="15" fill="rgb(244,120,48)" fg:x="41302" fg:w="38"/><text x="15.2503%" y="1199.50"></text></g><g><title>[libc.so.6] (93 samples, 0.03%)</title><rect x="15.0170%" y="1173" width="0.0338%" height="15" fill="rgb(206,71,34)" fg:x="41348" fg:w="93"/><text x="15.2670%" y="1183.50"></text></g><g><title>[libc.so.6] (54 samples, 0.02%)</title><rect x="15.0508%" y="1157" width="0.0196%" height="15" fill="rgb(242,32,6)" fg:x="41441" fg:w="54"/><text x="15.3008%" y="1167.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="15.1913%" y="1045" width="0.0192%" height="15" fill="rgb(241,35,3)" fg:x="41828" fg:w="53"/><text x="15.4413%" y="1055.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="15.1921%" y="1029" width="0.0185%" height="15" fill="rgb(222,62,19)" fg:x="41830" fg:w="51"/><text x="15.4421%" y="1039.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="15.1924%" y="1013" width="0.0182%" height="15" fill="rgb(223,110,41)" fg:x="41831" fg:w="50"/><text x="15.4424%" y="1023.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="15.1928%" y="997" width="0.0178%" height="15" fill="rgb(208,224,4)" fg:x="41832" fg:w="49"/><text x="15.4428%" y="1007.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="15.1957%" y="981" width="0.0149%" height="15" fill="rgb(241,137,19)" fg:x="41840" fg:w="41"/><text x="15.4457%" y="991.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="15.2001%" y="965" width="0.0105%" height="15" fill="rgb(244,24,17)" fg:x="41852" fg:w="29"/><text x="15.4501%" y="975.50"></text></g><g><title>[libc.so.6] (345 samples, 0.13%)</title><rect x="15.0991%" y="1061" width="0.1253%" height="15" fill="rgb(245,178,49)" fg:x="41574" fg:w="345"/><text x="15.3491%" y="1071.50"></text></g><g><title>__mprotect (38 samples, 0.01%)</title><rect x="15.2106%" y="1045" width="0.0138%" height="15" fill="rgb(219,160,38)" fg:x="41881" fg:w="38"/><text x="15.4606%" y="1055.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="15.2106%" y="1029" width="0.0138%" height="15" fill="rgb(228,137,14)" fg:x="41881" fg:w="38"/><text x="15.4606%" y="1039.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="15.2113%" y="1013" width="0.0131%" height="15" fill="rgb(237,134,11)" fg:x="41883" fg:w="36"/><text x="15.4613%" y="1023.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="15.2113%" y="997" width="0.0131%" height="15" fill="rgb(211,126,44)" fg:x="41883" fg:w="36"/><text x="15.4613%" y="1007.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="15.2113%" y="981" width="0.0131%" height="15" fill="rgb(226,171,33)" fg:x="41883" fg:w="36"/><text x="15.4613%" y="991.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="15.2131%" y="965" width="0.0113%" height="15" fill="rgb(253,99,13)" fg:x="41888" fg:w="31"/><text x="15.4631%" y="975.50"></text></g><g><title>[libc.so.6] (389 samples, 0.14%)</title><rect x="15.0864%" y="1077" width="0.1413%" height="15" fill="rgb(244,48,7)" fg:x="41539" fg:w="389"/><text x="15.3364%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (489 samples, 0.18%)</title><rect x="15.0508%" y="1173" width="0.1776%" height="15" fill="rgb(244,217,54)" fg:x="41441" fg:w="489"/><text x="15.3008%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (435 samples, 0.16%)</title><rect x="15.0704%" y="1157" width="0.1580%" height="15" fill="rgb(224,15,18)" fg:x="41495" fg:w="435"/><text x="15.3204%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (435 samples, 0.16%)</title><rect x="15.0704%" y="1141" width="0.1580%" height="15" fill="rgb(244,99,12)" fg:x="41495" fg:w="435"/><text x="15.3204%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (435 samples, 0.16%)</title><rect x="15.0704%" y="1125" width="0.1580%" height="15" fill="rgb(233,226,8)" fg:x="41495" fg:w="435"/><text x="15.3204%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (433 samples, 0.16%)</title><rect x="15.0711%" y="1109" width="0.1573%" height="15" fill="rgb(229,211,3)" fg:x="41497" fg:w="433"/><text x="15.3211%" y="1119.50"></text></g><g><title>malloc (424 samples, 0.15%)</title><rect x="15.0744%" y="1093" width="0.1540%" height="15" fill="rgb(216,140,21)" fg:x="41506" fg:w="424"/><text x="15.3244%" y="1103.50"></text></g><g><title>async_task::runnable::spawn_unchecked (621 samples, 0.23%)</title><rect x="15.0159%" y="1189" width="0.2255%" height="15" fill="rgb(234,122,30)" fg:x="41345" fg:w="621"/><text x="15.2659%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (36 samples, 0.01%)</title><rect x="15.2284%" y="1173" width="0.0131%" height="15" fill="rgb(236,25,46)" fg:x="41930" fg:w="36"/><text x="15.4784%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.01%)</title><rect x="15.2284%" y="1157" width="0.0131%" height="15" fill="rgb(217,52,54)" fg:x="41930" fg:w="36"/><text x="15.4784%" y="1167.50"></text></g><g><title>malloc (32 samples, 0.01%)</title><rect x="15.2298%" y="1141" width="0.0116%" height="15" fill="rgb(222,29,26)" fg:x="41934" fg:w="32"/><text x="15.4798%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (73 samples, 0.03%)</title><rect x="15.2415%" y="1189" width="0.0265%" height="15" fill="rgb(216,177,29)" fg:x="41966" fg:w="73"/><text x="15.4915%" y="1199.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (73 samples, 0.03%)</title><rect x="15.2415%" y="1173" width="0.0265%" height="15" fill="rgb(247,136,51)" fg:x="41966" fg:w="73"/><text x="15.4915%" y="1183.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (73 samples, 0.03%)</title><rect x="15.2415%" y="1157" width="0.0265%" height="15" fill="rgb(231,47,47)" fg:x="41966" fg:w="73"/><text x="15.4915%" y="1167.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (73 samples, 0.03%)</title><rect x="15.2415%" y="1141" width="0.0265%" height="15" fill="rgb(211,192,36)" fg:x="41966" fg:w="73"/><text x="15.4915%" y="1151.50"></text></g><g><title>syscall (70 samples, 0.03%)</title><rect x="15.2426%" y="1125" width="0.0254%" height="15" fill="rgb(229,156,32)" fg:x="41969" fg:w="70"/><text x="15.4926%" y="1135.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="15.2426%" y="1109" width="0.0254%" height="15" fill="rgb(248,213,20)" fg:x="41969" fg:w="70"/><text x="15.4926%" y="1119.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="15.2426%" y="1093" width="0.0254%" height="15" fill="rgb(217,64,7)" fg:x="41969" fg:w="70"/><text x="15.4926%" y="1103.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="15.2426%" y="1077" width="0.0254%" height="15" fill="rgb(232,142,8)" fg:x="41969" fg:w="70"/><text x="15.4926%" y="1087.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="15.2436%" y="1061" width="0.0243%" height="15" fill="rgb(224,92,44)" fg:x="41972" fg:w="67"/><text x="15.4936%" y="1071.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="15.2451%" y="1045" width="0.0229%" height="15" fill="rgb(214,169,17)" fg:x="41976" fg:w="63"/><text x="15.4951%" y="1055.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="15.2509%" y="1029" width="0.0171%" height="15" fill="rgb(210,59,37)" fg:x="41992" fg:w="47"/><text x="15.5009%" y="1039.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="15.2556%" y="1013" width="0.0123%" height="15" fill="rgb(214,116,48)" fg:x="42005" fg:w="34"/><text x="15.5056%" y="1023.50"></text></g><g><title>std::sys::unix::futex::futex_wait (45 samples, 0.02%)</title><rect x="15.2760%" y="1125" width="0.0163%" height="15" fill="rgb(244,191,6)" fg:x="42061" fg:w="45"/><text x="15.5260%" y="1135.50"></text></g><g><title>syscall (42 samples, 0.02%)</title><rect x="15.2771%" y="1109" width="0.0153%" height="15" fill="rgb(241,50,52)" fg:x="42064" fg:w="42"/><text x="15.5271%" y="1119.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="15.2771%" y="1093" width="0.0153%" height="15" fill="rgb(236,75,39)" fg:x="42064" fg:w="42"/><text x="15.5271%" y="1103.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="15.2771%" y="1077" width="0.0153%" height="15" fill="rgb(236,99,0)" fg:x="42064" fg:w="42"/><text x="15.5271%" y="1087.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="15.2771%" y="1061" width="0.0153%" height="15" fill="rgb(207,202,15)" fg:x="42064" fg:w="42"/><text x="15.5271%" y="1071.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="15.2781%" y="1045" width="0.0142%" height="15" fill="rgb(233,207,14)" fg:x="42067" fg:w="39"/><text x="15.5281%" y="1055.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="15.2800%" y="1029" width="0.0123%" height="15" fill="rgb(226,27,51)" fg:x="42072" fg:w="34"/><text x="15.5300%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (125 samples, 0.05%)</title><rect x="15.2731%" y="1189" width="0.0454%" height="15" fill="rgb(206,104,42)" fg:x="42053" fg:w="125"/><text x="15.5231%" y="1199.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (123 samples, 0.04%)</title><rect x="15.2738%" y="1173" width="0.0447%" height="15" fill="rgb(212,225,4)" fg:x="42055" fg:w="123"/><text x="15.5238%" y="1183.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (123 samples, 0.04%)</title><rect x="15.2738%" y="1157" width="0.0447%" height="15" fill="rgb(233,96,42)" fg:x="42055" fg:w="123"/><text x="15.5238%" y="1167.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (123 samples, 0.04%)</title><rect x="15.2738%" y="1141" width="0.0447%" height="15" fill="rgb(229,21,32)" fg:x="42055" fg:w="123"/><text x="15.5238%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (72 samples, 0.03%)</title><rect x="15.2923%" y="1125" width="0.0261%" height="15" fill="rgb(226,216,24)" fg:x="42106" fg:w="72"/><text x="15.5423%" y="1135.50"></text></g><g><title>async_std::task::builder::Builder::spawn (920 samples, 0.33%)</title><rect x="14.9847%" y="1237" width="0.3341%" height="15" fill="rgb(221,163,17)" fg:x="41259" fg:w="920"/><text x="15.2347%" y="1247.50"></text></g><g><title>async_global_executor::executor::spawn (920 samples, 0.33%)</title><rect x="14.9847%" y="1221" width="0.3341%" height="15" fill="rgb(216,216,42)" fg:x="41259" fg:w="920"/><text x="15.2347%" y="1231.50"></text></g><g><title>async_executor::Executor::spawn (920 samples, 0.33%)</title><rect x="14.9847%" y="1205" width="0.3341%" height="15" fill="rgb(240,118,7)" fg:x="41259" fg:w="920"/><text x="15.2347%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.02%)</title><rect x="15.3264%" y="1173" width="0.0178%" height="15" fill="rgb(221,67,37)" fg:x="42200" fg:w="49"/><text x="15.5764%" y="1183.50"></text></g><g><title>[libc.so.6] (468 samples, 0.17%)</title><rect x="15.3442%" y="1173" width="0.1700%" height="15" fill="rgb(241,32,44)" fg:x="42249" fg:w="468"/><text x="15.5942%" y="1183.50"></text></g><g><title>async_executor::Executor::state (38 samples, 0.01%)</title><rect x="15.5313%" y="1173" width="0.0138%" height="15" fill="rgb(235,204,43)" fg:x="42764" fg:w="38"/><text x="15.7813%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (47 samples, 0.02%)</title><rect x="15.5451%" y="1173" width="0.0171%" height="15" fill="rgb(213,116,10)" fg:x="42802" fg:w="47"/><text x="15.7951%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (43 samples, 0.02%)</title><rect x="15.5981%" y="1109" width="0.0156%" height="15" fill="rgb(239,15,48)" fg:x="42948" fg:w="43"/><text x="15.8481%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (43 samples, 0.02%)</title><rect x="15.5981%" y="1093" width="0.0156%" height="15" fill="rgb(207,123,36)" fg:x="42948" fg:w="43"/><text x="15.8481%" y="1103.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (229 samples, 0.08%)</title><rect x="15.5691%" y="1157" width="0.0832%" height="15" fill="rgb(209,103,30)" fg:x="42868" fg:w="229"/><text x="15.8191%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (212 samples, 0.08%)</title><rect x="15.5752%" y="1141" width="0.0770%" height="15" fill="rgb(238,100,19)" fg:x="42885" fg:w="212"/><text x="15.8252%" y="1151.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (200 samples, 0.07%)</title><rect x="15.5796%" y="1125" width="0.0726%" height="15" fill="rgb(244,30,14)" fg:x="42897" fg:w="200"/><text x="15.8296%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (103 samples, 0.04%)</title><rect x="15.6148%" y="1109" width="0.0374%" height="15" fill="rgb(249,174,6)" fg:x="42994" fg:w="103"/><text x="15.8648%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_or (103 samples, 0.04%)</title><rect x="15.6148%" y="1093" width="0.0374%" height="15" fill="rgb(235,213,41)" fg:x="42994" fg:w="103"/><text x="15.8648%" y="1103.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (253 samples, 0.09%)</title><rect x="15.5629%" y="1173" width="0.0919%" height="15" fill="rgb(213,118,6)" fg:x="42851" fg:w="253"/><text x="15.8129%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (569 samples, 0.21%)</title><rect x="15.6671%" y="1173" width="0.2067%" height="15" fill="rgb(235,44,51)" fg:x="43138" fg:w="569"/><text x="15.9171%" y="1183.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (569 samples, 0.21%)</title><rect x="15.6671%" y="1157" width="0.2067%" height="15" fill="rgb(217,9,53)" fg:x="43138" fg:w="569"/><text x="15.9171%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (569 samples, 0.21%)</title><rect x="15.6671%" y="1141" width="0.2067%" height="15" fill="rgb(237,172,34)" fg:x="43138" fg:w="569"/><text x="15.9171%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (569 samples, 0.21%)</title><rect x="15.6671%" y="1125" width="0.2067%" height="15" fill="rgb(206,206,11)" fg:x="43138" fg:w="569"/><text x="15.9171%" y="1135.50"></text></g><g><title>syscall (556 samples, 0.20%)</title><rect x="15.6718%" y="1109" width="0.2019%" height="15" fill="rgb(214,149,29)" fg:x="43151" fg:w="556"/><text x="15.9218%" y="1119.50"></text></g><g><title>[unknown] (547 samples, 0.20%)</title><rect x="15.6751%" y="1093" width="0.1987%" height="15" fill="rgb(208,123,3)" fg:x="43160" fg:w="547"/><text x="15.9251%" y="1103.50"></text></g><g><title>[unknown] (543 samples, 0.20%)</title><rect x="15.6766%" y="1077" width="0.1972%" height="15" fill="rgb(229,126,4)" fg:x="43164" fg:w="543"/><text x="15.9266%" y="1087.50"></text></g><g><title>[unknown] (541 samples, 0.20%)</title><rect x="15.6773%" y="1061" width="0.1965%" height="15" fill="rgb(222,92,36)" fg:x="43166" fg:w="541"/><text x="15.9273%" y="1071.50"></text></g><g><title>[unknown] (526 samples, 0.19%)</title><rect x="15.6827%" y="1045" width="0.1910%" height="15" fill="rgb(216,39,41)" fg:x="43181" fg:w="526"/><text x="15.9327%" y="1055.50"></text></g><g><title>[unknown] (488 samples, 0.18%)</title><rect x="15.6965%" y="1029" width="0.1772%" height="15" fill="rgb(253,127,28)" fg:x="43219" fg:w="488"/><text x="15.9465%" y="1039.50"></text></g><g><title>[unknown] (346 samples, 0.13%)</title><rect x="15.7481%" y="1013" width="0.1257%" height="15" fill="rgb(249,152,51)" fg:x="43361" fg:w="346"/><text x="15.9981%" y="1023.50"></text></g><g><title>[unknown] (220 samples, 0.08%)</title><rect x="15.7939%" y="997" width="0.0799%" height="15" fill="rgb(209,123,42)" fg:x="43487" fg:w="220"/><text x="16.0439%" y="1007.50"></text></g><g><title>[unknown] (177 samples, 0.06%)</title><rect x="15.8095%" y="981" width="0.0643%" height="15" fill="rgb(241,118,22)" fg:x="43530" fg:w="177"/><text x="16.0595%" y="991.50"></text></g><g><title>[unknown] (111 samples, 0.04%)</title><rect x="15.8335%" y="965" width="0.0403%" height="15" fill="rgb(208,25,7)" fg:x="43596" fg:w="111"/><text x="16.0835%" y="975.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (122 samples, 0.04%)</title><rect x="15.8738%" y="1173" width="0.0443%" height="15" fill="rgb(243,144,39)" fg:x="43707" fg:w="122"/><text x="16.1238%" y="1183.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (119 samples, 0.04%)</title><rect x="15.8749%" y="1157" width="0.0432%" height="15" fill="rgb(250,50,5)" fg:x="43710" fg:w="119"/><text x="16.1249%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (33 samples, 0.01%)</title><rect x="15.9061%" y="1141" width="0.0120%" height="15" fill="rgb(207,67,11)" fg:x="43796" fg:w="33"/><text x="16.1561%" y="1151.50"></text></g><g><title>core::ptr::write (30 samples, 0.01%)</title><rect x="15.9072%" y="1125" width="0.0109%" height="15" fill="rgb(245,204,40)" fg:x="43799" fg:w="30"/><text x="16.1572%" y="1135.50"></text></g><g><title>std::sys::unix::futex::futex_wait (329 samples, 0.12%)</title><rect x="15.9272%" y="1109" width="0.1195%" height="15" fill="rgb(238,228,24)" fg:x="43854" fg:w="329"/><text x="16.1772%" y="1119.50"></text></g><g><title>syscall (308 samples, 0.11%)</title><rect x="15.9348%" y="1093" width="0.1119%" height="15" fill="rgb(217,116,22)" fg:x="43875" fg:w="308"/><text x="16.1848%" y="1103.50"></text></g><g><title>[unknown] (307 samples, 0.11%)</title><rect x="15.9351%" y="1077" width="0.1115%" height="15" fill="rgb(234,98,12)" fg:x="43876" fg:w="307"/><text x="16.1851%" y="1087.50"></text></g><g><title>[unknown] (306 samples, 0.11%)</title><rect x="15.9355%" y="1061" width="0.1111%" height="15" fill="rgb(242,170,50)" fg:x="43877" fg:w="306"/><text x="16.1855%" y="1071.50"></text></g><g><title>[unknown] (305 samples, 0.11%)</title><rect x="15.9359%" y="1045" width="0.1108%" height="15" fill="rgb(235,7,5)" fg:x="43878" fg:w="305"/><text x="16.1859%" y="1055.50"></text></g><g><title>[unknown] (296 samples, 0.11%)</title><rect x="15.9391%" y="1029" width="0.1075%" height="15" fill="rgb(241,114,28)" fg:x="43887" fg:w="296"/><text x="16.1891%" y="1039.50"></text></g><g><title>[unknown] (284 samples, 0.10%)</title><rect x="15.9435%" y="1013" width="0.1031%" height="15" fill="rgb(246,112,42)" fg:x="43899" fg:w="284"/><text x="16.1935%" y="1023.50"></text></g><g><title>[unknown] (263 samples, 0.10%)</title><rect x="15.9511%" y="997" width="0.0955%" height="15" fill="rgb(248,228,14)" fg:x="43920" fg:w="263"/><text x="16.2011%" y="1007.50"></text></g><g><title>[unknown] (255 samples, 0.09%)</title><rect x="15.9540%" y="981" width="0.0926%" height="15" fill="rgb(208,133,18)" fg:x="43928" fg:w="255"/><text x="16.2040%" y="991.50"></text></g><g><title>[unknown] (219 samples, 0.08%)</title><rect x="15.9671%" y="965" width="0.0795%" height="15" fill="rgb(207,35,49)" fg:x="43964" fg:w="219"/><text x="16.2171%" y="975.50"></text></g><g><title>[unknown] (151 samples, 0.05%)</title><rect x="15.9918%" y="949" width="0.0548%" height="15" fill="rgb(205,68,36)" fg:x="44032" fg:w="151"/><text x="16.2418%" y="959.50"></text></g><g><title>[unknown] (100 samples, 0.04%)</title><rect x="16.0103%" y="933" width="0.0363%" height="15" fill="rgb(245,62,40)" fg:x="44083" fg:w="100"/><text x="16.2603%" y="943.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="16.0230%" y="917" width="0.0236%" height="15" fill="rgb(228,27,24)" fg:x="44118" fg:w="65"/><text x="16.2730%" y="927.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="16.0347%" y="901" width="0.0120%" height="15" fill="rgb(253,19,12)" fg:x="44150" fg:w="33"/><text x="16.2847%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (802 samples, 0.29%)</title><rect x="15.9181%" y="1173" width="0.2913%" height="15" fill="rgb(232,28,20)" fg:x="43829" fg:w="802"/><text x="16.1681%" y="1183.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (796 samples, 0.29%)</title><rect x="15.9203%" y="1157" width="0.2891%" height="15" fill="rgb(218,35,51)" fg:x="43835" fg:w="796"/><text x="16.1703%" y="1167.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (796 samples, 0.29%)</title><rect x="15.9203%" y="1141" width="0.2891%" height="15" fill="rgb(212,90,40)" fg:x="43835" fg:w="796"/><text x="16.1703%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (779 samples, 0.28%)</title><rect x="15.9264%" y="1125" width="0.2829%" height="15" fill="rgb(220,172,12)" fg:x="43852" fg:w="779"/><text x="16.1764%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (448 samples, 0.16%)</title><rect x="16.0466%" y="1109" width="0.1627%" height="15" fill="rgb(226,159,20)" fg:x="44183" fg:w="448"/><text x="16.2966%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (65 samples, 0.02%)</title><rect x="16.1857%" y="1093" width="0.0236%" height="15" fill="rgb(234,205,16)" fg:x="44566" fg:w="65"/><text x="16.4357%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (65 samples, 0.02%)</title><rect x="16.1857%" y="1077" width="0.0236%" height="15" fill="rgb(207,9,39)" fg:x="44566" fg:w="65"/><text x="16.4357%" y="1087.50"></text></g><g><title>async_std::task::spawn::spawn (2,463 samples, 0.89%)</title><rect x="15.3188%" y="1237" width="0.8945%" height="15" fill="rgb(249,143,15)" fg:x="42179" fg:w="2463"/><text x="15.5688%" y="1247.50"></text></g><g><title>async_std::task::builder::Builder::spawn (2,463 samples, 0.89%)</title><rect x="15.3188%" y="1221" width="0.8945%" height="15" fill="rgb(253,133,29)" fg:x="42179" fg:w="2463"/><text x="15.5688%" y="1231.50"></text></g><g><title>async_global_executor::executor::spawn (2,463 samples, 0.89%)</title><rect x="15.3188%" y="1205" width="0.8945%" height="15" fill="rgb(221,187,0)" fg:x="42179" fg:w="2463"/><text x="15.5688%" y="1215.50"></text></g><g><title>async_executor::Executor::spawn (2,463 samples, 0.89%)</title><rect x="15.3188%" y="1189" width="0.8945%" height="15" fill="rgb(205,204,26)" fg:x="42179" fg:w="2463"/><text x="15.5688%" y="1199.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (152 samples, 0.06%)</title><rect x="16.2370%" y="773" width="0.0552%" height="15" fill="rgb(224,68,54)" fg:x="44707" fg:w="152"/><text x="16.4870%" y="783.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (72 samples, 0.03%)</title><rect x="16.2660%" y="757" width="0.0261%" height="15" fill="rgb(209,67,4)" fg:x="44787" fg:w="72"/><text x="16.5160%" y="767.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (34 samples, 0.01%)</title><rect x="16.2962%" y="773" width="0.0123%" height="15" fill="rgb(228,229,18)" fg:x="44870" fg:w="34"/><text x="16.5462%" y="783.50"></text></g><g><title>rsa::internals::decrypt (258 samples, 0.09%)</title><rect x="16.2152%" y="837" width="0.0937%" height="15" fill="rgb(231,89,13)" fg:x="44647" fg:w="258"/><text x="16.4652%" y="847.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (257 samples, 0.09%)</title><rect x="16.2155%" y="821" width="0.0933%" height="15" fill="rgb(210,182,18)" fg:x="44648" fg:w="257"/><text x="16.4655%" y="831.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (257 samples, 0.09%)</title><rect x="16.2155%" y="805" width="0.0933%" height="15" fill="rgb(240,105,2)" fg:x="44648" fg:w="257"/><text x="16.4655%" y="815.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (257 samples, 0.09%)</title><rect x="16.2155%" y="789" width="0.0933%" height="15" fill="rgb(207,170,50)" fg:x="44648" fg:w="257"/><text x="16.4655%" y="799.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (87 samples, 0.03%)</title><rect x="16.3183%" y="773" width="0.0316%" height="15" fill="rgb(232,133,24)" fg:x="44931" fg:w="87"/><text x="16.5683%" y="783.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (46 samples, 0.02%)</title><rect x="16.3332%" y="757" width="0.0167%" height="15" fill="rgb(235,166,27)" fg:x="44972" fg:w="46"/><text x="16.5832%" y="767.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (126 samples, 0.05%)</title><rect x="16.3089%" y="789" width="0.0458%" height="15" fill="rgb(209,19,13)" fg:x="44905" fg:w="126"/><text x="16.5589%" y="799.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (386 samples, 0.14%)</title><rect x="16.2152%" y="981" width="0.1402%" height="15" fill="rgb(226,79,39)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (386 samples, 0.14%)</title><rect x="16.2152%" y="965" width="0.1402%" height="15" fill="rgb(222,163,10)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (386 samples, 0.14%)</title><rect x="16.2152%" y="949" width="0.1402%" height="15" fill="rgb(214,44,19)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="959.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_open_syn::{{closure}} (386 samples, 0.14%)</title><rect x="16.2152%" y="933" width="0.1402%" height="15" fill="rgb(210,217,13)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="943.50"></text></g><g><title>rsa::key::RsaPrivateKey::decrypt (386 samples, 0.14%)</title><rect x="16.2152%" y="917" width="0.1402%" height="15" fill="rgb(237,61,54)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="927.50"></text></g><g><title>rsa::pkcs1v15::decrypt (386 samples, 0.14%)</title><rect x="16.2152%" y="901" width="0.1402%" height="15" fill="rgb(226,184,24)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="911.50"></text></g><g><title>rsa::pkcs1v15::decrypt_inner (386 samples, 0.14%)</title><rect x="16.2152%" y="885" width="0.1402%" height="15" fill="rgb(223,226,4)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="895.50"></text></g><g><title>&lt;rsa::key::RsaPrivateKey as rsa::raw::DecryptionPrimitive&gt;::raw_decryption_primitive (386 samples, 0.14%)</title><rect x="16.2152%" y="869" width="0.1402%" height="15" fill="rgb(210,26,41)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="879.50"></text></g><g><title>rsa::internals::decrypt_and_check (386 samples, 0.14%)</title><rect x="16.2152%" y="853" width="0.1402%" height="15" fill="rgb(220,221,6)" fg:x="44647" fg:w="386"/><text x="16.4652%" y="863.50"></text></g><g><title>rsa::internals::encrypt (128 samples, 0.05%)</title><rect x="16.3089%" y="837" width="0.0465%" height="15" fill="rgb(225,89,49)" fg:x="44905" fg:w="128"/><text x="16.5589%" y="847.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (128 samples, 0.05%)</title><rect x="16.3089%" y="821" width="0.0465%" height="15" fill="rgb(218,70,45)" fg:x="44905" fg:w="128"/><text x="16.5589%" y="831.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (128 samples, 0.05%)</title><rect x="16.3089%" y="805" width="0.0465%" height="15" fill="rgb(238,166,21)" fg:x="44905" fg:w="128"/><text x="16.5589%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (400 samples, 0.15%)</title><rect x="16.2133%" y="1077" width="0.1453%" height="15" fill="rgb(224,141,44)" fg:x="44642" fg:w="400"/><text x="16.4633%" y="1087.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (399 samples, 0.14%)</title><rect x="16.2137%" y="1061" width="0.1449%" height="15" fill="rgb(230,12,49)" fg:x="44643" fg:w="399"/><text x="16.4637%" y="1071.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (399 samples, 0.14%)</title><rect x="16.2137%" y="1045" width="0.1449%" height="15" fill="rgb(212,174,12)" fg:x="44643" fg:w="399"/><text x="16.4637%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (399 samples, 0.14%)</title><rect x="16.2137%" y="1029" width="0.1449%" height="15" fill="rgb(246,67,9)" fg:x="44643" fg:w="399"/><text x="16.4637%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (399 samples, 0.14%)</title><rect x="16.2137%" y="1013" width="0.1449%" height="15" fill="rgb(239,35,23)" fg:x="44643" fg:w="399"/><text x="16.4637%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (399 samples, 0.14%)</title><rect x="16.2137%" y="997" width="0.1449%" height="15" fill="rgb(211,167,0)" fg:x="44643" fg:w="399"/><text x="16.4637%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (36 samples, 0.01%)</title><rect x="16.3586%" y="1045" width="0.0131%" height="15" fill="rgb(225,119,45)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="16.3586%" y="1029" width="0.0131%" height="15" fill="rgb(210,162,6)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="1039.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (36 samples, 0.01%)</title><rect x="16.3586%" y="1013" width="0.0131%" height="15" fill="rgb(208,118,35)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="16.3586%" y="997" width="0.0131%" height="15" fill="rgb(239,4,53)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="1007.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (36 samples, 0.01%)</title><rect x="16.3586%" y="981" width="0.0131%" height="15" fill="rgb(213,130,21)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="16.3586%" y="965" width="0.0131%" height="15" fill="rgb(235,148,0)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="975.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (36 samples, 0.01%)</title><rect x="16.3586%" y="949" width="0.0131%" height="15" fill="rgb(244,224,18)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="16.3586%" y="933" width="0.0131%" height="15" fill="rgb(211,214,4)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="943.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (36 samples, 0.01%)</title><rect x="16.3586%" y="917" width="0.0131%" height="15" fill="rgb(206,119,25)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="16.3586%" y="901" width="0.0131%" height="15" fill="rgb(243,93,47)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="911.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (36 samples, 0.01%)</title><rect x="16.3586%" y="885" width="0.0131%" height="15" fill="rgb(224,194,6)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="16.3586%" y="869" width="0.0131%" height="15" fill="rgb(243,229,6)" fg:x="45042" fg:w="36"/><text x="16.6086%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.01%)</title><rect x="16.3724%" y="901" width="0.0116%" height="15" fill="rgb(207,23,50)" fg:x="45080" fg:w="32"/><text x="16.6224%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.01%)</title><rect x="16.3717%" y="933" width="0.0127%" height="15" fill="rgb(253,192,32)" fg:x="45078" fg:w="35"/><text x="16.6217%" y="943.50"></text></g><g><title>zenoh_transport::unicast::establishment::open::open_link::{{closure}} (35 samples, 0.01%)</title><rect x="16.3717%" y="917" width="0.0127%" height="15" fill="rgb(213,21,6)" fg:x="45078" fg:w="35"/><text x="16.6217%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (473 samples, 0.17%)</title><rect x="16.2133%" y="1237" width="0.1718%" height="15" fill="rgb(243,151,13)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1247.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (473 samples, 0.17%)</title><rect x="16.2133%" y="1221" width="0.1718%" height="15" fill="rgb(233,165,41)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (473 samples, 0.17%)</title><rect x="16.2133%" y="1205" width="0.1718%" height="15" fill="rgb(246,176,45)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1215.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (473 samples, 0.17%)</title><rect x="16.2133%" y="1189" width="0.1718%" height="15" fill="rgb(217,170,52)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1199.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (473 samples, 0.17%)</title><rect x="16.2133%" y="1173" width="0.1718%" height="15" fill="rgb(214,203,54)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1183.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (473 samples, 0.17%)</title><rect x="16.2133%" y="1157" width="0.1718%" height="15" fill="rgb(248,215,49)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (473 samples, 0.17%)</title><rect x="16.2133%" y="1141" width="0.1718%" height="15" fill="rgb(208,46,10)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (473 samples, 0.17%)</title><rect x="16.2133%" y="1125" width="0.1718%" height="15" fill="rgb(254,5,31)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (473 samples, 0.17%)</title><rect x="16.2133%" y="1109" width="0.1718%" height="15" fill="rgb(222,104,33)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1119.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (473 samples, 0.17%)</title><rect x="16.2133%" y="1093" width="0.1718%" height="15" fill="rgb(248,49,16)" fg:x="44642" fg:w="473"/><text x="16.4633%" y="1103.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (73 samples, 0.03%)</title><rect x="16.3586%" y="1077" width="0.0265%" height="15" fill="rgb(232,198,41)" fg:x="45042" fg:w="73"/><text x="16.6086%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (73 samples, 0.03%)</title><rect x="16.3586%" y="1061" width="0.0265%" height="15" fill="rgb(214,125,3)" fg:x="45042" fg:w="73"/><text x="16.6086%" y="1071.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}}::{{closure}} (37 samples, 0.01%)</title><rect x="16.3717%" y="1045" width="0.0134%" height="15" fill="rgb(229,220,28)" fg:x="45078" fg:w="37"/><text x="16.6217%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.01%)</title><rect x="16.3717%" y="1029" width="0.0134%" height="15" fill="rgb(222,64,37)" fg:x="45078" fg:w="37"/><text x="16.6217%" y="1039.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::peer_connector::{{closure}} (37 samples, 0.01%)</title><rect x="16.3717%" y="1013" width="0.0134%" height="15" fill="rgb(249,184,13)" fg:x="45078" fg:w="37"/><text x="16.6217%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.01%)</title><rect x="16.3717%" y="997" width="0.0134%" height="15" fill="rgb(252,176,6)" fg:x="45078" fg:w="37"/><text x="16.6217%" y="1007.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (37 samples, 0.01%)</title><rect x="16.3717%" y="981" width="0.0134%" height="15" fill="rgb(228,153,7)" fg:x="45078" fg:w="37"/><text x="16.6217%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.01%)</title><rect x="16.3717%" y="965" width="0.0134%" height="15" fill="rgb(242,193,5)" fg:x="45078" fg:w="37"/><text x="16.6217%" y="975.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (37 samples, 0.01%)</title><rect x="16.3717%" y="949" width="0.0134%" height="15" fill="rgb(232,140,9)" fg:x="45078" fg:w="37"/><text x="16.6217%" y="959.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;zenoh_protocol_core::locators::Locator,R&gt;&gt;::read (43 samples, 0.02%)</title><rect x="16.3971%" y="453" width="0.0156%" height="15" fill="rgb(213,222,16)" fg:x="45148" fg:w="43"/><text x="16.6471%" y="463.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (89 samples, 0.03%)</title><rect x="16.3917%" y="485" width="0.0323%" height="15" fill="rgb(222,75,50)" fg:x="45133" fg:w="89"/><text x="16.6417%" y="495.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (89 samples, 0.03%)</title><rect x="16.3917%" y="469" width="0.0323%" height="15" fill="rgb(205,180,2)" fg:x="45133" fg:w="89"/><text x="16.6417%" y="479.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (98 samples, 0.04%)</title><rect x="16.3913%" y="645" width="0.0356%" height="15" fill="rgb(216,34,7)" fg:x="45132" fg:w="98"/><text x="16.6413%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 0.04%)</title><rect x="16.3913%" y="629" width="0.0356%" height="15" fill="rgb(253,16,32)" fg:x="45132" fg:w="98"/><text x="16.6413%" y="639.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (98 samples, 0.04%)</title><rect x="16.3913%" y="613" width="0.0356%" height="15" fill="rgb(208,97,28)" fg:x="45132" fg:w="98"/><text x="16.6413%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 0.04%)</title><rect x="16.3913%" y="597" width="0.0356%" height="15" fill="rgb(225,92,11)" fg:x="45132" fg:w="98"/><text x="16.6413%" y="607.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (98 samples, 0.04%)</title><rect x="16.3913%" y="581" width="0.0356%" height="15" fill="rgb(243,38,12)" fg:x="45132" fg:w="98"/><text x="16.6413%" y="591.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (98 samples, 0.04%)</title><rect x="16.3913%" y="565" width="0.0356%" height="15" fill="rgb(208,139,16)" fg:x="45132" fg:w="98"/><text x="16.6413%" y="575.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (98 samples, 0.04%)</title><rect x="16.3913%" y="549" width="0.0356%" height="15" fill="rgb(227,24,9)" fg:x="45132" fg:w="98"/><text x="16.6413%" y="559.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (98 samples, 0.04%)</title><rect x="16.3913%" y="533" width="0.0356%" height="15" fill="rgb(206,62,11)" fg:x="45132" fg:w="98"/><text x="16.6413%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (97 samples, 0.04%)</title><rect x="16.3917%" y="517" width="0.0352%" height="15" fill="rgb(228,134,27)" fg:x="45133" fg:w="97"/><text x="16.6417%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (97 samples, 0.04%)</title><rect x="16.3917%" y="501" width="0.0352%" height="15" fill="rgb(205,55,33)" fg:x="45133" fg:w="97"/><text x="16.6417%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="16.4280%" y="549" width="0.0192%" height="15" fill="rgb(243,75,43)" fg:x="45233" fg:w="53"/><text x="16.6780%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="16.4280%" y="533" width="0.0192%" height="15" fill="rgb(223,27,42)" fg:x="45233" fg:w="53"/><text x="16.6780%" y="543.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (53 samples, 0.02%)</title><rect x="16.4280%" y="517" width="0.0192%" height="15" fill="rgb(232,189,33)" fg:x="45233" fg:w="53"/><text x="16.6780%" y="527.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (66 samples, 0.02%)</title><rect x="16.4269%" y="565" width="0.0240%" height="15" fill="rgb(210,9,39)" fg:x="45230" fg:w="66"/><text x="16.6769%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (75 samples, 0.03%)</title><rect x="16.4269%" y="581" width="0.0272%" height="15" fill="rgb(242,85,26)" fg:x="45230" fg:w="75"/><text x="16.6769%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (182 samples, 0.07%)</title><rect x="16.3913%" y="661" width="0.0661%" height="15" fill="rgb(248,44,4)" fg:x="45132" fg:w="182"/><text x="16.6413%" y="671.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (84 samples, 0.03%)</title><rect x="16.4269%" y="645" width="0.0305%" height="15" fill="rgb(250,96,46)" fg:x="45230" fg:w="84"/><text x="16.6769%" y="655.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (84 samples, 0.03%)</title><rect x="16.4269%" y="629" width="0.0305%" height="15" fill="rgb(229,116,26)" fg:x="45230" fg:w="84"/><text x="16.6769%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (84 samples, 0.03%)</title><rect x="16.4269%" y="613" width="0.0305%" height="15" fill="rgb(246,94,34)" fg:x="45230" fg:w="84"/><text x="16.6769%" y="623.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (84 samples, 0.03%)</title><rect x="16.4269%" y="597" width="0.0305%" height="15" fill="rgb(251,73,21)" fg:x="45230" fg:w="84"/><text x="16.6769%" y="607.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (108 samples, 0.04%)</title><rect x="16.4574%" y="421" width="0.0392%" height="15" fill="rgb(254,121,25)" fg:x="45314" fg:w="108"/><text x="16.7074%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.04%)</title><rect x="16.4574%" y="405" width="0.0392%" height="15" fill="rgb(215,161,49)" fg:x="45314" fg:w="108"/><text x="16.7074%" y="415.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (108 samples, 0.04%)</title><rect x="16.4574%" y="389" width="0.0392%" height="15" fill="rgb(221,43,13)" fg:x="45314" fg:w="108"/><text x="16.7074%" y="399.50"></text></g><g><title>&lt;async_io::reactor::Writable&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.04%)</title><rect x="16.4574%" y="373" width="0.0392%" height="15" fill="rgb(249,5,37)" fg:x="45314" fg:w="108"/><text x="16.7074%" y="383.50"></text></g><g><title>&lt;async_io::reactor::Ready&lt;H,T&gt; as core::future::future::Future&gt;::poll (108 samples, 0.04%)</title><rect x="16.4574%" y="357" width="0.0392%" height="15" fill="rgb(226,25,44)" fg:x="45314" fg:w="108"/><text x="16.7074%" y="367.50"></text></g><g><title>polling::Poller::modify (108 samples, 0.04%)</title><rect x="16.4574%" y="341" width="0.0392%" height="15" fill="rgb(238,189,16)" fg:x="45314" fg:w="108"/><text x="16.7074%" y="351.50"></text></g><g><title>polling::epoll::Poller::modify (108 samples, 0.04%)</title><rect x="16.4574%" y="325" width="0.0392%" height="15" fill="rgb(251,186,8)" fg:x="45314" fg:w="108"/><text x="16.7074%" y="335.50"></text></g><g><title>polling::epoll::Poller::ctl (106 samples, 0.04%)</title><rect x="16.4581%" y="309" width="0.0385%" height="15" fill="rgb(254,34,31)" fg:x="45316" fg:w="106"/><text x="16.7081%" y="319.50"></text></g><g><title>epoll_ctl (103 samples, 0.04%)</title><rect x="16.4592%" y="293" width="0.0374%" height="15" fill="rgb(225,215,27)" fg:x="45319" fg:w="103"/><text x="16.7092%" y="303.50"></text></g><g><title>[unknown] (101 samples, 0.04%)</title><rect x="16.4600%" y="277" width="0.0367%" height="15" fill="rgb(221,192,48)" fg:x="45321" fg:w="101"/><text x="16.7100%" y="287.50"></text></g><g><title>[unknown] (99 samples, 0.04%)</title><rect x="16.4607%" y="261" width="0.0360%" height="15" fill="rgb(219,137,20)" fg:x="45323" fg:w="99"/><text x="16.7107%" y="271.50"></text></g><g><title>[unknown] (97 samples, 0.04%)</title><rect x="16.4614%" y="245" width="0.0352%" height="15" fill="rgb(219,84,11)" fg:x="45325" fg:w="97"/><text x="16.7114%" y="255.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="16.4629%" y="229" width="0.0338%" height="15" fill="rgb(224,10,23)" fg:x="45329" fg:w="93"/><text x="16.7129%" y="239.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="16.4741%" y="213" width="0.0225%" height="15" fill="rgb(248,22,39)" fg:x="45360" fg:w="62"/><text x="16.7241%" y="223.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (116 samples, 0.04%)</title><rect x="16.4574%" y="437" width="0.0421%" height="15" fill="rgb(212,154,20)" fg:x="45314" fg:w="116"/><text x="16.7074%" y="447.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (305 samples, 0.11%)</title><rect x="16.3913%" y="757" width="0.1108%" height="15" fill="rgb(236,199,50)" fg:x="45132" fg:w="305"/><text x="16.6413%" y="767.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (305 samples, 0.11%)</title><rect x="16.3913%" y="741" width="0.1108%" height="15" fill="rgb(211,9,17)" fg:x="45132" fg:w="305"/><text x="16.6413%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (305 samples, 0.11%)</title><rect x="16.3913%" y="725" width="0.1108%" height="15" fill="rgb(243,216,36)" fg:x="45132" fg:w="305"/><text x="16.6413%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (305 samples, 0.11%)</title><rect x="16.3913%" y="709" width="0.1108%" height="15" fill="rgb(250,2,10)" fg:x="45132" fg:w="305"/><text x="16.6413%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (305 samples, 0.11%)</title><rect x="16.3913%" y="693" width="0.1108%" height="15" fill="rgb(226,50,48)" fg:x="45132" fg:w="305"/><text x="16.6413%" y="703.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (305 samples, 0.11%)</title><rect x="16.3913%" y="677" width="0.1108%" height="15" fill="rgb(243,81,16)" fg:x="45132" fg:w="305"/><text x="16.6413%" y="687.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="16.4574%" y="661" width="0.0447%" height="15" fill="rgb(250,14,2)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="16.4574%" y="645" width="0.0447%" height="15" fill="rgb(233,135,29)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="655.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (123 samples, 0.04%)</title><rect x="16.4574%" y="629" width="0.0447%" height="15" fill="rgb(224,64,43)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="16.4574%" y="613" width="0.0447%" height="15" fill="rgb(238,84,13)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="623.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (123 samples, 0.04%)</title><rect x="16.4574%" y="597" width="0.0447%" height="15" fill="rgb(253,48,26)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="16.4574%" y="581" width="0.0447%" height="15" fill="rgb(205,223,31)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="591.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (123 samples, 0.04%)</title><rect x="16.4574%" y="565" width="0.0447%" height="15" fill="rgb(221,41,32)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="16.4574%" y="549" width="0.0447%" height="15" fill="rgb(213,158,31)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="559.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (123 samples, 0.04%)</title><rect x="16.4574%" y="533" width="0.0447%" height="15" fill="rgb(245,126,43)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="16.4574%" y="517" width="0.0447%" height="15" fill="rgb(227,7,22)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="527.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (123 samples, 0.04%)</title><rect x="16.4574%" y="501" width="0.0447%" height="15" fill="rgb(252,90,44)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="16.4574%" y="485" width="0.0447%" height="15" fill="rgb(253,91,0)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (123 samples, 0.04%)</title><rect x="16.4574%" y="469" width="0.0447%" height="15" fill="rgb(252,175,49)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="479.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (123 samples, 0.04%)</title><rect x="16.4574%" y="453" width="0.0447%" height="15" fill="rgb(246,150,1)" fg:x="45314" fg:w="123"/><text x="16.7074%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (306 samples, 0.11%)</title><rect x="16.3913%" y="1109" width="0.1111%" height="15" fill="rgb(241,192,25)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="1119.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (306 samples, 0.11%)</title><rect x="16.3913%" y="1093" width="0.1111%" height="15" fill="rgb(239,187,11)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (306 samples, 0.11%)</title><rect x="16.3913%" y="1077" width="0.1111%" height="15" fill="rgb(218,202,51)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="1087.50"></text></g><g><title>std::panicking::try (306 samples, 0.11%)</title><rect x="16.3913%" y="1061" width="0.1111%" height="15" fill="rgb(225,176,8)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (306 samples, 0.11%)</title><rect x="16.3913%" y="1045" width="0.1111%" height="15" fill="rgb(219,122,41)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="1055.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (306 samples, 0.11%)</title><rect x="16.3913%" y="1029" width="0.1111%" height="15" fill="rgb(248,140,20)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (306 samples, 0.11%)</title><rect x="16.3913%" y="1013" width="0.1111%" height="15" fill="rgb(245,41,37)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (306 samples, 0.11%)</title><rect x="16.3913%" y="997" width="0.1111%" height="15" fill="rgb(235,82,39)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="1007.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (306 samples, 0.11%)</title><rect x="16.3913%" y="981" width="0.1111%" height="15" fill="rgb(230,108,42)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="991.50"></text></g><g><title>async_global_executor::reactor::block_on (306 samples, 0.11%)</title><rect x="16.3913%" y="965" width="0.1111%" height="15" fill="rgb(215,150,50)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="975.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (306 samples, 0.11%)</title><rect x="16.3913%" y="949" width="0.1111%" height="15" fill="rgb(233,212,5)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="959.50"></text></g><g><title>async_io::driver::block_on (306 samples, 0.11%)</title><rect x="16.3913%" y="933" width="0.1111%" height="15" fill="rgb(245,80,22)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="943.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (306 samples, 0.11%)</title><rect x="16.3913%" y="917" width="0.1111%" height="15" fill="rgb(238,129,16)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (306 samples, 0.11%)</title><rect x="16.3913%" y="901" width="0.1111%" height="15" fill="rgb(240,19,0)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (306 samples, 0.11%)</title><rect x="16.3913%" y="885" width="0.1111%" height="15" fill="rgb(232,42,35)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="895.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (306 samples, 0.11%)</title><rect x="16.3913%" y="869" width="0.1111%" height="15" fill="rgb(223,130,24)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (306 samples, 0.11%)</title><rect x="16.3913%" y="853" width="0.1111%" height="15" fill="rgb(237,16,22)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="863.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (306 samples, 0.11%)</title><rect x="16.3913%" y="837" width="0.1111%" height="15" fill="rgb(248,192,20)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (306 samples, 0.11%)</title><rect x="16.3913%" y="821" width="0.1111%" height="15" fill="rgb(233,167,2)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (306 samples, 0.11%)</title><rect x="16.3913%" y="805" width="0.1111%" height="15" fill="rgb(252,71,44)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (306 samples, 0.11%)</title><rect x="16.3913%" y="789" width="0.1111%" height="15" fill="rgb(238,37,47)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="799.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (306 samples, 0.11%)</title><rect x="16.3913%" y="773" width="0.1111%" height="15" fill="rgb(214,202,54)" fg:x="45132" fg:w="306"/><text x="16.6413%" y="783.50"></text></g><g><title>async_executor::steal (120 samples, 0.04%)</title><rect x="16.5024%" y="453" width="0.0436%" height="15" fill="rgb(254,165,40)" fg:x="45438" fg:w="120"/><text x="16.7524%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (120 samples, 0.04%)</title><rect x="16.5024%" y="437" width="0.0436%" height="15" fill="rgb(246,173,38)" fg:x="45438" fg:w="120"/><text x="16.7524%" y="447.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (120 samples, 0.04%)</title><rect x="16.5024%" y="421" width="0.0436%" height="15" fill="rgb(215,3,27)" fg:x="45438" fg:w="120"/><text x="16.7524%" y="431.50"></text></g><g><title>cfree (120 samples, 0.04%)</title><rect x="16.5024%" y="405" width="0.0436%" height="15" fill="rgb(239,169,51)" fg:x="45438" fg:w="120"/><text x="16.7524%" y="415.50"></text></g><g><title>[libc.so.6] (120 samples, 0.04%)</title><rect x="16.5024%" y="389" width="0.0436%" height="15" fill="rgb(212,5,25)" fg:x="45438" fg:w="120"/><text x="16.7524%" y="399.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (147 samples, 0.05%)</title><rect x="16.5024%" y="469" width="0.0534%" height="15" fill="rgb(243,45,17)" fg:x="45438" fg:w="147"/><text x="16.7524%" y="479.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="16.5024%" y="757" width="0.0563%" height="15" fill="rgb(242,97,9)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="767.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="16.5024%" y="741" width="0.0563%" height="15" fill="rgb(228,71,31)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="751.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (155 samples, 0.06%)</title><rect x="16.5024%" y="725" width="0.0563%" height="15" fill="rgb(252,184,16)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (155 samples, 0.06%)</title><rect x="16.5024%" y="709" width="0.0563%" height="15" fill="rgb(236,169,46)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (155 samples, 0.06%)</title><rect x="16.5024%" y="693" width="0.0563%" height="15" fill="rgb(207,17,47)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (155 samples, 0.06%)</title><rect x="16.5024%" y="677" width="0.0563%" height="15" fill="rgb(206,201,28)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="687.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (155 samples, 0.06%)</title><rect x="16.5024%" y="661" width="0.0563%" height="15" fill="rgb(224,184,23)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="16.5024%" y="645" width="0.0563%" height="15" fill="rgb(208,139,48)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="655.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (155 samples, 0.06%)</title><rect x="16.5024%" y="629" width="0.0563%" height="15" fill="rgb(208,130,10)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="16.5024%" y="613" width="0.0563%" height="15" fill="rgb(211,213,45)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="16.5024%" y="597" width="0.0563%" height="15" fill="rgb(235,100,30)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="607.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (155 samples, 0.06%)</title><rect x="16.5024%" y="581" width="0.0563%" height="15" fill="rgb(206,144,31)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="16.5024%" y="565" width="0.0563%" height="15" fill="rgb(224,200,26)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="575.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (155 samples, 0.06%)</title><rect x="16.5024%" y="549" width="0.0563%" height="15" fill="rgb(247,104,53)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="16.5024%" y="533" width="0.0563%" height="15" fill="rgb(220,14,17)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="543.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (155 samples, 0.06%)</title><rect x="16.5024%" y="517" width="0.0563%" height="15" fill="rgb(230,140,40)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="527.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (155 samples, 0.06%)</title><rect x="16.5024%" y="501" width="0.0563%" height="15" fill="rgb(229,2,41)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="511.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (155 samples, 0.06%)</title><rect x="16.5024%" y="485" width="0.0563%" height="15" fill="rgb(232,89,16)" fg:x="45438" fg:w="155"/><text x="16.7524%" y="495.50"></text></g><g><title>__rdl_alloc (36 samples, 0.01%)</title><rect x="16.5620%" y="645" width="0.0131%" height="15" fill="rgb(247,59,52)" fg:x="45602" fg:w="36"/><text x="16.8120%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (36 samples, 0.01%)</title><rect x="16.5620%" y="629" width="0.0131%" height="15" fill="rgb(226,110,21)" fg:x="45602" fg:w="36"/><text x="16.8120%" y="639.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (36 samples, 0.01%)</title><rect x="16.5620%" y="613" width="0.0131%" height="15" fill="rgb(224,176,43)" fg:x="45602" fg:w="36"/><text x="16.8120%" y="623.50"></text></g><g><title>posix_memalign (36 samples, 0.01%)</title><rect x="16.5620%" y="597" width="0.0131%" height="15" fill="rgb(221,73,6)" fg:x="45602" fg:w="36"/><text x="16.8120%" y="607.50"></text></g><g><title>[libc.so.6] (34 samples, 0.01%)</title><rect x="16.5627%" y="581" width="0.0123%" height="15" fill="rgb(232,78,19)" fg:x="45604" fg:w="34"/><text x="16.8127%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (44 samples, 0.02%)</title><rect x="16.5620%" y="725" width="0.0160%" height="15" fill="rgb(233,112,48)" fg:x="45602" fg:w="44"/><text x="16.8120%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (44 samples, 0.02%)</title><rect x="16.5620%" y="709" width="0.0160%" height="15" fill="rgb(243,131,47)" fg:x="45602" fg:w="44"/><text x="16.8120%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.02%)</title><rect x="16.5620%" y="693" width="0.0160%" height="15" fill="rgb(226,51,1)" fg:x="45602" fg:w="44"/><text x="16.8120%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.02%)</title><rect x="16.5620%" y="677" width="0.0160%" height="15" fill="rgb(247,58,7)" fg:x="45602" fg:w="44"/><text x="16.8120%" y="687.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.02%)</title><rect x="16.5620%" y="661" width="0.0160%" height="15" fill="rgb(209,7,32)" fg:x="45602" fg:w="44"/><text x="16.8120%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (206 samples, 0.07%)</title><rect x="16.5813%" y="709" width="0.0748%" height="15" fill="rgb(209,39,41)" fg:x="45655" fg:w="206"/><text x="16.8313%" y="719.50"></text></g><g><title>core::ptr::write (92 samples, 0.03%)</title><rect x="16.6227%" y="693" width="0.0334%" height="15" fill="rgb(226,182,46)" fg:x="45769" fg:w="92"/><text x="16.8727%" y="703.50"></text></g><g><title>[unknown] (89 samples, 0.03%)</title><rect x="16.6238%" y="677" width="0.0323%" height="15" fill="rgb(230,219,10)" fg:x="45772" fg:w="89"/><text x="16.8738%" y="687.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="16.6241%" y="661" width="0.0320%" height="15" fill="rgb(227,175,30)" fg:x="45773" fg:w="88"/><text x="16.8741%" y="671.50"></text></g><g><title>[unknown] (86 samples, 0.03%)</title><rect x="16.6248%" y="645" width="0.0312%" height="15" fill="rgb(217,2,50)" fg:x="45775" fg:w="86"/><text x="16.8748%" y="655.50"></text></g><g><title>[unknown] (86 samples, 0.03%)</title><rect x="16.6248%" y="629" width="0.0312%" height="15" fill="rgb(229,160,0)" fg:x="45775" fg:w="86"/><text x="16.8748%" y="639.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="16.6325%" y="613" width="0.0236%" height="15" fill="rgb(207,78,37)" fg:x="45796" fg:w="65"/><text x="16.8825%" y="623.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="16.6390%" y="597" width="0.0171%" height="15" fill="rgb(225,57,0)" fg:x="45814" fg:w="47"/><text x="16.8890%" y="607.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="16.6452%" y="581" width="0.0109%" height="15" fill="rgb(232,154,2)" fg:x="45831" fg:w="30"/><text x="16.8952%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (434 samples, 0.16%)</title><rect x="16.5024%" y="821" width="0.1576%" height="15" fill="rgb(241,212,25)" fg:x="45438" fg:w="434"/><text x="16.7524%" y="831.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (434 samples, 0.16%)</title><rect x="16.5024%" y="805" width="0.1576%" height="15" fill="rgb(226,69,20)" fg:x="45438" fg:w="434"/><text x="16.7524%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (434 samples, 0.16%)</title><rect x="16.5024%" y="789" width="0.1576%" height="15" fill="rgb(247,184,54)" fg:x="45438" fg:w="434"/><text x="16.7524%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (434 samples, 0.16%)</title><rect x="16.5024%" y="773" width="0.1576%" height="15" fill="rgb(210,145,0)" fg:x="45438" fg:w="434"/><text x="16.7524%" y="783.50"></text></g><g><title>async_executor::Runner::new (279 samples, 0.10%)</title><rect x="16.5587%" y="757" width="0.1013%" height="15" fill="rgb(253,82,12)" fg:x="45593" fg:w="279"/><text x="16.8087%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (270 samples, 0.10%)</title><rect x="16.5620%" y="741" width="0.0981%" height="15" fill="rgb(245,42,11)" fg:x="45602" fg:w="270"/><text x="16.8120%" y="751.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (226 samples, 0.08%)</title><rect x="16.5780%" y="725" width="0.0821%" height="15" fill="rgb(219,147,32)" fg:x="45646" fg:w="226"/><text x="16.8280%" y="735.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_right_border (38 samples, 0.01%)</title><rect x="16.6699%" y="757" width="0.0138%" height="15" fill="rgb(246,12,7)" fg:x="45899" fg:w="38"/><text x="16.9199%" y="767.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_top (38 samples, 0.01%)</title><rect x="16.6699%" y="741" width="0.0138%" height="15" fill="rgb(243,50,9)" fg:x="45899" fg:w="38"/><text x="16.9199%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::pop_internal_level (38 samples, 0.01%)</title><rect x="16.6699%" y="725" width="0.0138%" height="15" fill="rgb(219,149,6)" fg:x="45899" fg:w="38"/><text x="16.9199%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.01%)</title><rect x="16.6699%" y="709" width="0.0138%" height="15" fill="rgb(241,51,42)" fg:x="45899" fg:w="38"/><text x="16.9199%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.01%)</title><rect x="16.6699%" y="693" width="0.0138%" height="15" fill="rgb(226,128,27)" fg:x="45899" fg:w="38"/><text x="16.9199%" y="703.50"></text></g><g><title>cfree (38 samples, 0.01%)</title><rect x="16.6699%" y="677" width="0.0138%" height="15" fill="rgb(244,144,4)" fg:x="45899" fg:w="38"/><text x="16.9199%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (56 samples, 0.02%)</title><rect x="16.6837%" y="741" width="0.0203%" height="15" fill="rgb(221,4,13)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (56 samples, 0.02%)</title><rect x="16.6837%" y="725" width="0.0203%" height="15" fill="rgb(208,170,28)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="735.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (56 samples, 0.02%)</title><rect x="16.6837%" y="709" width="0.0203%" height="15" fill="rgb(226,131,13)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (56 samples, 0.02%)</title><rect x="16.6837%" y="693" width="0.0203%" height="15" fill="rgb(215,72,41)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (56 samples, 0.02%)</title><rect x="16.6837%" y="677" width="0.0203%" height="15" fill="rgb(243,108,20)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (56 samples, 0.02%)</title><rect x="16.6837%" y="661" width="0.0203%" height="15" fill="rgb(230,189,17)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.02%)</title><rect x="16.6837%" y="645" width="0.0203%" height="15" fill="rgb(220,50,17)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.02%)</title><rect x="16.6837%" y="629" width="0.0203%" height="15" fill="rgb(248,152,48)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="639.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.02%)</title><rect x="16.6837%" y="613" width="0.0203%" height="15" fill="rgb(244,91,11)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="623.50"></text></g><g><title>malloc (56 samples, 0.02%)</title><rect x="16.6837%" y="597" width="0.0203%" height="15" fill="rgb(220,157,5)" fg:x="45937" fg:w="56"/><text x="16.9337%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (136 samples, 0.05%)</title><rect x="16.6691%" y="789" width="0.0494%" height="15" fill="rgb(253,137,8)" fg:x="45897" fg:w="136"/><text x="16.9191%" y="799.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (136 samples, 0.05%)</title><rect x="16.6691%" y="773" width="0.0494%" height="15" fill="rgb(217,137,51)" fg:x="45897" fg:w="136"/><text x="16.9191%" y="783.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::new_pillar (96 samples, 0.03%)</title><rect x="16.6837%" y="757" width="0.0349%" height="15" fill="rgb(218,209,53)" fg:x="45937" fg:w="96"/><text x="16.9337%" y="767.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level (40 samples, 0.01%)</title><rect x="16.7040%" y="741" width="0.0145%" height="15" fill="rgb(249,137,25)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="751.50"></text></g><g><title>alloc::collections::btree::mem::take_mut (40 samples, 0.01%)</title><rect x="16.7040%" y="725" width="0.0145%" height="15" fill="rgb(239,155,26)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="735.50"></text></g><g><title>alloc::collections::btree::mem::replace (40 samples, 0.01%)</title><rect x="16.7040%" y="709" width="0.0145%" height="15" fill="rgb(227,85,46)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="719.50"></text></g><g><title>alloc::collections::btree::mem::take_mut::{{closure}} (40 samples, 0.01%)</title><rect x="16.7040%" y="693" width="0.0145%" height="15" fill="rgb(251,107,43)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}} (40 samples, 0.01%)</title><rect x="16.7040%" y="677" width="0.0145%" height="15" fill="rgb(234,170,33)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (40 samples, 0.01%)</title><rect x="16.7040%" y="661" width="0.0145%" height="15" fill="rgb(206,29,35)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="671.50"></text></g><g><title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (40 samples, 0.01%)</title><rect x="16.7040%" y="645" width="0.0145%" height="15" fill="rgb(227,138,25)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new_uninit (40 samples, 0.01%)</title><rect x="16.7040%" y="629" width="0.0145%" height="15" fill="rgb(249,131,35)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (40 samples, 0.01%)</title><rect x="16.7040%" y="613" width="0.0145%" height="15" fill="rgb(239,6,40)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (40 samples, 0.01%)</title><rect x="16.7040%" y="597" width="0.0145%" height="15" fill="rgb(246,136,47)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.01%)</title><rect x="16.7040%" y="581" width="0.0145%" height="15" fill="rgb(253,58,26)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.01%)</title><rect x="16.7040%" y="565" width="0.0145%" height="15" fill="rgb(237,141,10)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="575.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.01%)</title><rect x="16.7040%" y="549" width="0.0145%" height="15" fill="rgb(234,156,12)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="559.50"></text></g><g><title>malloc (40 samples, 0.01%)</title><rect x="16.7040%" y="533" width="0.0145%" height="15" fill="rgb(243,224,36)" fg:x="45993" fg:w="40"/><text x="16.9540%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (39 samples, 0.01%)</title><rect x="16.7378%" y="773" width="0.0142%" height="15" fill="rgb(205,229,51)" fg:x="46086" fg:w="39"/><text x="16.9878%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (39 samples, 0.01%)</title><rect x="16.7378%" y="757" width="0.0142%" height="15" fill="rgb(223,189,4)" fg:x="46086" fg:w="39"/><text x="16.9878%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (51 samples, 0.02%)</title><rect x="16.7545%" y="773" width="0.0185%" height="15" fill="rgb(249,167,54)" fg:x="46132" fg:w="51"/><text x="17.0045%" y="783.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (531 samples, 0.19%)</title><rect x="16.6601%" y="805" width="0.1929%" height="15" fill="rgb(218,34,28)" fg:x="45872" fg:w="531"/><text x="16.9101%" y="815.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (360 samples, 0.13%)</title><rect x="16.7222%" y="789" width="0.1307%" height="15" fill="rgb(232,109,42)" fg:x="46043" fg:w="360"/><text x="16.9722%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (212 samples, 0.08%)</title><rect x="16.7759%" y="773" width="0.0770%" height="15" fill="rgb(248,214,46)" fg:x="46191" fg:w="212"/><text x="17.0259%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (211 samples, 0.08%)</title><rect x="16.7763%" y="757" width="0.0766%" height="15" fill="rgb(244,216,40)" fg:x="46192" fg:w="211"/><text x="17.0263%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (211 samples, 0.08%)</title><rect x="16.7763%" y="741" width="0.0766%" height="15" fill="rgb(231,226,31)" fg:x="46192" fg:w="211"/><text x="17.0263%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (207 samples, 0.08%)</title><rect x="16.7777%" y="725" width="0.0752%" height="15" fill="rgb(238,38,43)" fg:x="46196" fg:w="207"/><text x="17.0277%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,585 samples, 0.58%)</title><rect x="16.3913%" y="1237" width="0.5756%" height="15" fill="rgb(208,88,43)" fg:x="45132" fg:w="1585"/><text x="16.6413%" y="1247.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,585 samples, 0.58%)</title><rect x="16.3913%" y="1221" width="0.5756%" height="15" fill="rgb(205,136,37)" fg:x="45132" fg:w="1585"/><text x="16.6413%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1,585 samples, 0.58%)</title><rect x="16.3913%" y="1205" width="0.5756%" height="15" fill="rgb(237,34,14)" fg:x="45132" fg:w="1585"/><text x="16.6413%" y="1215.50"></text></g><g><title>std::panicking::try (1,585 samples, 0.58%)</title><rect x="16.3913%" y="1189" width="0.5756%" height="15" fill="rgb(236,193,44)" fg:x="45132" fg:w="1585"/><text x="16.6413%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (1,585 samples, 0.58%)</title><rect x="16.3913%" y="1173" width="0.5756%" height="15" fill="rgb(231,48,10)" fg:x="45132" fg:w="1585"/><text x="16.6413%" y="1183.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,585 samples, 0.58%)</title><rect x="16.3913%" y="1157" width="0.5756%" height="15" fill="rgb(213,141,34)" fg:x="45132" fg:w="1585"/><text x="16.6413%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,585 samples, 0.58%)</title><rect x="16.3913%" y="1141" width="0.5756%" height="15" fill="rgb(249,130,34)" fg:x="45132" fg:w="1585"/><text x="16.6413%" y="1151.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,585 samples, 0.58%)</title><rect x="16.3913%" y="1125" width="0.5756%" height="15" fill="rgb(219,42,41)" fg:x="45132" fg:w="1585"/><text x="16.6413%" y="1135.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (1,279 samples, 0.46%)</title><rect x="16.5024%" y="1109" width="0.4645%" height="15" fill="rgb(224,100,54)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="1119.50"></text></g><g><title>async_std::task::block_on::block_on (1,279 samples, 0.46%)</title><rect x="16.5024%" y="1093" width="0.4645%" height="15" fill="rgb(229,200,27)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="1103.50"></text></g><g><title>async_std::task::builder::Builder::blocking (1,279 samples, 0.46%)</title><rect x="16.5024%" y="1077" width="0.4645%" height="15" fill="rgb(217,118,10)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,279 samples, 0.46%)</title><rect x="16.5024%" y="1061" width="0.4645%" height="15" fill="rgb(206,22,3)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,279 samples, 0.46%)</title><rect x="16.5024%" y="1045" width="0.4645%" height="15" fill="rgb(232,163,46)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="1055.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (1,279 samples, 0.46%)</title><rect x="16.5024%" y="1029" width="0.4645%" height="15" fill="rgb(206,95,13)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="1039.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,279 samples, 0.46%)</title><rect x="16.5024%" y="1013" width="0.4645%" height="15" fill="rgb(253,154,18)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,279 samples, 0.46%)</title><rect x="16.5024%" y="997" width="0.4645%" height="15" fill="rgb(219,32,23)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,279 samples, 0.46%)</title><rect x="16.5024%" y="981" width="0.4645%" height="15" fill="rgb(230,191,45)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,279 samples, 0.46%)</title><rect x="16.5024%" y="965" width="0.4645%" height="15" fill="rgb(229,64,36)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="975.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (1,279 samples, 0.46%)</title><rect x="16.5024%" y="949" width="0.4645%" height="15" fill="rgb(205,129,25)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="959.50"></text></g><g><title>async_global_executor::executor::block_on (1,279 samples, 0.46%)</title><rect x="16.5024%" y="933" width="0.4645%" height="15" fill="rgb(254,112,7)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,279 samples, 0.46%)</title><rect x="16.5024%" y="917" width="0.4645%" height="15" fill="rgb(226,53,48)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,279 samples, 0.46%)</title><rect x="16.5024%" y="901" width="0.4645%" height="15" fill="rgb(214,153,38)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="911.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (1,279 samples, 0.46%)</title><rect x="16.5024%" y="885" width="0.4645%" height="15" fill="rgb(243,101,7)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="895.50"></text></g><g><title>async_global_executor::reactor::block_on (1,279 samples, 0.46%)</title><rect x="16.5024%" y="869" width="0.4645%" height="15" fill="rgb(240,140,22)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,279 samples, 0.46%)</title><rect x="16.5024%" y="853" width="0.4645%" height="15" fill="rgb(235,114,2)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="863.50"></text></g><g><title>async_io::driver::block_on (1,279 samples, 0.46%)</title><rect x="16.5024%" y="837" width="0.4645%" height="15" fill="rgb(242,59,12)" fg:x="45438" fg:w="1279"/><text x="16.7524%" y="847.50"></text></g><g><title>async_io::reactor::ReactorLock::react (845 samples, 0.31%)</title><rect x="16.6601%" y="821" width="0.3069%" height="15" fill="rgb(252,134,9)" fg:x="45872" fg:w="845"/><text x="16.9101%" y="831.50"></text></g><g><title>polling::Poller::wait (314 samples, 0.11%)</title><rect x="16.8529%" y="805" width="0.1140%" height="15" fill="rgb(236,4,44)" fg:x="46403" fg:w="314"/><text x="17.1029%" y="815.50"></text></g><g><title>polling::epoll::Poller::wait (313 samples, 0.11%)</title><rect x="16.8533%" y="789" width="0.1137%" height="15" fill="rgb(254,172,41)" fg:x="46404" fg:w="313"/><text x="17.1033%" y="799.50"></text></g><g><title>polling::epoll::Poller::modify (313 samples, 0.11%)</title><rect x="16.8533%" y="773" width="0.1137%" height="15" fill="rgb(244,63,20)" fg:x="46404" fg:w="313"/><text x="17.1033%" y="783.50"></text></g><g><title>polling::epoll::Poller::ctl (309 samples, 0.11%)</title><rect x="16.8547%" y="757" width="0.1122%" height="15" fill="rgb(250,73,31)" fg:x="46408" fg:w="309"/><text x="17.1047%" y="767.50"></text></g><g><title>epoll_ctl (296 samples, 0.11%)</title><rect x="16.8595%" y="741" width="0.1075%" height="15" fill="rgb(241,38,36)" fg:x="46421" fg:w="296"/><text x="17.1095%" y="751.50"></text></g><g><title>[unknown] (280 samples, 0.10%)</title><rect x="16.8653%" y="725" width="0.1017%" height="15" fill="rgb(245,211,2)" fg:x="46437" fg:w="280"/><text x="17.1153%" y="735.50"></text></g><g><title>[unknown] (269 samples, 0.10%)</title><rect x="16.8693%" y="709" width="0.0977%" height="15" fill="rgb(206,120,28)" fg:x="46448" fg:w="269"/><text x="17.1193%" y="719.50"></text></g><g><title>[unknown] (263 samples, 0.10%)</title><rect x="16.8714%" y="693" width="0.0955%" height="15" fill="rgb(211,59,34)" fg:x="46454" fg:w="263"/><text x="17.1214%" y="703.50"></text></g><g><title>[unknown] (244 samples, 0.09%)</title><rect x="16.8783%" y="677" width="0.0886%" height="15" fill="rgb(233,168,5)" fg:x="46473" fg:w="244"/><text x="17.1283%" y="687.50"></text></g><g><title>[unknown] (79 samples, 0.03%)</title><rect x="16.9383%" y="661" width="0.0287%" height="15" fill="rgb(234,33,13)" fg:x="46638" fg:w="79"/><text x="17.1883%" y="671.50"></text></g><g><title>recv (31 samples, 0.01%)</title><rect x="16.9811%" y="1237" width="0.0113%" height="15" fill="rgb(231,150,26)" fg:x="46756" fg:w="31"/><text x="17.2311%" y="1247.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="16.9811%" y="1221" width="0.0113%" height="15" fill="rgb(217,191,4)" fg:x="46756" fg:w="31"/><text x="17.2311%" y="1231.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_zint (100 samples, 0.04%)</title><rect x="17.0000%" y="437" width="0.0363%" height="15" fill="rgb(246,198,38)" fg:x="46808" fg:w="100"/><text x="17.2500%" y="447.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;u64,R&gt;&gt;::read (100 samples, 0.04%)</title><rect x="17.0000%" y="421" width="0.0363%" height="15" fill="rgb(245,64,37)" fg:x="46808" fg:w="100"/><text x="17.2500%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (100 samples, 0.04%)</title><rect x="17.0000%" y="405" width="0.0363%" height="15" fill="rgb(250,30,36)" fg:x="46808" fg:w="100"/><text x="17.2500%" y="415.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSlice as core::ops::index::Index&lt;usize&gt;&gt;::index (100 samples, 0.04%)</title><rect x="17.0000%" y="389" width="0.0363%" height="15" fill="rgb(217,86,53)" fg:x="46808" fg:w="100"/><text x="17.2500%" y="399.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::index::Index&lt;usize&gt;&gt;::index (100 samples, 0.04%)</title><rect x="17.0000%" y="373" width="0.0363%" height="15" fill="rgb(228,157,16)" fg:x="46808" fg:w="100"/><text x="17.2500%" y="383.50"></text></g><g><title>&lt;zenoh_buffers::zslice::ZSliceBuffer as core::ops::deref::Deref&gt;::deref (90 samples, 0.03%)</title><rect x="17.0036%" y="357" width="0.0327%" height="15" fill="rgb(217,59,31)" fg:x="46818" fg:w="90"/><text x="17.2536%" y="367.50"></text></g><g><title>zenoh_buffers::zslice::ZSliceBuffer::as_slice (90 samples, 0.03%)</title><rect x="17.0036%" y="341" width="0.0327%" height="15" fill="rgb(237,138,41)" fg:x="46818" fg:w="90"/><text x="17.2536%" y="351.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (122 samples, 0.04%)</title><rect x="16.9964%" y="597" width="0.0443%" height="15" fill="rgb(227,91,49)" fg:x="46798" fg:w="122"/><text x="17.2464%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (122 samples, 0.04%)</title><rect x="16.9964%" y="581" width="0.0443%" height="15" fill="rgb(247,21,44)" fg:x="46798" fg:w="122"/><text x="17.2464%" y="591.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (122 samples, 0.04%)</title><rect x="16.9964%" y="565" width="0.0443%" height="15" fill="rgb(219,210,51)" fg:x="46798" fg:w="122"/><text x="17.2464%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (122 samples, 0.04%)</title><rect x="16.9964%" y="549" width="0.0443%" height="15" fill="rgb(209,140,6)" fg:x="46798" fg:w="122"/><text x="17.2464%" y="559.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (122 samples, 0.04%)</title><rect x="16.9964%" y="533" width="0.0443%" height="15" fill="rgb(221,188,24)" fg:x="46798" fg:w="122"/><text x="17.2464%" y="543.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (122 samples, 0.04%)</title><rect x="16.9964%" y="517" width="0.0443%" height="15" fill="rgb(232,154,20)" fg:x="46798" fg:w="122"/><text x="17.2464%" y="527.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (122 samples, 0.04%)</title><rect x="16.9964%" y="501" width="0.0443%" height="15" fill="rgb(244,137,50)" fg:x="46798" fg:w="122"/><text x="17.2464%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (122 samples, 0.04%)</title><rect x="16.9964%" y="485" width="0.0443%" height="15" fill="rgb(225,185,43)" fg:x="46798" fg:w="122"/><text x="17.2464%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (119 samples, 0.04%)</title><rect x="16.9975%" y="469" width="0.0432%" height="15" fill="rgb(213,205,38)" fg:x="46801" fg:w="119"/><text x="17.2475%" y="479.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (119 samples, 0.04%)</title><rect x="16.9975%" y="453" width="0.0432%" height="15" fill="rgb(236,73,12)" fg:x="46801" fg:w="119"/><text x="17.2475%" y="463.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (38 samples, 0.01%)</title><rect x="17.0407%" y="517" width="0.0138%" height="15" fill="rgb(235,219,13)" fg:x="46920" fg:w="38"/><text x="17.2907%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (166 samples, 0.06%)</title><rect x="16.9964%" y="613" width="0.0603%" height="15" fill="rgb(218,59,36)" fg:x="46798" fg:w="166"/><text x="17.2464%" y="623.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (44 samples, 0.02%)</title><rect x="17.0407%" y="597" width="0.0160%" height="15" fill="rgb(205,110,39)" fg:x="46920" fg:w="44"/><text x="17.2907%" y="607.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (44 samples, 0.02%)</title><rect x="17.0407%" y="581" width="0.0160%" height="15" fill="rgb(218,206,42)" fg:x="46920" fg:w="44"/><text x="17.2907%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.02%)</title><rect x="17.0407%" y="565" width="0.0160%" height="15" fill="rgb(248,125,24)" fg:x="46920" fg:w="44"/><text x="17.2907%" y="575.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (44 samples, 0.02%)</title><rect x="17.0407%" y="549" width="0.0160%" height="15" fill="rgb(242,28,27)" fg:x="46920" fg:w="44"/><text x="17.2907%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.02%)</title><rect x="17.0407%" y="533" width="0.0160%" height="15" fill="rgb(216,228,15)" fg:x="46920" fg:w="44"/><text x="17.2907%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (191 samples, 0.07%)</title><rect x="16.9964%" y="1061" width="0.0694%" height="15" fill="rgb(235,116,46)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="1071.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (191 samples, 0.07%)</title><rect x="16.9964%" y="1045" width="0.0694%" height="15" fill="rgb(224,18,32)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (191 samples, 0.07%)</title><rect x="16.9964%" y="1029" width="0.0694%" height="15" fill="rgb(252,5,12)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="1039.50"></text></g><g><title>std::panicking::try (191 samples, 0.07%)</title><rect x="16.9964%" y="1013" width="0.0694%" height="15" fill="rgb(251,36,5)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="1023.50"></text></g><g><title>std::panicking::try::do_call (191 samples, 0.07%)</title><rect x="16.9964%" y="997" width="0.0694%" height="15" fill="rgb(217,53,14)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="1007.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (191 samples, 0.07%)</title><rect x="16.9964%" y="981" width="0.0694%" height="15" fill="rgb(215,86,45)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (191 samples, 0.07%)</title><rect x="16.9964%" y="965" width="0.0694%" height="15" fill="rgb(242,169,11)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (191 samples, 0.07%)</title><rect x="16.9964%" y="949" width="0.0694%" height="15" fill="rgb(211,213,45)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="959.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (191 samples, 0.07%)</title><rect x="16.9964%" y="933" width="0.0694%" height="15" fill="rgb(205,88,11)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="943.50"></text></g><g><title>async_global_executor::reactor::block_on (191 samples, 0.07%)</title><rect x="16.9964%" y="917" width="0.0694%" height="15" fill="rgb(252,69,26)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="927.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (191 samples, 0.07%)</title><rect x="16.9964%" y="901" width="0.0694%" height="15" fill="rgb(246,123,37)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="911.50"></text></g><g><title>async_io::driver::block_on (191 samples, 0.07%)</title><rect x="16.9964%" y="885" width="0.0694%" height="15" fill="rgb(212,205,5)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="895.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (191 samples, 0.07%)</title><rect x="16.9964%" y="869" width="0.0694%" height="15" fill="rgb(253,148,0)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (191 samples, 0.07%)</title><rect x="16.9964%" y="853" width="0.0694%" height="15" fill="rgb(239,22,4)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="863.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (191 samples, 0.07%)</title><rect x="16.9964%" y="837" width="0.0694%" height="15" fill="rgb(226,26,53)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="847.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (191 samples, 0.07%)</title><rect x="16.9964%" y="821" width="0.0694%" height="15" fill="rgb(225,229,45)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (191 samples, 0.07%)</title><rect x="16.9964%" y="805" width="0.0694%" height="15" fill="rgb(220,60,37)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (191 samples, 0.07%)</title><rect x="16.9964%" y="789" width="0.0694%" height="15" fill="rgb(217,180,35)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (191 samples, 0.07%)</title><rect x="16.9964%" y="773" width="0.0694%" height="15" fill="rgb(229,7,53)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (191 samples, 0.07%)</title><rect x="16.9964%" y="757" width="0.0694%" height="15" fill="rgb(254,137,3)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (191 samples, 0.07%)</title><rect x="16.9964%" y="741" width="0.0694%" height="15" fill="rgb(215,140,41)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="751.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (191 samples, 0.07%)</title><rect x="16.9964%" y="725" width="0.0694%" height="15" fill="rgb(250,80,15)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="735.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (191 samples, 0.07%)</title><rect x="16.9964%" y="709" width="0.0694%" height="15" fill="rgb(252,191,6)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="719.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (191 samples, 0.07%)</title><rect x="16.9964%" y="693" width="0.0694%" height="15" fill="rgb(246,217,18)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (191 samples, 0.07%)</title><rect x="16.9964%" y="677" width="0.0694%" height="15" fill="rgb(223,93,7)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (191 samples, 0.07%)</title><rect x="16.9964%" y="661" width="0.0694%" height="15" fill="rgb(225,55,52)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (191 samples, 0.07%)</title><rect x="16.9964%" y="645" width="0.0694%" height="15" fill="rgb(240,31,24)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="655.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (191 samples, 0.07%)</title><rect x="16.9964%" y="629" width="0.0694%" height="15" fill="rgb(205,56,52)" fg:x="46798" fg:w="191"/><text x="17.2464%" y="639.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (31 samples, 0.01%)</title><rect x="17.0657%" y="709" width="0.0113%" height="15" fill="rgb(246,146,12)" fg:x="46989" fg:w="31"/><text x="17.3157%" y="719.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.01%)</title><rect x="17.0657%" y="693" width="0.0113%" height="15" fill="rgb(239,84,36)" fg:x="46989" fg:w="31"/><text x="17.3157%" y="703.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (31 samples, 0.01%)</title><rect x="17.0657%" y="677" width="0.0113%" height="15" fill="rgb(207,41,40)" fg:x="46989" fg:w="31"/><text x="17.3157%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (30 samples, 0.01%)</title><rect x="17.0795%" y="677" width="0.0109%" height="15" fill="rgb(241,179,25)" fg:x="47027" fg:w="30"/><text x="17.3295%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (33 samples, 0.01%)</title><rect x="17.0795%" y="693" width="0.0120%" height="15" fill="rgb(210,0,34)" fg:x="47027" fg:w="33"/><text x="17.3295%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.03%)</title><rect x="17.0657%" y="773" width="0.0330%" height="15" fill="rgb(225,217,29)" fg:x="46989" fg:w="91"/><text x="17.3157%" y="783.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (91 samples, 0.03%)</title><rect x="17.0657%" y="757" width="0.0330%" height="15" fill="rgb(216,191,38)" fg:x="46989" fg:w="91"/><text x="17.3157%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (91 samples, 0.03%)</title><rect x="17.0657%" y="741" width="0.0330%" height="15" fill="rgb(232,140,52)" fg:x="46989" fg:w="91"/><text x="17.3157%" y="751.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (91 samples, 0.03%)</title><rect x="17.0657%" y="725" width="0.0330%" height="15" fill="rgb(223,158,51)" fg:x="46989" fg:w="91"/><text x="17.3157%" y="735.50"></text></g><g><title>async_executor::Runner::new (60 samples, 0.02%)</title><rect x="17.0770%" y="709" width="0.0218%" height="15" fill="rgb(235,29,51)" fg:x="47020" fg:w="60"/><text x="17.3270%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::Edge&gt;::correct_parent_link (76 samples, 0.03%)</title><rect x="17.1184%" y="677" width="0.0276%" height="15" fill="rgb(215,181,18)" fg:x="47134" fg:w="76"/><text x="17.3684%" y="687.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::set_parent_link (70 samples, 0.03%)</title><rect x="17.1206%" y="661" width="0.0254%" height="15" fill="rgb(227,125,34)" fg:x="47140" fg:w="70"/><text x="17.3706%" y="671.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (36 samples, 0.01%)</title><rect x="17.1329%" y="645" width="0.0131%" height="15" fill="rgb(230,197,49)" fg:x="47174" fg:w="36"/><text x="17.3829%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;::correct_childrens_parent_links (84 samples, 0.03%)</title><rect x="17.1184%" y="693" width="0.0305%" height="15" fill="rgb(239,141,16)" fg:x="47134" fg:w="84"/><text x="17.3684%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::Edge&gt;::move_suffix (161 samples, 0.06%)</title><rect x="17.1155%" y="709" width="0.0585%" height="15" fill="rgb(225,105,43)" fg:x="47126" fg:w="161"/><text x="17.3655%" y="719.50"></text></g><g><title>alloc::collections::btree::node::move_to_slice (69 samples, 0.03%)</title><rect x="17.1489%" y="693" width="0.0251%" height="15" fill="rgb(214,131,14)" fg:x="47218" fg:w="69"/><text x="17.3989%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.03%)</title><rect x="17.1489%" y="677" width="0.0251%" height="15" fill="rgb(229,177,11)" fg:x="47218" fg:w="69"/><text x="17.3989%" y="687.50"></text></g><g><title>[libc.so.6] (68 samples, 0.02%)</title><rect x="17.1493%" y="661" width="0.0247%" height="15" fill="rgb(231,180,14)" fg:x="47219" fg:w="68"/><text x="17.3993%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (239 samples, 0.09%)</title><rect x="17.1013%" y="741" width="0.0868%" height="15" fill="rgb(232,88,2)" fg:x="47087" fg:w="239"/><text x="17.3513%" y="751.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (239 samples, 0.09%)</title><rect x="17.1013%" y="725" width="0.0868%" height="15" fill="rgb(205,220,8)" fg:x="47087" fg:w="239"/><text x="17.3513%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (553 samples, 0.20%)</title><rect x="16.9964%" y="1237" width="0.2008%" height="15" fill="rgb(225,23,53)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (553 samples, 0.20%)</title><rect x="16.9964%" y="1221" width="0.2008%" height="15" fill="rgb(213,62,29)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (553 samples, 0.20%)</title><rect x="16.9964%" y="1205" width="0.2008%" height="15" fill="rgb(227,75,7)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (553 samples, 0.20%)</title><rect x="16.9964%" y="1189" width="0.2008%" height="15" fill="rgb(207,105,14)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (553 samples, 0.20%)</title><rect x="16.9964%" y="1173" width="0.2008%" height="15" fill="rgb(245,62,29)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (553 samples, 0.20%)</title><rect x="16.9964%" y="1157" width="0.2008%" height="15" fill="rgb(236,202,4)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1167.50"></text></g><g><title>std::panicking::try (553 samples, 0.20%)</title><rect x="16.9964%" y="1141" width="0.2008%" height="15" fill="rgb(250,67,1)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (553 samples, 0.20%)</title><rect x="16.9964%" y="1125" width="0.2008%" height="15" fill="rgb(253,115,44)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (553 samples, 0.20%)</title><rect x="16.9964%" y="1109" width="0.2008%" height="15" fill="rgb(251,139,18)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (553 samples, 0.20%)</title><rect x="16.9964%" y="1093" width="0.2008%" height="15" fill="rgb(218,22,32)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (553 samples, 0.20%)</title><rect x="16.9964%" y="1077" width="0.2008%" height="15" fill="rgb(243,53,5)" fg:x="46798" fg:w="553"/><text x="17.2464%" y="1087.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (362 samples, 0.13%)</title><rect x="17.0657%" y="1061" width="0.1315%" height="15" fill="rgb(227,56,16)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="1071.50"></text></g><g><title>async_std::task::block_on::block_on (362 samples, 0.13%)</title><rect x="17.0657%" y="1045" width="0.1315%" height="15" fill="rgb(245,53,0)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="1055.50"></text></g><g><title>async_std::task::builder::Builder::blocking (362 samples, 0.13%)</title><rect x="17.0657%" y="1029" width="0.1315%" height="15" fill="rgb(216,170,35)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (362 samples, 0.13%)</title><rect x="17.0657%" y="1013" width="0.1315%" height="15" fill="rgb(211,200,8)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (362 samples, 0.13%)</title><rect x="17.0657%" y="997" width="0.1315%" height="15" fill="rgb(228,204,44)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (362 samples, 0.13%)</title><rect x="17.0657%" y="981" width="0.1315%" height="15" fill="rgb(214,121,17)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (362 samples, 0.13%)</title><rect x="17.0657%" y="965" width="0.1315%" height="15" fill="rgb(233,64,38)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (362 samples, 0.13%)</title><rect x="17.0657%" y="949" width="0.1315%" height="15" fill="rgb(253,54,19)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (362 samples, 0.13%)</title><rect x="17.0657%" y="933" width="0.1315%" height="15" fill="rgb(253,94,18)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (362 samples, 0.13%)</title><rect x="17.0657%" y="917" width="0.1315%" height="15" fill="rgb(227,57,52)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="927.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (362 samples, 0.13%)</title><rect x="17.0657%" y="901" width="0.1315%" height="15" fill="rgb(230,228,50)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="911.50"></text></g><g><title>async_global_executor::executor::block_on (362 samples, 0.13%)</title><rect x="17.0657%" y="885" width="0.1315%" height="15" fill="rgb(217,205,27)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (362 samples, 0.13%)</title><rect x="17.0657%" y="869" width="0.1315%" height="15" fill="rgb(252,71,50)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (362 samples, 0.13%)</title><rect x="17.0657%" y="853" width="0.1315%" height="15" fill="rgb(209,86,4)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="863.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (362 samples, 0.13%)</title><rect x="17.0657%" y="837" width="0.1315%" height="15" fill="rgb(229,94,0)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="847.50"></text></g><g><title>async_global_executor::reactor::block_on (362 samples, 0.13%)</title><rect x="17.0657%" y="821" width="0.1315%" height="15" fill="rgb(252,223,21)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="831.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (362 samples, 0.13%)</title><rect x="17.0657%" y="805" width="0.1315%" height="15" fill="rgb(230,210,4)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="815.50"></text></g><g><title>async_io::driver::block_on (362 samples, 0.13%)</title><rect x="17.0657%" y="789" width="0.1315%" height="15" fill="rgb(240,149,38)" fg:x="46989" fg:w="362"/><text x="17.3157%" y="799.50"></text></g><g><title>async_io::reactor::ReactorLock::react (271 samples, 0.10%)</title><rect x="17.0988%" y="773" width="0.0984%" height="15" fill="rgb(254,105,20)" fg:x="47080" fg:w="271"/><text x="17.3488%" y="783.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (270 samples, 0.10%)</title><rect x="17.0992%" y="757" width="0.0981%" height="15" fill="rgb(253,87,46)" fg:x="47081" fg:w="270"/><text x="17.3492%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.01%)</title><rect x="17.2150%" y="709" width="0.0116%" height="15" fill="rgb(253,116,33)" fg:x="47400" fg:w="32"/><text x="17.4650%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.01%)</title><rect x="17.2165%" y="693" width="0.0102%" height="15" fill="rgb(229,198,5)" fg:x="47404" fg:w="28"/><text x="17.4665%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.01%)</title><rect x="17.2165%" y="677" width="0.0102%" height="15" fill="rgb(242,38,37)" fg:x="47404" fg:w="28"/><text x="17.4665%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.01%)</title><rect x="17.2165%" y="661" width="0.0102%" height="15" fill="rgb(242,69,53)" fg:x="47404" fg:w="28"/><text x="17.4665%" y="671.50"></text></g><g><title>[libc.so.6] (64 samples, 0.02%)</title><rect x="17.2513%" y="533" width="0.0232%" height="15" fill="rgb(249,80,16)" fg:x="47500" fg:w="64"/><text x="17.5013%" y="543.50"></text></g><g><title>[libc.so.6] (62 samples, 0.02%)</title><rect x="17.2521%" y="517" width="0.0225%" height="15" fill="rgb(206,128,11)" fg:x="47502" fg:w="62"/><text x="17.5021%" y="527.50"></text></g><g><title>[libc.so.6] (106 samples, 0.04%)</title><rect x="17.2408%" y="549" width="0.0385%" height="15" fill="rgb(212,35,20)" fg:x="47471" fg:w="106"/><text x="17.4908%" y="559.50"></text></g><g><title>__rdl_alloc (134 samples, 0.05%)</title><rect x="17.2317%" y="613" width="0.0487%" height="15" fill="rgb(236,79,13)" fg:x="47446" fg:w="134"/><text x="17.4817%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (122 samples, 0.04%)</title><rect x="17.2361%" y="597" width="0.0443%" height="15" fill="rgb(233,123,3)" fg:x="47458" fg:w="122"/><text x="17.4861%" y="607.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (122 samples, 0.04%)</title><rect x="17.2361%" y="581" width="0.0443%" height="15" fill="rgb(214,93,52)" fg:x="47458" fg:w="122"/><text x="17.4861%" y="591.50"></text></g><g><title>posix_memalign (121 samples, 0.04%)</title><rect x="17.2364%" y="565" width="0.0439%" height="15" fill="rgb(251,37,40)" fg:x="47459" fg:w="121"/><text x="17.4864%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (153 samples, 0.06%)</title><rect x="17.2266%" y="693" width="0.0556%" height="15" fill="rgb(227,80,54)" fg:x="47432" fg:w="153"/><text x="17.4766%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (142 samples, 0.05%)</title><rect x="17.2306%" y="677" width="0.0516%" height="15" fill="rgb(254,48,11)" fg:x="47443" fg:w="142"/><text x="17.4806%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (142 samples, 0.05%)</title><rect x="17.2306%" y="661" width="0.0516%" height="15" fill="rgb(235,193,26)" fg:x="47443" fg:w="142"/><text x="17.4806%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (142 samples, 0.05%)</title><rect x="17.2306%" y="645" width="0.0516%" height="15" fill="rgb(229,99,21)" fg:x="47443" fg:w="142"/><text x="17.4806%" y="655.50"></text></g><g><title>alloc::alloc::alloc (142 samples, 0.05%)</title><rect x="17.2306%" y="629" width="0.0516%" height="15" fill="rgb(211,140,41)" fg:x="47443" fg:w="142"/><text x="17.4806%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (166 samples, 0.06%)</title><rect x="17.2833%" y="677" width="0.0603%" height="15" fill="rgb(240,227,30)" fg:x="47588" fg:w="166"/><text x="17.5333%" y="687.50"></text></g><g><title>core::ptr::write (107 samples, 0.04%)</title><rect x="17.3047%" y="661" width="0.0389%" height="15" fill="rgb(215,224,45)" fg:x="47647" fg:w="107"/><text x="17.5547%" y="671.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="17.3058%" y="645" width="0.0378%" height="15" fill="rgb(206,123,31)" fg:x="47650" fg:w="104"/><text x="17.5558%" y="655.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="17.3058%" y="629" width="0.0378%" height="15" fill="rgb(210,138,16)" fg:x="47650" fg:w="104"/><text x="17.5558%" y="639.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="17.3058%" y="613" width="0.0378%" height="15" fill="rgb(228,57,28)" fg:x="47650" fg:w="104"/><text x="17.5558%" y="623.50"></text></g><g><title>[unknown] (103 samples, 0.04%)</title><rect x="17.3062%" y="597" width="0.0374%" height="15" fill="rgb(242,170,10)" fg:x="47651" fg:w="103"/><text x="17.5562%" y="607.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="17.3153%" y="581" width="0.0283%" height="15" fill="rgb(228,214,39)" fg:x="47676" fg:w="78"/><text x="17.5653%" y="591.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="17.3225%" y="565" width="0.0211%" height="15" fill="rgb(218,179,33)" fg:x="47696" fg:w="58"/><text x="17.5725%" y="575.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="17.3305%" y="549" width="0.0131%" height="15" fill="rgb(235,193,39)" fg:x="47718" fg:w="36"/><text x="17.5805%" y="559.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="17.3323%" y="533" width="0.0113%" height="15" fill="rgb(219,221,36)" fg:x="47723" fg:w="31"/><text x="17.5823%" y="543.50"></text></g><g><title>[libc.so.6] (92 samples, 0.03%)</title><rect x="17.3447%" y="549" width="0.0334%" height="15" fill="rgb(248,218,19)" fg:x="47757" fg:w="92"/><text x="17.5947%" y="559.50"></text></g><g><title>[unknown] (79 samples, 0.03%)</title><rect x="17.3494%" y="533" width="0.0287%" height="15" fill="rgb(205,50,9)" fg:x="47770" fg:w="79"/><text x="17.5994%" y="543.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="17.3527%" y="517" width="0.0254%" height="15" fill="rgb(238,81,28)" fg:x="47779" fg:w="70"/><text x="17.6027%" y="527.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="17.3548%" y="501" width="0.0232%" height="15" fill="rgb(235,110,19)" fg:x="47785" fg:w="64"/><text x="17.6048%" y="511.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="17.3552%" y="485" width="0.0229%" height="15" fill="rgb(214,7,14)" fg:x="47786" fg:w="63"/><text x="17.6052%" y="495.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="17.3617%" y="469" width="0.0163%" height="15" fill="rgb(211,77,3)" fg:x="47804" fg:w="45"/><text x="17.6117%" y="479.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="17.3679%" y="453" width="0.0102%" height="15" fill="rgb(229,5,9)" fg:x="47821" fg:w="28"/><text x="17.6179%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (107 samples, 0.04%)</title><rect x="17.3436%" y="677" width="0.0389%" height="15" fill="rgb(225,90,11)" fg:x="47754" fg:w="107"/><text x="17.5936%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (107 samples, 0.04%)</title><rect x="17.3436%" y="661" width="0.0389%" height="15" fill="rgb(242,56,8)" fg:x="47754" fg:w="107"/><text x="17.5936%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (107 samples, 0.04%)</title><rect x="17.3436%" y="645" width="0.0389%" height="15" fill="rgb(249,212,39)" fg:x="47754" fg:w="107"/><text x="17.5936%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (107 samples, 0.04%)</title><rect x="17.3436%" y="629" width="0.0389%" height="15" fill="rgb(236,90,9)" fg:x="47754" fg:w="107"/><text x="17.5936%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (107 samples, 0.04%)</title><rect x="17.3436%" y="613" width="0.0389%" height="15" fill="rgb(206,88,35)" fg:x="47754" fg:w="107"/><text x="17.5936%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (107 samples, 0.04%)</title><rect x="17.3436%" y="597" width="0.0389%" height="15" fill="rgb(205,126,30)" fg:x="47754" fg:w="107"/><text x="17.5936%" y="607.50"></text></g><g><title>alloc::alloc::alloc (107 samples, 0.04%)</title><rect x="17.3436%" y="581" width="0.0389%" height="15" fill="rgb(230,176,12)" fg:x="47754" fg:w="107"/><text x="17.5936%" y="591.50"></text></g><g><title>malloc (107 samples, 0.04%)</title><rect x="17.3436%" y="565" width="0.0389%" height="15" fill="rgb(243,19,9)" fg:x="47754" fg:w="107"/><text x="17.5936%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (438 samples, 0.16%)</title><rect x="17.2266%" y="709" width="0.1591%" height="15" fill="rgb(245,171,17)" fg:x="47432" fg:w="438"/><text x="17.4766%" y="719.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (285 samples, 0.10%)</title><rect x="17.2822%" y="693" width="0.1035%" height="15" fill="rgb(227,52,21)" fg:x="47585" fg:w="285"/><text x="17.5322%" y="703.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (541 samples, 0.20%)</title><rect x="17.2052%" y="869" width="0.1965%" height="15" fill="rgb(238,69,14)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="879.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (541 samples, 0.20%)</title><rect x="17.2052%" y="853" width="0.1965%" height="15" fill="rgb(241,156,39)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (541 samples, 0.20%)</title><rect x="17.2052%" y="837" width="0.1965%" height="15" fill="rgb(212,227,28)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (541 samples, 0.20%)</title><rect x="17.2052%" y="821" width="0.1965%" height="15" fill="rgb(209,118,27)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (541 samples, 0.20%)</title><rect x="17.2052%" y="805" width="0.1965%" height="15" fill="rgb(226,102,5)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="815.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (541 samples, 0.20%)</title><rect x="17.2052%" y="789" width="0.1965%" height="15" fill="rgb(223,34,3)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="799.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (541 samples, 0.20%)</title><rect x="17.2052%" y="773" width="0.1965%" height="15" fill="rgb(221,81,38)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (541 samples, 0.20%)</title><rect x="17.2052%" y="757" width="0.1965%" height="15" fill="rgb(236,219,28)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (541 samples, 0.20%)</title><rect x="17.2052%" y="741" width="0.1965%" height="15" fill="rgb(213,200,14)" fg:x="47373" fg:w="541"/><text x="17.4552%" y="751.50"></text></g><g><title>async_executor::Runner::new (539 samples, 0.20%)</title><rect x="17.2059%" y="725" width="0.1958%" height="15" fill="rgb(240,33,19)" fg:x="47375" fg:w="539"/><text x="17.4559%" y="735.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (30 samples, 0.01%)</title><rect x="17.3908%" y="709" width="0.0109%" height="15" fill="rgb(233,113,27)" fg:x="47884" fg:w="30"/><text x="17.6408%" y="719.50"></text></g><g><title>async_executor::Executor::state (32 samples, 0.01%)</title><rect x="17.4017%" y="869" width="0.0116%" height="15" fill="rgb(220,221,18)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (32 samples, 0.01%)</title><rect x="17.4017%" y="853" width="0.0116%" height="15" fill="rgb(238,92,8)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (32 samples, 0.01%)</title><rect x="17.4017%" y="837" width="0.0116%" height="15" fill="rgb(222,164,16)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="847.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (32 samples, 0.01%)</title><rect x="17.4017%" y="821" width="0.0116%" height="15" fill="rgb(241,119,3)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="831.50"></text></g><g><title>once_cell::imp::initialize_or_wait (32 samples, 0.01%)</title><rect x="17.4017%" y="805" width="0.0116%" height="15" fill="rgb(241,44,8)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (32 samples, 0.01%)</title><rect x="17.4017%" y="789" width="0.0116%" height="15" fill="rgb(230,36,40)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="799.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (32 samples, 0.01%)</title><rect x="17.4017%" y="773" width="0.0116%" height="15" fill="rgb(243,16,36)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="783.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (32 samples, 0.01%)</title><rect x="17.4017%" y="757" width="0.0116%" height="15" fill="rgb(231,4,26)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="767.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (32 samples, 0.01%)</title><rect x="17.4017%" y="741" width="0.0116%" height="15" fill="rgb(240,9,31)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="751.50"></text></g><g><title>async_executor::State::new (32 samples, 0.01%)</title><rect x="17.4017%" y="725" width="0.0116%" height="15" fill="rgb(207,173,15)" fg:x="47914" fg:w="32"/><text x="17.6517%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (83 samples, 0.03%)</title><rect x="17.4217%" y="837" width="0.0301%" height="15" fill="rgb(224,192,53)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.03%)</title><rect x="17.4217%" y="821" width="0.0301%" height="15" fill="rgb(223,67,28)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.03%)</title><rect x="17.4217%" y="805" width="0.0301%" height="15" fill="rgb(211,20,47)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.03%)</title><rect x="17.4217%" y="789" width="0.0301%" height="15" fill="rgb(240,228,2)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="799.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.03%)</title><rect x="17.4217%" y="773" width="0.0301%" height="15" fill="rgb(248,151,12)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="783.50"></text></g><g><title>__rdl_alloc (83 samples, 0.03%)</title><rect x="17.4217%" y="757" width="0.0301%" height="15" fill="rgb(244,8,39)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (83 samples, 0.03%)</title><rect x="17.4217%" y="741" width="0.0301%" height="15" fill="rgb(222,26,8)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="751.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (83 samples, 0.03%)</title><rect x="17.4217%" y="725" width="0.0301%" height="15" fill="rgb(213,106,44)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="735.50"></text></g><g><title>posix_memalign (83 samples, 0.03%)</title><rect x="17.4217%" y="709" width="0.0301%" height="15" fill="rgb(214,129,20)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="719.50"></text></g><g><title>[libc.so.6] (83 samples, 0.03%)</title><rect x="17.4217%" y="693" width="0.0301%" height="15" fill="rgb(212,32,13)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="703.50"></text></g><g><title>[libc.so.6] (83 samples, 0.03%)</title><rect x="17.4217%" y="677" width="0.0301%" height="15" fill="rgb(208,168,33)" fg:x="47969" fg:w="83"/><text x="17.6717%" y="687.50"></text></g><g><title>[libc.so.6] (81 samples, 0.03%)</title><rect x="17.4224%" y="661" width="0.0294%" height="15" fill="rgb(231,207,8)" fg:x="47971" fg:w="81"/><text x="17.6724%" y="671.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="17.4395%" y="645" width="0.0123%" height="15" fill="rgb(235,219,23)" fg:x="48018" fg:w="34"/><text x="17.6895%" y="655.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="17.4398%" y="629" width="0.0120%" height="15" fill="rgb(226,216,26)" fg:x="48019" fg:w="33"/><text x="17.6898%" y="639.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="17.4398%" y="613" width="0.0120%" height="15" fill="rgb(239,137,16)" fg:x="48019" fg:w="33"/><text x="17.6898%" y="623.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="17.4406%" y="597" width="0.0113%" height="15" fill="rgb(207,12,36)" fg:x="48021" fg:w="31"/><text x="17.6906%" y="607.50"></text></g><g><title>[libc.so.6] (149 samples, 0.05%)</title><rect x="17.4536%" y="693" width="0.0541%" height="15" fill="rgb(210,214,24)" fg:x="48057" fg:w="149"/><text x="17.7036%" y="703.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="17.4751%" y="677" width="0.0327%" height="15" fill="rgb(206,56,30)" fg:x="48116" fg:w="90"/><text x="17.7251%" y="687.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="17.4805%" y="661" width="0.0272%" height="15" fill="rgb(228,143,26)" fg:x="48131" fg:w="75"/><text x="17.7305%" y="671.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="17.4816%" y="645" width="0.0261%" height="15" fill="rgb(216,218,46)" fg:x="48134" fg:w="72"/><text x="17.7316%" y="655.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="17.4816%" y="629" width="0.0261%" height="15" fill="rgb(206,6,19)" fg:x="48134" fg:w="72"/><text x="17.7316%" y="639.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="17.4914%" y="613" width="0.0163%" height="15" fill="rgb(239,177,51)" fg:x="48161" fg:w="45"/><text x="17.7414%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (850 samples, 0.31%)</title><rect x="17.2052%" y="933" width="0.3087%" height="15" fill="rgb(216,55,25)" fg:x="47373" fg:w="850"/><text x="17.4552%" y="943.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (850 samples, 0.31%)</title><rect x="17.2052%" y="917" width="0.3087%" height="15" fill="rgb(231,163,29)" fg:x="47373" fg:w="850"/><text x="17.4552%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (850 samples, 0.31%)</title><rect x="17.2052%" y="901" width="0.3087%" height="15" fill="rgb(232,149,50)" fg:x="47373" fg:w="850"/><text x="17.4552%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (850 samples, 0.31%)</title><rect x="17.2052%" y="885" width="0.3087%" height="15" fill="rgb(223,142,48)" fg:x="47373" fg:w="850"/><text x="17.4552%" y="895.50"></text></g><g><title>async_executor::Runner::new (277 samples, 0.10%)</title><rect x="17.4133%" y="869" width="0.1006%" height="15" fill="rgb(245,83,23)" fg:x="47946" fg:w="277"/><text x="17.6633%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (254 samples, 0.09%)</title><rect x="17.4217%" y="853" width="0.0922%" height="15" fill="rgb(224,63,2)" fg:x="47969" fg:w="254"/><text x="17.6717%" y="863.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (171 samples, 0.06%)</title><rect x="17.4518%" y="837" width="0.0621%" height="15" fill="rgb(218,65,53)" fg:x="48052" fg:w="171"/><text x="17.7018%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (171 samples, 0.06%)</title><rect x="17.4518%" y="821" width="0.0621%" height="15" fill="rgb(221,84,29)" fg:x="48052" fg:w="171"/><text x="17.7018%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (171 samples, 0.06%)</title><rect x="17.4518%" y="805" width="0.0621%" height="15" fill="rgb(234,0,32)" fg:x="48052" fg:w="171"/><text x="17.7018%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (171 samples, 0.06%)</title><rect x="17.4518%" y="789" width="0.0621%" height="15" fill="rgb(206,20,16)" fg:x="48052" fg:w="171"/><text x="17.7018%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (171 samples, 0.06%)</title><rect x="17.4518%" y="773" width="0.0621%" height="15" fill="rgb(244,172,18)" fg:x="48052" fg:w="171"/><text x="17.7018%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (171 samples, 0.06%)</title><rect x="17.4518%" y="757" width="0.0621%" height="15" fill="rgb(254,133,1)" fg:x="48052" fg:w="171"/><text x="17.7018%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (171 samples, 0.06%)</title><rect x="17.4518%" y="741" width="0.0621%" height="15" fill="rgb(222,206,41)" fg:x="48052" fg:w="171"/><text x="17.7018%" y="751.50"></text></g><g><title>alloc::alloc::alloc (171 samples, 0.06%)</title><rect x="17.4518%" y="725" width="0.0621%" height="15" fill="rgb(212,3,42)" fg:x="48052" fg:w="171"/><text x="17.7018%" y="735.50"></text></g><g><title>malloc (170 samples, 0.06%)</title><rect x="17.4522%" y="709" width="0.0617%" height="15" fill="rgb(241,11,4)" fg:x="48053" fg:w="170"/><text x="17.7022%" y="719.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::fix_left_border (51 samples, 0.02%)</title><rect x="17.5150%" y="869" width="0.0185%" height="15" fill="rgb(205,19,26)" fg:x="48226" fg:w="51"/><text x="17.7650%" y="879.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::fix_left_border_of_left_edge (51 samples, 0.02%)</title><rect x="17.5150%" y="853" width="0.0185%" height="15" fill="rgb(210,179,32)" fg:x="48226" fg:w="51"/><text x="17.7650%" y="863.50"></text></g><g><title>alloc::collections::btree::fix::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::fix_left_child (51 samples, 0.02%)</title><rect x="17.5150%" y="837" width="0.0185%" height="15" fill="rgb(227,116,49)" fg:x="48226" fg:w="51"/><text x="17.7650%" y="847.50"></text></g><g><title>alloc::collections::btree::node::BalancingContext&lt;K,V&gt;::merge_tracking_child (36 samples, 0.01%)</title><rect x="17.5205%" y="821" width="0.0131%" height="15" fill="rgb(211,146,6)" fg:x="48241" fg:w="36"/><text x="17.7705%" y="831.50"></text></g><g><title>alloc::collections::btree::split::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::split_off (79 samples, 0.03%)</title><rect x="17.5150%" y="885" width="0.0287%" height="15" fill="rgb(219,44,39)" fg:x="48226" fg:w="79"/><text x="17.7650%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (80 samples, 0.03%)</title><rect x="17.5150%" y="901" width="0.0291%" height="15" fill="rgb(234,128,11)" fg:x="48226" fg:w="80"/><text x="17.7650%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (53 samples, 0.02%)</title><rect x="17.5441%" y="901" width="0.0192%" height="15" fill="rgb(220,183,53)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (53 samples, 0.02%)</title><rect x="17.5441%" y="885" width="0.0192%" height="15" fill="rgb(213,219,32)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (53 samples, 0.02%)</title><rect x="17.5441%" y="869" width="0.0192%" height="15" fill="rgb(232,156,16)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (53 samples, 0.02%)</title><rect x="17.5441%" y="853" width="0.0192%" height="15" fill="rgb(246,135,34)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (53 samples, 0.02%)</title><rect x="17.5441%" y="837" width="0.0192%" height="15" fill="rgb(241,99,0)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (53 samples, 0.02%)</title><rect x="17.5441%" y="821" width="0.0192%" height="15" fill="rgb(222,103,45)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="831.50"></text></g><g><title>alloc::alloc::realloc (53 samples, 0.02%)</title><rect x="17.5441%" y="805" width="0.0192%" height="15" fill="rgb(212,57,4)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="815.50"></text></g><g><title>realloc (53 samples, 0.02%)</title><rect x="17.5441%" y="789" width="0.0192%" height="15" fill="rgb(215,68,47)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="799.50"></text></g><g><title>[libc.so.6] (53 samples, 0.02%)</title><rect x="17.5441%" y="773" width="0.0192%" height="15" fill="rgb(230,84,2)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="783.50"></text></g><g><title>[libc.so.6] (53 samples, 0.02%)</title><rect x="17.5441%" y="757" width="0.0192%" height="15" fill="rgb(220,102,14)" fg:x="48306" fg:w="53"/><text x="17.7941%" y="767.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::entry (439 samples, 0.16%)</title><rect x="17.5738%" y="869" width="0.1594%" height="15" fill="rgb(240,10,32)" fg:x="48388" fg:w="439"/><text x="17.8238%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (421 samples, 0.15%)</title><rect x="17.5804%" y="853" width="0.1529%" height="15" fill="rgb(215,47,27)" fg:x="48406" fg:w="421"/><text x="17.8304%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (395 samples, 0.14%)</title><rect x="17.5898%" y="837" width="0.1435%" height="15" fill="rgb(233,188,43)" fg:x="48432" fg:w="395"/><text x="17.8398%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (395 samples, 0.14%)</title><rect x="17.5898%" y="821" width="0.1435%" height="15" fill="rgb(253,190,1)" fg:x="48432" fg:w="395"/><text x="17.8398%" y="831.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (203 samples, 0.07%)</title><rect x="17.6596%" y="805" width="0.0737%" height="15" fill="rgb(206,114,52)" fg:x="48624" fg:w="203"/><text x="17.9096%" y="815.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (158 samples, 0.06%)</title><rect x="17.6759%" y="789" width="0.0574%" height="15" fill="rgb(233,120,37)" fg:x="48669" fg:w="158"/><text x="17.9259%" y="799.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (158 samples, 0.06%)</title><rect x="17.6759%" y="773" width="0.0574%" height="15" fill="rgb(214,52,39)" fg:x="48669" fg:w="158"/><text x="17.9259%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (158 samples, 0.06%)</title><rect x="17.6759%" y="757" width="0.0574%" height="15" fill="rgb(223,80,29)" fg:x="48669" fg:w="158"/><text x="17.9259%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (87 samples, 0.03%)</title><rect x="17.7017%" y="741" width="0.0316%" height="15" fill="rgb(230,101,40)" fg:x="48740" fg:w="87"/><text x="17.9517%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (480 samples, 0.17%)</title><rect x="17.5633%" y="885" width="0.1743%" height="15" fill="rgb(219,211,8)" fg:x="48359" fg:w="480"/><text x="17.8133%" y="895.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_entry (110 samples, 0.04%)</title><rect x="17.7376%" y="853" width="0.0400%" height="15" fill="rgb(252,126,28)" fg:x="48839" fg:w="110"/><text x="17.9876%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V&gt;::remove_kv (110 samples, 0.04%)</title><rect x="17.7376%" y="837" width="0.0400%" height="15" fill="rgb(215,56,38)" fg:x="48839" fg:w="110"/><text x="17.9876%" y="847.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (44 samples, 0.02%)</title><rect x="17.7616%" y="821" width="0.0160%" height="15" fill="rgb(249,55,44)" fg:x="48905" fg:w="44"/><text x="18.0116%" y="831.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::Ord&gt;::cmp (111 samples, 0.04%)</title><rect x="17.8811%" y="789" width="0.0403%" height="15" fill="rgb(220,221,32)" fg:x="49234" fg:w="111"/><text x="18.1311%" y="799.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::Ord&gt;::cmp (111 samples, 0.04%)</title><rect x="17.8811%" y="773" width="0.0403%" height="15" fill="rgb(212,216,41)" fg:x="49234" fg:w="111"/><text x="18.1311%" y="783.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (111 samples, 0.04%)</title><rect x="17.8811%" y="757" width="0.0403%" height="15" fill="rgb(228,213,43)" fg:x="49234" fg:w="111"/><text x="18.1311%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (66 samples, 0.02%)</title><rect x="17.8974%" y="741" width="0.0240%" height="15" fill="rgb(211,31,26)" fg:x="49279" fg:w="66"/><text x="18.1474%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove (517 samples, 0.19%)</title><rect x="17.7376%" y="885" width="0.1878%" height="15" fill="rgb(229,202,19)" fg:x="48839" fg:w="517"/><text x="17.9876%" y="895.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::remove_entry (517 samples, 0.19%)</title><rect x="17.7376%" y="869" width="0.1878%" height="15" fill="rgb(229,105,46)" fg:x="48839" fg:w="517"/><text x="17.9876%" y="879.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (407 samples, 0.15%)</title><rect x="17.7776%" y="853" width="0.1478%" height="15" fill="rgb(235,108,1)" fg:x="48949" fg:w="407"/><text x="18.0276%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (365 samples, 0.13%)</title><rect x="17.7928%" y="837" width="0.1326%" height="15" fill="rgb(245,111,35)" fg:x="48991" fg:w="365"/><text x="18.0428%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (365 samples, 0.13%)</title><rect x="17.7928%" y="821" width="0.1326%" height="15" fill="rgb(219,185,31)" fg:x="48991" fg:w="365"/><text x="18.0428%" y="831.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (K,L)&gt;::cmp (136 samples, 0.05%)</title><rect x="17.8760%" y="805" width="0.0494%" height="15" fill="rgb(214,4,43)" fg:x="49220" fg:w="136"/><text x="18.1260%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (195 samples, 0.07%)</title><rect x="18.0148%" y="853" width="0.0708%" height="15" fill="rgb(235,227,40)" fg:x="49602" fg:w="195"/><text x="18.2648%" y="863.50"></text></g><g><title>core::ptr::read (195 samples, 0.07%)</title><rect x="18.0148%" y="837" width="0.0708%" height="15" fill="rgb(230,88,30)" fg:x="49602" fg:w="195"/><text x="18.2648%" y="847.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,466 samples, 0.90%)</title><rect x="17.1972%" y="1237" width="0.8956%" height="15" fill="rgb(216,217,1)" fg:x="47351" fg:w="2466"/><text x="17.4472%" y="1247.50"></text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1221" width="0.8876%" height="15" fill="rgb(248,139,50)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1231.50"></text></g><g><title>async_std::task::block_on::block_on (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1205" width="0.8876%" height="15" fill="rgb(233,1,21)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1189" width="0.8876%" height="15" fill="rgb(215,183,12)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1173" width="0.8876%" height="15" fill="rgb(229,104,42)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1157" width="0.8876%" height="15" fill="rgb(243,34,48)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1167.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1141" width="0.8876%" height="15" fill="rgb(239,11,44)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1125" width="0.8876%" height="15" fill="rgb(231,98,35)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1109" width="0.8876%" height="15" fill="rgb(233,28,25)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1093" width="0.8876%" height="15" fill="rgb(234,123,11)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1077" width="0.8876%" height="15" fill="rgb(220,69,3)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1061" width="0.8876%" height="15" fill="rgb(214,64,36)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1045" width="0.8876%" height="15" fill="rgb(211,138,32)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1029" width="0.8876%" height="15" fill="rgb(213,118,47)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,444 samples, 0.89%)</title><rect x="17.2052%" y="1013" width="0.8876%" height="15" fill="rgb(243,124,49)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1023.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (2,444 samples, 0.89%)</title><rect x="17.2052%" y="997" width="0.8876%" height="15" fill="rgb(221,30,28)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="1007.50"></text></g><g><title>async_global_executor::reactor::block_on (2,444 samples, 0.89%)</title><rect x="17.2052%" y="981" width="0.8876%" height="15" fill="rgb(246,37,13)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="991.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,444 samples, 0.89%)</title><rect x="17.2052%" y="965" width="0.8876%" height="15" fill="rgb(249,66,14)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="975.50"></text></g><g><title>async_io::driver::block_on (2,444 samples, 0.89%)</title><rect x="17.2052%" y="949" width="0.8876%" height="15" fill="rgb(213,166,5)" fg:x="47373" fg:w="2444"/><text x="17.4552%" y="959.50"></text></g><g><title>async_io::reactor::ReactorLock::react (1,594 samples, 0.58%)</title><rect x="17.5139%" y="933" width="0.5789%" height="15" fill="rgb(221,66,24)" fg:x="48223" fg:w="1594"/><text x="17.7639%" y="943.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (1,594 samples, 0.58%)</title><rect x="17.5139%" y="917" width="0.5789%" height="15" fill="rgb(210,132,17)" fg:x="48223" fg:w="1594"/><text x="17.7639%" y="927.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (1,458 samples, 0.53%)</title><rect x="17.5633%" y="901" width="0.5295%" height="15" fill="rgb(243,202,5)" fg:x="48359" fg:w="1458"/><text x="17.8133%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (461 samples, 0.17%)</title><rect x="17.9254%" y="885" width="0.1674%" height="15" fill="rgb(233,70,48)" fg:x="49356" fg:w="461"/><text x="18.1754%" y="895.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (461 samples, 0.17%)</title><rect x="17.9254%" y="869" width="0.1674%" height="15" fill="rgb(238,41,26)" fg:x="49356" fg:w="461"/><text x="18.1754%" y="879.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (135 samples, 0.05%)</title><rect x="18.3718%" y="581" width="0.0490%" height="15" fill="rgb(241,19,31)" fg:x="50585" fg:w="135"/><text x="18.6218%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (133 samples, 0.05%)</title><rect x="18.3725%" y="565" width="0.0483%" height="15" fill="rgb(214,76,10)" fg:x="50587" fg:w="133"/><text x="18.6225%" y="575.50"></text></g><g><title>async_io::reactor::Reactor::get (155 samples, 0.06%)</title><rect x="18.4219%" y="581" width="0.0563%" height="15" fill="rgb(254,202,22)" fg:x="50723" fg:w="155"/><text x="18.6719%" y="591.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (155 samples, 0.06%)</title><rect x="18.4219%" y="565" width="0.0563%" height="15" fill="rgb(214,72,24)" fg:x="50723" fg:w="155"/><text x="18.6719%" y="575.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (155 samples, 0.06%)</title><rect x="18.4219%" y="549" width="0.0563%" height="15" fill="rgb(221,92,46)" fg:x="50723" fg:w="155"/><text x="18.6719%" y="559.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (155 samples, 0.06%)</title><rect x="18.4219%" y="533" width="0.0563%" height="15" fill="rgb(246,13,50)" fg:x="50723" fg:w="155"/><text x="18.6719%" y="543.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (155 samples, 0.06%)</title><rect x="18.4219%" y="517" width="0.0563%" height="15" fill="rgb(240,165,38)" fg:x="50723" fg:w="155"/><text x="18.6719%" y="527.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (155 samples, 0.06%)</title><rect x="18.4219%" y="501" width="0.0563%" height="15" fill="rgb(241,24,51)" fg:x="50723" fg:w="155"/><text x="18.6719%" y="511.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (153 samples, 0.06%)</title><rect x="18.4226%" y="485" width="0.0556%" height="15" fill="rgb(227,51,44)" fg:x="50725" fg:w="153"/><text x="18.6726%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (36 samples, 0.01%)</title><rect x="18.4840%" y="565" width="0.0131%" height="15" fill="rgb(231,121,3)" fg:x="50894" fg:w="36"/><text x="18.7340%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (36 samples, 0.01%)</title><rect x="18.4840%" y="549" width="0.0131%" height="15" fill="rgb(245,3,41)" fg:x="50894" fg:w="36"/><text x="18.7340%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::notify (532 samples, 0.19%)</title><rect x="18.4971%" y="565" width="0.1932%" height="15" fill="rgb(214,13,26)" fg:x="50930" fg:w="532"/><text x="18.7471%" y="575.50"></text></g><g><title>polling::Poller::notify (526 samples, 0.19%)</title><rect x="18.4992%" y="549" width="0.1910%" height="15" fill="rgb(252,75,11)" fg:x="50936" fg:w="526"/><text x="18.7492%" y="559.50"></text></g><g><title>polling::epoll::Poller::notify (242 samples, 0.09%)</title><rect x="18.6024%" y="533" width="0.0879%" height="15" fill="rgb(218,226,17)" fg:x="51220" fg:w="242"/><text x="18.8524%" y="543.50"></text></g><g><title>write (236 samples, 0.09%)</title><rect x="18.6046%" y="517" width="0.0857%" height="15" fill="rgb(248,89,38)" fg:x="51226" fg:w="236"/><text x="18.8546%" y="527.50"></text></g><g><title>[unknown] (211 samples, 0.08%)</title><rect x="18.6136%" y="501" width="0.0766%" height="15" fill="rgb(237,73,46)" fg:x="51251" fg:w="211"/><text x="18.8636%" y="511.50"></text></g><g><title>[unknown] (209 samples, 0.08%)</title><rect x="18.6144%" y="485" width="0.0759%" height="15" fill="rgb(242,78,33)" fg:x="51253" fg:w="209"/><text x="18.8644%" y="495.50"></text></g><g><title>[unknown] (206 samples, 0.07%)</title><rect x="18.6155%" y="469" width="0.0748%" height="15" fill="rgb(235,60,3)" fg:x="51256" fg:w="206"/><text x="18.8655%" y="479.50"></text></g><g><title>[unknown] (196 samples, 0.07%)</title><rect x="18.6191%" y="453" width="0.0712%" height="15" fill="rgb(216,172,19)" fg:x="51266" fg:w="196"/><text x="18.8691%" y="463.50"></text></g><g><title>[unknown] (175 samples, 0.06%)</title><rect x="18.6267%" y="437" width="0.0636%" height="15" fill="rgb(227,6,42)" fg:x="51287" fg:w="175"/><text x="18.8767%" y="447.50"></text></g><g><title>[unknown] (116 samples, 0.04%)</title><rect x="18.6481%" y="421" width="0.0421%" height="15" fill="rgb(223,207,42)" fg:x="51346" fg:w="116"/><text x="18.8981%" y="431.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="18.6645%" y="405" width="0.0258%" height="15" fill="rgb(246,138,30)" fg:x="51391" fg:w="71"/><text x="18.9145%" y="415.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="18.6790%" y="389" width="0.0113%" height="15" fill="rgb(251,199,47)" fg:x="51431" fg:w="31"/><text x="18.9290%" y="399.50"></text></g><g><title>__sched_yield (120 samples, 0.04%)</title><rect x="19.0680%" y="533" width="0.0436%" height="15" fill="rgb(228,218,44)" fg:x="52502" fg:w="120"/><text x="19.3180%" y="543.50"></text></g><g><title>[unknown] (120 samples, 0.04%)</title><rect x="19.0680%" y="517" width="0.0436%" height="15" fill="rgb(220,68,6)" fg:x="52502" fg:w="120"/><text x="19.3180%" y="527.50"></text></g><g><title>[unknown] (118 samples, 0.04%)</title><rect x="19.0687%" y="501" width="0.0429%" height="15" fill="rgb(240,60,26)" fg:x="52504" fg:w="118"/><text x="19.3187%" y="511.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="19.0698%" y="485" width="0.0418%" height="15" fill="rgb(211,200,19)" fg:x="52507" fg:w="115"/><text x="19.3198%" y="495.50"></text></g><g><title>[unknown] (115 samples, 0.04%)</title><rect x="19.0698%" y="469" width="0.0418%" height="15" fill="rgb(242,145,30)" fg:x="52507" fg:w="115"/><text x="19.3198%" y="479.50"></text></g><g><title>[unknown] (105 samples, 0.04%)</title><rect x="19.0734%" y="453" width="0.0381%" height="15" fill="rgb(225,64,13)" fg:x="52517" fg:w="105"/><text x="19.3234%" y="463.50"></text></g><g><title>[unknown] (88 samples, 0.03%)</title><rect x="19.0796%" y="437" width="0.0320%" height="15" fill="rgb(218,103,35)" fg:x="52534" fg:w="88"/><text x="19.3296%" y="447.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="19.0912%" y="421" width="0.0203%" height="15" fill="rgb(216,93,46)" fg:x="52566" fg:w="56"/><text x="19.3412%" y="431.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,157 samples, 0.42%)</title><rect x="18.6997%" y="565" width="0.4202%" height="15" fill="rgb(225,159,27)" fg:x="51488" fg:w="1157"/><text x="18.9497%" y="575.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,056 samples, 0.38%)</title><rect x="18.7364%" y="549" width="0.3835%" height="15" fill="rgb(225,204,11)" fg:x="51589" fg:w="1056"/><text x="18.9864%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (326 samples, 0.12%)</title><rect x="19.1214%" y="565" width="0.1184%" height="15" fill="rgb(205,56,4)" fg:x="52649" fg:w="326"/><text x="19.3714%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (326 samples, 0.12%)</title><rect x="19.1214%" y="549" width="0.1184%" height="15" fill="rgb(206,6,35)" fg:x="52649" fg:w="326"/><text x="19.3714%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (2,098 samples, 0.76%)</title><rect x="18.4782%" y="581" width="0.7620%" height="15" fill="rgb(247,73,52)" fg:x="50878" fg:w="2098"/><text x="18.7282%" y="591.50"></text></g><g><title>async_io::reactor::Reactor::process_timer_ops (55 samples, 0.02%)</title><rect x="19.2489%" y="565" width="0.0200%" height="15" fill="rgb(246,97,4)" fg:x="53000" fg:w="55"/><text x="19.4989%" y="575.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="19.7915%" y="533" width="0.0167%" height="15" fill="rgb(212,37,15)" fg:x="54494" fg:w="46"/><text x="20.0415%" y="543.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="19.7922%" y="517" width="0.0160%" height="15" fill="rgb(208,130,40)" fg:x="54496" fg:w="44"/><text x="20.0422%" y="527.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="19.7929%" y="501" width="0.0153%" height="15" fill="rgb(236,55,29)" fg:x="54498" fg:w="42"/><text x="20.0429%" y="511.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="19.7944%" y="485" width="0.0138%" height="15" fill="rgb(209,156,45)" fg:x="54502" fg:w="38"/><text x="20.0444%" y="495.50"></text></g><g><title>__sched_yield (219 samples, 0.08%)</title><rect x="19.8082%" y="533" width="0.0795%" height="15" fill="rgb(249,107,4)" fg:x="54540" fg:w="219"/><text x="20.0582%" y="543.50"></text></g><g><title>[unknown] (212 samples, 0.08%)</title><rect x="19.8107%" y="517" width="0.0770%" height="15" fill="rgb(227,7,13)" fg:x="54547" fg:w="212"/><text x="20.0607%" y="527.50"></text></g><g><title>[unknown] (212 samples, 0.08%)</title><rect x="19.8107%" y="501" width="0.0770%" height="15" fill="rgb(250,129,14)" fg:x="54547" fg:w="212"/><text x="20.0607%" y="511.50"></text></g><g><title>[unknown] (210 samples, 0.08%)</title><rect x="19.8114%" y="485" width="0.0763%" height="15" fill="rgb(229,92,13)" fg:x="54549" fg:w="210"/><text x="20.0614%" y="495.50"></text></g><g><title>[unknown] (205 samples, 0.07%)</title><rect x="19.8132%" y="469" width="0.0745%" height="15" fill="rgb(245,98,39)" fg:x="54554" fg:w="205"/><text x="20.0632%" y="479.50"></text></g><g><title>[unknown] (192 samples, 0.07%)</title><rect x="19.8180%" y="453" width="0.0697%" height="15" fill="rgb(234,135,48)" fg:x="54567" fg:w="192"/><text x="20.0680%" y="463.50"></text></g><g><title>[unknown] (159 samples, 0.06%)</title><rect x="19.8300%" y="437" width="0.0577%" height="15" fill="rgb(230,98,28)" fg:x="54600" fg:w="159"/><text x="20.0800%" y="447.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="19.8481%" y="421" width="0.0396%" height="15" fill="rgb(223,121,0)" fg:x="54650" fg:w="109"/><text x="20.0981%" y="431.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="19.8710%" y="405" width="0.0167%" height="15" fill="rgb(234,173,33)" fg:x="54713" fg:w="46"/><text x="20.1210%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (39 samples, 0.01%)</title><rect x="19.8877%" y="533" width="0.0142%" height="15" fill="rgb(245,47,8)" fg:x="54759" fg:w="39"/><text x="20.1377%" y="543.50"></text></g><g><title>core::ptr::write (39 samples, 0.01%)</title><rect x="19.8877%" y="517" width="0.0142%" height="15" fill="rgb(205,17,20)" fg:x="54759" fg:w="39"/><text x="20.1377%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,748 samples, 0.63%)</title><rect x="19.2688%" y="565" width="0.6348%" height="15" fill="rgb(232,151,16)" fg:x="53055" fg:w="1748"/><text x="19.5188%" y="575.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1,596 samples, 0.58%)</title><rect x="19.3240%" y="549" width="0.5796%" height="15" fill="rgb(208,30,32)" fg:x="53207" fg:w="1596"/><text x="19.5740%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (1,851 samples, 0.67%)</title><rect x="19.2401%" y="581" width="0.6723%" height="15" fill="rgb(254,26,3)" fg:x="52976" fg:w="1851"/><text x="19.4901%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (47 samples, 0.02%)</title><rect x="19.9211%" y="581" width="0.0171%" height="15" fill="rgb(240,177,30)" fg:x="54851" fg:w="47"/><text x="20.1711%" y="591.50"></text></g><g><title>core::mem::replace (47 samples, 0.02%)</title><rect x="19.9211%" y="565" width="0.0171%" height="15" fill="rgb(248,76,44)" fg:x="54851" fg:w="47"/><text x="20.1711%" y="575.50"></text></g><g><title>core::ptr::read (46 samples, 0.02%)</title><rect x="19.9215%" y="549" width="0.0167%" height="15" fill="rgb(241,186,54)" fg:x="54852" fg:w="46"/><text x="20.1715%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(usize,core::task::wake::Waker)&gt;&gt; (143 samples, 0.05%)</title><rect x="19.9382%" y="581" width="0.0519%" height="15" fill="rgb(249,171,29)" fg:x="54898" fg:w="143"/><text x="20.1882%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (142 samples, 0.05%)</title><rect x="19.9385%" y="565" width="0.0516%" height="15" fill="rgb(237,151,44)" fg:x="54899" fg:w="142"/><text x="20.1885%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (142 samples, 0.05%)</title><rect x="19.9385%" y="549" width="0.0516%" height="15" fill="rgb(228,174,30)" fg:x="54899" fg:w="142"/><text x="20.1885%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (142 samples, 0.05%)</title><rect x="19.9385%" y="533" width="0.0516%" height="15" fill="rgb(252,14,37)" fg:x="54899" fg:w="142"/><text x="20.1885%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (138 samples, 0.05%)</title><rect x="19.9400%" y="517" width="0.0501%" height="15" fill="rgb(207,111,40)" fg:x="54903" fg:w="138"/><text x="20.1900%" y="527.50"></text></g><g><title>[[vdso]] (227 samples, 0.08%)</title><rect x="20.1888%" y="501" width="0.0824%" height="15" fill="rgb(248,171,54)" fg:x="55588" fg:w="227"/><text x="20.4388%" y="511.50"></text></g><g><title>clock_gettime (716 samples, 0.26%)</title><rect x="20.0141%" y="533" width="0.2600%" height="15" fill="rgb(211,127,2)" fg:x="55107" fg:w="716"/><text x="20.2641%" y="543.50"></text></g><g><title>__vdso_clock_gettime (582 samples, 0.21%)</title><rect x="20.0628%" y="517" width="0.2114%" height="15" fill="rgb(236,87,47)" fg:x="55241" fg:w="582"/><text x="20.3128%" y="527.50"></text></g><g><title>std::time::Instant::now (785 samples, 0.29%)</title><rect x="19.9905%" y="581" width="0.2851%" height="15" fill="rgb(223,190,45)" fg:x="55042" fg:w="785"/><text x="20.2405%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (738 samples, 0.27%)</title><rect x="20.0076%" y="565" width="0.2680%" height="15" fill="rgb(215,5,16)" fg:x="55089" fg:w="738"/><text x="20.2576%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (738 samples, 0.27%)</title><rect x="20.0076%" y="549" width="0.2680%" height="15" fill="rgb(252,82,33)" fg:x="55089" fg:w="738"/><text x="20.2576%" y="559.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (5,701 samples, 2.07%)</title><rect x="18.2265%" y="597" width="2.0705%" height="15" fill="rgb(247,213,44)" fg:x="50185" fg:w="5701"/><text x="18.4765%" y="607.50">&lt;..</text></g><g><title>std::time::SystemTime::checked_add (59 samples, 0.02%)</title><rect x="20.2756%" y="581" width="0.0214%" height="15" fill="rgb(205,196,44)" fg:x="55827" fg:w="59"/><text x="20.5256%" y="591.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (5,772 samples, 2.10%)</title><rect x="18.2011%" y="613" width="2.0963%" height="15" fill="rgb(237,96,54)" fg:x="50115" fg:w="5772"/><text x="18.4511%" y="623.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (89 samples, 0.03%)</title><rect x="20.2974%" y="613" width="0.0323%" height="15" fill="rgb(230,113,34)" fg:x="55887" fg:w="89"/><text x="20.5474%" y="623.50"></text></g><g><title>async_std::future::pending::pending::{{closure}} (76 samples, 0.03%)</title><rect x="20.3021%" y="597" width="0.0276%" height="15" fill="rgb(221,224,12)" fg:x="55900" fg:w="76"/><text x="20.5521%" y="607.50"></text></g><g><title>__rdl_alloc (60 samples, 0.02%)</title><rect x="20.3431%" y="357" width="0.0218%" height="15" fill="rgb(219,112,44)" fg:x="56013" fg:w="60"/><text x="20.5931%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (690 samples, 0.25%)</title><rect x="20.3406%" y="453" width="0.2506%" height="15" fill="rgb(210,31,13)" fg:x="56006" fg:w="690"/><text x="20.5906%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (690 samples, 0.25%)</title><rect x="20.3406%" y="437" width="0.2506%" height="15" fill="rgb(230,25,16)" fg:x="56006" fg:w="690"/><text x="20.5906%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (690 samples, 0.25%)</title><rect x="20.3406%" y="421" width="0.2506%" height="15" fill="rgb(246,108,53)" fg:x="56006" fg:w="690"/><text x="20.5906%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (690 samples, 0.25%)</title><rect x="20.3406%" y="405" width="0.2506%" height="15" fill="rgb(241,172,50)" fg:x="56006" fg:w="690"/><text x="20.5906%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (690 samples, 0.25%)</title><rect x="20.3406%" y="389" width="0.2506%" height="15" fill="rgb(235,141,10)" fg:x="56006" fg:w="690"/><text x="20.5906%" y="399.50"></text></g><g><title>alloc::alloc::alloc (688 samples, 0.25%)</title><rect x="20.3413%" y="373" width="0.2499%" height="15" fill="rgb(220,174,43)" fg:x="56008" fg:w="688"/><text x="20.5913%" y="383.50"></text></g><g><title>malloc (604 samples, 0.22%)</title><rect x="20.3718%" y="357" width="0.2194%" height="15" fill="rgb(215,181,40)" fg:x="56092" fg:w="604"/><text x="20.6218%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (757 samples, 0.27%)</title><rect x="20.3406%" y="565" width="0.2749%" height="15" fill="rgb(230,97,2)" fg:x="56006" fg:w="757"/><text x="20.5906%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (757 samples, 0.27%)</title><rect x="20.3406%" y="549" width="0.2749%" height="15" fill="rgb(211,25,27)" fg:x="56006" fg:w="757"/><text x="20.5906%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (757 samples, 0.27%)</title><rect x="20.3406%" y="533" width="0.2749%" height="15" fill="rgb(230,87,26)" fg:x="56006" fg:w="757"/><text x="20.5906%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (757 samples, 0.27%)</title><rect x="20.3406%" y="517" width="0.2749%" height="15" fill="rgb(227,160,17)" fg:x="56006" fg:w="757"/><text x="20.5906%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (757 samples, 0.27%)</title><rect x="20.3406%" y="501" width="0.2749%" height="15" fill="rgb(244,85,34)" fg:x="56006" fg:w="757"/><text x="20.5906%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (757 samples, 0.27%)</title><rect x="20.3406%" y="485" width="0.2749%" height="15" fill="rgb(207,70,0)" fg:x="56006" fg:w="757"/><text x="20.5906%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (757 samples, 0.27%)</title><rect x="20.3406%" y="469" width="0.2749%" height="15" fill="rgb(223,129,7)" fg:x="56006" fg:w="757"/><text x="20.5906%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (67 samples, 0.02%)</title><rect x="20.5912%" y="453" width="0.0243%" height="15" fill="rgb(246,105,7)" fg:x="56696" fg:w="67"/><text x="20.8412%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (67 samples, 0.02%)</title><rect x="20.5912%" y="437" width="0.0243%" height="15" fill="rgb(215,154,42)" fg:x="56696" fg:w="67"/><text x="20.8412%" y="447.50"></text></g><g><title>[libc.so.6] (67 samples, 0.02%)</title><rect x="20.5912%" y="421" width="0.0243%" height="15" fill="rgb(220,215,30)" fg:x="56696" fg:w="67"/><text x="20.8412%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (955 samples, 0.35%)</title><rect x="20.3355%" y="597" width="0.3468%" height="15" fill="rgb(228,81,51)" fg:x="55992" fg:w="955"/><text x="20.5855%" y="607.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (941 samples, 0.34%)</title><rect x="20.3406%" y="581" width="0.3418%" height="15" fill="rgb(247,71,54)" fg:x="56006" fg:w="941"/><text x="20.5906%" y="591.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (184 samples, 0.07%)</title><rect x="20.6155%" y="565" width="0.0668%" height="15" fill="rgb(234,176,34)" fg:x="56763" fg:w="184"/><text x="20.8655%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (180 samples, 0.07%)</title><rect x="20.6170%" y="549" width="0.0654%" height="15" fill="rgb(241,103,54)" fg:x="56767" fg:w="180"/><text x="20.8670%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (179 samples, 0.07%)</title><rect x="20.6173%" y="533" width="0.0650%" height="15" fill="rgb(228,22,34)" fg:x="56768" fg:w="179"/><text x="20.8673%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (179 samples, 0.07%)</title><rect x="20.6173%" y="517" width="0.0650%" height="15" fill="rgb(241,179,48)" fg:x="56768" fg:w="179"/><text x="20.8673%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (179 samples, 0.07%)</title><rect x="20.6173%" y="501" width="0.0650%" height="15" fill="rgb(235,167,37)" fg:x="56768" fg:w="179"/><text x="20.8673%" y="511.50"></text></g><g><title>alloc::alloc::alloc (178 samples, 0.06%)</title><rect x="20.6177%" y="485" width="0.0646%" height="15" fill="rgb(213,109,30)" fg:x="56769" fg:w="178"/><text x="20.8677%" y="495.50"></text></g><g><title>malloc (170 samples, 0.06%)</title><rect x="20.6206%" y="469" width="0.0617%" height="15" fill="rgb(222,172,16)" fg:x="56777" fg:w="170"/><text x="20.8706%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (204 samples, 0.07%)</title><rect x="20.7067%" y="581" width="0.0741%" height="15" fill="rgb(233,192,5)" fg:x="57014" fg:w="204"/><text x="20.9567%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (174 samples, 0.06%)</title><rect x="20.7176%" y="565" width="0.0632%" height="15" fill="rgb(247,189,41)" fg:x="57044" fg:w="174"/><text x="20.9676%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (172 samples, 0.06%)</title><rect x="20.7183%" y="549" width="0.0625%" height="15" fill="rgb(218,134,47)" fg:x="57046" fg:w="172"/><text x="20.9683%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (172 samples, 0.06%)</title><rect x="20.7183%" y="533" width="0.0625%" height="15" fill="rgb(216,29,3)" fg:x="57046" fg:w="172"/><text x="20.9683%" y="543.50"></text></g><g><title>alloc::alloc::alloc (172 samples, 0.06%)</title><rect x="20.7183%" y="517" width="0.0625%" height="15" fill="rgb(246,140,12)" fg:x="57046" fg:w="172"/><text x="20.9683%" y="527.50"></text></g><g><title>malloc (148 samples, 0.05%)</title><rect x="20.7270%" y="501" width="0.0538%" height="15" fill="rgb(230,136,11)" fg:x="57070" fg:w="148"/><text x="20.9770%" y="511.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (7,111 samples, 2.58%)</title><rect x="18.1985%" y="629" width="2.5826%" height="15" fill="rgb(247,22,47)" fg:x="50108" fg:w="7111"/><text x="18.4485%" y="639.50">&lt;a..</text></g><g><title>std::io::error::Error::new (1,236 samples, 0.45%)</title><rect x="20.3322%" y="613" width="0.4489%" height="15" fill="rgb(218,84,22)" fg:x="55983" fg:w="1236"/><text x="20.5822%" y="623.50"></text></g><g><title>std::io::error::Error::_new (272 samples, 0.10%)</title><rect x="20.6824%" y="597" width="0.0988%" height="15" fill="rgb(216,87,39)" fg:x="56947" fg:w="272"/><text x="20.9324%" y="607.50"></text></g><g><title>[[vdso]] (129 samples, 0.05%)</title><rect x="20.9747%" y="517" width="0.0469%" height="15" fill="rgb(221,178,8)" fg:x="57752" fg:w="129"/><text x="21.2247%" y="527.50"></text></g><g><title>clock_gettime (450 samples, 0.16%)</title><rect x="20.8592%" y="549" width="0.1634%" height="15" fill="rgb(230,42,11)" fg:x="57434" fg:w="450"/><text x="21.1092%" y="559.50"></text></g><g><title>__vdso_clock_gettime (302 samples, 0.11%)</title><rect x="20.9130%" y="533" width="0.1097%" height="15" fill="rgb(237,229,4)" fg:x="57582" fg:w="302"/><text x="21.1630%" y="543.50"></text></g><g><title>async_std::utils::timer_after (668 samples, 0.24%)</title><rect x="20.7815%" y="629" width="0.2426%" height="15" fill="rgb(222,31,33)" fg:x="57220" fg:w="668"/><text x="21.0315%" y="639.50"></text></g><g><title>async_io::Timer::after (610 samples, 0.22%)</title><rect x="20.8026%" y="613" width="0.2215%" height="15" fill="rgb(210,17,39)" fg:x="57278" fg:w="610"/><text x="21.0526%" y="623.50"></text></g><g><title>std::time::Instant::now (505 samples, 0.18%)</title><rect x="20.8407%" y="597" width="0.1834%" height="15" fill="rgb(244,93,20)" fg:x="57383" fg:w="505"/><text x="21.0907%" y="607.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (454 samples, 0.16%)</title><rect x="20.8592%" y="581" width="0.1649%" height="15" fill="rgb(210,40,47)" fg:x="57434" fg:w="454"/><text x="21.1092%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (454 samples, 0.16%)</title><rect x="20.8592%" y="565" width="0.1649%" height="15" fill="rgb(239,211,47)" fg:x="57434" fg:w="454"/><text x="21.1092%" y="575.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (58 samples, 0.02%)</title><rect x="21.0248%" y="597" width="0.0211%" height="15" fill="rgb(251,223,49)" fg:x="57890" fg:w="58"/><text x="21.2748%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (52 samples, 0.02%)</title><rect x="21.0270%" y="581" width="0.0189%" height="15" fill="rgb(221,149,5)" fg:x="57896" fg:w="52"/><text x="21.2770%" y="591.50"></text></g><g><title>core::mem::replace (52 samples, 0.02%)</title><rect x="21.0270%" y="565" width="0.0189%" height="15" fill="rgb(219,224,51)" fg:x="57896" fg:w="52"/><text x="21.2770%" y="575.50"></text></g><g><title>core::ptr::read (51 samples, 0.02%)</title><rect x="21.0274%" y="549" width="0.0185%" height="15" fill="rgb(223,7,8)" fg:x="57897" fg:w="51"/><text x="21.2774%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,996 samples, 2.90%)</title><rect x="18.1430%" y="661" width="2.9040%" height="15" fill="rgb(241,217,22)" fg:x="49955" fg:w="7996"/><text x="18.3930%" y="671.50">&lt;c..</text></g><g><title>async_std::io::timeout::timeout::{{closure}} (7,993 samples, 2.90%)</title><rect x="18.1440%" y="645" width="2.9029%" height="15" fill="rgb(248,209,0)" fg:x="49958" fg:w="7993"/><text x="18.3940%" y="655.50">as..</text></g><g><title>core::ptr::drop_in_place&lt;async_std::io::timeout::Timeout&lt;core::future::from_generator::GenFuture&lt;async_std::future::pending::pending&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt;::{{closure}}&gt;,()&gt;&gt; (63 samples, 0.02%)</title><rect x="21.0241%" y="629" width="0.0229%" height="15" fill="rgb(217,205,4)" fg:x="57888" fg:w="63"/><text x="21.2741%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (63 samples, 0.02%)</title><rect x="21.0241%" y="613" width="0.0229%" height="15" fill="rgb(228,124,39)" fg:x="57888" fg:w="63"/><text x="21.2741%" y="623.50"></text></g><g><title>[libc.so.6] (37 samples, 0.01%)</title><rect x="21.0695%" y="629" width="0.0134%" height="15" fill="rgb(250,116,42)" fg:x="58013" fg:w="37"/><text x="21.3195%" y="639.50"></text></g><g><title>cfree (83 samples, 0.03%)</title><rect x="21.0532%" y="645" width="0.0301%" height="15" fill="rgb(223,202,9)" fg:x="57968" fg:w="83"/><text x="21.3032%" y="655.50"></text></g><g><title>[libc.so.6] (33 samples, 0.01%)</title><rect x="21.1222%" y="469" width="0.0120%" height="15" fill="rgb(242,222,40)" fg:x="58158" fg:w="33"/><text x="21.3722%" y="479.50"></text></g><g><title>alloc::alloc::box_free (74 samples, 0.03%)</title><rect x="21.1076%" y="533" width="0.0269%" height="15" fill="rgb(229,99,46)" fg:x="58118" fg:w="74"/><text x="21.3576%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (73 samples, 0.03%)</title><rect x="21.1080%" y="517" width="0.0265%" height="15" fill="rgb(225,56,46)" fg:x="58119" fg:w="73"/><text x="21.3580%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (71 samples, 0.03%)</title><rect x="21.1087%" y="501" width="0.0258%" height="15" fill="rgb(227,94,5)" fg:x="58121" fg:w="71"/><text x="21.3587%" y="511.50"></text></g><g><title>cfree (62 samples, 0.02%)</title><rect x="21.1120%" y="485" width="0.0225%" height="15" fill="rgb(205,112,38)" fg:x="58130" fg:w="62"/><text x="21.3620%" y="495.50"></text></g><g><title>[libc.so.6] (38 samples, 0.01%)</title><rect x="21.2424%" y="517" width="0.0138%" height="15" fill="rgb(231,133,46)" fg:x="58489" fg:w="38"/><text x="21.4924%" y="527.50"></text></g><g><title>cfree (338 samples, 0.12%)</title><rect x="21.1345%" y="533" width="0.1228%" height="15" fill="rgb(217,16,9)" fg:x="58192" fg:w="338"/><text x="21.3845%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::ErrorData&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt;&gt; (597 samples, 0.22%)</title><rect x="21.0895%" y="597" width="0.2168%" height="15" fill="rgb(249,173,9)" fg:x="58068" fg:w="597"/><text x="21.3395%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt; (597 samples, 0.22%)</title><rect x="21.0895%" y="581" width="0.2168%" height="15" fill="rgb(205,163,53)" fg:x="58068" fg:w="597"/><text x="21.3395%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Custom&gt; (589 samples, 0.21%)</title><rect x="21.0924%" y="565" width="0.2139%" height="15" fill="rgb(217,54,41)" fg:x="58076" fg:w="589"/><text x="21.3424%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt; (589 samples, 0.21%)</title><rect x="21.0924%" y="549" width="0.2139%" height="15" fill="rgb(228,216,12)" fg:x="58076" fg:w="589"/><text x="21.3424%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::error::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from::StringError&gt; (135 samples, 0.05%)</title><rect x="21.2573%" y="533" width="0.0490%" height="15" fill="rgb(244,228,15)" fg:x="58530" fg:w="135"/><text x="21.5073%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (135 samples, 0.05%)</title><rect x="21.2573%" y="517" width="0.0490%" height="15" fill="rgb(221,176,53)" fg:x="58530" fg:w="135"/><text x="21.5073%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (135 samples, 0.05%)</title><rect x="21.2573%" y="501" width="0.0490%" height="15" fill="rgb(205,94,34)" fg:x="58530" fg:w="135"/><text x="21.5073%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (135 samples, 0.05%)</title><rect x="21.2573%" y="485" width="0.0490%" height="15" fill="rgb(213,110,48)" fg:x="58530" fg:w="135"/><text x="21.5073%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.05%)</title><rect x="21.2573%" y="469" width="0.0490%" height="15" fill="rgb(236,142,28)" fg:x="58530" fg:w="135"/><text x="21.5073%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (59 samples, 0.02%)</title><rect x="21.2849%" y="453" width="0.0214%" height="15" fill="rgb(225,135,29)" fg:x="58606" fg:w="59"/><text x="21.5349%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,838 samples, 3.21%)</title><rect x="18.0979%" y="693" width="3.2098%" height="15" fill="rgb(252,45,31)" fg:x="49831" fg:w="8838"/><text x="18.3479%" y="703.50">&lt;co..</text></g><g><title>async_std::task::sleep::sleep::{{closure}} (8,819 samples, 3.20%)</title><rect x="18.1048%" y="677" width="3.2029%" height="15" fill="rgb(211,187,50)" fg:x="49850" fg:w="8819"/><text x="18.3548%" y="687.50">asy..</text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (716 samples, 0.26%)</title><rect x="21.0477%" y="661" width="0.2600%" height="15" fill="rgb(229,109,7)" fg:x="57953" fg:w="716"/><text x="21.2977%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (618 samples, 0.22%)</title><rect x="21.0833%" y="645" width="0.2244%" height="15" fill="rgb(251,131,51)" fg:x="58051" fg:w="618"/><text x="21.3333%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (601 samples, 0.22%)</title><rect x="21.0895%" y="629" width="0.2183%" height="15" fill="rgb(251,180,35)" fg:x="58068" fg:w="601"/><text x="21.3395%" y="639.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (601 samples, 0.22%)</title><rect x="21.0895%" y="613" width="0.2183%" height="15" fill="rgb(211,46,32)" fg:x="58068" fg:w="601"/><text x="21.3395%" y="623.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as core::convert::AsRef&lt;zenoh_buffers::wbuf::WBuf&gt;&gt;::as_ref (37 samples, 0.01%)</title><rect x="21.3386%" y="645" width="0.0134%" height="15" fill="rgb(248,123,17)" fg:x="58754" fg:w="37"/><text x="21.5886%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (279 samples, 0.10%)</title><rect x="21.3524%" y="613" width="0.1013%" height="15" fill="rgb(227,141,18)" fg:x="58792" fg:w="279"/><text x="21.6024%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (612 samples, 0.22%)</title><rect x="21.3524%" y="645" width="0.2223%" height="15" fill="rgb(216,102,9)" fg:x="58792" fg:w="612"/><text x="21.6024%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (612 samples, 0.22%)</title><rect x="21.3524%" y="629" width="0.2223%" height="15" fill="rgb(253,47,13)" fg:x="58792" fg:w="612"/><text x="21.6024%" y="639.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (333 samples, 0.12%)</title><rect x="21.4538%" y="613" width="0.1209%" height="15" fill="rgb(226,93,23)" fg:x="59071" fg:w="333"/><text x="21.7038%" y="623.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (330 samples, 0.12%)</title><rect x="21.4549%" y="597" width="0.1199%" height="15" fill="rgb(247,104,17)" fg:x="59074" fg:w="330"/><text x="21.7049%" y="607.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::is_empty (685 samples, 0.25%)</title><rect x="21.3263%" y="677" width="0.2488%" height="15" fill="rgb(233,203,26)" fg:x="58720" fg:w="685"/><text x="21.5763%" y="687.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (684 samples, 0.25%)</title><rect x="21.3266%" y="661" width="0.2484%" height="15" fill="rgb(244,98,49)" fg:x="58721" fg:w="684"/><text x="21.5766%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (42 samples, 0.02%)</title><rect x="21.5823%" y="661" width="0.0153%" height="15" fill="rgb(235,134,22)" fg:x="59425" fg:w="42"/><text x="21.8323%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (42 samples, 0.02%)</title><rect x="21.5823%" y="645" width="0.0153%" height="15" fill="rgb(221,70,32)" fg:x="59425" fg:w="42"/><text x="21.8323%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9,710 samples, 3.53%)</title><rect x="18.0943%" y="725" width="3.5265%" height="15" fill="rgb(238,15,50)" fg:x="49821" fg:w="9710"/><text x="18.3443%" y="735.50">&lt;co..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (9,700 samples, 3.52%)</title><rect x="18.0979%" y="709" width="3.5229%" height="15" fill="rgb(215,221,48)" fg:x="49831" fg:w="9700"/><text x="18.3479%" y="719.50">zen..</text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (861 samples, 0.31%)</title><rect x="21.3081%" y="693" width="0.3127%" height="15" fill="rgb(236,73,3)" fg:x="58670" fg:w="861"/><text x="21.5581%" y="703.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::write_len (126 samples, 0.05%)</title><rect x="21.5751%" y="677" width="0.0458%" height="15" fill="rgb(250,107,11)" fg:x="59405" fg:w="126"/><text x="21.8251%" y="687.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (40 samples, 0.01%)</title><rect x="21.6063%" y="661" width="0.0145%" height="15" fill="rgb(242,39,14)" fg:x="59491" fg:w="40"/><text x="21.8563%" y="671.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (119 samples, 0.04%)</title><rect x="21.6601%" y="709" width="0.0432%" height="15" fill="rgb(248,164,37)" fg:x="59639" fg:w="119"/><text x="21.9101%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (113 samples, 0.04%)</title><rect x="21.6622%" y="693" width="0.0410%" height="15" fill="rgb(217,60,12)" fg:x="59645" fg:w="113"/><text x="21.9122%" y="703.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (96 samples, 0.03%)</title><rect x="21.7044%" y="709" width="0.0349%" height="15" fill="rgb(240,125,29)" fg:x="59761" fg:w="96"/><text x="21.9544%" y="719.50"></text></g><g><title>core::mem::replace (96 samples, 0.03%)</title><rect x="21.7044%" y="693" width="0.0349%" height="15" fill="rgb(208,207,28)" fg:x="59761" fg:w="96"/><text x="21.9544%" y="703.50"></text></g><g><title>core::ptr::read (90 samples, 0.03%)</title><rect x="21.7065%" y="677" width="0.0327%" height="15" fill="rgb(209,159,27)" fg:x="59767" fg:w="90"/><text x="21.9565%" y="687.50"></text></g><g><title>core::mem::drop (41 samples, 0.01%)</title><rect x="21.7436%" y="709" width="0.0149%" height="15" fill="rgb(251,176,53)" fg:x="59869" fg:w="41"/><text x="21.9936%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (41 samples, 0.01%)</title><rect x="21.7436%" y="693" width="0.0149%" height="15" fill="rgb(211,85,7)" fg:x="59869" fg:w="41"/><text x="21.9936%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.01%)</title><rect x="21.7458%" y="677" width="0.0127%" height="15" fill="rgb(216,64,54)" fg:x="59875" fg:w="35"/><text x="21.9958%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="21.7458%" y="661" width="0.0127%" height="15" fill="rgb(217,54,24)" fg:x="59875" fg:w="35"/><text x="21.9958%" y="671.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.01%)</title><rect x="21.7476%" y="645" width="0.0109%" height="15" fill="rgb(208,206,53)" fg:x="59880" fg:w="30"/><text x="21.9976%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (30 samples, 0.01%)</title><rect x="21.7476%" y="629" width="0.0109%" height="15" fill="rgb(251,74,39)" fg:x="59880" fg:w="30"/><text x="21.9976%" y="639.50"></text></g><g><title>std::sys::unix::futex::futex_wait (69 samples, 0.03%)</title><rect x="21.8689%" y="629" width="0.0251%" height="15" fill="rgb(226,47,5)" fg:x="60214" fg:w="69"/><text x="22.1189%" y="639.50"></text></g><g><title>syscall (66 samples, 0.02%)</title><rect x="21.8700%" y="613" width="0.0240%" height="15" fill="rgb(234,111,33)" fg:x="60217" fg:w="66"/><text x="22.1200%" y="623.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="21.8703%" y="597" width="0.0236%" height="15" fill="rgb(251,14,10)" fg:x="60218" fg:w="65"/><text x="22.1203%" y="607.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="21.8703%" y="581" width="0.0236%" height="15" fill="rgb(232,43,0)" fg:x="60218" fg:w="65"/><text x="22.1203%" y="591.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="21.8703%" y="565" width="0.0236%" height="15" fill="rgb(222,68,43)" fg:x="60218" fg:w="65"/><text x="22.1203%" y="575.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="21.8711%" y="549" width="0.0229%" height="15" fill="rgb(217,24,23)" fg:x="60220" fg:w="63"/><text x="22.1211%" y="559.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="21.8711%" y="533" width="0.0229%" height="15" fill="rgb(229,209,14)" fg:x="60220" fg:w="63"/><text x="22.1211%" y="543.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="21.8725%" y="517" width="0.0214%" height="15" fill="rgb(250,149,48)" fg:x="60224" fg:w="59"/><text x="22.1225%" y="527.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="21.8725%" y="501" width="0.0214%" height="15" fill="rgb(210,120,37)" fg:x="60224" fg:w="59"/><text x="22.1225%" y="511.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="21.8783%" y="485" width="0.0156%" height="15" fill="rgb(210,21,8)" fg:x="60240" fg:w="43"/><text x="22.1283%" y="495.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="21.8827%" y="469" width="0.0113%" height="15" fill="rgb(243,145,7)" fg:x="60252" fg:w="31"/><text x="22.1327%" y="479.50"></text></g><g><title>event_listener::Inner::lock (482 samples, 0.18%)</title><rect x="21.7646%" y="709" width="0.1751%" height="15" fill="rgb(238,178,32)" fg:x="59927" fg:w="482"/><text x="22.0146%" y="719.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (481 samples, 0.17%)</title><rect x="21.7650%" y="693" width="0.1747%" height="15" fill="rgb(222,4,10)" fg:x="59928" fg:w="481"/><text x="22.0150%" y="703.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (478 samples, 0.17%)</title><rect x="21.7661%" y="677" width="0.1736%" height="15" fill="rgb(239,7,37)" fg:x="59931" fg:w="478"/><text x="22.0161%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (478 samples, 0.17%)</title><rect x="21.7661%" y="661" width="0.1736%" height="15" fill="rgb(215,31,37)" fg:x="59931" fg:w="478"/><text x="22.0161%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (197 samples, 0.07%)</title><rect x="21.8682%" y="645" width="0.0715%" height="15" fill="rgb(224,83,33)" fg:x="60212" fg:w="197"/><text x="22.1182%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (126 samples, 0.05%)</title><rect x="21.8939%" y="629" width="0.0458%" height="15" fill="rgb(239,55,3)" fg:x="60283" fg:w="126"/><text x="22.1439%" y="639.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (989 samples, 0.36%)</title><rect x="21.6208%" y="725" width="0.3592%" height="15" fill="rgb(247,92,11)" fg:x="59531" fg:w="989"/><text x="21.8708%" y="735.50"></text></g><g><title>event_listener::List::remove (111 samples, 0.04%)</title><rect x="21.9397%" y="709" width="0.0403%" height="15" fill="rgb(239,200,7)" fg:x="60409" fg:w="111"/><text x="22.1897%" y="719.50"></text></g><g><title>event_listener::State::is_notified (37 samples, 0.01%)</title><rect x="21.9666%" y="693" width="0.0134%" height="15" fill="rgb(227,115,8)" fg:x="60483" fg:w="37"/><text x="22.2166%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (51 samples, 0.02%)</title><rect x="21.9942%" y="693" width="0.0185%" height="15" fill="rgb(215,189,27)" fg:x="60559" fg:w="51"/><text x="22.2442%" y="703.50"></text></g><g><title>event_listener::Event::inner (28 samples, 0.01%)</title><rect x="22.0167%" y="693" width="0.0102%" height="15" fill="rgb(251,216,39)" fg:x="60621" fg:w="28"/><text x="22.2667%" y="703.50"></text></g><g><title>zenoh_sync::condition::Condition::waiter (161 samples, 0.06%)</title><rect x="21.9811%" y="725" width="0.0585%" height="15" fill="rgb(207,29,47)" fg:x="60523" fg:w="161"/><text x="22.2311%" y="735.50"></text></g><g><title>event_listener::Event::listen (161 samples, 0.06%)</title><rect x="21.9811%" y="709" width="0.0585%" height="15" fill="rgb(210,71,34)" fg:x="60523" fg:w="161"/><text x="22.2311%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::front_mut (60 samples, 0.02%)</title><rect x="22.0443%" y="709" width="0.0218%" height="15" fill="rgb(253,217,51)" fg:x="60697" fg:w="60"/><text x="22.2943%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::get_mut (60 samples, 0.02%)</title><rect x="22.0443%" y="693" width="0.0218%" height="15" fill="rgb(222,117,46)" fg:x="60697" fg:w="60"/><text x="22.2943%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (60 samples, 0.02%)</title><rect x="22.0443%" y="677" width="0.0218%" height="15" fill="rgb(226,132,6)" fg:x="60697" fg:w="60"/><text x="22.2943%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,490 samples, 0.54%)</title><rect x="22.1242%" y="645" width="0.5411%" height="15" fill="rgb(254,145,51)" fg:x="60917" fg:w="1490"/><text x="22.3742%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (2,736 samples, 0.99%)</title><rect x="22.1242%" y="677" width="0.9937%" height="15" fill="rgb(231,199,27)" fg:x="60917" fg:w="2736"/><text x="22.3742%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,736 samples, 0.99%)</title><rect x="22.1242%" y="661" width="0.9937%" height="15" fill="rgb(245,158,14)" fg:x="60917" fg:w="2736"/><text x="22.3742%" y="671.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (1,246 samples, 0.45%)</title><rect x="22.6653%" y="645" width="0.4525%" height="15" fill="rgb(240,113,14)" fg:x="62407" fg:w="1246"/><text x="22.9153%" y="655.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (1,244 samples, 0.45%)</title><rect x="22.6661%" y="629" width="0.4518%" height="15" fill="rgb(210,20,13)" fg:x="62409" fg:w="1244"/><text x="22.9161%" y="639.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (13,840 samples, 5.03%)</title><rect x="18.0928%" y="773" width="5.0265%" height="15" fill="rgb(241,144,13)" fg:x="49817" fg:w="13840"/><text x="18.3428%" y="783.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,836 samples, 5.03%)</title><rect x="18.0943%" y="757" width="5.0250%" height="15" fill="rgb(235,43,34)" fg:x="49821" fg:w="13836"/><text x="18.3443%" y="767.50">&lt;core:..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (13,836 samples, 5.03%)</title><rect x="18.0943%" y="741" width="5.0250%" height="15" fill="rgb(208,36,20)" fg:x="49821" fg:w="13836"/><text x="18.3443%" y="751.50">zenoh_..</text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (2,973 samples, 1.08%)</title><rect x="22.0396%" y="725" width="1.0798%" height="15" fill="rgb(239,204,10)" fg:x="60684" fg:w="2973"/><text x="22.2896%" y="735.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::is_empty (2,900 samples, 1.05%)</title><rect x="22.0661%" y="709" width="1.0532%" height="15" fill="rgb(217,84,43)" fg:x="60757" fg:w="2900"/><text x="22.3161%" y="719.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (2,892 samples, 1.05%)</title><rect x="22.0690%" y="693" width="1.0503%" height="15" fill="rgb(241,170,50)" fg:x="60765" fg:w="2892"/><text x="22.3190%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1141" width="5.0348%" height="15" fill="rgb(226,205,29)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1151.50">&lt;core:..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1125" width="5.0348%" height="15" fill="rgb(233,113,1)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1135.50">async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1109" width="5.0348%" height="15" fill="rgb(253,98,13)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1119.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1093" width="5.0348%" height="15" fill="rgb(211,115,12)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1103.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1077" width="5.0348%" height="15" fill="rgb(208,12,16)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1087.50">&lt;futur..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1061" width="5.0348%" height="15" fill="rgb(237,193,54)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1071.50">&lt;async..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1045" width="5.0348%" height="15" fill="rgb(243,22,42)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1055.50">async_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1029" width="5.0348%" height="15" fill="rgb(233,151,36)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1039.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13,863 samples, 5.03%)</title><rect x="18.0928%" y="1013" width="5.0348%" height="15" fill="rgb(237,57,45)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1023.50">std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="997" width="5.0348%" height="15" fill="rgb(221,88,17)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="1007.50">async_..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="981" width="5.0348%" height="15" fill="rgb(230,79,15)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="991.50">&lt;async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="965" width="5.0348%" height="15" fill="rgb(213,57,13)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="975.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="949" width="5.0348%" height="15" fill="rgb(222,116,39)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="959.50">async_..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="933" width="5.0348%" height="15" fill="rgb(245,107,2)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="943.50">&lt;futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="917" width="5.0348%" height="15" fill="rgb(238,1,10)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="927.50">&lt;core:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="901" width="5.0348%" height="15" fill="rgb(249,4,48)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="911.50">async_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13,863 samples, 5.03%)</title><rect x="18.0928%" y="885" width="5.0348%" height="15" fill="rgb(223,151,18)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="895.50">async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="869" width="5.0348%" height="15" fill="rgb(227,65,43)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="879.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="853" width="5.0348%" height="15" fill="rgb(218,40,45)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="863.50">async_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="837" width="5.0348%" height="15" fill="rgb(252,121,31)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="847.50">&lt;core:..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="821" width="5.0348%" height="15" fill="rgb(219,158,43)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="831.50">zenoh_..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13,863 samples, 5.03%)</title><rect x="18.0928%" y="805" width="5.0348%" height="15" fill="rgb(231,162,42)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="815.50">&lt;core:..</text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (13,863 samples, 5.03%)</title><rect x="18.0928%" y="789" width="5.0348%" height="15" fill="rgb(217,179,25)" fg:x="49817" fg:w="13863"/><text x="18.3428%" y="799.50">zenoh_..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (13,868 samples, 5.04%)</title><rect x="18.0928%" y="1205" width="5.0367%" height="15" fill="rgb(206,212,31)" fg:x="49817" fg:w="13868"/><text x="18.3428%" y="1215.50">async_..</text></g><g><title>async_global_executor::reactor::block_on (13,868 samples, 5.04%)</title><rect x="18.0928%" y="1189" width="5.0367%" height="15" fill="rgb(235,144,12)" fg:x="49817" fg:w="13868"/><text x="18.3428%" y="1199.50">async_..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (13,868 samples, 5.04%)</title><rect x="18.0928%" y="1173" width="5.0367%" height="15" fill="rgb(213,51,10)" fg:x="49817" fg:w="13868"/><text x="18.3428%" y="1183.50">async_..</text></g><g><title>async_io::driver::block_on (13,868 samples, 5.04%)</title><rect x="18.0928%" y="1157" width="5.0367%" height="15" fill="rgb(231,145,14)" fg:x="49817" fg:w="13868"/><text x="18.3428%" y="1167.50">async_..</text></g><g><title>zenoh_buffers::zbuf::ZBuf::copy_bytes (101 samples, 0.04%)</title><rect x="23.1473%" y="613" width="0.0367%" height="15" fill="rgb(235,15,28)" fg:x="63734" fg:w="101"/><text x="23.3973%" y="623.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::as_slice (28 samples, 0.01%)</title><rect x="23.1738%" y="597" width="0.0102%" height="15" fill="rgb(237,206,10)" fg:x="63807" fg:w="28"/><text x="23.4238%" y="607.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_exact (137 samples, 0.05%)</title><rect x="23.1375%" y="629" width="0.0498%" height="15" fill="rgb(236,227,27)" fg:x="63707" fg:w="137"/><text x="23.3875%" y="639.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;usize,R&gt;&gt;::read (51 samples, 0.02%)</title><rect x="23.1876%" y="629" width="0.0185%" height="15" fill="rgb(246,83,35)" fg:x="63845" fg:w="51"/><text x="23.4376%" y="639.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (47 samples, 0.02%)</title><rect x="23.1891%" y="613" width="0.0171%" height="15" fill="rgb(220,136,24)" fg:x="63849" fg:w="47"/><text x="23.4391%" y="623.50"></text></g><g><title>[libc.so.6] (138 samples, 0.05%)</title><rect x="23.2508%" y="501" width="0.0501%" height="15" fill="rgb(217,3,25)" fg:x="64019" fg:w="138"/><text x="23.5008%" y="511.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;u8&gt;,R&gt;&gt;::read (473 samples, 0.17%)</title><rect x="23.1295%" y="645" width="0.1718%" height="15" fill="rgb(239,24,14)" fg:x="63685" fg:w="473"/><text x="23.3795%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (262 samples, 0.10%)</title><rect x="23.2061%" y="629" width="0.0952%" height="15" fill="rgb(244,16,53)" fg:x="63896" fg:w="262"/><text x="23.4561%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (262 samples, 0.10%)</title><rect x="23.2061%" y="613" width="0.0952%" height="15" fill="rgb(208,175,44)" fg:x="63896" fg:w="262"/><text x="23.4561%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (262 samples, 0.10%)</title><rect x="23.2061%" y="597" width="0.0952%" height="15" fill="rgb(252,18,48)" fg:x="63896" fg:w="262"/><text x="23.4561%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (262 samples, 0.10%)</title><rect x="23.2061%" y="581" width="0.0952%" height="15" fill="rgb(234,199,32)" fg:x="63896" fg:w="262"/><text x="23.4561%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (262 samples, 0.10%)</title><rect x="23.2061%" y="565" width="0.0952%" height="15" fill="rgb(225,77,54)" fg:x="63896" fg:w="262"/><text x="23.4561%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (262 samples, 0.10%)</title><rect x="23.2061%" y="549" width="0.0952%" height="15" fill="rgb(225,42,25)" fg:x="63896" fg:w="262"/><text x="23.4561%" y="559.50"></text></g><g><title>alloc::alloc::alloc (261 samples, 0.09%)</title><rect x="23.2065%" y="533" width="0.0948%" height="15" fill="rgb(242,227,46)" fg:x="63897" fg:w="261"/><text x="23.4565%" y="543.50"></text></g><g><title>malloc (242 samples, 0.09%)</title><rect x="23.2134%" y="517" width="0.0879%" height="15" fill="rgb(246,197,35)" fg:x="63916" fg:w="242"/><text x="23.4634%" y="527.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::string::String,R&gt;&gt;::read (521 samples, 0.19%)</title><rect x="23.1295%" y="661" width="0.1892%" height="15" fill="rgb(215,159,26)" fg:x="63685" fg:w="521"/><text x="23.3795%" y="671.50"></text></g><g><title>alloc::string::String::from_utf8 (48 samples, 0.02%)</title><rect x="23.3013%" y="645" width="0.0174%" height="15" fill="rgb(212,194,50)" fg:x="64158" fg:w="48"/><text x="23.5513%" y="655.50"></text></g><g><title>core::str::converts::from_utf8 (48 samples, 0.02%)</title><rect x="23.3013%" y="629" width="0.0174%" height="15" fill="rgb(246,132,1)" fg:x="64158" fg:w="48"/><text x="23.5513%" y="639.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (28 samples, 0.01%)</title><rect x="23.3431%" y="485" width="0.0102%" height="15" fill="rgb(217,71,7)" fg:x="64273" fg:w="28"/><text x="23.5931%" y="495.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.02%)</title><rect x="23.3376%" y="517" width="0.0185%" height="15" fill="rgb(252,59,32)" fg:x="64258" fg:w="51"/><text x="23.5876%" y="527.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (51 samples, 0.02%)</title><rect x="23.3376%" y="501" width="0.0185%" height="15" fill="rgb(253,204,25)" fg:x="64258" fg:w="51"/><text x="23.5876%" y="511.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (31 samples, 0.01%)</title><rect x="23.3692%" y="453" width="0.0113%" height="15" fill="rgb(232,21,16)" fg:x="64345" fg:w="31"/><text x="23.6192%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (172 samples, 0.06%)</title><rect x="23.3187%" y="597" width="0.0625%" height="15" fill="rgb(248,90,29)" fg:x="64206" fg:w="172"/><text x="23.5687%" y="607.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (172 samples, 0.06%)</title><rect x="23.3187%" y="581" width="0.0625%" height="15" fill="rgb(249,223,7)" fg:x="64206" fg:w="172"/><text x="23.5687%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (155 samples, 0.06%)</title><rect x="23.3249%" y="565" width="0.0563%" height="15" fill="rgb(231,119,42)" fg:x="64223" fg:w="155"/><text x="23.5749%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (155 samples, 0.06%)</title><rect x="23.3249%" y="549" width="0.0563%" height="15" fill="rgb(215,41,35)" fg:x="64223" fg:w="155"/><text x="23.5749%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (120 samples, 0.04%)</title><rect x="23.3376%" y="533" width="0.0436%" height="15" fill="rgb(220,44,45)" fg:x="64258" fg:w="120"/><text x="23.5876%" y="543.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (69 samples, 0.03%)</title><rect x="23.3561%" y="517" width="0.0251%" height="15" fill="rgb(253,197,36)" fg:x="64309" fg:w="69"/><text x="23.6061%" y="527.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str::{{closure}} (69 samples, 0.03%)</title><rect x="23.3561%" y="501" width="0.0251%" height="15" fill="rgb(245,225,54)" fg:x="64309" fg:w="69"/><text x="23.6061%" y="511.50"></text></g><g><title>zenoh_protocol_core::split_once (68 samples, 0.02%)</title><rect x="23.3565%" y="485" width="0.0247%" height="15" fill="rgb(239,94,37)" fg:x="64310" fg:w="68"/><text x="23.6065%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (39 samples, 0.01%)</title><rect x="23.3670%" y="469" width="0.0142%" height="15" fill="rgb(242,217,10)" fg:x="64339" fg:w="39"/><text x="23.6170%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (174 samples, 0.06%)</title><rect x="23.3187%" y="613" width="0.0632%" height="15" fill="rgb(250,193,7)" fg:x="64206" fg:w="174"/><text x="23.5687%" y="623.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (193 samples, 0.07%)</title><rect x="23.3187%" y="645" width="0.0701%" height="15" fill="rgb(230,104,19)" fg:x="64206" fg:w="193"/><text x="23.5687%" y="655.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::ArcProperties as core::str::traits::FromStr&gt;::from_str (193 samples, 0.07%)</title><rect x="23.3187%" y="629" width="0.0701%" height="15" fill="rgb(230,181,4)" fg:x="64206" fg:w="193"/><text x="23.5687%" y="639.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (822 samples, 0.30%)</title><rect x="23.1295%" y="869" width="0.2985%" height="15" fill="rgb(216,219,49)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (822 samples, 0.30%)</title><rect x="23.1295%" y="853" width="0.2985%" height="15" fill="rgb(254,144,0)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (822 samples, 0.30%)</title><rect x="23.1295%" y="837" width="0.2985%" height="15" fill="rgb(205,209,38)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (822 samples, 0.30%)</title><rect x="23.1295%" y="821" width="0.2985%" height="15" fill="rgb(240,21,42)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="831.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (822 samples, 0.30%)</title><rect x="23.1295%" y="805" width="0.2985%" height="15" fill="rgb(241,132,3)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="815.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (822 samples, 0.30%)</title><rect x="23.1295%" y="789" width="0.2985%" height="15" fill="rgb(225,14,2)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="799.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (822 samples, 0.30%)</title><rect x="23.1295%" y="773" width="0.2985%" height="15" fill="rgb(210,141,35)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="783.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (822 samples, 0.30%)</title><rect x="23.1295%" y="757" width="0.2985%" height="15" fill="rgb(251,14,44)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="767.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (822 samples, 0.30%)</title><rect x="23.1295%" y="741" width="0.2985%" height="15" fill="rgb(247,48,18)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="751.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state (822 samples, 0.30%)</title><rect x="23.1295%" y="725" width="0.2985%" height="15" fill="rgb(225,0,40)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="735.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::io::codec::ZBufCodec&gt;::read_locators (822 samples, 0.30%)</title><rect x="23.1295%" y="709" width="0.2985%" height="15" fill="rgb(221,31,33)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="719.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;,R&gt;&gt;::read (822 samples, 0.30%)</title><rect x="23.1295%" y="693" width="0.2985%" height="15" fill="rgb(237,42,40)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="703.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Decoder&lt;zenoh_protocol_core::locators::Locator,R&gt;&gt;::read (822 samples, 0.30%)</title><rect x="23.1295%" y="677" width="0.2985%" height="15" fill="rgb(233,51,29)" fg:x="63685" fg:w="822"/><text x="23.3795%" y="687.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::convert::TryFrom&lt;alloc::string::String&gt;&gt;::try_from (301 samples, 0.11%)</title><rect x="23.3187%" y="661" width="0.1093%" height="15" fill="rgb(226,58,20)" fg:x="64206" fg:w="301"/><text x="23.5687%" y="671.50"></text></g><g><title>zenoh_protocol_core::split_once (108 samples, 0.04%)</title><rect x="23.3888%" y="645" width="0.0392%" height="15" fill="rgb(208,98,7)" fg:x="64399" fg:w="108"/><text x="23.6388%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (108 samples, 0.04%)</title><rect x="23.3888%" y="629" width="0.0392%" height="15" fill="rgb(228,143,44)" fg:x="64399" fg:w="108"/><text x="23.6388%" y="639.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (108 samples, 0.04%)</title><rect x="23.3888%" y="613" width="0.0392%" height="15" fill="rgb(246,55,38)" fg:x="64399" fg:w="108"/><text x="23.6388%" y="623.50"></text></g><g><title>core::slice::memchr::memchr (82 samples, 0.03%)</title><rect x="23.3983%" y="597" width="0.0298%" height="15" fill="rgb(247,87,16)" fg:x="64425" fg:w="82"/><text x="23.6483%" y="607.50"></text></g><g><title>core::slice::memchr::memchr_general_case (78 samples, 0.03%)</title><rect x="23.3997%" y="581" width="0.0283%" height="15" fill="rgb(234,129,42)" fg:x="64429" fg:w="78"/><text x="23.6497%" y="591.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (68 samples, 0.02%)</title><rect x="23.4280%" y="741" width="0.0247%" height="15" fill="rgb(220,82,16)" fg:x="64507" fg:w="68"/><text x="23.6780%" y="751.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf::{{closure}} (30 samples, 0.01%)</title><rect x="23.4538%" y="645" width="0.0109%" height="15" fill="rgb(211,88,4)" fg:x="64578" fg:w="30"/><text x="23.7038%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (31 samples, 0.01%)</title><rect x="23.4538%" y="661" width="0.0113%" height="15" fill="rgb(248,151,21)" fg:x="64578" fg:w="31"/><text x="23.7038%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (38 samples, 0.01%)</title><rect x="23.4538%" y="709" width="0.0138%" height="15" fill="rgb(238,163,6)" fg:x="64578" fg:w="38"/><text x="23.7038%" y="719.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf::{{closure}} (38 samples, 0.01%)</title><rect x="23.4538%" y="693" width="0.0138%" height="15" fill="rgb(209,183,11)" fg:x="64578" fg:w="38"/><text x="23.7038%" y="703.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::read_shmbuf (38 samples, 0.01%)</title><rect x="23.4538%" y="677" width="0.0138%" height="15" fill="rgb(219,37,20)" fg:x="64578" fg:w="38"/><text x="23.7038%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (145 samples, 0.05%)</title><rect x="23.4280%" y="773" width="0.0527%" height="15" fill="rgb(210,158,4)" fg:x="64507" fg:w="145"/><text x="23.6780%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (145 samples, 0.05%)</title><rect x="23.4280%" y="757" width="0.0527%" height="15" fill="rgb(221,167,53)" fg:x="64507" fg:w="145"/><text x="23.6780%" y="767.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (77 samples, 0.03%)</title><rect x="23.4527%" y="741" width="0.0280%" height="15" fill="rgb(237,151,45)" fg:x="64575" fg:w="77"/><text x="23.7027%" y="751.50"></text></g><g><title>zenoh_buffers::zslice::ZSlice::map_to_shmbuf (74 samples, 0.03%)</title><rect x="23.4538%" y="725" width="0.0269%" height="15" fill="rgb(231,39,3)" fg:x="64578" fg:w="74"/><text x="23.7038%" y="735.50"></text></g><g><title>zenoh_buffers::shm::SharedMemoryReader::try_read_shmbuf (32 samples, 0.01%)</title><rect x="23.4691%" y="709" width="0.0116%" height="15" fill="rgb(212,167,28)" fg:x="64620" fg:w="32"/><text x="23.7191%" y="719.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (157 samples, 0.06%)</title><rect x="23.4280%" y="789" width="0.0570%" height="15" fill="rgb(232,178,8)" fg:x="64507" fg:w="157"/><text x="23.6780%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (203 samples, 0.07%)</title><rect x="23.4280%" y="805" width="0.0737%" height="15" fill="rgb(225,151,20)" fg:x="64507" fg:w="203"/><text x="23.6780%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,028 samples, 0.37%)</title><rect x="23.1295%" y="885" width="0.3734%" height="15" fill="rgb(238,3,37)" fg:x="63685" fg:w="1028"/><text x="23.3795%" y="895.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (206 samples, 0.07%)</title><rect x="23.4280%" y="869" width="0.0748%" height="15" fill="rgb(251,147,42)" fg:x="64507" fg:w="206"/><text x="23.6780%" y="879.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (206 samples, 0.07%)</title><rect x="23.4280%" y="853" width="0.0748%" height="15" fill="rgb(208,173,10)" fg:x="64507" fg:w="206"/><text x="23.6780%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (206 samples, 0.07%)</title><rect x="23.4280%" y="837" width="0.0748%" height="15" fill="rgb(246,225,4)" fg:x="64507" fg:w="206"/><text x="23.6780%" y="847.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (206 samples, 0.07%)</title><rect x="23.4280%" y="821" width="0.0748%" height="15" fill="rgb(248,102,6)" fg:x="64507" fg:w="206"/><text x="23.6780%" y="831.50"></text></g><g><title>polling::Poller::add (109 samples, 0.04%)</title><rect x="23.5112%" y="565" width="0.0396%" height="15" fill="rgb(232,6,21)" fg:x="64736" fg:w="109"/><text x="23.7612%" y="575.50"></text></g><g><title>polling::epoll::Poller::add (109 samples, 0.04%)</title><rect x="23.5112%" y="549" width="0.0396%" height="15" fill="rgb(221,179,22)" fg:x="64736" fg:w="109"/><text x="23.7612%" y="559.50"></text></g><g><title>polling::epoll::Poller::ctl (109 samples, 0.04%)</title><rect x="23.5112%" y="533" width="0.0396%" height="15" fill="rgb(252,50,20)" fg:x="64736" fg:w="109"/><text x="23.7612%" y="543.50"></text></g><g><title>epoll_ctl (109 samples, 0.04%)</title><rect x="23.5112%" y="517" width="0.0396%" height="15" fill="rgb(222,56,38)" fg:x="64736" fg:w="109"/><text x="23.7612%" y="527.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="23.5112%" y="501" width="0.0396%" height="15" fill="rgb(206,193,29)" fg:x="64736" fg:w="109"/><text x="23.7612%" y="511.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="23.5112%" y="485" width="0.0396%" height="15" fill="rgb(239,192,45)" fg:x="64736" fg:w="109"/><text x="23.7612%" y="495.50"></text></g><g><title>[unknown] (109 samples, 0.04%)</title><rect x="23.5112%" y="469" width="0.0396%" height="15" fill="rgb(254,18,36)" fg:x="64736" fg:w="109"/><text x="23.7612%" y="479.50"></text></g><g><title>[unknown] (107 samples, 0.04%)</title><rect x="23.5119%" y="453" width="0.0389%" height="15" fill="rgb(221,127,11)" fg:x="64738" fg:w="107"/><text x="23.7619%" y="463.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="23.5345%" y="437" width="0.0163%" height="15" fill="rgb(234,146,35)" fg:x="64800" fg:w="45"/><text x="23.7845%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (177 samples, 0.06%)</title><rect x="23.5029%" y="661" width="0.0643%" height="15" fill="rgb(254,201,37)" fg:x="64713" fg:w="177"/><text x="23.7529%" y="671.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (177 samples, 0.06%)</title><rect x="23.5029%" y="645" width="0.0643%" height="15" fill="rgb(211,202,23)" fg:x="64713" fg:w="177"/><text x="23.7529%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (177 samples, 0.06%)</title><rect x="23.5029%" y="629" width="0.0643%" height="15" fill="rgb(237,91,2)" fg:x="64713" fg:w="177"/><text x="23.7529%" y="639.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (177 samples, 0.06%)</title><rect x="23.5029%" y="613" width="0.0643%" height="15" fill="rgb(226,228,36)" fg:x="64713" fg:w="177"/><text x="23.7529%" y="623.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (177 samples, 0.06%)</title><rect x="23.5029%" y="597" width="0.0643%" height="15" fill="rgb(213,63,50)" fg:x="64713" fg:w="177"/><text x="23.7529%" y="607.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (177 samples, 0.06%)</title><rect x="23.5029%" y="581" width="0.0643%" height="15" fill="rgb(235,194,19)" fg:x="64713" fg:w="177"/><text x="23.7529%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.01%)</title><rect x="23.5566%" y="565" width="0.0105%" height="15" fill="rgb(207,204,18)" fg:x="64861" fg:w="29"/><text x="23.8066%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (29 samples, 0.01%)</title><rect x="23.5566%" y="549" width="0.0105%" height="15" fill="rgb(248,8,7)" fg:x="64861" fg:w="29"/><text x="23.8066%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (29 samples, 0.01%)</title><rect x="23.5566%" y="533" width="0.0105%" height="15" fill="rgb(223,145,47)" fg:x="64861" fg:w="29"/><text x="23.8066%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (29 samples, 0.01%)</title><rect x="23.5566%" y="517" width="0.0105%" height="15" fill="rgb(228,84,11)" fg:x="64861" fg:w="29"/><text x="23.8066%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (29 samples, 0.01%)</title><rect x="23.5566%" y="501" width="0.0105%" height="15" fill="rgb(218,76,45)" fg:x="64861" fg:w="29"/><text x="23.8066%" y="511.50"></text></g><g><title>syscall (28 samples, 0.01%)</title><rect x="23.5570%" y="485" width="0.0102%" height="15" fill="rgb(223,80,15)" fg:x="64862" fg:w="28"/><text x="23.8070%" y="495.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1205" width="0.4442%" height="15" fill="rgb(219,218,33)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1215.50"></text></g><g><title>async_global_executor::reactor::block_on (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1189" width="0.4442%" height="15" fill="rgb(208,51,11)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1199.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1173" width="0.4442%" height="15" fill="rgb(229,165,39)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1183.50"></text></g><g><title>async_io::driver::block_on (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1157" width="0.4442%" height="15" fill="rgb(241,100,24)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1141" width="0.4442%" height="15" fill="rgb(228,14,23)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1125" width="0.4442%" height="15" fill="rgb(247,116,52)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1109" width="0.4442%" height="15" fill="rgb(216,149,33)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1093" width="0.4442%" height="15" fill="rgb(238,142,29)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1077" width="0.4442%" height="15" fill="rgb(224,83,40)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1087.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1061" width="0.4442%" height="15" fill="rgb(234,165,11)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1071.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1045" width="0.4442%" height="15" fill="rgb(215,96,23)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1029" width="0.4442%" height="15" fill="rgb(233,179,26)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.44%)</title><rect x="23.1295%" y="1013" width="0.4442%" height="15" fill="rgb(225,129,33)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1023.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,223 samples, 0.44%)</title><rect x="23.1295%" y="997" width="0.4442%" height="15" fill="rgb(237,49,13)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,223 samples, 0.44%)</title><rect x="23.1295%" y="981" width="0.4442%" height="15" fill="rgb(211,3,31)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="991.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,223 samples, 0.44%)</title><rect x="23.1295%" y="965" width="0.4442%" height="15" fill="rgb(216,152,19)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,223 samples, 0.44%)</title><rect x="23.1295%" y="949" width="0.4442%" height="15" fill="rgb(251,121,35)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,223 samples, 0.44%)</title><rect x="23.1295%" y="933" width="0.4442%" height="15" fill="rgb(210,217,47)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,223 samples, 0.44%)</title><rect x="23.1295%" y="917" width="0.4442%" height="15" fill="rgb(244,116,22)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="927.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,223 samples, 0.44%)</title><rect x="23.1295%" y="901" width="0.4442%" height="15" fill="rgb(228,17,21)" fg:x="63685" fg:w="1223"/><text x="23.3795%" y="911.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (195 samples, 0.07%)</title><rect x="23.5029%" y="885" width="0.0708%" height="15" fill="rgb(240,149,34)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (195 samples, 0.07%)</title><rect x="23.5029%" y="869" width="0.0708%" height="15" fill="rgb(208,125,47)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (195 samples, 0.07%)</title><rect x="23.5029%" y="853" width="0.0708%" height="15" fill="rgb(249,186,39)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (195 samples, 0.07%)</title><rect x="23.5029%" y="837" width="0.0708%" height="15" fill="rgb(240,220,33)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="847.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (195 samples, 0.07%)</title><rect x="23.5029%" y="821" width="0.0708%" height="15" fill="rgb(243,110,23)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (195 samples, 0.07%)</title><rect x="23.5029%" y="805" width="0.0708%" height="15" fill="rgb(219,163,46)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="815.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (195 samples, 0.07%)</title><rect x="23.5029%" y="789" width="0.0708%" height="15" fill="rgb(216,126,30)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (195 samples, 0.07%)</title><rect x="23.5029%" y="773" width="0.0708%" height="15" fill="rgb(208,139,11)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="783.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (195 samples, 0.07%)</title><rect x="23.5029%" y="757" width="0.0708%" height="15" fill="rgb(213,118,36)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (195 samples, 0.07%)</title><rect x="23.5029%" y="741" width="0.0708%" height="15" fill="rgb(226,43,17)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="751.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (195 samples, 0.07%)</title><rect x="23.5029%" y="725" width="0.0708%" height="15" fill="rgb(254,217,4)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (195 samples, 0.07%)</title><rect x="23.5029%" y="709" width="0.0708%" height="15" fill="rgb(210,134,47)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (195 samples, 0.07%)</title><rect x="23.5029%" y="693" width="0.0708%" height="15" fill="rgb(237,24,49)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="703.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (195 samples, 0.07%)</title><rect x="23.5029%" y="677" width="0.0708%" height="15" fill="rgb(251,39,46)" fg:x="64713" fg:w="195"/><text x="23.7529%" y="687.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (63 samples, 0.02%)</title><rect x="23.8323%" y="629" width="0.0229%" height="15" fill="rgb(251,220,3)" fg:x="65620" fg:w="63"/><text x="24.0823%" y="639.50"></text></g><g><title>[libc.so.6] (63 samples, 0.02%)</title><rect x="23.8323%" y="613" width="0.0229%" height="15" fill="rgb(228,105,12)" fg:x="65620" fg:w="63"/><text x="24.0823%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (37 samples, 0.01%)</title><rect x="23.8551%" y="629" width="0.0134%" height="15" fill="rgb(215,196,1)" fg:x="65683" fg:w="37"/><text x="24.1051%" y="639.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (46 samples, 0.02%)</title><rect x="23.9122%" y="613" width="0.0167%" height="15" fill="rgb(214,33,39)" fg:x="65840" fg:w="46"/><text x="24.1622%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.01%)</title><rect x="23.9289%" y="613" width="0.0142%" height="15" fill="rgb(220,19,52)" fg:x="65886" fg:w="39"/><text x="24.1789%" y="623.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (207 samples, 0.08%)</title><rect x="23.8686%" y="629" width="0.0752%" height="15" fill="rgb(221,78,38)" fg:x="65720" fg:w="207"/><text x="24.1186%" y="639.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="23.9488%" y="629" width="0.0163%" height="15" fill="rgb(253,30,16)" fg:x="65941" fg:w="45"/><text x="24.1988%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="23.9488%" y="613" width="0.0163%" height="15" fill="rgb(242,65,0)" fg:x="65941" fg:w="45"/><text x="24.1988%" y="623.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all (46 samples, 0.02%)</title><rect x="23.9652%" y="629" width="0.0167%" height="15" fill="rgb(235,201,12)" fg:x="65986" fg:w="46"/><text x="24.2152%" y="639.50"></text></g><g><title>[libc.so.6] (92 samples, 0.03%)</title><rect x="23.9888%" y="597" width="0.0334%" height="15" fill="rgb(233,161,9)" fg:x="66051" fg:w="92"/><text x="24.2388%" y="607.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (175 samples, 0.06%)</title><rect x="23.9823%" y="629" width="0.0636%" height="15" fill="rgb(241,207,41)" fg:x="66033" fg:w="175"/><text x="24.2323%" y="639.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (175 samples, 0.06%)</title><rect x="23.9823%" y="613" width="0.0636%" height="15" fill="rgb(212,69,46)" fg:x="66033" fg:w="175"/><text x="24.2323%" y="623.50"></text></g><g><title>async_std::utils::timer_after (65 samples, 0.02%)</title><rect x="24.0222%" y="597" width="0.0236%" height="15" fill="rgb(239,69,45)" fg:x="66143" fg:w="65"/><text x="24.2722%" y="607.50"></text></g><g><title>async_io::Timer::after (50 samples, 0.02%)</title><rect x="24.0277%" y="581" width="0.0182%" height="15" fill="rgb(242,117,48)" fg:x="66158" fg:w="50"/><text x="24.2777%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (48 samples, 0.02%)</title><rect x="24.0534%" y="613" width="0.0174%" height="15" fill="rgb(228,41,36)" fg:x="66229" fg:w="48"/><text x="24.3034%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}}&gt;&gt;&gt; (84 samples, 0.03%)</title><rect x="24.0458%" y="629" width="0.0305%" height="15" fill="rgb(212,3,32)" fg:x="66208" fg:w="84"/><text x="24.2958%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,031 samples, 0.37%)</title><rect x="23.7095%" y="661" width="0.3744%" height="15" fill="rgb(233,41,49)" fg:x="65282" fg:w="1031"/><text x="23.9595%" y="671.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (1,028 samples, 0.37%)</title><rect x="23.7106%" y="645" width="0.3734%" height="15" fill="rgb(252,170,49)" fg:x="65285" fg:w="1028"/><text x="23.9606%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,186 samples, 0.43%)</title><rect x="23.6543%" y="693" width="0.4307%" height="15" fill="rgb(229,53,26)" fg:x="65130" fg:w="1186"/><text x="23.9043%" y="703.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (1,178 samples, 0.43%)</title><rect x="23.6572%" y="677" width="0.4278%" height="15" fill="rgb(217,157,12)" fg:x="65138" fg:w="1178"/><text x="23.9072%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,416 samples, 0.51%)</title><rect x="23.5737%" y="997" width="0.5143%" height="15" fill="rgb(227,17,9)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="1007.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1,416 samples, 0.51%)</title><rect x="23.5737%" y="981" width="0.5143%" height="15" fill="rgb(218,84,12)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,416 samples, 0.51%)</title><rect x="23.5737%" y="965" width="0.5143%" height="15" fill="rgb(212,79,24)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,416 samples, 0.51%)</title><rect x="23.5737%" y="949" width="0.5143%" height="15" fill="rgb(217,222,37)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="959.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,416 samples, 0.51%)</title><rect x="23.5737%" y="933" width="0.5143%" height="15" fill="rgb(246,208,8)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1,416 samples, 0.51%)</title><rect x="23.5737%" y="917" width="0.5143%" height="15" fill="rgb(244,133,10)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="927.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,416 samples, 0.51%)</title><rect x="23.5737%" y="901" width="0.5143%" height="15" fill="rgb(209,219,41)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,416 samples, 0.51%)</title><rect x="23.5737%" y="885" width="0.5143%" height="15" fill="rgb(253,175,45)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,416 samples, 0.51%)</title><rect x="23.5737%" y="869" width="0.5143%" height="15" fill="rgb(235,100,37)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="879.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,416 samples, 0.51%)</title><rect x="23.5737%" y="853" width="0.5143%" height="15" fill="rgb(225,87,19)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="863.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1,416 samples, 0.51%)</title><rect x="23.5737%" y="837" width="0.5143%" height="15" fill="rgb(217,152,17)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,416 samples, 0.51%)</title><rect x="23.5737%" y="821" width="0.5143%" height="15" fill="rgb(235,72,13)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="831.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,416 samples, 0.51%)</title><rect x="23.5737%" y="805" width="0.5143%" height="15" fill="rgb(233,140,18)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="815.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,416 samples, 0.51%)</title><rect x="23.5737%" y="789" width="0.5143%" height="15" fill="rgb(207,212,28)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,416 samples, 0.51%)</title><rect x="23.5737%" y="773" width="0.5143%" height="15" fill="rgb(220,130,25)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="783.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,416 samples, 0.51%)</title><rect x="23.5737%" y="757" width="0.5143%" height="15" fill="rgb(205,55,34)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,416 samples, 0.51%)</title><rect x="23.5737%" y="741" width="0.5143%" height="15" fill="rgb(237,54,35)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,416 samples, 0.51%)</title><rect x="23.5737%" y="725" width="0.5143%" height="15" fill="rgb(208,67,23)" fg:x="64908" fg:w="1416"/><text x="23.8237%" y="735.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,408 samples, 0.51%)</title><rect x="23.5766%" y="709" width="0.5114%" height="15" fill="rgb(206,207,50)" fg:x="64916" fg:w="1408"/><text x="23.8266%" y="719.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1205" width="0.5154%" height="15" fill="rgb(213,211,42)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1215.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1189" width="0.5154%" height="15" fill="rgb(252,197,50)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1173" width="0.5154%" height="15" fill="rgb(251,211,41)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1157" width="0.5154%" height="15" fill="rgb(229,211,5)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1167.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1141" width="0.5154%" height="15" fill="rgb(239,36,31)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1125" width="0.5154%" height="15" fill="rgb(248,67,31)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1135.50"></text></g><g><title>async_global_executor::executor::block_on (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1109" width="0.5154%" height="15" fill="rgb(249,55,44)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1093" width="0.5154%" height="15" fill="rgb(216,82,12)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1077" width="0.5154%" height="15" fill="rgb(242,174,1)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1087.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1061" width="0.5154%" height="15" fill="rgb(208,120,29)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1071.50"></text></g><g><title>async_global_executor::reactor::block_on (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1045" width="0.5154%" height="15" fill="rgb(221,105,43)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1055.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1029" width="0.5154%" height="15" fill="rgb(234,124,22)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1039.50"></text></g><g><title>async_io::driver::block_on (1,419 samples, 0.52%)</title><rect x="23.5737%" y="1013" width="0.5154%" height="15" fill="rgb(212,23,30)" fg:x="64908" fg:w="1419"/><text x="23.8237%" y="1023.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (56 samples, 0.02%)</title><rect x="24.1366%" y="645" width="0.0203%" height="15" fill="rgb(219,122,53)" fg:x="66458" fg:w="56"/><text x="24.3866%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (55 samples, 0.02%)</title><rect x="24.1370%" y="629" width="0.0200%" height="15" fill="rgb(248,84,24)" fg:x="66459" fg:w="55"/><text x="24.3870%" y="639.50"></text></g><g><title>async_io::reactor::Reactor::get (57 samples, 0.02%)</title><rect x="24.1570%" y="645" width="0.0207%" height="15" fill="rgb(245,115,18)" fg:x="66514" fg:w="57"/><text x="24.4070%" y="655.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (57 samples, 0.02%)</title><rect x="24.1570%" y="629" width="0.0207%" height="15" fill="rgb(227,176,51)" fg:x="66514" fg:w="57"/><text x="24.4070%" y="639.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (57 samples, 0.02%)</title><rect x="24.1570%" y="613" width="0.0207%" height="15" fill="rgb(229,63,42)" fg:x="66514" fg:w="57"/><text x="24.4070%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (57 samples, 0.02%)</title><rect x="24.1570%" y="597" width="0.0207%" height="15" fill="rgb(247,202,24)" fg:x="66514" fg:w="57"/><text x="24.4070%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (57 samples, 0.02%)</title><rect x="24.1570%" y="581" width="0.0207%" height="15" fill="rgb(244,173,20)" fg:x="66514" fg:w="57"/><text x="24.4070%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (57 samples, 0.02%)</title><rect x="24.1570%" y="565" width="0.0207%" height="15" fill="rgb(242,81,47)" fg:x="66514" fg:w="57"/><text x="24.4070%" y="575.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (56 samples, 0.02%)</title><rect x="24.1573%" y="549" width="0.0203%" height="15" fill="rgb(231,185,54)" fg:x="66515" fg:w="56"/><text x="24.4073%" y="559.50"></text></g><g><title>async_io::reactor::Reactor::notify (421 samples, 0.15%)</title><rect x="24.1835%" y="629" width="0.1529%" height="15" fill="rgb(243,55,32)" fg:x="66587" fg:w="421"/><text x="24.4335%" y="639.50"></text></g><g><title>polling::Poller::notify (418 samples, 0.15%)</title><rect x="24.1846%" y="613" width="0.1518%" height="15" fill="rgb(208,167,19)" fg:x="66590" fg:w="418"/><text x="24.4346%" y="623.50"></text></g><g><title>polling::epoll::Poller::notify (237 samples, 0.09%)</title><rect x="24.2503%" y="597" width="0.0861%" height="15" fill="rgb(231,72,35)" fg:x="66771" fg:w="237"/><text x="24.5003%" y="607.50"></text></g><g><title>write (235 samples, 0.09%)</title><rect x="24.2510%" y="581" width="0.0853%" height="15" fill="rgb(250,173,51)" fg:x="66773" fg:w="235"/><text x="24.5010%" y="591.50"></text></g><g><title>[unknown] (221 samples, 0.08%)</title><rect x="24.2561%" y="565" width="0.0803%" height="15" fill="rgb(209,5,22)" fg:x="66787" fg:w="221"/><text x="24.5061%" y="575.50"></text></g><g><title>[unknown] (221 samples, 0.08%)</title><rect x="24.2561%" y="549" width="0.0803%" height="15" fill="rgb(250,174,19)" fg:x="66787" fg:w="221"/><text x="24.5061%" y="559.50"></text></g><g><title>[unknown] (216 samples, 0.08%)</title><rect x="24.2579%" y="533" width="0.0784%" height="15" fill="rgb(217,3,49)" fg:x="66792" fg:w="216"/><text x="24.5079%" y="543.50"></text></g><g><title>[unknown] (202 samples, 0.07%)</title><rect x="24.2630%" y="517" width="0.0734%" height="15" fill="rgb(218,225,5)" fg:x="66806" fg:w="202"/><text x="24.5130%" y="527.50"></text></g><g><title>[unknown] (185 samples, 0.07%)</title><rect x="24.2692%" y="501" width="0.0672%" height="15" fill="rgb(236,89,11)" fg:x="66823" fg:w="185"/><text x="24.5192%" y="511.50"></text></g><g><title>[unknown] (130 samples, 0.05%)</title><rect x="24.2892%" y="485" width="0.0472%" height="15" fill="rgb(206,33,28)" fg:x="66878" fg:w="130"/><text x="24.5392%" y="495.50"></text></g><g><title>[unknown] (76 samples, 0.03%)</title><rect x="24.3088%" y="469" width="0.0276%" height="15" fill="rgb(241,56,42)" fg:x="66932" fg:w="76"/><text x="24.5588%" y="479.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="24.3258%" y="453" width="0.0105%" height="15" fill="rgb(222,44,11)" fg:x="66979" fg:w="29"/><text x="24.5758%" y="463.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (611 samples, 0.22%)</title><rect x="24.3425%" y="629" width="0.2219%" height="15" fill="rgb(234,111,20)" fg:x="67025" fg:w="611"/><text x="24.5925%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (573 samples, 0.21%)</title><rect x="24.3563%" y="613" width="0.2081%" height="15" fill="rgb(237,77,6)" fg:x="67063" fg:w="573"/><text x="24.6063%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (141 samples, 0.05%)</title><rect x="24.5644%" y="629" width="0.0512%" height="15" fill="rgb(235,111,23)" fg:x="67636" fg:w="141"/><text x="24.8144%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (141 samples, 0.05%)</title><rect x="24.5644%" y="613" width="0.0512%" height="15" fill="rgb(251,135,29)" fg:x="67636" fg:w="141"/><text x="24.8144%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (1,207 samples, 0.44%)</title><rect x="24.1777%" y="645" width="0.4384%" height="15" fill="rgb(217,57,1)" fg:x="66571" fg:w="1207"/><text x="24.4277%" y="655.50"></text></g><g><title>core::cmp::PartialOrd::ge (44 samples, 0.02%)</title><rect x="24.6160%" y="645" width="0.0160%" height="15" fill="rgb(249,119,31)" fg:x="67778" fg:w="44"/><text x="24.8660%" y="655.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (43 samples, 0.02%)</title><rect x="24.6164%" y="629" width="0.0156%" height="15" fill="rgb(233,164,33)" fg:x="67779" fg:w="43"/><text x="24.8664%" y="639.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (43 samples, 0.02%)</title><rect x="24.6164%" y="613" width="0.0156%" height="15" fill="rgb(250,217,43)" fg:x="67779" fg:w="43"/><text x="24.8664%" y="623.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (43 samples, 0.02%)</title><rect x="24.6164%" y="597" width="0.0156%" height="15" fill="rgb(232,154,50)" fg:x="67779" fg:w="43"/><text x="24.8664%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (39 samples, 0.01%)</title><rect x="24.6178%" y="581" width="0.0142%" height="15" fill="rgb(227,190,8)" fg:x="67783" fg:w="39"/><text x="24.8678%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (39 samples, 0.01%)</title><rect x="24.6178%" y="565" width="0.0142%" height="15" fill="rgb(209,217,32)" fg:x="67783" fg:w="39"/><text x="24.8678%" y="575.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (1,759 samples, 0.64%)</title><rect x="24.0948%" y="677" width="0.6388%" height="15" fill="rgb(243,203,50)" fg:x="66343" fg:w="1759"/><text x="24.3448%" y="687.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (1,759 samples, 0.64%)</title><rect x="24.0948%" y="661" width="0.6388%" height="15" fill="rgb(232,152,27)" fg:x="66343" fg:w="1759"/><text x="24.3448%" y="671.50"></text></g><g><title>std::time::Instant::now (266 samples, 0.10%)</title><rect x="24.6371%" y="645" width="0.0966%" height="15" fill="rgb(240,34,29)" fg:x="67836" fg:w="266"/><text x="24.8871%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (245 samples, 0.09%)</title><rect x="24.6447%" y="629" width="0.0890%" height="15" fill="rgb(215,185,52)" fg:x="67857" fg:w="245"/><text x="24.8947%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (245 samples, 0.09%)</title><rect x="24.6447%" y="613" width="0.0890%" height="15" fill="rgb(240,89,49)" fg:x="67857" fg:w="245"/><text x="24.8947%" y="623.50"></text></g><g><title>clock_gettime (241 samples, 0.09%)</title><rect x="24.6462%" y="597" width="0.0875%" height="15" fill="rgb(225,12,52)" fg:x="67861" fg:w="241"/><text x="24.8962%" y="607.50"></text></g><g><title>__vdso_clock_gettime (212 samples, 0.08%)</title><rect x="24.6567%" y="581" width="0.0770%" height="15" fill="rgb(239,128,45)" fg:x="67890" fg:w="212"/><text x="24.9067%" y="591.50"></text></g><g><title>[[vdso]] (166 samples, 0.06%)</title><rect x="24.6734%" y="565" width="0.0603%" height="15" fill="rgb(211,78,47)" fg:x="67936" fg:w="166"/><text x="24.9234%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.01%)</title><rect x="24.7464%" y="661" width="0.0145%" height="15" fill="rgb(232,31,21)" fg:x="68137" fg:w="40"/><text x="24.9964%" y="671.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (128 samples, 0.05%)</title><rect x="25.6958%" y="613" width="0.0465%" height="15" fill="rgb(222,168,14)" fg:x="70751" fg:w="128"/><text x="25.9458%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 0.02%)</title><rect x="25.7423%" y="613" width="0.0214%" height="15" fill="rgb(209,128,24)" fg:x="70879" fg:w="59"/><text x="25.9923%" y="623.50"></text></g><g><title>async_std::task::sleep::sleep (82 samples, 0.03%)</title><rect x="25.7735%" y="613" width="0.0298%" height="15" fill="rgb(249,35,13)" fg:x="70965" fg:w="82"/><text x="26.0235%" y="623.50"></text></g><g><title>core::future::from_generator (48 samples, 0.02%)</title><rect x="25.7858%" y="597" width="0.0174%" height="15" fill="rgb(218,7,2)" fg:x="70999" fg:w="48"/><text x="26.0358%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;alloc::boxed::Box&lt;[zenoh_transport::common::pipeline::StageOut]&gt;&gt;&gt; (205 samples, 0.07%)</title><rect x="25.8065%" y="613" width="0.0745%" height="15" fill="rgb(238,107,27)" fg:x="71056" fg:w="205"/><text x="26.0565%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (205 samples, 0.07%)</title><rect x="25.8065%" y="597" width="0.0745%" height="15" fill="rgb(217,88,38)" fg:x="71056" fg:w="205"/><text x="26.0565%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (191 samples, 0.07%)</title><rect x="25.8116%" y="581" width="0.0694%" height="15" fill="rgb(230,207,0)" fg:x="71070" fg:w="191"/><text x="26.0616%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (191 samples, 0.07%)</title><rect x="25.8116%" y="565" width="0.0694%" height="15" fill="rgb(249,64,54)" fg:x="71070" fg:w="191"/><text x="26.0616%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::pipeline::StageIn&gt;&gt; (66 samples, 0.02%)</title><rect x="25.8810%" y="613" width="0.0240%" height="15" fill="rgb(231,7,11)" fg:x="71261" fg:w="66"/><text x="26.1310%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.02%)</title><rect x="25.8810%" y="597" width="0.0240%" height="15" fill="rgb(205,149,21)" fg:x="71261" fg:w="66"/><text x="26.1310%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (61 samples, 0.02%)</title><rect x="25.8828%" y="581" width="0.0222%" height="15" fill="rgb(215,126,34)" fg:x="71266" fg:w="61"/><text x="26.1328%" y="591.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (61 samples, 0.02%)</title><rect x="25.8828%" y="565" width="0.0222%" height="15" fill="rgb(241,132,45)" fg:x="71266" fg:w="61"/><text x="26.1328%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (60 samples, 0.02%)</title><rect x="25.9050%" y="613" width="0.0218%" height="15" fill="rgb(252,69,32)" fg:x="71327" fg:w="60"/><text x="26.1550%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (60 samples, 0.02%)</title><rect x="25.9050%" y="597" width="0.0218%" height="15" fill="rgb(232,204,19)" fg:x="71327" fg:w="60"/><text x="26.1550%" y="607.50"></text></g><g><title>core::time::&lt;impl core::ops::arith::Mul&lt;core::time::Duration&gt; for u32&gt;::mul (124 samples, 0.05%)</title><rect x="25.9268%" y="613" width="0.0450%" height="15" fill="rgb(249,15,47)" fg:x="71387" fg:w="124"/><text x="26.1768%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (300 samples, 0.11%)</title><rect x="25.9718%" y="613" width="0.1090%" height="15" fill="rgb(209,227,23)" fg:x="71511" fg:w="300"/><text x="26.2218%" y="623.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (31 samples, 0.01%)</title><rect x="26.0808%" y="613" width="0.0113%" height="15" fill="rgb(248,92,24)" fg:x="71811" fg:w="31"/><text x="26.3308%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,090 samples, 1.12%)</title><rect x="25.0297%" y="645" width="1.1222%" height="15" fill="rgb(247,59,2)" fg:x="68917" fg:w="3090"/><text x="25.2797%" y="655.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (2,962 samples, 1.08%)</title><rect x="25.0762%" y="629" width="1.0758%" height="15" fill="rgb(221,30,5)" fg:x="69045" fg:w="2962"/><text x="25.3262%" y="639.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::try_pull (165 samples, 0.06%)</title><rect x="26.0920%" y="613" width="0.0599%" height="15" fill="rgb(208,108,53)" fg:x="71842" fg:w="165"/><text x="26.3420%" y="623.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (165 samples, 0.06%)</title><rect x="26.0920%" y="597" width="0.0599%" height="15" fill="rgb(211,183,26)" fg:x="71842" fg:w="165"/><text x="26.3420%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (165 samples, 0.06%)</title><rect x="26.0920%" y="581" width="0.0599%" height="15" fill="rgb(232,132,4)" fg:x="71842" fg:w="165"/><text x="26.3420%" y="591.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (43 samples, 0.02%)</title><rect x="26.1519%" y="645" width="0.0156%" height="15" fill="rgb(253,128,37)" fg:x="72007" fg:w="43"/><text x="26.4019%" y="655.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (61 samples, 0.02%)</title><rect x="26.1755%" y="629" width="0.0222%" height="15" fill="rgb(221,58,24)" fg:x="72072" fg:w="61"/><text x="26.4255%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (37 samples, 0.01%)</title><rect x="26.1843%" y="613" width="0.0134%" height="15" fill="rgb(230,54,45)" fg:x="72096" fg:w="37"/><text x="26.4343%" y="623.50"></text></g><g><title>core::mem::replace (37 samples, 0.01%)</title><rect x="26.1843%" y="597" width="0.0134%" height="15" fill="rgb(254,21,18)" fg:x="72096" fg:w="37"/><text x="26.4343%" y="607.50"></text></g><g><title>core::ptr::read (37 samples, 0.01%)</title><rect x="26.1843%" y="581" width="0.0134%" height="15" fill="rgb(221,108,0)" fg:x="72096" fg:w="37"/><text x="26.4343%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (131 samples, 0.05%)</title><rect x="26.1752%" y="645" width="0.0476%" height="15" fill="rgb(206,95,1)" fg:x="72071" fg:w="131"/><text x="26.4252%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (69 samples, 0.03%)</title><rect x="26.1977%" y="629" width="0.0251%" height="15" fill="rgb(237,52,5)" fg:x="72133" fg:w="69"/><text x="26.4477%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.03%)</title><rect x="26.1977%" y="613" width="0.0251%" height="15" fill="rgb(218,150,34)" fg:x="72133" fg:w="69"/><text x="26.4477%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;zenoh_transport::common::pipeline::StageIn&gt;&gt; (36 samples, 0.01%)</title><rect x="26.2231%" y="645" width="0.0131%" height="15" fill="rgb(235,194,28)" fg:x="72203" fg:w="36"/><text x="26.4731%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="26.2231%" y="629" width="0.0131%" height="15" fill="rgb(245,92,18)" fg:x="72203" fg:w="36"/><text x="26.4731%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (30 samples, 0.01%)</title><rect x="26.2253%" y="613" width="0.0109%" height="15" fill="rgb(253,203,53)" fg:x="72209" fg:w="30"/><text x="26.4753%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (30 samples, 0.01%)</title><rect x="26.2253%" y="597" width="0.0109%" height="15" fill="rgb(249,185,47)" fg:x="72209" fg:w="30"/><text x="26.4753%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (145 samples, 0.05%)</title><rect x="26.2362%" y="645" width="0.0527%" height="15" fill="rgb(252,194,52)" fg:x="72239" fg:w="145"/><text x="26.4862%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (241 samples, 0.09%)</title><rect x="26.2896%" y="645" width="0.0875%" height="15" fill="rgb(210,53,36)" fg:x="72386" fg:w="241"/><text x="26.5396%" y="655.50"></text></g><g><title>zenoh_transport::common::pipeline::StageIn::try_pull (32 samples, 0.01%)</title><rect x="26.3826%" y="645" width="0.0116%" height="15" fill="rgb(237,37,25)" fg:x="72642" fg:w="32"/><text x="26.6326%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,693 samples, 1.70%)</title><rect x="24.7337%" y="677" width="1.7044%" height="15" fill="rgb(242,116,27)" fg:x="68102" fg:w="4693"/><text x="24.9837%" y="687.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (4,618 samples, 1.68%)</title><rect x="24.7609%" y="661" width="1.6772%" height="15" fill="rgb(213,185,26)" fg:x="68177" fg:w="4618"/><text x="25.0109%" y="671.50"></text></g><g><title>zenoh_transport::common::pipeline::StageOut::try_pull (121 samples, 0.04%)</title><rect x="26.3942%" y="645" width="0.0439%" height="15" fill="rgb(225,204,8)" fg:x="72674" fg:w="121"/><text x="26.6442%" y="655.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (121 samples, 0.04%)</title><rect x="26.3942%" y="629" width="0.0439%" height="15" fill="rgb(254,111,37)" fg:x="72674" fg:w="121"/><text x="26.6442%" y="639.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (120 samples, 0.04%)</title><rect x="26.3945%" y="613" width="0.0436%" height="15" fill="rgb(242,35,9)" fg:x="72675" fg:w="120"/><text x="26.6445%" y="623.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (6,469 samples, 2.35%)</title><rect x="24.0948%" y="693" width="2.3495%" height="15" fill="rgb(232,138,49)" fg:x="66343" fg:w="6469"/><text x="24.3448%" y="703.50">&lt;..</text></g><g><title>[libc.so.6] (66 samples, 0.02%)</title><rect x="26.5169%" y="549" width="0.0240%" height="15" fill="rgb(247,56,4)" fg:x="73012" fg:w="66"/><text x="26.7669%" y="559.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (2,817 samples, 1.02%)</title><rect x="26.4988%" y="597" width="1.0231%" height="15" fill="rgb(226,179,17)" fg:x="72962" fg:w="2817"/><text x="26.7488%" y="607.50"></text></g><g><title>std::sys_common::net::TcpStream::write (2,805 samples, 1.02%)</title><rect x="26.5031%" y="581" width="1.0187%" height="15" fill="rgb(216,163,45)" fg:x="72974" fg:w="2805"/><text x="26.7531%" y="591.50"></text></g><g><title>__send (2,805 samples, 1.02%)</title><rect x="26.5031%" y="565" width="1.0187%" height="15" fill="rgb(211,157,3)" fg:x="72974" fg:w="2805"/><text x="26.7531%" y="575.50"></text></g><g><title>[unknown] (2,701 samples, 0.98%)</title><rect x="26.5409%" y="549" width="0.9810%" height="15" fill="rgb(234,44,20)" fg:x="73078" fg:w="2701"/><text x="26.7909%" y="559.50"></text></g><g><title>[unknown] (2,694 samples, 0.98%)</title><rect x="26.5434%" y="533" width="0.9784%" height="15" fill="rgb(254,138,23)" fg:x="73085" fg:w="2694"/><text x="26.7934%" y="543.50"></text></g><g><title>[unknown] (2,674 samples, 0.97%)</title><rect x="26.5507%" y="517" width="0.9712%" height="15" fill="rgb(206,119,39)" fg:x="73105" fg:w="2674"/><text x="26.8007%" y="527.50"></text></g><g><title>[unknown] (2,598 samples, 0.94%)</title><rect x="26.5783%" y="501" width="0.9436%" height="15" fill="rgb(231,105,52)" fg:x="73181" fg:w="2598"/><text x="26.8283%" y="511.50"></text></g><g><title>[unknown] (2,247 samples, 0.82%)</title><rect x="26.7058%" y="485" width="0.8161%" height="15" fill="rgb(250,20,5)" fg:x="73532" fg:w="2247"/><text x="26.9558%" y="495.50"></text></g><g><title>[unknown] (2,156 samples, 0.78%)</title><rect x="26.7388%" y="469" width="0.7830%" height="15" fill="rgb(215,198,30)" fg:x="73623" fg:w="2156"/><text x="26.9888%" y="479.50"></text></g><g><title>[unknown] (1,453 samples, 0.53%)</title><rect x="26.9942%" y="453" width="0.5277%" height="15" fill="rgb(246,142,8)" fg:x="74326" fg:w="1453"/><text x="27.2442%" y="463.50"></text></g><g><title>[unknown] (1,099 samples, 0.40%)</title><rect x="27.1227%" y="437" width="0.3991%" height="15" fill="rgb(243,26,38)" fg:x="74680" fg:w="1099"/><text x="27.3727%" y="447.50"></text></g><g><title>[unknown] (591 samples, 0.21%)</title><rect x="27.3072%" y="421" width="0.2146%" height="15" fill="rgb(205,133,28)" fg:x="75188" fg:w="591"/><text x="27.5572%" y="431.50"></text></g><g><title>[unknown] (381 samples, 0.14%)</title><rect x="27.3835%" y="405" width="0.1384%" height="15" fill="rgb(212,34,0)" fg:x="75398" fg:w="381"/><text x="27.6335%" y="415.50"></text></g><g><title>[unknown] (160 samples, 0.06%)</title><rect x="27.4638%" y="389" width="0.0581%" height="15" fill="rgb(251,226,22)" fg:x="75619" fg:w="160"/><text x="27.7138%" y="399.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncWrite&gt;::poll_write (3,080 samples, 1.12%)</title><rect x="26.4930%" y="613" width="1.1186%" height="15" fill="rgb(252,119,9)" fg:x="72946" fg:w="3080"/><text x="26.7430%" y="623.50"></text></g><g><title>async_io::Async&lt;T&gt;::get_ref (245 samples, 0.09%)</title><rect x="27.5226%" y="597" width="0.0890%" height="15" fill="rgb(213,150,50)" fg:x="75781" fg:w="245"/><text x="27.7726%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (245 samples, 0.09%)</title><rect x="27.5226%" y="581" width="0.0890%" height="15" fill="rgb(212,24,39)" fg:x="75781" fg:w="245"/><text x="27.7726%" y="591.50"></text></g><g><title>&lt;async_std::io::write::write_all::WriteAllFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,401 samples, 1.24%)</title><rect x="26.4824%" y="645" width="1.2352%" height="15" fill="rgb(213,46,39)" fg:x="72917" fg:w="3401"/><text x="26.7324%" y="655.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (3,398 samples, 1.23%)</title><rect x="26.4835%" y="629" width="1.2341%" height="15" fill="rgb(239,106,12)" fg:x="72920" fg:w="3398"/><text x="26.7335%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (292 samples, 0.11%)</title><rect x="27.6116%" y="613" width="0.1061%" height="15" fill="rgb(249,229,21)" fg:x="76026" fg:w="292"/><text x="27.8616%" y="623.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all::{{closure}} (3,504 samples, 1.27%)</title><rect x="26.4472%" y="661" width="1.2726%" height="15" fill="rgb(212,158,3)" fg:x="72820" fg:w="3504"/><text x="26.6972%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,514 samples, 1.28%)</title><rect x="26.4461%" y="693" width="1.2762%" height="15" fill="rgb(253,26,48)" fg:x="72817" fg:w="3514"/><text x="26.6961%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,514 samples, 1.28%)</title><rect x="26.4461%" y="677" width="1.2762%" height="15" fill="rgb(238,178,20)" fg:x="72817" fg:w="3514"/><text x="26.6961%" y="687.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::write_all (98 samples, 0.04%)</title><rect x="27.7224%" y="693" width="0.0356%" height="15" fill="rgb(208,86,15)" fg:x="76331" fg:w="98"/><text x="27.9724%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (98 samples, 0.04%)</title><rect x="27.7224%" y="677" width="0.0356%" height="15" fill="rgb(239,42,53)" fg:x="76331" fg:w="98"/><text x="27.9724%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (98 samples, 0.04%)</title><rect x="27.7224%" y="661" width="0.0356%" height="15" fill="rgb(245,226,8)" fg:x="76331" fg:w="98"/><text x="27.9724%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (98 samples, 0.04%)</title><rect x="27.7224%" y="645" width="0.0356%" height="15" fill="rgb(216,176,32)" fg:x="76331" fg:w="98"/><text x="27.9724%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (98 samples, 0.04%)</title><rect x="27.7224%" y="629" width="0.0356%" height="15" fill="rgb(231,186,21)" fg:x="76331" fg:w="98"/><text x="27.9724%" y="639.50"></text></g><g><title>alloc::alloc::alloc (98 samples, 0.04%)</title><rect x="27.7224%" y="613" width="0.0356%" height="15" fill="rgb(205,95,49)" fg:x="76331" fg:w="98"/><text x="27.9724%" y="623.50"></text></g><g><title>malloc (98 samples, 0.04%)</title><rect x="27.7224%" y="597" width="0.0356%" height="15" fill="rgb(217,145,8)" fg:x="76331" fg:w="98"/><text x="27.9724%" y="607.50"></text></g><g><title>clock_gettime (67 samples, 0.02%)</title><rect x="27.7590%" y="581" width="0.0243%" height="15" fill="rgb(239,144,48)" fg:x="76432" fg:w="67"/><text x="28.0090%" y="591.50"></text></g><g><title>__vdso_clock_gettime (43 samples, 0.02%)</title><rect x="27.7677%" y="565" width="0.0156%" height="15" fill="rgb(214,189,23)" fg:x="76456" fg:w="43"/><text x="28.0177%" y="575.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (72 samples, 0.03%)</title><rect x="27.7579%" y="693" width="0.0261%" height="15" fill="rgb(229,157,17)" fg:x="76429" fg:w="72"/><text x="28.0079%" y="703.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (72 samples, 0.03%)</title><rect x="27.7579%" y="677" width="0.0261%" height="15" fill="rgb(230,5,48)" fg:x="76429" fg:w="72"/><text x="28.0079%" y="687.50"></text></g><g><title>async_std::utils::timer_after (72 samples, 0.03%)</title><rect x="27.7579%" y="661" width="0.0261%" height="15" fill="rgb(224,156,48)" fg:x="76429" fg:w="72"/><text x="28.0079%" y="671.50"></text></g><g><title>async_io::Timer::after (72 samples, 0.03%)</title><rect x="27.7579%" y="645" width="0.0261%" height="15" fill="rgb(223,14,29)" fg:x="76429" fg:w="72"/><text x="28.0079%" y="655.50"></text></g><g><title>std::time::Instant::now (72 samples, 0.03%)</title><rect x="27.7579%" y="629" width="0.0261%" height="15" fill="rgb(229,96,36)" fg:x="76429" fg:w="72"/><text x="28.0079%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (69 samples, 0.03%)</title><rect x="27.7590%" y="613" width="0.0251%" height="15" fill="rgb(231,102,53)" fg:x="76432" fg:w="69"/><text x="28.0090%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (69 samples, 0.03%)</title><rect x="27.7590%" y="597" width="0.0251%" height="15" fill="rgb(210,77,38)" fg:x="76432" fg:w="69"/><text x="28.0090%" y="607.50"></text></g><g><title>async_io::reactor::Reactor::get (48 samples, 0.02%)</title><rect x="27.7954%" y="645" width="0.0174%" height="15" fill="rgb(235,131,6)" fg:x="76532" fg:w="48"/><text x="28.0454%" y="655.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (48 samples, 0.02%)</title><rect x="27.7954%" y="629" width="0.0174%" height="15" fill="rgb(252,55,38)" fg:x="76532" fg:w="48"/><text x="28.0454%" y="639.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (48 samples, 0.02%)</title><rect x="27.7954%" y="613" width="0.0174%" height="15" fill="rgb(246,38,14)" fg:x="76532" fg:w="48"/><text x="28.0454%" y="623.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (48 samples, 0.02%)</title><rect x="27.7954%" y="597" width="0.0174%" height="15" fill="rgb(242,27,5)" fg:x="76532" fg:w="48"/><text x="28.0454%" y="607.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (48 samples, 0.02%)</title><rect x="27.7954%" y="581" width="0.0174%" height="15" fill="rgb(228,65,35)" fg:x="76532" fg:w="48"/><text x="28.0454%" y="591.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (48 samples, 0.02%)</title><rect x="27.7954%" y="565" width="0.0174%" height="15" fill="rgb(245,93,11)" fg:x="76532" fg:w="48"/><text x="28.0454%" y="575.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (48 samples, 0.02%)</title><rect x="27.7954%" y="549" width="0.0174%" height="15" fill="rgb(213,1,31)" fg:x="76532" fg:w="48"/><text x="28.0454%" y="559.50"></text></g><g><title>__sched_yield (61 samples, 0.02%)</title><rect x="28.1807%" y="597" width="0.0222%" height="15" fill="rgb(237,205,14)" fg:x="77593" fg:w="61"/><text x="28.4307%" y="607.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="28.1825%" y="581" width="0.0203%" height="15" fill="rgb(232,118,45)" fg:x="77598" fg:w="56"/><text x="28.4325%" y="591.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="28.1829%" y="565" width="0.0200%" height="15" fill="rgb(218,5,6)" fg:x="77599" fg:w="55"/><text x="28.4329%" y="575.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="28.1832%" y="549" width="0.0196%" height="15" fill="rgb(251,87,51)" fg:x="77600" fg:w="54"/><text x="28.4332%" y="559.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="28.1836%" y="533" width="0.0192%" height="15" fill="rgb(207,225,20)" fg:x="77601" fg:w="53"/><text x="28.4336%" y="543.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="28.1851%" y="517" width="0.0178%" height="15" fill="rgb(222,78,54)" fg:x="77605" fg:w="49"/><text x="28.4351%" y="527.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="28.1880%" y="501" width="0.0149%" height="15" fill="rgb(232,85,16)" fg:x="77613" fg:w="41"/><text x="28.4380%" y="511.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="28.1927%" y="485" width="0.0102%" height="15" fill="rgb(244,25,33)" fg:x="77626" fg:w="28"/><text x="28.4427%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (42 samples, 0.02%)</title><rect x="28.2028%" y="597" width="0.0153%" height="15" fill="rgb(233,24,36)" fg:x="77654" fg:w="42"/><text x="28.4528%" y="607.50"></text></g><g><title>core::ptr::write (42 samples, 0.02%)</title><rect x="28.2028%" y="581" width="0.0153%" height="15" fill="rgb(253,49,54)" fg:x="77654" fg:w="42"/><text x="28.4528%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1,060 samples, 0.38%)</title><rect x="27.8338%" y="629" width="0.3850%" height="15" fill="rgb(245,12,22)" fg:x="76638" fg:w="1060"/><text x="28.0838%" y="639.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (930 samples, 0.34%)</title><rect x="27.8811%" y="613" width="0.3378%" height="15" fill="rgb(253,141,28)" fg:x="76768" fg:w="930"/><text x="28.1311%" y="623.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (1,129 samples, 0.41%)</title><rect x="27.8128%" y="645" width="0.4100%" height="15" fill="rgb(225,207,27)" fg:x="76580" fg:w="1129"/><text x="28.0628%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (57 samples, 0.02%)</title><rect x="28.2228%" y="645" width="0.0207%" height="15" fill="rgb(220,84,2)" fg:x="77709" fg:w="57"/><text x="28.4728%" y="655.50"></text></g><g><title>core::mem::replace (57 samples, 0.02%)</title><rect x="28.2228%" y="629" width="0.0207%" height="15" fill="rgb(224,37,37)" fg:x="77709" fg:w="57"/><text x="28.4728%" y="639.50"></text></g><g><title>core::ptr::read (56 samples, 0.02%)</title><rect x="28.2232%" y="613" width="0.0203%" height="15" fill="rgb(220,143,18)" fg:x="77710" fg:w="56"/><text x="28.4732%" y="623.50"></text></g><g><title>&lt;async_io::Timer as core::ops::drop::Drop&gt;::drop (1,268 samples, 0.46%)</title><rect x="27.7841%" y="661" width="0.4605%" height="15" fill="rgb(210,88,33)" fg:x="76501" fg:w="1268"/><text x="28.0341%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::future::timeout::TimeoutFuture&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}}&gt;&gt;&gt; (1,330 samples, 0.48%)</title><rect x="27.7841%" y="693" width="0.4830%" height="15" fill="rgb(219,87,51)" fg:x="76501" fg:w="1330"/><text x="28.0341%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::Timer&gt; (1,330 samples, 0.48%)</title><rect x="27.7841%" y="677" width="0.4830%" height="15" fill="rgb(211,7,35)" fg:x="76501" fg:w="1330"/><text x="28.0341%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (62 samples, 0.02%)</title><rect x="28.2446%" y="661" width="0.0225%" height="15" fill="rgb(232,77,2)" fg:x="77769" fg:w="62"/><text x="28.4946%" y="671.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (70 samples, 0.03%)</title><rect x="28.2722%" y="677" width="0.0254%" height="15" fill="rgb(249,94,25)" fg:x="77845" fg:w="70"/><text x="28.5222%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (70 samples, 0.03%)</title><rect x="28.2722%" y="661" width="0.0254%" height="15" fill="rgb(215,112,2)" fg:x="77845" fg:w="70"/><text x="28.5222%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (70 samples, 0.03%)</title><rect x="28.2722%" y="645" width="0.0254%" height="15" fill="rgb(226,115,48)" fg:x="77845" fg:w="70"/><text x="28.5222%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wake (68 samples, 0.02%)</title><rect x="28.2729%" y="629" width="0.0247%" height="15" fill="rgb(249,196,10)" fg:x="77847" fg:w="68"/><text x="28.5229%" y="639.50"></text></g><g><title>syscall (274 samples, 0.10%)</title><rect x="28.2995%" y="677" width="0.0995%" height="15" fill="rgb(237,109,14)" fg:x="77920" fg:w="274"/><text x="28.5495%" y="687.50"></text></g><g><title>[unknown] (257 samples, 0.09%)</title><rect x="28.3056%" y="661" width="0.0933%" height="15" fill="rgb(217,103,53)" fg:x="77937" fg:w="257"/><text x="28.5556%" y="671.50"></text></g><g><title>[unknown] (253 samples, 0.09%)</title><rect x="28.3071%" y="645" width="0.0919%" height="15" fill="rgb(244,137,9)" fg:x="77941" fg:w="253"/><text x="28.5571%" y="655.50"></text></g><g><title>[unknown] (251 samples, 0.09%)</title><rect x="28.3078%" y="629" width="0.0912%" height="15" fill="rgb(227,201,3)" fg:x="77943" fg:w="251"/><text x="28.5578%" y="639.50"></text></g><g><title>[unknown] (237 samples, 0.09%)</title><rect x="28.3129%" y="613" width="0.0861%" height="15" fill="rgb(243,94,6)" fg:x="77957" fg:w="237"/><text x="28.5629%" y="623.50"></text></g><g><title>[unknown] (201 samples, 0.07%)</title><rect x="28.3260%" y="597" width="0.0730%" height="15" fill="rgb(235,118,5)" fg:x="77993" fg:w="201"/><text x="28.5760%" y="607.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="28.3852%" y="581" width="0.0138%" height="15" fill="rgb(247,10,30)" fg:x="78156" fg:w="38"/><text x="28.6352%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="1061" width="4.3125%" height="15" fill="rgb(205,26,28)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="1071.50">&lt;core..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="1045" width="4.3125%" height="15" fill="rgb(206,99,35)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="1055.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="1029" width="4.3125%" height="15" fill="rgb(238,130,40)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="1039.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="1013" width="4.3125%" height="15" fill="rgb(224,126,31)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="1023.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="997" width="4.3125%" height="15" fill="rgb(254,105,17)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="1007.50">&lt;futu..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="981" width="4.3125%" height="15" fill="rgb(216,87,36)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="991.50">&lt;asyn..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (11,874 samples, 4.31%)</title><rect x="24.0948%" y="965" width="4.3125%" height="15" fill="rgb(240,21,12)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="975.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,874 samples, 4.31%)</title><rect x="24.0948%" y="949" width="4.3125%" height="15" fill="rgb(245,192,34)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="959.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,874 samples, 4.31%)</title><rect x="24.0948%" y="933" width="4.3125%" height="15" fill="rgb(226,100,49)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="943.50">std::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="917" width="4.3125%" height="15" fill="rgb(245,188,27)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="927.50">async..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="901" width="4.3125%" height="15" fill="rgb(212,170,8)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="911.50">&lt;asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="885" width="4.3125%" height="15" fill="rgb(217,113,29)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="895.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="869" width="4.3125%" height="15" fill="rgb(237,30,3)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="879.50">async..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="853" width="4.3125%" height="15" fill="rgb(227,19,28)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="863.50">&lt;futu..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="837" width="4.3125%" height="15" fill="rgb(239,172,45)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="847.50">&lt;core..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="821" width="4.3125%" height="15" fill="rgb(254,55,39)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="831.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (11,874 samples, 4.31%)</title><rect x="24.0948%" y="805" width="4.3125%" height="15" fill="rgb(249,208,12)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="815.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="789" width="4.3125%" height="15" fill="rgb(240,52,13)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="799.50">&lt;core..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="773" width="4.3125%" height="15" fill="rgb(252,149,13)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="783.50">async..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="757" width="4.3125%" height="15" fill="rgb(232,81,48)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="767.50">&lt;core..</text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="741" width="4.3125%" height="15" fill="rgb(222,144,2)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="751.50">zenoh..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11,874 samples, 4.31%)</title><rect x="24.0948%" y="725" width="4.3125%" height="15" fill="rgb(216,81,32)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="735.50">&lt;core..</text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (11,874 samples, 4.31%)</title><rect x="24.0948%" y="709" width="4.3125%" height="15" fill="rgb(244,78,51)" fg:x="66343" fg:w="11874"/><text x="24.3448%" y="719.50">zenoh..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::refill (383 samples, 0.14%)</title><rect x="28.2682%" y="693" width="0.1391%" height="15" fill="rgb(217,66,21)" fg:x="77834" fg:w="383"/><text x="28.5182%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28,411 samples, 10.32%)</title><rect x="18.0928%" y="1237" width="10.3185%" height="15" fill="rgb(247,101,42)" fg:x="49817" fg:w="28411"/><text x="18.3428%" y="1247.50">std::thread::lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28,411 samples, 10.32%)</title><rect x="18.0928%" y="1221" width="10.3185%" height="15" fill="rgb(227,81,39)" fg:x="49817" fg:w="28411"/><text x="18.3428%" y="1231.50">std::thread::lo..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (11,901 samples, 4.32%)</title><rect x="24.0890%" y="1205" width="4.3223%" height="15" fill="rgb(220,223,44)" fg:x="66327" fg:w="11901"/><text x="24.3390%" y="1215.50">async..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (11,885 samples, 4.32%)</title><rect x="24.0948%" y="1189" width="4.3165%" height="15" fill="rgb(205,218,2)" fg:x="66343" fg:w="11885"/><text x="24.3448%" y="1199.50">async..</text></g><g><title>async_global_executor::executor::block_on (11,885 samples, 4.32%)</title><rect x="24.0948%" y="1173" width="4.3165%" height="15" fill="rgb(212,207,28)" fg:x="66343" fg:w="11885"/><text x="24.3448%" y="1183.50">async..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11,885 samples, 4.32%)</title><rect x="24.0948%" y="1157" width="4.3165%" height="15" fill="rgb(224,12,41)" fg:x="66343" fg:w="11885"/><text x="24.3448%" y="1167.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11,885 samples, 4.32%)</title><rect x="24.0948%" y="1141" width="4.3165%" height="15" fill="rgb(216,118,12)" fg:x="66343" fg:w="11885"/><text x="24.3448%" y="1151.50">std::..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (11,885 samples, 4.32%)</title><rect x="24.0948%" y="1125" width="4.3165%" height="15" fill="rgb(252,97,46)" fg:x="66343" fg:w="11885"/><text x="24.3448%" y="1135.50">async..</text></g><g><title>async_global_executor::reactor::block_on (11,885 samples, 4.32%)</title><rect x="24.0948%" y="1109" width="4.3165%" height="15" fill="rgb(244,206,19)" fg:x="66343" fg:w="11885"/><text x="24.3448%" y="1119.50">async..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (11,885 samples, 4.32%)</title><rect x="24.0948%" y="1093" width="4.3165%" height="15" fill="rgb(231,84,31)" fg:x="66343" fg:w="11885"/><text x="24.3448%" y="1103.50">async..</text></g><g><title>async_io::driver::block_on (11,885 samples, 4.32%)</title><rect x="24.0948%" y="1077" width="4.3165%" height="15" fill="rgb(244,133,0)" fg:x="66343" fg:w="11885"/><text x="24.3448%" y="1087.50">async..</text></g><g><title>recvmsg (62 samples, 0.02%)</title><rect x="28.4284%" y="997" width="0.0225%" height="15" fill="rgb(223,15,50)" fg:x="78275" fg:w="62"/><text x="28.6784%" y="1007.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="28.4295%" y="981" width="0.0214%" height="15" fill="rgb(250,118,49)" fg:x="78278" fg:w="59"/><text x="28.6795%" y="991.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="28.4295%" y="965" width="0.0214%" height="15" fill="rgb(248,25,38)" fg:x="78278" fg:w="59"/><text x="28.6795%" y="975.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="28.4295%" y="949" width="0.0214%" height="15" fill="rgb(215,70,14)" fg:x="78278" fg:w="59"/><text x="28.6795%" y="959.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="28.4298%" y="933" width="0.0211%" height="15" fill="rgb(215,28,15)" fg:x="78279" fg:w="58"/><text x="28.6798%" y="943.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="28.4309%" y="917" width="0.0200%" height="15" fill="rgb(243,6,28)" fg:x="78282" fg:w="55"/><text x="28.6809%" y="927.50"></text></g><g><title>[unknown] (48 samples, 0.02%)</title><rect x="28.4335%" y="901" width="0.0174%" height="15" fill="rgb(222,130,1)" fg:x="78289" fg:w="48"/><text x="28.6835%" y="911.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="28.4356%" y="885" width="0.0153%" height="15" fill="rgb(236,166,44)" fg:x="78295" fg:w="42"/><text x="28.6856%" y="895.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="28.4375%" y="869" width="0.0134%" height="15" fill="rgb(221,108,14)" fg:x="78300" fg:w="37"/><text x="28.6875%" y="879.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_link (127 samples, 0.05%)</title><rect x="28.4124%" y="1221" width="0.0461%" height="15" fill="rgb(252,3,45)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (127 samples, 0.05%)</title><rect x="28.4124%" y="1205" width="0.0461%" height="15" fill="rgb(237,68,30)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (127 samples, 0.05%)</title><rect x="28.4124%" y="1189" width="0.0461%" height="15" fill="rgb(211,79,22)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (127 samples, 0.05%)</title><rect x="28.4124%" y="1173" width="0.0461%" height="15" fill="rgb(252,185,21)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (127 samples, 0.05%)</title><rect x="28.4124%" y="1157" width="0.0461%" height="15" fill="rgb(225,189,26)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (127 samples, 0.05%)</title><rect x="28.4124%" y="1141" width="0.0461%" height="15" fill="rgb(241,30,40)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1151.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (127 samples, 0.05%)</title><rect x="28.4124%" y="1125" width="0.0461%" height="15" fill="rgb(235,215,44)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1135.50"></text></g><g><title>zenoh_util::net::get_local_addresses (127 samples, 0.05%)</title><rect x="28.4124%" y="1109" width="0.0461%" height="15" fill="rgb(205,8,29)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1119.50"></text></g><g><title>pnet_datalink::interfaces (127 samples, 0.05%)</title><rect x="28.4124%" y="1093" width="0.0461%" height="15" fill="rgb(241,137,42)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1103.50"></text></g><g><title>pnet_datalink::backend::interfaces (127 samples, 0.05%)</title><rect x="28.4124%" y="1077" width="0.0461%" height="15" fill="rgb(237,155,2)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (127 samples, 0.05%)</title><rect x="28.4124%" y="1061" width="0.0461%" height="15" fill="rgb(245,29,42)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1071.50"></text></g><g><title>getifaddrs (127 samples, 0.05%)</title><rect x="28.4124%" y="1045" width="0.0461%" height="15" fill="rgb(234,101,35)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1055.50"></text></g><g><title>[libc.so.6] (127 samples, 0.05%)</title><rect x="28.4124%" y="1029" width="0.0461%" height="15" fill="rgb(228,64,37)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1039.50"></text></g><g><title>[libc.so.6] (127 samples, 0.05%)</title><rect x="28.4124%" y="1013" width="0.0461%" height="15" fill="rgb(217,214,36)" fg:x="78231" fg:w="127"/><text x="28.6624%" y="1023.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="28.4720%" y="949" width="0.0178%" height="15" fill="rgb(243,70,3)" fg:x="78395" fg:w="49"/><text x="28.7220%" y="959.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="28.4720%" y="933" width="0.0178%" height="15" fill="rgb(253,158,52)" fg:x="78395" fg:w="49"/><text x="28.7220%" y="943.50"></text></g><g><title>[unknown] (49 samples, 0.02%)</title><rect x="28.4720%" y="917" width="0.0178%" height="15" fill="rgb(234,111,54)" fg:x="78395" fg:w="49"/><text x="28.7220%" y="927.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="28.4727%" y="901" width="0.0171%" height="15" fill="rgb(217,70,32)" fg:x="78397" fg:w="47"/><text x="28.7227%" y="911.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="28.4771%" y="885" width="0.0127%" height="15" fill="rgb(234,18,33)" fg:x="78409" fg:w="35"/><text x="28.7271%" y="895.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (251 samples, 0.09%)</title><rect x="28.4124%" y="1237" width="0.0912%" height="15" fill="rgb(234,12,49)" fg:x="78231" fg:w="251"/><text x="28.6624%" y="1247.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (124 samples, 0.05%)</title><rect x="28.4585%" y="1221" width="0.0450%" height="15" fill="rgb(236,10,21)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (124 samples, 0.05%)</title><rect x="28.4585%" y="1205" width="0.0450%" height="15" fill="rgb(248,182,45)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (124 samples, 0.05%)</title><rect x="28.4585%" y="1189" width="0.0450%" height="15" fill="rgb(217,95,36)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (124 samples, 0.05%)</title><rect x="28.4585%" y="1173" width="0.0450%" height="15" fill="rgb(212,110,31)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (124 samples, 0.05%)</title><rect x="28.4585%" y="1157" width="0.0450%" height="15" fill="rgb(206,32,53)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (124 samples, 0.05%)</title><rect x="28.4585%" y="1141" width="0.0450%" height="15" fill="rgb(246,141,37)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1151.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (124 samples, 0.05%)</title><rect x="28.4585%" y="1125" width="0.0450%" height="15" fill="rgb(219,16,7)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1135.50"></text></g><g><title>zenoh_util::net::get_local_addresses (124 samples, 0.05%)</title><rect x="28.4585%" y="1109" width="0.0450%" height="15" fill="rgb(230,205,45)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1119.50"></text></g><g><title>pnet_datalink::interfaces (124 samples, 0.05%)</title><rect x="28.4585%" y="1093" width="0.0450%" height="15" fill="rgb(231,43,49)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1103.50"></text></g><g><title>pnet_datalink::backend::interfaces (124 samples, 0.05%)</title><rect x="28.4585%" y="1077" width="0.0450%" height="15" fill="rgb(212,106,34)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (124 samples, 0.05%)</title><rect x="28.4585%" y="1061" width="0.0450%" height="15" fill="rgb(206,83,17)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1071.50"></text></g><g><title>getifaddrs (124 samples, 0.05%)</title><rect x="28.4585%" y="1045" width="0.0450%" height="15" fill="rgb(244,154,49)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1055.50"></text></g><g><title>[libc.so.6] (124 samples, 0.05%)</title><rect x="28.4585%" y="1029" width="0.0450%" height="15" fill="rgb(244,149,49)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1039.50"></text></g><g><title>[libc.so.6] (124 samples, 0.05%)</title><rect x="28.4585%" y="1013" width="0.0450%" height="15" fill="rgb(227,134,18)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1023.50"></text></g><g><title>malloc (124 samples, 0.05%)</title><rect x="28.4585%" y="997" width="0.0450%" height="15" fill="rgb(237,116,36)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="1007.50"></text></g><g><title>[libc.so.6] (124 samples, 0.05%)</title><rect x="28.4585%" y="981" width="0.0450%" height="15" fill="rgb(205,129,40)" fg:x="78358" fg:w="124"/><text x="28.7085%" y="991.50"></text></g><g><title>[libc.so.6] (108 samples, 0.04%)</title><rect x="28.4643%" y="965" width="0.0392%" height="15" fill="rgb(236,178,4)" fg:x="78374" fg:w="108"/><text x="28.7143%" y="975.50"></text></g><g><title>__mprotect (38 samples, 0.01%)</title><rect x="28.4898%" y="949" width="0.0138%" height="15" fill="rgb(251,76,53)" fg:x="78444" fg:w="38"/><text x="28.7398%" y="959.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="28.4898%" y="933" width="0.0138%" height="15" fill="rgb(242,92,40)" fg:x="78444" fg:w="38"/><text x="28.7398%" y="943.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="28.4909%" y="917" width="0.0127%" height="15" fill="rgb(209,45,30)" fg:x="78447" fg:w="35"/><text x="28.7409%" y="927.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="28.4909%" y="901" width="0.0127%" height="15" fill="rgb(218,157,36)" fg:x="78447" fg:w="35"/><text x="28.7409%" y="911.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="28.4912%" y="885" width="0.0123%" height="15" fill="rgb(222,186,16)" fg:x="78448" fg:w="34"/><text x="28.7412%" y="895.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="28.4927%" y="869" width="0.0109%" height="15" fill="rgb(254,72,35)" fg:x="78452" fg:w="30"/><text x="28.7427%" y="879.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (29 samples, 0.01%)</title><rect x="28.5515%" y="1221" width="0.0105%" height="15" fill="rgb(224,25,35)" fg:x="78614" fg:w="29"/><text x="28.8015%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="28.5740%" y="1061" width="0.0105%" height="15" fill="rgb(206,135,52)" fg:x="78676" fg:w="29"/><text x="28.8240%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="28.5740%" y="1045" width="0.0105%" height="15" fill="rgb(229,174,47)" fg:x="78676" fg:w="29"/><text x="28.8240%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (29 samples, 0.01%)</title><rect x="28.5740%" y="1029" width="0.0105%" height="15" fill="rgb(242,184,21)" fg:x="78676" fg:w="29"/><text x="28.8240%" y="1039.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (72 samples, 0.03%)</title><rect x="28.5668%" y="1157" width="0.0261%" height="15" fill="rgb(213,22,45)" fg:x="78656" fg:w="72"/><text x="28.8168%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (69 samples, 0.03%)</title><rect x="28.5678%" y="1141" width="0.0251%" height="15" fill="rgb(237,81,54)" fg:x="78659" fg:w="69"/><text x="28.8178%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.02%)</title><rect x="28.5740%" y="1125" width="0.0189%" height="15" fill="rgb(248,177,18)" fg:x="78676" fg:w="52"/><text x="28.8240%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (52 samples, 0.02%)</title><rect x="28.5740%" y="1109" width="0.0189%" height="15" fill="rgb(254,31,16)" fg:x="78676" fg:w="52"/><text x="28.8240%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (52 samples, 0.02%)</title><rect x="28.5740%" y="1093" width="0.0189%" height="15" fill="rgb(235,20,31)" fg:x="78676" fg:w="52"/><text x="28.8240%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.02%)</title><rect x="28.5740%" y="1077" width="0.0189%" height="15" fill="rgb(240,56,43)" fg:x="78676" fg:w="52"/><text x="28.8240%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (77 samples, 0.03%)</title><rect x="28.5929%" y="1157" width="0.0280%" height="15" fill="rgb(237,197,51)" fg:x="78728" fg:w="77"/><text x="28.8429%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (71 samples, 0.03%)</title><rect x="28.5951%" y="1141" width="0.0258%" height="15" fill="rgb(241,162,44)" fg:x="78734" fg:w="71"/><text x="28.8451%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (71 samples, 0.03%)</title><rect x="28.5951%" y="1125" width="0.0258%" height="15" fill="rgb(224,23,20)" fg:x="78734" fg:w="71"/><text x="28.8451%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.03%)</title><rect x="28.5955%" y="1109" width="0.0254%" height="15" fill="rgb(250,109,34)" fg:x="78735" fg:w="70"/><text x="28.8455%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.03%)</title><rect x="28.5955%" y="1093" width="0.0254%" height="15" fill="rgb(214,175,50)" fg:x="78735" fg:w="70"/><text x="28.8455%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.03%)</title><rect x="28.5955%" y="1077" width="0.0254%" height="15" fill="rgb(213,182,5)" fg:x="78735" fg:w="70"/><text x="28.8455%" y="1087.50"></text></g><g><title>malloc (56 samples, 0.02%)</title><rect x="28.6005%" y="1061" width="0.0203%" height="15" fill="rgb(209,199,19)" fg:x="78749" fg:w="56"/><text x="28.8505%" y="1071.50"></text></g><g><title>[libc.so.6] (40 samples, 0.01%)</title><rect x="28.6576%" y="965" width="0.0145%" height="15" fill="rgb(236,224,42)" fg:x="78906" fg:w="40"/><text x="28.9076%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (129 samples, 0.05%)</title><rect x="28.6256%" y="1029" width="0.0469%" height="15" fill="rgb(246,226,29)" fg:x="78818" fg:w="129"/><text x="28.8756%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (129 samples, 0.05%)</title><rect x="28.6256%" y="1013" width="0.0469%" height="15" fill="rgb(227,223,11)" fg:x="78818" fg:w="129"/><text x="28.8756%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (129 samples, 0.05%)</title><rect x="28.6256%" y="997" width="0.0469%" height="15" fill="rgb(219,7,51)" fg:x="78818" fg:w="129"/><text x="28.8756%" y="1007.50"></text></g><g><title>malloc (124 samples, 0.05%)</title><rect x="28.6274%" y="981" width="0.0450%" height="15" fill="rgb(245,167,10)" fg:x="78823" fg:w="124"/><text x="28.8774%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (133 samples, 0.05%)</title><rect x="28.6245%" y="1077" width="0.0483%" height="15" fill="rgb(237,224,16)" fg:x="78815" fg:w="133"/><text x="28.8745%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (133 samples, 0.05%)</title><rect x="28.6245%" y="1061" width="0.0483%" height="15" fill="rgb(226,132,13)" fg:x="78815" fg:w="133"/><text x="28.8745%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (133 samples, 0.05%)</title><rect x="28.6245%" y="1045" width="0.0483%" height="15" fill="rgb(214,140,3)" fg:x="78815" fg:w="133"/><text x="28.8745%" y="1055.50"></text></g><g><title>core::clone::Clone::clone (206 samples, 0.07%)</title><rect x="28.6209%" y="1157" width="0.0748%" height="15" fill="rgb(221,177,4)" fg:x="78805" fg:w="206"/><text x="28.8709%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (205 samples, 0.07%)</title><rect x="28.6212%" y="1141" width="0.0745%" height="15" fill="rgb(238,139,3)" fg:x="78806" fg:w="205"/><text x="28.8712%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (196 samples, 0.07%)</title><rect x="28.6245%" y="1125" width="0.0712%" height="15" fill="rgb(216,17,39)" fg:x="78815" fg:w="196"/><text x="28.8745%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (196 samples, 0.07%)</title><rect x="28.6245%" y="1109" width="0.0712%" height="15" fill="rgb(238,120,9)" fg:x="78815" fg:w="196"/><text x="28.8745%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (196 samples, 0.07%)</title><rect x="28.6245%" y="1093" width="0.0712%" height="15" fill="rgb(244,92,53)" fg:x="78815" fg:w="196"/><text x="28.8745%" y="1103.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (63 samples, 0.02%)</title><rect x="28.6728%" y="1077" width="0.0229%" height="15" fill="rgb(224,148,33)" fg:x="78948" fg:w="63"/><text x="28.9228%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.02%)</title><rect x="28.6728%" y="1061" width="0.0229%" height="15" fill="rgb(243,6,36)" fg:x="78948" fg:w="63"/><text x="28.9228%" y="1071.50"></text></g><g><title>[libc.so.6] (61 samples, 0.02%)</title><rect x="28.6735%" y="1045" width="0.0222%" height="15" fill="rgb(230,102,11)" fg:x="78950" fg:w="61"/><text x="28.9235%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (364 samples, 0.13%)</title><rect x="28.5660%" y="1173" width="0.1322%" height="15" fill="rgb(234,148,36)" fg:x="78654" fg:w="364"/><text x="28.8160%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (378 samples, 0.14%)</title><rect x="28.5620%" y="1221" width="0.1373%" height="15" fill="rgb(251,153,25)" fg:x="78643" fg:w="378"/><text x="28.8120%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (367 samples, 0.13%)</title><rect x="28.5660%" y="1205" width="0.1333%" height="15" fill="rgb(215,129,8)" fg:x="78654" fg:w="367"/><text x="28.8160%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (367 samples, 0.13%)</title><rect x="28.5660%" y="1189" width="0.1333%" height="15" fill="rgb(224,128,35)" fg:x="78654" fg:w="367"/><text x="28.8160%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.01%)</title><rect x="28.7040%" y="1173" width="0.0116%" height="15" fill="rgb(237,56,52)" fg:x="79034" fg:w="32"/><text x="28.9540%" y="1183.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="28.7040%" y="1157" width="0.0116%" height="15" fill="rgb(234,213,19)" fg:x="79034" fg:w="32"/><text x="28.9540%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (49 samples, 0.02%)</title><rect x="28.6993%" y="1189" width="0.0178%" height="15" fill="rgb(252,82,23)" fg:x="79021" fg:w="49"/><text x="28.9493%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (50 samples, 0.02%)</title><rect x="28.6993%" y="1205" width="0.0182%" height="15" fill="rgb(254,201,21)" fg:x="79021" fg:w="50"/><text x="28.9493%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (72 samples, 0.03%)</title><rect x="28.6993%" y="1221" width="0.0261%" height="15" fill="rgb(250,186,11)" fg:x="79021" fg:w="72"/><text x="28.9493%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (67 samples, 0.02%)</title><rect x="28.7255%" y="1221" width="0.0243%" height="15" fill="rgb(211,174,5)" fg:x="79093" fg:w="67"/><text x="28.9755%" y="1231.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (44 samples, 0.02%)</title><rect x="28.7338%" y="1205" width="0.0160%" height="15" fill="rgb(214,121,10)" fg:x="79116" fg:w="44"/><text x="28.9838%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (44 samples, 0.02%)</title><rect x="28.7338%" y="1189" width="0.0160%" height="15" fill="rgb(241,66,2)" fg:x="79116" fg:w="44"/><text x="28.9838%" y="1199.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (71 samples, 0.03%)</title><rect x="28.7585%" y="1221" width="0.0258%" height="15" fill="rgb(220,167,19)" fg:x="79184" fg:w="71"/><text x="29.0085%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (55 samples, 0.02%)</title><rect x="28.7643%" y="1205" width="0.0200%" height="15" fill="rgb(231,54,50)" fg:x="79200" fg:w="55"/><text x="29.0143%" y="1215.50"></text></g><g><title>&lt;vec_map::Values&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.02%)</title><rect x="28.7843%" y="1221" width="0.0218%" height="15" fill="rgb(239,217,53)" fg:x="79255" fg:w="60"/><text x="29.0343%" y="1231.50"></text></g><g><title>&lt;vec_map::Iter&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.02%)</title><rect x="28.7843%" y="1205" width="0.0218%" height="15" fill="rgb(248,8,0)" fg:x="79255" fg:w="60"/><text x="29.0343%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.01%)</title><rect x="28.8275%" y="1189" width="0.0109%" height="15" fill="rgb(229,118,37)" fg:x="79374" fg:w="30"/><text x="29.0775%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.01%)</title><rect x="28.8275%" y="1173" width="0.0109%" height="15" fill="rgb(253,223,43)" fg:x="79374" fg:w="30"/><text x="29.0775%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.01%)</title><rect x="28.8275%" y="1157" width="0.0109%" height="15" fill="rgb(211,77,36)" fg:x="79374" fg:w="30"/><text x="29.0775%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (59 samples, 0.02%)</title><rect x="28.8402%" y="1141" width="0.0214%" height="15" fill="rgb(219,3,53)" fg:x="79409" fg:w="59"/><text x="29.0902%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.02%)</title><rect x="28.8410%" y="1125" width="0.0207%" height="15" fill="rgb(244,45,42)" fg:x="79411" fg:w="57"/><text x="29.0910%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.02%)</title><rect x="28.8410%" y="1109" width="0.0207%" height="15" fill="rgb(225,95,27)" fg:x="79411" fg:w="57"/><text x="29.0910%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.02%)</title><rect x="28.8413%" y="1093" width="0.0203%" height="15" fill="rgb(207,74,8)" fg:x="79412" fg:w="56"/><text x="29.0913%" y="1103.50"></text></g><g><title>malloc (42 samples, 0.02%)</title><rect x="28.8464%" y="1077" width="0.0153%" height="15" fill="rgb(243,63,36)" fg:x="79426" fg:w="42"/><text x="29.0964%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (67 samples, 0.02%)</title><rect x="28.8384%" y="1189" width="0.0243%" height="15" fill="rgb(211,180,12)" fg:x="79404" fg:w="67"/><text x="29.0884%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.02%)</title><rect x="28.8384%" y="1173" width="0.0243%" height="15" fill="rgb(254,166,49)" fg:x="79404" fg:w="67"/><text x="29.0884%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 0.02%)</title><rect x="28.8402%" y="1157" width="0.0225%" height="15" fill="rgb(205,19,0)" fg:x="79409" fg:w="62"/><text x="29.0902%" y="1167.50"></text></g><g><title>&lt;[V] as alloc::slice::Concat&lt;T&gt;&gt;::concat (111 samples, 0.04%)</title><rect x="28.8261%" y="1205" width="0.0403%" height="15" fill="rgb(224,172,32)" fg:x="79370" fg:w="111"/><text x="29.0761%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (144 samples, 0.05%)</title><rect x="28.8166%" y="1221" width="0.0523%" height="15" fill="rgb(254,136,30)" fg:x="79344" fg:w="144"/><text x="29.0666%" y="1231.50"></text></g><g><title>core::cmp::PartialEq::ne (74 samples, 0.03%)</title><rect x="28.8718%" y="1221" width="0.0269%" height="15" fill="rgb(246,19,35)" fg:x="79496" fg:w="74"/><text x="29.1218%" y="1231.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (74 samples, 0.03%)</title><rect x="28.8718%" y="1205" width="0.0269%" height="15" fill="rgb(219,24,36)" fg:x="79496" fg:w="74"/><text x="29.1218%" y="1215.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (49 samples, 0.02%)</title><rect x="28.8809%" y="1189" width="0.0178%" height="15" fill="rgb(251,55,1)" fg:x="79521" fg:w="49"/><text x="29.1309%" y="1199.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (49 samples, 0.02%)</title><rect x="28.8809%" y="1173" width="0.0178%" height="15" fill="rgb(218,117,39)" fg:x="79521" fg:w="49"/><text x="29.1309%" y="1183.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (49 samples, 0.02%)</title><rect x="28.8809%" y="1157" width="0.0178%" height="15" fill="rgb(248,169,11)" fg:x="79521" fg:w="49"/><text x="29.1309%" y="1167.50"></text></g><g><title>[libc.so.6] (49 samples, 0.02%)</title><rect x="28.8809%" y="1141" width="0.0178%" height="15" fill="rgb(244,40,44)" fg:x="79521" fg:w="49"/><text x="29.1309%" y="1151.50"></text></g><g><title>[libc.so.6] (61 samples, 0.02%)</title><rect x="29.0407%" y="1093" width="0.0222%" height="15" fill="rgb(234,62,37)" fg:x="79961" fg:w="61"/><text x="29.2907%" y="1103.50"></text></g><g><title>cfree (138 samples, 0.05%)</title><rect x="29.0138%" y="1109" width="0.0501%" height="15" fill="rgb(207,117,42)" fg:x="79887" fg:w="138"/><text x="29.2638%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (374 samples, 0.14%)</title><rect x="29.1722%" y="917" width="0.1358%" height="15" fill="rgb(213,43,2)" fg:x="80323" fg:w="374"/><text x="29.4222%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (593 samples, 0.22%)</title><rect x="29.1253%" y="997" width="0.2154%" height="15" fill="rgb(244,202,51)" fg:x="80194" fg:w="593"/><text x="29.3753%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (592 samples, 0.22%)</title><rect x="29.1257%" y="981" width="0.2150%" height="15" fill="rgb(253,174,46)" fg:x="80195" fg:w="592"/><text x="29.3757%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (584 samples, 0.21%)</title><rect x="29.1286%" y="965" width="0.2121%" height="15" fill="rgb(251,23,1)" fg:x="80203" fg:w="584"/><text x="29.3786%" y="975.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (584 samples, 0.21%)</title><rect x="29.1286%" y="949" width="0.2121%" height="15" fill="rgb(253,26,1)" fg:x="80203" fg:w="584"/><text x="29.3786%" y="959.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (464 samples, 0.17%)</title><rect x="29.1722%" y="933" width="0.1685%" height="15" fill="rgb(216,89,31)" fg:x="80323" fg:w="464"/><text x="29.4222%" y="943.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::get (90 samples, 0.03%)</title><rect x="29.3080%" y="917" width="0.0327%" height="15" fill="rgb(209,109,5)" fg:x="80697" fg:w="90"/><text x="29.5580%" y="927.50"></text></g><g><title>[libc.so.6] (155 samples, 0.06%)</title><rect x="29.9955%" y="821" width="0.0563%" height="15" fill="rgb(229,63,13)" fg:x="82590" fg:w="155"/><text x="30.2455%" y="831.50"></text></g><g><title>[libc.so.6] (1,379 samples, 0.50%)</title><rect x="29.5590%" y="837" width="0.5008%" height="15" fill="rgb(238,137,54)" fg:x="81388" fg:w="1379"/><text x="29.8090%" y="847.50"></text></g><g><title>[libc.so.6] (1,620 samples, 0.59%)</title><rect x="29.4725%" y="853" width="0.5884%" height="15" fill="rgb(228,1,9)" fg:x="81150" fg:w="1620"/><text x="29.7225%" y="863.50"></text></g><g><title>__lll_lock_wait_private (30 samples, 0.01%)</title><rect x="30.0613%" y="853" width="0.0109%" height="15" fill="rgb(249,120,48)" fg:x="82771" fg:w="30"/><text x="30.3113%" y="863.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="30.0616%" y="837" width="0.0105%" height="15" fill="rgb(209,72,36)" fg:x="82772" fg:w="29"/><text x="30.3116%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,923 samples, 0.70%)</title><rect x="29.3847%" y="917" width="0.6984%" height="15" fill="rgb(247,98,49)" fg:x="80908" fg:w="1923"/><text x="29.6347%" y="927.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,923 samples, 0.70%)</title><rect x="29.3847%" y="901" width="0.6984%" height="15" fill="rgb(233,75,36)" fg:x="80908" fg:w="1923"/><text x="29.6347%" y="911.50"></text></g><g><title>alloc::alloc::realloc (1,923 samples, 0.70%)</title><rect x="29.3847%" y="885" width="0.6984%" height="15" fill="rgb(225,14,24)" fg:x="80908" fg:w="1923"/><text x="29.6347%" y="895.50"></text></g><g><title>realloc (1,877 samples, 0.68%)</title><rect x="29.4014%" y="869" width="0.6817%" height="15" fill="rgb(237,193,20)" fg:x="80954" fg:w="1877"/><text x="29.6514%" y="879.50"></text></g><g><title>__lll_lock_wake_private (30 samples, 0.01%)</title><rect x="30.0722%" y="853" width="0.0109%" height="15" fill="rgb(239,122,19)" fg:x="82801" fg:w="30"/><text x="30.3222%" y="863.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="30.0722%" y="837" width="0.0109%" height="15" fill="rgb(231,220,10)" fg:x="82801" fg:w="30"/><text x="30.3222%" y="847.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="30.0722%" y="821" width="0.0109%" height="15" fill="rgb(220,66,15)" fg:x="82801" fg:w="30"/><text x="30.3222%" y="831.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="30.0722%" y="805" width="0.0109%" height="15" fill="rgb(215,171,52)" fg:x="82801" fg:w="30"/><text x="30.3222%" y="815.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="30.0725%" y="789" width="0.0105%" height="15" fill="rgb(241,169,50)" fg:x="82802" fg:w="29"/><text x="30.3225%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,010 samples, 0.73%)</title><rect x="29.3614%" y="933" width="0.7300%" height="15" fill="rgb(236,189,0)" fg:x="80844" fg:w="2010"/><text x="29.6114%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,092 samples, 0.76%)</title><rect x="29.3436%" y="997" width="0.7598%" height="15" fill="rgb(217,147,20)" fg:x="80795" fg:w="2092"/><text x="29.5936%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,092 samples, 0.76%)</title><rect x="29.3436%" y="981" width="0.7598%" height="15" fill="rgb(206,188,39)" fg:x="80795" fg:w="2092"/><text x="29.5936%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,090 samples, 0.76%)</title><rect x="29.3443%" y="965" width="0.7591%" height="15" fill="rgb(227,118,25)" fg:x="80797" fg:w="2090"/><text x="29.5943%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,082 samples, 0.76%)</title><rect x="29.3472%" y="949" width="0.7562%" height="15" fill="rgb(248,171,40)" fg:x="80805" fg:w="2082"/><text x="29.5972%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,837 samples, 1.03%)</title><rect x="29.1170%" y="1029" width="1.0304%" height="15" fill="rgb(251,90,54)" fg:x="80171" fg:w="2837"/><text x="29.3670%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,837 samples, 1.03%)</title><rect x="29.1170%" y="1013" width="1.0304%" height="15" fill="rgb(234,11,46)" fg:x="80171" fg:w="2837"/><text x="29.3670%" y="1023.50"></text></g><g><title>core::ptr::write (117 samples, 0.04%)</title><rect x="30.1049%" y="997" width="0.0425%" height="15" fill="rgb(229,134,13)" fg:x="82891" fg:w="117"/><text x="30.3549%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (121 samples, 0.04%)</title><rect x="30.1572%" y="949" width="0.0439%" height="15" fill="rgb(223,129,3)" fg:x="83035" fg:w="121"/><text x="30.4072%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (383 samples, 0.14%)</title><rect x="30.1473%" y="1029" width="0.1391%" height="15" fill="rgb(221,124,13)" fg:x="83008" fg:w="383"/><text x="30.3973%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (383 samples, 0.14%)</title><rect x="30.1473%" y="1013" width="0.1391%" height="15" fill="rgb(234,3,18)" fg:x="83008" fg:w="383"/><text x="30.3973%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (376 samples, 0.14%)</title><rect x="30.1499%" y="997" width="0.1366%" height="15" fill="rgb(249,199,20)" fg:x="83015" fg:w="376"/><text x="30.3999%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (376 samples, 0.14%)</title><rect x="30.1499%" y="981" width="0.1366%" height="15" fill="rgb(224,134,6)" fg:x="83015" fg:w="376"/><text x="30.3999%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (356 samples, 0.13%)</title><rect x="30.1572%" y="965" width="0.1293%" height="15" fill="rgb(254,83,26)" fg:x="83035" fg:w="356"/><text x="30.4072%" y="975.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::get (235 samples, 0.09%)</title><rect x="30.2011%" y="949" width="0.0853%" height="15" fill="rgb(217,88,9)" fg:x="83156" fg:w="235"/><text x="30.4511%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (48 samples, 0.02%)</title><rect x="30.2872%" y="1029" width="0.0174%" height="15" fill="rgb(225,73,2)" fg:x="83393" fg:w="48"/><text x="30.5372%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.02%)</title><rect x="30.2872%" y="1013" width="0.0174%" height="15" fill="rgb(226,44,39)" fg:x="83393" fg:w="48"/><text x="30.5372%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.02%)</title><rect x="30.2872%" y="997" width="0.0174%" height="15" fill="rgb(228,53,17)" fg:x="83393" fg:w="48"/><text x="30.5372%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.02%)</title><rect x="30.2872%" y="981" width="0.0174%" height="15" fill="rgb(212,27,27)" fg:x="83393" fg:w="48"/><text x="30.5372%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.02%)</title><rect x="30.2872%" y="965" width="0.0174%" height="15" fill="rgb(241,50,6)" fg:x="83393" fg:w="48"/><text x="30.5372%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.02%)</title><rect x="30.2872%" y="949" width="0.0174%" height="15" fill="rgb(225,28,51)" fg:x="83393" fg:w="48"/><text x="30.5372%" y="959.50"></text></g><g><title>alloc::alloc::alloc (48 samples, 0.02%)</title><rect x="30.2872%" y="933" width="0.0174%" height="15" fill="rgb(215,33,16)" fg:x="83393" fg:w="48"/><text x="30.5372%" y="943.50"></text></g><g><title>malloc (37 samples, 0.01%)</title><rect x="30.2912%" y="917" width="0.0134%" height="15" fill="rgb(243,40,39)" fg:x="83404" fg:w="37"/><text x="30.5412%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,319 samples, 1.21%)</title><rect x="29.1006%" y="1093" width="1.2054%" height="15" fill="rgb(225,11,42)" fg:x="80126" fg:w="3319"/><text x="29.3506%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,319 samples, 1.21%)</title><rect x="29.1006%" y="1077" width="1.2054%" height="15" fill="rgb(241,220,38)" fg:x="80126" fg:w="3319"/><text x="29.3506%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,314 samples, 1.20%)</title><rect x="29.1025%" y="1061" width="1.2036%" height="15" fill="rgb(244,52,35)" fg:x="80131" fg:w="3314"/><text x="29.3525%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,287 samples, 1.19%)</title><rect x="29.1123%" y="1045" width="1.1938%" height="15" fill="rgb(246,42,46)" fg:x="80158" fg:w="3287"/><text x="29.3623%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,612 samples, 1.31%)</title><rect x="28.9968%" y="1157" width="1.3118%" height="15" fill="rgb(205,184,13)" fg:x="79840" fg:w="3612"/><text x="29.2468%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,611 samples, 1.31%)</title><rect x="28.9971%" y="1141" width="1.3115%" height="15" fill="rgb(209,48,36)" fg:x="79841" fg:w="3611"/><text x="29.2471%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3,593 samples, 1.30%)</title><rect x="29.0037%" y="1125" width="1.3049%" height="15" fill="rgb(244,34,51)" fg:x="79859" fg:w="3593"/><text x="29.2537%" y="1135.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (3,425 samples, 1.24%)</title><rect x="29.0647%" y="1109" width="1.2439%" height="15" fill="rgb(221,107,33)" fg:x="80027" fg:w="3425"/><text x="29.3147%" y="1119.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (3,636 samples, 1.32%)</title><rect x="28.9946%" y="1173" width="1.3205%" height="15" fill="rgb(224,203,12)" fg:x="79834" fg:w="3636"/><text x="29.2446%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (142 samples, 0.05%)</title><rect x="30.3823%" y="1013" width="0.0516%" height="15" fill="rgb(230,215,18)" fg:x="83655" fg:w="142"/><text x="30.6323%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (129 samples, 0.05%)</title><rect x="30.3870%" y="997" width="0.0469%" height="15" fill="rgb(206,185,35)" fg:x="83668" fg:w="129"/><text x="30.6370%" y="1007.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (129 samples, 0.05%)</title><rect x="30.3870%" y="981" width="0.0469%" height="15" fill="rgb(228,140,34)" fg:x="83668" fg:w="129"/><text x="30.6370%" y="991.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (121 samples, 0.04%)</title><rect x="30.3900%" y="965" width="0.0439%" height="15" fill="rgb(208,93,13)" fg:x="83676" fg:w="121"/><text x="30.6400%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (121 samples, 0.04%)</title><rect x="30.3900%" y="949" width="0.0439%" height="15" fill="rgb(221,193,39)" fg:x="83676" fg:w="121"/><text x="30.6400%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (121 samples, 0.04%)</title><rect x="30.3900%" y="933" width="0.0439%" height="15" fill="rgb(241,132,34)" fg:x="83676" fg:w="121"/><text x="30.6400%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (121 samples, 0.04%)</title><rect x="30.3900%" y="917" width="0.0439%" height="15" fill="rgb(221,141,10)" fg:x="83676" fg:w="121"/><text x="30.6400%" y="927.50"></text></g><g><title>[libc.so.6] (114 samples, 0.04%)</title><rect x="30.3925%" y="901" width="0.0414%" height="15" fill="rgb(226,90,31)" fg:x="83683" fg:w="114"/><text x="30.6425%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (150 samples, 0.05%)</title><rect x="30.3823%" y="1029" width="0.0545%" height="15" fill="rgb(243,75,5)" fg:x="83655" fg:w="150"/><text x="30.6323%" y="1039.50"></text></g><g><title>[libc.so.6] (37 samples, 0.01%)</title><rect x="30.4677%" y="821" width="0.0134%" height="15" fill="rgb(227,156,21)" fg:x="83890" fg:w="37"/><text x="30.7177%" y="831.50"></text></g><g><title>[libc.so.6] (33 samples, 0.01%)</title><rect x="30.4691%" y="805" width="0.0120%" height="15" fill="rgb(250,195,8)" fg:x="83894" fg:w="33"/><text x="30.7191%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (54 samples, 0.02%)</title><rect x="30.4633%" y="965" width="0.0196%" height="15" fill="rgb(220,134,5)" fg:x="83878" fg:w="54"/><text x="30.7133%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (54 samples, 0.02%)</title><rect x="30.4633%" y="949" width="0.0196%" height="15" fill="rgb(246,106,34)" fg:x="83878" fg:w="54"/><text x="30.7133%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (54 samples, 0.02%)</title><rect x="30.4633%" y="933" width="0.0196%" height="15" fill="rgb(205,1,4)" fg:x="83878" fg:w="54"/><text x="30.7133%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (54 samples, 0.02%)</title><rect x="30.4633%" y="917" width="0.0196%" height="15" fill="rgb(224,151,29)" fg:x="83878" fg:w="54"/><text x="30.7133%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (54 samples, 0.02%)</title><rect x="30.4633%" y="901" width="0.0196%" height="15" fill="rgb(251,196,0)" fg:x="83878" fg:w="54"/><text x="30.7133%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (51 samples, 0.02%)</title><rect x="30.4644%" y="885" width="0.0185%" height="15" fill="rgb(212,127,0)" fg:x="83881" fg:w="51"/><text x="30.7144%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (51 samples, 0.02%)</title><rect x="30.4644%" y="869" width="0.0185%" height="15" fill="rgb(236,71,53)" fg:x="83881" fg:w="51"/><text x="30.7144%" y="879.50"></text></g><g><title>alloc::alloc::realloc (51 samples, 0.02%)</title><rect x="30.4644%" y="853" width="0.0185%" height="15" fill="rgb(227,99,0)" fg:x="83881" fg:w="51"/><text x="30.7144%" y="863.50"></text></g><g><title>realloc (50 samples, 0.02%)</title><rect x="30.4648%" y="837" width="0.0182%" height="15" fill="rgb(239,89,21)" fg:x="83882" fg:w="50"/><text x="30.7148%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (60 samples, 0.02%)</title><rect x="30.4630%" y="997" width="0.0218%" height="15" fill="rgb(243,122,19)" fg:x="83877" fg:w="60"/><text x="30.7130%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (60 samples, 0.02%)</title><rect x="30.4630%" y="981" width="0.0218%" height="15" fill="rgb(229,192,45)" fg:x="83877" fg:w="60"/><text x="30.7130%" y="991.50"></text></g><g><title>zenoh::net::routing::network::Link::set_pid_mapping (73 samples, 0.03%)</title><rect x="30.4622%" y="1029" width="0.0265%" height="15" fill="rgb(235,165,35)" fg:x="83875" fg:w="73"/><text x="30.7122%" y="1039.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (73 samples, 0.03%)</title><rect x="30.4622%" y="1013" width="0.0265%" height="15" fill="rgb(253,202,0)" fg:x="83875" fg:w="73"/><text x="30.7122%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Network::add_node (57 samples, 0.02%)</title><rect x="30.4887%" y="1029" width="0.0207%" height="15" fill="rgb(235,51,20)" fg:x="83948" fg:w="57"/><text x="30.7387%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (469 samples, 0.17%)</title><rect x="30.3406%" y="1125" width="0.1703%" height="15" fill="rgb(218,95,46)" fg:x="83540" fg:w="469"/><text x="30.5906%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (469 samples, 0.17%)</title><rect x="30.3406%" y="1109" width="0.1703%" height="15" fill="rgb(212,81,10)" fg:x="83540" fg:w="469"/><text x="30.5906%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (469 samples, 0.17%)</title><rect x="30.3406%" y="1093" width="0.1703%" height="15" fill="rgb(240,59,0)" fg:x="83540" fg:w="469"/><text x="30.5906%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (447 samples, 0.16%)</title><rect x="30.3485%" y="1077" width="0.1623%" height="15" fill="rgb(212,191,42)" fg:x="83562" fg:w="447"/><text x="30.5985%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (413 samples, 0.15%)</title><rect x="30.3609%" y="1061" width="0.1500%" height="15" fill="rgb(233,140,3)" fg:x="83596" fg:w="413"/><text x="30.6109%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (382 samples, 0.14%)</title><rect x="30.3722%" y="1045" width="0.1387%" height="15" fill="rgb(215,69,23)" fg:x="83627" fg:w="382"/><text x="30.6222%" y="1055.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="30.5269%" y="949" width="0.0116%" height="15" fill="rgb(240,202,20)" fg:x="84053" fg:w="32"/><text x="30.7769%" y="959.50"></text></g><g><title>[libc.so.6] (62 samples, 0.02%)</title><rect x="30.5163%" y="965" width="0.0225%" height="15" fill="rgb(209,146,50)" fg:x="84024" fg:w="62"/><text x="30.7663%" y="975.50"></text></g><g><title>[libc.so.6] (69 samples, 0.03%)</title><rect x="30.5149%" y="981" width="0.0251%" height="15" fill="rgb(253,102,54)" fg:x="84020" fg:w="69"/><text x="30.7649%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (80 samples, 0.03%)</title><rect x="30.5123%" y="1045" width="0.0291%" height="15" fill="rgb(250,173,47)" fg:x="84013" fg:w="80"/><text x="30.7623%" y="1055.50"></text></g><g><title>alloc::alloc::Global::grow_impl (80 samples, 0.03%)</title><rect x="30.5123%" y="1029" width="0.0291%" height="15" fill="rgb(232,142,7)" fg:x="84013" fg:w="80"/><text x="30.7623%" y="1039.50"></text></g><g><title>alloc::alloc::realloc (80 samples, 0.03%)</title><rect x="30.5123%" y="1013" width="0.0291%" height="15" fill="rgb(230,157,47)" fg:x="84013" fg:w="80"/><text x="30.7623%" y="1023.50"></text></g><g><title>realloc (80 samples, 0.03%)</title><rect x="30.5123%" y="997" width="0.0291%" height="15" fill="rgb(214,177,35)" fg:x="84013" fg:w="80"/><text x="30.7623%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (85 samples, 0.03%)</title><rect x="30.5109%" y="1093" width="0.0309%" height="15" fill="rgb(234,119,46)" fg:x="84009" fg:w="85"/><text x="30.7609%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (84 samples, 0.03%)</title><rect x="30.5113%" y="1077" width="0.0305%" height="15" fill="rgb(241,180,50)" fg:x="84010" fg:w="84"/><text x="30.7613%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.03%)</title><rect x="30.5116%" y="1061" width="0.0301%" height="15" fill="rgb(221,54,25)" fg:x="84011" fg:w="83"/><text x="30.7616%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (86 samples, 0.03%)</title><rect x="30.5109%" y="1125" width="0.0312%" height="15" fill="rgb(209,157,44)" fg:x="84009" fg:w="86"/><text x="30.7609%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (86 samples, 0.03%)</title><rect x="30.5109%" y="1109" width="0.0312%" height="15" fill="rgb(246,115,41)" fg:x="84009" fg:w="86"/><text x="30.7609%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.01%)</title><rect x="30.5429%" y="1013" width="0.0105%" height="15" fill="rgb(229,86,1)" fg:x="84097" fg:w="29"/><text x="30.7929%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.01%)</title><rect x="30.5429%" y="997" width="0.0105%" height="15" fill="rgb(240,108,53)" fg:x="84097" fg:w="29"/><text x="30.7929%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (34 samples, 0.01%)</title><rect x="30.5421%" y="1125" width="0.0123%" height="15" fill="rgb(227,134,2)" fg:x="84095" fg:w="34"/><text x="30.7921%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (34 samples, 0.01%)</title><rect x="30.5421%" y="1109" width="0.0123%" height="15" fill="rgb(213,129,25)" fg:x="84095" fg:w="34"/><text x="30.7921%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="30.5421%" y="1093" width="0.0123%" height="15" fill="rgb(226,35,21)" fg:x="84095" fg:w="34"/><text x="30.7921%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool),alloc::alloc::Global&gt;&gt; (34 samples, 0.01%)</title><rect x="30.5421%" y="1077" width="0.0123%" height="15" fill="rgb(208,129,26)" fg:x="84095" fg:w="34"/><text x="30.7921%" y="1087.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="30.5421%" y="1061" width="0.0123%" height="15" fill="rgb(224,83,6)" fg:x="84095" fg:w="34"/><text x="30.7921%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (32 samples, 0.01%)</title><rect x="30.5429%" y="1045" width="0.0116%" height="15" fill="rgb(227,52,39)" fg:x="84097" fg:w="32"/><text x="30.7929%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="30.5429%" y="1029" width="0.0116%" height="15" fill="rgb(241,30,17)" fg:x="84097" fg:w="32"/><text x="30.7929%" y="1039.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="30.5610%" y="1093" width="0.0102%" height="15" fill="rgb(246,186,42)" fg:x="84147" fg:w="28"/><text x="30.8110%" y="1103.50"></text></g><g><title>[libc.so.6] (178 samples, 0.06%)</title><rect x="30.6297%" y="1077" width="0.0646%" height="15" fill="rgb(221,169,15)" fg:x="84336" fg:w="178"/><text x="30.8797%" y="1087.50"></text></g><g><title>cfree (330 samples, 0.12%)</title><rect x="30.5752%" y="1093" width="0.1199%" height="15" fill="rgb(235,108,21)" fg:x="84186" fg:w="330"/><text x="30.8252%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;zenoh_protocol::proto::msg::LinkState&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (375 samples, 0.14%)</title><rect x="30.5592%" y="1125" width="0.1362%" height="15" fill="rgb(219,148,30)" fg:x="84142" fg:w="375"/><text x="30.8092%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;zenoh_protocol::proto::msg::LinkState&gt;&gt; (375 samples, 0.14%)</title><rect x="30.5592%" y="1109" width="0.1362%" height="15" fill="rgb(220,109,5)" fg:x="84142" fg:w="375"/><text x="30.8092%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (998 samples, 0.36%)</title><rect x="30.3380%" y="1141" width="0.3625%" height="15" fill="rgb(213,203,48)" fg:x="83533" fg:w="998"/><text x="30.5880%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,017 samples, 0.37%)</title><rect x="30.3358%" y="1157" width="0.3694%" height="15" fill="rgb(244,71,33)" fg:x="83527" fg:w="1017"/><text x="30.5858%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.04%)</title><rect x="30.7964%" y="1109" width="0.0385%" height="15" fill="rgb(209,23,2)" fg:x="84795" fg:w="106"/><text x="31.0464%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39 samples, 0.01%)</title><rect x="30.9420%" y="1077" width="0.0142%" height="15" fill="rgb(219,97,7)" fg:x="85196" fg:w="39"/><text x="31.1920%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (79 samples, 0.03%)</title><rect x="31.0143%" y="997" width="0.0287%" height="15" fill="rgb(216,161,23)" fg:x="85395" fg:w="79"/><text x="31.2643%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (79 samples, 0.03%)</title><rect x="31.0143%" y="981" width="0.0287%" height="15" fill="rgb(207,45,42)" fg:x="85395" fg:w="79"/><text x="31.2643%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (79 samples, 0.03%)</title><rect x="31.0143%" y="965" width="0.0287%" height="15" fill="rgb(241,61,4)" fg:x="85395" fg:w="79"/><text x="31.2643%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (79 samples, 0.03%)</title><rect x="31.0143%" y="949" width="0.0287%" height="15" fill="rgb(236,170,1)" fg:x="85395" fg:w="79"/><text x="31.2643%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79 samples, 0.03%)</title><rect x="31.0143%" y="933" width="0.0287%" height="15" fill="rgb(239,72,5)" fg:x="85395" fg:w="79"/><text x="31.2643%" y="943.50"></text></g><g><title>alloc::alloc::alloc (78 samples, 0.03%)</title><rect x="31.0146%" y="917" width="0.0283%" height="15" fill="rgb(214,13,50)" fg:x="85396" fg:w="78"/><text x="31.2646%" y="927.50"></text></g><g><title>malloc (75 samples, 0.03%)</title><rect x="31.0157%" y="901" width="0.0272%" height="15" fill="rgb(224,88,9)" fg:x="85399" fg:w="75"/><text x="31.2657%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (98 samples, 0.04%)</title><rect x="31.0143%" y="1061" width="0.0356%" height="15" fill="rgb(238,192,34)" fg:x="85395" fg:w="98"/><text x="31.2643%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (98 samples, 0.04%)</title><rect x="31.0143%" y="1045" width="0.0356%" height="15" fill="rgb(217,203,50)" fg:x="85395" fg:w="98"/><text x="31.2643%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (98 samples, 0.04%)</title><rect x="31.0143%" y="1029" width="0.0356%" height="15" fill="rgb(241,123,32)" fg:x="85395" fg:w="98"/><text x="31.2643%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (98 samples, 0.04%)</title><rect x="31.0143%" y="1013" width="0.0356%" height="15" fill="rgb(248,151,39)" fg:x="85395" fg:w="98"/><text x="31.2643%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (39 samples, 0.01%)</title><rect x="31.0499%" y="1045" width="0.0142%" height="15" fill="rgb(208,89,6)" fg:x="85493" fg:w="39"/><text x="31.2999%" y="1055.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (43 samples, 0.02%)</title><rect x="31.0499%" y="1061" width="0.0156%" height="15" fill="rgb(254,43,26)" fg:x="85493" fg:w="43"/><text x="31.2999%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (66 samples, 0.02%)</title><rect x="31.0655%" y="1045" width="0.0240%" height="15" fill="rgb(216,158,13)" fg:x="85536" fg:w="66"/><text x="31.3155%" y="1055.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::IndexMut&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index_mut (72 samples, 0.03%)</title><rect x="31.0655%" y="1061" width="0.0261%" height="15" fill="rgb(212,47,37)" fg:x="85536" fg:w="72"/><text x="31.3155%" y="1071.50"></text></g><g><title>[libc.so.6] (28 samples, 0.01%)</title><rect x="31.0945%" y="981" width="0.0102%" height="15" fill="rgb(254,16,10)" fg:x="85616" fg:w="28"/><text x="31.3445%" y="991.50"></text></g><g><title>core::cmp::PartialEq::ne (35 samples, 0.01%)</title><rect x="31.0924%" y="1061" width="0.0127%" height="15" fill="rgb(223,228,16)" fg:x="85610" fg:w="35"/><text x="31.3424%" y="1071.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (35 samples, 0.01%)</title><rect x="31.0924%" y="1045" width="0.0127%" height="15" fill="rgb(249,108,50)" fg:x="85610" fg:w="35"/><text x="31.3424%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (29 samples, 0.01%)</title><rect x="31.0945%" y="1029" width="0.0105%" height="15" fill="rgb(208,220,5)" fg:x="85616" fg:w="29"/><text x="31.3445%" y="1039.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (29 samples, 0.01%)</title><rect x="31.0945%" y="1013" width="0.0105%" height="15" fill="rgb(217,89,48)" fg:x="85616" fg:w="29"/><text x="31.3445%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (29 samples, 0.01%)</title><rect x="31.0945%" y="997" width="0.0105%" height="15" fill="rgb(212,113,41)" fg:x="85616" fg:w="29"/><text x="31.3445%" y="1007.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.01%)</title><rect x="31.1062%" y="1029" width="0.0134%" height="15" fill="rgb(231,127,5)" fg:x="85648" fg:w="37"/><text x="31.3562%" y="1039.50"></text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (37 samples, 0.01%)</title><rect x="31.1062%" y="1013" width="0.0134%" height="15" fill="rgb(217,141,17)" fg:x="85648" fg:w="37"/><text x="31.3562%" y="1023.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (37 samples, 0.01%)</title><rect x="31.1062%" y="997" width="0.0134%" height="15" fill="rgb(245,125,54)" fg:x="85648" fg:w="37"/><text x="31.3562%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (37 samples, 0.01%)</title><rect x="31.1062%" y="981" width="0.0134%" height="15" fill="rgb(248,125,3)" fg:x="85648" fg:w="37"/><text x="31.3562%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (152 samples, 0.06%)</title><rect x="31.1051%" y="1045" width="0.0552%" height="15" fill="rgb(236,119,51)" fg:x="85645" fg:w="152"/><text x="31.3551%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (112 samples, 0.04%)</title><rect x="31.1196%" y="1029" width="0.0407%" height="15" fill="rgb(239,99,8)" fg:x="85685" fg:w="112"/><text x="31.3696%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}}::{{closure}} (112 samples, 0.04%)</title><rect x="31.1196%" y="1013" width="0.0407%" height="15" fill="rgb(224,228,4)" fg:x="85685" fg:w="112"/><text x="31.3696%" y="1023.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (108 samples, 0.04%)</title><rect x="31.1210%" y="997" width="0.0392%" height="15" fill="rgb(220,131,45)" fg:x="85689" fg:w="108"/><text x="31.3710%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (100 samples, 0.04%)</title><rect x="31.1240%" y="981" width="0.0363%" height="15" fill="rgb(215,62,5)" fg:x="85697" fg:w="100"/><text x="31.3740%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (100 samples, 0.04%)</title><rect x="31.1240%" y="965" width="0.0363%" height="15" fill="rgb(253,12,24)" fg:x="85697" fg:w="100"/><text x="31.3740%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (100 samples, 0.04%)</title><rect x="31.1240%" y="949" width="0.0363%" height="15" fill="rgb(248,120,50)" fg:x="85697" fg:w="100"/><text x="31.3740%" y="959.50"></text></g><g><title>[libc.so.6] (96 samples, 0.03%)</title><rect x="31.1254%" y="933" width="0.0349%" height="15" fill="rgb(245,194,10)" fg:x="85701" fg:w="96"/><text x="31.3754%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (156 samples, 0.06%)</title><rect x="31.1051%" y="1061" width="0.0567%" height="15" fill="rgb(241,149,38)" fg:x="85645" fg:w="156"/><text x="31.3551%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt; (37 samples, 0.01%)</title><rect x="31.1643%" y="1061" width="0.0134%" height="15" fill="rgb(219,215,7)" fg:x="85808" fg:w="37"/><text x="31.4143%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;&gt; (37 samples, 0.01%)</title><rect x="31.1643%" y="1045" width="0.0134%" height="15" fill="rgb(208,120,31)" fg:x="85808" fg:w="37"/><text x="31.4143%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::PeerId&gt;&gt; (37 samples, 0.01%)</title><rect x="31.1643%" y="1029" width="0.0134%" height="15" fill="rgb(244,30,8)" fg:x="85808" fg:w="37"/><text x="31.4143%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.01%)</title><rect x="31.1643%" y="1013" width="0.0134%" height="15" fill="rgb(238,35,44)" fg:x="85808" fg:w="37"/><text x="31.4143%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.01%)</title><rect x="31.1646%" y="997" width="0.0131%" height="15" fill="rgb(243,218,37)" fg:x="85809" fg:w="36"/><text x="31.4146%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.01%)</title><rect x="31.1646%" y="981" width="0.0131%" height="15" fill="rgb(218,169,10)" fg:x="85809" fg:w="36"/><text x="31.4146%" y="991.50"></text></g><g><title>cfree (30 samples, 0.01%)</title><rect x="31.1668%" y="965" width="0.0109%" height="15" fill="rgb(221,144,10)" fg:x="85815" fg:w="30"/><text x="31.4168%" y="975.50"></text></g><g><title>[libc.so.6] (135 samples, 0.05%)</title><rect x="31.1973%" y="965" width="0.0490%" height="15" fill="rgb(226,41,38)" fg:x="85899" fg:w="135"/><text x="31.4473%" y="975.50"></text></g><g><title>cfree (179 samples, 0.07%)</title><rect x="31.1832%" y="981" width="0.0650%" height="15" fill="rgb(228,3,1)" fg:x="85860" fg:w="179"/><text x="31.4332%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (189 samples, 0.07%)</title><rect x="31.1799%" y="1013" width="0.0686%" height="15" fill="rgb(209,129,12)" fg:x="85851" fg:w="189"/><text x="31.4299%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (189 samples, 0.07%)</title><rect x="31.1799%" y="997" width="0.0686%" height="15" fill="rgb(213,136,33)" fg:x="85851" fg:w="189"/><text x="31.4299%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;&gt; (196 samples, 0.07%)</title><rect x="31.1777%" y="1061" width="0.0712%" height="15" fill="rgb(209,181,29)" fg:x="85845" fg:w="196"/><text x="31.4277%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::PeerId&gt;&gt; (196 samples, 0.07%)</title><rect x="31.1777%" y="1045" width="0.0712%" height="15" fill="rgb(234,173,18)" fg:x="85845" fg:w="196"/><text x="31.4277%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (196 samples, 0.07%)</title><rect x="31.1777%" y="1029" width="0.0712%" height="15" fill="rgb(227,73,47)" fg:x="85845" fg:w="196"/><text x="31.4277%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (427 samples, 0.16%)</title><rect x="31.2507%" y="917" width="0.1551%" height="15" fill="rgb(234,9,34)" fg:x="86046" fg:w="427"/><text x="31.5007%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (427 samples, 0.16%)</title><rect x="31.2507%" y="901" width="0.1551%" height="15" fill="rgb(235,172,15)" fg:x="86046" fg:w="427"/><text x="31.5007%" y="911.50"></text></g><g><title>cfree (422 samples, 0.15%)</title><rect x="31.2525%" y="885" width="0.1533%" height="15" fill="rgb(245,61,2)" fg:x="86051" fg:w="422"/><text x="31.5025%" y="895.50"></text></g><g><title>[libc.so.6] (105 samples, 0.04%)</title><rect x="31.3676%" y="869" width="0.0381%" height="15" fill="rgb(238,39,47)" fg:x="86368" fg:w="105"/><text x="31.6176%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (529 samples, 0.19%)</title><rect x="31.2503%" y="981" width="0.1921%" height="15" fill="rgb(234,37,24)" fg:x="86045" fg:w="529"/><text x="31.5003%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (529 samples, 0.19%)</title><rect x="31.2503%" y="965" width="0.1921%" height="15" fill="rgb(248,223,24)" fg:x="86045" fg:w="529"/><text x="31.5003%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (529 samples, 0.19%)</title><rect x="31.2503%" y="949" width="0.1921%" height="15" fill="rgb(223,12,15)" fg:x="86045" fg:w="529"/><text x="31.5003%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (528 samples, 0.19%)</title><rect x="31.2507%" y="933" width="0.1918%" height="15" fill="rgb(249,6,3)" fg:x="86046" fg:w="528"/><text x="31.5007%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (101 samples, 0.04%)</title><rect x="31.4058%" y="917" width="0.0367%" height="15" fill="rgb(237,105,33)" fg:x="86473" fg:w="101"/><text x="31.6558%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (564 samples, 0.20%)</title><rect x="31.2500%" y="1029" width="0.2048%" height="15" fill="rgb(252,208,35)" fg:x="86044" fg:w="564"/><text x="31.5000%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (564 samples, 0.20%)</title><rect x="31.2500%" y="1013" width="0.2048%" height="15" fill="rgb(215,181,35)" fg:x="86044" fg:w="564"/><text x="31.5000%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (563 samples, 0.20%)</title><rect x="31.2503%" y="997" width="0.2045%" height="15" fill="rgb(246,212,3)" fg:x="86045" fg:w="563"/><text x="31.5003%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;zenoh_protocol_core::locators::ArcProperties&gt;&gt; (34 samples, 0.01%)</title><rect x="31.4425%" y="981" width="0.0123%" height="15" fill="rgb(247,156,24)" fg:x="86574" fg:w="34"/><text x="31.6925%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (85 samples, 0.03%)</title><rect x="31.4548%" y="997" width="0.0309%" height="15" fill="rgb(248,9,31)" fg:x="86608" fg:w="85"/><text x="31.7048%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (85 samples, 0.03%)</title><rect x="31.4548%" y="981" width="0.0309%" height="15" fill="rgb(234,26,45)" fg:x="86608" fg:w="85"/><text x="31.7048%" y="991.50"></text></g><g><title>cfree (73 samples, 0.03%)</title><rect x="31.4592%" y="965" width="0.0265%" height="15" fill="rgb(249,11,32)" fg:x="86620" fg:w="73"/><text x="31.7092%" y="975.50"></text></g><g><title>[libc.so.6] (33 samples, 0.01%)</title><rect x="31.4737%" y="949" width="0.0120%" height="15" fill="rgb(249,162,33)" fg:x="86660" fg:w="33"/><text x="31.7237%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;&gt; (656 samples, 0.24%)</title><rect x="31.2489%" y="1061" width="0.2383%" height="15" fill="rgb(232,4,32)" fg:x="86041" fg:w="656"/><text x="31.4989%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (653 samples, 0.24%)</title><rect x="31.2500%" y="1045" width="0.2372%" height="15" fill="rgb(212,5,45)" fg:x="86044" fg:w="653"/><text x="31.5000%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (89 samples, 0.03%)</title><rect x="31.4548%" y="1029" width="0.0323%" height="15" fill="rgb(227,95,13)" fg:x="86608" fg:w="89"/><text x="31.7048%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.03%)</title><rect x="31.4548%" y="1013" width="0.0323%" height="15" fill="rgb(223,205,10)" fg:x="86608" fg:w="89"/><text x="31.7048%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (219 samples, 0.08%)</title><rect x="31.4893%" y="1045" width="0.0795%" height="15" fill="rgb(222,178,8)" fg:x="86703" fg:w="219"/><text x="31.7393%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Link::get_pid (224 samples, 0.08%)</title><rect x="31.4893%" y="1061" width="0.0814%" height="15" fill="rgb(216,13,22)" fg:x="86703" fg:w="224"/><text x="31.7393%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 0.01%)</title><rect x="31.5790%" y="997" width="0.0138%" height="15" fill="rgb(240,167,12)" fg:x="86950" fg:w="38"/><text x="31.8290%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (38 samples, 0.01%)</title><rect x="31.5790%" y="981" width="0.0138%" height="15" fill="rgb(235,68,35)" fg:x="86950" fg:w="38"/><text x="31.8290%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.01%)</title><rect x="31.5790%" y="965" width="0.0138%" height="15" fill="rgb(253,40,27)" fg:x="86950" fg:w="38"/><text x="31.8290%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (38 samples, 0.01%)</title><rect x="31.5790%" y="949" width="0.0138%" height="15" fill="rgb(214,19,28)" fg:x="86950" fg:w="38"/><text x="31.8290%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.01%)</title><rect x="31.5790%" y="933" width="0.0138%" height="15" fill="rgb(210,167,45)" fg:x="86950" fg:w="38"/><text x="31.8290%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (45 samples, 0.02%)</title><rect x="31.5790%" y="1029" width="0.0163%" height="15" fill="rgb(232,97,40)" fg:x="86950" fg:w="45"/><text x="31.8290%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (45 samples, 0.02%)</title><rect x="31.5790%" y="1013" width="0.0163%" height="15" fill="rgb(250,35,23)" fg:x="86950" fg:w="45"/><text x="31.8290%" y="1023.50"></text></g><g><title>zenoh::net::routing::network::Link::set_pid_mapping (88 samples, 0.03%)</title><rect x="31.5787%" y="1061" width="0.0320%" height="15" fill="rgb(248,47,53)" fg:x="86949" fg:w="88"/><text x="31.8287%" y="1071.50"></text></g><g><title>vec_map::VecMap&lt;V&gt;::insert (88 samples, 0.03%)</title><rect x="31.5787%" y="1045" width="0.0320%" height="15" fill="rgb(226,58,50)" fg:x="86949" fg:w="88"/><text x="31.8287%" y="1055.50"></text></g><g><title>core::mem::replace (39 samples, 0.01%)</title><rect x="31.5965%" y="1029" width="0.0142%" height="15" fill="rgb(217,105,26)" fg:x="86998" fg:w="39"/><text x="31.8465%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::add_node (33 samples, 0.01%)</title><rect x="31.6106%" y="1061" width="0.0120%" height="15" fill="rgb(208,64,1)" fg:x="87037" fg:w="33"/><text x="31.8606%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (32 samples, 0.01%)</title><rect x="31.6310%" y="965" width="0.0116%" height="15" fill="rgb(214,80,1)" fg:x="87093" fg:w="32"/><text x="31.8810%" y="975.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (32 samples, 0.01%)</title><rect x="31.6310%" y="949" width="0.0116%" height="15" fill="rgb(206,175,26)" fg:x="87093" fg:w="32"/><text x="31.8810%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32 samples, 0.01%)</title><rect x="31.6310%" y="933" width="0.0116%" height="15" fill="rgb(235,156,37)" fg:x="87093" fg:w="32"/><text x="31.8810%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (41 samples, 0.01%)</title><rect x="31.6426%" y="965" width="0.0149%" height="15" fill="rgb(213,100,9)" fg:x="87125" fg:w="41"/><text x="31.8926%" y="975.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (40 samples, 0.01%)</title><rect x="31.6429%" y="949" width="0.0145%" height="15" fill="rgb(241,15,13)" fg:x="87126" fg:w="40"/><text x="31.8929%" y="959.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (37 samples, 0.01%)</title><rect x="31.6440%" y="933" width="0.0134%" height="15" fill="rgb(205,97,43)" fg:x="87129" fg:w="37"/><text x="31.8940%" y="943.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (37 samples, 0.01%)</title><rect x="31.6440%" y="917" width="0.0134%" height="15" fill="rgb(216,106,32)" fg:x="87129" fg:w="37"/><text x="31.8940%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 samples, 0.02%)</title><rect x="31.6655%" y="853" width="0.0214%" height="15" fill="rgb(226,200,8)" fg:x="87188" fg:w="59"/><text x="31.9155%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (66 samples, 0.02%)</title><rect x="31.6655%" y="869" width="0.0240%" height="15" fill="rgb(244,54,29)" fg:x="87188" fg:w="66"/><text x="31.9155%" y="879.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (89 samples, 0.03%)</title><rect x="31.6575%" y="917" width="0.0323%" height="15" fill="rgb(252,169,12)" fg:x="87166" fg:w="89"/><text x="31.9075%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (89 samples, 0.03%)</title><rect x="31.6575%" y="901" width="0.0323%" height="15" fill="rgb(231,199,11)" fg:x="87166" fg:w="89"/><text x="31.9075%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (89 samples, 0.03%)</title><rect x="31.6575%" y="885" width="0.0323%" height="15" fill="rgb(233,191,18)" fg:x="87166" fg:w="89"/><text x="31.9075%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (122 samples, 0.04%)</title><rect x="31.6575%" y="933" width="0.0443%" height="15" fill="rgb(215,83,47)" fg:x="87166" fg:w="122"/><text x="31.9075%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (33 samples, 0.01%)</title><rect x="31.6898%" y="917" width="0.0120%" height="15" fill="rgb(251,67,19)" fg:x="87255" fg:w="33"/><text x="31.9398%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.01%)</title><rect x="31.6909%" y="901" width="0.0109%" height="15" fill="rgb(240,7,20)" fg:x="87258" fg:w="30"/><text x="31.9409%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.01%)</title><rect x="31.6916%" y="885" width="0.0102%" height="15" fill="rgb(210,150,26)" fg:x="87260" fg:w="28"/><text x="31.9416%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (211 samples, 0.08%)</title><rect x="31.6262%" y="997" width="0.0766%" height="15" fill="rgb(228,75,42)" fg:x="87080" fg:w="211"/><text x="31.8762%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (211 samples, 0.08%)</title><rect x="31.6262%" y="981" width="0.0766%" height="15" fill="rgb(237,134,48)" fg:x="87080" fg:w="211"/><text x="31.8762%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (125 samples, 0.05%)</title><rect x="31.6575%" y="965" width="0.0454%" height="15" fill="rgb(205,80,50)" fg:x="87166" fg:w="125"/><text x="31.9075%" y="975.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (125 samples, 0.05%)</title><rect x="31.6575%" y="949" width="0.0454%" height="15" fill="rgb(217,74,48)" fg:x="87166" fg:w="125"/><text x="31.9075%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (72 samples, 0.03%)</title><rect x="31.7087%" y="949" width="0.0261%" height="15" fill="rgb(205,82,50)" fg:x="87307" fg:w="72"/><text x="31.9587%" y="959.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (72 samples, 0.03%)</title><rect x="31.7087%" y="933" width="0.0261%" height="15" fill="rgb(228,1,33)" fg:x="87307" fg:w="72"/><text x="31.9587%" y="943.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (72 samples, 0.03%)</title><rect x="31.7087%" y="917" width="0.0261%" height="15" fill="rgb(214,50,23)" fg:x="87307" fg:w="72"/><text x="31.9587%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (93 samples, 0.03%)</title><rect x="31.7370%" y="949" width="0.0338%" height="15" fill="rgb(210,62,9)" fg:x="87385" fg:w="93"/><text x="31.9870%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (93 samples, 0.03%)</title><rect x="31.7370%" y="933" width="0.0338%" height="15" fill="rgb(210,104,37)" fg:x="87385" fg:w="93"/><text x="31.9870%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (93 samples, 0.03%)</title><rect x="31.7370%" y="917" width="0.0338%" height="15" fill="rgb(232,104,43)" fg:x="87385" fg:w="93"/><text x="31.9870%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (189 samples, 0.07%)</title><rect x="31.7029%" y="965" width="0.0686%" height="15" fill="rgb(244,52,6)" fg:x="87291" fg:w="189"/><text x="31.9529%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (192 samples, 0.07%)</title><rect x="31.7029%" y="997" width="0.0697%" height="15" fill="rgb(211,174,52)" fg:x="87291" fg:w="192"/><text x="31.9529%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (192 samples, 0.07%)</title><rect x="31.7029%" y="981" width="0.0697%" height="15" fill="rgb(229,48,4)" fg:x="87291" fg:w="192"/><text x="31.9529%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,952 samples, 1.07%)</title><rect x="30.7052%" y="1157" width="1.0721%" height="15" fill="rgb(205,155,16)" fg:x="84544" fg:w="2952"/><text x="30.9552%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2,952 samples, 1.07%)</title><rect x="30.7052%" y="1141" width="1.0721%" height="15" fill="rgb(211,141,53)" fg:x="84544" fg:w="2952"/><text x="30.9552%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,952 samples, 1.07%)</title><rect x="30.7052%" y="1125" width="1.0721%" height="15" fill="rgb(240,148,11)" fg:x="84544" fg:w="2952"/><text x="30.9552%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (2,586 samples, 0.94%)</title><rect x="30.8381%" y="1109" width="0.9392%" height="15" fill="rgb(214,45,23)" fg:x="84910" fg:w="2586"/><text x="31.0881%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,433 samples, 0.88%)</title><rect x="30.8937%" y="1093" width="0.8836%" height="15" fill="rgb(248,74,26)" fg:x="85063" fg:w="2433"/><text x="31.1437%" y="1103.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (2,261 samples, 0.82%)</title><rect x="30.9562%" y="1077" width="0.8212%" height="15" fill="rgb(218,121,16)" fg:x="85235" fg:w="2261"/><text x="31.2062%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (426 samples, 0.15%)</title><rect x="31.6226%" y="1061" width="0.1547%" height="15" fill="rgb(218,10,47)" fg:x="87070" fg:w="426"/><text x="31.8726%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (424 samples, 0.15%)</title><rect x="31.6233%" y="1045" width="0.1540%" height="15" fill="rgb(227,99,14)" fg:x="87072" fg:w="424"/><text x="31.8733%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (424 samples, 0.15%)</title><rect x="31.6233%" y="1029" width="0.1540%" height="15" fill="rgb(229,83,46)" fg:x="87072" fg:w="424"/><text x="31.8733%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (423 samples, 0.15%)</title><rect x="31.6237%" y="1013" width="0.1536%" height="15" fill="rgb(228,25,1)" fg:x="87073" fg:w="423"/><text x="31.8737%" y="1023.50"></text></g><g><title>__rdl_alloc (30 samples, 0.01%)</title><rect x="31.7810%" y="1045" width="0.0109%" height="15" fill="rgb(252,190,15)" fg:x="87506" fg:w="30"/><text x="32.0310%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (631 samples, 0.23%)</title><rect x="31.7784%" y="1157" width="0.2292%" height="15" fill="rgb(213,103,51)" fg:x="87499" fg:w="631"/><text x="32.0284%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (631 samples, 0.23%)</title><rect x="31.7784%" y="1141" width="0.2292%" height="15" fill="rgb(220,38,44)" fg:x="87499" fg:w="631"/><text x="32.0284%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (627 samples, 0.23%)</title><rect x="31.7799%" y="1125" width="0.2277%" height="15" fill="rgb(210,45,26)" fg:x="87503" fg:w="627"/><text x="32.0299%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (627 samples, 0.23%)</title><rect x="31.7799%" y="1109" width="0.2277%" height="15" fill="rgb(205,95,48)" fg:x="87503" fg:w="627"/><text x="32.0299%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (627 samples, 0.23%)</title><rect x="31.7799%" y="1093" width="0.2277%" height="15" fill="rgb(225,179,37)" fg:x="87503" fg:w="627"/><text x="32.0299%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (627 samples, 0.23%)</title><rect x="31.7799%" y="1077" width="0.2277%" height="15" fill="rgb(230,209,3)" fg:x="87503" fg:w="627"/><text x="32.0299%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (624 samples, 0.23%)</title><rect x="31.7810%" y="1061" width="0.2266%" height="15" fill="rgb(248,12,46)" fg:x="87506" fg:w="624"/><text x="32.0310%" y="1071.50"></text></g><g><title>malloc (584 samples, 0.21%)</title><rect x="31.7955%" y="1045" width="0.2121%" height="15" fill="rgb(234,18,0)" fg:x="87546" fg:w="584"/><text x="32.0455%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;)&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (95 samples, 0.03%)</title><rect x="32.0076%" y="1157" width="0.0345%" height="15" fill="rgb(238,197,14)" fg:x="88130" fg:w="95"/><text x="32.2576%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;)&gt;&gt; (95 samples, 0.03%)</title><rect x="32.0076%" y="1141" width="0.0345%" height="15" fill="rgb(251,162,48)" fg:x="88130" fg:w="95"/><text x="32.2576%" y="1151.50"></text></g><g><title>cfree (67 samples, 0.02%)</title><rect x="32.0178%" y="1125" width="0.0243%" height="15" fill="rgb(237,73,42)" fg:x="88158" fg:w="67"/><text x="32.2678%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,761 samples, 1.73%)</title><rect x="30.3151%" y="1173" width="1.7291%" height="15" fill="rgb(211,108,8)" fg:x="83470" fg:w="4761"/><text x="30.5651%" y="1183.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8,666 samples, 3.15%)</title><rect x="28.9169%" y="1189" width="3.1474%" height="15" fill="rgb(213,45,22)" fg:x="79620" fg:w="8666"/><text x="29.1669%" y="1199.50">all..</text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;u64&gt;)&gt;,zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt; (37 samples, 0.01%)</title><rect x="32.0508%" y="1173" width="0.0134%" height="15" fill="rgb(252,154,5)" fg:x="88249" fg:w="37"/><text x="32.3008%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(zenoh_protocol_core::PeerId,zenoh_protocol_core::whatami::WhatAmI,core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;,u64,alloc::vec::Vec&lt;u64&gt;)&gt;&gt; (37 samples, 0.01%)</title><rect x="32.0508%" y="1157" width="0.0134%" height="15" fill="rgb(221,79,52)" fg:x="88249" fg:w="37"/><text x="32.3008%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.01%)</title><rect x="32.0508%" y="1141" width="0.0134%" height="15" fill="rgb(229,220,36)" fg:x="88249" fg:w="37"/><text x="32.3008%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8,718 samples, 3.17%)</title><rect x="28.8987%" y="1221" width="3.1663%" height="15" fill="rgb(211,17,16)" fg:x="79570" fg:w="8718"/><text x="29.1487%" y="1231.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8,718 samples, 3.17%)</title><rect x="28.8987%" y="1205" width="3.1663%" height="15" fill="rgb(222,55,31)" fg:x="79570" fg:w="8718"/><text x="29.1487%" y="1215.50">&lt;al..</text></g><g><title>&lt;vec_map::IterMut&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (123 samples, 0.04%)</title><rect x="32.0650%" y="1173" width="0.0447%" height="15" fill="rgb(221,221,31)" fg:x="88288" fg:w="123"/><text x="32.3150%" y="1183.50"></text></g><g><title>&lt;vec_map::ValuesMut&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (140 samples, 0.05%)</title><rect x="32.0650%" y="1189" width="0.0508%" height="15" fill="rgb(227,168,26)" fg:x="88288" fg:w="140"/><text x="32.3150%" y="1199.50"></text></g><g><title>[libc.so.6] (230 samples, 0.08%)</title><rect x="32.1351%" y="1093" width="0.0835%" height="15" fill="rgb(224,139,9)" fg:x="88481" fg:w="230"/><text x="32.3851%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (424 samples, 0.15%)</title><rect x="32.0650%" y="1221" width="0.1540%" height="15" fill="rgb(254,172,0)" fg:x="88288" fg:w="424"/><text x="32.3150%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (424 samples, 0.15%)</title><rect x="32.0650%" y="1205" width="0.1540%" height="15" fill="rgb(235,203,1)" fg:x="88288" fg:w="424"/><text x="32.3150%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (284 samples, 0.10%)</title><rect x="32.1158%" y="1189" width="0.1031%" height="15" fill="rgb(216,205,24)" fg:x="88428" fg:w="284"/><text x="32.3658%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (275 samples, 0.10%)</title><rect x="32.1191%" y="1173" width="0.0999%" height="15" fill="rgb(233,24,6)" fg:x="88437" fg:w="275"/><text x="32.3691%" y="1183.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (275 samples, 0.10%)</title><rect x="32.1191%" y="1157" width="0.0999%" height="15" fill="rgb(244,110,9)" fg:x="88437" fg:w="275"/><text x="32.3691%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (269 samples, 0.10%)</title><rect x="32.1213%" y="1141" width="0.0977%" height="15" fill="rgb(239,222,42)" fg:x="88443" fg:w="269"/><text x="32.3713%" y="1151.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (269 samples, 0.10%)</title><rect x="32.1213%" y="1125" width="0.0977%" height="15" fill="rgb(218,145,13)" fg:x="88443" fg:w="269"/><text x="32.3713%" y="1135.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (269 samples, 0.10%)</title><rect x="32.1213%" y="1109" width="0.0977%" height="15" fill="rgb(207,69,11)" fg:x="88443" fg:w="269"/><text x="32.3713%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (35 samples, 0.01%)</title><rect x="32.2230%" y="1141" width="0.0127%" height="15" fill="rgb(220,223,22)" fg:x="88723" fg:w="35"/><text x="32.4730%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.01%)</title><rect x="32.2230%" y="1125" width="0.0127%" height="15" fill="rgb(245,102,5)" fg:x="88723" fg:w="35"/><text x="32.4730%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.01%)</title><rect x="32.2230%" y="1109" width="0.0127%" height="15" fill="rgb(211,148,2)" fg:x="88723" fg:w="35"/><text x="32.4730%" y="1119.50"></text></g><g><title>malloc (28 samples, 0.01%)</title><rect x="32.2255%" y="1093" width="0.0102%" height="15" fill="rgb(241,13,44)" fg:x="88730" fg:w="28"/><text x="32.4755%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition::extend::{{closure}} (41 samples, 0.01%)</title><rect x="32.2215%" y="1189" width="0.0149%" height="15" fill="rgb(219,137,21)" fg:x="88719" fg:w="41"/><text x="32.4715%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend_one (41 samples, 0.01%)</title><rect x="32.2215%" y="1173" width="0.0149%" height="15" fill="rgb(242,206,5)" fg:x="88719" fg:w="41"/><text x="32.4715%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.01%)</title><rect x="32.2226%" y="1157" width="0.0138%" height="15" fill="rgb(217,114,22)" fg:x="88722" fg:w="38"/><text x="32.4726%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::partition (63 samples, 0.02%)</title><rect x="32.2190%" y="1221" width="0.0229%" height="15" fill="rgb(253,206,42)" fg:x="88712" fg:w="63"/><text x="32.4690%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (60 samples, 0.02%)</title><rect x="32.2200%" y="1205" width="0.0218%" height="15" fill="rgb(236,102,18)" fg:x="88715" fg:w="60"/><text x="32.4700%" y="1215.50"></text></g><g><title>[libc.so.6] (48 samples, 0.02%)</title><rect x="32.2509%" y="1125" width="0.0174%" height="15" fill="rgb(208,59,49)" fg:x="88800" fg:w="48"/><text x="32.5009%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (75 samples, 0.03%)</title><rect x="32.2418%" y="1221" width="0.0272%" height="15" fill="rgb(215,194,28)" fg:x="88775" fg:w="75"/><text x="32.4918%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;zenoh_protocol_core::PeerId&gt;,petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (58 samples, 0.02%)</title><rect x="32.2480%" y="1205" width="0.0211%" height="15" fill="rgb(243,207,11)" fg:x="88792" fg:w="58"/><text x="32.4980%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.02%)</title><rect x="32.2480%" y="1189" width="0.0211%" height="15" fill="rgb(254,179,35)" fg:x="88792" fg:w="58"/><text x="32.4980%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.02%)</title><rect x="32.2484%" y="1173" width="0.0207%" height="15" fill="rgb(235,97,3)" fg:x="88793" fg:w="57"/><text x="32.4984%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.02%)</title><rect x="32.2484%" y="1157" width="0.0207%" height="15" fill="rgb(215,155,33)" fg:x="88793" fg:w="57"/><text x="32.4984%" y="1167.50"></text></g><g><title>cfree (55 samples, 0.02%)</title><rect x="32.2491%" y="1141" width="0.0200%" height="15" fill="rgb(223,128,12)" fg:x="88795" fg:w="55"/><text x="32.4991%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (59 samples, 0.02%)</title><rect x="32.2694%" y="1173" width="0.0214%" height="15" fill="rgb(208,157,18)" fg:x="88851" fg:w="59"/><text x="32.5194%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (59 samples, 0.02%)</title><rect x="32.2694%" y="1157" width="0.0214%" height="15" fill="rgb(249,70,54)" fg:x="88851" fg:w="59"/><text x="32.5194%" y="1167.50"></text></g><g><title>cfree (52 samples, 0.02%)</title><rect x="32.2720%" y="1141" width="0.0189%" height="15" fill="rgb(244,118,24)" fg:x="88858" fg:w="52"/><text x="32.5220%" y="1151.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="32.2800%" y="1125" width="0.0109%" height="15" fill="rgb(211,54,0)" fg:x="88880" fg:w="30"/><text x="32.5300%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (71 samples, 0.03%)</title><rect x="32.2691%" y="1221" width="0.0258%" height="15" fill="rgb(245,137,45)" fg:x="88850" fg:w="71"/><text x="32.5191%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (71 samples, 0.03%)</title><rect x="32.2691%" y="1205" width="0.0258%" height="15" fill="rgb(232,154,31)" fg:x="88850" fg:w="71"/><text x="32.5191%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.03%)</title><rect x="32.2691%" y="1189" width="0.0258%" height="15" fill="rgb(253,6,39)" fg:x="88850" fg:w="71"/><text x="32.5191%" y="1199.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (708 samples, 0.26%)</title><rect x="32.3127%" y="1173" width="0.2571%" height="15" fill="rgb(234,183,24)" fg:x="88970" fg:w="708"/><text x="32.5627%" y="1183.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (708 samples, 0.26%)</title><rect x="32.3127%" y="1157" width="0.2571%" height="15" fill="rgb(252,84,40)" fg:x="88970" fg:w="708"/><text x="32.5627%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (557 samples, 0.20%)</title><rect x="32.3675%" y="1141" width="0.2023%" height="15" fill="rgb(224,65,2)" fg:x="89121" fg:w="557"/><text x="32.6175%" y="1151.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (557 samples, 0.20%)</title><rect x="32.3675%" y="1125" width="0.2023%" height="15" fill="rgb(229,38,24)" fg:x="89121" fg:w="557"/><text x="32.6175%" y="1135.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (557 samples, 0.20%)</title><rect x="32.3675%" y="1109" width="0.2023%" height="15" fill="rgb(218,131,50)" fg:x="89121" fg:w="557"/><text x="32.6175%" y="1119.50"></text></g><g><title>[libc.so.6] (550 samples, 0.20%)</title><rect x="32.3700%" y="1093" width="0.1998%" height="15" fill="rgb(233,106,18)" fg:x="89128" fg:w="550"/><text x="32.6200%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (760 samples, 0.28%)</title><rect x="32.2970%" y="1189" width="0.2760%" height="15" fill="rgb(220,216,11)" fg:x="88927" fg:w="760"/><text x="32.5470%" y="1199.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (763 samples, 0.28%)</title><rect x="32.2970%" y="1221" width="0.2771%" height="15" fill="rgb(251,100,45)" fg:x="88927" fg:w="763"/><text x="32.5470%" y="1231.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (763 samples, 0.28%)</title><rect x="32.2970%" y="1205" width="0.2771%" height="15" fill="rgb(235,143,32)" fg:x="88927" fg:w="763"/><text x="32.5470%" y="1215.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::IndexMut&lt;petgraph::graph_impl::EdgeIndex&lt;Ix&gt;&gt;&gt;::index_mut (61 samples, 0.02%)</title><rect x="32.5832%" y="1205" width="0.0222%" height="15" fill="rgb(248,124,34)" fg:x="89715" fg:w="61"/><text x="32.8332%" y="1215.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::update_edge (48 samples, 0.02%)</title><rect x="32.5880%" y="1189" width="0.0174%" height="15" fill="rgb(225,221,4)" fg:x="89728" fg:w="48"/><text x="32.8380%" y="1199.50"></text></g><g><title>petgraph::graph_impl::Graph&lt;N,E,Ty,Ix&gt;::find_edge_undirected_from_node (366 samples, 0.13%)</title><rect x="32.6116%" y="1173" width="0.1329%" height="15" fill="rgb(242,27,43)" fg:x="89793" fg:w="366"/><text x="32.8616%" y="1183.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::update_edge (462 samples, 0.17%)</title><rect x="32.5807%" y="1221" width="0.1678%" height="15" fill="rgb(227,54,8)" fg:x="89708" fg:w="462"/><text x="32.8307%" y="1231.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::find_edge (377 samples, 0.14%)</title><rect x="32.6116%" y="1205" width="0.1369%" height="15" fill="rgb(253,139,49)" fg:x="89793" fg:w="377"/><text x="32.8616%" y="1215.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::find_edge_undirected (377 samples, 0.14%)</title><rect x="32.6116%" y="1189" width="0.1369%" height="15" fill="rgb(231,26,43)" fg:x="89793" fg:w="377"/><text x="32.8616%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (49 samples, 0.02%)</title><rect x="32.7590%" y="1125" width="0.0178%" height="15" fill="rgb(207,121,39)" fg:x="90199" fg:w="49"/><text x="33.0090%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (49 samples, 0.02%)</title><rect x="32.7590%" y="1109" width="0.0178%" height="15" fill="rgb(223,101,35)" fg:x="90199" fg:w="49"/><text x="33.0090%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (49 samples, 0.02%)</title><rect x="32.7590%" y="1093" width="0.0178%" height="15" fill="rgb(232,87,23)" fg:x="90199" fg:w="49"/><text x="33.0090%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (32 samples, 0.01%)</title><rect x="32.7783%" y="1077" width="0.0116%" height="15" fill="rgb(225,180,29)" fg:x="90252" fg:w="32"/><text x="33.0283%" y="1087.50"></text></g><g><title>core::hash::Hasher::write_usize (32 samples, 0.01%)</title><rect x="32.7783%" y="1061" width="0.0116%" height="15" fill="rgb(225,25,17)" fg:x="90252" fg:w="32"/><text x="33.0283%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 0.01%)</title><rect x="32.7783%" y="1045" width="0.0116%" height="15" fill="rgb(223,8,52)" fg:x="90252" fg:w="32"/><text x="33.0283%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.01%)</title><rect x="32.7790%" y="1029" width="0.0109%" height="15" fill="rgb(246,42,21)" fg:x="90254" fg:w="30"/><text x="33.0290%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.01%)</title><rect x="32.7921%" y="1029" width="0.0109%" height="15" fill="rgb(205,64,43)" fg:x="90290" fg:w="30"/><text x="33.0421%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (83 samples, 0.03%)</title><rect x="32.7783%" y="1093" width="0.0301%" height="15" fill="rgb(221,160,13)" fg:x="90252" fg:w="83"/><text x="33.0283%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (51 samples, 0.02%)</title><rect x="32.7899%" y="1077" width="0.0185%" height="15" fill="rgb(239,58,35)" fg:x="90284" fg:w="51"/><text x="33.0399%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="32.7902%" y="1061" width="0.0182%" height="15" fill="rgb(251,26,40)" fg:x="90285" fg:w="50"/><text x="33.0402%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (45 samples, 0.02%)</title><rect x="32.7921%" y="1045" width="0.0163%" height="15" fill="rgb(247,0,4)" fg:x="90290" fg:w="45"/><text x="33.0421%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (140 samples, 0.05%)</title><rect x="32.7587%" y="1157" width="0.0508%" height="15" fill="rgb(218,130,10)" fg:x="90198" fg:w="140"/><text x="33.0087%" y="1167.50"></text></g><g><title>core::hash::BuildHasher::hash_one (140 samples, 0.05%)</title><rect x="32.7587%" y="1141" width="0.0508%" height="15" fill="rgb(239,32,7)" fg:x="90198" fg:w="140"/><text x="33.0087%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (86 samples, 0.03%)</title><rect x="32.7783%" y="1125" width="0.0312%" height="15" fill="rgb(210,192,24)" fg:x="90252" fg:w="86"/><text x="33.0283%" y="1135.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (86 samples, 0.03%)</title><rect x="32.7783%" y="1109" width="0.0312%" height="15" fill="rgb(226,212,17)" fg:x="90252" fg:w="86"/><text x="33.0283%" y="1119.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (63 samples, 0.02%)</title><rect x="32.8157%" y="1093" width="0.0229%" height="15" fill="rgb(219,201,28)" fg:x="90355" fg:w="63"/><text x="33.0657%" y="1103.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (63 samples, 0.02%)</title><rect x="32.8157%" y="1077" width="0.0229%" height="15" fill="rgb(235,207,41)" fg:x="90355" fg:w="63"/><text x="33.0657%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (65 samples, 0.02%)</title><rect x="32.8157%" y="1109" width="0.0236%" height="15" fill="rgb(241,95,54)" fg:x="90355" fg:w="65"/><text x="33.0657%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (117 samples, 0.04%)</title><rect x="32.8095%" y="1125" width="0.0425%" height="15" fill="rgb(248,12,23)" fg:x="90338" fg:w="117"/><text x="33.0595%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (119 samples, 0.04%)</title><rect x="32.8095%" y="1157" width="0.0432%" height="15" fill="rgb(228,173,4)" fg:x="90338" fg:w="119"/><text x="33.0595%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (119 samples, 0.04%)</title><rect x="32.8095%" y="1141" width="0.0432%" height="15" fill="rgb(254,99,5)" fg:x="90338" fg:w="119"/><text x="33.0595%" y="1151.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (271 samples, 0.10%)</title><rect x="32.7583%" y="1221" width="0.0984%" height="15" fill="rgb(212,184,17)" fg:x="90197" fg:w="271"/><text x="33.0083%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (271 samples, 0.10%)</title><rect x="32.7583%" y="1205" width="0.0984%" height="15" fill="rgb(252,174,1)" fg:x="90197" fg:w="271"/><text x="33.0083%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (271 samples, 0.10%)</title><rect x="32.7583%" y="1189" width="0.0984%" height="15" fill="rgb(241,118,51)" fg:x="90197" fg:w="271"/><text x="33.0083%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (271 samples, 0.10%)</title><rect x="32.7583%" y="1173" width="0.0984%" height="15" fill="rgb(227,94,47)" fg:x="90197" fg:w="271"/><text x="33.0083%" y="1183.50"></text></g><g><title>&lt;vec_map::Iter&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="32.8567%" y="1157" width="0.0131%" height="15" fill="rgb(229,104,2)" fg:x="90468" fg:w="36"/><text x="33.1067%" y="1167.50"></text></g><g><title>&lt;vec_map::Values&lt;V&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.01%)</title><rect x="32.8567%" y="1173" width="0.0134%" height="15" fill="rgb(219,28,31)" fg:x="90468" fg:w="37"/><text x="33.1067%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (288 samples, 0.10%)</title><rect x="32.8567%" y="1205" width="0.1046%" height="15" fill="rgb(233,109,36)" fg:x="90468" fg:w="288"/><text x="33.1067%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (288 samples, 0.10%)</title><rect x="32.8567%" y="1189" width="0.1046%" height="15" fill="rgb(246,88,11)" fg:x="90468" fg:w="288"/><text x="33.1067%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (251 samples, 0.09%)</title><rect x="32.8702%" y="1173" width="0.0912%" height="15" fill="rgb(209,212,17)" fg:x="90505" fg:w="251"/><text x="33.1202%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::get_link_from_pid::{{closure}} (243 samples, 0.09%)</title><rect x="32.8731%" y="1157" width="0.0883%" height="15" fill="rgb(243,59,29)" fg:x="90513" fg:w="243"/><text x="33.1231%" y="1167.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (243 samples, 0.09%)</title><rect x="32.8731%" y="1141" width="0.0883%" height="15" fill="rgb(244,205,48)" fg:x="90513" fg:w="243"/><text x="33.1231%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (239 samples, 0.09%)</title><rect x="32.8745%" y="1125" width="0.0868%" height="15" fill="rgb(227,30,6)" fg:x="90517" fg:w="239"/><text x="33.1245%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (239 samples, 0.09%)</title><rect x="32.8745%" y="1109" width="0.0868%" height="15" fill="rgb(220,205,48)" fg:x="90517" fg:w="239"/><text x="33.1245%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (239 samples, 0.09%)</title><rect x="32.8745%" y="1093" width="0.0868%" height="15" fill="rgb(250,94,14)" fg:x="90517" fg:w="239"/><text x="33.1245%" y="1103.50"></text></g><g><title>[libc.so.6] (231 samples, 0.08%)</title><rect x="32.8774%" y="1077" width="0.0839%" height="15" fill="rgb(216,119,42)" fg:x="90525" fg:w="231"/><text x="33.1274%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::get_link_from_pid (294 samples, 0.11%)</title><rect x="32.8567%" y="1221" width="0.1068%" height="15" fill="rgb(232,155,0)" fg:x="90468" fg:w="294"/><text x="33.1067%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,761 samples, 0.64%)</title><rect x="33.0797%" y="1205" width="0.6396%" height="15" fill="rgb(212,24,32)" fg:x="91082" fg:w="1761"/><text x="33.3297%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (975 samples, 0.35%)</title><rect x="33.8144%" y="1173" width="0.3541%" height="15" fill="rgb(216,69,20)" fg:x="93105" fg:w="975"/><text x="34.0644%" y="1183.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (975 samples, 0.35%)</title><rect x="33.8144%" y="1157" width="0.3541%" height="15" fill="rgb(229,73,31)" fg:x="93105" fg:w="975"/><text x="34.0644%" y="1167.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::is_visited (1,339 samples, 0.49%)</title><rect x="33.7193%" y="1205" width="0.4863%" height="15" fill="rgb(224,219,20)" fg:x="92843" fg:w="1339"/><text x="33.9693%" y="1215.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (1,339 samples, 0.49%)</title><rect x="33.7193%" y="1189" width="0.4863%" height="15" fill="rgb(215,146,41)" fg:x="92843" fg:w="1339"/><text x="33.9693%" y="1199.50"></text></g><g><title>fixedbitset::div_rem (102 samples, 0.04%)</title><rect x="34.1685%" y="1173" width="0.0370%" height="15" fill="rgb(244,71,31)" fg:x="94080" fg:w="102"/><text x="34.4185%" y="1183.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::visit (2,202 samples, 0.80%)</title><rect x="34.2056%" y="1205" width="0.7997%" height="15" fill="rgb(224,24,11)" fg:x="94182" fg:w="2202"/><text x="34.4556%" y="1215.50"></text></g><g><title>fixedbitset::FixedBitSet::put (2,202 samples, 0.80%)</title><rect x="34.2056%" y="1189" width="0.7997%" height="15" fill="rgb(229,76,15)" fg:x="94182" fg:w="2202"/><text x="34.4556%" y="1199.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::node_weight (68 samples, 0.02%)</title><rect x="35.0053%" y="1189" width="0.0247%" height="15" fill="rgb(209,93,2)" fg:x="96384" fg:w="68"/><text x="35.2553%" y="1199.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (717 samples, 0.26%)</title><rect x="35.0053%" y="1205" width="0.2604%" height="15" fill="rgb(216,200,50)" fg:x="96384" fg:w="717"/><text x="35.2553%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (649 samples, 0.24%)</title><rect x="35.0300%" y="1189" width="0.2357%" height="15" fill="rgb(211,67,34)" fg:x="96452" fg:w="649"/><text x="35.2800%" y="1199.50"></text></g><g><title>[libc.so.6] (35 samples, 0.01%)</title><rect x="35.4865%" y="1029" width="0.0127%" height="15" fill="rgb(225,87,47)" fg:x="97709" fg:w="35"/><text x="35.7365%" y="1039.50"></text></g><g><title>[libc.so.6] (322 samples, 0.12%)</title><rect x="35.3834%" y="1045" width="0.1169%" height="15" fill="rgb(217,185,16)" fg:x="97425" fg:w="322"/><text x="35.6334%" y="1055.50"></text></g><g><title>__libc_calloc (591 samples, 0.21%)</title><rect x="35.2890%" y="1061" width="0.2146%" height="15" fill="rgb(205,0,0)" fg:x="97165" fg:w="591"/><text x="35.5390%" y="1071.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as petgraph::visit::Visitable&gt;::visit_map (702 samples, 0.25%)</title><rect x="35.2657%" y="1205" width="0.2550%" height="15" fill="rgb(207,116,45)" fg:x="97101" fg:w="702"/><text x="35.5157%" y="1215.50"></text></g><g><title>fixedbitset::FixedBitSet::with_capacity (675 samples, 0.25%)</title><rect x="35.2755%" y="1189" width="0.2452%" height="15" fill="rgb(221,156,26)" fg:x="97128" fg:w="675"/><text x="35.5255%" y="1199.50"></text></g><g><title>alloc::vec::from_elem (640 samples, 0.23%)</title><rect x="35.2882%" y="1173" width="0.2324%" height="15" fill="rgb(213,140,4)" fg:x="97163" fg:w="640"/><text x="35.5382%" y="1183.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (640 samples, 0.23%)</title><rect x="35.2882%" y="1157" width="0.2324%" height="15" fill="rgb(231,224,15)" fg:x="97163" fg:w="640"/><text x="35.5382%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (640 samples, 0.23%)</title><rect x="35.2882%" y="1141" width="0.2324%" height="15" fill="rgb(244,76,20)" fg:x="97163" fg:w="640"/><text x="35.5382%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (640 samples, 0.23%)</title><rect x="35.2882%" y="1125" width="0.2324%" height="15" fill="rgb(238,117,7)" fg:x="97163" fg:w="640"/><text x="35.5382%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (639 samples, 0.23%)</title><rect x="35.2886%" y="1109" width="0.2321%" height="15" fill="rgb(235,1,10)" fg:x="97164" fg:w="639"/><text x="35.5386%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (639 samples, 0.23%)</title><rect x="35.2886%" y="1093" width="0.2321%" height="15" fill="rgb(216,165,6)" fg:x="97164" fg:w="639"/><text x="35.5386%" y="1103.50"></text></g><g><title>alloc::alloc::alloc_zeroed (638 samples, 0.23%)</title><rect x="35.2890%" y="1077" width="0.2317%" height="15" fill="rgb(246,91,35)" fg:x="97165" fg:w="638"/><text x="35.5390%" y="1087.50"></text></g><g><title>__rust_alloc_zeroed (30 samples, 0.01%)</title><rect x="35.5098%" y="1061" width="0.0109%" height="15" fill="rgb(228,96,24)" fg:x="97773" fg:w="30"/><text x="35.7598%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (67 samples, 0.02%)</title><rect x="35.5214%" y="1205" width="0.0243%" height="15" fill="rgb(254,217,53)" fg:x="97805" fg:w="67"/><text x="35.7714%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.02%)</title><rect x="35.5214%" y="1189" width="0.0243%" height="15" fill="rgb(209,60,0)" fg:x="97805" fg:w="67"/><text x="35.7714%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.02%)</title><rect x="35.5214%" y="1173" width="0.0243%" height="15" fill="rgb(250,93,26)" fg:x="97805" fg:w="67"/><text x="35.7714%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (66 samples, 0.02%)</title><rect x="35.5218%" y="1157" width="0.0240%" height="15" fill="rgb(211,9,40)" fg:x="97806" fg:w="66"/><text x="35.7718%" y="1167.50"></text></g><g><title>malloc (36 samples, 0.01%)</title><rect x="35.5327%" y="1141" width="0.0131%" height="15" fill="rgb(242,57,20)" fg:x="97836" fg:w="36"/><text x="35.7827%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::into_vec (29 samples, 0.01%)</title><rect x="35.5457%" y="1205" width="0.0105%" height="15" fill="rgb(248,85,48)" fg:x="97872" fg:w="29"/><text x="35.7957%" y="1215.50"></text></g><g><title>alloc::slice::hack::into_vec (29 samples, 0.01%)</title><rect x="35.5457%" y="1189" width="0.0105%" height="15" fill="rgb(212,117,2)" fg:x="97872" fg:w="29"/><text x="35.7957%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::from_raw_parts_in (29 samples, 0.01%)</title><rect x="35.5457%" y="1173" width="0.0105%" height="15" fill="rgb(243,19,3)" fg:x="97872" fg:w="29"/><text x="35.7957%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (838 samples, 0.30%)</title><rect x="35.5563%" y="1205" width="0.3043%" height="15" fill="rgb(232,217,24)" fg:x="97901" fg:w="838"/><text x="35.8063%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (233 samples, 0.08%)</title><rect x="35.7760%" y="1189" width="0.0846%" height="15" fill="rgb(224,175,40)" fg:x="98506" fg:w="233"/><text x="36.0260%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (36 samples, 0.01%)</title><rect x="36.6792%" y="1157" width="0.0131%" height="15" fill="rgb(212,162,32)" fg:x="100993" fg:w="36"/><text x="36.9292%" y="1167.50"></text></g><g><title>__rdl_realloc (47 samples, 0.02%)</title><rect x="36.7279%" y="1093" width="0.0171%" height="15" fill="rgb(215,9,4)" fg:x="101127" fg:w="47"/><text x="36.9779%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (28 samples, 0.01%)</title><rect x="36.7348%" y="1077" width="0.0102%" height="15" fill="rgb(242,42,7)" fg:x="101146" fg:w="28"/><text x="36.9848%" y="1087.50"></text></g><g><title>__rust_realloc (48 samples, 0.02%)</title><rect x="36.7450%" y="1093" width="0.0174%" height="15" fill="rgb(242,184,45)" fg:x="101174" fg:w="48"/><text x="36.9950%" y="1103.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="37.6805%" y="1029" width="0.0116%" height="15" fill="rgb(228,111,51)" fg:x="103750" fg:w="32"/><text x="37.9305%" y="1039.50"></text></g><g><title>[libc.so.6] (413 samples, 0.15%)</title><rect x="37.5520%" y="1045" width="0.1500%" height="15" fill="rgb(236,147,17)" fg:x="103396" fg:w="413"/><text x="37.8020%" y="1055.50"></text></g><g><title>[libc.so.6] (1,942 samples, 0.71%)</title><rect x="36.9988%" y="1061" width="0.7053%" height="15" fill="rgb(210,75,22)" fg:x="101873" fg:w="1942"/><text x="37.2488%" y="1071.50"></text></g><g><title>[libc.so.6] (2,279 samples, 0.83%)</title><rect x="36.8768%" y="1077" width="0.8277%" height="15" fill="rgb(217,159,45)" fg:x="101537" fg:w="2279"/><text x="37.1268%" y="1087.50"></text></g><g><title>__lll_lock_wait_private (67 samples, 0.02%)</title><rect x="37.7052%" y="1077" width="0.0243%" height="15" fill="rgb(245,165,53)" fg:x="103818" fg:w="67"/><text x="37.9552%" y="1087.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="37.7052%" y="1061" width="0.0243%" height="15" fill="rgb(251,190,50)" fg:x="103818" fg:w="67"/><text x="37.9552%" y="1071.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="37.7052%" y="1045" width="0.0243%" height="15" fill="rgb(208,203,29)" fg:x="103818" fg:w="67"/><text x="37.9552%" y="1055.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="37.7052%" y="1029" width="0.0243%" height="15" fill="rgb(207,209,35)" fg:x="103818" fg:w="67"/><text x="37.9552%" y="1039.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="37.7052%" y="1013" width="0.0243%" height="15" fill="rgb(230,144,49)" fg:x="103818" fg:w="67"/><text x="37.9552%" y="1023.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="37.7052%" y="997" width="0.0243%" height="15" fill="rgb(229,31,6)" fg:x="103818" fg:w="67"/><text x="37.9552%" y="1007.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="37.7056%" y="981" width="0.0240%" height="15" fill="rgb(251,129,24)" fg:x="103819" fg:w="66"/><text x="37.9556%" y="991.50"></text></g><g><title>[unknown] (66 samples, 0.02%)</title><rect x="37.7056%" y="965" width="0.0240%" height="15" fill="rgb(235,105,15)" fg:x="103819" fg:w="66"/><text x="37.9556%" y="975.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="37.7071%" y="949" width="0.0225%" height="15" fill="rgb(216,52,43)" fg:x="103823" fg:w="62"/><text x="37.9571%" y="959.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="37.7103%" y="933" width="0.0192%" height="15" fill="rgb(238,144,41)" fg:x="103832" fg:w="53"/><text x="37.9603%" y="943.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="37.7151%" y="917" width="0.0145%" height="15" fill="rgb(243,63,9)" fg:x="103845" fg:w="40"/><text x="37.9651%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,803 samples, 1.02%)</title><rect x="36.7265%" y="1141" width="1.0180%" height="15" fill="rgb(246,208,1)" fg:x="101123" fg:w="2803"/><text x="36.9765%" y="1151.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,803 samples, 1.02%)</title><rect x="36.7265%" y="1125" width="1.0180%" height="15" fill="rgb(233,182,18)" fg:x="101123" fg:w="2803"/><text x="36.9765%" y="1135.50"></text></g><g><title>alloc::alloc::realloc (2,801 samples, 1.02%)</title><rect x="36.7272%" y="1109" width="1.0173%" height="15" fill="rgb(242,224,8)" fg:x="101125" fg:w="2801"/><text x="36.9772%" y="1119.50"></text></g><g><title>realloc (2,704 samples, 0.98%)</title><rect x="36.7624%" y="1093" width="0.9821%" height="15" fill="rgb(243,54,37)" fg:x="101222" fg:w="2704"/><text x="37.0124%" y="1103.50"></text></g><g><title>__lll_lock_wake_private (41 samples, 0.01%)</title><rect x="37.7296%" y="1077" width="0.0149%" height="15" fill="rgb(233,192,12)" fg:x="103885" fg:w="41"/><text x="37.9796%" y="1087.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="37.7296%" y="1061" width="0.0149%" height="15" fill="rgb(251,192,53)" fg:x="103885" fg:w="41"/><text x="37.9796%" y="1071.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="37.7299%" y="1045" width="0.0145%" height="15" fill="rgb(246,141,26)" fg:x="103886" fg:w="40"/><text x="37.9799%" y="1055.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="37.7299%" y="1029" width="0.0145%" height="15" fill="rgb(239,195,19)" fg:x="103886" fg:w="40"/><text x="37.9799%" y="1039.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="37.7310%" y="1013" width="0.0134%" height="15" fill="rgb(241,16,39)" fg:x="103889" fg:w="37"/><text x="37.9810%" y="1023.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="37.7314%" y="997" width="0.0131%" height="15" fill="rgb(223,13,53)" fg:x="103890" fg:w="36"/><text x="37.9814%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,905 samples, 1.06%)</title><rect x="36.6992%" y="1157" width="1.0551%" height="15" fill="rgb(214,227,0)" fg:x="101048" fg:w="2905"/><text x="36.9492%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3,019 samples, 1.10%)</title><rect x="36.6694%" y="1189" width="1.0965%" height="15" fill="rgb(228,103,26)" fg:x="100966" fg:w="3019"/><text x="36.9194%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,996 samples, 1.09%)</title><rect x="36.6778%" y="1173" width="1.0881%" height="15" fill="rgb(254,177,53)" fg:x="100989" fg:w="2996"/><text x="36.9278%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5,459 samples, 1.98%)</title><rect x="35.8606%" y="1205" width="1.9826%" height="15" fill="rgb(208,201,34)" fg:x="98739" fg:w="5459"/><text x="36.1106%" y="1215.50">a..</text></g><g><title>core::ptr::write (207 samples, 0.08%)</title><rect x="37.7681%" y="1189" width="0.0752%" height="15" fill="rgb(212,39,5)" fg:x="103991" fg:w="207"/><text x="38.0181%" y="1199.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 samples, 0.04%)</title><rect x="37.8763%" y="1109" width="0.0389%" height="15" fill="rgb(246,117,3)" fg:x="104289" fg:w="107"/><text x="38.1263%" y="1119.50"></text></g><g><title>petgraph::iter_utils::IterUtilsExt::ex_find_map (107 samples, 0.04%)</title><rect x="37.8763%" y="1093" width="0.0389%" height="15" fill="rgb(244,118,39)" fg:x="104289" fg:w="107"/><text x="38.1263%" y="1103.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::NodeIndices&lt;N,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (99 samples, 0.04%)</title><rect x="37.8792%" y="1077" width="0.0360%" height="15" fill="rgb(241,64,10)" fg:x="104297" fg:w="99"/><text x="38.1292%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (83 samples, 0.03%)</title><rect x="37.8850%" y="1061" width="0.0301%" height="15" fill="rgb(229,39,44)" fg:x="104313" fg:w="83"/><text x="38.1350%" y="1071.50"></text></g><g><title>__rdl_realloc (36 samples, 0.01%)</title><rect x="37.9449%" y="981" width="0.0131%" height="15" fill="rgb(230,226,3)" fg:x="104478" fg:w="36"/><text x="38.1949%" y="991.50"></text></g><g><title>[libc.so.6] (37 samples, 0.01%)</title><rect x="38.2598%" y="933" width="0.0134%" height="15" fill="rgb(222,13,42)" fg:x="105345" fg:w="37"/><text x="38.5098%" y="943.50"></text></g><g><title>[libc.so.6] (704 samples, 0.26%)</title><rect x="38.0183%" y="965" width="0.2557%" height="15" fill="rgb(247,180,54)" fg:x="104680" fg:w="704"/><text x="38.2683%" y="975.50"></text></g><g><title>[libc.so.6] (541 samples, 0.20%)</title><rect x="38.0775%" y="949" width="0.1965%" height="15" fill="rgb(205,96,16)" fg:x="104843" fg:w="541"/><text x="38.3275%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (931 samples, 0.34%)</title><rect x="37.9431%" y="1029" width="0.3381%" height="15" fill="rgb(205,100,21)" fg:x="104473" fg:w="931"/><text x="38.1931%" y="1039.50"></text></g><g><title>alloc::alloc::Global::grow_impl (931 samples, 0.34%)</title><rect x="37.9431%" y="1013" width="0.3381%" height="15" fill="rgb(248,51,4)" fg:x="104473" fg:w="931"/><text x="38.1931%" y="1023.50"></text></g><g><title>alloc::alloc::realloc (928 samples, 0.34%)</title><rect x="37.9442%" y="997" width="0.3370%" height="15" fill="rgb(217,197,30)" fg:x="104476" fg:w="928"/><text x="38.1942%" y="1007.50"></text></g><g><title>realloc (872 samples, 0.32%)</title><rect x="37.9646%" y="981" width="0.3167%" height="15" fill="rgb(240,179,40)" fg:x="104532" fg:w="872"/><text x="38.2146%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (960 samples, 0.35%)</title><rect x="37.9355%" y="1045" width="0.3487%" height="15" fill="rgb(212,185,35)" fg:x="104452" fg:w="960"/><text x="38.1855%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,022 samples, 0.37%)</title><rect x="37.9181%" y="1109" width="0.3712%" height="15" fill="rgb(251,222,31)" fg:x="104404" fg:w="1022"/><text x="38.1681%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,022 samples, 0.37%)</title><rect x="37.9181%" y="1093" width="0.3712%" height="15" fill="rgb(208,140,36)" fg:x="104404" fg:w="1022"/><text x="38.1681%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,016 samples, 0.37%)</title><rect x="37.9203%" y="1077" width="0.3690%" height="15" fill="rgb(220,148,1)" fg:x="104410" fg:w="1016"/><text x="38.1703%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,003 samples, 0.36%)</title><rect x="37.9250%" y="1061" width="0.3643%" height="15" fill="rgb(254,4,28)" fg:x="104423" fg:w="1003"/><text x="38.1750%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,229 samples, 0.45%)</title><rect x="37.8516%" y="1141" width="0.4464%" height="15" fill="rgb(222,185,44)" fg:x="104221" fg:w="1229"/><text x="38.1016%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,217 samples, 0.44%)</title><rect x="37.8560%" y="1125" width="0.4420%" height="15" fill="rgb(215,74,39)" fg:x="104233" fg:w="1217"/><text x="38.1060%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (75 samples, 0.03%)</title><rect x="38.3020%" y="1141" width="0.0272%" height="15" fill="rgb(247,86,4)" fg:x="105461" fg:w="75"/><text x="38.5520%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (75 samples, 0.03%)</title><rect x="38.3020%" y="1125" width="0.0272%" height="15" fill="rgb(231,105,32)" fg:x="105461" fg:w="75"/><text x="38.5520%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (75 samples, 0.03%)</title><rect x="38.3020%" y="1109" width="0.0272%" height="15" fill="rgb(222,65,35)" fg:x="105461" fg:w="75"/><text x="38.5520%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (75 samples, 0.03%)</title><rect x="38.3020%" y="1093" width="0.0272%" height="15" fill="rgb(218,145,35)" fg:x="105461" fg:w="75"/><text x="38.5520%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (75 samples, 0.03%)</title><rect x="38.3020%" y="1077" width="0.0272%" height="15" fill="rgb(208,7,15)" fg:x="105461" fg:w="75"/><text x="38.5520%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (75 samples, 0.03%)</title><rect x="38.3020%" y="1061" width="0.0272%" height="15" fill="rgb(209,83,13)" fg:x="105461" fg:w="75"/><text x="38.5520%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (74 samples, 0.03%)</title><rect x="38.3023%" y="1045" width="0.0269%" height="15" fill="rgb(218,3,10)" fg:x="105462" fg:w="74"/><text x="38.5523%" y="1055.50"></text></g><g><title>malloc (65 samples, 0.02%)</title><rect x="38.3056%" y="1029" width="0.0236%" height="15" fill="rgb(211,219,4)" fg:x="105471" fg:w="65"/><text x="38.5556%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,333 samples, 0.48%)</title><rect x="37.8454%" y="1173" width="0.4841%" height="15" fill="rgb(228,194,12)" fg:x="104204" fg:w="1333"/><text x="38.0954%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1,319 samples, 0.48%)</title><rect x="37.8505%" y="1157" width="0.4790%" height="15" fill="rgb(210,175,7)" fg:x="104218" fg:w="1319"/><text x="38.1005%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,334 samples, 0.48%)</title><rect x="37.8454%" y="1205" width="0.4845%" height="15" fill="rgb(243,132,6)" fg:x="104204" fg:w="1334"/><text x="38.0954%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1,334 samples, 0.48%)</title><rect x="37.8454%" y="1189" width="0.4845%" height="15" fill="rgb(207,72,18)" fg:x="104204" fg:w="1334"/><text x="38.0954%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (68 samples, 0.02%)</title><rect x="38.3299%" y="1205" width="0.0247%" height="15" fill="rgb(236,1,18)" fg:x="105538" fg:w="68"/><text x="38.5799%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (68 samples, 0.02%)</title><rect x="38.3299%" y="1189" width="0.0247%" height="15" fill="rgb(227,0,18)" fg:x="105538" fg:w="68"/><text x="38.5799%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.02%)</title><rect x="38.3299%" y="1173" width="0.0247%" height="15" fill="rgb(247,37,5)" fg:x="105538" fg:w="68"/><text x="38.5799%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (67 samples, 0.02%)</title><rect x="38.3303%" y="1157" width="0.0243%" height="15" fill="rgb(237,179,24)" fg:x="105539" fg:w="67"/><text x="38.5803%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (67 samples, 0.02%)</title><rect x="38.3303%" y="1141" width="0.0243%" height="15" fill="rgb(226,53,20)" fg:x="105539" fg:w="67"/><text x="38.5803%" y="1151.50"></text></g><g><title>cfree (62 samples, 0.02%)</title><rect x="38.3321%" y="1125" width="0.0225%" height="15" fill="rgb(247,75,7)" fg:x="105544" fg:w="62"/><text x="38.5821%" y="1135.50"></text></g><g><title>[libc.so.6] (52 samples, 0.02%)</title><rect x="38.3357%" y="1109" width="0.0189%" height="15" fill="rgb(233,96,12)" fg:x="105554" fg:w="52"/><text x="38.5857%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (64 samples, 0.02%)</title><rect x="38.3546%" y="1109" width="0.0232%" height="15" fill="rgb(224,125,0)" fg:x="105606" fg:w="64"/><text x="38.6046%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (64 samples, 0.02%)</title><rect x="38.3546%" y="1093" width="0.0232%" height="15" fill="rgb(224,92,25)" fg:x="105606" fg:w="64"/><text x="38.6046%" y="1103.50"></text></g><g><title>cfree (45 samples, 0.02%)</title><rect x="38.3615%" y="1077" width="0.0163%" height="15" fill="rgb(224,42,24)" fg:x="105625" fg:w="45"/><text x="38.6115%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (75 samples, 0.03%)</title><rect x="38.3546%" y="1205" width="0.0272%" height="15" fill="rgb(234,132,49)" fg:x="105606" fg:w="75"/><text x="38.6046%" y="1215.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.03%)</title><rect x="38.3546%" y="1189" width="0.0272%" height="15" fill="rgb(248,100,35)" fg:x="105606" fg:w="75"/><text x="38.6046%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;petgraph::graph_impl::NodeIndex,alloc::alloc::Global&gt;&gt; (75 samples, 0.03%)</title><rect x="38.3546%" y="1173" width="0.0272%" height="15" fill="rgb(239,94,40)" fg:x="105606" fg:w="75"/><text x="38.6046%" y="1183.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.03%)</title><rect x="38.3546%" y="1157" width="0.0272%" height="15" fill="rgb(235,139,28)" fg:x="105606" fg:w="75"/><text x="38.6046%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;petgraph::graph_impl::NodeIndex&gt;&gt; (75 samples, 0.03%)</title><rect x="38.3546%" y="1141" width="0.0272%" height="15" fill="rgb(217,144,7)" fg:x="105606" fg:w="75"/><text x="38.6046%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.03%)</title><rect x="38.3546%" y="1125" width="0.0272%" height="15" fill="rgb(227,55,4)" fg:x="105606" fg:w="75"/><text x="38.6046%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;fixedbitset::FixedBitSet&gt; (29 samples, 0.01%)</title><rect x="38.3819%" y="1205" width="0.0105%" height="15" fill="rgb(252,82,54)" fg:x="105681" fg:w="29"/><text x="38.6319%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (29 samples, 0.01%)</title><rect x="38.3819%" y="1189" width="0.0105%" height="15" fill="rgb(245,172,4)" fg:x="105681" fg:w="29"/><text x="38.6319%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (29 samples, 0.01%)</title><rect x="38.3819%" y="1173" width="0.0105%" height="15" fill="rgb(207,26,27)" fg:x="105681" fg:w="29"/><text x="38.6319%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="38.3819%" y="1157" width="0.0105%" height="15" fill="rgb(252,98,18)" fg:x="105681" fg:w="29"/><text x="38.6319%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.01%)</title><rect x="38.3819%" y="1141" width="0.0105%" height="15" fill="rgb(244,8,26)" fg:x="105681" fg:w="29"/><text x="38.6319%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.01%)</title><rect x="38.3819%" y="1125" width="0.0105%" height="15" fill="rgb(237,173,45)" fg:x="105681" fg:w="29"/><text x="38.6319%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,818 samples, 0.66%)</title><rect x="41.5852%" y="1045" width="0.6603%" height="15" fill="rgb(208,213,49)" fg:x="114501" fg:w="1818"/><text x="41.8352%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,977 samples, 1.44%)</title><rect x="41.1817%" y="1061" width="1.4444%" height="15" fill="rgb(212,122,37)" fg:x="113390" fg:w="3977"/><text x="41.4317%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,048 samples, 0.38%)</title><rect x="42.2454%" y="1045" width="0.3806%" height="15" fill="rgb(213,80,17)" fg:x="116319" fg:w="1048"/><text x="42.4954%" y="1055.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8,487 samples, 3.08%)</title><rect x="43.2377%" y="1045" width="3.0824%" height="15" fill="rgb(206,210,43)" fg:x="119051" fg:w="8487"/><text x="43.4877%" y="1055.50">cor..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (13,313 samples, 4.84%)</title><rect x="42.6261%" y="1061" width="4.8351%" height="15" fill="rgb(229,214,3)" fg:x="117367" fg:w="13313"/><text x="42.8761%" y="1071.50">&lt;core:..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3,142 samples, 1.14%)</title><rect x="46.3200%" y="1045" width="1.1411%" height="15" fill="rgb(235,213,29)" fg:x="127538" fg:w="3142"/><text x="46.5700%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (21,357 samples, 7.76%)</title><rect x="39.7075%" y="1109" width="7.7566%" height="15" fill="rgb(248,135,26)" fg:x="109331" fg:w="21357"/><text x="39.9575%" y="1119.50">&lt;std::colle..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (21,357 samples, 7.76%)</title><rect x="39.7075%" y="1093" width="7.7566%" height="15" fill="rgb(242,188,12)" fg:x="109331" fg:w="21357"/><text x="39.9575%" y="1103.50">&lt;core::hash..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (21,357 samples, 7.76%)</title><rect x="39.7075%" y="1077" width="7.7566%" height="15" fill="rgb(245,38,12)" fg:x="109331" fg:w="21357"/><text x="39.9575%" y="1087.50">&lt;core::hash..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2,459 samples, 0.89%)</title><rect x="47.4641%" y="1109" width="0.8931%" height="15" fill="rgb(218,42,13)" fg:x="130688" fg:w="2459"/><text x="47.7141%" y="1119.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,971 samples, 0.72%)</title><rect x="47.6413%" y="1093" width="0.7158%" height="15" fill="rgb(238,132,49)" fg:x="131176" fg:w="1971"/><text x="47.8913%" y="1103.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1,658 samples, 0.60%)</title><rect x="47.7550%" y="1077" width="0.6022%" height="15" fill="rgb(209,196,19)" fg:x="131489" fg:w="1658"/><text x="48.0050%" y="1087.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1,658 samples, 0.60%)</title><rect x="47.7550%" y="1061" width="0.6022%" height="15" fill="rgb(244,131,22)" fg:x="131489" fg:w="1658"/><text x="48.0050%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,532 samples, 0.56%)</title><rect x="50.7066%" y="965" width="0.5564%" height="15" fill="rgb(223,18,34)" fg:x="139616" fg:w="1532"/><text x="50.9566%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3,190 samples, 1.16%)</title><rect x="50.2239%" y="981" width="1.1586%" height="15" fill="rgb(252,124,54)" fg:x="138287" fg:w="3190"/><text x="50.4739%" y="991.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (329 samples, 0.12%)</title><rect x="51.2630%" y="965" width="0.1195%" height="15" fill="rgb(229,106,42)" fg:x="141148" fg:w="329"/><text x="51.5130%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.01%)</title><rect x="51.3825%" y="981" width="0.0109%" height="15" fill="rgb(221,129,1)" fg:x="141477" fg:w="30"/><text x="51.6325%" y="991.50"></text></g><g><title>core::hash::sip::u8to64_le (1,276 samples, 0.46%)</title><rect x="51.3963%" y="981" width="0.4634%" height="15" fill="rgb(229,74,15)" fg:x="141515" fg:w="1276"/><text x="51.6463%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8,177 samples, 2.97%)</title><rect x="48.8903%" y="997" width="2.9698%" height="15" fill="rgb(210,206,50)" fg:x="134615" fg:w="8177"/><text x="49.1403%" y="1007.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10,703 samples, 3.89%)</title><rect x="48.8903%" y="1013" width="3.8872%" height="15" fill="rgb(251,114,31)" fg:x="134615" fg:w="10703"/><text x="49.1403%" y="1023.50">&lt;cor..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2,526 samples, 0.92%)</title><rect x="51.8601%" y="997" width="0.9174%" height="15" fill="rgb(215,225,28)" fg:x="142792" fg:w="2526"/><text x="52.1101%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11,305 samples, 4.11%)</title><rect x="48.6720%" y="1029" width="4.1058%" height="15" fill="rgb(237,109,14)" fg:x="134014" fg:w="11305"/><text x="48.9220%" y="1039.50">&lt;std..</text></g><g><title>core::hash::Hasher::write_length_prefix (12,169 samples, 4.42%)</title><rect x="48.3586%" y="1061" width="4.4196%" height="15" fill="rgb(230,13,37)" fg:x="133151" fg:w="12169"/><text x="48.6086%" y="1071.50">core:..</text></g><g><title>core::hash::Hasher::write_usize (12,169 samples, 4.42%)</title><rect x="48.3586%" y="1045" width="4.4196%" height="15" fill="rgb(231,40,28)" fg:x="133151" fg:w="12169"/><text x="48.6086%" y="1055.50">core:..</text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5,434 samples, 1.97%)</title><rect x="56.9261%" y="981" width="1.9736%" height="15" fill="rgb(231,202,18)" fg:x="156741" fg:w="5434"/><text x="57.1761%" y="991.50">c..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9,961 samples, 3.62%)</title><rect x="55.9637%" y="997" width="3.6177%" height="15" fill="rgb(225,33,18)" fg:x="154091" fg:w="9961"/><text x="56.2137%" y="1007.50">&lt;cor..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,877 samples, 0.68%)</title><rect x="58.8997%" y="981" width="0.6817%" height="15" fill="rgb(223,64,47)" fg:x="162175" fg:w="1877"/><text x="59.1497%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (51 samples, 0.02%)</title><rect x="59.5814%" y="997" width="0.0185%" height="15" fill="rgb(234,114,13)" fg:x="164052" fg:w="51"/><text x="59.8314%" y="1007.50"></text></g><g><title>core::hash::sip::u8to64_le (1,378 samples, 0.50%)</title><rect x="59.6035%" y="997" width="0.5005%" height="15" fill="rgb(248,56,40)" fg:x="164113" fg:w="1378"/><text x="59.8535%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17,403 samples, 6.32%)</title><rect x="53.8569%" y="1013" width="6.3205%" height="15" fill="rgb(221,194,21)" fg:x="148290" fg:w="17403"/><text x="54.1069%" y="1023.50">&lt;core::h..</text></g><g><title>core::intrinsics::copy_nonoverlapping (202 samples, 0.07%)</title><rect x="60.1040%" y="997" width="0.0734%" height="15" fill="rgb(242,108,46)" fg:x="165491" fg:w="202"/><text x="60.3540%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19,208 samples, 6.98%)</title><rect x="53.8569%" y="1029" width="6.9761%" height="15" fill="rgb(220,106,10)" fg:x="148290" fg:w="19208"/><text x="54.1069%" y="1039.50">&lt;core::ha..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1,805 samples, 0.66%)</title><rect x="60.1774%" y="1013" width="0.6556%" height="15" fill="rgb(211,88,4)" fg:x="165693" fg:w="1805"/><text x="60.4274%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21,649 samples, 7.86%)</title><rect x="52.9718%" y="1045" width="7.8626%" height="15" fill="rgb(214,95,34)" fg:x="145853" fg:w="21649"/><text x="53.2218%" y="1055.50">&lt;std::colle..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (34,352 samples, 12.48%)</title><rect x="48.3586%" y="1077" width="12.4762%" height="15" fill="rgb(250,160,33)" fg:x="133151" fg:w="34352"/><text x="48.6086%" y="1087.50">core::hash::impls::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (22,183 samples, 8.06%)</title><rect x="52.7782%" y="1061" width="8.0566%" height="15" fill="rgb(225,29,10)" fg:x="145320" fg:w="22183"/><text x="53.0282%" y="1071.50">core::hash:..</text></g><g><title>hashbrown::map::make_hash (64,023 samples, 23.25%)</title><rect x="38.4026%" y="1141" width="23.2523%" height="15" fill="rgb(224,28,30)" fg:x="105738" fg:w="64023"/><text x="38.6526%" y="1151.50">hashbrown::map::make_hash</text></g><g><title>core::hash::BuildHasher::hash_one (63,611 samples, 23.10%)</title><rect x="38.5522%" y="1125" width="23.1026%" height="15" fill="rgb(231,77,4)" fg:x="106150" fg:w="63611"/><text x="38.8022%" y="1135.50">core::hash::BuildHasher::hash_one</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (36,610 samples, 13.30%)</title><rect x="48.3586%" y="1109" width="13.2962%" height="15" fill="rgb(209,63,21)" fg:x="133151" fg:w="36610"/><text x="48.6086%" y="1119.50">core::hash::impls::&lt;..</text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (36,610 samples, 13.30%)</title><rect x="48.3586%" y="1093" width="13.2962%" height="15" fill="rgb(226,22,11)" fg:x="133151" fg:w="36610"/><text x="48.6086%" y="1103.50">&lt;zenoh_protocol_core..</text></g><g><title>zenoh_protocol_core::PeerId::as_slice (2,258 samples, 0.82%)</title><rect x="60.8347%" y="1077" width="0.8201%" height="15" fill="rgb(216,82,30)" fg:x="167503" fg:w="2258"/><text x="61.0847%" y="1087.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (2,192 samples, 0.80%)</title><rect x="60.8587%" y="1061" width="0.7961%" height="15" fill="rgb(246,227,38)" fg:x="167569" fg:w="2192"/><text x="61.1087%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2,192 samples, 0.80%)</title><rect x="60.8587%" y="1045" width="0.7961%" height="15" fill="rgb(251,203,53)" fg:x="167569" fg:w="2192"/><text x="61.1087%" y="1055.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,192 samples, 0.80%)</title><rect x="60.8587%" y="1029" width="0.7961%" height="15" fill="rgb(254,101,1)" fg:x="167569" fg:w="2192"/><text x="61.1087%" y="1039.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,192 samples, 0.80%)</title><rect x="60.8587%" y="1013" width="0.7961%" height="15" fill="rgb(241,180,5)" fg:x="167569" fg:w="2192"/><text x="61.1087%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,271 samples, 0.46%)</title><rect x="63.3102%" y="1093" width="0.4616%" height="15" fill="rgb(218,168,4)" fg:x="174319" fg:w="1271"/><text x="63.5602%" y="1103.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,271 samples, 0.46%)</title><rect x="63.3102%" y="1077" width="0.4616%" height="15" fill="rgb(224,223,32)" fg:x="174319" fg:w="1271"/><text x="63.5602%" y="1087.50"></text></g><g><title>[libc.so.6] (10,652 samples, 3.87%)</title><rect x="65.9662%" y="997" width="3.8687%" height="15" fill="rgb(236,106,22)" fg:x="181632" fg:w="10652"/><text x="66.2162%" y="1007.50">[lib..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10,676 samples, 3.88%)</title><rect x="65.9600%" y="1045" width="3.8774%" height="15" fill="rgb(206,121,5)" fg:x="181615" fg:w="10676"/><text x="66.2100%" y="1055.50">core..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (10,676 samples, 3.88%)</title><rect x="65.9600%" y="1029" width="3.8774%" height="15" fill="rgb(233,87,28)" fg:x="181615" fg:w="10676"/><text x="66.2100%" y="1039.50">core..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (10,676 samples, 3.88%)</title><rect x="65.9600%" y="1013" width="3.8774%" height="15" fill="rgb(236,137,17)" fg:x="181615" fg:w="10676"/><text x="66.2100%" y="1023.50">&lt;[A]..</text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (16,760 samples, 6.09%)</title><rect x="63.7744%" y="1077" width="6.0870%" height="15" fill="rgb(209,183,38)" fg:x="175597" fg:w="16760"/><text x="64.0244%" y="1087.50">hashbrow..</text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (16,760 samples, 6.09%)</title><rect x="63.7744%" y="1061" width="6.0870%" height="15" fill="rgb(206,162,44)" fg:x="175597" fg:w="16760"/><text x="64.0244%" y="1071.50">&lt;zenoh_p..</text></g><g><title>zenoh_protocol_core::PeerId::as_slice (66 samples, 0.02%)</title><rect x="69.8374%" y="1045" width="0.0240%" height="15" fill="rgb(237,70,39)" fg:x="192291" fg:w="66"/><text x="70.0874%" y="1055.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (66 samples, 0.02%)</title><rect x="69.8374%" y="1029" width="0.0240%" height="15" fill="rgb(212,176,5)" fg:x="192291" fg:w="66"/><text x="70.0874%" y="1039.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (66 samples, 0.02%)</title><rect x="69.8374%" y="1013" width="0.0240%" height="15" fill="rgb(232,95,16)" fg:x="192291" fg:w="66"/><text x="70.0874%" y="1023.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (66 samples, 0.02%)</title><rect x="69.8374%" y="997" width="0.0240%" height="15" fill="rgb(219,115,35)" fg:x="192291" fg:w="66"/><text x="70.0874%" y="1007.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (66 samples, 0.02%)</title><rect x="69.8374%" y="981" width="0.0240%" height="15" fill="rgb(251,67,27)" fg:x="192291" fg:w="66"/><text x="70.0874%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (18,291 samples, 6.64%)</title><rect x="63.7744%" y="1093" width="6.6430%" height="15" fill="rgb(222,95,40)" fg:x="175597" fg:w="18291"/><text x="64.0244%" y="1103.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1,531 samples, 0.56%)</title><rect x="69.8614%" y="1077" width="0.5560%" height="15" fill="rgb(250,35,16)" fg:x="192357" fg:w="1531"/><text x="70.1114%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1,531 samples, 0.56%)</title><rect x="69.8614%" y="1061" width="0.5560%" height="15" fill="rgb(224,86,44)" fg:x="192357" fg:w="1531"/><text x="70.1114%" y="1071.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1,531 samples, 0.56%)</title><rect x="69.8614%" y="1045" width="0.5560%" height="15" fill="rgb(237,53,53)" fg:x="192357" fg:w="1531"/><text x="70.1114%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2,453 samples, 0.89%)</title><rect x="70.4174%" y="1093" width="0.8909%" height="15" fill="rgb(208,171,33)" fg:x="193888" fg:w="2453"/><text x="70.6674%" y="1103.50"></text></g><g><title>hashbrown::raw::h2 (2,525 samples, 0.92%)</title><rect x="71.3087%" y="1093" width="0.9170%" height="15" fill="rgb(222,64,27)" fg:x="196342" fg:w="2525"/><text x="71.5587%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5,325 samples, 1.93%)</title><rect x="72.2257%" y="1093" width="1.9340%" height="15" fill="rgb(221,121,35)" fg:x="198867" fg:w="5325"/><text x="72.4757%" y="1103.50">h..</text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5,325 samples, 1.93%)</title><rect x="72.2257%" y="1077" width="1.9340%" height="15" fill="rgb(228,137,42)" fg:x="198867" fg:w="5325"/><text x="72.4757%" y="1087.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (5,325 samples, 1.93%)</title><rect x="72.2257%" y="1061" width="1.9340%" height="15" fill="rgb(227,54,21)" fg:x="198867" fg:w="5325"/><text x="72.4757%" y="1071.50">c..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,926 samples, 0.70%)</title><rect x="74.1597%" y="1093" width="0.6995%" height="15" fill="rgb(240,168,33)" fg:x="204192" fg:w="1926"/><text x="74.4097%" y="1103.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,926 samples, 0.70%)</title><rect x="74.1597%" y="1077" width="0.6995%" height="15" fill="rgb(243,159,6)" fg:x="204192" fg:w="1926"/><text x="74.4097%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (36,365 samples, 13.21%)</title><rect x="61.6548%" y="1109" width="13.2073%" height="15" fill="rgb(205,211,41)" fg:x="169761" fg:w="36365"/><text x="61.9048%" y="1119.50">hashbrown::raw::RawT..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (36,518 samples, 13.26%)</title><rect x="61.6548%" y="1141" width="13.2628%" height="15" fill="rgb(253,30,1)" fg:x="169761" fg:w="36518"/><text x="61.9048%" y="1151.50">hashbrown::raw::RawT..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (36,518 samples, 13.26%)</title><rect x="61.6548%" y="1125" width="13.2628%" height="15" fill="rgb(226,80,18)" fg:x="169761" fg:w="36518"/><text x="61.9048%" y="1135.50">hashbrown::raw::RawT..</text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (153 samples, 0.06%)</title><rect x="74.8621%" y="1109" width="0.0556%" height="15" fill="rgb(253,156,46)" fg:x="206126" fg:w="153"/><text x="75.1121%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (100,640 samples, 36.55%)</title><rect x="38.3924%" y="1157" width="36.5510%" height="15" fill="rgb(248,87,27)" fg:x="105710" fg:w="100640"/><text x="38.6424%" y="1167.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (71 samples, 0.03%)</title><rect x="74.9176%" y="1141" width="0.0258%" height="15" fill="rgb(227,122,2)" fg:x="206279" fg:w="71"/><text x="75.1676%" y="1151.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (100,644 samples, 36.55%)</title><rect x="38.3924%" y="1205" width="36.5525%" height="15" fill="rgb(229,94,39)" fg:x="105710" fg:w="100644"/><text x="38.6424%" y="1215.50">zenoh::net::routing::network::Network::get_idx</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (100,644 samples, 36.55%)</title><rect x="38.3924%" y="1189" width="36.5525%" height="15" fill="rgb(225,173,31)" fg:x="105710" fg:w="100644"/><text x="38.6424%" y="1199.50">std::collections::hash::map::HashMap&lt;K,V,S&gt;::get</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (100,644 samples, 36.55%)</title><rect x="38.3924%" y="1173" width="36.5525%" height="15" fill="rgb(239,176,30)" fg:x="105710" fg:w="100644"/><text x="38.6424%" y="1183.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::get</text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (115,984 samples, 42.12%)</title><rect x="32.9660%" y="1221" width="42.1238%" height="15" fill="rgb(212,104,21)" fg:x="90769" fg:w="115984"/><text x="33.2160%" y="1231.50">zenoh::net::routing::network::Network::remove_detached_nodes</text></g><g><title>zenoh::net::routing::network::Network::remove_detached_nodes (399 samples, 0.14%)</title><rect x="74.9449%" y="1205" width="0.1449%" height="15" fill="rgb(240,209,40)" fg:x="206354" fg:w="399"/><text x="75.1949%" y="1215.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 samples, 0.03%)</title><rect x="75.1225%" y="1141" width="0.0291%" height="15" fill="rgb(234,195,5)" fg:x="206843" fg:w="80"/><text x="75.3725%" y="1151.50"></text></g><g><title>malloc (42 samples, 0.02%)</title><rect x="75.1363%" y="1125" width="0.0153%" height="15" fill="rgb(238,213,1)" fg:x="206881" fg:w="42"/><text x="75.3863%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (99 samples, 0.04%)</title><rect x="75.1192%" y="1173" width="0.0360%" height="15" fill="rgb(235,182,54)" fg:x="206834" fg:w="99"/><text x="75.3692%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (94 samples, 0.03%)</title><rect x="75.1210%" y="1157" width="0.0341%" height="15" fill="rgb(229,50,46)" fg:x="206839" fg:w="94"/><text x="75.3710%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (114 samples, 0.04%)</title><rect x="75.1174%" y="1189" width="0.0414%" height="15" fill="rgb(219,145,13)" fg:x="206829" fg:w="114"/><text x="75.3674%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (43 samples, 0.02%)</title><rect x="75.1595%" y="1093" width="0.0156%" height="15" fill="rgb(220,226,10)" fg:x="206945" fg:w="43"/><text x="75.4095%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (43 samples, 0.02%)</title><rect x="75.1595%" y="1077" width="0.0156%" height="15" fill="rgb(248,47,30)" fg:x="206945" fg:w="43"/><text x="75.4095%" y="1087.50"></text></g><g><title>cfree (37 samples, 0.01%)</title><rect x="75.1617%" y="1061" width="0.0134%" height="15" fill="rgb(231,209,44)" fg:x="206951" fg:w="37"/><text x="75.4117%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (44 samples, 0.02%)</title><rect x="75.1595%" y="1189" width="0.0160%" height="15" fill="rgb(209,80,30)" fg:x="206945" fg:w="44"/><text x="75.4095%" y="1199.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.02%)</title><rect x="75.1595%" y="1173" width="0.0160%" height="15" fill="rgb(232,9,14)" fg:x="206945" fg:w="44"/><text x="75.4095%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(petgraph::graph_impl::NodeIndex,bool),alloc::alloc::Global&gt;&gt; (44 samples, 0.02%)</title><rect x="75.1595%" y="1157" width="0.0160%" height="15" fill="rgb(243,91,43)" fg:x="206945" fg:w="44"/><text x="75.4095%" y="1167.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.02%)</title><rect x="75.1595%" y="1141" width="0.0160%" height="15" fill="rgb(231,90,52)" fg:x="206945" fg:w="44"/><text x="75.4095%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(petgraph::graph_impl::NodeIndex,bool)&gt;&gt; (44 samples, 0.02%)</title><rect x="75.1595%" y="1125" width="0.0160%" height="15" fill="rgb(253,192,44)" fg:x="206945" fg:w="44"/><text x="75.4095%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.02%)</title><rect x="75.1595%" y="1109" width="0.0160%" height="15" fill="rgb(241,66,31)" fg:x="206945" fg:w="44"/><text x="75.4095%" y="1119.50"></text></g><g><title>[libc.so.6] (110 samples, 0.04%)</title><rect x="75.2616%" y="885" width="0.0400%" height="15" fill="rgb(235,81,37)" fg:x="207226" fg:w="110"/><text x="75.5116%" y="895.50"></text></g><g><title>[libc.so.6] (57 samples, 0.02%)</title><rect x="75.2808%" y="869" width="0.0207%" height="15" fill="rgb(223,221,9)" fg:x="207279" fg:w="57"/><text x="75.5308%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (200 samples, 0.07%)</title><rect x="75.2293%" y="997" width="0.0726%" height="15" fill="rgb(242,180,7)" fg:x="207137" fg:w="200"/><text x="75.4793%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (200 samples, 0.07%)</title><rect x="75.2293%" y="981" width="0.0726%" height="15" fill="rgb(243,78,19)" fg:x="207137" fg:w="200"/><text x="75.4793%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (200 samples, 0.07%)</title><rect x="75.2293%" y="965" width="0.0726%" height="15" fill="rgb(233,23,17)" fg:x="207137" fg:w="200"/><text x="75.4793%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (193 samples, 0.07%)</title><rect x="75.2318%" y="949" width="0.0701%" height="15" fill="rgb(252,122,45)" fg:x="207144" fg:w="193"/><text x="75.4818%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (193 samples, 0.07%)</title><rect x="75.2318%" y="933" width="0.0701%" height="15" fill="rgb(247,108,20)" fg:x="207144" fg:w="193"/><text x="75.4818%" y="943.50"></text></g><g><title>alloc::alloc::alloc (193 samples, 0.07%)</title><rect x="75.2318%" y="917" width="0.0701%" height="15" fill="rgb(235,84,21)" fg:x="207144" fg:w="193"/><text x="75.4818%" y="927.50"></text></g><g><title>malloc (181 samples, 0.07%)</title><rect x="75.2362%" y="901" width="0.0657%" height="15" fill="rgb(247,129,10)" fg:x="207156" fg:w="181"/><text x="75.4862%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (299 samples, 0.11%)</title><rect x="75.2140%" y="1077" width="0.1086%" height="15" fill="rgb(208,173,14)" fg:x="207095" fg:w="299"/><text x="75.4640%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (257 samples, 0.09%)</title><rect x="75.2293%" y="1061" width="0.0933%" height="15" fill="rgb(236,31,38)" fg:x="207137" fg:w="257"/><text x="75.4793%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (257 samples, 0.09%)</title><rect x="75.2293%" y="1045" width="0.0933%" height="15" fill="rgb(232,65,17)" fg:x="207137" fg:w="257"/><text x="75.4793%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (257 samples, 0.09%)</title><rect x="75.2293%" y="1029" width="0.0933%" height="15" fill="rgb(224,45,49)" fg:x="207137" fg:w="257"/><text x="75.4793%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (257 samples, 0.09%)</title><rect x="75.2293%" y="1013" width="0.0933%" height="15" fill="rgb(225,2,53)" fg:x="207137" fg:w="257"/><text x="75.4793%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (57 samples, 0.02%)</title><rect x="75.3019%" y="997" width="0.0207%" height="15" fill="rgb(248,210,53)" fg:x="207337" fg:w="57"/><text x="75.5519%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.02%)</title><rect x="75.3019%" y="981" width="0.0207%" height="15" fill="rgb(211,1,30)" fg:x="207337" fg:w="57"/><text x="75.5519%" y="991.50"></text></g><g><title>[libc.so.6] (57 samples, 0.02%)</title><rect x="75.3019%" y="965" width="0.0207%" height="15" fill="rgb(224,96,15)" fg:x="207337" fg:w="57"/><text x="75.5519%" y="975.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (352 samples, 0.13%)</title><rect x="75.1958%" y="1093" width="0.1278%" height="15" fill="rgb(252,45,11)" fg:x="207045" fg:w="352"/><text x="75.4458%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.02%)</title><rect x="75.3244%" y="1093" width="0.0232%" height="15" fill="rgb(220,125,38)" fg:x="207399" fg:w="64"/><text x="75.5744%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 0.02%)</title><rect x="75.3251%" y="1077" width="0.0225%" height="15" fill="rgb(243,161,33)" fg:x="207401" fg:w="62"/><text x="75.5751%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (61 samples, 0.02%)</title><rect x="75.3255%" y="1061" width="0.0222%" height="15" fill="rgb(248,197,34)" fg:x="207402" fg:w="61"/><text x="75.5755%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (59 samples, 0.02%)</title><rect x="75.3262%" y="1045" width="0.0214%" height="15" fill="rgb(228,165,23)" fg:x="207404" fg:w="59"/><text x="75.5762%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (59 samples, 0.02%)</title><rect x="75.3262%" y="1029" width="0.0214%" height="15" fill="rgb(236,94,38)" fg:x="207404" fg:w="59"/><text x="75.5762%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (58 samples, 0.02%)</title><rect x="75.3266%" y="1013" width="0.0211%" height="15" fill="rgb(220,13,23)" fg:x="207405" fg:w="58"/><text x="75.5766%" y="1023.50"></text></g><g><title>malloc (40 samples, 0.01%)</title><rect x="75.3331%" y="997" width="0.0145%" height="15" fill="rgb(234,26,39)" fg:x="207423" fg:w="40"/><text x="75.5831%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (460 samples, 0.17%)</title><rect x="75.1842%" y="1173" width="0.1671%" height="15" fill="rgb(205,117,44)" fg:x="207013" fg:w="460"/><text x="75.4342%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (436 samples, 0.16%)</title><rect x="75.1929%" y="1157" width="0.1583%" height="15" fill="rgb(250,42,2)" fg:x="207037" fg:w="436"/><text x="75.4429%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (428 samples, 0.16%)</title><rect x="75.1958%" y="1141" width="0.1554%" height="15" fill="rgb(223,83,14)" fg:x="207045" fg:w="428"/><text x="75.4458%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (428 samples, 0.16%)</title><rect x="75.1958%" y="1125" width="0.1554%" height="15" fill="rgb(241,147,50)" fg:x="207045" fg:w="428"/><text x="75.4458%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (428 samples, 0.16%)</title><rect x="75.1958%" y="1109" width="0.1554%" height="15" fill="rgb(218,90,6)" fg:x="207045" fg:w="428"/><text x="75.4458%" y="1119.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as core::ops::index::Index&lt;petgraph::graph_impl::NodeIndex&lt;Ix&gt;&gt;&gt;::index (32 samples, 0.01%)</title><rect x="75.3520%" y="1173" width="0.0116%" height="15" fill="rgb(210,191,5)" fg:x="207475" fg:w="32"/><text x="75.6020%" y="1183.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (64 samples, 0.02%)</title><rect x="75.5289%" y="853" width="0.0232%" height="15" fill="rgb(225,139,19)" fg:x="207962" fg:w="64"/><text x="75.7789%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (137 samples, 0.05%)</title><rect x="75.5151%" y="869" width="0.0498%" height="15" fill="rgb(210,1,33)" fg:x="207924" fg:w="137"/><text x="75.7651%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (35 samples, 0.01%)</title><rect x="75.5521%" y="853" width="0.0127%" height="15" fill="rgb(213,50,3)" fg:x="208026" fg:w="35"/><text x="75.8021%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (260 samples, 0.09%)</title><rect x="75.5812%" y="853" width="0.0944%" height="15" fill="rgb(234,227,4)" fg:x="208106" fg:w="260"/><text x="75.8312%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (420 samples, 0.15%)</title><rect x="75.5648%" y="869" width="0.1525%" height="15" fill="rgb(246,63,5)" fg:x="208061" fg:w="420"/><text x="75.8148%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (115 samples, 0.04%)</title><rect x="75.6756%" y="853" width="0.0418%" height="15" fill="rgb(245,136,27)" fg:x="208366" fg:w="115"/><text x="75.9256%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (682 samples, 0.25%)</title><rect x="75.4701%" y="917" width="0.2477%" height="15" fill="rgb(247,199,27)" fg:x="207800" fg:w="682"/><text x="75.7201%" y="927.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (682 samples, 0.25%)</title><rect x="75.4701%" y="901" width="0.2477%" height="15" fill="rgb(252,158,49)" fg:x="207800" fg:w="682"/><text x="75.7201%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (682 samples, 0.25%)</title><rect x="75.4701%" y="885" width="0.2477%" height="15" fill="rgb(254,73,1)" fg:x="207800" fg:w="682"/><text x="75.7201%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (156 samples, 0.06%)</title><rect x="75.7177%" y="917" width="0.0567%" height="15" fill="rgb(248,93,19)" fg:x="208482" fg:w="156"/><text x="75.9677%" y="927.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (43 samples, 0.02%)</title><rect x="75.7588%" y="901" width="0.0156%" height="15" fill="rgb(206,67,5)" fg:x="208595" fg:w="43"/><text x="76.0088%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (30 samples, 0.01%)</title><rect x="75.7635%" y="885" width="0.0109%" height="15" fill="rgb(209,210,4)" fg:x="208608" fg:w="30"/><text x="76.0135%" y="895.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (30 samples, 0.01%)</title><rect x="75.7635%" y="869" width="0.0109%" height="15" fill="rgb(214,185,36)" fg:x="208608" fg:w="30"/><text x="76.0135%" y="879.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (71 samples, 0.03%)</title><rect x="75.8786%" y="773" width="0.0258%" height="15" fill="rgb(233,191,26)" fg:x="208925" fg:w="71"/><text x="76.1286%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (129 samples, 0.05%)</title><rect x="75.8637%" y="789" width="0.0469%" height="15" fill="rgb(248,94,17)" fg:x="208884" fg:w="129"/><text x="76.1137%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (356 samples, 0.13%)</title><rect x="75.7929%" y="805" width="0.1293%" height="15" fill="rgb(250,64,4)" fg:x="208689" fg:w="356"/><text x="76.0429%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (31 samples, 0.01%)</title><rect x="75.9110%" y="789" width="0.0113%" height="15" fill="rgb(218,41,53)" fg:x="209014" fg:w="31"/><text x="76.1610%" y="799.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (461 samples, 0.17%)</title><rect x="75.7744%" y="869" width="0.1674%" height="15" fill="rgb(251,176,28)" fg:x="208638" fg:w="461"/><text x="76.0244%" y="879.50"></text></g><g><title>core::hash::Hasher::write_usize (461 samples, 0.17%)</title><rect x="75.7744%" y="853" width="0.1674%" height="15" fill="rgb(247,22,9)" fg:x="208638" fg:w="461"/><text x="76.0244%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (425 samples, 0.15%)</title><rect x="75.7875%" y="837" width="0.1544%" height="15" fill="rgb(218,201,14)" fg:x="208674" fg:w="425"/><text x="76.0375%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (410 samples, 0.15%)</title><rect x="75.7929%" y="821" width="0.1489%" height="15" fill="rgb(218,94,10)" fg:x="208689" fg:w="410"/><text x="76.0429%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (54 samples, 0.02%)</title><rect x="75.9222%" y="805" width="0.0196%" height="15" fill="rgb(222,183,52)" fg:x="209045" fg:w="54"/><text x="76.1722%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (187 samples, 0.07%)</title><rect x="76.0555%" y="789" width="0.0679%" height="15" fill="rgb(242,140,25)" fg:x="209412" fg:w="187"/><text x="76.3055%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (346 samples, 0.13%)</title><rect x="76.0228%" y="805" width="0.1257%" height="15" fill="rgb(235,197,38)" fg:x="209322" fg:w="346"/><text x="76.2728%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (69 samples, 0.03%)</title><rect x="76.1234%" y="789" width="0.0251%" height="15" fill="rgb(237,136,15)" fg:x="209599" fg:w="69"/><text x="76.3734%" y="799.50"></text></g><g><title>core::hash::sip::u8to64_le (41 samples, 0.01%)</title><rect x="76.1499%" y="805" width="0.0149%" height="15" fill="rgb(223,44,49)" fg:x="209672" fg:w="41"/><text x="76.3999%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (525 samples, 0.19%)</title><rect x="75.9771%" y="821" width="0.1907%" height="15" fill="rgb(227,71,15)" fg:x="209196" fg:w="525"/><text x="76.2271%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (663 samples, 0.24%)</title><rect x="75.9513%" y="853" width="0.2408%" height="15" fill="rgb(225,153,20)" fg:x="209125" fg:w="663"/><text x="76.2013%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (592 samples, 0.22%)</title><rect x="75.9771%" y="837" width="0.2150%" height="15" fill="rgb(210,190,26)" fg:x="209196" fg:w="592"/><text x="76.2271%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (67 samples, 0.02%)</title><rect x="76.1677%" y="821" width="0.0243%" height="15" fill="rgb(223,147,5)" fg:x="209721" fg:w="67"/><text x="76.4177%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1,151 samples, 0.42%)</title><rect x="75.7744%" y="885" width="0.4180%" height="15" fill="rgb(207,14,23)" fg:x="208638" fg:w="1151"/><text x="76.0244%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (690 samples, 0.25%)</title><rect x="75.9418%" y="869" width="0.2506%" height="15" fill="rgb(211,195,53)" fg:x="209099" fg:w="690"/><text x="76.1918%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (2,087 samples, 0.76%)</title><rect x="75.4377%" y="949" width="0.7580%" height="15" fill="rgb(237,75,46)" fg:x="207711" fg:w="2087"/><text x="75.6877%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,084 samples, 0.76%)</title><rect x="75.4388%" y="933" width="0.7569%" height="15" fill="rgb(254,55,14)" fg:x="207714" fg:w="2084"/><text x="75.6888%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,160 samples, 0.42%)</title><rect x="75.7744%" y="917" width="0.4213%" height="15" fill="rgb(230,185,30)" fg:x="208638" fg:w="1160"/><text x="76.0244%" y="927.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (1,160 samples, 0.42%)</title><rect x="75.7744%" y="901" width="0.4213%" height="15" fill="rgb(220,14,11)" fg:x="208638" fg:w="1160"/><text x="76.0244%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.01%)</title><rect x="76.2527%" y="901" width="0.0123%" height="15" fill="rgb(215,169,44)" fg:x="209955" fg:w="34"/><text x="76.5027%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (34 samples, 0.01%)</title><rect x="76.2527%" y="885" width="0.0123%" height="15" fill="rgb(253,203,20)" fg:x="209955" fg:w="34"/><text x="76.5027%" y="895.50"></text></g><g><title>[libc.so.6] (325 samples, 0.12%)</title><rect x="76.3762%" y="805" width="0.1180%" height="15" fill="rgb(229,225,17)" fg:x="210295" fg:w="325"/><text x="76.6262%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (326 samples, 0.12%)</title><rect x="76.3762%" y="853" width="0.1184%" height="15" fill="rgb(236,76,26)" fg:x="210295" fg:w="326"/><text x="76.6262%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (326 samples, 0.12%)</title><rect x="76.3762%" y="837" width="0.1184%" height="15" fill="rgb(234,15,30)" fg:x="210295" fg:w="326"/><text x="76.6262%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (326 samples, 0.12%)</title><rect x="76.3762%" y="821" width="0.1184%" height="15" fill="rgb(211,113,48)" fg:x="210295" fg:w="326"/><text x="76.6262%" y="831.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (633 samples, 0.23%)</title><rect x="76.2651%" y="885" width="0.2299%" height="15" fill="rgb(221,31,36)" fg:x="209989" fg:w="633"/><text x="76.5151%" y="895.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (633 samples, 0.23%)</title><rect x="76.2651%" y="869" width="0.2299%" height="15" fill="rgb(215,118,52)" fg:x="209989" fg:w="633"/><text x="76.5151%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (670 samples, 0.24%)</title><rect x="76.2651%" y="901" width="0.2433%" height="15" fill="rgb(241,151,27)" fg:x="209989" fg:w="670"/><text x="76.5151%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (37 samples, 0.01%)</title><rect x="76.4950%" y="885" width="0.0134%" height="15" fill="rgb(253,51,3)" fg:x="210622" fg:w="37"/><text x="76.7450%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (37 samples, 0.01%)</title><rect x="76.4950%" y="869" width="0.0134%" height="15" fill="rgb(216,201,24)" fg:x="210622" fg:w="37"/><text x="76.7450%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (37 samples, 0.01%)</title><rect x="76.4950%" y="853" width="0.0134%" height="15" fill="rgb(231,107,4)" fg:x="210622" fg:w="37"/><text x="76.7450%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (69 samples, 0.03%)</title><rect x="76.5084%" y="901" width="0.0251%" height="15" fill="rgb(243,97,54)" fg:x="210659" fg:w="69"/><text x="76.7584%" y="911.50"></text></g><g><title>hashbrown::raw::h2 (75 samples, 0.03%)</title><rect x="76.5335%" y="901" width="0.0272%" height="15" fill="rgb(221,32,51)" fg:x="210728" fg:w="75"/><text x="76.7835%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (187 samples, 0.07%)</title><rect x="76.5607%" y="901" width="0.0679%" height="15" fill="rgb(218,171,35)" fg:x="210803" fg:w="187"/><text x="76.8107%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (187 samples, 0.07%)</title><rect x="76.5607%" y="885" width="0.0679%" height="15" fill="rgb(214,20,53)" fg:x="210803" fg:w="187"/><text x="76.8107%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (187 samples, 0.07%)</title><rect x="76.5607%" y="869" width="0.0679%" height="15" fill="rgb(239,9,52)" fg:x="210803" fg:w="187"/><text x="76.8107%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1,251 samples, 0.45%)</title><rect x="76.1957%" y="917" width="0.4543%" height="15" fill="rgb(215,114,45)" fg:x="209798" fg:w="1251"/><text x="76.4457%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (59 samples, 0.02%)</title><rect x="76.6286%" y="901" width="0.0214%" height="15" fill="rgb(208,118,9)" fg:x="210990" fg:w="59"/><text x="76.8786%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (59 samples, 0.02%)</title><rect x="76.6286%" y="885" width="0.0214%" height="15" fill="rgb(235,7,39)" fg:x="210990" fg:w="59"/><text x="76.8786%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,256 samples, 0.46%)</title><rect x="76.1957%" y="949" width="0.4562%" height="15" fill="rgb(243,225,15)" fg:x="209798" fg:w="1256"/><text x="76.4457%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,256 samples, 0.46%)</title><rect x="76.1957%" y="933" width="0.4562%" height="15" fill="rgb(225,216,18)" fg:x="209798" fg:w="1256"/><text x="76.4457%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,415 samples, 1.24%)</title><rect x="75.4334%" y="965" width="1.2403%" height="15" fill="rgb(233,36,38)" fg:x="207699" fg:w="3415"/><text x="75.6834%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (60 samples, 0.02%)</title><rect x="76.6519%" y="949" width="0.0218%" height="15" fill="rgb(239,88,23)" fg:x="211054" fg:w="60"/><text x="76.9019%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,523 samples, 1.28%)</title><rect x="75.3945%" y="1077" width="1.2795%" height="15" fill="rgb(219,181,35)" fg:x="207592" fg:w="3523"/><text x="75.6445%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (3,520 samples, 1.28%)</title><rect x="75.3956%" y="1061" width="1.2784%" height="15" fill="rgb(215,18,46)" fg:x="207595" fg:w="3520"/><text x="75.6456%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3,494 samples, 1.27%)</title><rect x="75.4050%" y="1045" width="1.2690%" height="15" fill="rgb(241,38,11)" fg:x="207621" fg:w="3494"/><text x="75.6550%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (3,494 samples, 1.27%)</title><rect x="75.4050%" y="1029" width="1.2690%" height="15" fill="rgb(248,169,45)" fg:x="207621" fg:w="3494"/><text x="75.6550%" y="1039.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (3,482 samples, 1.26%)</title><rect x="75.4094%" y="1013" width="1.2646%" height="15" fill="rgb(239,50,49)" fg:x="207633" fg:w="3482"/><text x="75.6594%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,443 samples, 1.25%)</title><rect x="75.4236%" y="997" width="1.2504%" height="15" fill="rgb(231,96,31)" fg:x="207672" fg:w="3443"/><text x="75.6736%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,443 samples, 1.25%)</title><rect x="75.4236%" y="981" width="1.2504%" height="15" fill="rgb(224,193,37)" fg:x="207672" fg:w="3443"/><text x="75.6736%" y="991.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="76.9936%" y="901" width="0.0116%" height="15" fill="rgb(227,153,50)" fg:x="211995" fg:w="32"/><text x="77.2436%" y="911.50"></text></g><g><title>[libc.so.6] (476 samples, 0.17%)</title><rect x="76.8331%" y="917" width="0.1729%" height="15" fill="rgb(249,228,3)" fg:x="211553" fg:w="476"/><text x="77.0831%" y="927.50"></text></g><g><title>[libc.so.6] (622 samples, 0.23%)</title><rect x="76.7812%" y="933" width="0.2259%" height="15" fill="rgb(219,164,43)" fg:x="211410" fg:w="622"/><text x="77.0312%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (883 samples, 0.32%)</title><rect x="76.7027%" y="997" width="0.3207%" height="15" fill="rgb(216,45,41)" fg:x="211194" fg:w="883"/><text x="76.9527%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (883 samples, 0.32%)</title><rect x="76.7027%" y="981" width="0.3207%" height="15" fill="rgb(210,226,51)" fg:x="211194" fg:w="883"/><text x="76.9527%" y="991.50"></text></g><g><title>alloc::alloc::realloc (881 samples, 0.32%)</title><rect x="76.7034%" y="965" width="0.3200%" height="15" fill="rgb(209,117,49)" fg:x="211196" fg:w="881"/><text x="76.9534%" y="975.50"></text></g><g><title>realloc (840 samples, 0.31%)</title><rect x="76.7183%" y="949" width="0.3051%" height="15" fill="rgb(206,196,24)" fg:x="211237" fg:w="840"/><text x="76.9683%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (926 samples, 0.34%)</title><rect x="76.6900%" y="1013" width="0.3363%" height="15" fill="rgb(253,218,3)" fg:x="211159" fg:w="926"/><text x="76.9400%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (987 samples, 0.36%)</title><rect x="76.6747%" y="1077" width="0.3585%" height="15" fill="rgb(252,166,2)" fg:x="211117" fg:w="987"/><text x="76.9247%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (987 samples, 0.36%)</title><rect x="76.6747%" y="1061" width="0.3585%" height="15" fill="rgb(236,218,26)" fg:x="211117" fg:w="987"/><text x="76.9247%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (983 samples, 0.36%)</title><rect x="76.6762%" y="1045" width="0.3570%" height="15" fill="rgb(254,84,19)" fg:x="211121" fg:w="983"/><text x="76.9262%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (977 samples, 0.35%)</title><rect x="76.6784%" y="1029" width="0.3548%" height="15" fill="rgb(219,137,29)" fg:x="211127" fg:w="977"/><text x="76.9284%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,584 samples, 1.66%)</title><rect x="75.3716%" y="1109" width="1.6648%" height="15" fill="rgb(227,47,52)" fg:x="207529" fg:w="4584"/><text x="75.6216%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,570 samples, 1.66%)</title><rect x="75.3767%" y="1093" width="1.6598%" height="15" fill="rgb(229,167,24)" fg:x="207543" fg:w="4570"/><text x="75.6267%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (34 samples, 0.01%)</title><rect x="77.0434%" y="949" width="0.0123%" height="15" fill="rgb(233,164,1)" fg:x="212132" fg:w="34"/><text x="77.2934%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (34 samples, 0.01%)</title><rect x="77.0434%" y="933" width="0.0123%" height="15" fill="rgb(218,88,48)" fg:x="212132" fg:w="34"/><text x="77.2934%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (34 samples, 0.01%)</title><rect x="77.0434%" y="917" width="0.0123%" height="15" fill="rgb(226,214,24)" fg:x="212132" fg:w="34"/><text x="77.2934%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (33 samples, 0.01%)</title><rect x="77.0630%" y="837" width="0.0120%" height="15" fill="rgb(233,29,12)" fg:x="212186" fg:w="33"/><text x="77.3130%" y="847.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (39 samples, 0.01%)</title><rect x="77.0626%" y="901" width="0.0142%" height="15" fill="rgb(219,120,34)" fg:x="212185" fg:w="39"/><text x="77.3126%" y="911.50"></text></g><g><title>core::hash::Hasher::write_usize (39 samples, 0.01%)</title><rect x="77.0626%" y="885" width="0.0142%" height="15" fill="rgb(226,78,44)" fg:x="212185" fg:w="39"/><text x="77.3126%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (39 samples, 0.01%)</title><rect x="77.0626%" y="869" width="0.0142%" height="15" fill="rgb(240,15,48)" fg:x="212185" fg:w="39"/><text x="77.3126%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (38 samples, 0.01%)</title><rect x="77.0630%" y="853" width="0.0138%" height="15" fill="rgb(253,176,7)" fg:x="212186" fg:w="38"/><text x="77.3130%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.01%)</title><rect x="77.0797%" y="853" width="0.0102%" height="15" fill="rgb(206,166,28)" fg:x="212232" fg:w="28"/><text x="77.3297%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (83 samples, 0.03%)</title><rect x="77.0626%" y="917" width="0.0301%" height="15" fill="rgb(241,53,51)" fg:x="212185" fg:w="83"/><text x="77.3126%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (44 samples, 0.02%)</title><rect x="77.0768%" y="901" width="0.0160%" height="15" fill="rgb(249,112,30)" fg:x="212224" fg:w="44"/><text x="77.3268%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (41 samples, 0.01%)</title><rect x="77.0779%" y="885" width="0.0149%" height="15" fill="rgb(217,85,30)" fg:x="212227" fg:w="41"/><text x="77.3279%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (36 samples, 0.01%)</title><rect x="77.0797%" y="869" width="0.0131%" height="15" fill="rgb(233,49,7)" fg:x="212232" fg:w="36"/><text x="77.3297%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (165 samples, 0.06%)</title><rect x="77.0412%" y="981" width="0.0599%" height="15" fill="rgb(234,109,9)" fg:x="212126" fg:w="165"/><text x="77.2912%" y="991.50"></text></g><g><title>core::hash::BuildHasher::hash_one (165 samples, 0.06%)</title><rect x="77.0412%" y="965" width="0.0599%" height="15" fill="rgb(253,95,22)" fg:x="212126" fg:w="165"/><text x="77.2912%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (106 samples, 0.04%)</title><rect x="77.0626%" y="949" width="0.0385%" height="15" fill="rgb(233,176,25)" fg:x="212185" fg:w="106"/><text x="77.3126%" y="959.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (106 samples, 0.04%)</title><rect x="77.0626%" y="933" width="0.0385%" height="15" fill="rgb(236,33,39)" fg:x="212185" fg:w="106"/><text x="77.3126%" y="943.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (41 samples, 0.01%)</title><rect x="77.1051%" y="917" width="0.0149%" height="15" fill="rgb(223,226,42)" fg:x="212302" fg:w="41"/><text x="77.3551%" y="927.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (41 samples, 0.01%)</title><rect x="77.1051%" y="901" width="0.0149%" height="15" fill="rgb(216,99,33)" fg:x="212302" fg:w="41"/><text x="77.3551%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (43 samples, 0.02%)</title><rect x="77.1051%" y="933" width="0.0156%" height="15" fill="rgb(235,84,23)" fg:x="212302" fg:w="43"/><text x="77.3551%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (86 samples, 0.03%)</title><rect x="77.1011%" y="949" width="0.0312%" height="15" fill="rgb(232,2,27)" fg:x="212291" fg:w="86"/><text x="77.3511%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (89 samples, 0.03%)</title><rect x="77.1011%" y="981" width="0.0323%" height="15" fill="rgb(241,23,22)" fg:x="212291" fg:w="89"/><text x="77.3511%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (89 samples, 0.03%)</title><rect x="77.1011%" y="965" width="0.0323%" height="15" fill="rgb(211,73,27)" fg:x="212291" fg:w="89"/><text x="77.3511%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (265 samples, 0.10%)</title><rect x="77.0397%" y="997" width="0.0962%" height="15" fill="rgb(235,109,49)" fg:x="212122" fg:w="265"/><text x="77.2897%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 0.10%)</title><rect x="77.0365%" y="1109" width="0.1002%" height="15" fill="rgb(230,99,29)" fg:x="212113" fg:w="276"/><text x="77.2865%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (276 samples, 0.10%)</title><rect x="77.0365%" y="1093" width="0.1002%" height="15" fill="rgb(245,199,7)" fg:x="212113" fg:w="276"/><text x="77.2865%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (275 samples, 0.10%)</title><rect x="77.0368%" y="1077" width="0.0999%" height="15" fill="rgb(217,179,10)" fg:x="212114" fg:w="275"/><text x="77.2868%" y="1087.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state::{{closure}} (275 samples, 0.10%)</title><rect x="77.0368%" y="1061" width="0.0999%" height="15" fill="rgb(254,99,47)" fg:x="212114" fg:w="275"/><text x="77.2868%" y="1071.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (270 samples, 0.10%)</title><rect x="77.0387%" y="1045" width="0.0981%" height="15" fill="rgb(251,121,7)" fg:x="212119" fg:w="270"/><text x="77.2887%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (268 samples, 0.10%)</title><rect x="77.0394%" y="1029" width="0.0973%" height="15" fill="rgb(250,177,26)" fg:x="212121" fg:w="268"/><text x="77.2894%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (268 samples, 0.10%)</title><rect x="77.0394%" y="1013" width="0.0973%" height="15" fill="rgb(232,88,15)" fg:x="212121" fg:w="268"/><text x="77.2894%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,894 samples, 1.78%)</title><rect x="75.3698%" y="1125" width="1.7774%" height="15" fill="rgb(251,54,54)" fg:x="207524" fg:w="4894"/><text x="75.6198%" y="1135.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,912 samples, 1.78%)</title><rect x="75.3636%" y="1173" width="1.7840%" height="15" fill="rgb(208,177,15)" fg:x="207507" fg:w="4912"/><text x="75.6136%" y="1183.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,912 samples, 1.78%)</title><rect x="75.3636%" y="1157" width="1.7840%" height="15" fill="rgb(205,97,32)" fg:x="207507" fg:w="4912"/><text x="75.6136%" y="1167.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,910 samples, 1.78%)</title><rect x="75.3644%" y="1141" width="1.7832%" height="15" fill="rgb(217,192,13)" fg:x="207509" fg:w="4910"/><text x="75.6144%" y="1151.50">&lt;..</text></g><g><title>zenoh::net::routing::network::Network::make_link_state (5,431 samples, 1.97%)</title><rect x="75.1755%" y="1189" width="1.9725%" height="15" fill="rgb(215,163,41)" fg:x="206989" fg:w="5431"/><text x="75.4255%" y="1199.50">z..</text></g><g><title>zenoh::net::routing::network::Network::make_msg (5,684 samples, 2.06%)</title><rect x="75.0982%" y="1205" width="2.0643%" height="15" fill="rgb(246,83,29)" fg:x="206776" fg:w="5684"/><text x="75.3482%" y="1215.50">z..</text></g><g><title>zenoh_protocol::proto::msg::ZenohMessage::make_link_state_list (39 samples, 0.01%)</title><rect x="77.1483%" y="1189" width="0.0142%" height="15" fill="rgb(219,2,45)" fg:x="212421" fg:w="39"/><text x="77.3983%" y="1199.50"></text></g><g><title>[libc.so.6] (41 samples, 0.01%)</title><rect x="77.1625%" y="1189" width="0.0149%" height="15" fill="rgb(242,215,33)" fg:x="212460" fg:w="41"/><text x="77.4125%" y="1199.50"></text></g><g><title>[libc.so.6] (34 samples, 0.01%)</title><rect x="77.1774%" y="1173" width="0.0123%" height="15" fill="rgb(217,1,6)" fg:x="212501" fg:w="34"/><text x="77.4274%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::get_inner (290 samples, 0.11%)</title><rect x="77.1981%" y="1173" width="0.1053%" height="15" fill="rgb(207,85,52)" fg:x="212558" fg:w="290"/><text x="77.4481%" y="1183.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (290 samples, 0.11%)</title><rect x="77.1981%" y="1157" width="0.1053%" height="15" fill="rgb(231,171,19)" fg:x="212558" fg:w="290"/><text x="77.4481%" y="1167.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="77.3357%" y="1141" width="0.0113%" height="15" fill="rgb(207,128,4)" fg:x="212937" fg:w="31"/><text x="77.5857%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (55 samples, 0.02%)</title><rect x="77.3470%" y="1141" width="0.0200%" height="15" fill="rgb(219,208,4)" fg:x="212968" fg:w="55"/><text x="77.5970%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (231 samples, 0.08%)</title><rect x="77.4218%" y="1125" width="0.0839%" height="15" fill="rgb(235,161,42)" fg:x="213174" fg:w="231"/><text x="77.6718%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (43 samples, 0.02%)</title><rect x="77.5057%" y="1125" width="0.0156%" height="15" fill="rgb(247,218,18)" fg:x="213405" fg:w="43"/><text x="77.7557%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (198 samples, 0.07%)</title><rect x="77.5529%" y="1061" width="0.0719%" height="15" fill="rgb(232,114,51)" fg:x="213535" fg:w="198"/><text x="77.8029%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (198 samples, 0.07%)</title><rect x="77.5529%" y="1045" width="0.0719%" height="15" fill="rgb(222,95,3)" fg:x="213535" fg:w="198"/><text x="77.8029%" y="1055.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::try_read (205 samples, 0.07%)</title><rect x="77.5515%" y="1125" width="0.0745%" height="15" fill="rgb(240,65,29)" fg:x="213531" fg:w="205"/><text x="77.8015%" y="1135.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::try_read (205 samples, 0.07%)</title><rect x="77.5515%" y="1109" width="0.0745%" height="15" fill="rgb(249,209,20)" fg:x="213531" fg:w="205"/><text x="77.8015%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::try_read (205 samples, 0.07%)</title><rect x="77.5515%" y="1093" width="0.0745%" height="15" fill="rgb(241,48,37)" fg:x="213531" fg:w="205"/><text x="77.8015%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_update (205 samples, 0.07%)</title><rect x="77.5515%" y="1077" width="0.0745%" height="15" fill="rgb(230,140,42)" fg:x="213531" fg:w="205"/><text x="77.8015%" y="1087.50"></text></g><g><title>cfree (39 samples, 0.01%)</title><rect x="77.8057%" y="1093" width="0.0142%" height="15" fill="rgb(230,176,45)" fg:x="214231" fg:w="39"/><text x="78.0557%" y="1103.50"></text></g><g><title>[libc.so.6] (78 samples, 0.03%)</title><rect x="77.8362%" y="901" width="0.0283%" height="15" fill="rgb(245,112,21)" fg:x="214315" fg:w="78"/><text x="78.0862%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (108 samples, 0.04%)</title><rect x="77.8279%" y="997" width="0.0392%" height="15" fill="rgb(207,183,35)" fg:x="214292" fg:w="108"/><text x="78.0779%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (108 samples, 0.04%)</title><rect x="77.8279%" y="981" width="0.0392%" height="15" fill="rgb(227,44,33)" fg:x="214292" fg:w="108"/><text x="78.0779%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 samples, 0.04%)</title><rect x="77.8279%" y="965" width="0.0392%" height="15" fill="rgb(246,120,21)" fg:x="214292" fg:w="108"/><text x="78.0779%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (107 samples, 0.04%)</title><rect x="77.8282%" y="949" width="0.0389%" height="15" fill="rgb(235,57,52)" fg:x="214293" fg:w="107"/><text x="78.0782%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (107 samples, 0.04%)</title><rect x="77.8282%" y="933" width="0.0389%" height="15" fill="rgb(238,84,10)" fg:x="214293" fg:w="107"/><text x="78.0782%" y="943.50"></text></g><g><title>cfree (106 samples, 0.04%)</title><rect x="77.8286%" y="917" width="0.0385%" height="15" fill="rgb(251,200,32)" fg:x="214294" fg:w="106"/><text x="78.0786%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (93 samples, 0.03%)</title><rect x="77.8689%" y="853" width="0.0338%" height="15" fill="rgb(247,159,13)" fg:x="214405" fg:w="93"/><text x="78.1189%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (93 samples, 0.03%)</title><rect x="77.8689%" y="837" width="0.0338%" height="15" fill="rgb(238,64,4)" fg:x="214405" fg:w="93"/><text x="78.1189%" y="847.50"></text></g><g><title>cfree (91 samples, 0.03%)</title><rect x="77.8696%" y="821" width="0.0330%" height="15" fill="rgb(221,131,51)" fg:x="214407" fg:w="91"/><text x="78.1196%" y="831.50"></text></g><g><title>[libc.so.6] (53 samples, 0.02%)</title><rect x="77.8834%" y="805" width="0.0192%" height="15" fill="rgb(242,5,29)" fg:x="214445" fg:w="53"/><text x="78.1334%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (104 samples, 0.04%)</title><rect x="77.8682%" y="917" width="0.0378%" height="15" fill="rgb(214,130,32)" fg:x="214403" fg:w="104"/><text x="78.1182%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (104 samples, 0.04%)</title><rect x="77.8682%" y="901" width="0.0378%" height="15" fill="rgb(244,210,16)" fg:x="214403" fg:w="104"/><text x="78.1182%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (104 samples, 0.04%)</title><rect x="77.8682%" y="885" width="0.0378%" height="15" fill="rgb(234,48,26)" fg:x="214403" fg:w="104"/><text x="78.1182%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.04%)</title><rect x="77.8685%" y="869" width="0.0374%" height="15" fill="rgb(231,82,38)" fg:x="214404" fg:w="103"/><text x="78.1185%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (116 samples, 0.04%)</title><rect x="77.8678%" y="965" width="0.0421%" height="15" fill="rgb(254,128,41)" fg:x="214402" fg:w="116"/><text x="78.1178%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (116 samples, 0.04%)</title><rect x="77.8678%" y="949" width="0.0421%" height="15" fill="rgb(212,73,49)" fg:x="214402" fg:w="116"/><text x="78.1178%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (115 samples, 0.04%)</title><rect x="77.8682%" y="933" width="0.0418%" height="15" fill="rgb(205,62,54)" fg:x="214403" fg:w="115"/><text x="78.1182%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.01%)</title><rect x="77.9099%" y="933" width="0.0113%" height="15" fill="rgb(228,0,8)" fg:x="214518" fg:w="31"/><text x="78.1599%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.01%)</title><rect x="77.9099%" y="917" width="0.0113%" height="15" fill="rgb(251,28,17)" fg:x="214518" fg:w="31"/><text x="78.1599%" y="927.50"></text></g><g><title>cfree (30 samples, 0.01%)</title><rect x="77.9103%" y="901" width="0.0109%" height="15" fill="rgb(238,105,27)" fg:x="214519" fg:w="30"/><text x="78.1603%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (278 samples, 0.10%)</title><rect x="77.8231%" y="1045" width="0.1010%" height="15" fill="rgb(237,216,33)" fg:x="214279" fg:w="278"/><text x="78.0731%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol::proto::msg::LinkState]&gt; (269 samples, 0.10%)</title><rect x="77.8264%" y="1029" width="0.0977%" height="15" fill="rgb(229,228,25)" fg:x="214288" fg:w="269"/><text x="78.0764%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::LinkState&gt; (265 samples, 0.10%)</title><rect x="77.8279%" y="1013" width="0.0962%" height="15" fill="rgb(233,75,23)" fg:x="214292" fg:w="265"/><text x="78.0779%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt;&gt; (157 samples, 0.06%)</title><rect x="77.8671%" y="997" width="0.0570%" height="15" fill="rgb(231,207,16)" fg:x="214400" fg:w="157"/><text x="78.1171%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (155 samples, 0.06%)</title><rect x="77.8678%" y="981" width="0.0563%" height="15" fill="rgb(231,191,45)" fg:x="214402" fg:w="155"/><text x="78.1178%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (39 samples, 0.01%)</title><rect x="77.9099%" y="965" width="0.0142%" height="15" fill="rgb(224,133,17)" fg:x="214518" fg:w="39"/><text x="78.1599%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.01%)</title><rect x="77.9099%" y="949" width="0.0142%" height="15" fill="rgb(209,178,27)" fg:x="214518" fg:w="39"/><text x="78.1599%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::ZenohMessage&gt; (328 samples, 0.12%)</title><rect x="77.8057%" y="1109" width="0.1191%" height="15" fill="rgb(218,37,11)" fg:x="214231" fg:w="328"/><text x="78.0557%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::ZenohBody&gt; (288 samples, 0.10%)</title><rect x="77.8202%" y="1093" width="0.1046%" height="15" fill="rgb(251,226,25)" fg:x="214271" fg:w="288"/><text x="78.0702%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol::proto::msg::LinkStateList&gt; (280 samples, 0.10%)</title><rect x="77.8231%" y="1077" width="0.1017%" height="15" fill="rgb(209,222,27)" fg:x="214279" fg:w="280"/><text x="78.0731%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol::proto::msg::LinkState&gt;&gt; (280 samples, 0.10%)</title><rect x="77.8231%" y="1061" width="0.1017%" height="15" fill="rgb(238,22,21)" fg:x="214279" fg:w="280"/><text x="78.0731%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (415 samples, 0.15%)</title><rect x="77.9397%" y="1109" width="0.1507%" height="15" fill="rgb(233,161,25)" fg:x="214600" fg:w="415"/><text x="78.1897%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (54 samples, 0.02%)</title><rect x="78.1209%" y="1077" width="0.0196%" height="15" fill="rgb(226,122,53)" fg:x="215099" fg:w="54"/><text x="78.3709%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (52 samples, 0.02%)</title><rect x="78.1217%" y="1061" width="0.0189%" height="15" fill="rgb(220,123,17)" fg:x="215101" fg:w="52"/><text x="78.3717%" y="1071.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.02%)</title><rect x="78.1217%" y="1045" width="0.0189%" height="15" fill="rgb(230,224,35)" fg:x="215101" fg:w="52"/><text x="78.3717%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (50 samples, 0.02%)</title><rect x="78.1224%" y="1029" width="0.0182%" height="15" fill="rgb(246,83,8)" fg:x="215103" fg:w="50"/><text x="78.3724%" y="1039.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (50 samples, 0.02%)</title><rect x="78.1224%" y="1013" width="0.0182%" height="15" fill="rgb(230,214,17)" fg:x="215103" fg:w="50"/><text x="78.3724%" y="1023.50"></text></g><g><title>syscall (46 samples, 0.02%)</title><rect x="78.1239%" y="997" width="0.0167%" height="15" fill="rgb(222,97,18)" fg:x="215107" fg:w="46"/><text x="78.3739%" y="1007.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="78.1239%" y="981" width="0.0167%" height="15" fill="rgb(206,79,1)" fg:x="215107" fg:w="46"/><text x="78.3739%" y="991.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="78.1239%" y="965" width="0.0167%" height="15" fill="rgb(214,121,34)" fg:x="215107" fg:w="46"/><text x="78.3739%" y="975.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="78.1239%" y="949" width="0.0167%" height="15" fill="rgb(249,199,46)" fg:x="215107" fg:w="46"/><text x="78.3739%" y="959.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="78.1242%" y="933" width="0.0163%" height="15" fill="rgb(214,222,46)" fg:x="215108" fg:w="45"/><text x="78.3742%" y="943.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="78.1249%" y="917" width="0.0156%" height="15" fill="rgb(248,168,30)" fg:x="215110" fg:w="43"/><text x="78.3749%" y="927.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="78.1260%" y="901" width="0.0145%" height="15" fill="rgb(226,14,28)" fg:x="215113" fg:w="40"/><text x="78.3760%" y="911.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="78.1264%" y="885" width="0.0142%" height="15" fill="rgb(253,123,1)" fg:x="215114" fg:w="39"/><text x="78.3764%" y="895.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="78.1271%" y="869" width="0.0134%" height="15" fill="rgb(225,24,42)" fg:x="215116" fg:w="37"/><text x="78.3771%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (271 samples, 0.10%)</title><rect x="78.1983%" y="981" width="0.0984%" height="15" fill="rgb(216,161,37)" fg:x="215312" fg:w="271"/><text x="78.4483%" y="991.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (271 samples, 0.10%)</title><rect x="78.1983%" y="965" width="0.0984%" height="15" fill="rgb(251,164,26)" fg:x="215312" fg:w="271"/><text x="78.4483%" y="975.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (269 samples, 0.10%)</title><rect x="78.1990%" y="949" width="0.0977%" height="15" fill="rgb(219,177,3)" fg:x="215314" fg:w="269"/><text x="78.4490%" y="959.50"></text></g><g><title>parking::Unparker::unpark (267 samples, 0.10%)</title><rect x="78.1998%" y="933" width="0.0970%" height="15" fill="rgb(222,65,0)" fg:x="215316" fg:w="267"/><text x="78.4498%" y="943.50"></text></g><g><title>parking::Inner::unpark (250 samples, 0.09%)</title><rect x="78.2059%" y="917" width="0.0908%" height="15" fill="rgb(223,69,54)" fg:x="215333" fg:w="250"/><text x="78.4559%" y="927.50"></text></g><g><title>syscall (233 samples, 0.08%)</title><rect x="78.2121%" y="901" width="0.0846%" height="15" fill="rgb(235,30,27)" fg:x="215350" fg:w="233"/><text x="78.4621%" y="911.50"></text></g><g><title>[unknown] (232 samples, 0.08%)</title><rect x="78.2125%" y="885" width="0.0843%" height="15" fill="rgb(220,183,50)" fg:x="215351" fg:w="232"/><text x="78.4625%" y="895.50"></text></g><g><title>[unknown] (232 samples, 0.08%)</title><rect x="78.2125%" y="869" width="0.0843%" height="15" fill="rgb(248,198,15)" fg:x="215351" fg:w="232"/><text x="78.4625%" y="879.50"></text></g><g><title>[unknown] (229 samples, 0.08%)</title><rect x="78.2136%" y="853" width="0.0832%" height="15" fill="rgb(222,211,4)" fg:x="215354" fg:w="229"/><text x="78.4636%" y="863.50"></text></g><g><title>[unknown] (217 samples, 0.08%)</title><rect x="78.2179%" y="837" width="0.0788%" height="15" fill="rgb(214,102,34)" fg:x="215366" fg:w="217"/><text x="78.4679%" y="847.50"></text></g><g><title>[unknown] (206 samples, 0.07%)</title><rect x="78.2219%" y="821" width="0.0748%" height="15" fill="rgb(245,92,5)" fg:x="215377" fg:w="206"/><text x="78.4719%" y="831.50"></text></g><g><title>[unknown] (159 samples, 0.06%)</title><rect x="78.2390%" y="805" width="0.0577%" height="15" fill="rgb(252,72,51)" fg:x="215424" fg:w="159"/><text x="78.4890%" y="815.50"></text></g><g><title>[unknown] (122 samples, 0.04%)</title><rect x="78.2524%" y="789" width="0.0443%" height="15" fill="rgb(252,208,19)" fg:x="215461" fg:w="122"/><text x="78.5024%" y="799.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="78.2590%" y="773" width="0.0378%" height="15" fill="rgb(211,69,7)" fg:x="215479" fg:w="104"/><text x="78.5090%" y="783.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="78.2746%" y="757" width="0.0222%" height="15" fill="rgb(211,27,16)" fg:x="215522" fg:w="61"/><text x="78.5246%" y="767.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="78.2866%" y="741" width="0.0102%" height="15" fill="rgb(219,216,14)" fg:x="215555" fg:w="28"/><text x="78.5366%" y="751.50"></text></g><g><title>async_executor::State::notify (304 samples, 0.11%)</title><rect x="78.1885%" y="997" width="0.1104%" height="15" fill="rgb(219,71,8)" fg:x="215285" fg:w="304"/><text x="78.4385%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (29 samples, 0.01%)</title><rect x="78.3436%" y="965" width="0.0105%" height="15" fill="rgb(223,170,53)" fg:x="215712" fg:w="29"/><text x="78.5936%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.01%)</title><rect x="78.3436%" y="949" width="0.0105%" height="15" fill="rgb(246,21,26)" fg:x="215712" fg:w="29"/><text x="78.5936%" y="959.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (208 samples, 0.08%)</title><rect x="78.2989%" y="997" width="0.0755%" height="15" fill="rgb(248,20,46)" fg:x="215589" fg:w="208"/><text x="78.5489%" y="1007.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (176 samples, 0.06%)</title><rect x="78.3105%" y="981" width="0.0639%" height="15" fill="rgb(252,94,11)" fg:x="215621" fg:w="176"/><text x="78.5605%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (53 samples, 0.02%)</title><rect x="78.3552%" y="965" width="0.0192%" height="15" fill="rgb(236,163,8)" fg:x="215744" fg:w="53"/><text x="78.6052%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_or (53 samples, 0.02%)</title><rect x="78.3552%" y="949" width="0.0192%" height="15" fill="rgb(217,221,45)" fg:x="215744" fg:w="53"/><text x="78.6052%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (516 samples, 0.19%)</title><rect x="78.1874%" y="1013" width="0.1874%" height="15" fill="rgb(238,38,17)" fg:x="215282" fg:w="516"/><text x="78.4374%" y="1023.50"></text></g><g><title>zenoh_sync::condition::Condition::notify_one (920 samples, 0.33%)</title><rect x="78.0904%" y="1109" width="0.3341%" height="15" fill="rgb(242,210,23)" fg:x="215015" fg:w="920"/><text x="78.3404%" y="1119.50"></text></g><g><title>event_listener::Event::notify_additional_relaxed (919 samples, 0.33%)</title><rect x="78.0908%" y="1093" width="0.3338%" height="15" fill="rgb(250,86,53)" fg:x="215016" fg:w="919"/><text x="78.3408%" y="1103.50"></text></g><g><title>event_listener::List::notify_additional (759 samples, 0.28%)</title><rect x="78.1489%" y="1077" width="0.2757%" height="15" fill="rgb(223,168,25)" fg:x="215176" fg:w="759"/><text x="78.3989%" y="1087.50"></text></g><g><title>core::task::wake::Waker::wake (689 samples, 0.25%)</title><rect x="78.1743%" y="1061" width="0.2502%" height="15" fill="rgb(251,189,4)" fg:x="215246" fg:w="689"/><text x="78.4243%" y="1071.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (689 samples, 0.25%)</title><rect x="78.1743%" y="1045" width="0.2502%" height="15" fill="rgb(245,19,28)" fg:x="215246" fg:w="689"/><text x="78.4243%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (663 samples, 0.24%)</title><rect x="78.1838%" y="1029" width="0.2408%" height="15" fill="rgb(207,10,34)" fg:x="215272" fg:w="663"/><text x="78.4338%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (135 samples, 0.05%)</title><rect x="78.3755%" y="1013" width="0.0490%" height="15" fill="rgb(235,153,31)" fg:x="215800" fg:w="135"/><text x="78.6255%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (135 samples, 0.05%)</title><rect x="78.3755%" y="997" width="0.0490%" height="15" fill="rgb(228,72,37)" fg:x="215800" fg:w="135"/><text x="78.6255%" y="1007.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len (274 samples, 0.10%)</title><rect x="78.4286%" y="1093" width="0.0995%" height="15" fill="rgb(215,15,16)" fg:x="215946" fg:w="274"/><text x="78.6786%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (274 samples, 0.10%)</title><rect x="78.4286%" y="1077" width="0.0995%" height="15" fill="rgb(250,119,29)" fg:x="215946" fg:w="274"/><text x="78.6786%" y="1087.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::len::{{closure}} (264 samples, 0.10%)</title><rect x="78.4322%" y="1061" width="0.0959%" height="15" fill="rgb(214,59,1)" fg:x="215956" fg:w="264"/><text x="78.6822%" y="1071.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::slice_len (263 samples, 0.10%)</title><rect x="78.4326%" y="1045" width="0.0955%" height="15" fill="rgb(223,109,25)" fg:x="215957" fg:w="263"/><text x="78.6826%" y="1055.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::len (286 samples, 0.10%)</title><rect x="78.4246%" y="1109" width="0.1039%" height="15" fill="rgb(230,198,22)" fg:x="215935" fg:w="286"/><text x="78.6746%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (63 samples, 0.02%)</title><rect x="78.5767%" y="1013" width="0.0229%" height="15" fill="rgb(245,184,46)" fg:x="216354" fg:w="63"/><text x="78.8267%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (63 samples, 0.02%)</title><rect x="78.5767%" y="997" width="0.0229%" height="15" fill="rgb(253,73,16)" fg:x="216354" fg:w="63"/><text x="78.8267%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (63 samples, 0.02%)</title><rect x="78.5767%" y="981" width="0.0229%" height="15" fill="rgb(206,94,45)" fg:x="216354" fg:w="63"/><text x="78.8267%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.02%)</title><rect x="78.5786%" y="965" width="0.0211%" height="15" fill="rgb(236,83,27)" fg:x="216359" fg:w="58"/><text x="78.8286%" y="975.50"></text></g><g><title>[libc.so.6] (58 samples, 0.02%)</title><rect x="78.5786%" y="949" width="0.0211%" height="15" fill="rgb(220,196,8)" fg:x="216359" fg:w="58"/><text x="78.8286%" y="959.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (106 samples, 0.04%)</title><rect x="78.5713%" y="1045" width="0.0385%" height="15" fill="rgb(254,185,14)" fg:x="216339" fg:w="106"/><text x="78.8213%" y="1055.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (91 samples, 0.03%)</title><rect x="78.5767%" y="1029" width="0.0330%" height="15" fill="rgb(226,50,22)" fg:x="216354" fg:w="91"/><text x="78.8267%" y="1039.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::can_write_in_buf (28 samples, 0.01%)</title><rect x="78.5996%" y="1013" width="0.0102%" height="15" fill="rgb(253,147,0)" fg:x="216417" fg:w="28"/><text x="78.8496%" y="1023.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (116 samples, 0.04%)</title><rect x="78.5680%" y="1077" width="0.0421%" height="15" fill="rgb(252,46,33)" fg:x="216330" fg:w="116"/><text x="78.8180%" y="1087.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (116 samples, 0.04%)</title><rect x="78.5680%" y="1061" width="0.0421%" height="15" fill="rgb(242,22,54)" fg:x="216330" fg:w="116"/><text x="78.8180%" y="1071.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write_byte (35 samples, 0.01%)</title><rect x="78.6102%" y="1061" width="0.0127%" height="15" fill="rgb(223,178,32)" fg:x="216446" fg:w="35"/><text x="78.8602%" y="1071.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_deco_priority (44 samples, 0.02%)</title><rect x="78.6102%" y="1077" width="0.0160%" height="15" fill="rgb(214,106,53)" fg:x="216446" fg:w="44"/><text x="78.8602%" y="1087.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_frame_header (202 samples, 0.07%)</title><rect x="78.5637%" y="1093" width="0.0734%" height="15" fill="rgb(232,65,50)" fg:x="216318" fg:w="202"/><text x="78.8137%" y="1103.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (47 samples, 0.02%)</title><rect x="78.6835%" y="1029" width="0.0171%" height="15" fill="rgb(231,110,28)" fg:x="216648" fg:w="47"/><text x="78.9335%" y="1039.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (32 samples, 0.01%)</title><rect x="78.6890%" y="1013" width="0.0116%" height="15" fill="rgb(216,71,40)" fg:x="216663" fg:w="32"/><text x="78.9390%" y="1023.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (85 samples, 0.03%)</title><rect x="78.6701%" y="1045" width="0.0309%" height="15" fill="rgb(229,89,53)" fg:x="216611" fg:w="85"/><text x="78.9201%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_usize_as_zint (87 samples, 0.03%)</title><rect x="78.6701%" y="1061" width="0.0316%" height="15" fill="rgb(210,124,14)" fg:x="216611" fg:w="87"/><text x="78.9201%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (186 samples, 0.07%)</title><rect x="78.7816%" y="837" width="0.0676%" height="15" fill="rgb(236,213,6)" fg:x="216918" fg:w="186"/><text x="79.0316%" y="847.50"></text></g><g><title>malloc (106 samples, 0.04%)</title><rect x="78.8106%" y="821" width="0.0385%" height="15" fill="rgb(228,41,5)" fg:x="216998" fg:w="106"/><text x="79.0606%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (235 samples, 0.09%)</title><rect x="78.7718%" y="901" width="0.0853%" height="15" fill="rgb(221,167,25)" fg:x="216891" fg:w="235"/><text x="79.0218%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (235 samples, 0.09%)</title><rect x="78.7718%" y="885" width="0.0853%" height="15" fill="rgb(228,144,37)" fg:x="216891" fg:w="235"/><text x="79.0218%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (227 samples, 0.08%)</title><rect x="78.7747%" y="869" width="0.0824%" height="15" fill="rgb(227,189,38)" fg:x="216899" fg:w="227"/><text x="79.0247%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (224 samples, 0.08%)</title><rect x="78.7758%" y="853" width="0.0814%" height="15" fill="rgb(218,8,2)" fg:x="216902" fg:w="224"/><text x="79.0258%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.01%)</title><rect x="78.8571%" y="901" width="0.0116%" height="15" fill="rgb(209,61,28)" fg:x="217126" fg:w="32"/><text x="79.1071%" y="911.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="78.8571%" y="885" width="0.0116%" height="15" fill="rgb(233,140,39)" fg:x="217126" fg:w="32"/><text x="79.1071%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (295 samples, 0.11%)</title><rect x="78.7642%" y="981" width="0.1071%" height="15" fill="rgb(251,66,48)" fg:x="216870" fg:w="295"/><text x="79.0142%" y="991.50"></text></g><g><title>alloc::string::String::push_str (278 samples, 0.10%)</title><rect x="78.7703%" y="965" width="0.1010%" height="15" fill="rgb(210,44,45)" fg:x="216887" fg:w="278"/><text x="79.0203%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (278 samples, 0.10%)</title><rect x="78.7703%" y="949" width="0.1010%" height="15" fill="rgb(214,136,46)" fg:x="216887" fg:w="278"/><text x="79.0203%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (278 samples, 0.10%)</title><rect x="78.7703%" y="933" width="0.1010%" height="15" fill="rgb(207,130,50)" fg:x="216887" fg:w="278"/><text x="79.0203%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (278 samples, 0.10%)</title><rect x="78.7703%" y="917" width="0.1010%" height="15" fill="rgb(228,102,49)" fg:x="216887" fg:w="278"/><text x="79.0203%" y="927.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::fmt::Display&gt;::fmt (414 samples, 0.15%)</title><rect x="78.7351%" y="997" width="0.1504%" height="15" fill="rgb(253,55,1)" fg:x="216790" fg:w="414"/><text x="78.9851%" y="1007.50"></text></g><g><title>core::fmt::Formatter::write_str (29 samples, 0.01%)</title><rect x="78.8749%" y="981" width="0.0105%" height="15" fill="rgb(238,222,9)" fg:x="217175" fg:w="29"/><text x="79.1249%" y="991.50"></text></g><g><title>core::fmt::Formatter::new (97 samples, 0.04%)</title><rect x="78.8902%" y="997" width="0.0352%" height="15" fill="rgb(246,99,6)" fg:x="217217" fg:w="97"/><text x="79.1402%" y="1007.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (529 samples, 0.19%)</title><rect x="78.7340%" y="1013" width="0.1921%" height="15" fill="rgb(219,110,26)" fg:x="216787" fg:w="529"/><text x="78.9840%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (43 samples, 0.02%)</title><rect x="78.9465%" y="933" width="0.0156%" height="15" fill="rgb(239,160,33)" fg:x="217372" fg:w="43"/><text x="79.1965%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (43 samples, 0.02%)</title><rect x="78.9465%" y="917" width="0.0156%" height="15" fill="rgb(220,202,23)" fg:x="217372" fg:w="43"/><text x="79.1965%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (43 samples, 0.02%)</title><rect x="78.9465%" y="901" width="0.0156%" height="15" fill="rgb(208,80,26)" fg:x="217372" fg:w="43"/><text x="79.1965%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.01%)</title><rect x="78.9494%" y="885" width="0.0127%" height="15" fill="rgb(243,85,7)" fg:x="217380" fg:w="35"/><text x="79.1994%" y="895.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="78.9508%" y="869" width="0.0113%" height="15" fill="rgb(228,77,47)" fg:x="217384" fg:w="31"/><text x="79.2008%" y="879.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (82 samples, 0.03%)</title><rect x="78.9334%" y="965" width="0.0298%" height="15" fill="rgb(212,226,8)" fg:x="217336" fg:w="82"/><text x="79.1834%" y="975.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (47 samples, 0.02%)</title><rect x="78.9461%" y="949" width="0.0171%" height="15" fill="rgb(241,120,54)" fg:x="217371" fg:w="47"/><text x="79.1961%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (37 samples, 0.01%)</title><rect x="78.9908%" y="917" width="0.0134%" height="15" fill="rgb(226,80,16)" fg:x="217494" fg:w="37"/><text x="79.2408%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (37 samples, 0.01%)</title><rect x="78.9908%" y="901" width="0.0134%" height="15" fill="rgb(240,76,13)" fg:x="217494" fg:w="37"/><text x="79.2408%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (37 samples, 0.01%)</title><rect x="78.9908%" y="885" width="0.0134%" height="15" fill="rgb(252,74,8)" fg:x="217494" fg:w="37"/><text x="79.2408%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.01%)</title><rect x="78.9930%" y="869" width="0.0113%" height="15" fill="rgb(244,155,2)" fg:x="217500" fg:w="31"/><text x="79.2430%" y="879.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="78.9937%" y="853" width="0.0105%" height="15" fill="rgb(215,81,35)" fg:x="217502" fg:w="29"/><text x="79.2437%" y="863.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_string (219 samples, 0.08%)</title><rect x="78.9261%" y="1013" width="0.0795%" height="15" fill="rgb(206,55,2)" fg:x="217316" fg:w="219"/><text x="79.1761%" y="1023.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;str&gt;&gt;::write (219 samples, 0.08%)</title><rect x="78.9261%" y="997" width="0.0795%" height="15" fill="rgb(231,2,34)" fg:x="217316" fg:w="219"/><text x="79.1761%" y="1007.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,&amp;[u8]&gt;&gt;::write (218 samples, 0.08%)</title><rect x="78.9265%" y="981" width="0.0792%" height="15" fill="rgb(242,176,48)" fg:x="217317" fg:w="218"/><text x="79.1765%" y="991.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (117 samples, 0.04%)</title><rect x="78.9632%" y="965" width="0.0425%" height="15" fill="rgb(249,31,36)" fg:x="217418" fg:w="117"/><text x="79.2132%" y="975.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (87 samples, 0.03%)</title><rect x="78.9741%" y="949" width="0.0316%" height="15" fill="rgb(205,18,17)" fg:x="217448" fg:w="87"/><text x="79.2241%" y="959.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (43 samples, 0.02%)</title><rect x="78.9901%" y="933" width="0.0156%" height="15" fill="rgb(254,130,5)" fg:x="217492" fg:w="43"/><text x="79.2401%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (164 samples, 0.06%)</title><rect x="79.0097%" y="949" width="0.0596%" height="15" fill="rgb(229,42,45)" fg:x="217546" fg:w="164"/><text x="79.2597%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (164 samples, 0.06%)</title><rect x="79.0097%" y="933" width="0.0596%" height="15" fill="rgb(245,95,25)" fg:x="217546" fg:w="164"/><text x="79.2597%" y="943.50"></text></g><g><title>cfree (116 samples, 0.04%)</title><rect x="79.0271%" y="917" width="0.0421%" height="15" fill="rgb(249,193,38)" fg:x="217594" fg:w="116"/><text x="79.2771%" y="927.50"></text></g><g><title>[libc.so.6] (67 samples, 0.02%)</title><rect x="79.0449%" y="901" width="0.0243%" height="15" fill="rgb(241,140,43)" fg:x="217643" fg:w="67"/><text x="79.2949%" y="911.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locator (925 samples, 0.34%)</title><rect x="78.7340%" y="1029" width="0.3359%" height="15" fill="rgb(245,78,48)" fg:x="216787" fg:w="925"/><text x="78.9840%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (166 samples, 0.06%)</title><rect x="79.0097%" y="1013" width="0.0603%" height="15" fill="rgb(214,92,39)" fg:x="217546" fg:w="166"/><text x="79.2597%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (166 samples, 0.06%)</title><rect x="79.0097%" y="997" width="0.0603%" height="15" fill="rgb(211,189,14)" fg:x="217546" fg:w="166"/><text x="79.2597%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (166 samples, 0.06%)</title><rect x="79.0097%" y="981" width="0.0603%" height="15" fill="rgb(218,7,24)" fg:x="217546" fg:w="166"/><text x="79.2597%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.06%)</title><rect x="79.0097%" y="965" width="0.0603%" height="15" fill="rgb(224,200,49)" fg:x="217546" fg:w="166"/><text x="79.2597%" y="975.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_locators (964 samples, 0.35%)</title><rect x="78.7326%" y="1045" width="0.3501%" height="15" fill="rgb(218,210,14)" fg:x="216783" fg:w="964"/><text x="78.9826%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_usize_as_zint (35 samples, 0.01%)</title><rect x="79.0700%" y="1029" width="0.0127%" height="15" fill="rgb(234,142,31)" fg:x="217712" fg:w="35"/><text x="79.3200%" y="1039.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (35 samples, 0.01%)</title><rect x="79.0700%" y="1013" width="0.0127%" height="15" fill="rgb(227,165,2)" fg:x="217712" fg:w="35"/><text x="79.3200%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (82 samples, 0.03%)</title><rect x="79.0983%" y="981" width="0.0298%" height="15" fill="rgb(232,44,46)" fg:x="217790" fg:w="82"/><text x="79.3483%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (82 samples, 0.03%)</title><rect x="79.0983%" y="965" width="0.0298%" height="15" fill="rgb(236,149,47)" fg:x="217790" fg:w="82"/><text x="79.3483%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (82 samples, 0.03%)</title><rect x="79.0983%" y="949" width="0.0298%" height="15" fill="rgb(227,45,31)" fg:x="217790" fg:w="82"/><text x="79.3483%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (80 samples, 0.03%)</title><rect x="79.0990%" y="933" width="0.0291%" height="15" fill="rgb(240,176,51)" fg:x="217792" fg:w="80"/><text x="79.3490%" y="943.50"></text></g><g><title>[libc.so.6] (78 samples, 0.03%)</title><rect x="79.0997%" y="917" width="0.0283%" height="15" fill="rgb(249,146,41)" fg:x="217794" fg:w="78"/><text x="79.3497%" y="927.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,usize&gt;&gt;::write (119 samples, 0.04%)</title><rect x="79.0852%" y="1029" width="0.0432%" height="15" fill="rgb(213,208,4)" fg:x="217754" fg:w="119"/><text x="79.3352%" y="1039.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (113 samples, 0.04%)</title><rect x="79.0874%" y="1013" width="0.0410%" height="15" fill="rgb(245,84,36)" fg:x="217760" fg:w="113"/><text x="79.3374%" y="1023.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (85 samples, 0.03%)</title><rect x="79.0976%" y="997" width="0.0309%" height="15" fill="rgb(254,84,18)" fg:x="217788" fg:w="85"/><text x="79.3476%" y="1007.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_usize_as_zint (121 samples, 0.04%)</title><rect x="79.0852%" y="1045" width="0.0439%" height="15" fill="rgb(225,38,54)" fg:x="217754" fg:w="121"/><text x="79.3352%" y="1055.50"></text></g><g><title>[libc.so.6] (261 samples, 0.09%)</title><rect x="79.4480%" y="917" width="0.0948%" height="15" fill="rgb(246,50,30)" fg:x="218753" fg:w="261"/><text x="79.6980%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (325 samples, 0.12%)</title><rect x="79.4251%" y="981" width="0.1180%" height="15" fill="rgb(246,148,9)" fg:x="218690" fg:w="325"/><text x="79.6751%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (325 samples, 0.12%)</title><rect x="79.4251%" y="965" width="0.1180%" height="15" fill="rgb(223,75,4)" fg:x="218690" fg:w="325"/><text x="79.6751%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (325 samples, 0.12%)</title><rect x="79.4251%" y="949" width="0.1180%" height="15" fill="rgb(239,148,41)" fg:x="218690" fg:w="325"/><text x="79.6751%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (292 samples, 0.11%)</title><rect x="79.4371%" y="933" width="0.1061%" height="15" fill="rgb(205,195,3)" fg:x="218723" fg:w="292"/><text x="79.6871%" y="943.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_buffers::traits::buffer::CopyBuffer&gt;::write (953 samples, 0.35%)</title><rect x="79.2308%" y="1013" width="0.3461%" height="15" fill="rgb(254,161,1)" fg:x="218155" fg:w="953"/><text x="79.4808%" y="1023.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::write_bytes (445 samples, 0.16%)</title><rect x="79.4153%" y="997" width="0.1616%" height="15" fill="rgb(211,229,8)" fg:x="218663" fg:w="445"/><text x="79.6653%" y="1007.50"></text></g><g><title>zenoh_buffers::wbuf::WBuf::can_write_in_buf (93 samples, 0.03%)</title><rect x="79.5432%" y="981" width="0.0338%" height="15" fill="rgb(220,97,9)" fg:x="219015" fg:w="93"/><text x="79.7932%" y="991.50"></text></g><g><title>&lt;zenoh_protocol::io::codec::ZenohCodec as zenoh_protocol::io::codec::Encoder&lt;W,u64&gt;&gt;::write (1,215 samples, 0.44%)</title><rect x="79.1408%" y="1029" width="0.4413%" height="15" fill="rgb(240,218,8)" fg:x="217907" fg:w="1215"/><text x="79.3908%" y="1039.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::io::codec::WBufCodec&gt;::write_zint (1,267 samples, 0.46%)</title><rect x="79.1292%" y="1045" width="0.4602%" height="15" fill="rgb(250,44,0)" fg:x="217875" fg:w="1267"/><text x="79.3792%" y="1055.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state_list (2,588 samples, 0.94%)</title><rect x="78.6614%" y="1077" width="0.9399%" height="15" fill="rgb(236,41,53)" fg:x="216587" fg:w="2588"/><text x="78.9114%" y="1087.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_link_state (2,477 samples, 0.90%)</title><rect x="78.7017%" y="1061" width="0.8996%" height="15" fill="rgb(218,227,13)" fg:x="216698" fg:w="2477"/><text x="78.9517%" y="1071.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBuf as zenoh_protocol::proto::msg_writer::MessageWriter&gt;::write_zenoh_message (2,669 samples, 0.97%)</title><rect x="78.6370%" y="1093" width="0.9693%" height="15" fill="rgb(217,94,32)" fg:x="216520" fg:w="2669"/><text x="78.8870%" y="1103.50"></text></g><g><title>&lt;zenoh_buffers::wbuf::WBufWriter as zenoh_buffers::traits::writer::BacktrackableWriter&gt;::mark (55 samples, 0.02%)</title><rect x="79.6118%" y="1093" width="0.0200%" height="15" fill="rgb(213,217,12)" fg:x="219204" fg:w="55"/><text x="79.8618%" y="1103.50"></text></g><g><title>zenoh_transport::common::batch::SerializationBatch::serialize_zenoh_message (3,055 samples, 1.11%)</title><rect x="78.5284%" y="1109" width="1.1095%" height="15" fill="rgb(229,13,46)" fg:x="216221" fg:w="3055"/><text x="78.7784%" y="1119.50"></text></g><g><title>zenoh_transport::unicast::TransportUnicast::handle_message (6,862 samples, 2.49%)</title><rect x="77.1625%" y="1205" width="2.4922%" height="15" fill="rgb(243,139,5)" fg:x="212460" fg:w="6862"/><text x="77.4125%" y="1215.50">ze..</text></g><g><title>zenoh_transport::unicast::TransportUnicast::schedule (6,821 samples, 2.48%)</title><rect x="77.1774%" y="1189" width="2.4773%" height="15" fill="rgb(249,38,45)" fg:x="212501" fg:w="6821"/><text x="77.4274%" y="1199.50">ze..</text></g><g><title>zenoh_transport::unicast::transport::TransportUnicastInner::schedule (6,474 samples, 2.35%)</title><rect x="77.3034%" y="1173" width="2.3513%" height="15" fill="rgb(216,70,11)" fg:x="212848" fg:w="6474"/><text x="77.5534%" y="1183.50">z..</text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_first_fit (6,385 samples, 2.32%)</title><rect x="77.3357%" y="1157" width="2.3189%" height="15" fill="rgb(253,101,25)" fg:x="212937" fg:w="6385"/><text x="77.5857%" y="1167.50">z..</text></g><g><title>zenoh_transport::unicast::tx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::schedule_on_link (6,299 samples, 2.29%)</title><rect x="77.3670%" y="1141" width="2.2877%" height="15" fill="rgb(207,197,30)" fg:x="213023" fg:w="6299"/><text x="77.6170%" y="1151.50">z..</text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::push_zenoh_message (5,586 samples, 2.03%)</title><rect x="77.6259%" y="1125" width="2.0288%" height="15" fill="rgb(238,87,13)" fg:x="213736" fg:w="5586"/><text x="77.8759%" y="1135.50">z..</text></g><g><title>zenoh::net::routing::network::Network::send_on_link (12,570 samples, 4.57%)</title><rect x="75.0898%" y="1221" width="4.5652%" height="15" fill="rgb(215,155,8)" fg:x="206753" fg:w="12570"/><text x="75.3398%" y="1231.50">zenoh..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (46 samples, 0.02%)</title><rect x="79.6957%" y="1173" width="0.0167%" height="15" fill="rgb(239,166,38)" fg:x="219435" fg:w="46"/><text x="79.9457%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (65 samples, 0.02%)</title><rect x="79.6921%" y="1205" width="0.0236%" height="15" fill="rgb(240,194,35)" fg:x="219425" fg:w="65"/><text x="79.9421%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (55 samples, 0.02%)</title><rect x="79.6957%" y="1189" width="0.0200%" height="15" fill="rgb(219,10,44)" fg:x="219435" fg:w="55"/><text x="79.9457%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::update_edge (218 samples, 0.08%)</title><rect x="79.6550%" y="1221" width="0.0792%" height="15" fill="rgb(251,220,35)" fg:x="219323" fg:w="218"/><text x="79.9050%" y="1231.50"></text></g><g><title>[libc.so.6] (116 samples, 0.04%)</title><rect x="79.7342%" y="1205" width="0.0421%" height="15" fill="rgb(218,117,13)" fg:x="219541" fg:w="116"/><text x="79.9842%" y="1215.50"></text></g><g><title>[libc.so.6] (62 samples, 0.02%)</title><rect x="79.7774%" y="1173" width="0.0225%" height="15" fill="rgb(221,213,40)" fg:x="219660" fg:w="62"/><text x="80.0274%" y="1183.50"></text></g><g><title>[libc.so.6] (96 samples, 0.03%)</title><rect x="79.8105%" y="1141" width="0.0349%" height="15" fill="rgb(251,224,35)" fg:x="219751" fg:w="96"/><text x="80.0605%" y="1151.50"></text></g><g><title>async_global_executor::executor::spawn (33 samples, 0.01%)</title><rect x="79.8501%" y="1141" width="0.0120%" height="15" fill="rgb(241,33,39)" fg:x="219860" fg:w="33"/><text x="80.1001%" y="1151.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="79.8628%" y="1125" width="0.0113%" height="15" fill="rgb(222,74,17)" fg:x="219895" fg:w="31"/><text x="80.1128%" y="1135.50"></text></g><g><title>async_std::task::task::Task::new (32 samples, 0.01%)</title><rect x="79.8740%" y="1125" width="0.0116%" height="15" fill="rgb(225,103,0)" fg:x="219926" fg:w="32"/><text x="80.1240%" y="1135.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (32 samples, 0.01%)</title><rect x="79.8740%" y="1109" width="0.0116%" height="15" fill="rgb(240,0,12)" fg:x="219926" fg:w="32"/><text x="80.1240%" y="1119.50"></text></g><g><title>async_std::task::builder::Builder::build (72 samples, 0.03%)</title><rect x="79.8621%" y="1141" width="0.0261%" height="15" fill="rgb(233,213,37)" fg:x="219893" fg:w="72"/><text x="80.1121%" y="1151.50"></text></g><g><title>async_std::task::spawn::spawn (249 samples, 0.09%)</title><rect x="79.8000%" y="1173" width="0.0904%" height="15" fill="rgb(225,84,52)" fg:x="219722" fg:w="249"/><text x="80.0500%" y="1183.50"></text></g><g><title>async_std::task::builder::Builder::spawn (226 samples, 0.08%)</title><rect x="79.8083%" y="1157" width="0.0821%" height="15" fill="rgb(247,160,51)" fg:x="219745" fg:w="226"/><text x="80.0583%" y="1167.50"></text></g><g><title>stop_token::future::FutureExt::timeout_at (44 samples, 0.02%)</title><rect x="79.8904%" y="1173" width="0.0160%" height="15" fill="rgb(244,60,51)" fg:x="219971" fg:w="44"/><text x="80.1404%" y="1183.50"></text></g><g><title>[libc.so.6] (42 samples, 0.02%)</title><rect x="79.8911%" y="1157" width="0.0153%" height="15" fill="rgb(233,114,7)" fg:x="219973" fg:w="42"/><text x="80.1411%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (385 samples, 0.14%)</title><rect x="79.7764%" y="1205" width="0.1398%" height="15" fill="rgb(246,136,16)" fg:x="219657" fg:w="385"/><text x="80.0264%" y="1215.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn::{{closure}} (383 samples, 0.14%)</title><rect x="79.7771%" y="1189" width="0.1391%" height="15" fill="rgb(243,114,45)" fg:x="219659" fg:w="383"/><text x="80.0271%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (141,570 samples, 51.42%)</title><rect x="28.5039%" y="1237" width="51.4162%" height="15" fill="rgb(247,183,43)" fg:x="78483" fg:w="141570"/><text x="28.7539%" y="1247.50">zenoh::net::routing::network::Network::link_states</text></g><g><title>zenoh::net::runtime::Runtime::spawn (512 samples, 0.19%)</title><rect x="79.7342%" y="1221" width="0.1860%" height="15" fill="rgb(251,210,42)" fg:x="219541" fg:w="512"/><text x="79.9842%" y="1231.50"></text></g><g><title>[libc.so.6] (55 samples, 0.02%)</title><rect x="79.9274%" y="981" width="0.0200%" height="15" fill="rgb(221,88,35)" fg:x="220073" fg:w="55"/><text x="80.1774%" y="991.50"></text></g><g><title>recvmsg (226 samples, 0.08%)</title><rect x="79.9569%" y="981" width="0.0821%" height="15" fill="rgb(242,21,20)" fg:x="220154" fg:w="226"/><text x="80.2069%" y="991.50"></text></g><g><title>[unknown] (219 samples, 0.08%)</title><rect x="79.9594%" y="965" width="0.0795%" height="15" fill="rgb(233,226,36)" fg:x="220161" fg:w="219"/><text x="80.2094%" y="975.50"></text></g><g><title>[unknown] (213 samples, 0.08%)</title><rect x="79.9616%" y="949" width="0.0774%" height="15" fill="rgb(243,189,34)" fg:x="220167" fg:w="213"/><text x="80.2116%" y="959.50"></text></g><g><title>[unknown] (212 samples, 0.08%)</title><rect x="79.9619%" y="933" width="0.0770%" height="15" fill="rgb(207,145,50)" fg:x="220168" fg:w="212"/><text x="80.2119%" y="943.50"></text></g><g><title>[unknown] (206 samples, 0.07%)</title><rect x="79.9641%" y="917" width="0.0748%" height="15" fill="rgb(242,1,50)" fg:x="220174" fg:w="206"/><text x="80.2141%" y="927.50"></text></g><g><title>[unknown] (187 samples, 0.07%)</title><rect x="79.9710%" y="901" width="0.0679%" height="15" fill="rgb(231,65,32)" fg:x="220193" fg:w="187"/><text x="80.2210%" y="911.50"></text></g><g><title>[unknown] (143 samples, 0.05%)</title><rect x="79.9870%" y="885" width="0.0519%" height="15" fill="rgb(208,68,49)" fg:x="220237" fg:w="143"/><text x="80.2370%" y="895.50"></text></g><g><title>[unknown] (124 samples, 0.05%)</title><rect x="79.9939%" y="869" width="0.0450%" height="15" fill="rgb(253,54,49)" fg:x="220256" fg:w="124"/><text x="80.2439%" y="879.50"></text></g><g><title>[unknown] (106 samples, 0.04%)</title><rect x="80.0004%" y="853" width="0.0385%" height="15" fill="rgb(245,186,24)" fg:x="220274" fg:w="106"/><text x="80.2504%" y="863.50"></text></g><g><title>[unknown] (69 samples, 0.03%)</title><rect x="80.0139%" y="837" width="0.0251%" height="15" fill="rgb(209,2,41)" fg:x="220311" fg:w="69"/><text x="80.2639%" y="847.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="80.0269%" y="821" width="0.0120%" height="15" fill="rgb(242,208,54)" fg:x="220347" fg:w="33"/><text x="80.2769%" y="831.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (409 samples, 0.15%)</title><rect x="79.9202%" y="1237" width="0.1485%" height="15" fill="rgb(225,9,51)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1247.50"></text></g><g><title>zenoh::net::routing::network::Network::add_link (409 samples, 0.15%)</title><rect x="79.9202%" y="1221" width="0.1485%" height="15" fill="rgb(207,207,25)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1231.50"></text></g><g><title>zenoh::net::routing::network::Network::send_on_links (409 samples, 0.15%)</title><rect x="79.9202%" y="1205" width="0.1485%" height="15" fill="rgb(253,96,18)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1215.50"></text></g><g><title>zenoh::net::routing::network::Network::make_msg (409 samples, 0.15%)</title><rect x="79.9202%" y="1189" width="0.1485%" height="15" fill="rgb(252,215,20)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::make_link_state (409 samples, 0.15%)</title><rect x="79.9202%" y="1173" width="0.1485%" height="15" fill="rgb(245,227,26)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1183.50"></text></g><g><title>zenoh::net::routing::network::Network::get_locators (409 samples, 0.15%)</title><rect x="79.9202%" y="1157" width="0.1485%" height="15" fill="rgb(241,208,0)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (409 samples, 0.15%)</title><rect x="79.9202%" y="1141" width="0.1485%" height="15" fill="rgb(224,130,10)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1151.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (409 samples, 0.15%)</title><rect x="79.9202%" y="1125" width="0.1485%" height="15" fill="rgb(237,29,0)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1135.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (409 samples, 0.15%)</title><rect x="79.9202%" y="1109" width="0.1485%" height="15" fill="rgb(219,27,41)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1119.50"></text></g><g><title>zenoh_util::net::get_local_addresses (409 samples, 0.15%)</title><rect x="79.9202%" y="1093" width="0.1485%" height="15" fill="rgb(245,101,19)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1103.50"></text></g><g><title>pnet_datalink::interfaces (409 samples, 0.15%)</title><rect x="79.9202%" y="1077" width="0.1485%" height="15" fill="rgb(243,44,37)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces (409 samples, 0.15%)</title><rect x="79.9202%" y="1061" width="0.1485%" height="15" fill="rgb(228,213,43)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1071.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (409 samples, 0.15%)</title><rect x="79.9202%" y="1045" width="0.1485%" height="15" fill="rgb(219,163,21)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1055.50"></text></g><g><title>getifaddrs (409 samples, 0.15%)</title><rect x="79.9202%" y="1029" width="0.1485%" height="15" fill="rgb(234,86,24)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1039.50"></text></g><g><title>[libc.so.6] (409 samples, 0.15%)</title><rect x="79.9202%" y="1013" width="0.1485%" height="15" fill="rgb(225,10,24)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1023.50"></text></g><g><title>[libc.so.6] (409 samples, 0.15%)</title><rect x="79.9202%" y="997" width="0.1485%" height="15" fill="rgb(218,109,7)" fg:x="220053" fg:w="409"/><text x="80.1702%" y="1007.50"></text></g><g><title>sendto (82 samples, 0.03%)</title><rect x="80.0389%" y="981" width="0.0298%" height="15" fill="rgb(210,20,26)" fg:x="220380" fg:w="82"/><text x="80.2889%" y="991.50"></text></g><g><title>[unknown] (79 samples, 0.03%)</title><rect x="80.0400%" y="965" width="0.0287%" height="15" fill="rgb(216,18,1)" fg:x="220383" fg:w="79"/><text x="80.2900%" y="975.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="80.0404%" y="949" width="0.0283%" height="15" fill="rgb(206,163,23)" fg:x="220384" fg:w="78"/><text x="80.2904%" y="959.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="80.0404%" y="933" width="0.0283%" height="15" fill="rgb(229,150,31)" fg:x="220384" fg:w="78"/><text x="80.2904%" y="943.50"></text></g><g><title>[unknown] (77 samples, 0.03%)</title><rect x="80.0407%" y="917" width="0.0280%" height="15" fill="rgb(231,10,5)" fg:x="220385" fg:w="77"/><text x="80.2907%" y="927.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="80.0422%" y="901" width="0.0265%" height="15" fill="rgb(250,40,50)" fg:x="220389" fg:w="73"/><text x="80.2922%" y="911.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="80.0429%" y="885" width="0.0258%" height="15" fill="rgb(217,119,7)" fg:x="220391" fg:w="71"/><text x="80.2929%" y="895.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="80.0553%" y="869" width="0.0134%" height="15" fill="rgb(245,214,40)" fg:x="220425" fg:w="37"/><text x="80.3053%" y="879.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="80.0571%" y="853" width="0.0116%" height="15" fill="rgb(216,187,1)" fg:x="220430" fg:w="32"/><text x="80.3071%" y="863.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn (56 samples, 0.02%)</title><rect x="80.0687%" y="1237" width="0.0203%" height="15" fill="rgb(237,146,21)" fg:x="220462" fg:w="56"/><text x="80.3187%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (56 samples, 0.02%)</title><rect x="80.0687%" y="1221" width="0.0203%" height="15" fill="rgb(210,174,47)" fg:x="220462" fg:w="56"/><text x="80.3187%" y="1231.50"></text></g><g><title>zenoh::net::runtime::Runtime::spawn::{{closure}} (56 samples, 0.02%)</title><rect x="80.0687%" y="1205" width="0.0203%" height="15" fill="rgb(218,111,39)" fg:x="220462" fg:w="56"/><text x="80.3187%" y="1215.50"></text></g><g><title>async_std::task::spawn::spawn (56 samples, 0.02%)</title><rect x="80.0687%" y="1189" width="0.0203%" height="15" fill="rgb(224,95,19)" fg:x="220462" fg:w="56"/><text x="80.3187%" y="1199.50"></text></g><g><title>async_std::task::builder::Builder::spawn (56 samples, 0.02%)</title><rect x="80.0687%" y="1173" width="0.0203%" height="15" fill="rgb(234,15,38)" fg:x="220462" fg:w="56"/><text x="80.3187%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.02%)</title><rect x="80.0891%" y="1045" width="0.0160%" height="15" fill="rgb(246,56,12)" fg:x="220518" fg:w="44"/><text x="80.3391%" y="1055.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::bind::{{closure}} (44 samples, 0.02%)</title><rect x="80.0891%" y="1029" width="0.0160%" height="15" fill="rgb(247,16,17)" fg:x="220518" fg:w="44"/><text x="80.3391%" y="1039.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::bind (44 samples, 0.02%)</title><rect x="80.0891%" y="1013" width="0.0160%" height="15" fill="rgb(215,151,11)" fg:x="220518" fg:w="44"/><text x="80.3391%" y="1023.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (44 samples, 0.02%)</title><rect x="80.0891%" y="997" width="0.0160%" height="15" fill="rgb(225,16,24)" fg:x="220518" fg:w="44"/><text x="80.3391%" y="1007.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (44 samples, 0.02%)</title><rect x="80.0891%" y="981" width="0.0160%" height="15" fill="rgb(217,117,5)" fg:x="220518" fg:w="44"/><text x="80.3391%" y="991.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="80.1236%" y="949" width="0.0102%" height="15" fill="rgb(246,187,53)" fg:x="220613" fg:w="28"/><text x="80.3736%" y="959.50"></text></g><g><title>async_task::runnable::spawn_unchecked (42 samples, 0.02%)</title><rect x="80.1192%" y="981" width="0.0153%" height="15" fill="rgb(241,71,40)" fg:x="220601" fg:w="42"/><text x="80.3692%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (30 samples, 0.01%)</title><rect x="80.1236%" y="965" width="0.0109%" height="15" fill="rgb(231,67,39)" fg:x="220613" fg:w="30"/><text x="80.3736%" y="975.50"></text></g><g><title>async_executor::Executor::spawn (112 samples, 0.04%)</title><rect x="80.1094%" y="997" width="0.0407%" height="15" fill="rgb(222,120,24)" fg:x="220574" fg:w="112"/><text x="80.3594%" y="1007.50"></text></g><g><title>async_global_executor::executor::spawn (113 samples, 0.04%)</title><rect x="80.1094%" y="1013" width="0.0410%" height="15" fill="rgb(248,3,3)" fg:x="220574" fg:w="113"/><text x="80.3594%" y="1023.50"></text></g><g><title>async_std::task::spawn::spawn (117 samples, 0.04%)</title><rect x="80.1090%" y="1045" width="0.0425%" height="15" fill="rgb(228,218,5)" fg:x="220573" fg:w="117"/><text x="80.3590%" y="1055.50"></text></g><g><title>async_std::task::builder::Builder::spawn (117 samples, 0.04%)</title><rect x="80.1090%" y="1029" width="0.0425%" height="15" fill="rgb(212,202,43)" fg:x="220573" fg:w="117"/><text x="80.3590%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 0.06%)</title><rect x="80.0891%" y="1157" width="0.0628%" height="15" fill="rgb(235,183,2)" fg:x="220518" fg:w="173"/><text x="80.3391%" y="1167.50"></text></g><g><title>zenoh_transport::manager::TransportManager::add_listener::{{closure}} (173 samples, 0.06%)</title><rect x="80.0891%" y="1141" width="0.0628%" height="15" fill="rgb(230,165,10)" fg:x="220518" fg:w="173"/><text x="80.3391%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 0.06%)</title><rect x="80.0891%" y="1125" width="0.0628%" height="15" fill="rgb(219,54,40)" fg:x="220518" fg:w="173"/><text x="80.3391%" y="1135.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::add_listener_unicast::{{closure}} (173 samples, 0.06%)</title><rect x="80.0891%" y="1109" width="0.0628%" height="15" fill="rgb(244,73,9)" fg:x="220518" fg:w="173"/><text x="80.3391%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (173 samples, 0.06%)</title><rect x="80.0891%" y="1093" width="0.0628%" height="15" fill="rgb(212,32,45)" fg:x="220518" fg:w="173"/><text x="80.3391%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 0.06%)</title><rect x="80.0891%" y="1077" width="0.0628%" height="15" fill="rgb(205,58,31)" fg:x="220518" fg:w="173"/><text x="80.3391%" y="1087.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}} (173 samples, 0.06%)</title><rect x="80.0891%" y="1061" width="0.0628%" height="15" fill="rgb(250,120,43)" fg:x="220518" fg:w="173"/><text x="80.3391%" y="1071.50"></text></g><g><title>recvmsg (86 samples, 0.03%)</title><rect x="80.1657%" y="997" width="0.0312%" height="15" fill="rgb(235,13,10)" fg:x="220729" fg:w="86"/><text x="80.4157%" y="1007.50"></text></g><g><title>[unknown] (84 samples, 0.03%)</title><rect x="80.1664%" y="981" width="0.0305%" height="15" fill="rgb(232,219,31)" fg:x="220731" fg:w="84"/><text x="80.4164%" y="991.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="80.1668%" y="965" width="0.0301%" height="15" fill="rgb(218,157,51)" fg:x="220732" fg:w="83"/><text x="80.4168%" y="975.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="80.1668%" y="949" width="0.0301%" height="15" fill="rgb(211,91,52)" fg:x="220732" fg:w="83"/><text x="80.4168%" y="959.50"></text></g><g><title>[unknown] (80 samples, 0.03%)</title><rect x="80.1679%" y="933" width="0.0291%" height="15" fill="rgb(240,173,1)" fg:x="220735" fg:w="80"/><text x="80.4179%" y="943.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="80.1697%" y="917" width="0.0272%" height="15" fill="rgb(248,20,47)" fg:x="220740" fg:w="75"/><text x="80.4197%" y="927.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="80.1755%" y="901" width="0.0214%" height="15" fill="rgb(217,221,40)" fg:x="220756" fg:w="59"/><text x="80.4255%" y="911.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="80.1766%" y="885" width="0.0203%" height="15" fill="rgb(226,149,51)" fg:x="220759" fg:w="56"/><text x="80.4266%" y="895.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="80.1798%" y="869" width="0.0171%" height="15" fill="rgb(252,193,7)" fg:x="220768" fg:w="47"/><text x="80.4298%" y="879.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start::{{closure}} (322 samples, 0.12%)</title><rect x="80.0891%" y="1237" width="0.1169%" height="15" fill="rgb(205,123,0)" fg:x="220518" fg:w="322"/><text x="80.3391%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (322 samples, 0.12%)</title><rect x="80.0891%" y="1221" width="0.1169%" height="15" fill="rgb(233,173,25)" fg:x="220518" fg:w="322"/><text x="80.3391%" y="1231.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::start_peer::{{closure}} (322 samples, 0.12%)</title><rect x="80.0891%" y="1205" width="0.1169%" height="15" fill="rgb(216,63,32)" fg:x="220518" fg:w="322"/><text x="80.3391%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (322 samples, 0.12%)</title><rect x="80.0891%" y="1189" width="0.1169%" height="15" fill="rgb(209,56,45)" fg:x="220518" fg:w="322"/><text x="80.3391%" y="1199.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::bind_listeners::{{closure}} (322 samples, 0.12%)</title><rect x="80.0891%" y="1173" width="0.1169%" height="15" fill="rgb(226,111,49)" fg:x="220518" fg:w="322"/><text x="80.3391%" y="1183.50"></text></g><g><title>zenoh_transport::manager::TransportManager::get_locators (149 samples, 0.05%)</title><rect x="80.1519%" y="1157" width="0.0541%" height="15" fill="rgb(244,181,21)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1167.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_locators_unicast (149 samples, 0.05%)</title><rect x="80.1519%" y="1141" width="0.0541%" height="15" fill="rgb(222,126,15)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1151.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::get_locators (149 samples, 0.05%)</title><rect x="80.1519%" y="1125" width="0.0541%" height="15" fill="rgb(222,95,17)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1135.50"></text></g><g><title>zenoh_util::net::get_local_addresses (149 samples, 0.05%)</title><rect x="80.1519%" y="1109" width="0.0541%" height="15" fill="rgb(254,46,5)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1119.50"></text></g><g><title>pnet_datalink::interfaces (149 samples, 0.05%)</title><rect x="80.1519%" y="1093" width="0.0541%" height="15" fill="rgb(236,216,35)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1103.50"></text></g><g><title>pnet_datalink::backend::interfaces (149 samples, 0.05%)</title><rect x="80.1519%" y="1077" width="0.0541%" height="15" fill="rgb(217,187,26)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1087.50"></text></g><g><title>pnet_datalink::backend::interfaces::interfaces::interfaces (149 samples, 0.05%)</title><rect x="80.1519%" y="1061" width="0.0541%" height="15" fill="rgb(207,192,25)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1071.50"></text></g><g><title>getifaddrs (149 samples, 0.05%)</title><rect x="80.1519%" y="1045" width="0.0541%" height="15" fill="rgb(253,135,27)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1055.50"></text></g><g><title>[libc.so.6] (149 samples, 0.05%)</title><rect x="80.1519%" y="1029" width="0.0541%" height="15" fill="rgb(211,122,29)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1039.50"></text></g><g><title>[libc.so.6] (149 samples, 0.05%)</title><rect x="80.1519%" y="1013" width="0.0541%" height="15" fill="rgb(233,162,40)" fg:x="220691" fg:w="149"/><text x="80.4019%" y="1023.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (92 samples, 0.03%)</title><rect x="80.2274%" y="1045" width="0.0334%" height="15" fill="rgb(222,184,47)" fg:x="220899" fg:w="92"/><text x="80.4774%" y="1055.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (47 samples, 0.02%)</title><rect x="80.2438%" y="1029" width="0.0171%" height="15" fill="rgb(249,99,23)" fg:x="220944" fg:w="47"/><text x="80.4938%" y="1039.50"></text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (177 samples, 0.06%)</title><rect x="80.2075%" y="1141" width="0.0643%" height="15" fill="rgb(214,60,12)" fg:x="220844" fg:w="177"/><text x="80.4575%" y="1151.50"></text></g><g><title>num_bigint_dig::prime::probably_prime (177 samples, 0.06%)</title><rect x="80.2075%" y="1125" width="0.0643%" height="15" fill="rgb(250,229,36)" fg:x="220844" fg:w="177"/><text x="80.4575%" y="1135.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (176 samples, 0.06%)</title><rect x="80.2078%" y="1109" width="0.0639%" height="15" fill="rgb(232,195,10)" fg:x="220845" fg:w="176"/><text x="80.4578%" y="1119.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (176 samples, 0.06%)</title><rect x="80.2078%" y="1093" width="0.0639%" height="15" fill="rgb(205,213,31)" fg:x="220845" fg:w="176"/><text x="80.4578%" y="1103.50"></text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (176 samples, 0.06%)</title><rect x="80.2078%" y="1077" width="0.0639%" height="15" fill="rgb(237,43,8)" fg:x="220845" fg:w="176"/><text x="80.4578%" y="1087.50"></text></g><g><title>num_bigint_dig::biguint::monty::montgomery (168 samples, 0.06%)</title><rect x="80.2107%" y="1061" width="0.0610%" height="15" fill="rgb(216,208,3)" fg:x="220853" fg:w="168"/><text x="80.4607%" y="1071.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::build (178 samples, 0.06%)</title><rect x="80.2075%" y="1237" width="0.0646%" height="15" fill="rgb(228,179,44)" fg:x="220844" fg:w="178"/><text x="80.4575%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::manager::TransportManagerBuilderUnicast::build (178 samples, 0.06%)</title><rect x="80.2075%" y="1221" width="0.0646%" height="15" fill="rgb(230,192,27)" fg:x="220844" fg:w="178"/><text x="80.4575%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::establishment::authenticator::pubkey::PubKeyAuthenticator::make (178 samples, 0.06%)</title><rect x="80.2075%" y="1205" width="0.0646%" height="15" fill="rgb(251,30,38)" fg:x="220844" fg:w="178"/><text x="80.4575%" y="1215.50"></text></g><g><title>rsa::key::RsaPrivateKey::new (178 samples, 0.06%)</title><rect x="80.2075%" y="1189" width="0.0646%" height="15" fill="rgb(246,55,52)" fg:x="220844" fg:w="178"/><text x="80.4575%" y="1199.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key (178 samples, 0.06%)</title><rect x="80.2075%" y="1173" width="0.0646%" height="15" fill="rgb(249,79,26)" fg:x="220844" fg:w="178"/><text x="80.4575%" y="1183.50"></text></g><g><title>rsa::algorithms::generate_multi_prime_key_with_exp (178 samples, 0.06%)</title><rect x="80.2075%" y="1157" width="0.0646%" height="15" fill="rgb(220,202,16)" fg:x="220844" fg:w="178"/><text x="80.4575%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (54 samples, 0.02%)</title><rect x="80.2844%" y="853" width="0.0196%" height="15" fill="rgb(250,170,23)" fg:x="221056" fg:w="54"/><text x="80.5344%" y="863.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (33 samples, 0.01%)</title><rect x="80.2921%" y="837" width="0.0120%" height="15" fill="rgb(230,7,37)" fg:x="221077" fg:w="33"/><text x="80.5421%" y="847.50"></text></g><g><title>async_executor::Runner::new (63 samples, 0.02%)</title><rect x="80.2823%" y="869" width="0.0229%" height="15" fill="rgb(213,71,1)" fg:x="221050" fg:w="63"/><text x="80.5323%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (80 samples, 0.03%)</title><rect x="80.2805%" y="901" width="0.0291%" height="15" fill="rgb(227,87,39)" fg:x="221045" fg:w="80"/><text x="80.5305%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (80 samples, 0.03%)</title><rect x="80.2805%" y="885" width="0.0291%" height="15" fill="rgb(210,41,29)" fg:x="221045" fg:w="80"/><text x="80.5305%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (81 samples, 0.03%)</title><rect x="80.2805%" y="933" width="0.0294%" height="15" fill="rgb(206,191,31)" fg:x="221045" fg:w="81"/><text x="80.5305%" y="943.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (81 samples, 0.03%)</title><rect x="80.2805%" y="917" width="0.0294%" height="15" fill="rgb(247,75,54)" fg:x="221045" fg:w="81"/><text x="80.5305%" y="927.50"></text></g><g><title>async_std::task::block_on::block_on (100 samples, 0.04%)</title><rect x="80.2775%" y="1205" width="0.0363%" height="15" fill="rgb(208,54,50)" fg:x="221037" fg:w="100"/><text x="80.5275%" y="1215.50"></text></g><g><title>async_std::task::builder::Builder::blocking (100 samples, 0.04%)</title><rect x="80.2775%" y="1189" width="0.0363%" height="15" fill="rgb(214,90,37)" fg:x="221037" fg:w="100"/><text x="80.5275%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (97 samples, 0.04%)</title><rect x="80.2786%" y="1173" width="0.0352%" height="15" fill="rgb(220,132,6)" fg:x="221040" fg:w="97"/><text x="80.5286%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (97 samples, 0.04%)</title><rect x="80.2786%" y="1157" width="0.0352%" height="15" fill="rgb(213,167,7)" fg:x="221040" fg:w="97"/><text x="80.5286%" y="1167.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (94 samples, 0.03%)</title><rect x="80.2797%" y="1141" width="0.0341%" height="15" fill="rgb(243,36,27)" fg:x="221043" fg:w="94"/><text x="80.5297%" y="1151.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (94 samples, 0.03%)</title><rect x="80.2797%" y="1125" width="0.0341%" height="15" fill="rgb(235,147,12)" fg:x="221043" fg:w="94"/><text x="80.5297%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (94 samples, 0.03%)</title><rect x="80.2797%" y="1109" width="0.0341%" height="15" fill="rgb(212,198,44)" fg:x="221043" fg:w="94"/><text x="80.5297%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (94 samples, 0.03%)</title><rect x="80.2797%" y="1093" width="0.0341%" height="15" fill="rgb(218,68,50)" fg:x="221043" fg:w="94"/><text x="80.5297%" y="1103.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (93 samples, 0.03%)</title><rect x="80.2801%" y="1077" width="0.0338%" height="15" fill="rgb(224,79,48)" fg:x="221044" fg:w="93"/><text x="80.5301%" y="1087.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (93 samples, 0.03%)</title><rect x="80.2801%" y="1061" width="0.0338%" height="15" fill="rgb(213,191,50)" fg:x="221044" fg:w="93"/><text x="80.5301%" y="1071.50"></text></g><g><title>async_global_executor::executor::block_on (93 samples, 0.03%)</title><rect x="80.2801%" y="1045" width="0.0338%" height="15" fill="rgb(254,146,10)" fg:x="221044" fg:w="93"/><text x="80.5301%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (93 samples, 0.03%)</title><rect x="80.2801%" y="1029" width="0.0338%" height="15" fill="rgb(215,175,11)" fg:x="221044" fg:w="93"/><text x="80.5301%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (93 samples, 0.03%)</title><rect x="80.2801%" y="1013" width="0.0338%" height="15" fill="rgb(207,49,7)" fg:x="221044" fg:w="93"/><text x="80.5301%" y="1023.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (92 samples, 0.03%)</title><rect x="80.2805%" y="997" width="0.0334%" height="15" fill="rgb(234,144,29)" fg:x="221045" fg:w="92"/><text x="80.5305%" y="1007.50"></text></g><g><title>async_global_executor::reactor::block_on (92 samples, 0.03%)</title><rect x="80.2805%" y="981" width="0.0334%" height="15" fill="rgb(213,222,48)" fg:x="221045" fg:w="92"/><text x="80.5305%" y="991.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (92 samples, 0.03%)</title><rect x="80.2805%" y="965" width="0.0334%" height="15" fill="rgb(222,8,6)" fg:x="221045" fg:w="92"/><text x="80.5305%" y="975.50"></text></g><g><title>async_io::driver::block_on (92 samples, 0.03%)</title><rect x="80.2805%" y="949" width="0.0334%" height="15" fill="rgb(221,114,49)" fg:x="221045" fg:w="92"/><text x="80.5305%" y="959.50"></text></g><g><title>zenoh_transport::manager::TransportManagerBuilder::from_config::{{closure}} (117 samples, 0.04%)</title><rect x="80.2721%" y="1237" width="0.0425%" height="15" fill="rgb(250,140,42)" fg:x="221022" fg:w="117"/><text x="80.5221%" y="1247.50"></text></g><g><title>&lt;zenoh_transport::multicast::manager::TransportManagerBuilderMulticast as core::default::Default&gt;::default (113 samples, 0.04%)</title><rect x="80.2736%" y="1221" width="0.0410%" height="15" fill="rgb(250,150,27)" fg:x="221026" fg:w="113"/><text x="80.5236%" y="1231.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="80.3215%" y="1157" width="0.0109%" height="15" fill="rgb(252,159,3)" fg:x="221158" fg:w="30"/><text x="80.5715%" y="1167.50"></text></g><g><title>std::sys::unix::futex::futex_wait (51 samples, 0.02%)</title><rect x="80.3509%" y="1093" width="0.0185%" height="15" fill="rgb(241,182,3)" fg:x="221239" fg:w="51"/><text x="80.6009%" y="1103.50"></text></g><g><title>syscall (51 samples, 0.02%)</title><rect x="80.3509%" y="1077" width="0.0185%" height="15" fill="rgb(236,3,9)" fg:x="221239" fg:w="51"/><text x="80.6009%" y="1087.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="80.3509%" y="1061" width="0.0185%" height="15" fill="rgb(223,227,51)" fg:x="221239" fg:w="51"/><text x="80.6009%" y="1071.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="80.3513%" y="1045" width="0.0182%" height="15" fill="rgb(232,133,30)" fg:x="221240" fg:w="50"/><text x="80.6013%" y="1055.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="80.3513%" y="1029" width="0.0182%" height="15" fill="rgb(209,93,27)" fg:x="221240" fg:w="50"/><text x="80.6013%" y="1039.50"></text></g><g><title>[unknown] (50 samples, 0.02%)</title><rect x="80.3513%" y="1013" width="0.0182%" height="15" fill="rgb(208,108,34)" fg:x="221240" fg:w="50"/><text x="80.6013%" y="1023.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="80.3531%" y="997" width="0.0163%" height="15" fill="rgb(215,189,13)" fg:x="221245" fg:w="45"/><text x="80.6031%" y="1007.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="80.3549%" y="981" width="0.0145%" height="15" fill="rgb(206,88,23)" fg:x="221250" fg:w="40"/><text x="80.6049%" y="991.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="80.3549%" y="965" width="0.0145%" height="15" fill="rgb(240,173,0)" fg:x="221250" fg:w="40"/><text x="80.6049%" y="975.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="80.3556%" y="949" width="0.0138%" height="15" fill="rgb(223,106,52)" fg:x="221252" fg:w="38"/><text x="80.6056%" y="959.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="80.3578%" y="933" width="0.0116%" height="15" fill="rgb(206,130,16)" fg:x="221258" fg:w="32"/><text x="80.6078%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (129 samples, 0.05%)</title><rect x="80.3498%" y="1157" width="0.0469%" height="15" fill="rgb(220,54,25)" fg:x="221236" fg:w="129"/><text x="80.5998%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (127 samples, 0.05%)</title><rect x="80.3505%" y="1141" width="0.0461%" height="15" fill="rgb(210,4,38)" fg:x="221238" fg:w="127"/><text x="80.6005%" y="1151.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (127 samples, 0.05%)</title><rect x="80.3505%" y="1125" width="0.0461%" height="15" fill="rgb(238,94,39)" fg:x="221238" fg:w="127"/><text x="80.6005%" y="1135.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (127 samples, 0.05%)</title><rect x="80.3505%" y="1109" width="0.0461%" height="15" fill="rgb(234,124,34)" fg:x="221238" fg:w="127"/><text x="80.6005%" y="1119.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (75 samples, 0.03%)</title><rect x="80.3694%" y="1093" width="0.0272%" height="15" fill="rgb(221,91,40)" fg:x="221290" fg:w="75"/><text x="80.6194%" y="1103.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx (214 samples, 0.08%)</title><rect x="80.3197%" y="1237" width="0.0777%" height="15" fill="rgb(246,53,28)" fg:x="221153" fg:w="214"/><text x="80.5697%" y="1247.50"></text></g><g><title>async_std::task::spawn::spawn (214 samples, 0.08%)</title><rect x="80.3197%" y="1221" width="0.0777%" height="15" fill="rgb(229,109,7)" fg:x="221153" fg:w="214"/><text x="80.5697%" y="1231.50"></text></g><g><title>async_std::task::builder::Builder::spawn (214 samples, 0.08%)</title><rect x="80.3197%" y="1205" width="0.0777%" height="15" fill="rgb(249,117,8)" fg:x="221153" fg:w="214"/><text x="80.5697%" y="1215.50"></text></g><g><title>async_global_executor::executor::spawn (214 samples, 0.08%)</title><rect x="80.3197%" y="1189" width="0.0777%" height="15" fill="rgb(210,181,1)" fg:x="221153" fg:w="214"/><text x="80.5697%" y="1199.50"></text></g><g><title>async_executor::Executor::spawn (214 samples, 0.08%)</title><rect x="80.3197%" y="1173" width="0.0777%" height="15" fill="rgb(211,66,1)" fg:x="221153" fg:w="214"/><text x="80.5697%" y="1183.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (145 samples, 0.05%)</title><rect x="80.4007%" y="1237" width="0.0527%" height="15" fill="rgb(221,90,14)" fg:x="221376" fg:w="145"/><text x="80.6507%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (145 samples, 0.05%)</title><rect x="80.4007%" y="1221" width="0.0527%" height="15" fill="rgb(219,222,44)" fg:x="221376" fg:w="145"/><text x="80.6507%" y="1231.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (145 samples, 0.05%)</title><rect x="80.4007%" y="1205" width="0.0527%" height="15" fill="rgb(246,34,33)" fg:x="221376" fg:w="145"/><text x="80.6507%" y="1215.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (145 samples, 0.05%)</title><rect x="80.4007%" y="1189" width="0.0527%" height="15" fill="rgb(227,135,41)" fg:x="221376" fg:w="145"/><text x="80.6507%" y="1199.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states (135 samples, 0.05%)</title><rect x="80.4043%" y="1173" width="0.0490%" height="15" fill="rgb(226,15,14)" fg:x="221386" fg:w="135"/><text x="80.6543%" y="1183.50"></text></g><g><title>__rust_probestack (135 samples, 0.05%)</title><rect x="80.4043%" y="1157" width="0.0490%" height="15" fill="rgb(236,148,47)" fg:x="221386" fg:w="135"/><text x="80.6543%" y="1167.50"></text></g><g><title>[libc.so.6] (56 samples, 0.02%)</title><rect x="80.4824%" y="965" width="0.0203%" height="15" fill="rgb(233,162,52)" fg:x="221601" fg:w="56"/><text x="80.7324%" y="975.50"></text></g><g><title>[libc.so.6] (44 samples, 0.02%)</title><rect x="80.4867%" y="949" width="0.0160%" height="15" fill="rgb(244,35,28)" fg:x="221613" fg:w="44"/><text x="80.7367%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.02%)</title><rect x="80.4788%" y="997" width="0.0243%" height="15" fill="rgb(205,121,10)" fg:x="221591" fg:w="67"/><text x="80.7288%" y="1007.50"></text></g><g><title>malloc (67 samples, 0.02%)</title><rect x="80.4788%" y="981" width="0.0243%" height="15" fill="rgb(250,58,18)" fg:x="221591" fg:w="67"/><text x="80.7288%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (72 samples, 0.03%)</title><rect x="80.4773%" y="1029" width="0.0261%" height="15" fill="rgb(216,37,13)" fg:x="221587" fg:w="72"/><text x="80.7273%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (69 samples, 0.03%)</title><rect x="80.4784%" y="1013" width="0.0251%" height="15" fill="rgb(221,215,42)" fg:x="221590" fg:w="69"/><text x="80.7284%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (81 samples, 0.03%)</title><rect x="80.4773%" y="1045" width="0.0294%" height="15" fill="rgb(217,214,19)" fg:x="221587" fg:w="81"/><text x="80.7273%" y="1055.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (41 samples, 0.01%)</title><rect x="80.5082%" y="1045" width="0.0149%" height="15" fill="rgb(233,139,13)" fg:x="221672" fg:w="41"/><text x="80.7582%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (41 samples, 0.01%)</title><rect x="80.5082%" y="1029" width="0.0149%" height="15" fill="rgb(247,168,23)" fg:x="221672" fg:w="41"/><text x="80.7582%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (41 samples, 0.01%)</title><rect x="80.5082%" y="1013" width="0.0149%" height="15" fill="rgb(207,202,1)" fg:x="221672" fg:w="41"/><text x="80.7582%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41 samples, 0.01%)</title><rect x="80.5082%" y="997" width="0.0149%" height="15" fill="rgb(220,155,48)" fg:x="221672" fg:w="41"/><text x="80.7582%" y="1007.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (41 samples, 0.01%)</title><rect x="80.5231%" y="1045" width="0.0149%" height="15" fill="rgb(250,43,26)" fg:x="221713" fg:w="41"/><text x="80.7731%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (41 samples, 0.01%)</title><rect x="80.5231%" y="1029" width="0.0149%" height="15" fill="rgb(212,190,23)" fg:x="221713" fg:w="41"/><text x="80.7731%" y="1039.50"></text></g><g><title>zenoh::net::routing::router::Tables::get_face (65 samples, 0.02%)</title><rect x="80.5380%" y="1045" width="0.0236%" height="15" fill="rgb(216,39,24)" fg:x="221754" fg:w="65"/><text x="80.7880%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (65 samples, 0.02%)</title><rect x="80.5380%" y="1029" width="0.0236%" height="15" fill="rgb(252,113,16)" fg:x="221754" fg:w="65"/><text x="80.7880%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (65 samples, 0.02%)</title><rect x="80.5380%" y="1013" width="0.0236%" height="15" fill="rgb(208,113,19)" fg:x="221754" fg:w="65"/><text x="80.7880%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (58 samples, 0.02%)</title><rect x="80.5405%" y="997" width="0.0211%" height="15" fill="rgb(234,107,25)" fg:x="221761" fg:w="58"/><text x="80.7905%" y="1007.50"></text></g><g><title>zenoh::net::routing::router::Tables::get_face::{{closure}} (58 samples, 0.02%)</title><rect x="80.5405%" y="981" width="0.0211%" height="15" fill="rgb(234,217,51)" fg:x="221761" fg:w="58"/><text x="80.7905%" y="991.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (58 samples, 0.02%)</title><rect x="80.5405%" y="965" width="0.0211%" height="15" fill="rgb(251,29,42)" fg:x="221761" fg:w="58"/><text x="80.7905%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (35 samples, 0.01%)</title><rect x="80.5488%" y="949" width="0.0127%" height="15" fill="rgb(221,62,51)" fg:x="221784" fg:w="35"/><text x="80.7988%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (35 samples, 0.01%)</title><rect x="80.5488%" y="933" width="0.0127%" height="15" fill="rgb(240,192,43)" fg:x="221784" fg:w="35"/><text x="80.7988%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (35 samples, 0.01%)</title><rect x="80.5488%" y="917" width="0.0127%" height="15" fill="rgb(224,157,47)" fg:x="221784" fg:w="35"/><text x="80.7988%" y="927.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="80.5507%" y="901" width="0.0109%" height="15" fill="rgb(226,84,45)" fg:x="221789" fg:w="30"/><text x="80.8007%" y="911.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (303 samples, 0.11%)</title><rect x="80.4533%" y="1061" width="0.1100%" height="15" fill="rgb(208,207,23)" fg:x="221521" fg:w="303"/><text x="80.7033%" y="1071.50"></text></g><g><title>zenoh::net::routing::queries::compute_matches_query_routes (313 samples, 0.11%)</title><rect x="80.4533%" y="1109" width="0.1137%" height="15" fill="rgb(253,34,51)" fg:x="221521" fg:w="313"/><text x="80.7033%" y="1119.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (313 samples, 0.11%)</title><rect x="80.4533%" y="1093" width="0.1137%" height="15" fill="rgb(227,26,34)" fg:x="221521" fg:w="313"/><text x="80.7033%" y="1103.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (313 samples, 0.11%)</title><rect x="80.4533%" y="1077" width="0.1137%" height="15" fill="rgb(245,75,19)" fg:x="221521" fg:w="313"/><text x="80.7033%" y="1087.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_queryable (314 samples, 0.11%)</title><rect x="80.4533%" y="1141" width="0.1140%" height="15" fill="rgb(250,191,31)" fg:x="221521" fg:w="314"/><text x="80.7033%" y="1151.50"></text></g><g><title>zenoh::net::routing::queries::declare_peer_queryable (314 samples, 0.11%)</title><rect x="80.4533%" y="1125" width="0.1140%" height="15" fill="rgb(224,11,50)" fg:x="221521" fg:w="314"/><text x="80.7033%" y="1135.50"></text></g><g><title>zenoh::net::routing::resource::Resource::make_resource (65 samples, 0.02%)</title><rect x="80.5677%" y="1109" width="0.0236%" height="15" fill="rgb(231,171,7)" fg:x="221836" fg:w="65"/><text x="80.8177%" y="1119.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (36 samples, 0.01%)</title><rect x="80.5913%" y="1077" width="0.0131%" height="15" fill="rgb(252,214,10)" fg:x="221901" fg:w="36"/><text x="80.8413%" y="1087.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (36 samples, 0.01%)</title><rect x="80.5913%" y="1061" width="0.0131%" height="15" fill="rgb(249,45,46)" fg:x="221901" fg:w="36"/><text x="80.8413%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (32 samples, 0.01%)</title><rect x="80.5928%" y="1045" width="0.0116%" height="15" fill="rgb(240,173,7)" fg:x="221905" fg:w="32"/><text x="80.8428%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (32 samples, 0.01%)</title><rect x="80.5928%" y="1029" width="0.0116%" height="15" fill="rgb(235,214,13)" fg:x="221905" fg:w="32"/><text x="80.8428%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (32 samples, 0.01%)</title><rect x="80.5928%" y="1013" width="0.0116%" height="15" fill="rgb(245,156,8)" fg:x="221905" fg:w="32"/><text x="80.8428%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (32 samples, 0.01%)</title><rect x="80.5928%" y="997" width="0.0116%" height="15" fill="rgb(235,46,12)" fg:x="221905" fg:w="32"/><text x="80.8428%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (32 samples, 0.01%)</title><rect x="80.5928%" y="981" width="0.0116%" height="15" fill="rgb(221,81,14)" fg:x="221905" fg:w="32"/><text x="80.8428%" y="991.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (96 samples, 0.03%)</title><rect x="80.6048%" y="1045" width="0.0349%" height="15" fill="rgb(238,207,9)" fg:x="221938" fg:w="96"/><text x="80.8548%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (33 samples, 0.01%)</title><rect x="80.6407%" y="1013" width="0.0120%" height="15" fill="rgb(224,129,35)" fg:x="222037" fg:w="33"/><text x="80.8907%" y="1023.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (33 samples, 0.01%)</title><rect x="80.6407%" y="997" width="0.0120%" height="15" fill="rgb(243,218,34)" fg:x="222037" fg:w="33"/><text x="80.8907%" y="1007.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (32 samples, 0.01%)</title><rect x="80.6411%" y="981" width="0.0116%" height="15" fill="rgb(220,166,13)" fg:x="222038" fg:w="32"/><text x="80.8911%" y="991.50"></text></g><g><title>alloc::str::join_generic_copy (32 samples, 0.01%)</title><rect x="80.6411%" y="965" width="0.0116%" height="15" fill="rgb(227,167,49)" fg:x="222038" fg:w="32"/><text x="80.8911%" y="975.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (39 samples, 0.01%)</title><rect x="80.6396%" y="1045" width="0.0142%" height="15" fill="rgb(234,142,12)" fg:x="222034" fg:w="39"/><text x="80.8896%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (36 samples, 0.01%)</title><rect x="80.6407%" y="1029" width="0.0131%" height="15" fill="rgb(207,100,48)" fg:x="222037" fg:w="36"/><text x="80.8907%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (43 samples, 0.02%)</title><rect x="80.6571%" y="1013" width="0.0156%" height="15" fill="rgb(210,25,14)" fg:x="222082" fg:w="43"/><text x="80.9071%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (43 samples, 0.02%)</title><rect x="80.6571%" y="997" width="0.0156%" height="15" fill="rgb(246,116,27)" fg:x="222082" fg:w="43"/><text x="80.9071%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (43 samples, 0.02%)</title><rect x="80.6571%" y="981" width="0.0156%" height="15" fill="rgb(214,193,42)" fg:x="222082" fg:w="43"/><text x="80.9071%" y="991.50"></text></g><g><title>&lt;zenoh::net::routing::face::Face as zenoh_transport::primitives::Primitives&gt;::decl_resource (291 samples, 0.11%)</title><rect x="80.5674%" y="1141" width="0.1057%" height="15" fill="rgb(214,122,8)" fg:x="221835" fg:w="291"/><text x="80.8174%" y="1151.50"></text></g><g><title>zenoh::net::routing::resource::register_expr (291 samples, 0.11%)</title><rect x="80.5674%" y="1125" width="0.1057%" height="15" fill="rgb(244,173,18)" fg:x="221835" fg:w="291"/><text x="80.8174%" y="1135.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_matches_routes (225 samples, 0.08%)</title><rect x="80.5913%" y="1109" width="0.0817%" height="15" fill="rgb(232,68,19)" fg:x="221901" fg:w="225"/><text x="80.8413%" y="1119.50"></text></g><g><title>zenoh::net::routing::router::Tables::compute_routes (225 samples, 0.08%)</title><rect x="80.5913%" y="1093" width="0.0817%" height="15" fill="rgb(236,224,1)" fg:x="221901" fg:w="225"/><text x="80.8413%" y="1103.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (189 samples, 0.07%)</title><rect x="80.6044%" y="1077" width="0.0686%" height="15" fill="rgb(240,11,8)" fg:x="221937" fg:w="189"/><text x="80.8544%" y="1087.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (189 samples, 0.07%)</title><rect x="80.6044%" y="1061" width="0.0686%" height="15" fill="rgb(244,159,20)" fg:x="221937" fg:w="189"/><text x="80.8544%" y="1071.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (53 samples, 0.02%)</title><rect x="80.6538%" y="1045" width="0.0192%" height="15" fill="rgb(240,223,54)" fg:x="222073" fg:w="53"/><text x="80.9038%" y="1055.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (53 samples, 0.02%)</title><rect x="80.6538%" y="1029" width="0.0192%" height="15" fill="rgb(237,146,5)" fg:x="222073" fg:w="53"/><text x="80.9038%" y="1039.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (612 samples, 0.22%)</title><rect x="80.4533%" y="1237" width="0.2223%" height="15" fill="rgb(218,221,32)" fg:x="221521" fg:w="612"/><text x="80.7033%" y="1247.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (612 samples, 0.22%)</title><rect x="80.4533%" y="1221" width="0.2223%" height="15" fill="rgb(244,96,26)" fg:x="221521" fg:w="612"/><text x="80.7033%" y="1231.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (612 samples, 0.22%)</title><rect x="80.4533%" y="1205" width="0.2223%" height="15" fill="rgb(245,184,37)" fg:x="221521" fg:w="612"/><text x="80.7033%" y="1215.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeSession as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (612 samples, 0.22%)</title><rect x="80.4533%" y="1189" width="0.2223%" height="15" fill="rgb(248,91,47)" fg:x="221521" fg:w="612"/><text x="80.7033%" y="1199.50"></text></g><g><title>&lt;zenoh::net::routing::router::LinkStateInterceptor as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (612 samples, 0.22%)</title><rect x="80.4533%" y="1173" width="0.2223%" height="15" fill="rgb(243,199,8)" fg:x="221521" fg:w="612"/><text x="80.7033%" y="1183.50"></text></g><g><title>&lt;zenoh_transport::primitives::demux::DeMux&lt;P&gt; as zenoh_transport::TransportPeerEventHandler&gt;::handle_message (612 samples, 0.22%)</title><rect x="80.4533%" y="1157" width="0.2223%" height="15" fill="rgb(249,12,15)" fg:x="221521" fg:w="612"/><text x="80.7033%" y="1167.50"></text></g><g><title>[unknown] (217,774 samples, 79.09%)</title><rect x="1.5839%" y="1253" width="79.0925%" height="15" fill="rgb(245,97,12)" fg:x="4361" fg:w="217774"/><text x="1.8339%" y="1263.50">[unknown]</text></g><g><title>[unknown] (234 samples, 0.08%)</title><rect x="80.6996%" y="1221" width="0.0850%" height="15" fill="rgb(244,61,1)" fg:x="222199" fg:w="234"/><text x="80.9496%" y="1231.50"></text></g><g><title>[unknown] (198 samples, 0.07%)</title><rect x="80.7126%" y="1205" width="0.0719%" height="15" fill="rgb(222,194,10)" fg:x="222235" fg:w="198"/><text x="80.9626%" y="1215.50"></text></g><g><title>[unknown] (185 samples, 0.07%)</title><rect x="80.7174%" y="1189" width="0.0672%" height="15" fill="rgb(226,178,8)" fg:x="222248" fg:w="185"/><text x="80.9674%" y="1199.50"></text></g><g><title>[unknown] (148 samples, 0.05%)</title><rect x="80.7308%" y="1173" width="0.0538%" height="15" fill="rgb(241,32,34)" fg:x="222285" fg:w="148"/><text x="80.9808%" y="1183.50"></text></g><g><title>[unknown] (111 samples, 0.04%)</title><rect x="80.7442%" y="1157" width="0.0403%" height="15" fill="rgb(254,26,6)" fg:x="222322" fg:w="111"/><text x="80.9942%" y="1167.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="80.7631%" y="1141" width="0.0214%" height="15" fill="rgb(249,71,11)" fg:x="222374" fg:w="59"/><text x="81.0131%" y="1151.50"></text></g><g><title>prctl (74 samples, 0.03%)</title><rect x="80.8158%" y="1141" width="0.0269%" height="15" fill="rgb(232,170,27)" fg:x="222519" fg:w="74"/><text x="81.0658%" y="1151.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="80.8162%" y="1125" width="0.0265%" height="15" fill="rgb(214,223,17)" fg:x="222520" fg:w="73"/><text x="81.0662%" y="1135.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="80.8165%" y="1109" width="0.0261%" height="15" fill="rgb(250,18,15)" fg:x="222521" fg:w="72"/><text x="81.0665%" y="1119.50"></text></g><g><title>[unknown] (72 samples, 0.03%)</title><rect x="80.8165%" y="1093" width="0.0261%" height="15" fill="rgb(212,153,51)" fg:x="222521" fg:w="72"/><text x="81.0665%" y="1103.50"></text></g><g><title>[unknown] (68 samples, 0.02%)</title><rect x="80.8180%" y="1077" width="0.0247%" height="15" fill="rgb(219,194,12)" fg:x="222525" fg:w="68"/><text x="81.0680%" y="1087.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="80.8292%" y="1061" width="0.0134%" height="15" fill="rgb(212,58,17)" fg:x="222556" fg:w="37"/><text x="81.0792%" y="1071.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (108 samples, 0.04%)</title><rect x="80.9661%" y="613" width="0.0392%" height="15" fill="rgb(254,5,10)" fg:x="222933" fg:w="108"/><text x="81.2161%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (96 samples, 0.03%)</title><rect x="80.9705%" y="597" width="0.0349%" height="15" fill="rgb(246,91,7)" fg:x="222945" fg:w="96"/><text x="81.2205%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (96 samples, 0.03%)</title><rect x="80.9705%" y="581" width="0.0349%" height="15" fill="rgb(218,108,49)" fg:x="222945" fg:w="96"/><text x="81.2205%" y="591.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (303 samples, 0.11%)</title><rect x="80.8957%" y="629" width="0.1100%" height="15" fill="rgb(238,123,20)" fg:x="222739" fg:w="303"/><text x="81.1457%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (40 samples, 0.01%)</title><rect x="81.0057%" y="629" width="0.0145%" height="15" fill="rgb(231,69,23)" fg:x="223042" fg:w="40"/><text x="81.2557%" y="639.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (33 samples, 0.01%)</title><rect x="81.0083%" y="613" width="0.0120%" height="15" fill="rgb(230,209,3)" fg:x="223049" fg:w="33"/><text x="81.2583%" y="623.50"></text></g><g><title>async_executor::steal (382 samples, 0.14%)</title><rect x="80.8913%" y="645" width="0.1387%" height="15" fill="rgb(231,19,0)" fg:x="222727" fg:w="382"/><text x="81.1413%" y="655.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (142 samples, 0.05%)</title><rect x="81.0504%" y="629" width="0.0516%" height="15" fill="rgb(226,192,25)" fg:x="223165" fg:w="142"/><text x="81.3004%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (247 samples, 0.09%)</title><rect x="81.0301%" y="645" width="0.0897%" height="15" fill="rgb(223,175,53)" fg:x="223109" fg:w="247"/><text x="81.2801%" y="655.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (49 samples, 0.02%)</title><rect x="81.1020%" y="629" width="0.0178%" height="15" fill="rgb(248,35,51)" fg:x="223307" fg:w="49"/><text x="81.3520%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (670 samples, 0.24%)</title><rect x="80.8823%" y="661" width="0.2433%" height="15" fill="rgb(230,37,26)" fg:x="222702" fg:w="670"/><text x="81.1323%" y="671.50"></text></g><g><title>async_executor::State::notify (98 samples, 0.04%)</title><rect x="81.1256%" y="661" width="0.0356%" height="15" fill="rgb(206,120,22)" fg:x="223372" fg:w="98"/><text x="81.3756%" y="671.50"></text></g><g><title>core::task::wake::Waker::wake (57 samples, 0.02%)</title><rect x="81.1405%" y="645" width="0.0207%" height="15" fill="rgb(207,165,28)" fg:x="223413" fg:w="57"/><text x="81.3905%" y="655.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (57 samples, 0.02%)</title><rect x="81.1405%" y="629" width="0.0207%" height="15" fill="rgb(226,23,46)" fg:x="223413" fg:w="57"/><text x="81.3905%" y="639.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (57 samples, 0.02%)</title><rect x="81.1405%" y="613" width="0.0207%" height="15" fill="rgb(208,130,44)" fg:x="223413" fg:w="57"/><text x="81.3905%" y="623.50"></text></g><g><title>parking::Unparker::unpark (54 samples, 0.02%)</title><rect x="81.1416%" y="597" width="0.0196%" height="15" fill="rgb(231,67,8)" fg:x="223416" fg:w="54"/><text x="81.3916%" y="607.50"></text></g><g><title>parking::Inner::unpark (49 samples, 0.02%)</title><rect x="81.1434%" y="581" width="0.0178%" height="15" fill="rgb(205,183,22)" fg:x="223421" fg:w="49"/><text x="81.3934%" y="591.50"></text></g><g><title>syscall (40 samples, 0.01%)</title><rect x="81.1467%" y="565" width="0.0145%" height="15" fill="rgb(224,47,9)" fg:x="223430" fg:w="40"/><text x="81.3967%" y="575.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="81.1470%" y="549" width="0.0142%" height="15" fill="rgb(250,183,49)" fg:x="223431" fg:w="39"/><text x="81.3970%" y="559.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="81.1477%" y="533" width="0.0134%" height="15" fill="rgb(220,151,39)" fg:x="223433" fg:w="37"/><text x="81.3977%" y="543.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="81.1477%" y="517" width="0.0134%" height="15" fill="rgb(220,118,20)" fg:x="223433" fg:w="37"/><text x="81.3977%" y="527.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="81.1477%" y="501" width="0.0134%" height="15" fill="rgb(231,65,51)" fg:x="223433" fg:w="37"/><text x="81.3977%" y="511.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="81.1488%" y="485" width="0.0123%" height="15" fill="rgb(253,125,37)" fg:x="223436" fg:w="34"/><text x="81.3988%" y="495.50"></text></g><g><title>async_executor::Ticker::wake (28 samples, 0.01%)</title><rect x="81.1623%" y="661" width="0.0102%" height="15" fill="rgb(232,102,6)" fg:x="223473" fg:w="28"/><text x="81.4123%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (809 samples, 0.29%)</title><rect x="80.8790%" y="725" width="0.2938%" height="15" fill="rgb(251,105,13)" fg:x="222693" fg:w="809"/><text x="81.1290%" y="735.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (809 samples, 0.29%)</title><rect x="80.8790%" y="709" width="0.2938%" height="15" fill="rgb(222,179,29)" fg:x="222693" fg:w="809"/><text x="81.1290%" y="719.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (808 samples, 0.29%)</title><rect x="80.8793%" y="693" width="0.2935%" height="15" fill="rgb(229,180,53)" fg:x="222694" fg:w="808"/><text x="81.1293%" y="703.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (803 samples, 0.29%)</title><rect x="80.8812%" y="677" width="0.2916%" height="15" fill="rgb(238,104,13)" fg:x="222699" fg:w="803"/><text x="81.1312%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (28 samples, 0.01%)</title><rect x="81.1732%" y="709" width="0.0102%" height="15" fill="rgb(210,130,5)" fg:x="223503" fg:w="28"/><text x="81.4232%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (28 samples, 0.01%)</title><rect x="81.1732%" y="693" width="0.0102%" height="15" fill="rgb(233,87,49)" fg:x="223503" fg:w="28"/><text x="81.4232%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (873 samples, 0.32%)</title><rect x="80.8706%" y="757" width="0.3171%" height="15" fill="rgb(243,34,9)" fg:x="222670" fg:w="873"/><text x="81.1206%" y="767.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (872 samples, 0.32%)</title><rect x="80.8710%" y="741" width="0.3167%" height="15" fill="rgb(235,225,10)" fg:x="222671" fg:w="872"/><text x="81.1210%" y="751.50"></text></g><g><title>async_executor::steal (41 samples, 0.01%)</title><rect x="81.1728%" y="725" width="0.0149%" height="15" fill="rgb(212,0,30)" fg:x="223502" fg:w="41"/><text x="81.4228%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (69 samples, 0.03%)</title><rect x="81.2222%" y="405" width="0.0251%" height="15" fill="rgb(211,177,0)" fg:x="223638" fg:w="69"/><text x="81.4722%" y="415.50"></text></g><g><title>async_io::Async&lt;T&gt;::read_with::{{closure}} (69 samples, 0.03%)</title><rect x="81.2222%" y="389" width="0.0251%" height="15" fill="rgb(225,220,11)" fg:x="223638" fg:w="69"/><text x="81.4722%" y="399.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::accept::{{closure}}::{{closure}} (45 samples, 0.02%)</title><rect x="81.2309%" y="373" width="0.0163%" height="15" fill="rgb(215,10,13)" fg:x="223662" fg:w="45"/><text x="81.4809%" y="383.50"></text></g><g><title>std::net::tcp::TcpListener::accept (44 samples, 0.02%)</title><rect x="81.2313%" y="357" width="0.0160%" height="15" fill="rgb(240,177,14)" fg:x="223663" fg:w="44"/><text x="81.4813%" y="367.50"></text></g><g><title>std::sys_common::net::TcpListener::accept (44 samples, 0.02%)</title><rect x="81.2313%" y="341" width="0.0160%" height="15" fill="rgb(243,7,39)" fg:x="223663" fg:w="44"/><text x="81.4813%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::accept (43 samples, 0.02%)</title><rect x="81.2316%" y="325" width="0.0156%" height="15" fill="rgb(212,99,0)" fg:x="223664" fg:w="43"/><text x="81.4816%" y="335.50"></text></g><g><title>std::sys::unix::cvt_r (43 samples, 0.02%)</title><rect x="81.2316%" y="309" width="0.0156%" height="15" fill="rgb(225,162,48)" fg:x="223664" fg:w="43"/><text x="81.4816%" y="319.50"></text></g><g><title>std::sys::unix::net::Socket::accept::{{closure}} (42 samples, 0.02%)</title><rect x="81.2320%" y="293" width="0.0153%" height="15" fill="rgb(246,16,25)" fg:x="223665" fg:w="42"/><text x="81.4820%" y="303.50"></text></g><g><title>accept4 (42 samples, 0.02%)</title><rect x="81.2320%" y="277" width="0.0153%" height="15" fill="rgb(220,150,2)" fg:x="223665" fg:w="42"/><text x="81.4820%" y="287.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="81.2335%" y="261" width="0.0138%" height="15" fill="rgb(237,113,11)" fg:x="223669" fg:w="38"/><text x="81.4835%" y="271.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="81.2335%" y="245" width="0.0138%" height="15" fill="rgb(236,70,20)" fg:x="223669" fg:w="38"/><text x="81.4835%" y="255.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="81.2335%" y="229" width="0.0138%" height="15" fill="rgb(234,94,7)" fg:x="223669" fg:w="38"/><text x="81.4835%" y="239.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="81.2335%" y="213" width="0.0138%" height="15" fill="rgb(250,221,0)" fg:x="223669" fg:w="38"/><text x="81.4835%" y="223.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="81.2335%" y="197" width="0.0138%" height="15" fill="rgb(245,149,46)" fg:x="223669" fg:w="38"/><text x="81.4835%" y="207.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="81.2342%" y="181" width="0.0131%" height="15" fill="rgb(215,37,27)" fg:x="223671" fg:w="36"/><text x="81.4842%" y="191.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="81.2349%" y="165" width="0.0123%" height="15" fill="rgb(232,65,3)" fg:x="223673" fg:w="34"/><text x="81.4849%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;alloc::sync::Arc&lt;async_io::reactor::Source&gt;&gt;&gt;&gt; (31 samples, 0.01%)</title><rect x="81.2625%" y="373" width="0.0113%" height="15" fill="rgb(214,2,16)" fg:x="223749" fg:w="31"/><text x="81.5125%" y="383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="81.2625%" y="357" width="0.0113%" height="15" fill="rgb(227,131,50)" fg:x="223749" fg:w="31"/><text x="81.5125%" y="367.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (31 samples, 0.01%)</title><rect x="81.2625%" y="341" width="0.0113%" height="15" fill="rgb(247,131,45)" fg:x="223749" fg:w="31"/><text x="81.5125%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (31 samples, 0.01%)</title><rect x="81.2625%" y="325" width="0.0113%" height="15" fill="rgb(215,97,47)" fg:x="223749" fg:w="31"/><text x="81.5125%" y="335.50"></text></g><g><title>syscall (30 samples, 0.01%)</title><rect x="81.2629%" y="309" width="0.0109%" height="15" fill="rgb(233,143,12)" fg:x="223750" fg:w="30"/><text x="81.5129%" y="319.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="81.2629%" y="293" width="0.0109%" height="15" fill="rgb(222,57,17)" fg:x="223750" fg:w="30"/><text x="81.5129%" y="303.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="81.2629%" y="277" width="0.0109%" height="15" fill="rgb(214,119,38)" fg:x="223750" fg:w="30"/><text x="81.5129%" y="287.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="81.2629%" y="261" width="0.0109%" height="15" fill="rgb(217,28,47)" fg:x="223750" fg:w="30"/><text x="81.5129%" y="271.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="81.2632%" y="245" width="0.0105%" height="15" fill="rgb(231,14,52)" fg:x="223751" fg:w="29"/><text x="81.5132%" y="255.50"></text></g><g><title>polling::Poller::add (56 samples, 0.02%)</title><rect x="81.2741%" y="373" width="0.0203%" height="15" fill="rgb(220,158,18)" fg:x="223781" fg:w="56"/><text x="81.5241%" y="383.50"></text></g><g><title>polling::epoll::Poller::add (56 samples, 0.02%)</title><rect x="81.2741%" y="357" width="0.0203%" height="15" fill="rgb(222,143,46)" fg:x="223781" fg:w="56"/><text x="81.5241%" y="367.50"></text></g><g><title>polling::epoll::Poller::ctl (56 samples, 0.02%)</title><rect x="81.2741%" y="341" width="0.0203%" height="15" fill="rgb(227,165,5)" fg:x="223781" fg:w="56"/><text x="81.5241%" y="351.50"></text></g><g><title>epoll_ctl (56 samples, 0.02%)</title><rect x="81.2741%" y="325" width="0.0203%" height="15" fill="rgb(216,222,49)" fg:x="223781" fg:w="56"/><text x="81.5241%" y="335.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="81.2741%" y="309" width="0.0203%" height="15" fill="rgb(238,73,39)" fg:x="223781" fg:w="56"/><text x="81.5241%" y="319.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="81.2741%" y="293" width="0.0203%" height="15" fill="rgb(252,115,9)" fg:x="223781" fg:w="56"/><text x="81.5241%" y="303.50"></text></g><g><title>[unknown] (56 samples, 0.02%)</title><rect x="81.2741%" y="277" width="0.0203%" height="15" fill="rgb(238,202,4)" fg:x="223781" fg:w="56"/><text x="81.5241%" y="287.50"></text></g><g><title>[unknown] (54 samples, 0.02%)</title><rect x="81.2749%" y="261" width="0.0196%" height="15" fill="rgb(252,153,44)" fg:x="223783" fg:w="54"/><text x="81.5249%" y="271.50"></text></g><g><title>async_io::Async&lt;T&gt;::new (142 samples, 0.05%)</title><rect x="81.2473%" y="405" width="0.0516%" height="15" fill="rgb(235,128,27)" fg:x="223707" fg:w="142"/><text x="81.4973%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::insert_io (133 samples, 0.05%)</title><rect x="81.2505%" y="389" width="0.0483%" height="15" fill="rgb(221,121,47)" fg:x="223716" fg:w="133"/><text x="81.5005%" y="399.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (213 samples, 0.08%)</title><rect x="81.2218%" y="437" width="0.0774%" height="15" fill="rgb(247,211,47)" fg:x="223637" fg:w="213"/><text x="81.4718%" y="447.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpListener&gt;::accept::{{closure}} (213 samples, 0.08%)</title><rect x="81.2218%" y="421" width="0.0774%" height="15" fill="rgb(252,47,49)" fg:x="223637" fg:w="213"/><text x="81.4718%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (214 samples, 0.08%)</title><rect x="81.2218%" y="469" width="0.0777%" height="15" fill="rgb(219,119,53)" fg:x="223637" fg:w="214"/><text x="81.4718%" y="479.50"></text></g><g><title>async_std::net::tcp::listener::TcpListener::accept::{{closure}} (214 samples, 0.08%)</title><rect x="81.2218%" y="453" width="0.0777%" height="15" fill="rgb(243,165,53)" fg:x="223637" fg:w="214"/><text x="81.4718%" y="463.50"></text></g><g><title>zenoh_link_tcp::unicast::accept_task::{{closure}}::accept::{{closure}} (218 samples, 0.08%)</title><rect x="81.2207%" y="485" width="0.0792%" height="15" fill="rgb(230,12,35)" fg:x="223634" fg:w="218"/><text x="81.4707%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (223 samples, 0.08%)</title><rect x="81.2200%" y="501" width="0.0810%" height="15" fill="rgb(239,57,49)" fg:x="223632" fg:w="223"/><text x="81.4700%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (227 samples, 0.08%)</title><rect x="81.2193%" y="533" width="0.0824%" height="15" fill="rgb(231,154,7)" fg:x="223630" fg:w="227"/><text x="81.4693%" y="543.50"></text></g><g><title>&lt;async_std::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (227 samples, 0.08%)</title><rect x="81.2193%" y="517" width="0.0824%" height="15" fill="rgb(248,81,34)" fg:x="223630" fg:w="227"/><text x="81.4693%" y="527.50"></text></g><g><title>&lt;async_std::future::future::race::Race&lt;L,R&gt; as core::future::future::Future&gt;::poll (229 samples, 0.08%)</title><rect x="81.2193%" y="549" width="0.0832%" height="15" fill="rgb(247,9,5)" fg:x="223630" fg:w="229"/><text x="81.4693%" y="559.50"></text></g><g><title>&lt;std::net::addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (30 samples, 0.01%)</title><rect x="81.3399%" y="469" width="0.0109%" height="15" fill="rgb(228,172,27)" fg:x="223962" fg:w="30"/><text x="81.5899%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (30 samples, 0.01%)</title><rect x="81.3399%" y="453" width="0.0109%" height="15" fill="rgb(230,57,44)" fg:x="223962" fg:w="30"/><text x="81.5899%" y="463.50"></text></g><g><title>core::fmt::write (29 samples, 0.01%)</title><rect x="81.3402%" y="437" width="0.0105%" height="15" fill="rgb(249,35,22)" fg:x="223963" fg:w="29"/><text x="81.5902%" y="447.50"></text></g><g><title>alloc::fmt::format (48 samples, 0.02%)</title><rect x="81.3359%" y="517" width="0.0174%" height="15" fill="rgb(250,137,27)" fg:x="223951" fg:w="48"/><text x="81.5859%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (47 samples, 0.02%)</title><rect x="81.3362%" y="501" width="0.0171%" height="15" fill="rgb(251,57,31)" fg:x="223952" fg:w="47"/><text x="81.5862%" y="511.50"></text></g><g><title>core::fmt::write (47 samples, 0.02%)</title><rect x="81.3362%" y="485" width="0.0171%" height="15" fill="rgb(238,60,0)" fg:x="223952" fg:w="47"/><text x="81.5862%" y="495.50"></text></g><g><title>zenoh_protocol_core::locators::Locator::new (65 samples, 0.02%)</title><rect x="81.3301%" y="533" width="0.0236%" height="15" fill="rgb(242,185,39)" fg:x="223935" fg:w="65"/><text x="81.5801%" y="543.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_listener::{{closure}}::{{closure}} (383 samples, 0.14%)</title><rect x="81.2175%" y="597" width="0.1391%" height="15" fill="rgb(240,63,43)" fg:x="223625" fg:w="383"/><text x="81.4675%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (383 samples, 0.14%)</title><rect x="81.2175%" y="581" width="0.1391%" height="15" fill="rgb(236,155,6)" fg:x="223625" fg:w="383"/><text x="81.4675%" y="591.50"></text></g><g><title>zenoh_link_tcp::unicast::accept_task::{{closure}} (383 samples, 0.14%)</title><rect x="81.2175%" y="565" width="0.1391%" height="15" fill="rgb(215,11,29)" fg:x="223625" fg:w="383"/><text x="81.4675%" y="575.50"></text></g><g><title>zenoh_link_tcp::unicast::LinkUnicastTcp::new (103 samples, 0.04%)</title><rect x="81.3192%" y="549" width="0.0374%" height="15" fill="rgb(228,180,48)" fg:x="223905" fg:w="103"/><text x="81.5692%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 0.01%)</title><rect x="81.3700%" y="533" width="0.0105%" height="15" fill="rgb(241,102,12)" fg:x="224045" fg:w="29"/><text x="81.6200%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.01%)</title><rect x="81.3700%" y="517" width="0.0105%" height="15" fill="rgb(246,213,4)" fg:x="224045" fg:w="29"/><text x="81.6200%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.01%)</title><rect x="81.3700%" y="501" width="0.0105%" height="15" fill="rgb(218,134,35)" fg:x="224045" fg:w="29"/><text x="81.6200%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.01%)</title><rect x="81.3700%" y="485" width="0.0105%" height="15" fill="rgb(251,117,35)" fg:x="224045" fg:w="29"/><text x="81.6200%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.01%)</title><rect x="81.3700%" y="469" width="0.0105%" height="15" fill="rgb(206,156,45)" fg:x="224045" fg:w="29"/><text x="81.6200%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (34 samples, 0.01%)</title><rect x="81.3696%" y="565" width="0.0123%" height="15" fill="rgb(218,52,27)" fg:x="224044" fg:w="34"/><text x="81.6196%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (33 samples, 0.01%)</title><rect x="81.3700%" y="549" width="0.0120%" height="15" fill="rgb(238,83,36)" fg:x="224045" fg:w="33"/><text x="81.6200%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (29 samples, 0.01%)</title><rect x="81.3824%" y="565" width="0.0105%" height="15" fill="rgb(218,53,43)" fg:x="224079" fg:w="29"/><text x="81.6324%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (29 samples, 0.01%)</title><rect x="81.3824%" y="549" width="0.0105%" height="15" fill="rgb(239,54,39)" fg:x="224079" fg:w="29"/><text x="81.6324%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.01%)</title><rect x="81.3824%" y="533" width="0.0105%" height="15" fill="rgb(212,198,13)" fg:x="224079" fg:w="29"/><text x="81.6324%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.01%)</title><rect x="81.3827%" y="517" width="0.0102%" height="15" fill="rgb(234,54,46)" fg:x="224080" fg:w="28"/><text x="81.6327%" y="527.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::Edges&lt;E,Ty,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.02%)</title><rect x="81.4216%" y="533" width="0.0243%" height="15" fill="rgb(217,120,7)" fg:x="224187" fg:w="67"/><text x="81.6716%" y="543.50"></text></g><g><title>petgraph::algo::bellman_ford::bellman_ford (151 samples, 0.05%)</title><rect x="81.3969%" y="565" width="0.0548%" height="15" fill="rgb(246,39,15)" fg:x="224119" fg:w="151"/><text x="81.6469%" y="575.50"></text></g><g><title>petgraph::algo::bellman_ford::bellman_ford_initialize_relax (125 samples, 0.05%)</title><rect x="81.4063%" y="549" width="0.0454%" height="15" fill="rgb(242,143,31)" fg:x="224145" fg:w="125"/><text x="81.6563%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (30 samples, 0.01%)</title><rect x="81.4702%" y="341" width="0.0109%" height="15" fill="rgb(252,60,24)" fg:x="224321" fg:w="30"/><text x="81.7202%" y="351.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::get_node::{{closure}} (29 samples, 0.01%)</title><rect x="81.4706%" y="325" width="0.0105%" height="15" fill="rgb(249,220,7)" fg:x="224322" fg:w="29"/><text x="81.7206%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (29 samples, 0.01%)</title><rect x="81.4706%" y="309" width="0.0105%" height="15" fill="rgb(236,67,13)" fg:x="224322" fg:w="29"/><text x="81.7206%" y="319.50"></text></g><g><title>&lt;&amp;petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt; as petgraph::visit::IntoNeighbors&gt;::neighbors (35 samples, 0.01%)</title><rect x="81.4692%" y="421" width="0.0127%" height="15" fill="rgb(210,62,39)" fg:x="224318" fg:w="35"/><text x="81.7192%" y="431.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors (35 samples, 0.01%)</title><rect x="81.4692%" y="405" width="0.0127%" height="15" fill="rgb(219,122,53)" fg:x="224318" fg:w="35"/><text x="81.7192%" y="415.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors_directed (35 samples, 0.01%)</title><rect x="81.4692%" y="389" width="0.0127%" height="15" fill="rgb(218,87,25)" fg:x="224318" fg:w="35"/><text x="81.7192%" y="399.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::neighbors_undirected (35 samples, 0.01%)</title><rect x="81.4692%" y="373" width="0.0127%" height="15" fill="rgb(234,179,48)" fg:x="224318" fg:w="35"/><text x="81.7192%" y="383.50"></text></g><g><title>petgraph::graph_impl::stable_graph::StableGraph&lt;N,E,Ty,Ix&gt;::get_node (32 samples, 0.01%)</title><rect x="81.4702%" y="357" width="0.0116%" height="15" fill="rgb(248,90,0)" fg:x="224321" fg:w="32"/><text x="81.7202%" y="367.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::is_visited (427 samples, 0.16%)</title><rect x="81.4819%" y="421" width="0.1551%" height="15" fill="rgb(207,228,37)" fg:x="224353" fg:w="427"/><text x="81.7319%" y="431.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (427 samples, 0.16%)</title><rect x="81.4819%" y="405" width="0.1551%" height="15" fill="rgb(235,214,15)" fg:x="224353" fg:w="427"/><text x="81.7319%" y="415.50"></text></g><g><title>&lt;fixedbitset::FixedBitSet as petgraph::visit::VisitMap&lt;Ix&gt;&gt;::visit (92 samples, 0.03%)</title><rect x="81.6370%" y="421" width="0.0334%" height="15" fill="rgb(210,144,39)" fg:x="224780" fg:w="92"/><text x="81.8870%" y="431.50"></text></g><g><title>fixedbitset::FixedBitSet::put (92 samples, 0.03%)</title><rect x="81.6370%" y="405" width="0.0334%" height="15" fill="rgb(222,67,41)" fg:x="224780" fg:w="92"/><text x="81.8870%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (129 samples, 0.05%)</title><rect x="81.7575%" y="405" width="0.0469%" height="15" fill="rgb(205,35,37)" fg:x="225112" fg:w="129"/><text x="82.0075%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (129 samples, 0.05%)</title><rect x="81.7575%" y="389" width="0.0469%" height="15" fill="rgb(216,125,40)" fg:x="225112" fg:w="129"/><text x="82.0075%" y="399.50"></text></g><g><title>&lt;petgraph::graph_impl::stable_graph::Neighbors&lt;E,Ix&gt; as core::iter::traits::iterator::Iterator&gt;::next (454 samples, 0.16%)</title><rect x="81.6704%" y="421" width="0.1649%" height="15" fill="rgb(228,227,20)" fg:x="224872" fg:w="454"/><text x="81.9204%" y="431.50"></text></g><g><title>petgraph::graph_impl::EdgeIndex&lt;Ix&gt;::index (85 samples, 0.03%)</title><rect x="81.8044%" y="405" width="0.0309%" height="15" fill="rgb(242,173,45)" fg:x="225241" fg:w="85"/><text x="82.0544%" y="415.50"></text></g><g><title>&lt;u32 as petgraph::graph_impl::IndexType&gt;::index (85 samples, 0.03%)</title><rect x="81.8044%" y="389" width="0.0309%" height="15" fill="rgb(215,79,24)" fg:x="225241" fg:w="85"/><text x="82.0544%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (43 samples, 0.02%)</title><rect x="81.8353%" y="421" width="0.0156%" height="15" fill="rgb(238,164,38)" fg:x="225326" fg:w="43"/><text x="82.0853%" y="431.50"></text></g><g><title>petgraph::visit::traversal::Dfs&lt;N,VM&gt;::next (1,198 samples, 0.44%)</title><rect x="81.4525%" y="437" width="0.4351%" height="15" fill="rgb(245,196,38)" fg:x="224272" fg:w="1198"/><text x="81.7025%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (101 samples, 0.04%)</title><rect x="81.8509%" y="421" width="0.0367%" height="15" fill="rgb(231,217,29)" fg:x="225369" fg:w="101"/><text x="82.1009%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,208 samples, 0.44%)</title><rect x="81.4517%" y="501" width="0.4387%" height="15" fill="rgb(245,6,4)" fg:x="224270" fg:w="1208"/><text x="81.7017%" y="511.50"></text></g><g><title>&lt;petgraph::visit::traversal::WalkerIter&lt;W,C&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,206 samples, 0.44%)</title><rect x="81.4525%" y="485" width="0.4380%" height="15" fill="rgb(214,76,49)" fg:x="224272" fg:w="1206"/><text x="81.7025%" y="495.50"></text></g><g><title>&lt;&amp;mut W as petgraph::visit::traversal::Walker&lt;C&gt;&gt;::walk_next (1,206 samples, 0.44%)</title><rect x="81.4525%" y="469" width="0.4380%" height="15" fill="rgb(205,96,12)" fg:x="224272" fg:w="1206"/><text x="81.7025%" y="479.50"></text></g><g><title>&lt;petgraph::visit::traversal::Dfs&lt;&lt;G as petgraph::visit::GraphBase&gt;::NodeId,&lt;G as petgraph::visit::Visitable&gt;::Map&gt; as petgraph::visit::traversal::Walker&lt;G&gt;&gt;::walk_next (1,206 samples, 0.44%)</title><rect x="81.4525%" y="453" width="0.4380%" height="15" fill="rgb(243,131,4)" fg:x="224272" fg:w="1206"/><text x="81.7025%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (1,230 samples, 0.45%)</title><rect x="81.4517%" y="517" width="0.4467%" height="15" fill="rgb(214,114,4)" fg:x="224270" fg:w="1230"/><text x="81.7017%" y="527.50"></text></g><g><title>petgraph::algo::has_path_connecting::{{closure}} (1,236 samples, 0.45%)</title><rect x="81.4517%" y="533" width="0.4489%" height="15" fill="rgb(234,215,15)" fg:x="224270" fg:w="1236"/><text x="81.7017%" y="543.50"></text></g><g><title>zenoh::net::routing::network::Network::compute_trees (1,490 samples, 0.54%)</title><rect x="81.3617%" y="581" width="0.5411%" height="15" fill="rgb(250,216,45)" fg:x="224022" fg:w="1490"/><text x="81.6117%" y="591.50"></text></g><g><title>petgraph::algo::has_path_connecting (1,242 samples, 0.45%)</title><rect x="81.4517%" y="565" width="0.4511%" height="15" fill="rgb(236,128,4)" fg:x="224270" fg:w="1242"/><text x="81.7017%" y="575.50"></text></g><g><title>petgraph::algo::with_dfs (1,242 samples, 0.45%)</title><rect x="81.4517%" y="549" width="0.4511%" height="15" fill="rgb(234,50,33)" fg:x="224270" fg:w="1242"/><text x="81.7017%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (81 samples, 0.03%)</title><rect x="81.9097%" y="501" width="0.0294%" height="15" fill="rgb(253,131,37)" fg:x="225531" fg:w="81"/><text x="82.1597%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;usize,(alloc::sync::Arc&lt;zenoh::net::routing::face::FaceState&gt;,zenoh_protocol_core::key_expr::KeyExpr,core::option::Option&lt;zenoh_protocol::proto::msg::RoutingContext&gt;)&gt;&gt;]&gt; (78 samples, 0.03%)</title><rect x="81.9108%" y="485" width="0.0283%" height="15" fill="rgb(218,55,27)" fg:x="225534" fg:w="78"/><text x="82.1608%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;usize,(alloc::sync::Arc&lt;zenoh::net::routing::face::FaceState&gt;,zenoh_protocol_core::key_expr::KeyExpr,core::option::Option&lt;zenoh_protocol::proto::msg::RoutingContext&gt;)&gt;&gt;&gt; (78 samples, 0.03%)</title><rect x="81.9108%" y="469" width="0.0283%" height="15" fill="rgb(241,220,28)" fg:x="225534" fg:w="78"/><text x="82.1608%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.03%)</title><rect x="81.9108%" y="453" width="0.0283%" height="15" fill="rgb(241,90,48)" fg:x="225534" fg:w="78"/><text x="82.1608%" y="463.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="81.9965%" y="309" width="0.0102%" height="15" fill="rgb(216,43,37)" fg:x="225770" fg:w="28"/><text x="82.2465%" y="319.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="81.9965%" y="293" width="0.0102%" height="15" fill="rgb(207,173,9)" fg:x="225770" fg:w="28"/><text x="82.2465%" y="303.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="81.9965%" y="277" width="0.0102%" height="15" fill="rgb(240,126,30)" fg:x="225770" fg:w="28"/><text x="82.2465%" y="287.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="81.9954%" y="325" width="0.0167%" height="15" fill="rgb(228,178,53)" fg:x="225767" fg:w="46"/><text x="82.2454%" y="335.50"></text></g><g><title>[libc.so.6] (122 samples, 0.04%)</title><rect x="81.9711%" y="341" width="0.0443%" height="15" fill="rgb(217,33,4)" fg:x="225700" fg:w="122"/><text x="82.2211%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (207 samples, 0.08%)</title><rect x="81.9435%" y="437" width="0.0752%" height="15" fill="rgb(206,124,34)" fg:x="225624" fg:w="207"/><text x="82.1935%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (191 samples, 0.07%)</title><rect x="81.9493%" y="421" width="0.0694%" height="15" fill="rgb(208,122,53)" fg:x="225640" fg:w="191"/><text x="82.1993%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (191 samples, 0.07%)</title><rect x="81.9493%" y="405" width="0.0694%" height="15" fill="rgb(215,202,26)" fg:x="225640" fg:w="191"/><text x="82.1993%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (191 samples, 0.07%)</title><rect x="81.9493%" y="389" width="0.0694%" height="15" fill="rgb(232,198,31)" fg:x="225640" fg:w="191"/><text x="82.1993%" y="399.50"></text></g><g><title>alloc::alloc::alloc (189 samples, 0.07%)</title><rect x="81.9500%" y="373" width="0.0686%" height="15" fill="rgb(222,23,35)" fg:x="225642" fg:w="189"/><text x="82.2000%" y="383.50"></text></g><g><title>malloc (188 samples, 0.07%)</title><rect x="81.9504%" y="357" width="0.0683%" height="15" fill="rgb(242,27,53)" fg:x="225643" fg:w="188"/><text x="82.2004%" y="367.50"></text></g><g><title>&lt;alloc::vec::ExtendFunc&lt;F&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (212 samples, 0.08%)</title><rect x="81.9435%" y="469" width="0.0770%" height="15" fill="rgb(210,216,42)" fg:x="225624" fg:w="212"/><text x="82.1935%" y="479.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes::{{closure}} (212 samples, 0.08%)</title><rect x="81.9435%" y="453" width="0.0770%" height="15" fill="rgb(234,39,38)" fg:x="225624" fg:w="212"/><text x="82.1935%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (40 samples, 0.01%)</title><rect x="82.0208%" y="405" width="0.0145%" height="15" fill="rgb(235,126,54)" fg:x="225837" fg:w="40"/><text x="82.2708%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (40 samples, 0.01%)</title><rect x="82.0208%" y="389" width="0.0145%" height="15" fill="rgb(235,150,33)" fg:x="225837" fg:w="40"/><text x="82.2708%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (40 samples, 0.01%)</title><rect x="82.0208%" y="373" width="0.0145%" height="15" fill="rgb(249,49,53)" fg:x="225837" fg:w="40"/><text x="82.2708%" y="383.50"></text></g><g><title>alloc::alloc::realloc (40 samples, 0.01%)</title><rect x="82.0208%" y="357" width="0.0145%" height="15" fill="rgb(238,60,50)" fg:x="225837" fg:w="40"/><text x="82.2708%" y="367.50"></text></g><g><title>realloc (39 samples, 0.01%)</title><rect x="82.0212%" y="341" width="0.0142%" height="15" fill="rgb(210,5,2)" fg:x="225838" fg:w="39"/><text x="82.2712%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (266 samples, 0.10%)</title><rect x="81.9391%" y="501" width="0.0966%" height="15" fill="rgb(214,207,24)" fg:x="225612" fg:w="266"/><text x="82.1891%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (262 samples, 0.10%)</title><rect x="81.9406%" y="485" width="0.0952%" height="15" fill="rgb(228,173,2)" fg:x="225616" fg:w="262"/><text x="82.1906%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (42 samples, 0.02%)</title><rect x="82.0205%" y="469" width="0.0153%" height="15" fill="rgb(244,26,8)" fg:x="225836" fg:w="42"/><text x="82.2705%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (42 samples, 0.02%)</title><rect x="82.0205%" y="453" width="0.0153%" height="15" fill="rgb(249,153,35)" fg:x="225836" fg:w="42"/><text x="82.2705%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (41 samples, 0.01%)</title><rect x="82.0208%" y="437" width="0.0149%" height="15" fill="rgb(221,215,40)" fg:x="225837" fg:w="41"/><text x="82.2708%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (41 samples, 0.01%)</title><rect x="82.0208%" y="421" width="0.0149%" height="15" fill="rgb(238,106,35)" fg:x="225837" fg:w="41"/><text x="82.2708%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;usize,(alloc::sync::Arc&lt;zenoh::net::routing::face::FaceState&gt;,zenoh_protocol_core::key_expr::KeyExpr,core::option::Option&lt;zenoh_protocol::proto::msg::RoutingContext&gt;)&gt;&gt;&gt; (65 samples, 0.02%)</title><rect x="82.0474%" y="501" width="0.0236%" height="15" fill="rgb(207,195,21)" fg:x="225910" fg:w="65"/><text x="82.2974%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.02%)</title><rect x="82.0474%" y="485" width="0.0236%" height="15" fill="rgb(205,43,29)" fg:x="225910" fg:w="65"/><text x="82.2974%" y="495.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.01%)</title><rect x="82.0888%" y="485" width="0.0113%" height="15" fill="rgb(236,35,21)" fg:x="226024" fg:w="31"/><text x="82.3388%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (31 samples, 0.01%)</title><rect x="82.0888%" y="469" width="0.0113%" height="15" fill="rgb(244,74,8)" fg:x="226024" fg:w="31"/><text x="82.3388%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (31 samples, 0.01%)</title><rect x="82.0888%" y="453" width="0.0113%" height="15" fill="rgb(241,229,7)" fg:x="226024" fg:w="31"/><text x="82.3388%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (31 samples, 0.01%)</title><rect x="82.0888%" y="437" width="0.0113%" height="15" fill="rgb(212,223,25)" fg:x="226024" fg:w="31"/><text x="82.3388%" y="447.50"></text></g><g><title>alloc::str::join_generic_copy (41 samples, 0.01%)</title><rect x="82.1073%" y="437" width="0.0149%" height="15" fill="rgb(234,58,53)" fg:x="226075" fg:w="41"/><text x="82.3573%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (49 samples, 0.02%)</title><rect x="82.1055%" y="485" width="0.0178%" height="15" fill="rgb(244,36,1)" fg:x="226070" fg:w="49"/><text x="82.3555%" y="495.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (48 samples, 0.02%)</title><rect x="82.1058%" y="469" width="0.0174%" height="15" fill="rgb(222,40,54)" fg:x="226071" fg:w="48"/><text x="82.3558%" y="479.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (45 samples, 0.02%)</title><rect x="82.1069%" y="453" width="0.0163%" height="15" fill="rgb(210,207,39)" fg:x="226074" fg:w="45"/><text x="82.3569%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (28 samples, 0.01%)</title><rect x="82.1334%" y="485" width="0.0102%" height="15" fill="rgb(234,52,14)" fg:x="226147" fg:w="28"/><text x="82.3834%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (28 samples, 0.01%)</title><rect x="82.1334%" y="469" width="0.0102%" height="15" fill="rgb(239,108,46)" fg:x="226147" fg:w="28"/><text x="82.3834%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (28 samples, 0.01%)</title><rect x="82.1334%" y="453" width="0.0102%" height="15" fill="rgb(252,223,5)" fg:x="226147" fg:w="28"/><text x="82.3834%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="82.1334%" y="437" width="0.0102%" height="15" fill="rgb(227,181,11)" fg:x="226147" fg:w="28"/><text x="82.3834%" y="447.50"></text></g><g><title>alloc::str::join_generic_copy (47 samples, 0.02%)</title><rect x="82.1599%" y="421" width="0.0171%" height="15" fill="rgb(248,126,40)" fg:x="226220" fg:w="47"/><text x="82.4099%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (53 samples, 0.02%)</title><rect x="82.1599%" y="469" width="0.0192%" height="15" fill="rgb(243,1,18)" fg:x="226220" fg:w="53"/><text x="82.4099%" y="479.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (53 samples, 0.02%)</title><rect x="82.1599%" y="453" width="0.0192%" height="15" fill="rgb(214,145,23)" fg:x="226220" fg:w="53"/><text x="82.4099%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (53 samples, 0.02%)</title><rect x="82.1599%" y="437" width="0.0192%" height="15" fill="rgb(241,218,11)" fg:x="226220" fg:w="53"/><text x="82.4099%" y="447.50"></text></g><g><title>alloc::str::join_generic_copy (54 samples, 0.02%)</title><rect x="82.1908%" y="405" width="0.0196%" height="15" fill="rgb(214,219,24)" fg:x="226305" fg:w="54"/><text x="82.4408%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (60 samples, 0.02%)</title><rect x="82.1897%" y="453" width="0.0218%" height="15" fill="rgb(235,32,7)" fg:x="226302" fg:w="60"/><text x="82.4397%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (58 samples, 0.02%)</title><rect x="82.1904%" y="437" width="0.0211%" height="15" fill="rgb(227,121,28)" fg:x="226304" fg:w="58"/><text x="82.4404%" y="447.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (57 samples, 0.02%)</title><rect x="82.1908%" y="421" width="0.0207%" height="15" fill="rgb(216,129,49)" fg:x="226305" fg:w="57"/><text x="82.4408%" y="431.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (165 samples, 0.06%)</title><rect x="82.1549%" y="485" width="0.0599%" height="15" fill="rgb(207,194,50)" fg:x="226206" fg:w="165"/><text x="82.4049%" y="495.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (85 samples, 0.03%)</title><rect x="82.1839%" y="469" width="0.0309%" height="15" fill="rgb(207,4,18)" fg:x="226286" fg:w="85"/><text x="82.4339%" y="479.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (403 samples, 0.15%)</title><rect x="82.0717%" y="501" width="0.1464%" height="15" fill="rgb(213,50,30)" fg:x="225977" fg:w="403"/><text x="82.3217%" y="511.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (865 samples, 0.31%)</title><rect x="81.9043%" y="517" width="0.3142%" height="15" fill="rgb(208,77,22)" fg:x="225516" fg:w="865"/><text x="82.1543%" y="527.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (30 samples, 0.01%)</title><rect x="82.2504%" y="405" width="0.0109%" height="15" fill="rgb(244,204,34)" fg:x="226469" fg:w="30"/><text x="82.5004%" y="415.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (30 samples, 0.01%)</title><rect x="82.2504%" y="389" width="0.0109%" height="15" fill="rgb(230,20,17)" fg:x="226469" fg:w="30"/><text x="82.5004%" y="399.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (39 samples, 0.01%)</title><rect x="82.2478%" y="437" width="0.0142%" height="15" fill="rgb(237,83,15)" fg:x="226462" fg:w="39"/><text x="82.4978%" y="447.50"></text></g><g><title>zenoh::net::routing::pubsub::insert_faces_for_subs::{{closure}} (36 samples, 0.01%)</title><rect x="82.2489%" y="421" width="0.0131%" height="15" fill="rgb(221,109,25)" fg:x="226465" fg:w="36"/><text x="82.4989%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (28 samples, 0.01%)</title><rect x="82.2620%" y="437" width="0.0102%" height="15" fill="rgb(205,194,52)" fg:x="226501" fg:w="28"/><text x="82.5120%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (28 samples, 0.01%)</title><rect x="82.2620%" y="421" width="0.0102%" height="15" fill="rgb(244,173,54)" fg:x="226501" fg:w="28"/><text x="82.5120%" y="431.50"></text></g><g><title>zenoh::net::routing::pubsub::insert_faces_for_subs (86 samples, 0.03%)</title><rect x="82.2457%" y="453" width="0.0312%" height="15" fill="rgb(227,181,18)" fg:x="226456" fg:w="86"/><text x="82.4957%" y="463.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (174 samples, 0.06%)</title><rect x="82.2246%" y="485" width="0.0632%" height="15" fill="rgb(238,36,30)" fg:x="226398" fg:w="174"/><text x="82.4746%" y="495.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (140 samples, 0.05%)</title><rect x="82.2369%" y="469" width="0.0508%" height="15" fill="rgb(254,85,0)" fg:x="226432" fg:w="140"/><text x="82.4869%" y="479.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (28 samples, 0.01%)</title><rect x="82.2776%" y="453" width="0.0102%" height="15" fill="rgb(247,63,33)" fg:x="226544" fg:w="28"/><text x="82.5276%" y="463.50"></text></g><g><title>zenoh::net::routing::pubsub::insert_faces_for_subs (46 samples, 0.02%)</title><rect x="82.2983%" y="437" width="0.0167%" height="15" fill="rgb(220,7,54)" fg:x="226601" fg:w="46"/><text x="82.5483%" y="447.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (1,147 samples, 0.42%)</title><rect x="81.9032%" y="565" width="0.4166%" height="15" fill="rgb(238,227,21)" fg:x="225513" fg:w="1147"/><text x="82.1532%" y="575.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (1,147 samples, 0.42%)</title><rect x="81.9032%" y="549" width="0.4166%" height="15" fill="rgb(237,29,31)" fg:x="225513" fg:w="1147"/><text x="82.1532%" y="559.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (1,146 samples, 0.42%)</title><rect x="81.9035%" y="533" width="0.4162%" height="15" fill="rgb(211,21,50)" fg:x="225514" fg:w="1146"/><text x="82.1535%" y="543.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (279 samples, 0.10%)</title><rect x="82.2184%" y="517" width="0.1013%" height="15" fill="rgb(239,119,2)" fg:x="226381" fg:w="279"/><text x="82.4684%" y="527.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (262 samples, 0.10%)</title><rect x="82.2246%" y="501" width="0.0952%" height="15" fill="rgb(250,2,39)" fg:x="226398" fg:w="262"/><text x="82.4746%" y="511.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes_from (88 samples, 0.03%)</title><rect x="82.2878%" y="485" width="0.0320%" height="15" fill="rgb(244,46,53)" fg:x="226572" fg:w="88"/><text x="82.5378%" y="495.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_routes (88 samples, 0.03%)</title><rect x="82.2878%" y="469" width="0.0320%" height="15" fill="rgb(209,21,19)" fg:x="226572" fg:w="88"/><text x="82.5378%" y="479.50"></text></g><g><title>zenoh::net::routing::pubsub::compute_data_route (72 samples, 0.03%)</title><rect x="82.2936%" y="453" width="0.0261%" height="15" fill="rgb(236,145,4)" fg:x="226588" fg:w="72"/><text x="82.5436%" y="463.50"></text></g><g><title>zenoh::net::routing::pubsub::pubsub_tree_change (1,149 samples, 0.42%)</title><rect x="81.9028%" y="581" width="0.4173%" height="15" fill="rgb(220,133,36)" fg:x="225512" fg:w="1149"/><text x="82.1528%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.02%)</title><rect x="82.3550%" y="405" width="0.0196%" height="15" fill="rgb(244,18,3)" fg:x="226757" fg:w="54"/><text x="82.6050%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh::net::routing::resource::TargetQabl]&gt; (53 samples, 0.02%)</title><rect x="82.3553%" y="389" width="0.0192%" height="15" fill="rgb(232,171,48)" fg:x="226758" fg:w="53"/><text x="82.6053%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh::net::routing::resource::TargetQabl&gt; (40 samples, 0.01%)</title><rect x="82.3601%" y="373" width="0.0145%" height="15" fill="rgb(223,223,53)" fg:x="226771" fg:w="40"/><text x="82.6101%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::sync::Arc&lt;zenoh::net::routing::face::FaceState&gt;,zenoh_protocol_core::key_expr::KeyExpr,core::option::Option&lt;zenoh_protocol::proto::msg::RoutingContext&gt;)&gt; (40 samples, 0.01%)</title><rect x="82.3601%" y="357" width="0.0145%" height="15" fill="rgb(246,92,13)" fg:x="226771" fg:w="40"/><text x="82.6101%" y="367.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="82.3753%" y="325" width="0.0167%" height="15" fill="rgb(229,171,10)" fg:x="226813" fg:w="46"/><text x="82.6253%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (49 samples, 0.02%)</title><rect x="82.3749%" y="373" width="0.0178%" height="15" fill="rgb(213,131,26)" fg:x="226812" fg:w="49"/><text x="82.6249%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.02%)</title><rect x="82.3749%" y="357" width="0.0178%" height="15" fill="rgb(242,87,54)" fg:x="226812" fg:w="49"/><text x="82.6249%" y="367.50"></text></g><g><title>cfree (49 samples, 0.02%)</title><rect x="82.3749%" y="341" width="0.0178%" height="15" fill="rgb(237,21,35)" fg:x="226812" fg:w="49"/><text x="82.6249%" y="351.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (106 samples, 0.04%)</title><rect x="82.3546%" y="437" width="0.0385%" height="15" fill="rgb(253,13,47)" fg:x="226756" fg:w="106"/><text x="82.6046%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt; (105 samples, 0.04%)</title><rect x="82.3550%" y="421" width="0.0381%" height="15" fill="rgb(215,122,49)" fg:x="226757" fg:w="105"/><text x="82.6050%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt; (51 samples, 0.02%)</title><rect x="82.3746%" y="405" width="0.0185%" height="15" fill="rgb(209,179,30)" fg:x="226811" fg:w="51"/><text x="82.6246%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.02%)</title><rect x="82.3746%" y="389" width="0.0185%" height="15" fill="rgb(235,100,24)" fg:x="226811" fg:w="51"/><text x="82.6246%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (185 samples, 0.07%)</title><rect x="82.3346%" y="501" width="0.0672%" height="15" fill="rgb(209,67,24)" fg:x="226701" fg:w="185"/><text x="82.5846%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;]&gt; (179 samples, 0.07%)</title><rect x="82.3368%" y="485" width="0.0650%" height="15" fill="rgb(206,74,32)" fg:x="226707" fg:w="179"/><text x="82.5868%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt; (179 samples, 0.07%)</title><rect x="82.3368%" y="469" width="0.0650%" height="15" fill="rgb(212,45,25)" fg:x="226707" fg:w="179"/><text x="82.5868%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (179 samples, 0.07%)</title><rect x="82.3368%" y="453" width="0.0650%" height="15" fill="rgb(239,26,3)" fg:x="226707" fg:w="179"/><text x="82.5868%" y="463.50"></text></g><g><title>[libc.so.6] (65 samples, 0.02%)</title><rect x="82.4203%" y="341" width="0.0236%" height="15" fill="rgb(218,36,15)" fg:x="226937" fg:w="65"/><text x="82.6703%" y="351.50"></text></g><g><title>&lt;alloc::vec::ExtendFunc&lt;F&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (112 samples, 0.04%)</title><rect x="82.4040%" y="469" width="0.0407%" height="15" fill="rgb(206,108,24)" fg:x="226892" fg:w="112"/><text x="82.6540%" y="479.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes::{{closure}} (112 samples, 0.04%)</title><rect x="82.4040%" y="453" width="0.0407%" height="15" fill="rgb(234,204,42)" fg:x="226892" fg:w="112"/><text x="82.6540%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (112 samples, 0.04%)</title><rect x="82.4040%" y="437" width="0.0407%" height="15" fill="rgb(229,2,11)" fg:x="226892" fg:w="112"/><text x="82.6540%" y="447.50"></text></g><g><title>alloc::alloc::exchange_malloc (102 samples, 0.04%)</title><rect x="82.4076%" y="421" width="0.0370%" height="15" fill="rgb(221,20,48)" fg:x="226902" fg:w="102"/><text x="82.6576%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (102 samples, 0.04%)</title><rect x="82.4076%" y="405" width="0.0370%" height="15" fill="rgb(244,164,10)" fg:x="226902" fg:w="102"/><text x="82.6576%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (102 samples, 0.04%)</title><rect x="82.4076%" y="389" width="0.0370%" height="15" fill="rgb(243,229,2)" fg:x="226902" fg:w="102"/><text x="82.6576%" y="399.50"></text></g><g><title>alloc::alloc::alloc (101 samples, 0.04%)</title><rect x="82.4080%" y="373" width="0.0367%" height="15" fill="rgb(232,131,37)" fg:x="226903" fg:w="101"/><text x="82.6580%" y="383.50"></text></g><g><title>malloc (97 samples, 0.04%)</title><rect x="82.4094%" y="357" width="0.0352%" height="15" fill="rgb(217,156,11)" fg:x="226907" fg:w="97"/><text x="82.6594%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (35 samples, 0.01%)</title><rect x="82.4447%" y="469" width="0.0127%" height="15" fill="rgb(239,99,48)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 0.01%)</title><rect x="82.4447%" y="453" width="0.0127%" height="15" fill="rgb(231,209,9)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.01%)</title><rect x="82.4447%" y="437" width="0.0127%" height="15" fill="rgb(254,97,27)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.01%)</title><rect x="82.4447%" y="421" width="0.0127%" height="15" fill="rgb(223,151,38)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.01%)</title><rect x="82.4447%" y="405" width="0.0127%" height="15" fill="rgb(219,206,35)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (35 samples, 0.01%)</title><rect x="82.4447%" y="389" width="0.0127%" height="15" fill="rgb(216,130,31)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (35 samples, 0.01%)</title><rect x="82.4447%" y="373" width="0.0127%" height="15" fill="rgb(251,97,34)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="383.50"></text></g><g><title>alloc::alloc::realloc (35 samples, 0.01%)</title><rect x="82.4447%" y="357" width="0.0127%" height="15" fill="rgb(246,159,47)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="367.50"></text></g><g><title>realloc (35 samples, 0.01%)</title><rect x="82.4447%" y="341" width="0.0127%" height="15" fill="rgb(232,87,10)" fg:x="227004" fg:w="35"/><text x="82.6947%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (155 samples, 0.06%)</title><rect x="82.4018%" y="501" width="0.0563%" height="15" fill="rgb(249,1,37)" fg:x="226886" fg:w="155"/><text x="82.6518%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (155 samples, 0.06%)</title><rect x="82.4018%" y="485" width="0.0563%" height="15" fill="rgb(239,135,14)" fg:x="226886" fg:w="155"/><text x="82.6518%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (31 samples, 0.01%)</title><rect x="82.4581%" y="437" width="0.0113%" height="15" fill="rgb(253,116,46)" fg:x="227041" fg:w="31"/><text x="82.7081%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (30 samples, 0.01%)</title><rect x="82.4585%" y="421" width="0.0109%" height="15" fill="rgb(222,217,37)" fg:x="227042" fg:w="30"/><text x="82.7085%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (32 samples, 0.01%)</title><rect x="82.4581%" y="501" width="0.0116%" height="15" fill="rgb(252,96,8)" fg:x="227041" fg:w="32"/><text x="82.7081%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (32 samples, 0.01%)</title><rect x="82.4581%" y="485" width="0.0116%" height="15" fill="rgb(254,103,41)" fg:x="227041" fg:w="32"/><text x="82.7081%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.01%)</title><rect x="82.4581%" y="469" width="0.0116%" height="15" fill="rgb(218,213,19)" fg:x="227041" fg:w="32"/><text x="82.7081%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (32 samples, 0.01%)</title><rect x="82.4581%" y="453" width="0.0116%" height="15" fill="rgb(253,95,21)" fg:x="227041" fg:w="32"/><text x="82.7081%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="82.4817%" y="437" width="0.0113%" height="15" fill="rgb(229,26,28)" fg:x="227106" fg:w="31"/><text x="82.7317%" y="447.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (38 samples, 0.01%)</title><rect x="82.4803%" y="469" width="0.0138%" height="15" fill="rgb(230,129,16)" fg:x="227102" fg:w="38"/><text x="82.7303%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt; (34 samples, 0.01%)</title><rect x="82.4817%" y="453" width="0.0123%" height="15" fill="rgb(236,126,17)" fg:x="227106" fg:w="34"/><text x="82.7317%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;alloc::vec::Vec&lt;zenoh::net::routing::resource::TargetQabl&gt;&gt;&gt; (124 samples, 0.05%)</title><rect x="82.4701%" y="501" width="0.0450%" height="15" fill="rgb(209,33,33)" fg:x="227074" fg:w="124"/><text x="82.7201%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.05%)</title><rect x="82.4701%" y="485" width="0.0450%" height="15" fill="rgb(227,85,29)" fg:x="227074" fg:w="124"/><text x="82.7201%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (42 samples, 0.02%)</title><rect x="82.4999%" y="469" width="0.0153%" height="15" fill="rgb(241,53,46)" fg:x="227156" fg:w="42"/><text x="82.7499%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (42 samples, 0.02%)</title><rect x="82.4999%" y="453" width="0.0153%" height="15" fill="rgb(228,167,53)" fg:x="227156" fg:w="42"/><text x="82.7499%" y="463.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (32 samples, 0.01%)</title><rect x="82.5347%" y="485" width="0.0116%" height="15" fill="rgb(238,195,45)" fg:x="227252" fg:w="32"/><text x="82.7847%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (32 samples, 0.01%)</title><rect x="82.5347%" y="469" width="0.0116%" height="15" fill="rgb(252,124,45)" fg:x="227252" fg:w="32"/><text x="82.7847%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (32 samples, 0.01%)</title><rect x="82.5347%" y="453" width="0.0116%" height="15" fill="rgb(251,38,35)" fg:x="227252" fg:w="32"/><text x="82.7847%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (32 samples, 0.01%)</title><rect x="82.5347%" y="437" width="0.0116%" height="15" fill="rgb(227,33,2)" fg:x="227252" fg:w="32"/><text x="82.7847%" y="447.50"></text></g><g><title>alloc::str::join_generic_copy (29 samples, 0.01%)</title><rect x="82.5576%" y="437" width="0.0105%" height="15" fill="rgb(223,157,46)" fg:x="227315" fg:w="29"/><text x="82.8076%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (36 samples, 0.01%)</title><rect x="82.5565%" y="485" width="0.0131%" height="15" fill="rgb(222,78,41)" fg:x="227312" fg:w="36"/><text x="82.8065%" y="495.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (36 samples, 0.01%)</title><rect x="82.5565%" y="469" width="0.0131%" height="15" fill="rgb(248,176,11)" fg:x="227312" fg:w="36"/><text x="82.8065%" y="479.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (33 samples, 0.01%)</title><rect x="82.5576%" y="453" width="0.0120%" height="15" fill="rgb(241,221,18)" fg:x="227315" fg:w="33"/><text x="82.8076%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (28 samples, 0.01%)</title><rect x="82.5696%" y="485" width="0.0102%" height="15" fill="rgb(218,85,22)" fg:x="227348" fg:w="28"/><text x="82.8196%" y="495.50"></text></g><g><title>alloc::slice::merge_sort (28 samples, 0.01%)</title><rect x="82.5696%" y="469" width="0.0102%" height="15" fill="rgb(222,223,7)" fg:x="227348" fg:w="28"/><text x="82.8196%" y="479.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (80 samples, 0.03%)</title><rect x="82.5798%" y="485" width="0.0291%" height="15" fill="rgb(254,59,39)" fg:x="227376" fg:w="80"/><text x="82.8298%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (77 samples, 0.03%)</title><rect x="82.5809%" y="469" width="0.0280%" height="15" fill="rgb(247,100,27)" fg:x="227379" fg:w="77"/><text x="82.8309%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 0.03%)</title><rect x="82.5809%" y="453" width="0.0280%" height="15" fill="rgb(237,207,10)" fg:x="227379" fg:w="77"/><text x="82.8309%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (77 samples, 0.03%)</title><rect x="82.5809%" y="437" width="0.0280%" height="15" fill="rgb(220,121,28)" fg:x="227379" fg:w="77"/><text x="82.8309%" y="447.50"></text></g><g><title>alloc::alloc::alloc (77 samples, 0.03%)</title><rect x="82.5809%" y="421" width="0.0280%" height="15" fill="rgb(213,223,20)" fg:x="227379" fg:w="77"/><text x="82.8309%" y="431.50"></text></g><g><title>malloc (54 samples, 0.02%)</title><rect x="82.5892%" y="405" width="0.0196%" height="15" fill="rgb(205,121,27)" fg:x="227402" fg:w="54"/><text x="82.8392%" y="415.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (28 samples, 0.01%)</title><rect x="82.6088%" y="485" width="0.0102%" height="15" fill="rgb(253,24,53)" fg:x="227456" fg:w="28"/><text x="82.8588%" y="495.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="82.6542%" y="373" width="0.0109%" height="15" fill="rgb(224,224,47)" fg:x="227581" fg:w="30"/><text x="82.9042%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (103 samples, 0.04%)</title><rect x="82.6281%" y="421" width="0.0374%" height="15" fill="rgb(250,125,36)" fg:x="227509" fg:w="103"/><text x="82.8781%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (103 samples, 0.04%)</title><rect x="82.6281%" y="405" width="0.0374%" height="15" fill="rgb(240,144,38)" fg:x="227509" fg:w="103"/><text x="82.8781%" y="415.50"></text></g><g><title>cfree (91 samples, 0.03%)</title><rect x="82.6324%" y="389" width="0.0330%" height="15" fill="rgb(250,15,50)" fg:x="227521" fg:w="91"/><text x="82.8824%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (106 samples, 0.04%)</title><rect x="82.6281%" y="485" width="0.0385%" height="15" fill="rgb(210,24,26)" fg:x="227509" fg:w="106"/><text x="82.8781%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (106 samples, 0.04%)</title><rect x="82.6281%" y="469" width="0.0385%" height="15" fill="rgb(234,53,53)" fg:x="227509" fg:w="106"/><text x="82.8781%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (106 samples, 0.04%)</title><rect x="82.6281%" y="453" width="0.0385%" height="15" fill="rgb(208,108,28)" fg:x="227509" fg:w="106"/><text x="82.8781%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106 samples, 0.04%)</title><rect x="82.6281%" y="437" width="0.0385%" height="15" fill="rgb(227,143,7)" fg:x="227509" fg:w="106"/><text x="82.8781%" y="447.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (36 samples, 0.01%)</title><rect x="82.7160%" y="469" width="0.0131%" height="15" fill="rgb(238,189,38)" fg:x="227751" fg:w="36"/><text x="82.9660%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (36 samples, 0.01%)</title><rect x="82.7160%" y="453" width="0.0131%" height="15" fill="rgb(222,69,15)" fg:x="227751" fg:w="36"/><text x="82.9660%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (36 samples, 0.01%)</title><rect x="82.7160%" y="437" width="0.0131%" height="15" fill="rgb(213,169,7)" fg:x="227751" fg:w="36"/><text x="82.9660%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (36 samples, 0.01%)</title><rect x="82.7160%" y="421" width="0.0131%" height="15" fill="rgb(251,219,4)" fg:x="227751" fg:w="36"/><text x="82.9660%" y="431.50"></text></g><g><title>[unknown] (134 samples, 0.05%)</title><rect x="82.7726%" y="357" width="0.0487%" height="15" fill="rgb(241,55,40)" fg:x="227907" fg:w="134"/><text x="83.0226%" y="367.50"></text></g><g><title>[unknown] (130 samples, 0.05%)</title><rect x="82.7741%" y="341" width="0.0472%" height="15" fill="rgb(243,57,30)" fg:x="227911" fg:w="130"/><text x="83.0241%" y="351.50"></text></g><g><title>[unknown] (124 samples, 0.05%)</title><rect x="82.7763%" y="325" width="0.0450%" height="15" fill="rgb(234,50,30)" fg:x="227917" fg:w="124"/><text x="83.0263%" y="335.50"></text></g><g><title>[unknown] (118 samples, 0.04%)</title><rect x="82.7784%" y="309" width="0.0429%" height="15" fill="rgb(239,23,42)" fg:x="227923" fg:w="118"/><text x="83.0284%" y="319.50"></text></g><g><title>[unknown] (100 samples, 0.04%)</title><rect x="82.7850%" y="293" width="0.0363%" height="15" fill="rgb(217,38,19)" fg:x="227941" fg:w="100"/><text x="83.0350%" y="303.50"></text></g><g><title>[unknown] (70 samples, 0.03%)</title><rect x="82.7959%" y="277" width="0.0254%" height="15" fill="rgb(215,179,16)" fg:x="227971" fg:w="70"/><text x="83.0459%" y="287.50"></text></g><g><title>[unknown] (58 samples, 0.02%)</title><rect x="82.8002%" y="261" width="0.0211%" height="15" fill="rgb(254,21,37)" fg:x="227983" fg:w="58"/><text x="83.0502%" y="271.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="82.8046%" y="245" width="0.0167%" height="15" fill="rgb(219,207,48)" fg:x="227995" fg:w="46"/><text x="83.0546%" y="255.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="82.8086%" y="229" width="0.0127%" height="15" fill="rgb(227,225,41)" fg:x="228006" fg:w="35"/><text x="83.0586%" y="239.50"></text></g><g><title>[libc.so.6] (232 samples, 0.08%)</title><rect x="82.7701%" y="373" width="0.0843%" height="15" fill="rgb(223,130,1)" fg:x="227900" fg:w="232"/><text x="83.0201%" y="383.50"></text></g><g><title>__mprotect (91 samples, 0.03%)</title><rect x="82.8213%" y="357" width="0.0330%" height="15" fill="rgb(249,54,42)" fg:x="228041" fg:w="91"/><text x="83.0713%" y="367.50"></text></g><g><title>[unknown] (91 samples, 0.03%)</title><rect x="82.8213%" y="341" width="0.0330%" height="15" fill="rgb(248,69,25)" fg:x="228041" fg:w="91"/><text x="83.0713%" y="351.50"></text></g><g><title>[unknown] (79 samples, 0.03%)</title><rect x="82.8257%" y="325" width="0.0287%" height="15" fill="rgb(234,21,32)" fg:x="228053" fg:w="79"/><text x="83.0757%" y="335.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="82.8260%" y="309" width="0.0283%" height="15" fill="rgb(252,136,6)" fg:x="228054" fg:w="78"/><text x="83.0760%" y="319.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="82.8271%" y="293" width="0.0272%" height="15" fill="rgb(245,87,12)" fg:x="228057" fg:w="75"/><text x="83.0771%" y="303.50"></text></g><g><title>[unknown] (71 samples, 0.03%)</title><rect x="82.8286%" y="277" width="0.0258%" height="15" fill="rgb(208,12,15)" fg:x="228061" fg:w="71"/><text x="83.0786%" y="287.50"></text></g><g><title>[unknown] (60 samples, 0.02%)</title><rect x="82.8326%" y="261" width="0.0218%" height="15" fill="rgb(250,98,2)" fg:x="228072" fg:w="60"/><text x="83.0826%" y="271.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="82.8395%" y="245" width="0.0149%" height="15" fill="rgb(205,213,15)" fg:x="228091" fg:w="41"/><text x="83.0895%" y="255.50"></text></g><g><title>[libc.so.6] (280 samples, 0.10%)</title><rect x="82.7537%" y="389" width="0.1017%" height="15" fill="rgb(248,192,44)" fg:x="227855" fg:w="280"/><text x="83.0037%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (345 samples, 0.13%)</title><rect x="82.7385%" y="421" width="0.1253%" height="15" fill="rgb(221,89,17)" fg:x="227813" fg:w="345"/><text x="82.9885%" y="431.50"></text></g><g><title>malloc (333 samples, 0.12%)</title><rect x="82.7429%" y="405" width="0.1209%" height="15" fill="rgb(209,55,3)" fg:x="227825" fg:w="333"/><text x="82.9929%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (358 samples, 0.13%)</title><rect x="82.7349%" y="453" width="0.1300%" height="15" fill="rgb(247,23,45)" fg:x="227803" fg:w="358"/><text x="82.9849%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (352 samples, 0.13%)</title><rect x="82.7370%" y="437" width="0.1278%" height="15" fill="rgb(235,152,23)" fg:x="227809" fg:w="352"/><text x="82.9870%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (389 samples, 0.14%)</title><rect x="82.7341%" y="469" width="0.1413%" height="15" fill="rgb(244,63,13)" fg:x="227801" fg:w="389"/><text x="82.9841%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (36 samples, 0.01%)</title><rect x="82.8921%" y="341" width="0.0131%" height="15" fill="rgb(227,30,37)" fg:x="228236" fg:w="36"/><text x="83.1421%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (73 samples, 0.03%)</title><rect x="82.8841%" y="405" width="0.0265%" height="15" fill="rgb(224,49,42)" fg:x="228214" fg:w="73"/><text x="83.1341%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (73 samples, 0.03%)</title><rect x="82.8841%" y="389" width="0.0265%" height="15" fill="rgb(218,129,5)" fg:x="228214" fg:w="73"/><text x="83.1341%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (51 samples, 0.02%)</title><rect x="82.8921%" y="373" width="0.0185%" height="15" fill="rgb(240,199,54)" fg:x="228236" fg:w="51"/><text x="83.1421%" y="383.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::hash::Hash&gt;::hash (51 samples, 0.02%)</title><rect x="82.8921%" y="357" width="0.0185%" height="15" fill="rgb(234,31,13)" fg:x="228236" fg:w="51"/><text x="83.1421%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (28 samples, 0.01%)</title><rect x="82.9125%" y="357" width="0.0102%" height="15" fill="rgb(219,73,54)" fg:x="228292" fg:w="28"/><text x="83.1625%" y="367.50"></text></g><g><title>zenoh::net::routing::network::Network::get_idx (128 samples, 0.05%)</title><rect x="82.8841%" y="469" width="0.0465%" height="15" fill="rgb(251,162,10)" fg:x="228214" fg:w="128"/><text x="83.1341%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (128 samples, 0.05%)</title><rect x="82.8841%" y="453" width="0.0465%" height="15" fill="rgb(240,138,47)" fg:x="228214" fg:w="128"/><text x="83.1341%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (128 samples, 0.05%)</title><rect x="82.8841%" y="437" width="0.0465%" height="15" fill="rgb(216,138,26)" fg:x="228214" fg:w="128"/><text x="83.1341%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (128 samples, 0.05%)</title><rect x="82.8841%" y="421" width="0.0465%" height="15" fill="rgb(243,17,35)" fg:x="228214" fg:w="128"/><text x="83.1341%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (55 samples, 0.02%)</title><rect x="82.9106%" y="405" width="0.0200%" height="15" fill="rgb(241,60,18)" fg:x="228287" fg:w="55"/><text x="83.1606%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (55 samples, 0.02%)</title><rect x="82.9106%" y="389" width="0.0200%" height="15" fill="rgb(234,2,44)" fg:x="228287" fg:w="55"/><text x="83.1606%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (55 samples, 0.02%)</title><rect x="82.9106%" y="373" width="0.0200%" height="15" fill="rgb(225,225,33)" fg:x="228287" fg:w="55"/><text x="83.1606%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.01%)</title><rect x="82.9481%" y="389" width="0.0102%" height="15" fill="rgb(234,50,31)" fg:x="228390" fg:w="28"/><text x="83.1981%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28 samples, 0.01%)</title><rect x="82.9481%" y="373" width="0.0102%" height="15" fill="rgb(249,6,25)" fg:x="228390" fg:w="28"/><text x="83.1981%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (55 samples, 0.02%)</title><rect x="82.9477%" y="437" width="0.0200%" height="15" fill="rgb(241,5,17)" fg:x="228389" fg:w="55"/><text x="83.1977%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (55 samples, 0.02%)</title><rect x="82.9477%" y="421" width="0.0200%" height="15" fill="rgb(207,116,10)" fg:x="228389" fg:w="55"/><text x="83.1977%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (55 samples, 0.02%)</title><rect x="82.9477%" y="405" width="0.0200%" height="15" fill="rgb(222,128,18)" fg:x="228389" fg:w="55"/><text x="83.1977%" y="415.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (50 samples, 0.02%)</title><rect x="82.9677%" y="437" width="0.0182%" height="15" fill="rgb(229,109,25)" fg:x="228444" fg:w="50"/><text x="83.2177%" y="447.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (157 samples, 0.06%)</title><rect x="82.9306%" y="469" width="0.0570%" height="15" fill="rgb(222,102,25)" fg:x="228342" fg:w="157"/><text x="83.1806%" y="479.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (157 samples, 0.06%)</title><rect x="82.9306%" y="453" width="0.0570%" height="15" fill="rgb(239,211,5)" fg:x="228342" fg:w="157"/><text x="83.1806%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (116 samples, 0.04%)</title><rect x="82.9876%" y="453" width="0.0421%" height="15" fill="rgb(223,136,26)" fg:x="228499" fg:w="116"/><text x="83.2376%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (116 samples, 0.04%)</title><rect x="82.9876%" y="437" width="0.0421%" height="15" fill="rgb(227,30,15)" fg:x="228499" fg:w="116"/><text x="83.2376%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (106 samples, 0.04%)</title><rect x="82.9913%" y="421" width="0.0385%" height="15" fill="rgb(247,76,4)" fg:x="228509" fg:w="106"/><text x="83.2413%" y="431.50"></text></g><g><title>zenoh::net::routing::router::Tables::get_face::{{closure}} (106 samples, 0.04%)</title><rect x="82.9913%" y="405" width="0.0385%" height="15" fill="rgb(245,38,48)" fg:x="228509" fg:w="106"/><text x="83.2413%" y="415.50"></text></g><g><title>&lt;zenoh_protocol_core::PeerId as core::cmp::PartialEq&gt;::eq (106 samples, 0.04%)</title><rect x="82.9913%" y="389" width="0.0385%" height="15" fill="rgb(210,220,14)" fg:x="228509" fg:w="106"/><text x="83.2413%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (51 samples, 0.02%)</title><rect x="83.0112%" y="373" width="0.0185%" height="15" fill="rgb(224,60,51)" fg:x="228564" fg:w="51"/><text x="83.2612%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (51 samples, 0.02%)</title><rect x="83.0112%" y="357" width="0.0185%" height="15" fill="rgb(212,133,49)" fg:x="228564" fg:w="51"/><text x="83.2612%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (51 samples, 0.02%)</title><rect x="83.0112%" y="341" width="0.0185%" height="15" fill="rgb(231,39,22)" fg:x="228564" fg:w="51"/><text x="83.2612%" y="351.50"></text></g><g><title>[libc.so.6] (46 samples, 0.02%)</title><rect x="83.0131%" y="325" width="0.0167%" height="15" fill="rgb(236,173,22)" fg:x="228569" fg:w="46"/><text x="83.2631%" y="335.50"></text></g><g><title>zenoh::net::routing::router::Tables::get_face (118 samples, 0.04%)</title><rect x="82.9876%" y="469" width="0.0429%" height="15" fill="rgb(210,70,0)" fg:x="228499" fg:w="118"/><text x="83.2376%" y="479.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (991 samples, 0.36%)</title><rect x="82.6786%" y="485" width="0.3599%" height="15" fill="rgb(215,170,11)" fg:x="227648" fg:w="991"/><text x="82.9286%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (45 samples, 0.02%)</title><rect x="83.0654%" y="405" width="0.0163%" height="15" fill="rgb(220,154,28)" fg:x="228713" fg:w="45"/><text x="83.3154%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (45 samples, 0.02%)</title><rect x="83.0654%" y="389" width="0.0163%" height="15" fill="rgb(240,160,41)" fg:x="228713" fg:w="45"/><text x="83.3154%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45 samples, 0.02%)</title><rect x="83.0654%" y="373" width="0.0163%" height="15" fill="rgb(243,215,41)" fg:x="228713" fg:w="45"/><text x="83.3154%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (45 samples, 0.02%)</title><rect x="83.0654%" y="357" width="0.0163%" height="15" fill="rgb(214,208,31)" fg:x="228713" fg:w="45"/><text x="83.3154%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.02%)</title><rect x="83.0654%" y="341" width="0.0163%" height="15" fill="rgb(247,57,22)" fg:x="228713" fg:w="45"/><text x="83.3154%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.02%)</title><rect x="83.0654%" y="325" width="0.0163%" height="15" fill="rgb(228,73,52)" fg:x="228713" fg:w="45"/><text x="83.3154%" y="335.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.02%)</title><rect x="83.0657%" y="309" width="0.0160%" height="15" fill="rgb(252,60,9)" fg:x="228714" fg:w="44"/><text x="83.3157%" y="319.50"></text></g><g><title>malloc (42 samples, 0.02%)</title><rect x="83.0665%" y="293" width="0.0153%" height="15" fill="rgb(233,9,51)" fg:x="228716" fg:w="42"/><text x="83.3165%" y="303.50"></text></g><g><title>alloc::str::join_generic_copy (127 samples, 0.05%)</title><rect x="83.0479%" y="421" width="0.0461%" height="15" fill="rgb(223,67,14)" fg:x="228665" fg:w="127"/><text x="83.2979%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (145 samples, 0.05%)</title><rect x="83.0454%" y="469" width="0.0527%" height="15" fill="rgb(222,86,2)" fg:x="228658" fg:w="145"/><text x="83.2954%" y="479.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (145 samples, 0.05%)</title><rect x="83.0454%" y="453" width="0.0527%" height="15" fill="rgb(243,58,54)" fg:x="228658" fg:w="145"/><text x="83.2954%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (138 samples, 0.05%)</title><rect x="83.0479%" y="437" width="0.0501%" height="15" fill="rgb(210,200,39)" fg:x="228665" fg:w="138"/><text x="83.2979%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.01%)</title><rect x="83.1402%" y="325" width="0.0116%" height="15" fill="rgb(238,135,9)" fg:x="228919" fg:w="32"/><text x="83.3902%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.01%)</title><rect x="83.1402%" y="309" width="0.0116%" height="15" fill="rgb(232,179,7)" fg:x="228919" fg:w="32"/><text x="83.3902%" y="319.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.01%)</title><rect x="83.1402%" y="293" width="0.0116%" height="15" fill="rgb(245,65,41)" fg:x="228919" fg:w="32"/><text x="83.3902%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (40 samples, 0.01%)</title><rect x="83.1376%" y="389" width="0.0145%" height="15" fill="rgb(227,43,8)" fg:x="228912" fg:w="40"/><text x="83.3876%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (40 samples, 0.01%)</title><rect x="83.1376%" y="373" width="0.0145%" height="15" fill="rgb(235,91,14)" fg:x="228912" fg:w="40"/><text x="83.3876%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36 samples, 0.01%)</title><rect x="83.1391%" y="357" width="0.0131%" height="15" fill="rgb(235,219,31)" fg:x="228916" fg:w="36"/><text x="83.3891%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (36 samples, 0.01%)</title><rect x="83.1391%" y="341" width="0.0131%" height="15" fill="rgb(227,121,25)" fg:x="228916" fg:w="36"/><text x="83.3891%" y="351.50"></text></g><g><title>alloc::str::join_generic_copy (127 samples, 0.05%)</title><rect x="83.1198%" y="405" width="0.0461%" height="15" fill="rgb(254,129,24)" fg:x="228863" fg:w="127"/><text x="83.3698%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (148 samples, 0.05%)</title><rect x="83.1162%" y="453" width="0.0538%" height="15" fill="rgb(226,144,49)" fg:x="228853" fg:w="148"/><text x="83.3662%" y="463.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Concat&lt;str&gt; for [S]&gt;::concat (146 samples, 0.05%)</title><rect x="83.1169%" y="437" width="0.0530%" height="15" fill="rgb(214,187,32)" fg:x="228855" fg:w="146"/><text x="83.3669%" y="447.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (138 samples, 0.05%)</title><rect x="83.1198%" y="421" width="0.0501%" height="15" fill="rgb(243,129,46)" fg:x="228863" fg:w="138"/><text x="83.3698%" y="431.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (396 samples, 0.14%)</title><rect x="83.0385%" y="485" width="0.1438%" height="15" fill="rgb(221,185,35)" fg:x="228639" fg:w="396"/><text x="83.2885%" y="495.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (209 samples, 0.08%)</title><rect x="83.1064%" y="469" width="0.0759%" height="15" fill="rgb(205,0,32)" fg:x="228826" fg:w="209"/><text x="83.3564%" y="479.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (34 samples, 0.01%)</title><rect x="83.1700%" y="453" width="0.0123%" height="15" fill="rgb(229,179,12)" fg:x="229001" fg:w="34"/><text x="83.4200%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (45 samples, 0.02%)</title><rect x="83.1987%" y="405" width="0.0163%" height="15" fill="rgb(252,107,19)" fg:x="229080" fg:w="45"/><text x="83.4487%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45 samples, 0.02%)</title><rect x="83.1987%" y="389" width="0.0163%" height="15" fill="rgb(220,95,27)" fg:x="229080" fg:w="45"/><text x="83.4487%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (63 samples, 0.02%)</title><rect x="83.1979%" y="453" width="0.0229%" height="15" fill="rgb(240,113,40)" fg:x="229078" fg:w="63"/><text x="83.4479%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (63 samples, 0.02%)</title><rect x="83.1979%" y="437" width="0.0229%" height="15" fill="rgb(208,4,43)" fg:x="229078" fg:w="63"/><text x="83.4479%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (63 samples, 0.02%)</title><rect x="83.1979%" y="421" width="0.0229%" height="15" fill="rgb(247,189,30)" fg:x="229078" fg:w="63"/><text x="83.4479%" y="431.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key (109 samples, 0.04%)</title><rect x="83.1823%" y="485" width="0.0396%" height="15" fill="rgb(231,157,17)" fg:x="229035" fg:w="109"/><text x="83.4323%" y="495.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_best_key::get_best_key_ (102 samples, 0.04%)</title><rect x="83.1849%" y="469" width="0.0370%" height="15" fill="rgb(224,139,6)" fg:x="229042" fg:w="102"/><text x="83.4349%" y="479.50"></text></g><g><title>zenoh::net::routing::resource::Resource::get_resource (30 samples, 0.01%)</title><rect x="83.2219%" y="485" width="0.0109%" height="15" fill="rgb(223,83,16)" fg:x="229144" fg:w="30"/><text x="83.4719%" y="495.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (112 samples, 0.04%)</title><rect x="83.2557%" y="453" width="0.0407%" height="15" fill="rgb(232,211,20)" fg:x="229237" fg:w="112"/><text x="83.5057%" y="463.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (2,174 samples, 0.79%)</title><rect x="82.5170%" y="501" width="0.7896%" height="15" fill="rgb(225,203,35)" fg:x="227203" fg:w="2174"/><text x="82.7670%" y="511.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (203 samples, 0.07%)</title><rect x="83.2328%" y="485" width="0.0737%" height="15" fill="rgb(215,211,44)" fg:x="229174" fg:w="203"/><text x="83.4828%" y="495.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (203 samples, 0.07%)</title><rect x="83.2328%" y="469" width="0.0737%" height="15" fill="rgb(248,213,26)" fg:x="229174" fg:w="203"/><text x="83.4828%" y="479.50"></text></g><g><title>zenoh_protocol_core::key_expr::wild (28 samples, 0.01%)</title><rect x="83.2963%" y="453" width="0.0102%" height="15" fill="rgb(214,23,52)" fg:x="229349" fg:w="28"/><text x="83.5463%" y="463.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (2,715 samples, 0.99%)</title><rect x="82.3208%" y="517" width="0.9861%" height="15" fill="rgb(225,173,50)" fg:x="226663" fg:w="2715"/><text x="82.5708%" y="527.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (108 samples, 0.04%)</title><rect x="83.3069%" y="501" width="0.0392%" height="15" fill="rgb(206,150,22)" fg:x="229378" fg:w="108"/><text x="83.5569%" y="511.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (82 samples, 0.03%)</title><rect x="83.3163%" y="485" width="0.0298%" height="15" fill="rgb(239,64,23)" fg:x="229404" fg:w="82"/><text x="83.5663%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::insert_target_for_qabls (31 samples, 0.01%)</title><rect x="83.3610%" y="453" width="0.0113%" height="15" fill="rgb(242,50,38)" fg:x="229527" fg:w="31"/><text x="83.6110%" y="463.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (66 samples, 0.02%)</title><rect x="83.3726%" y="453" width="0.0240%" height="15" fill="rgb(217,91,15)" fg:x="229559" fg:w="66"/><text x="83.6226%" y="463.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (54 samples, 0.02%)</title><rect x="83.3770%" y="437" width="0.0196%" height="15" fill="rgb(230,172,6)" fg:x="229571" fg:w="54"/><text x="83.6270%" y="447.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (43 samples, 0.02%)</title><rect x="83.3810%" y="421" width="0.0156%" height="15" fill="rgb(221,98,26)" fg:x="229582" fg:w="43"/><text x="83.6310%" y="431.50"></text></g><g><title>zenoh_protocol_core::key_expr::chunk_include (42 samples, 0.02%)</title><rect x="83.4078%" y="421" width="0.0153%" height="15" fill="rgb(227,210,45)" fg:x="229656" fg:w="42"/><text x="83.6578%" y="431.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (216 samples, 0.08%)</title><rect x="83.3461%" y="485" width="0.0784%" height="15" fill="rgb(206,8,30)" fg:x="229486" fg:w="216"/><text x="83.5961%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (191 samples, 0.07%)</title><rect x="83.3552%" y="469" width="0.0694%" height="15" fill="rgb(241,219,17)" fg:x="229511" fg:w="191"/><text x="83.6052%" y="479.50"></text></g><g><title>zenoh_protocol_core::key_expr::include (64 samples, 0.02%)</title><rect x="83.4013%" y="453" width="0.0232%" height="15" fill="rgb(247,121,29)" fg:x="229638" fg:w="64"/><text x="83.6513%" y="463.50"></text></g><g><title>zenoh_protocol_core::key_expr::res_include (64 samples, 0.02%)</title><rect x="83.4013%" y="437" width="0.0232%" height="15" fill="rgb(219,169,49)" fg:x="229638" fg:w="64"/><text x="83.6513%" y="447.50"></text></g><g><title>zenoh::net::routing::resource::Resource::expr (28 samples, 0.01%)</title><rect x="83.4416%" y="437" width="0.0102%" height="15" fill="rgb(253,49,49)" fg:x="229749" fg:w="28"/><text x="83.6916%" y="447.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (3,144 samples, 1.14%)</title><rect x="82.3208%" y="565" width="1.1419%" height="15" fill="rgb(217,178,3)" fg:x="226663" fg:w="3144"/><text x="82.5708%" y="575.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (3,144 samples, 1.14%)</title><rect x="82.3208%" y="549" width="1.1419%" height="15" fill="rgb(234,73,37)" fg:x="226663" fg:w="3144"/><text x="82.5708%" y="559.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (3,144 samples, 1.14%)</title><rect x="82.3208%" y="533" width="1.1419%" height="15" fill="rgb(250,98,22)" fg:x="226663" fg:w="3144"/><text x="82.5708%" y="543.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (429 samples, 0.16%)</title><rect x="83.3069%" y="517" width="0.1558%" height="15" fill="rgb(220,108,37)" fg:x="229378" fg:w="429"/><text x="83.5569%" y="527.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (321 samples, 0.12%)</title><rect x="83.3461%" y="501" width="0.1166%" height="15" fill="rgb(225,168,10)" fg:x="229486" fg:w="321"/><text x="83.5961%" y="511.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes_from (105 samples, 0.04%)</title><rect x="83.4246%" y="485" width="0.0381%" height="15" fill="rgb(247,215,21)" fg:x="229702" fg:w="105"/><text x="83.6746%" y="495.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_routes (105 samples, 0.04%)</title><rect x="83.4246%" y="469" width="0.0381%" height="15" fill="rgb(253,189,31)" fg:x="229702" fg:w="105"/><text x="83.6746%" y="479.50"></text></g><g><title>zenoh::net::routing::queries::compute_query_route (94 samples, 0.03%)</title><rect x="83.4285%" y="453" width="0.0341%" height="15" fill="rgb(241,54,22)" fg:x="229713" fg:w="94"/><text x="83.6785%" y="463.50"></text></g><g><title>zenoh::net::routing::router::Tables::schedule_compute_trees::{{closure}} (5,809 samples, 2.11%)</title><rect x="81.3566%" y="597" width="2.1097%" height="15" fill="rgb(211,87,4)" fg:x="224008" fg:w="5809"/><text x="81.6066%" y="607.50">z..</text></g><g><title>zenoh::net::routing::queries::queries_tree_change (3,156 samples, 1.15%)</title><rect x="82.3201%" y="581" width="1.1462%" height="15" fill="rgb(245,112,24)" fg:x="226661" fg:w="3156"/><text x="82.5701%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (33 samples, 0.01%)</title><rect x="83.4976%" y="501" width="0.0120%" height="15" fill="rgb(235,190,41)" fg:x="229903" fg:w="33"/><text x="83.7476%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;dyn core::ops::function::Fn&lt;(&amp;str,&amp;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;,&amp;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;)&gt;+Output = core::result::Result&lt;core::option::Option&lt;serde_json::map::Map&lt;alloc::string::String,serde_json::value::Value&gt;&gt;,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Sync+core::marker::Send&gt; (33 samples, 0.01%)</title><rect x="83.4976%" y="485" width="0.0120%" height="15" fill="rgb(214,89,8)" fg:x="229903" fg:w="33"/><text x="83.7476%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_tcp::unicast::LinkUnicastTcp&gt; (33 samples, 0.01%)</title><rect x="83.4976%" y="469" width="0.0120%" height="15" fill="rgb(249,155,35)" fg:x="229903" fg:w="33"/><text x="83.7476%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_link_commons::LinkUnicast&gt; (36 samples, 0.01%)</title><rect x="83.4976%" y="549" width="0.0131%" height="15" fill="rgb(249,88,26)" fg:x="229903" fg:w="36"/><text x="83.7476%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn zenoh_link_commons::LinkUnicastTrait&gt;&gt; (36 samples, 0.01%)</title><rect x="83.4976%" y="533" width="0.0131%" height="15" fill="rgb(232,56,8)" fg:x="229903" fg:w="36"/><text x="83.7476%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="83.4976%" y="517" width="0.0131%" height="15" fill="rgb(240,95,3)" fg:x="229903" fg:w="36"/><text x="83.7476%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (122 samples, 0.04%)</title><rect x="83.4670%" y="581" width="0.0443%" height="15" fill="rgb(222,44,28)" fg:x="229819" fg:w="122"/><text x="83.7170%" y="591.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}} (117 samples, 0.04%)</title><rect x="83.4689%" y="565" width="0.0425%" height="15" fill="rgb(234,16,30)" fg:x="229824" fg:w="117"/><text x="83.7189%" y="575.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,357 samples, 2.31%)</title><rect x="81.2160%" y="629" width="2.3088%" height="15" fill="rgb(223,26,17)" fg:x="223621" fg:w="6357"/><text x="81.4660%" y="639.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,357 samples, 2.31%)</title><rect x="81.2160%" y="613" width="2.3088%" height="15" fill="rgb(239,187,47)" fg:x="223621" fg:w="6357"/><text x="81.4660%" y="623.50">&lt;..</text></g><g><title>zenoh_transport::manager::TransportManager::new::{{closure}} (161 samples, 0.06%)</title><rect x="83.4663%" y="597" width="0.0585%" height="15" fill="rgb(247,102,50)" fg:x="229817" fg:w="161"/><text x="83.7163%" y="607.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,362 samples, 2.31%)</title><rect x="81.2149%" y="709" width="2.3106%" height="15" fill="rgb(231,216,22)" fg:x="223618" fg:w="6362"/><text x="81.4649%" y="719.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,362 samples, 2.31%)</title><rect x="81.2149%" y="693" width="2.3106%" height="15" fill="rgb(216,201,26)" fg:x="223618" fg:w="6362"/><text x="81.4649%" y="703.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,362 samples, 2.31%)</title><rect x="81.2149%" y="677" width="2.3106%" height="15" fill="rgb(214,186,23)" fg:x="223618" fg:w="6362"/><text x="81.4649%" y="687.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,362 samples, 2.31%)</title><rect x="81.2149%" y="661" width="2.3106%" height="15" fill="rgb(235,184,4)" fg:x="223618" fg:w="6362"/><text x="81.4649%" y="671.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,359 samples, 2.31%)</title><rect x="81.2160%" y="645" width="2.3095%" height="15" fill="rgb(244,46,17)" fg:x="223621" fg:w="6359"/><text x="81.4660%" y="655.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6,394 samples, 2.32%)</title><rect x="81.2138%" y="741" width="2.3222%" height="15" fill="rgb(248,74,46)" fg:x="223615" fg:w="6394"/><text x="81.4638%" y="751.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (6,393 samples, 2.32%)</title><rect x="81.2142%" y="725" width="2.3218%" height="15" fill="rgb(243,79,5)" fg:x="223616" fg:w="6393"/><text x="81.4642%" y="735.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::router::Tables::schedule_compute_trees::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (29 samples, 0.01%)</title><rect x="83.5255%" y="709" width="0.0105%" height="15" fill="rgb(213,148,1)" fg:x="229980" fg:w="29"/><text x="83.7755%" y="719.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (31 samples, 0.01%)</title><rect x="83.6094%" y="501" width="0.0113%" height="15" fill="rgb(221,30,0)" fg:x="230211" fg:w="31"/><text x="83.8594%" y="511.50"></text></g><g><title>[libc.so.6] (30 samples, 0.01%)</title><rect x="83.6098%" y="485" width="0.0109%" height="15" fill="rgb(207,85,29)" fg:x="230212" fg:w="30"/><text x="83.8598%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (41 samples, 0.01%)</title><rect x="83.6483%" y="405" width="0.0149%" height="15" fill="rgb(239,31,46)" fg:x="230318" fg:w="41"/><text x="83.8983%" y="415.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,160 samples, 0.42%)</title><rect x="83.6919%" y="293" width="0.4213%" height="15" fill="rgb(219,6,1)" fg:x="230438" fg:w="1160"/><text x="83.9419%" y="303.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1,157 samples, 0.42%)</title><rect x="83.6929%" y="277" width="0.4202%" height="15" fill="rgb(229,90,29)" fg:x="230441" fg:w="1157"/><text x="83.9429%" y="287.50"></text></g><g><title>std::sys::unix::net::Socket::read (1,157 samples, 0.42%)</title><rect x="83.6929%" y="261" width="0.4202%" height="15" fill="rgb(242,201,42)" fg:x="230441" fg:w="1157"/><text x="83.9429%" y="271.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1,157 samples, 0.42%)</title><rect x="83.6929%" y="245" width="0.4202%" height="15" fill="rgb(243,80,54)" fg:x="230441" fg:w="1157"/><text x="83.9429%" y="255.50"></text></g><g><title>recv (1,156 samples, 0.42%)</title><rect x="83.6933%" y="229" width="0.4198%" height="15" fill="rgb(223,166,15)" fg:x="230442" fg:w="1156"/><text x="83.9433%" y="239.50"></text></g><g><title>[unknown] (1,117 samples, 0.41%)</title><rect x="83.7075%" y="213" width="0.4057%" height="15" fill="rgb(238,78,27)" fg:x="230481" fg:w="1117"/><text x="83.9575%" y="223.50"></text></g><g><title>[unknown] (1,097 samples, 0.40%)</title><rect x="83.7147%" y="197" width="0.3984%" height="15" fill="rgb(235,28,43)" fg:x="230501" fg:w="1097"/><text x="83.9647%" y="207.50"></text></g><g><title>[unknown] (1,091 samples, 0.40%)</title><rect x="83.7169%" y="181" width="0.3962%" height="15" fill="rgb(240,210,28)" fg:x="230507" fg:w="1091"/><text x="83.9669%" y="191.50"></text></g><g><title>[unknown] (1,058 samples, 0.38%)</title><rect x="83.7289%" y="165" width="0.3843%" height="15" fill="rgb(253,6,46)" fg:x="230540" fg:w="1058"/><text x="83.9789%" y="175.50"></text></g><g><title>[unknown] (933 samples, 0.34%)</title><rect x="83.7743%" y="149" width="0.3389%" height="15" fill="rgb(250,159,47)" fg:x="230665" fg:w="933"/><text x="84.0243%" y="159.50"></text></g><g><title>[unknown] (843 samples, 0.31%)</title><rect x="83.8070%" y="133" width="0.3062%" height="15" fill="rgb(216,139,2)" fg:x="230755" fg:w="843"/><text x="84.0570%" y="143.50"></text></g><g><title>[unknown] (623 samples, 0.23%)</title><rect x="83.8869%" y="117" width="0.2263%" height="15" fill="rgb(221,124,44)" fg:x="230975" fg:w="623"/><text x="84.1369%" y="127.50"></text></g><g><title>[unknown] (503 samples, 0.18%)</title><rect x="83.9305%" y="101" width="0.1827%" height="15" fill="rgb(205,37,22)" fg:x="231095" fg:w="503"/><text x="84.1805%" y="111.50"></text></g><g><title>[unknown] (450 samples, 0.16%)</title><rect x="83.9497%" y="85" width="0.1634%" height="15" fill="rgb(250,55,8)" fg:x="231148" fg:w="450"/><text x="84.1997%" y="95.50"></text></g><g><title>[unknown] (279 samples, 0.10%)</title><rect x="84.0118%" y="69" width="0.1013%" height="15" fill="rgb(215,83,48)" fg:x="231319" fg:w="279"/><text x="84.2618%" y="79.50"></text></g><g><title>[unknown] (261 samples, 0.09%)</title><rect x="84.0184%" y="53" width="0.0948%" height="15" fill="rgb(253,2,32)" fg:x="231337" fg:w="261"/><text x="84.2684%" y="63.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="84.0983%" y="37" width="0.0149%" height="15" fill="rgb(236,67,28)" fg:x="231557" fg:w="41"/><text x="84.3483%" y="47.50"></text></g><g><title>async_io::Async&lt;T&gt;::get_ref (35 samples, 0.01%)</title><rect x="84.1132%" y="293" width="0.0127%" height="15" fill="rgb(252,55,15)" fg:x="231598" fg:w="35"/><text x="84.3632%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (35 samples, 0.01%)</title><rect x="84.1132%" y="277" width="0.0127%" height="15" fill="rgb(243,173,17)" fg:x="231598" fg:w="35"/><text x="84.3632%" y="287.50"></text></g><g><title>&lt;&amp;async_io::Async&lt;T&gt; as futures_io::if_std::AsyncRead&gt;::poll_read (1,226 samples, 0.45%)</title><rect x="83.6875%" y="309" width="0.4453%" height="15" fill="rgb(215,212,13)" fg:x="230426" fg:w="1226"/><text x="83.9375%" y="319.50"></text></g><g><title>&lt;&amp;mut T as futures_io::if_std::AsyncRead&gt;::poll_read (1,292 samples, 0.47%)</title><rect x="83.6813%" y="341" width="0.4692%" height="15" fill="rgb(253,176,6)" fg:x="230409" fg:w="1292"/><text x="83.9313%" y="351.50"></text></g><g><title>&lt;&amp;async_std::net::tcp::stream::TcpStream as futures_io::if_std::AsyncRead&gt;::poll_read (1,292 samples, 0.47%)</title><rect x="83.6813%" y="325" width="0.4692%" height="15" fill="rgb(236,105,26)" fg:x="230409" fg:w="1292"/><text x="83.9313%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (49 samples, 0.02%)</title><rect x="84.1328%" y="309" width="0.0178%" height="15" fill="rgb(239,226,32)" fg:x="231652" fg:w="49"/><text x="84.3828%" y="319.50"></text></g><g><title>&lt;async_std::io::read::read_exact::ReadExactFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,294 samples, 0.47%)</title><rect x="83.6810%" y="357" width="0.4700%" height="15" fill="rgb(236,104,51)" fg:x="230408" fg:w="1294"/><text x="83.9310%" y="367.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,345 samples, 0.49%)</title><rect x="83.6632%" y="405" width="0.4885%" height="15" fill="rgb(220,172,33)" fg:x="230359" fg:w="1345"/><text x="83.9132%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,345 samples, 0.49%)</title><rect x="83.6632%" y="389" width="0.4885%" height="15" fill="rgb(224,182,25)" fg:x="230359" fg:w="1345"/><text x="83.9132%" y="399.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact::{{closure}} (1,324 samples, 0.48%)</title><rect x="83.6708%" y="373" width="0.4809%" height="15" fill="rgb(236,184,24)" fg:x="230380" fg:w="1324"/><text x="83.9208%" y="383.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkUnicastTcp as zenoh_link_commons::LinkUnicastTrait&gt;::read_exact (85 samples, 0.03%)</title><rect x="84.1517%" y="405" width="0.0309%" height="15" fill="rgb(241,221,14)" fg:x="231704" fg:w="85"/><text x="84.4017%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (71 samples, 0.03%)</title><rect x="84.1567%" y="389" width="0.0258%" height="15" fill="rgb(227,146,5)" fg:x="231718" fg:w="71"/><text x="84.4067%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (70 samples, 0.03%)</title><rect x="84.1571%" y="373" width="0.0254%" height="15" fill="rgb(214,15,23)" fg:x="231719" fg:w="70"/><text x="84.4071%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (70 samples, 0.03%)</title><rect x="84.1571%" y="357" width="0.0254%" height="15" fill="rgb(233,157,31)" fg:x="231719" fg:w="70"/><text x="84.4071%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (70 samples, 0.03%)</title><rect x="84.1571%" y="341" width="0.0254%" height="15" fill="rgb(211,27,52)" fg:x="231719" fg:w="70"/><text x="84.4071%" y="351.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 0.03%)</title><rect x="84.1571%" y="325" width="0.0254%" height="15" fill="rgb(212,223,15)" fg:x="231719" fg:w="70"/><text x="84.4071%" y="335.50"></text></g><g><title>malloc (63 samples, 0.02%)</title><rect x="84.1596%" y="309" width="0.0229%" height="15" fill="rgb(254,211,0)" fg:x="231726" fg:w="63"/><text x="84.4096%" y="319.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}}::read::{{closure}} (1,508 samples, 0.55%)</title><rect x="83.6406%" y="421" width="0.5477%" height="15" fill="rgb(205,43,38)" fg:x="230297" fg:w="1508"/><text x="83.8906%" y="431.50"></text></g><g><title>&lt;async_std::future::maybe_done::MaybeDone&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,535 samples, 0.56%)</title><rect x="83.6312%" y="453" width="0.5575%" height="15" fill="rgb(242,206,46)" fg:x="230271" fg:w="1535"/><text x="83.8812%" y="463.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,529 samples, 0.56%)</title><rect x="83.6334%" y="437" width="0.5553%" height="15" fill="rgb(220,221,12)" fg:x="230277" fg:w="1529"/><text x="83.8834%" y="447.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,549 samples, 0.56%)</title><rect x="83.6312%" y="469" width="0.5626%" height="15" fill="rgb(217,156,35)" fg:x="230271" fg:w="1549"/><text x="83.8812%" y="479.50"></text></g><g><title>&lt;async_std::future::future::race::Race&lt;L,R&gt; as core::future::future::Future&gt;::poll (1,555 samples, 0.56%)</title><rect x="83.6298%" y="485" width="0.5648%" height="15" fill="rgb(207,181,49)" fg:x="230267" fg:w="1555"/><text x="83.8798%" y="495.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (1,570 samples, 0.57%)</title><rect x="83.6247%" y="501" width="0.5702%" height="15" fill="rgb(235,103,47)" fg:x="230253" fg:w="1570"/><text x="83.8747%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::read_byte (33 samples, 0.01%)</title><rect x="84.2897%" y="453" width="0.0120%" height="15" fill="rgb(222,63,28)" fg:x="232084" fg:w="33"/><text x="84.5397%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.01%)</title><rect x="84.3223%" y="437" width="0.0113%" height="15" fill="rgb(244,137,21)" fg:x="232174" fg:w="31"/><text x="84.5723%" y="447.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="84.3703%" y="309" width="0.0113%" height="15" fill="rgb(228,35,27)" fg:x="232306" fg:w="31"/><text x="84.6203%" y="319.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_link_state_list (184 samples, 0.07%)</title><rect x="84.3154%" y="453" width="0.0668%" height="15" fill="rgb(226,191,41)" fg:x="232155" fg:w="184"/><text x="84.5654%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (87 samples, 0.03%)</title><rect x="84.3507%" y="437" width="0.0316%" height="15" fill="rgb(210,154,3)" fg:x="232252" fg:w="87"/><text x="84.6007%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (87 samples, 0.03%)</title><rect x="84.3507%" y="421" width="0.0316%" height="15" fill="rgb(216,60,49)" fg:x="232252" fg:w="87"/><text x="84.6007%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (86 samples, 0.03%)</title><rect x="84.3510%" y="405" width="0.0312%" height="15" fill="rgb(226,17,20)" fg:x="232253" fg:w="86"/><text x="84.6010%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (85 samples, 0.03%)</title><rect x="84.3514%" y="389" width="0.0309%" height="15" fill="rgb(206,115,35)" fg:x="232254" fg:w="85"/><text x="84.6014%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84 samples, 0.03%)</title><rect x="84.3518%" y="373" width="0.0305%" height="15" fill="rgb(227,88,1)" fg:x="232255" fg:w="84"/><text x="84.6018%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84 samples, 0.03%)</title><rect x="84.3518%" y="357" width="0.0305%" height="15" fill="rgb(230,222,24)" fg:x="232255" fg:w="84"/><text x="84.6018%" y="367.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.03%)</title><rect x="84.3521%" y="341" width="0.0301%" height="15" fill="rgb(214,124,32)" fg:x="232256" fg:w="83"/><text x="84.6021%" y="351.50"></text></g><g><title>malloc (81 samples, 0.03%)</title><rect x="84.3529%" y="325" width="0.0294%" height="15" fill="rgb(240,41,36)" fg:x="232258" fg:w="81"/><text x="84.6029%" y="335.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_zenoh_message (389 samples, 0.14%)</title><rect x="84.2537%" y="469" width="0.1413%" height="15" fill="rgb(221,17,52)" fg:x="231985" fg:w="389"/><text x="84.5037%" y="479.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="84.3845%" y="453" width="0.0105%" height="15" fill="rgb(252,70,16)" fg:x="232345" fg:w="29"/><text x="84.6345%" y="463.50"></text></g><g><title>[libc.so.6] (45 samples, 0.02%)</title><rect x="84.3950%" y="469" width="0.0163%" height="15" fill="rgb(250,177,4)" fg:x="232374" fg:w="45"/><text x="84.6450%" y="479.50"></text></g><g><title>[libc.so.6] (43 samples, 0.02%)</title><rect x="84.4538%" y="309" width="0.0156%" height="15" fill="rgb(240,188,47)" fg:x="232536" fg:w="43"/><text x="84.7038%" y="319.50"></text></g><g><title>[libc.so.6] (135 samples, 0.05%)</title><rect x="84.4230%" y="325" width="0.0490%" height="15" fill="rgb(215,92,12)" fg:x="232451" fg:w="135"/><text x="84.6730%" y="335.50"></text></g><g><title>[libc.so.6] (146 samples, 0.05%)</title><rect x="84.4208%" y="341" width="0.0530%" height="15" fill="rgb(242,110,29)" fg:x="232445" fg:w="146"/><text x="84.6708%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (180 samples, 0.07%)</title><rect x="84.4135%" y="405" width="0.0654%" height="15" fill="rgb(208,211,26)" fg:x="232425" fg:w="180"/><text x="84.6635%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (180 samples, 0.07%)</title><rect x="84.4135%" y="389" width="0.0654%" height="15" fill="rgb(244,147,6)" fg:x="232425" fg:w="180"/><text x="84.6635%" y="399.50"></text></g><g><title>alloc::alloc::realloc (180 samples, 0.07%)</title><rect x="84.4135%" y="373" width="0.0654%" height="15" fill="rgb(211,130,42)" fg:x="232425" fg:w="180"/><text x="84.6635%" y="383.50"></text></g><g><title>realloc (176 samples, 0.06%)</title><rect x="84.4150%" y="357" width="0.0639%" height="15" fill="rgb(220,63,1)" fg:x="232429" fg:w="176"/><text x="84.6650%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (185 samples, 0.07%)</title><rect x="84.4128%" y="421" width="0.0672%" height="15" fill="rgb(241,212,30)" fg:x="232423" fg:w="185"/><text x="84.6628%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (188 samples, 0.07%)</title><rect x="84.4121%" y="437" width="0.0683%" height="15" fill="rgb(233,153,17)" fg:x="232421" fg:w="188"/><text x="84.6621%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 samples, 0.07%)</title><rect x="84.4121%" y="453" width="0.0686%" height="15" fill="rgb(236,3,10)" fg:x="232421" fg:w="189"/><text x="84.6621%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (243 samples, 0.09%)</title><rect x="84.4113%" y="469" width="0.0883%" height="15" fill="rgb(232,41,21)" fg:x="232419" fg:w="243"/><text x="84.6613%" y="479.50"></text></g><g><title>core::ptr::write (49 samples, 0.02%)</title><rect x="84.4818%" y="453" width="0.0178%" height="15" fill="rgb(206,63,51)" fg:x="232613" fg:w="49"/><text x="84.7318%" y="463.50"></text></g><g><title>[libc.so.6] (47 samples, 0.02%)</title><rect x="84.4825%" y="437" width="0.0171%" height="15" fill="rgb(250,214,3)" fg:x="232615" fg:w="47"/><text x="84.7325%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (30 samples, 0.01%)</title><rect x="84.4996%" y="469" width="0.0109%" height="15" fill="rgb(254,89,27)" fg:x="232662" fg:w="30"/><text x="84.7496%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.01%)</title><rect x="84.4996%" y="453" width="0.0109%" height="15" fill="rgb(249,41,14)" fg:x="232662" fg:w="30"/><text x="84.7496%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.01%)</title><rect x="84.4996%" y="437" width="0.0109%" height="15" fill="rgb(221,196,51)" fg:x="232662" fg:w="30"/><text x="84.7496%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (30 samples, 0.01%)</title><rect x="84.4996%" y="421" width="0.0109%" height="15" fill="rgb(214,116,26)" fg:x="232662" fg:w="30"/><text x="84.7496%" y="431.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_frame (807 samples, 0.29%)</title><rect x="84.2239%" y="485" width="0.2931%" height="15" fill="rgb(236,67,7)" fg:x="231903" fg:w="807"/><text x="84.4739%" y="495.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_protocol::proto::msg_reader::MessageReader&gt;::read_transport_message (871 samples, 0.32%)</title><rect x="84.2032%" y="501" width="0.3163%" height="15" fill="rgb(253,179,32)" fg:x="231846" fg:w="871"/><text x="84.4532%" y="511.50"></text></g><g><title>&lt;zenoh_sync::signal::Signal as core::clone::Clone&gt;::clone (37 samples, 0.01%)</title><rect x="84.5239%" y="501" width="0.0134%" height="15" fill="rgb(218,33,15)" fg:x="232729" fg:w="37"/><text x="84.7739%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (37 samples, 0.01%)</title><rect x="84.5239%" y="485" width="0.0134%" height="15" fill="rgb(217,202,41)" fg:x="232729" fg:w="37"/><text x="84.7739%" y="495.50"></text></g><g><title>[libc.so.6] (29 samples, 0.01%)</title><rect x="84.5457%" y="469" width="0.0105%" height="15" fill="rgb(234,133,5)" fg:x="232789" fg:w="29"/><text x="84.7957%" y="479.50"></text></g><g><title>clock_gettime (87 samples, 0.03%)</title><rect x="84.5715%" y="389" width="0.0316%" height="15" fill="rgb(240,47,40)" fg:x="232860" fg:w="87"/><text x="84.8215%" y="399.50"></text></g><g><title>__vdso_clock_gettime (59 samples, 0.02%)</title><rect x="84.5817%" y="373" width="0.0214%" height="15" fill="rgb(234,166,26)" fg:x="232888" fg:w="59"/><text x="84.8317%" y="383.50"></text></g><g><title>[[vdso]] (31 samples, 0.01%)</title><rect x="84.5918%" y="357" width="0.0113%" height="15" fill="rgb(244,125,51)" fg:x="232916" fg:w="31"/><text x="84.8418%" y="367.50"></text></g><g><title>async_std::future::future::FutureExt::timeout (168 samples, 0.06%)</title><rect x="84.5424%" y="501" width="0.0610%" height="15" fill="rgb(229,171,11)" fg:x="232780" fg:w="168"/><text x="84.7924%" y="511.50"></text></g><g><title>async_std::future::timeout::TimeoutFuture&lt;F&gt;::new (168 samples, 0.06%)</title><rect x="84.5424%" y="485" width="0.0610%" height="15" fill="rgb(224,38,45)" fg:x="232780" fg:w="168"/><text x="84.7924%" y="495.50"></text></g><g><title>async_std::utils::timer_after (130 samples, 0.05%)</title><rect x="84.5562%" y="469" width="0.0472%" height="15" fill="rgb(237,27,7)" fg:x="232818" fg:w="130"/><text x="84.8062%" y="479.50"></text></g><g><title>async_io::Timer::after (124 samples, 0.05%)</title><rect x="84.5584%" y="453" width="0.0450%" height="15" fill="rgb(216,52,7)" fg:x="232824" fg:w="124"/><text x="84.8084%" y="463.50"></text></g><g><title>std::time::Instant::now (97 samples, 0.04%)</title><rect x="84.5682%" y="437" width="0.0352%" height="15" fill="rgb(243,11,11)" fg:x="232851" fg:w="97"/><text x="84.8182%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (88 samples, 0.03%)</title><rect x="84.5715%" y="421" width="0.0320%" height="15" fill="rgb(253,167,20)" fg:x="232860" fg:w="88"/><text x="84.8215%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (88 samples, 0.03%)</title><rect x="84.5715%" y="405" width="0.0320%" height="15" fill="rgb(215,207,5)" fg:x="232860" fg:w="88"/><text x="84.8215%" y="415.50"></text></g><g><title>zenoh_buffers::traits::reader::Reader::can_read (45 samples, 0.02%)</title><rect x="84.6104%" y="501" width="0.0163%" height="15" fill="rgb(252,127,31)" fg:x="232967" fg:w="45"/><text x="84.8604%" y="511.50"></text></g><g><title>&lt;zenoh_buffers::zbuf::ZBufReader as zenoh_buffers::traits::reader::Reader&gt;::remaining (44 samples, 0.02%)</title><rect x="84.6107%" y="485" width="0.0160%" height="15" fill="rgb(209,106,27)" fg:x="232968" fg:w="44"/><text x="84.8607%" y="495.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (31 samples, 0.01%)</title><rect x="84.6351%" y="437" width="0.0113%" height="15" fill="rgb(214,220,18)" fg:x="233035" fg:w="31"/><text x="84.8851%" y="447.50"></text></g><g><title>[libc.so.6] (31 samples, 0.01%)</title><rect x="84.6565%" y="405" width="0.0113%" height="15" fill="rgb(237,89,12)" fg:x="233094" fg:w="31"/><text x="84.9065%" y="415.50"></text></g><g><title>async_std::task::task::Task::new (71 samples, 0.03%)</title><rect x="84.6685%" y="389" width="0.0258%" height="15" fill="rgb(209,167,36)" fg:x="233127" fg:w="71"/><text x="84.9185%" y="399.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (71 samples, 0.03%)</title><rect x="84.6685%" y="373" width="0.0258%" height="15" fill="rgb(243,45,22)" fg:x="233127" fg:w="71"/><text x="84.9185%" y="383.50"></text></g><g><title>async_std::task::builder::Builder::build (97 samples, 0.04%)</title><rect x="84.6677%" y="405" width="0.0352%" height="15" fill="rgb(239,2,46)" fg:x="233125" fg:w="97"/><text x="84.9177%" y="415.50"></text></g><g><title>[libc.so.6] (32 samples, 0.01%)</title><rect x="84.7647%" y="213" width="0.0116%" height="15" fill="rgb(241,101,0)" fg:x="233392" fg:w="32"/><text x="85.0147%" y="223.50"></text></g><g><title>async_global_executor::executor::block_on (82 samples, 0.03%)</title><rect x="84.7473%" y="277" width="0.0298%" height="15" fill="rgb(244,34,31)" fg:x="233344" fg:w="82"/><text x="84.9973%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (68 samples, 0.02%)</title><rect x="84.7524%" y="261" width="0.0247%" height="15" fill="rgb(248,23,22)" fg:x="233358" fg:w="68"/><text x="85.0024%" y="271.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (56 samples, 0.02%)</title><rect x="84.7567%" y="245" width="0.0203%" height="15" fill="rgb(218,27,48)" fg:x="233370" fg:w="56"/><text x="85.0067%" y="255.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (34 samples, 0.01%)</title><rect x="84.7647%" y="229" width="0.0123%" height="15" fill="rgb(232,78,1)" fg:x="233392" fg:w="34"/><text x="85.0147%" y="239.50"></text></g><g><title>async_std::task::block_on::block_on (362 samples, 0.13%)</title><rect x="84.6463%" y="437" width="0.1315%" height="15" fill="rgb(233,169,12)" fg:x="233066" fg:w="362"/><text x="84.8963%" y="447.50"></text></g><g><title>async_std::task::builder::Builder::blocking (361 samples, 0.13%)</title><rect x="84.6467%" y="421" width="0.1311%" height="15" fill="rgb(225,222,54)" fg:x="233067" fg:w="361"/><text x="84.8967%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (206 samples, 0.07%)</title><rect x="84.7030%" y="405" width="0.0748%" height="15" fill="rgb(245,126,29)" fg:x="233222" fg:w="206"/><text x="84.9530%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (187 samples, 0.07%)</title><rect x="84.7099%" y="389" width="0.0679%" height="15" fill="rgb(241,63,48)" fg:x="233241" fg:w="187"/><text x="84.9599%" y="399.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (156 samples, 0.06%)</title><rect x="84.7211%" y="373" width="0.0567%" height="15" fill="rgb(235,126,38)" fg:x="233272" fg:w="156"/><text x="84.9711%" y="383.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (147 samples, 0.05%)</title><rect x="84.7244%" y="357" width="0.0534%" height="15" fill="rgb(232,96,49)" fg:x="233281" fg:w="147"/><text x="84.9744%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (131 samples, 0.05%)</title><rect x="84.7302%" y="341" width="0.0476%" height="15" fill="rgb(211,146,40)" fg:x="233297" fg:w="131"/><text x="84.9802%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (119 samples, 0.04%)</title><rect x="84.7346%" y="325" width="0.0432%" height="15" fill="rgb(247,93,44)" fg:x="233309" fg:w="119"/><text x="84.9846%" y="335.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (87 samples, 0.03%)</title><rect x="84.7462%" y="309" width="0.0316%" height="15" fill="rgb(251,41,49)" fg:x="233341" fg:w="87"/><text x="84.9962%" y="319.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (87 samples, 0.03%)</title><rect x="84.7462%" y="293" width="0.0316%" height="15" fill="rgb(218,155,12)" fg:x="233341" fg:w="87"/><text x="84.9962%" y="303.50"></text></g><g><title>&lt;zenoh_collections::object_pool::RecyclingObject&lt;T&gt; as core::ops::drop::Drop&gt;::drop (408 samples, 0.15%)</title><rect x="84.6336%" y="453" width="0.1482%" height="15" fill="rgb(221,161,30)" fg:x="233031" fg:w="408"/><text x="84.8836%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (454 samples, 0.16%)</title><rect x="84.6267%" y="485" width="0.1649%" height="15" fill="rgb(221,179,11)" fg:x="233012" fg:w="454"/><text x="84.8767%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_collections::object_pool::RecyclingObject&lt;alloc::boxed::Box&lt;[u8]&gt;&gt;&gt; (435 samples, 0.16%)</title><rect x="84.6336%" y="469" width="0.1580%" height="15" fill="rgb(224,170,48)" fg:x="233031" fg:w="435"/><text x="84.8836%" y="479.50"></text></g><g><title>zenoh_buffers::zbuf::ZBuf::clear (494 samples, 0.18%)</title><rect x="84.6267%" y="501" width="0.1794%" height="15" fill="rgb(223,117,5)" fg:x="233012" fg:w="494"/><text x="84.8767%" y="511.50"></text></g><g><title>[libc.so.6] (158 samples, 0.06%)</title><rect x="84.8166%" y="357" width="0.0574%" height="15" fill="rgb(209,52,20)" fg:x="233535" fg:w="158"/><text x="85.0666%" y="367.50"></text></g><g><title>[unknown] (133 samples, 0.05%)</title><rect x="84.8257%" y="341" width="0.0483%" height="15" fill="rgb(209,19,41)" fg:x="233560" fg:w="133"/><text x="85.0757%" y="351.50"></text></g><g><title>[unknown] (128 samples, 0.05%)</title><rect x="84.8275%" y="325" width="0.0465%" height="15" fill="rgb(210,177,12)" fg:x="233565" fg:w="128"/><text x="85.0775%" y="335.50"></text></g><g><title>[unknown] (126 samples, 0.05%)</title><rect x="84.8283%" y="309" width="0.0458%" height="15" fill="rgb(211,159,37)" fg:x="233567" fg:w="126"/><text x="85.0783%" y="319.50"></text></g><g><title>[unknown] (125 samples, 0.05%)</title><rect x="84.8286%" y="293" width="0.0454%" height="15" fill="rgb(209,20,2)" fg:x="233568" fg:w="125"/><text x="85.0786%" y="303.50"></text></g><g><title>[unknown] (110 samples, 0.04%)</title><rect x="84.8341%" y="277" width="0.0400%" height="15" fill="rgb(244,3,46)" fg:x="233583" fg:w="110"/><text x="85.0841%" y="287.50"></text></g><g><title>[unknown] (81 samples, 0.03%)</title><rect x="84.8446%" y="261" width="0.0294%" height="15" fill="rgb(220,94,38)" fg:x="233612" fg:w="81"/><text x="85.0946%" y="271.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="84.8475%" y="245" width="0.0265%" height="15" fill="rgb(253,14,31)" fg:x="233620" fg:w="73"/><text x="85.0975%" y="255.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="84.8526%" y="229" width="0.0214%" height="15" fill="rgb(234,176,13)" fg:x="233634" fg:w="59"/><text x="85.1026%" y="239.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="84.8573%" y="213" width="0.0167%" height="15" fill="rgb(218,62,25)" fg:x="233647" fg:w="46"/><text x="85.1073%" y="223.50"></text></g><g><title>[libc.so.6] (36 samples, 0.01%)</title><rect x="84.8758%" y="325" width="0.0131%" height="15" fill="rgb(216,124,40)" fg:x="233698" fg:w="36"/><text x="85.1258%" y="335.50"></text></g><g><title>[libc.so.6] (39 samples, 0.01%)</title><rect x="84.8751%" y="341" width="0.0142%" height="15" fill="rgb(228,170,12)" fg:x="233696" fg:w="39"/><text x="85.1251%" y="351.50"></text></g><g><title>zenoh_collections::object_pool::RecyclingObjectPool&lt;T,F&gt;::new (223 samples, 0.08%)</title><rect x="84.8097%" y="501" width="0.0810%" height="15" fill="rgb(231,226,5)" fg:x="233516" fg:w="223"/><text x="85.0597%" y="511.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}}::{{closure}} (204 samples, 0.07%)</title><rect x="84.8166%" y="485" width="0.0741%" height="15" fill="rgb(237,122,22)" fg:x="233535" fg:w="204"/><text x="85.0666%" y="495.50"></text></g><g><title>alloc::vec::from_elem (204 samples, 0.07%)</title><rect x="84.8166%" y="469" width="0.0741%" height="15" fill="rgb(209,185,25)" fg:x="233535" fg:w="204"/><text x="85.0666%" y="479.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (204 samples, 0.07%)</title><rect x="84.8166%" y="453" width="0.0741%" height="15" fill="rgb(228,200,32)" fg:x="233535" fg:w="204"/><text x="85.0666%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (204 samples, 0.07%)</title><rect x="84.8166%" y="437" width="0.0741%" height="15" fill="rgb(217,140,10)" fg:x="233535" fg:w="204"/><text x="85.0666%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (204 samples, 0.07%)</title><rect x="84.8166%" y="421" width="0.0741%" height="15" fill="rgb(253,17,24)" fg:x="233535" fg:w="204"/><text x="85.0666%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (204 samples, 0.07%)</title><rect x="84.8166%" y="405" width="0.0741%" height="15" fill="rgb(212,61,6)" fg:x="233535" fg:w="204"/><text x="85.0666%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (204 samples, 0.07%)</title><rect x="84.8166%" y="389" width="0.0741%" height="15" fill="rgb(205,14,25)" fg:x="233535" fg:w="204"/><text x="85.0666%" y="399.50"></text></g><g><title>alloc::alloc::alloc_zeroed (204 samples, 0.07%)</title><rect x="84.8166%" y="373" width="0.0741%" height="15" fill="rgb(232,69,41)" fg:x="233535" fg:w="204"/><text x="85.0666%" y="383.50"></text></g><g><title>__libc_calloc (46 samples, 0.02%)</title><rect x="84.8740%" y="357" width="0.0167%" height="15" fill="rgb(241,106,47)" fg:x="233693" fg:w="46"/><text x="85.1240%" y="367.50"></text></g><g><title>zenoh_collections::object_pool::RecyclingObjectPool&lt;T,F&gt;::try_take (49 samples, 0.02%)</title><rect x="84.8907%" y="501" width="0.0178%" height="15" fill="rgb(210,213,53)" fg:x="233739" fg:w="49"/><text x="85.1407%" y="511.50"></text></g><g><title>zenoh_collections::lifo_queue::LifoQueue&lt;T&gt;::try_pull (29 samples, 0.01%)</title><rect x="84.8980%" y="485" width="0.0105%" height="15" fill="rgb(253,175,27)" fg:x="233759" fg:w="29"/><text x="85.1480%" y="495.50"></text></g><g><title>zenoh_sync::signal::Signal::is_triggered (44 samples, 0.02%)</title><rect x="84.9085%" y="501" width="0.0160%" height="15" fill="rgb(211,171,24)" fg:x="233788" fg:w="44"/><text x="85.1585%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (43 samples, 0.02%)</title><rect x="84.9089%" y="485" width="0.0156%" height="15" fill="rgb(229,80,7)" fg:x="233789" fg:w="43"/><text x="85.1589%" y="495.50"></text></g><g><title>[libc.so.6] (35 samples, 0.01%)</title><rect x="85.0128%" y="373" width="0.0127%" height="15" fill="rgb(212,46,39)" fg:x="234075" fg:w="35"/><text x="85.2628%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 0.03%)</title><rect x="85.0019%" y="421" width="0.0254%" height="15" fill="rgb(240,80,45)" fg:x="234045" fg:w="70"/><text x="85.2519%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (70 samples, 0.03%)</title><rect x="85.0019%" y="405" width="0.0254%" height="15" fill="rgb(253,177,40)" fg:x="234045" fg:w="70"/><text x="85.2519%" y="415.50"></text></g><g><title>cfree (67 samples, 0.02%)</title><rect x="85.0030%" y="389" width="0.0243%" height="15" fill="rgb(249,200,15)" fg:x="234048" fg:w="67"/><text x="85.2530%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol::proto::msg::ZenohMessage&gt;&gt; (80 samples, 0.03%)</title><rect x="85.0004%" y="469" width="0.0291%" height="15" fill="rgb(217,78,26)" fg:x="234041" fg:w="80"/><text x="85.2504%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;zenoh_protocol::proto::msg::ZenohMessage&gt;&gt; (77 samples, 0.03%)</title><rect x="85.0015%" y="453" width="0.0280%" height="15" fill="rgb(254,151,32)" fg:x="234044" fg:w="77"/><text x="85.2515%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.03%)</title><rect x="85.0015%" y="437" width="0.0280%" height="15" fill="rgb(226,165,27)" fg:x="234044" fg:w="77"/><text x="85.2515%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 0.02%)</title><rect x="85.0538%" y="453" width="0.0182%" height="15" fill="rgb(250,206,4)" fg:x="234188" fg:w="50"/><text x="85.3038%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (50 samples, 0.02%)</title><rect x="85.0538%" y="437" width="0.0182%" height="15" fill="rgb(231,229,27)" fg:x="234188" fg:w="50"/><text x="85.3038%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (50 samples, 0.02%)</title><rect x="85.0538%" y="421" width="0.0182%" height="15" fill="rgb(239,217,8)" fg:x="234188" fg:w="50"/><text x="85.3038%" y="431.50"></text></g><g><title>[libc.so.6] (36 samples, 0.01%)</title><rect x="85.0945%" y="453" width="0.0131%" height="15" fill="rgb(225,204,27)" fg:x="234300" fg:w="36"/><text x="85.3445%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (30 samples, 0.01%)</title><rect x="85.1210%" y="389" width="0.0109%" height="15" fill="rgb(230,56,32)" fg:x="234373" fg:w="30"/><text x="85.3710%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.01%)</title><rect x="85.1210%" y="373" width="0.0109%" height="15" fill="rgb(222,56,27)" fg:x="234373" fg:w="30"/><text x="85.3710%" y="383.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::try_read (35 samples, 0.01%)</title><rect x="85.1199%" y="453" width="0.0127%" height="15" fill="rgb(253,108,27)" fg:x="234370" fg:w="35"/><text x="85.3699%" y="463.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::try_read (35 samples, 0.01%)</title><rect x="85.1199%" y="437" width="0.0127%" height="15" fill="rgb(212,87,36)" fg:x="234370" fg:w="35"/><text x="85.3699%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::try_read (35 samples, 0.01%)</title><rect x="85.1199%" y="421" width="0.0127%" height="15" fill="rgb(247,82,36)" fg:x="234370" fg:w="35"/><text x="85.3699%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_update (35 samples, 0.01%)</title><rect x="85.1199%" y="405" width="0.0127%" height="15" fill="rgb(222,143,9)" fg:x="234370" fg:w="35"/><text x="85.3699%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,227 samples, 1.54%)</title><rect x="83.6011%" y="565" width="1.5352%" height="15" fill="rgb(238,162,48)" fg:x="230188" fg:w="4227"/><text x="83.8511%" y="575.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task::{{closure}} (4,227 samples, 1.54%)</title><rect x="83.6011%" y="549" width="1.5352%" height="15" fill="rgb(221,59,43)" fg:x="230188" fg:w="4227"/><text x="83.8511%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,227 samples, 1.54%)</title><rect x="83.6011%" y="533" width="1.5352%" height="15" fill="rgb(205,166,41)" fg:x="230188" fg:w="4227"/><text x="83.8511%" y="543.50"></text></g><g><title>zenoh_transport::unicast::link::rx_task_stream::{{closure}} (4,225 samples, 1.53%)</title><rect x="83.6018%" y="517" width="1.5345%" height="15" fill="rgb(241,186,40)" fg:x="230190" fg:w="4225"/><text x="83.8518%" y="527.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::receive_message (583 samples, 0.21%)</title><rect x="84.9245%" y="501" width="0.2117%" height="15" fill="rgb(216,119,35)" fg:x="233832" fg:w="583"/><text x="85.1745%" y="511.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::handle_frame (462 samples, 0.17%)</title><rect x="84.9685%" y="485" width="0.1678%" height="15" fill="rgb(208,68,38)" fg:x="233953" fg:w="462"/><text x="85.2185%" y="495.50"></text></g><g><title>zenoh_transport::unicast::rx::&lt;impl zenoh_transport::unicast::transport::TransportUnicastInner&gt;::trigger_callback (251 samples, 0.09%)</title><rect x="85.0451%" y="469" width="0.0912%" height="15" fill="rgb(217,113,1)" fg:x="234164" fg:w="251"/><text x="85.2951%" y="479.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_rx::{{closure}} (4,236 samples, 1.54%)</title><rect x="83.6011%" y="581" width="1.5385%" height="15" fill="rgb(242,153,3)" fg:x="230188" fg:w="4236"/><text x="83.8511%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.01%)</title><rect x="85.1606%" y="485" width="0.0113%" height="15" fill="rgb(229,76,35)" fg:x="234482" fg:w="31"/><text x="85.4106%" y="495.50"></text></g><g><title>zenoh_link_commons::LinkUnicast::write_transport_message::{{closure}} (28 samples, 0.01%)</title><rect x="85.1617%" y="469" width="0.0102%" height="15" fill="rgb(229,125,34)" fg:x="234485" fg:w="28"/><text x="85.4117%" y="479.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="85.1718%" y="485" width="0.0258%" height="15" fill="rgb(238,179,36)" fg:x="234513" fg:w="71"/><text x="85.4218%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="85.1718%" y="469" width="0.0258%" height="15" fill="rgb(244,183,19)" fg:x="234513" fg:w="71"/><text x="85.4218%" y="479.50"></text></g><g><title>&lt;zenoh_transport::unicast::establishment::authenticator::shm::SharedMemoryAuthenticator as zenoh_transport::unicast::establishment::authenticator::PeerAuthenticatorTrait&gt;::handle_init_syn::{{closure}} (69 samples, 0.03%)</title><rect x="85.1726%" y="453" width="0.0251%" height="15" fill="rgb(216,85,49)" fg:x="234515" fg:w="69"/><text x="85.4226%" y="463.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::init_ack::send::{{closure}} (196 samples, 0.07%)</title><rect x="85.1562%" y="501" width="0.0712%" height="15" fill="rgb(208,161,47)" fg:x="234470" fg:w="196"/><text x="85.4062%" y="511.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::open_syn::recv::{{closure}} (29 samples, 0.01%)</title><rect x="85.2343%" y="501" width="0.0105%" height="15" fill="rgb(233,210,18)" fg:x="234685" fg:w="29"/><text x="85.4843%" y="511.50"></text></g><g><title>&lt;zenoh::net::runtime::RuntimeTransportEventHandler as zenoh_transport::TransportEventHandler&gt;::new_unicast (63 samples, 0.02%)</title><rect x="85.2470%" y="485" width="0.0229%" height="15" fill="rgb(205,104,42)" fg:x="234720" fg:w="63"/><text x="85.4970%" y="495.50"></text></g><g><title>zenoh::net::routing::router::Router::new_transport_unicast (57 samples, 0.02%)</title><rect x="85.2492%" y="469" width="0.0207%" height="15" fill="rgb(248,90,43)" fg:x="234726" fg:w="57"/><text x="85.4992%" y="479.50"></text></g><g><title>zenoh_transport::unicast::establishment::transport_finalize::{{closure}} (90 samples, 0.03%)</title><rect x="85.2452%" y="501" width="0.0327%" height="15" fill="rgb(206,198,11)" fg:x="234715" fg:w="90"/><text x="85.4952%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (348 samples, 0.13%)</title><rect x="85.1551%" y="517" width="0.1264%" height="15" fill="rgb(239,165,27)" fg:x="234467" fg:w="348"/><text x="85.4051%" y="527.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (384 samples, 0.14%)</title><rect x="85.1442%" y="565" width="0.1395%" height="15" fill="rgb(246,44,32)" fg:x="234437" fg:w="384"/><text x="85.3942%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (370 samples, 0.13%)</title><rect x="85.1493%" y="549" width="0.1344%" height="15" fill="rgb(252,65,42)" fg:x="234451" fg:w="370"/><text x="85.3993%" y="559.50"></text></g><g><title>zenoh_transport::unicast::establishment::accept::accept_link::{{closure}} (366 samples, 0.13%)</title><rect x="85.1508%" y="533" width="0.1329%" height="15" fill="rgb(246,197,18)" fg:x="234455" fg:w="366"/><text x="85.4008%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,686 samples, 1.70%)</title><rect x="83.6000%" y="597" width="1.7019%" height="15" fill="rgb(216,192,4)" fg:x="230185" fg:w="4686"/><text x="83.8500%" y="607.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}} (447 samples, 0.16%)</title><rect x="85.1395%" y="581" width="0.1623%" height="15" fill="rgb(208,117,10)" fg:x="234424" fg:w="447"/><text x="85.3895%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (44 samples, 0.02%)</title><rect x="85.3255%" y="549" width="0.0160%" height="15" fill="rgb(240,61,47)" fg:x="234936" fg:w="44"/><text x="85.5755%" y="559.50"></text></g><g><title>core::mem::replace (44 samples, 0.02%)</title><rect x="85.3255%" y="533" width="0.0160%" height="15" fill="rgb(228,178,21)" fg:x="234936" fg:w="44"/><text x="85.5755%" y="543.50"></text></g><g><title>core::ptr::read (44 samples, 0.02%)</title><rect x="85.3255%" y="517" width="0.0160%" height="15" fill="rgb(219,96,54)" fg:x="234936" fg:w="44"/><text x="85.5755%" y="527.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (145 samples, 0.05%)</title><rect x="85.3146%" y="565" width="0.0527%" height="15" fill="rgb(250,177,24)" fg:x="234906" fg:w="145"/><text x="85.5646%" y="575.50"></text></g><g><title>event_listener::Inner::lock (38 samples, 0.01%)</title><rect x="85.3534%" y="549" width="0.0138%" height="15" fill="rgb(242,154,46)" fg:x="235013" fg:w="38"/><text x="85.6034%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (38 samples, 0.01%)</title><rect x="85.3534%" y="533" width="0.0138%" height="15" fill="rgb(226,176,29)" fg:x="235013" fg:w="38"/><text x="85.6034%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (38 samples, 0.01%)</title><rect x="85.3534%" y="517" width="0.0138%" height="15" fill="rgb(226,29,2)" fg:x="235013" fg:w="38"/><text x="85.6034%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (38 samples, 0.01%)</title><rect x="85.3534%" y="501" width="0.0138%" height="15" fill="rgb(237,104,14)" fg:x="235013" fg:w="38"/><text x="85.6034%" y="511.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (281 samples, 0.10%)</title><rect x="85.3040%" y="581" width="0.1021%" height="15" fill="rgb(245,207,31)" fg:x="234877" fg:w="281"/><text x="85.5540%" y="591.50"></text></g><g><title>event_listener::Event::listen (76 samples, 0.03%)</title><rect x="85.3785%" y="565" width="0.0276%" height="15" fill="rgb(229,211,45)" fg:x="235082" fg:w="76"/><text x="85.6285%" y="575.50"></text></g><g><title>event_listener::List::insert (30 samples, 0.01%)</title><rect x="85.3952%" y="549" width="0.0109%" height="15" fill="rgb(229,113,15)" fg:x="235128" fg:w="30"/><text x="85.6452%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (37 samples, 0.01%)</title><rect x="85.4635%" y="421" width="0.0134%" height="15" fill="rgb(237,147,15)" fg:x="235316" fg:w="37"/><text x="85.7135%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (32 samples, 0.01%)</title><rect x="85.4653%" y="405" width="0.0116%" height="15" fill="rgb(244,120,12)" fg:x="235321" fg:w="32"/><text x="85.7153%" y="415.50"></text></g><g><title>async_io::reactor::Reactor::insert_timer (77 samples, 0.03%)</title><rect x="85.4529%" y="437" width="0.0280%" height="15" fill="rgb(205,120,12)" fg:x="235287" fg:w="77"/><text x="85.7029%" y="447.50"></text></g><g><title>async_io::reactor::Reactor::remove_timer (49 samples, 0.02%)</title><rect x="85.4809%" y="437" width="0.0178%" height="15" fill="rgb(231,26,45)" fg:x="235364" fg:w="49"/><text x="85.7309%" y="447.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.02%)</title><rect x="85.4835%" y="421" width="0.0153%" height="15" fill="rgb(246,98,1)" fg:x="235371" fg:w="42"/><text x="85.7335%" y="431.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (38 samples, 0.01%)</title><rect x="85.4849%" y="405" width="0.0138%" height="15" fill="rgb(207,68,45)" fg:x="235375" fg:w="38"/><text x="85.7349%" y="415.50"></text></g><g><title>std::time::Instant::now (39 samples, 0.01%)</title><rect x="85.5016%" y="437" width="0.0142%" height="15" fill="rgb(231,27,38)" fg:x="235421" fg:w="39"/><text x="85.7516%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (34 samples, 0.01%)</title><rect x="85.5034%" y="421" width="0.0123%" height="15" fill="rgb(214,223,3)" fg:x="235426" fg:w="34"/><text x="85.7534%" y="431.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (34 samples, 0.01%)</title><rect x="85.5034%" y="405" width="0.0123%" height="15" fill="rgb(228,195,46)" fg:x="235426" fg:w="34"/><text x="85.7534%" y="415.50"></text></g><g><title>clock_gettime (34 samples, 0.01%)</title><rect x="85.5034%" y="389" width="0.0123%" height="15" fill="rgb(231,100,42)" fg:x="235426" fg:w="34"/><text x="85.7534%" y="399.50"></text></g><g><title>&lt;async_io::Timer as core::future::future::Future&gt;::poll (214 samples, 0.08%)</title><rect x="85.4384%" y="469" width="0.0777%" height="15" fill="rgb(236,53,4)" fg:x="235247" fg:w="214"/><text x="85.6884%" y="479.50"></text></g><g><title>&lt;async_io::Timer as futures_core::stream::Stream&gt;::poll_next (208 samples, 0.08%)</title><rect x="85.4406%" y="453" width="0.0755%" height="15" fill="rgb(230,152,12)" fg:x="235253" fg:w="208"/><text x="85.6906%" y="463.50"></text></g><g><title>&lt;async_std::io::timeout::Timeout&lt;F,T&gt; as core::future::future::Future&gt;::poll (270 samples, 0.10%)</title><rect x="85.4381%" y="485" width="0.0981%" height="15" fill="rgb(226,101,19)" fg:x="235246" fg:w="270"/><text x="85.6881%" y="495.50"></text></g><g><title>std::io::error::Error::new (42 samples, 0.02%)</title><rect x="85.5209%" y="469" width="0.0153%" height="15" fill="rgb(250,149,32)" fg:x="235474" fg:w="42"/><text x="85.7709%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (41 samples, 0.01%)</title><rect x="85.5212%" y="453" width="0.0149%" height="15" fill="rgb(232,178,12)" fg:x="235475" fg:w="41"/><text x="85.7712%" y="463.50"></text></g><g><title>std::error::&lt;impl core::convert::From&lt;&amp;str&gt; for alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;::from (41 samples, 0.01%)</title><rect x="85.5212%" y="437" width="0.0149%" height="15" fill="rgb(246,151,17)" fg:x="235475" fg:w="41"/><text x="85.7712%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (298 samples, 0.11%)</title><rect x="85.4359%" y="517" width="0.1082%" height="15" fill="rgb(252,17,51)" fg:x="235240" fg:w="298"/><text x="85.6859%" y="527.50"></text></g><g><title>async_std::io::timeout::timeout::{{closure}} (298 samples, 0.11%)</title><rect x="85.4359%" y="501" width="0.1082%" height="15" fill="rgb(250,207,23)" fg:x="235240" fg:w="298"/><text x="85.6859%" y="511.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (359 samples, 0.13%)</title><rect x="85.4261%" y="533" width="0.1304%" height="15" fill="rgb(205,27,5)" fg:x="235213" fg:w="359"/><text x="85.6761%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (33 samples, 0.01%)</title><rect x="85.5445%" y="517" width="0.0120%" height="15" fill="rgb(224,32,19)" fg:x="235539" fg:w="33"/><text x="85.7945%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="85.6309%" y="341" width="0.0258%" height="15" fill="rgb(247,214,40)" fg:x="235777" fg:w="71"/><text x="85.8809%" y="351.50"></text></g><g><title>async_io::Async&lt;std::net::tcp::TcpStream&gt;::connect::{{closure}} (68 samples, 0.02%)</title><rect x="85.6320%" y="325" width="0.0247%" height="15" fill="rgb(239,199,17)" fg:x="235780" fg:w="68"/><text x="85.8820%" y="335.50"></text></g><g><title>std::os::unix::net::stream::UnixStream::take_error (43 samples, 0.02%)</title><rect x="85.6411%" y="309" width="0.0156%" height="15" fill="rgb(251,159,9)" fg:x="235805" fg:w="43"/><text x="85.8911%" y="319.50"></text></g><g><title>std::sys::unix::net::Socket::take_error (42 samples, 0.02%)</title><rect x="85.6414%" y="293" width="0.0153%" height="15" fill="rgb(225,78,32)" fg:x="235806" fg:w="42"/><text x="85.8914%" y="303.50"></text></g><g><title>std::sys_common::net::getsockopt (42 samples, 0.02%)</title><rect x="85.6414%" y="277" width="0.0153%" height="15" fill="rgb(206,97,47)" fg:x="235806" fg:w="42"/><text x="85.8914%" y="287.50"></text></g><g><title>getsockopt (42 samples, 0.02%)</title><rect x="85.6414%" y="261" width="0.0153%" height="15" fill="rgb(227,107,4)" fg:x="235806" fg:w="42"/><text x="85.8914%" y="271.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="85.6422%" y="245" width="0.0145%" height="15" fill="rgb(241,146,50)" fg:x="235808" fg:w="40"/><text x="85.8922%" y="255.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="85.6422%" y="229" width="0.0145%" height="15" fill="rgb(232,92,30)" fg:x="235808" fg:w="40"/><text x="85.8922%" y="239.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="85.6422%" y="213" width="0.0145%" height="15" fill="rgb(222,0,40)" fg:x="235808" fg:w="40"/><text x="85.8922%" y="223.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="85.6425%" y="197" width="0.0142%" height="15" fill="rgb(219,54,33)" fg:x="235809" fg:w="39"/><text x="85.8925%" y="207.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="85.6425%" y="181" width="0.0142%" height="15" fill="rgb(226,209,28)" fg:x="235809" fg:w="39"/><text x="85.8925%" y="191.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (89 samples, 0.03%)</title><rect x="85.6269%" y="373" width="0.0323%" height="15" fill="rgb(254,205,35)" fg:x="235766" fg:w="89"/><text x="85.8769%" y="383.50"></text></g><g><title>async_std::net::tcp::stream::TcpStream::connect::{{closure}} (89 samples, 0.03%)</title><rect x="85.6269%" y="357" width="0.0323%" height="15" fill="rgb(230,159,3)" fg:x="235766" fg:w="89"/><text x="85.8769%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (136 samples, 0.05%)</title><rect x="85.6157%" y="405" width="0.0494%" height="15" fill="rgb(232,190,24)" fg:x="235735" fg:w="136"/><text x="85.8657%" y="415.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link::{{closure}} (133 samples, 0.05%)</title><rect x="85.6167%" y="389" width="0.0483%" height="15" fill="rgb(217,227,44)" fg:x="235738" fg:w="133"/><text x="85.8667%" y="399.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (137 samples, 0.05%)</title><rect x="85.6157%" y="421" width="0.0498%" height="15" fill="rgb(236,211,1)" fg:x="235735" fg:w="137"/><text x="85.8657%" y="431.50"></text></g><g><title>&lt;zenoh_link_tcp::unicast::LinkManagerUnicastTcp as zenoh_link_commons::LinkManagerUnicastTrait&gt;::new_link (39 samples, 0.01%)</title><rect x="85.6669%" y="421" width="0.0142%" height="15" fill="rgb(250,127,46)" fg:x="235876" fg:w="39"/><text x="85.9169%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (36 samples, 0.01%)</title><rect x="85.6680%" y="405" width="0.0131%" height="15" fill="rgb(229,213,6)" fg:x="235879" fg:w="36"/><text x="85.9180%" y="415.50"></text></g><g><title>[libc.so.6] (41 samples, 0.01%)</title><rect x="85.6839%" y="325" width="0.0149%" height="15" fill="rgb(237,15,36)" fg:x="235923" fg:w="41"/><text x="85.9339%" y="335.50"></text></g><g><title>__lll_lock_wait_private (38 samples, 0.01%)</title><rect x="85.6850%" y="309" width="0.0138%" height="15" fill="rgb(213,131,41)" fg:x="235926" fg:w="38"/><text x="85.9350%" y="319.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="85.6850%" y="293" width="0.0138%" height="15" fill="rgb(225,82,44)" fg:x="235926" fg:w="38"/><text x="85.9350%" y="303.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="85.6850%" y="277" width="0.0138%" height="15" fill="rgb(249,42,11)" fg:x="235926" fg:w="38"/><text x="85.9350%" y="287.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="85.6850%" y="261" width="0.0138%" height="15" fill="rgb(253,11,29)" fg:x="235926" fg:w="38"/><text x="85.9350%" y="271.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="85.6850%" y="245" width="0.0138%" height="15" fill="rgb(206,8,54)" fg:x="235926" fg:w="38"/><text x="85.9350%" y="255.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="85.6850%" y="229" width="0.0138%" height="15" fill="rgb(222,186,2)" fg:x="235926" fg:w="38"/><text x="85.9350%" y="239.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="85.6850%" y="213" width="0.0138%" height="15" fill="rgb(221,206,53)" fg:x="235926" fg:w="38"/><text x="85.9350%" y="223.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="85.6850%" y="197" width="0.0138%" height="15" fill="rgb(230,150,21)" fg:x="235926" fg:w="38"/><text x="85.9350%" y="207.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="85.6854%" y="181" width="0.0134%" height="15" fill="rgb(253,202,10)" fg:x="235927" fg:w="37"/><text x="85.9354%" y="191.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="85.6861%" y="165" width="0.0127%" height="15" fill="rgb(238,109,40)" fg:x="235929" fg:w="35"/><text x="85.9361%" y="175.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="85.6868%" y="149" width="0.0120%" height="15" fill="rgb(247,120,22)" fg:x="235931" fg:w="33"/><text x="85.9368%" y="159.50"></text></g><g><title>alloc::alloc::box_free (51 samples, 0.02%)</title><rect x="85.6825%" y="389" width="0.0185%" height="15" fill="rgb(207,43,30)" fg:x="235919" fg:w="51"/><text x="85.9325%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.02%)</title><rect x="85.6825%" y="373" width="0.0185%" height="15" fill="rgb(213,211,24)" fg:x="235919" fg:w="51"/><text x="85.9325%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (51 samples, 0.02%)</title><rect x="85.6825%" y="357" width="0.0185%" height="15" fill="rgb(239,73,39)" fg:x="235919" fg:w="51"/><text x="85.9325%" y="367.50"></text></g><g><title>cfree (51 samples, 0.02%)</title><rect x="85.6825%" y="341" width="0.0185%" height="15" fill="rgb(245,182,19)" fg:x="235919" fg:w="51"/><text x="85.9325%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;zenoh_link_commons::LinkUnicast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Send&gt;&gt;&gt; (53 samples, 0.02%)</title><rect x="85.6825%" y="421" width="0.0192%" height="15" fill="rgb(247,143,26)" fg:x="235919" fg:w="53"/><text x="85.9325%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;zenoh_link_commons::LinkUnicast,alloc::boxed::Box&lt;dyn std::error::Error+core::marker::Sync+core::marker::Send&gt;&gt;+core::marker::Send&gt;&gt; (53 samples, 0.02%)</title><rect x="85.6825%" y="405" width="0.0192%" height="15" fill="rgb(228,191,23)" fg:x="235919" fg:w="53"/><text x="85.9325%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (52 samples, 0.02%)</title><rect x="85.7224%" y="405" width="0.0189%" height="15" fill="rgb(253,165,31)" fg:x="236029" fg:w="52"/><text x="85.9724%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (52 samples, 0.02%)</title><rect x="85.7224%" y="389" width="0.0189%" height="15" fill="rgb(234,138,20)" fg:x="236029" fg:w="52"/><text x="85.9724%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (52 samples, 0.02%)</title><rect x="85.7224%" y="373" width="0.0189%" height="15" fill="rgb(218,191,29)" fg:x="236029" fg:w="52"/><text x="85.9724%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.01%)</title><rect x="85.7268%" y="357" width="0.0145%" height="15" fill="rgb(221,157,19)" fg:x="236041" fg:w="40"/><text x="85.9768%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.01%)</title><rect x="85.7268%" y="341" width="0.0145%" height="15" fill="rgb(237,26,42)" fg:x="236041" fg:w="40"/><text x="85.9768%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (40 samples, 0.01%)</title><rect x="85.7268%" y="325" width="0.0145%" height="15" fill="rgb(220,163,24)" fg:x="236041" fg:w="40"/><text x="85.9768%" y="335.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (485 samples, 0.18%)</title><rect x="85.5833%" y="453" width="0.1761%" height="15" fill="rgb(242,115,20)" fg:x="235646" fg:w="485"/><text x="85.8333%" y="463.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::open_transport_unicast::{{closure}} (462 samples, 0.17%)</title><rect x="85.5917%" y="437" width="0.1678%" height="15" fill="rgb(210,206,9)" fg:x="235669" fg:w="462"/><text x="85.8417%" y="447.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::new_link_manager_unicast (119 samples, 0.04%)</title><rect x="85.7163%" y="421" width="0.0432%" height="15" fill="rgb(208,71,17)" fg:x="236012" fg:w="119"/><text x="85.9663%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (525 samples, 0.19%)</title><rect x="85.5699%" y="485" width="0.1907%" height="15" fill="rgb(233,7,5)" fg:x="235609" fg:w="525"/><text x="85.8199%" y="495.50"></text></g><g><title>zenoh_transport::manager::TransportManager::open_transport::{{closure}} (520 samples, 0.19%)</title><rect x="85.5717%" y="469" width="0.1889%" height="15" fill="rgb(207,92,33)" fg:x="235614" fg:w="520"/><text x="85.8217%" y="479.50"></text></g><g><title>&lt;zenoh_protocol_core::locators::Locator as core::clone::Clone&gt;::clone (33 samples, 0.01%)</title><rect x="85.7609%" y="485" width="0.0120%" height="15" fill="rgb(218,87,9)" fg:x="236135" fg:w="33"/><text x="86.0109%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (33 samples, 0.01%)</title><rect x="85.7609%" y="469" width="0.0120%" height="15" fill="rgb(219,47,37)" fg:x="236135" fg:w="33"/><text x="86.0109%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (595 samples, 0.22%)</title><rect x="85.5575%" y="517" width="0.2161%" height="15" fill="rgb(221,152,34)" fg:x="235575" fg:w="595"/><text x="85.8075%" y="527.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect::{{closure}} (592 samples, 0.22%)</title><rect x="85.5586%" y="501" width="0.2150%" height="15" fill="rgb(235,176,21)" fg:x="235578" fg:w="592"/><text x="85.8086%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (42 samples, 0.02%)</title><rect x="85.7994%" y="421" width="0.0153%" height="15" fill="rgb(232,212,21)" fg:x="236241" fg:w="42"/><text x="86.0494%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (56 samples, 0.02%)</title><rect x="85.7947%" y="501" width="0.0203%" height="15" fill="rgb(245,82,39)" fg:x="236228" fg:w="56"/><text x="86.0447%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (56 samples, 0.02%)</title><rect x="85.7947%" y="485" width="0.0203%" height="15" fill="rgb(241,52,51)" fg:x="236228" fg:w="56"/><text x="86.0447%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (55 samples, 0.02%)</title><rect x="85.7951%" y="469" width="0.0200%" height="15" fill="rgb(219,91,24)" fg:x="236229" fg:w="55"/><text x="86.0451%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (43 samples, 0.02%)</title><rect x="85.7994%" y="453" width="0.0156%" height="15" fill="rgb(241,142,12)" fg:x="236241" fg:w="43"/><text x="86.0494%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.02%)</title><rect x="85.7994%" y="437" width="0.0156%" height="15" fill="rgb(230,27,9)" fg:x="236241" fg:w="43"/><text x="86.0494%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,093 samples, 0.40%)</title><rect x="85.4235%" y="549" width="0.3970%" height="15" fill="rgb(249,181,32)" fg:x="235206" fg:w="1093"/><text x="85.6735%" y="559.50"></text></g><g><title>zenoh::net::runtime::orchestrator::&lt;impl zenoh::net::runtime::Runtime&gt;::connect_peer::{{closure}} (727 samples, 0.26%)</title><rect x="85.5565%" y="533" width="0.2640%" height="15" fill="rgb(230,107,3)" fg:x="235572" fg:w="727"/><text x="85.8065%" y="543.50"></text></g><g><title>zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::get_transport_unicast (83 samples, 0.03%)</title><rect x="85.7903%" y="517" width="0.0301%" height="15" fill="rgb(246,204,14)" fg:x="236216" fg:w="83"/><text x="86.0403%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.01%)</title><rect x="85.8212%" y="421" width="0.0109%" height="15" fill="rgb(213,192,47)" fg:x="236301" fg:w="30"/><text x="86.0712%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.01%)</title><rect x="85.8212%" y="405" width="0.0109%" height="15" fill="rgb(240,44,36)" fg:x="236301" fg:w="30"/><text x="86.0712%" y="415.50"></text></g><g><title>cfree (30 samples, 0.01%)</title><rect x="85.8212%" y="389" width="0.0109%" height="15" fill="rgb(244,209,38)" fg:x="236301" fg:w="30"/><text x="86.0712%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (39 samples, 0.01%)</title><rect x="85.8212%" y="485" width="0.0142%" height="15" fill="rgb(219,34,37)" fg:x="236301" fg:w="39"/><text x="86.0712%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (39 samples, 0.01%)</title><rect x="85.8212%" y="469" width="0.0142%" height="15" fill="rgb(210,28,6)" fg:x="236301" fg:w="39"/><text x="86.0712%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (39 samples, 0.01%)</title><rect x="85.8212%" y="453" width="0.0142%" height="15" fill="rgb(244,110,52)" fg:x="236301" fg:w="39"/><text x="86.0712%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.01%)</title><rect x="85.8212%" y="437" width="0.0142%" height="15" fill="rgb(254,124,47)" fg:x="236301" fg:w="39"/><text x="86.0712%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.01%)</title><rect x="85.8212%" y="533" width="0.0149%" height="15" fill="rgb(254,110,13)" fg:x="236301" fg:w="41"/><text x="86.0712%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[zenoh_protocol_core::locators::Locator]&gt; (41 samples, 0.01%)</title><rect x="85.8212%" y="517" width="0.0149%" height="15" fill="rgb(252,57,21)" fg:x="236301" fg:w="41"/><text x="86.0712%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;zenoh_protocol_core::locators::Locator&gt; (41 samples, 0.01%)</title><rect x="85.8212%" y="501" width="0.0149%" height="15" fill="rgb(242,60,45)" fg:x="236301" fg:w="41"/><text x="86.0712%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;zenoh_protocol_core::locators::Locator&gt;&gt; (46 samples, 0.02%)</title><rect x="85.8212%" y="549" width="0.0167%" height="15" fill="rgb(234,49,30)" fg:x="236301" fg:w="46"/><text x="86.0712%" y="559.50"></text></g><g><title>zenoh::net::routing::network::Network::link_states::{{closure}} (1,218 samples, 0.44%)</title><rect x="85.4068%" y="565" width="0.4424%" height="15" fill="rgb(218,98,6)" fg:x="235160" fg:w="1218"/><text x="85.6568%" y="575.50"></text></g><g><title>rand::random (29 samples, 0.01%)</title><rect x="85.8387%" y="549" width="0.0105%" height="15" fill="rgb(220,174,29)" fg:x="236349" fg:w="29"/><text x="86.0887%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,225 samples, 0.44%)</title><rect x="85.4061%" y="581" width="0.4449%" height="15" fill="rgb(236,163,23)" fg:x="235158" fg:w="1225"/><text x="85.6561%" y="591.50"></text></g><g><title>&lt;stop_token::future::TimeoutAt&lt;F&gt; as core::future::future::Future&gt;::poll (1,514 samples, 0.55%)</title><rect x="85.3019%" y="597" width="0.5499%" height="15" fill="rgb(242,114,45)" fg:x="234871" fg:w="1514"/><text x="85.5519%" y="607.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (6,217 samples, 2.26%)</title><rect x="83.5942%" y="693" width="2.2579%" height="15" fill="rgb(232,10,53)" fg:x="230169" fg:w="6217"/><text x="83.8442%" y="703.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (6,217 samples, 2.26%)</title><rect x="83.5942%" y="677" width="2.2579%" height="15" fill="rgb(245,108,29)" fg:x="230169" fg:w="6217"/><text x="83.8442%" y="687.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6,217 samples, 2.26%)</title><rect x="83.5942%" y="661" width="2.2579%" height="15" fill="rgb(240,89,53)" fg:x="230169" fg:w="6217"/><text x="83.8442%" y="671.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6,216 samples, 2.26%)</title><rect x="83.5945%" y="645" width="2.2576%" height="15" fill="rgb(226,60,45)" fg:x="230170" fg:w="6216"/><text x="83.8445%" y="655.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (6,202 samples, 2.25%)</title><rect x="83.5996%" y="629" width="2.2525%" height="15" fill="rgb(230,41,44)" fg:x="230184" fg:w="6202"/><text x="83.8496%" y="639.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (6,201 samples, 2.25%)</title><rect x="83.6000%" y="613" width="2.2521%" height="15" fill="rgb(230,26,20)" fg:x="230185" fg:w="6201"/><text x="83.8500%" y="623.50">&lt;..</text></g><g><title>[libc.so.6] (183 samples, 0.07%)</title><rect x="85.8521%" y="693" width="0.0665%" height="15" fill="rgb(237,170,32)" fg:x="236386" fg:w="183"/><text x="86.1021%" y="703.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.03%)</title><rect x="85.9186%" y="677" width="0.0294%" height="15" fill="rgb(212,35,42)" fg:x="236569" fg:w="81"/><text x="86.1686%" y="687.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (79 samples, 0.03%)</title><rect x="85.9193%" y="661" width="0.0287%" height="15" fill="rgb(227,31,34)" fg:x="236571" fg:w="79"/><text x="86.1693%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.02%)</title><rect x="85.9280%" y="645" width="0.0200%" height="15" fill="rgb(216,19,18)" fg:x="236595" fg:w="55"/><text x="86.1780%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.02%)</title><rect x="85.9280%" y="629" width="0.0200%" height="15" fill="rgb(211,133,42)" fg:x="236595" fg:w="55"/><text x="86.1780%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (55 samples, 0.02%)</title><rect x="85.9280%" y="613" width="0.0200%" height="15" fill="rgb(244,66,13)" fg:x="236595" fg:w="55"/><text x="86.1780%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (55 samples, 0.02%)</title><rect x="85.9280%" y="597" width="0.0200%" height="15" fill="rgb(218,185,50)" fg:x="236595" fg:w="55"/><text x="86.1780%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (36 samples, 0.01%)</title><rect x="85.9349%" y="581" width="0.0131%" height="15" fill="rgb(219,149,13)" fg:x="236614" fg:w="36"/><text x="86.1849%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (106 samples, 0.04%)</title><rect x="85.9186%" y="693" width="0.0385%" height="15" fill="rgb(221,125,0)" fg:x="236569" fg:w="106"/><text x="86.1686%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (58 samples, 0.02%)</title><rect x="85.9865%" y="597" width="0.0211%" height="15" fill="rgb(247,126,27)" fg:x="236756" fg:w="58"/><text x="86.2365%" y="607.50"></text></g><g><title>core::mem::drop (63 samples, 0.02%)</title><rect x="85.9865%" y="645" width="0.0229%" height="15" fill="rgb(250,138,30)" fg:x="236756" fg:w="63"/><text x="86.2365%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (63 samples, 0.02%)</title><rect x="85.9865%" y="629" width="0.0229%" height="15" fill="rgb(230,151,9)" fg:x="236756" fg:w="63"/><text x="86.2365%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (63 samples, 0.02%)</title><rect x="85.9865%" y="613" width="0.0229%" height="15" fill="rgb(233,80,38)" fg:x="236756" fg:w="63"/><text x="86.2365%" y="623.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (31 samples, 0.01%)</title><rect x="86.0137%" y="645" width="0.0113%" height="15" fill="rgb(232,68,43)" fg:x="236831" fg:w="31"/><text x="86.2637%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (31 samples, 0.01%)</title><rect x="86.0137%" y="629" width="0.0113%" height="15" fill="rgb(254,5,50)" fg:x="236831" fg:w="31"/><text x="86.2637%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (31 samples, 0.01%)</title><rect x="86.0137%" y="613" width="0.0113%" height="15" fill="rgb(225,45,5)" fg:x="236831" fg:w="31"/><text x="86.2637%" y="623.50"></text></g><g><title>std::sys::unix::futex::futex_wait (132 samples, 0.05%)</title><rect x="86.0311%" y="581" width="0.0479%" height="15" fill="rgb(239,22,3)" fg:x="236879" fg:w="132"/><text x="86.2811%" y="591.50"></text></g><g><title>syscall (126 samples, 0.05%)</title><rect x="86.0333%" y="565" width="0.0458%" height="15" fill="rgb(243,129,0)" fg:x="236885" fg:w="126"/><text x="86.2833%" y="575.50"></text></g><g><title>[unknown] (125 samples, 0.05%)</title><rect x="86.0337%" y="549" width="0.0454%" height="15" fill="rgb(223,164,0)" fg:x="236886" fg:w="125"/><text x="86.2837%" y="559.50"></text></g><g><title>[unknown] (125 samples, 0.05%)</title><rect x="86.0337%" y="533" width="0.0454%" height="15" fill="rgb(221,46,29)" fg:x="236886" fg:w="125"/><text x="86.2837%" y="543.50"></text></g><g><title>[unknown] (123 samples, 0.04%)</title><rect x="86.0344%" y="517" width="0.0447%" height="15" fill="rgb(205,97,47)" fg:x="236888" fg:w="123"/><text x="86.2844%" y="527.50"></text></g><g><title>[unknown] (121 samples, 0.04%)</title><rect x="86.0351%" y="501" width="0.0439%" height="15" fill="rgb(249,14,8)" fg:x="236890" fg:w="121"/><text x="86.2851%" y="511.50"></text></g><g><title>[unknown] (114 samples, 0.04%)</title><rect x="86.0377%" y="485" width="0.0414%" height="15" fill="rgb(216,77,3)" fg:x="236897" fg:w="114"/><text x="86.2877%" y="495.50"></text></g><g><title>[unknown] (110 samples, 0.04%)</title><rect x="86.0391%" y="469" width="0.0400%" height="15" fill="rgb(206,168,54)" fg:x="236901" fg:w="110"/><text x="86.2891%" y="479.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="86.0413%" y="453" width="0.0378%" height="15" fill="rgb(236,3,41)" fg:x="236907" fg:w="104"/><text x="86.2913%" y="463.50"></text></g><g><title>[unknown] (91 samples, 0.03%)</title><rect x="86.0460%" y="437" width="0.0330%" height="15" fill="rgb(231,132,24)" fg:x="236920" fg:w="91"/><text x="86.2960%" y="447.50"></text></g><g><title>[unknown] (65 samples, 0.02%)</title><rect x="86.0555%" y="421" width="0.0236%" height="15" fill="rgb(227,221,40)" fg:x="236946" fg:w="65"/><text x="86.3055%" y="431.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="86.0620%" y="405" width="0.0171%" height="15" fill="rgb(233,151,11)" fg:x="236964" fg:w="47"/><text x="86.3120%" y="415.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (566 samples, 0.21%)</title><rect x="85.9570%" y="677" width="0.2056%" height="15" fill="rgb(247,81,35)" fg:x="236675" fg:w="566"/><text x="86.2070%" y="687.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (566 samples, 0.21%)</title><rect x="85.9570%" y="661" width="0.2056%" height="15" fill="rgb(243,128,48)" fg:x="236675" fg:w="566"/><text x="86.2070%" y="671.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (372 samples, 0.14%)</title><rect x="86.0275%" y="645" width="0.1351%" height="15" fill="rgb(253,16,10)" fg:x="236869" fg:w="372"/><text x="86.2775%" y="655.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (368 samples, 0.13%)</title><rect x="86.0290%" y="629" width="0.1337%" height="15" fill="rgb(228,67,27)" fg:x="236873" fg:w="368"/><text x="86.2790%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (368 samples, 0.13%)</title><rect x="86.0290%" y="613" width="0.1337%" height="15" fill="rgb(231,105,25)" fg:x="236873" fg:w="368"/><text x="86.2790%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (366 samples, 0.13%)</title><rect x="86.0297%" y="597" width="0.1329%" height="15" fill="rgb(213,166,47)" fg:x="236875" fg:w="366"/><text x="86.2797%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::spin (230 samples, 0.08%)</title><rect x="86.0791%" y="581" width="0.0835%" height="15" fill="rgb(209,27,10)" fg:x="237011" fg:w="230"/><text x="86.3291%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (31 samples, 0.01%)</title><rect x="86.1514%" y="565" width="0.0113%" height="15" fill="rgb(241,44,30)" fg:x="237210" fg:w="31"/><text x="86.4014%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.01%)</title><rect x="86.1514%" y="549" width="0.0113%" height="15" fill="rgb(223,216,15)" fg:x="237210" fg:w="31"/><text x="86.4014%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (814 samples, 0.30%)</title><rect x="85.9570%" y="693" width="0.2956%" height="15" fill="rgb(227,14,7)" fg:x="236675" fg:w="814"/><text x="86.2070%" y="703.50"></text></g><g><title>syscall (241 samples, 0.09%)</title><rect x="86.1652%" y="677" width="0.0875%" height="15" fill="rgb(237,14,5)" fg:x="237248" fg:w="241"/><text x="86.4152%" y="687.50"></text></g><g><title>[unknown] (236 samples, 0.09%)</title><rect x="86.1670%" y="661" width="0.0857%" height="15" fill="rgb(232,14,36)" fg:x="237253" fg:w="236"/><text x="86.4170%" y="671.50"></text></g><g><title>[unknown] (232 samples, 0.08%)</title><rect x="86.1684%" y="645" width="0.0843%" height="15" fill="rgb(234,0,38)" fg:x="237257" fg:w="232"/><text x="86.4184%" y="655.50"></text></g><g><title>[unknown] (230 samples, 0.08%)</title><rect x="86.1692%" y="629" width="0.0835%" height="15" fill="rgb(207,170,14)" fg:x="237259" fg:w="230"/><text x="86.4192%" y="639.50"></text></g><g><title>[unknown] (228 samples, 0.08%)</title><rect x="86.1699%" y="613" width="0.0828%" height="15" fill="rgb(252,45,13)" fg:x="237261" fg:w="228"/><text x="86.4199%" y="623.50"></text></g><g><title>[unknown] (209 samples, 0.08%)</title><rect x="86.1768%" y="597" width="0.0759%" height="15" fill="rgb(213,142,7)" fg:x="237280" fg:w="209"/><text x="86.4268%" y="607.50"></text></g><g><title>[unknown] (167 samples, 0.06%)</title><rect x="86.1920%" y="581" width="0.0607%" height="15" fill="rgb(216,157,23)" fg:x="237322" fg:w="167"/><text x="86.4420%" y="591.50"></text></g><g><title>[unknown] (114 samples, 0.04%)</title><rect x="86.2113%" y="565" width="0.0414%" height="15" fill="rgb(212,145,33)" fg:x="237375" fg:w="114"/><text x="86.4613%" y="575.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="86.2189%" y="549" width="0.0338%" height="15" fill="rgb(233,26,13)" fg:x="237396" fg:w="93"/><text x="86.4689%" y="559.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="86.2327%" y="533" width="0.0200%" height="15" fill="rgb(219,196,19)" fg:x="237434" fg:w="55"/><text x="86.4827%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt; (51 samples, 0.02%)</title><rect x="86.2610%" y="693" width="0.0185%" height="15" fill="rgb(246,56,21)" fg:x="237512" fg:w="51"/><text x="86.5110%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt; (43 samples, 0.02%)</title><rect x="86.2639%" y="677" width="0.0156%" height="15" fill="rgb(222,28,53)" fg:x="237520" fg:w="43"/><text x="86.5139%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;stop_token::deadline::Deadline&gt; (38 samples, 0.01%)</title><rect x="86.2658%" y="661" width="0.0138%" height="15" fill="rgb(224,5,27)" fg:x="237525" fg:w="38"/><text x="86.5158%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;stop_token::deadline::DeadlineKind&gt; (38 samples, 0.01%)</title><rect x="86.2658%" y="645" width="0.0138%" height="15" fill="rgb(220,153,33)" fg:x="237525" fg:w="38"/><text x="86.5158%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;stop_token::stop_source::StopToken&gt; (38 samples, 0.01%)</title><rect x="86.2658%" y="629" width="0.0138%" height="15" fill="rgb(226,58,19)" fg:x="237525" fg:w="38"/><text x="86.5158%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;stop_token::stop_source::Never&gt;&gt; (38 samples, 0.01%)</title><rect x="86.2658%" y="613" width="0.0138%" height="15" fill="rgb(239,112,23)" fg:x="237525" fg:w="38"/><text x="86.5158%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (31 samples, 0.01%)</title><rect x="86.2683%" y="597" width="0.0113%" height="15" fill="rgb(251,213,20)" fg:x="237532" fg:w="31"/><text x="86.5183%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (31 samples, 0.01%)</title><rect x="86.2683%" y="581" width="0.0113%" height="15" fill="rgb(215,181,21)" fg:x="237532" fg:w="31"/><text x="86.5183%" y="591.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="86.2683%" y="565" width="0.0113%" height="15" fill="rgb(240,8,35)" fg:x="237532" fg:w="31"/><text x="86.5183%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7,555 samples, 2.74%)</title><rect x="83.5361%" y="725" width="2.7439%" height="15" fill="rgb(232,203,3)" fg:x="230009" fg:w="7555"/><text x="83.7861%" y="735.50">&lt;c..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (7,547 samples, 2.74%)</title><rect x="83.5390%" y="709" width="2.7410%" height="15" fill="rgb(214,202,43)" fg:x="230017" fg:w="7547"/><text x="83.7890%" y="719.50">as..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7,569 samples, 2.75%)</title><rect x="83.5361%" y="741" width="2.7490%" height="15" fill="rgb(254,35,11)" fg:x="230009" fg:w="7569"/><text x="83.7861%" y="751.50">&lt;c..</text></g><g><title>alloc::alloc::box_free (41 samples, 0.01%)</title><rect x="86.2857%" y="645" width="0.0149%" height="15" fill="rgb(239,173,13)" fg:x="237580" fg:w="41"/><text x="86.5357%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.01%)</title><rect x="86.2857%" y="629" width="0.0149%" height="15" fill="rgb(220,141,0)" fg:x="237580" fg:w="41"/><text x="86.5357%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 0.01%)</title><rect x="86.2857%" y="613" width="0.0149%" height="15" fill="rgb(210,98,12)" fg:x="237580" fg:w="41"/><text x="86.5357%" y="623.50"></text></g><g><title>cfree (41 samples, 0.01%)</title><rect x="86.2857%" y="597" width="0.0149%" height="15" fill="rgb(254,153,22)" fg:x="237580" fg:w="41"/><text x="86.5357%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt;&gt; (42 samples, 0.02%)</title><rect x="86.2857%" y="677" width="0.0153%" height="15" fill="rgb(247,223,17)" fg:x="237580" fg:w="42"/><text x="86.5357%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;zenoh_transport::unicast::manager::&lt;impl zenoh_transport::manager::TransportManager&gt;::handle_new_link_unicast::{{closure}}::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt; (42 samples, 0.02%)</title><rect x="86.2857%" y="661" width="0.0153%" height="15" fill="rgb(246,56,7)" fg:x="237580" fg:w="42"/><text x="86.5357%" y="671.50"></text></g><g><title>[libc.so.6] (244 samples, 0.09%)</title><rect x="86.3141%" y="581" width="0.0886%" height="15" fill="rgb(240,226,12)" fg:x="237658" fg:w="244"/><text x="86.5641%" y="591.50"></text></g><g><title>__lll_lock_wait_private (167 samples, 0.06%)</title><rect x="86.3420%" y="565" width="0.0607%" height="15" fill="rgb(205,87,46)" fg:x="237735" fg:w="167"/><text x="86.5920%" y="575.50"></text></g><g><title>[unknown] (167 samples, 0.06%)</title><rect x="86.3420%" y="549" width="0.0607%" height="15" fill="rgb(245,214,51)" fg:x="237735" fg:w="167"/><text x="86.5920%" y="559.50"></text></g><g><title>[unknown] (165 samples, 0.06%)</title><rect x="86.3428%" y="533" width="0.0599%" height="15" fill="rgb(223,172,33)" fg:x="237737" fg:w="165"/><text x="86.5928%" y="543.50"></text></g><g><title>[unknown] (165 samples, 0.06%)</title><rect x="86.3428%" y="517" width="0.0599%" height="15" fill="rgb(227,203,34)" fg:x="237737" fg:w="165"/><text x="86.5928%" y="527.50"></text></g><g><title>[unknown] (165 samples, 0.06%)</title><rect x="86.3428%" y="501" width="0.0599%" height="15" fill="rgb(248,143,44)" fg:x="237737" fg:w="165"/><text x="86.5928%" y="511.50"></text></g><g><title>[unknown] (164 samples, 0.06%)</title><rect x="86.3431%" y="485" width="0.0596%" height="15" fill="rgb(226,162,5)" fg:x="237738" fg:w="164"/><text x="86.5931%" y="495.50"></text></g><g><title>[unknown] (163 samples, 0.06%)</title><rect x="86.3435%" y="469" width="0.0592%" height="15" fill="rgb(211,143,1)" fg:x="237739" fg:w="163"/><text x="86.5935%" y="479.50"></text></g><g><title>[unknown] (163 samples, 0.06%)</title><rect x="86.3435%" y="453" width="0.0592%" height="15" fill="rgb(224,96,15)" fg:x="237739" fg:w="163"/><text x="86.5935%" y="463.50"></text></g><g><title>[unknown] (154 samples, 0.06%)</title><rect x="86.3467%" y="437" width="0.0559%" height="15" fill="rgb(222,4,38)" fg:x="237748" fg:w="154"/><text x="86.5967%" y="447.50"></text></g><g><title>[unknown] (141 samples, 0.05%)</title><rect x="86.3515%" y="421" width="0.0512%" height="15" fill="rgb(253,228,15)" fg:x="237761" fg:w="141"/><text x="86.6015%" y="431.50"></text></g><g><title>[unknown] (124 samples, 0.05%)</title><rect x="86.3576%" y="405" width="0.0450%" height="15" fill="rgb(242,194,12)" fg:x="237778" fg:w="124"/><text x="86.6076%" y="415.50"></text></g><g><title>[unknown] (92 samples, 0.03%)</title><rect x="86.3693%" y="389" width="0.0334%" height="15" fill="rgb(214,177,31)" fg:x="237810" fg:w="92"/><text x="86.6193%" y="399.50"></text></g><g><title>[unknown] (53 samples, 0.02%)</title><rect x="86.3834%" y="373" width="0.0192%" height="15" fill="rgb(226,58,51)" fg:x="237849" fg:w="53"/><text x="86.6334%" y="383.50"></text></g><g><title>alloc::alloc::box_free (311 samples, 0.11%)</title><rect x="86.3021%" y="645" width="0.1130%" height="15" fill="rgb(250,119,16)" fg:x="237625" fg:w="311"/><text x="86.5521%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (311 samples, 0.11%)</title><rect x="86.3021%" y="629" width="0.1130%" height="15" fill="rgb(223,128,53)" fg:x="237625" fg:w="311"/><text x="86.5521%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (311 samples, 0.11%)</title><rect x="86.3021%" y="613" width="0.1130%" height="15" fill="rgb(251,199,15)" fg:x="237625" fg:w="311"/><text x="86.5521%" y="623.50"></text></g><g><title>cfree (309 samples, 0.11%)</title><rect x="86.3028%" y="597" width="0.1122%" height="15" fill="rgb(235,168,42)" fg:x="237627" fg:w="309"/><text x="86.5528%" y="607.50"></text></g><g><title>__lll_lock_wake_private (34 samples, 0.01%)</title><rect x="86.4027%" y="581" width="0.0123%" height="15" fill="rgb(250,210,17)" fg:x="237902" fg:w="34"/><text x="86.6527%" y="591.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="86.4027%" y="565" width="0.0123%" height="15" fill="rgb(226,36,41)" fg:x="237902" fg:w="34"/><text x="86.6527%" y="575.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="86.4034%" y="549" width="0.0116%" height="15" fill="rgb(225,87,10)" fg:x="237904" fg:w="32"/><text x="86.6534%" y="559.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="86.4034%" y="533" width="0.0116%" height="15" fill="rgb(228,83,9)" fg:x="237904" fg:w="32"/><text x="86.6534%" y="543.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="86.4034%" y="517" width="0.0116%" height="15" fill="rgb(225,16,36)" fg:x="237904" fg:w="32"/><text x="86.6534%" y="527.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="86.4038%" y="501" width="0.0113%" height="15" fill="rgb(242,198,13)" fg:x="237905" fg:w="31"/><text x="86.6538%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt;&gt; (318 samples, 0.12%)</title><rect x="86.3010%" y="677" width="0.1155%" height="15" fill="rgb(239,25,51)" fg:x="237622" fg:w="318"/><text x="86.5510%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;core::result::Result&lt;(),stop_token::deadline::TimedOutError&gt;,async_std::task::builder::SupportTaskLocals&lt;stop_token::future::TimeoutAt&lt;core::future::from_generator::GenFuture&lt;zenoh::net::routing::network::Network::link_states::{{closure}}&gt;&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt; (318 samples, 0.12%)</title><rect x="86.3010%" y="661" width="0.1155%" height="15" fill="rgb(239,28,37)" fg:x="237622" fg:w="318"/><text x="86.5510%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (373 samples, 0.14%)</title><rect x="86.2857%" y="741" width="0.1355%" height="15" fill="rgb(234,70,17)" fg:x="237580" fg:w="373"/><text x="86.5357%" y="751.50"></text></g><g><title>async_task::utils::abort_on_panic (373 samples, 0.14%)</title><rect x="86.2857%" y="725" width="0.1355%" height="15" fill="rgb(231,215,53)" fg:x="237580" fg:w="373"/><text x="86.5357%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future::{{closure}} (373 samples, 0.14%)</title><rect x="86.2857%" y="709" width="0.1355%" height="15" fill="rgb(218,140,42)" fg:x="237580" fg:w="373"/><text x="86.5357%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (373 samples, 0.14%)</title><rect x="86.2857%" y="693" width="0.1355%" height="15" fill="rgb(233,227,45)" fg:x="237580" fg:w="373"/><text x="86.5357%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (69 samples, 0.03%)</title><rect x="86.4241%" y="709" width="0.0251%" height="15" fill="rgb(225,189,21)" fg:x="237961" fg:w="69"/><text x="86.6741%" y="719.50"></text></g><g><title>cfree (69 samples, 0.03%)</title><rect x="86.4241%" y="693" width="0.0251%" height="15" fill="rgb(237,176,54)" fg:x="237961" fg:w="69"/><text x="86.6741%" y="703.50"></text></g><g><title>[libc.so.6] (55 samples, 0.02%)</title><rect x="86.4292%" y="677" width="0.0200%" height="15" fill="rgb(215,131,46)" fg:x="237975" fg:w="55"/><text x="86.6792%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (80 samples, 0.03%)</title><rect x="86.4212%" y="741" width="0.0291%" height="15" fill="rgb(218,95,20)" fg:x="237953" fg:w="80"/><text x="86.6712%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (72 samples, 0.03%)</title><rect x="86.4241%" y="725" width="0.0261%" height="15" fill="rgb(208,198,12)" fg:x="237961" fg:w="72"/><text x="86.6741%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14,498 samples, 5.27%)</title><rect x="81.1939%" y="757" width="5.2655%" height="15" fill="rgb(239,107,50)" fg:x="223560" fg:w="14498"/><text x="81.4439%" y="767.50">async_..</text></g><g><title>async_task::runnable::Runnable::run (159 samples, 0.06%)</title><rect x="86.4593%" y="757" width="0.0577%" height="15" fill="rgb(240,217,37)" fg:x="238058" fg:w="159"/><text x="86.7093%" y="767.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15,597 samples, 5.66%)</title><rect x="80.8612%" y="805" width="5.6646%" height="15" fill="rgb(242,197,49)" fg:x="222644" fg:w="15597"/><text x="81.1112%" y="815.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,594 samples, 5.66%)</title><rect x="80.8623%" y="789" width="5.6635%" height="15" fill="rgb(219,171,17)" fg:x="222647" fg:w="15594"/><text x="81.1123%" y="799.50">&lt;core::..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (15,592 samples, 5.66%)</title><rect x="80.8630%" y="773" width="5.6628%" height="15" fill="rgb(209,81,40)" fg:x="222649" fg:w="15592"/><text x="81.1130%" y="783.50">async_e..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (28 samples, 0.01%)</title><rect x="86.5273%" y="789" width="0.0102%" height="15" fill="rgb(237,156,30)" fg:x="238245" fg:w="28"/><text x="86.7773%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (15,634 samples, 5.68%)</title><rect x="80.8608%" y="821" width="5.6781%" height="15" fill="rgb(212,127,16)" fg:x="222643" fg:w="15634"/><text x="81.1108%" y="831.50">async_e..</text></g><g><title>async_executor::Runner::new (34 samples, 0.01%)</title><rect x="86.5265%" y="805" width="0.0123%" height="15" fill="rgb(226,66,32)" fg:x="238243" fg:w="34"/><text x="86.7765%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (50 samples, 0.02%)</title><rect x="86.5661%" y="597" width="0.0182%" height="15" fill="rgb(245,22,46)" fg:x="238352" fg:w="50"/><text x="86.8161%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (83 samples, 0.03%)</title><rect x="86.5578%" y="613" width="0.0301%" height="15" fill="rgb(210,112,21)" fg:x="238329" fg:w="83"/><text x="86.8078%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (119 samples, 0.04%)</title><rect x="86.5556%" y="629" width="0.0432%" height="15" fill="rgb(207,118,39)" fg:x="238323" fg:w="119"/><text x="86.8056%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (153 samples, 0.06%)</title><rect x="86.5527%" y="725" width="0.0556%" height="15" fill="rgb(205,206,35)" fg:x="238315" fg:w="153"/><text x="86.8027%" y="735.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (151 samples, 0.05%)</title><rect x="86.5534%" y="709" width="0.0548%" height="15" fill="rgb(222,120,2)" fg:x="238317" fg:w="151"/><text x="86.8034%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (149 samples, 0.05%)</title><rect x="86.5541%" y="693" width="0.0541%" height="15" fill="rgb(205,38,18)" fg:x="238319" fg:w="149"/><text x="86.8041%" y="703.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (149 samples, 0.05%)</title><rect x="86.5541%" y="677" width="0.0541%" height="15" fill="rgb(226,61,2)" fg:x="238319" fg:w="149"/><text x="86.8041%" y="687.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (145 samples, 0.05%)</title><rect x="86.5556%" y="661" width="0.0527%" height="15" fill="rgb(242,161,23)" fg:x="238323" fg:w="145"/><text x="86.8056%" y="671.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (145 samples, 0.05%)</title><rect x="86.5556%" y="645" width="0.0527%" height="15" fill="rgb(213,13,52)" fg:x="238323" fg:w="145"/><text x="86.8056%" y="655.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (158 samples, 0.06%)</title><rect x="86.5523%" y="741" width="0.0574%" height="15" fill="rgb(246,209,47)" fg:x="238314" fg:w="158"/><text x="86.8023%" y="751.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="86.6137%" y="725" width="0.0131%" height="15" fill="rgb(214,41,3)" fg:x="238483" fg:w="36"/><text x="86.8637%" y="735.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (212 samples, 0.08%)</title><rect x="86.5501%" y="773" width="0.0770%" height="15" fill="rgb(236,119,38)" fg:x="238308" fg:w="212"/><text x="86.8001%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (212 samples, 0.08%)</title><rect x="86.5501%" y="757" width="0.0770%" height="15" fill="rgb(218,50,11)" fg:x="238308" fg:w="212"/><text x="86.8001%" y="767.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (48 samples, 0.02%)</title><rect x="86.6097%" y="741" width="0.0174%" height="15" fill="rgb(228,38,11)" fg:x="238472" fg:w="48"/><text x="86.8597%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.01%)</title><rect x="86.6446%" y="725" width="0.0102%" height="15" fill="rgb(212,13,9)" fg:x="238568" fg:w="28"/><text x="86.8946%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (316 samples, 0.11%)</title><rect x="86.5483%" y="805" width="0.1148%" height="15" fill="rgb(208,211,9)" fg:x="238303" fg:w="316"/><text x="86.7983%" y="815.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (315 samples, 0.11%)</title><rect x="86.5487%" y="789" width="0.1144%" height="15" fill="rgb(239,39,32)" fg:x="238304" fg:w="315"/><text x="86.7987%" y="799.50"></text></g><g><title>async_executor::Runner::new (76 samples, 0.03%)</title><rect x="86.6355%" y="773" width="0.0276%" height="15" fill="rgb(254,179,26)" fg:x="238543" fg:w="76"/><text x="86.8855%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (69 samples, 0.03%)</title><rect x="86.6380%" y="757" width="0.0251%" height="15" fill="rgb(249,165,28)" fg:x="238550" fg:w="69"/><text x="86.8880%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (52 samples, 0.02%)</title><rect x="86.6442%" y="741" width="0.0189%" height="15" fill="rgb(225,59,50)" fg:x="238567" fg:w="52"/><text x="86.8942%" y="751.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (15,990 samples, 5.81%)</title><rect x="80.8565%" y="853" width="5.8073%" height="15" fill="rgb(209,122,5)" fg:x="222631" fg:w="15990"/><text x="81.1065%" y="863.50">&lt;future..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,986 samples, 5.81%)</title><rect x="80.8579%" y="837" width="5.8059%" height="15" fill="rgb(214,65,34)" fg:x="222635" fg:w="15986"/><text x="81.1079%" y="847.50">&lt;core::..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (344 samples, 0.12%)</title><rect x="86.5389%" y="821" width="0.1249%" height="15" fill="rgb(249,183,32)" fg:x="238277" fg:w="344"/><text x="86.7889%" y="831.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (42 samples, 0.02%)</title><rect x="86.6718%" y="837" width="0.0153%" height="15" fill="rgb(218,122,24)" fg:x="238643" fg:w="42"/><text x="86.9218%" y="847.50"></text></g><g><title>polling::Poller::wait (43 samples, 0.02%)</title><rect x="86.6881%" y="837" width="0.0156%" height="15" fill="rgb(224,109,18)" fg:x="238688" fg:w="43"/><text x="86.9381%" y="847.50"></text></g><g><title>polling::epoll::Poller::wait (38 samples, 0.01%)</title><rect x="86.6900%" y="821" width="0.0138%" height="15" fill="rgb(210,68,50)" fg:x="238693" fg:w="38"/><text x="86.9400%" y="831.50"></text></g><g><title>async_io::reactor::ReactorLock::react (120 samples, 0.04%)</title><rect x="86.6685%" y="853" width="0.0436%" height="15" fill="rgb(212,184,34)" fg:x="238634" fg:w="120"/><text x="86.9185%" y="863.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (16,157 samples, 5.87%)</title><rect x="80.8554%" y="885" width="5.8680%" height="15" fill="rgb(238,105,48)" fg:x="222628" fg:w="16157"/><text x="81.1054%" y="895.50">async_g..</text></g><g><title>async_io::driver::block_on (16,157 samples, 5.87%)</title><rect x="80.8554%" y="869" width="5.8680%" height="15" fill="rgb(222,134,54)" fg:x="222628" fg:w="16157"/><text x="81.1054%" y="879.50">async_i..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (16,162 samples, 5.87%)</title><rect x="80.8543%" y="917" width="5.8698%" height="15" fill="rgb(246,24,43)" fg:x="222625" fg:w="16162"/><text x="81.1043%" y="927.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on (16,162 samples, 5.87%)</title><rect x="80.8543%" y="901" width="5.8698%" height="15" fill="rgb(227,169,22)" fg:x="222625" fg:w="16162"/><text x="81.1043%" y="911.50">async_g..</text></g><g><title>std::panic::catch_unwind (16,166 samples, 5.87%)</title><rect x="80.8543%" y="1013" width="5.8713%" height="15" fill="rgb(253,152,4)" fg:x="222625" fg:w="16166"/><text x="81.1043%" y="1023.50">std::pa..</text></g><g><title>std::panicking::try (16,166 samples, 5.87%)</title><rect x="80.8543%" y="997" width="5.8713%" height="15" fill="rgb(219,158,36)" fg:x="222625" fg:w="16166"/><text x="81.1043%" y="1007.50">std::pa..</text></g><g><title>std::panicking::try::do_call (16,166 samples, 5.87%)</title><rect x="80.8543%" y="981" width="5.8713%" height="15" fill="rgb(251,128,40)" fg:x="222625" fg:w="16166"/><text x="81.1043%" y="991.50">std::pa..</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (16,166 samples, 5.87%)</title><rect x="80.8543%" y="965" width="5.8713%" height="15" fill="rgb(254,101,39)" fg:x="222625" fg:w="16166"/><text x="81.1043%" y="975.50">async_g..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16,166 samples, 5.87%)</title><rect x="80.8543%" y="949" width="5.8713%" height="15" fill="rgb(221,168,40)" fg:x="222625" fg:w="16166"/><text x="81.1043%" y="959.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16,166 samples, 5.87%)</title><rect x="80.8543%" y="933" width="5.8713%" height="15" fill="rgb(221,14,27)" fg:x="222625" fg:w="16166"/><text x="81.1043%" y="943.50">std::th..</text></g><g><title>core::ops::function::FnOnce::call_once (16,182 samples, 5.88%)</title><rect x="80.8525%" y="1045" width="5.8771%" height="15" fill="rgb(207,36,43)" fg:x="222620" fg:w="16182"/><text x="81.1025%" y="1055.50">core::o..</text></g><g><title>async_global_executor::threading::thread_main_loop (16,182 samples, 5.88%)</title><rect x="80.8525%" y="1029" width="5.8771%" height="15" fill="rgb(240,172,53)" fg:x="222620" fg:w="16182"/><text x="81.1025%" y="1039.50">async_g..</text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (499 samples, 0.18%)</title><rect x="87.3513%" y="613" width="0.1812%" height="15" fill="rgb(241,138,43)" fg:x="240514" fg:w="499"/><text x="87.6013%" y="623.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (416 samples, 0.15%)</title><rect x="87.3815%" y="597" width="0.1511%" height="15" fill="rgb(227,78,19)" fg:x="240597" fg:w="416"/><text x="87.6315%" y="607.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (165 samples, 0.06%)</title><rect x="87.4726%" y="581" width="0.0599%" height="15" fill="rgb(215,127,44)" fg:x="240848" fg:w="165"/><text x="87.7226%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (165 samples, 0.06%)</title><rect x="87.4726%" y="565" width="0.0599%" height="15" fill="rgb(227,13,10)" fg:x="240848" fg:w="165"/><text x="87.7226%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (94 samples, 0.03%)</title><rect x="87.8213%" y="501" width="0.0341%" height="15" fill="rgb(249,177,6)" fg:x="241808" fg:w="94"/><text x="88.0713%" y="511.50"></text></g><g><title>core::mem::replace (94 samples, 0.03%)</title><rect x="87.8213%" y="485" width="0.0341%" height="15" fill="rgb(215,154,26)" fg:x="241808" fg:w="94"/><text x="88.0713%" y="495.50"></text></g><g><title>core::ptr::read (87 samples, 0.03%)</title><rect x="87.8238%" y="469" width="0.0316%" height="15" fill="rgb(250,168,20)" fg:x="241815" fg:w="87"/><text x="88.0738%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (338 samples, 0.12%)</title><rect x="87.8670%" y="485" width="0.1228%" height="15" fill="rgb(222,53,38)" fg:x="241934" fg:w="338"/><text x="88.1170%" y="495.50"></text></g><g><title>core::mem::replace (338 samples, 0.12%)</title><rect x="87.8670%" y="469" width="0.1228%" height="15" fill="rgb(245,154,5)" fg:x="241934" fg:w="338"/><text x="88.1170%" y="479.50"></text></g><g><title>core::ptr::read (331 samples, 0.12%)</title><rect x="87.8696%" y="453" width="0.1202%" height="15" fill="rgb(214,89,50)" fg:x="241941" fg:w="331"/><text x="88.1196%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (395 samples, 0.14%)</title><rect x="87.8554%" y="501" width="0.1435%" height="15" fill="rgb(232,73,14)" fg:x="241902" fg:w="395"/><text x="88.1054%" y="511.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (170 samples, 0.06%)</title><rect x="87.9989%" y="485" width="0.0617%" height="15" fill="rgb(230,101,20)" fg:x="242297" fg:w="170"/><text x="88.2489%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (200 samples, 0.07%)</title><rect x="87.9989%" y="501" width="0.0726%" height="15" fill="rgb(208,56,28)" fg:x="242297" fg:w="200"/><text x="88.2489%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (30 samples, 0.01%)</title><rect x="88.0606%" y="485" width="0.0109%" height="15" fill="rgb(247,205,22)" fg:x="242467" fg:w="30"/><text x="88.3106%" y="495.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="88.0610%" y="469" width="0.0105%" height="15" fill="rgb(252,109,51)" fg:x="242468" fg:w="29"/><text x="88.3110%" y="479.50"></text></g><g><title>core::task::wake::Waker::will_wake (222 samples, 0.08%)</title><rect x="88.0715%" y="501" width="0.0806%" height="15" fill="rgb(220,40,24)" fg:x="242497" fg:w="222"/><text x="88.3215%" y="511.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (222 samples, 0.08%)</title><rect x="88.0715%" y="485" width="0.0806%" height="15" fill="rgb(251,108,7)" fg:x="242497" fg:w="222"/><text x="88.3215%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (216 samples, 0.08%)</title><rect x="88.0737%" y="469" width="0.0784%" height="15" fill="rgb(238,102,51)" fg:x="242503" fg:w="216"/><text x="88.3237%" y="479.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (216 samples, 0.08%)</title><rect x="88.0737%" y="453" width="0.0784%" height="15" fill="rgb(219,149,34)" fg:x="242503" fg:w="216"/><text x="88.3237%" y="463.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1,790 samples, 0.65%)</title><rect x="87.6974%" y="517" width="0.6501%" height="15" fill="rgb(239,70,0)" fg:x="241467" fg:w="1790"/><text x="87.9474%" y="527.50"></text></g><g><title>event_listener::Inner::lock (538 samples, 0.20%)</title><rect x="88.1521%" y="501" width="0.1954%" height="15" fill="rgb(246,214,23)" fg:x="242719" fg:w="538"/><text x="88.4021%" y="511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (533 samples, 0.19%)</title><rect x="88.1540%" y="485" width="0.1936%" height="15" fill="rgb(239,221,51)" fg:x="242724" fg:w="533"/><text x="88.4040%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (531 samples, 0.19%)</title><rect x="88.1547%" y="469" width="0.1929%" height="15" fill="rgb(254,62,14)" fg:x="242726" fg:w="531"/><text x="88.4047%" y="479.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (531 samples, 0.19%)</title><rect x="88.1547%" y="453" width="0.1929%" height="15" fill="rgb(253,57,33)" fg:x="242726" fg:w="531"/><text x="88.4047%" y="463.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (527 samples, 0.19%)</title><rect x="88.3504%" y="517" width="0.1914%" height="15" fill="rgb(229,34,6)" fg:x="243265" fg:w="527"/><text x="88.6004%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (524 samples, 0.19%)</title><rect x="88.3515%" y="501" width="0.1903%" height="15" fill="rgb(235,191,23)" fg:x="243268" fg:w="524"/><text x="88.6015%" y="511.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (54 samples, 0.02%)</title><rect x="88.5222%" y="485" width="0.0196%" height="15" fill="rgb(217,207,27)" fg:x="243738" fg:w="54"/><text x="88.7722%" y="495.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (2,679 samples, 0.97%)</title><rect x="87.5863%" y="533" width="0.9730%" height="15" fill="rgb(232,41,44)" fg:x="241161" fg:w="2679"/><text x="87.8363%" y="543.50"></text></g><g><title>event_listener::Event::listen (48 samples, 0.02%)</title><rect x="88.5418%" y="517" width="0.0174%" height="15" fill="rgb(221,188,19)" fg:x="243792" fg:w="48"/><text x="88.7918%" y="527.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (61 samples, 0.02%)</title><rect x="88.6123%" y="501" width="0.0222%" height="15" fill="rgb(245,180,45)" fg:x="243986" fg:w="61"/><text x="88.8623%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (70 samples, 0.03%)</title><rect x="88.8854%" y="389" width="0.0254%" height="15" fill="rgb(250,220,42)" fg:x="244738" fg:w="70"/><text x="89.1354%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (35 samples, 0.01%)</title><rect x="88.9552%" y="293" width="0.0127%" height="15" fill="rgb(234,16,34)" fg:x="244930" fg:w="35"/><text x="89.2052%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (29 samples, 0.01%)</title><rect x="88.9573%" y="277" width="0.0105%" height="15" fill="rgb(233,217,23)" fg:x="244936" fg:w="29"/><text x="89.2073%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="88.9679%" y="293" width="0.0200%" height="15" fill="rgb(209,22,46)" fg:x="244965" fg:w="55"/><text x="89.2179%" y="303.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="88.9878%" y="293" width="0.0102%" height="15" fill="rgb(213,101,18)" fg:x="245020" fg:w="28"/><text x="89.2378%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (109 samples, 0.04%)</title><rect x="88.9984%" y="277" width="0.0396%" height="15" fill="rgb(215,179,52)" fg:x="245049" fg:w="109"/><text x="89.2484%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (327 samples, 0.12%)</title><rect x="88.9228%" y="325" width="0.1188%" height="15" fill="rgb(223,50,25)" fg:x="244841" fg:w="327"/><text x="89.1728%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (277 samples, 0.10%)</title><rect x="88.9410%" y="309" width="0.1006%" height="15" fill="rgb(224,51,44)" fg:x="244891" fg:w="277"/><text x="89.1910%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (119 samples, 0.04%)</title><rect x="88.9984%" y="293" width="0.0432%" height="15" fill="rgb(224,13,54)" fg:x="245049" fg:w="119"/><text x="89.2484%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (354 samples, 0.13%)</title><rect x="88.9137%" y="341" width="0.1286%" height="15" fill="rgb(219,58,47)" fg:x="244816" fg:w="354"/><text x="89.1637%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (391 samples, 0.14%)</title><rect x="88.9108%" y="389" width="0.1420%" height="15" fill="rgb(246,124,34)" fg:x="244808" fg:w="391"/><text x="89.1608%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (391 samples, 0.14%)</title><rect x="88.9108%" y="373" width="0.1420%" height="15" fill="rgb(245,109,25)" fg:x="244808" fg:w="391"/><text x="89.1608%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (391 samples, 0.14%)</title><rect x="88.9108%" y="357" width="0.1420%" height="15" fill="rgb(235,48,23)" fg:x="244808" fg:w="391"/><text x="89.1608%" y="367.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (29 samples, 0.01%)</title><rect x="89.0423%" y="341" width="0.0105%" height="15" fill="rgb(229,203,36)" fg:x="245170" fg:w="29"/><text x="89.2923%" y="351.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="89.7709%" y="357" width="0.0138%" height="15" fill="rgb(234,180,9)" fg:x="247176" fg:w="38"/><text x="90.0209%" y="367.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="89.7709%" y="341" width="0.0138%" height="15" fill="rgb(228,98,45)" fg:x="247176" fg:w="38"/><text x="90.0209%" y="351.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="89.7709%" y="325" width="0.0138%" height="15" fill="rgb(240,24,36)" fg:x="247176" fg:w="38"/><text x="90.0209%" y="335.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="89.7720%" y="309" width="0.0127%" height="15" fill="rgb(227,154,19)" fg:x="247179" fg:w="35"/><text x="90.0220%" y="319.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="89.7734%" y="293" width="0.0113%" height="15" fill="rgb(231,2,48)" fg:x="247183" fg:w="31"/><text x="90.0234%" y="303.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (1,489 samples, 0.54%)</title><rect x="89.7847%" y="357" width="0.5408%" height="15" fill="rgb(219,216,0)" fg:x="247214" fg:w="1489"/><text x="90.0347%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,302 samples, 0.47%)</title><rect x="89.8526%" y="341" width="0.4729%" height="15" fill="rgb(251,88,0)" fg:x="247401" fg:w="1302"/><text x="90.1026%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1,302 samples, 0.47%)</title><rect x="89.8526%" y="325" width="0.4729%" height="15" fill="rgb(242,45,45)" fg:x="247401" fg:w="1302"/><text x="90.1026%" y="335.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="90.3149%" y="309" width="0.0105%" height="15" fill="rgb(218,149,45)" fg:x="248674" fg:w="29"/><text x="90.5649%" y="319.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (3,282 samples, 1.19%)</title><rect x="89.1516%" y="373" width="1.1920%" height="15" fill="rgb(247,194,10)" fg:x="245471" fg:w="3282"/><text x="89.4016%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (50 samples, 0.02%)</title><rect x="90.3255%" y="357" width="0.0182%" height="15" fill="rgb(234,33,37)" fg:x="248703" fg:w="50"/><text x="90.5755%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32 samples, 0.01%)</title><rect x="90.3320%" y="341" width="0.0116%" height="15" fill="rgb(218,61,13)" fg:x="248721" fg:w="32"/><text x="90.5820%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.01%)</title><rect x="90.3320%" y="325" width="0.0116%" height="15" fill="rgb(210,80,52)" fg:x="248721" fg:w="32"/><text x="90.5820%" y="335.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (57 samples, 0.02%)</title><rect x="90.3436%" y="373" width="0.0207%" height="15" fill="rgb(218,203,27)" fg:x="248753" fg:w="57"/><text x="90.5936%" y="383.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (42 samples, 0.02%)</title><rect x="90.3643%" y="373" width="0.0153%" height="15" fill="rgb(209,126,33)" fg:x="248810" fg:w="42"/><text x="90.6143%" y="383.50"></text></g><g><title>async_executor::steal (3,663 samples, 1.33%)</title><rect x="89.0543%" y="389" width="1.3304%" height="15" fill="rgb(234,173,41)" fg:x="245203" fg:w="3663"/><text x="89.3043%" y="399.50"></text></g><g><title>[unknown] (46 samples, 0.02%)</title><rect x="91.2193%" y="357" width="0.0167%" height="15" fill="rgb(228,166,9)" fg:x="251164" fg:w="46"/><text x="91.4693%" y="367.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="91.2196%" y="341" width="0.0163%" height="15" fill="rgb(208,124,43)" fg:x="251165" fg:w="45"/><text x="91.4696%" y="351.50"></text></g><g><title>[unknown] (44 samples, 0.02%)</title><rect x="91.2200%" y="325" width="0.0160%" height="15" fill="rgb(212,154,38)" fg:x="251166" fg:w="44"/><text x="91.4700%" y="335.50"></text></g><g><title>[unknown] (39 samples, 0.01%)</title><rect x="91.2218%" y="309" width="0.0142%" height="15" fill="rgb(246,179,35)" fg:x="251171" fg:w="39"/><text x="91.4718%" y="319.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="91.2258%" y="293" width="0.0102%" height="15" fill="rgb(251,3,50)" fg:x="251182" fg:w="28"/><text x="91.4758%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (310 samples, 0.11%)</title><rect x="91.2425%" y="357" width="0.1126%" height="15" fill="rgb(219,96,8)" fg:x="251228" fg:w="310"/><text x="91.4925%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (291 samples, 0.11%)</title><rect x="91.2494%" y="341" width="0.1057%" height="15" fill="rgb(251,216,33)" fg:x="251247" fg:w="291"/><text x="91.4994%" y="351.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2,129 samples, 0.77%)</title><rect x="90.5822%" y="373" width="0.7732%" height="15" fill="rgb(243,145,29)" fg:x="249410" fg:w="2129"/><text x="90.8322%" y="383.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (34 samples, 0.01%)</title><rect x="91.6384%" y="357" width="0.0123%" height="15" fill="rgb(210,75,20)" fg:x="252318" fg:w="34"/><text x="91.8884%" y="367.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (545 samples, 0.20%)</title><rect x="91.6558%" y="357" width="0.1979%" height="15" fill="rgb(235,56,8)" fg:x="252366" fg:w="545"/><text x="91.9058%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (35 samples, 0.01%)</title><rect x="91.8537%" y="357" width="0.0127%" height="15" fill="rgb(226,175,49)" fg:x="252911" fg:w="35"/><text x="92.1037%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (35 samples, 0.01%)</title><rect x="91.8537%" y="341" width="0.0127%" height="15" fill="rgb(242,204,23)" fg:x="252911" fg:w="35"/><text x="92.1037%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (41 samples, 0.01%)</title><rect x="91.8664%" y="357" width="0.0149%" height="15" fill="rgb(225,104,24)" fg:x="252946" fg:w="41"/><text x="92.1164%" y="367.50"></text></g><g><title>core::ptr::read (41 samples, 0.01%)</title><rect x="91.8664%" y="341" width="0.0149%" height="15" fill="rgb(253,34,1)" fg:x="252946" fg:w="41"/><text x="92.1164%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (413 samples, 0.15%)</title><rect x="91.8828%" y="357" width="0.1500%" height="15" fill="rgb(233,199,23)" fg:x="252991" fg:w="413"/><text x="92.1328%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (413 samples, 0.15%)</title><rect x="91.8828%" y="341" width="0.1500%" height="15" fill="rgb(247,7,51)" fg:x="252991" fg:w="413"/><text x="92.1328%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (62 samples, 0.02%)</title><rect x="92.0332%" y="357" width="0.0225%" height="15" fill="rgb(214,146,12)" fg:x="253405" fg:w="62"/><text x="92.2832%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_or (62 samples, 0.02%)</title><rect x="92.0332%" y="341" width="0.0225%" height="15" fill="rgb(234,181,43)" fg:x="253405" fg:w="62"/><text x="92.2832%" y="351.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4,755 samples, 1.73%)</title><rect x="90.3847%" y="389" width="1.7269%" height="15" fill="rgb(239,148,6)" fg:x="248866" fg:w="4755"/><text x="90.6347%" y="399.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2,082 samples, 0.76%)</title><rect x="91.3554%" y="373" width="0.7562%" height="15" fill="rgb(206,151,17)" fg:x="251539" fg:w="2082"/><text x="91.6054%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (154 samples, 0.06%)</title><rect x="92.0557%" y="357" width="0.0559%" height="15" fill="rgb(213,215,10)" fg:x="253467" fg:w="154"/><text x="92.3057%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (154 samples, 0.06%)</title><rect x="92.0557%" y="341" width="0.0559%" height="15" fill="rgb(215,220,44)" fg:x="253467" fg:w="154"/><text x="92.3057%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (166 samples, 0.06%)</title><rect x="92.1120%" y="389" width="0.0603%" height="15" fill="rgb(245,205,37)" fg:x="253622" fg:w="166"/><text x="92.3620%" y="399.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 samples, 0.06%)</title><rect x="92.1120%" y="373" width="0.0603%" height="15" fill="rgb(245,130,43)" fg:x="253622" fg:w="166"/><text x="92.3620%" y="383.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (160 samples, 0.06%)</title><rect x="92.1141%" y="357" width="0.0581%" height="15" fill="rgb(231,227,38)" fg:x="253628" fg:w="160"/><text x="92.3641%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (160 samples, 0.06%)</title><rect x="92.1141%" y="341" width="0.0581%" height="15" fill="rgb(233,185,4)" fg:x="253628" fg:w="160"/><text x="92.3641%" y="351.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_unlocked (28 samples, 0.01%)</title><rect x="92.1621%" y="325" width="0.0102%" height="15" fill="rgb(224,154,43)" fg:x="253760" fg:w="28"/><text x="92.4121%" y="335.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (9,513 samples, 3.45%)</title><rect x="88.8273%" y="405" width="3.4550%" height="15" fill="rgb(235,156,15)" fg:x="244578" fg:w="9513"/><text x="89.0773%" y="415.50">asy..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (278 samples, 0.10%)</title><rect x="92.1813%" y="389" width="0.1010%" height="15" fill="rgb(211,55,43)" fg:x="253813" fg:w="278"/><text x="92.4313%" y="399.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (274 samples, 0.10%)</title><rect x="92.1828%" y="373" width="0.0995%" height="15" fill="rgb(247,149,40)" fg:x="253817" fg:w="274"/><text x="92.4328%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (274 samples, 0.10%)</title><rect x="92.1828%" y="357" width="0.0995%" height="15" fill="rgb(232,171,16)" fg:x="253817" fg:w="274"/><text x="92.4328%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::is_read_lockable (56 samples, 0.02%)</title><rect x="92.2620%" y="341" width="0.0203%" height="15" fill="rgb(215,117,49)" fg:x="254035" fg:w="56"/><text x="92.5120%" y="351.50"></text></g><g><title>async_executor::Sleepers::notify (117 samples, 0.04%)</title><rect x="92.3408%" y="389" width="0.0425%" height="15" fill="rgb(246,194,11)" fg:x="254252" fg:w="117"/><text x="92.5908%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (50 samples, 0.02%)</title><rect x="92.3833%" y="389" width="0.0182%" height="15" fill="rgb(242,101,44)" fg:x="254369" fg:w="50"/><text x="92.6333%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="92.3833%" y="373" width="0.0182%" height="15" fill="rgb(226,174,6)" fg:x="254369" fg:w="50"/><text x="92.6333%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (41 samples, 0.01%)</title><rect x="92.3865%" y="357" width="0.0149%" height="15" fill="rgb(213,150,20)" fg:x="254378" fg:w="41"/><text x="92.6365%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (41 samples, 0.01%)</title><rect x="92.3865%" y="341" width="0.0149%" height="15" fill="rgb(222,124,42)" fg:x="254378" fg:w="41"/><text x="92.6365%" y="351.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (41 samples, 0.01%)</title><rect x="92.4127%" y="373" width="0.0149%" height="15" fill="rgb(250,19,47)" fg:x="254450" fg:w="41"/><text x="92.6627%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (442 samples, 0.16%)</title><rect x="92.7138%" y="309" width="0.1605%" height="15" fill="rgb(241,217,19)" fg:x="255279" fg:w="442"/><text x="92.9638%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_swap (442 samples, 0.16%)</title><rect x="92.7138%" y="293" width="0.1605%" height="15" fill="rgb(207,210,34)" fg:x="255279" fg:w="442"/><text x="92.9638%" y="303.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (106 samples, 0.04%)</title><rect x="92.8743%" y="309" width="0.0385%" height="15" fill="rgb(244,45,4)" fg:x="255721" fg:w="106"/><text x="93.1243%" y="319.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (80 samples, 0.03%)</title><rect x="92.8837%" y="293" width="0.0291%" height="15" fill="rgb(252,134,50)" fg:x="255747" fg:w="80"/><text x="93.1337%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::notify_one (80 samples, 0.03%)</title><rect x="92.8837%" y="277" width="0.0291%" height="15" fill="rgb(238,74,2)" fg:x="255747" fg:w="80"/><text x="93.1337%" y="287.50"></text></g><g><title>std::sys::unix::futex::futex_wake (54 samples, 0.02%)</title><rect x="92.8932%" y="261" width="0.0196%" height="15" fill="rgb(226,58,46)" fg:x="255773" fg:w="54"/><text x="93.1432%" y="271.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (40 samples, 0.01%)</title><rect x="92.9128%" y="309" width="0.0145%" height="15" fill="rgb(232,83,35)" fg:x="255827" fg:w="40"/><text x="93.1628%" y="319.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.01%)</title><rect x="92.9142%" y="293" width="0.0131%" height="15" fill="rgb(212,148,47)" fg:x="255831" fg:w="36"/><text x="93.1642%" y="303.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (36 samples, 0.01%)</title><rect x="92.9142%" y="277" width="0.0131%" height="15" fill="rgb(235,29,1)" fg:x="255831" fg:w="36"/><text x="93.1642%" y="287.50"></text></g><g><title>parking::Unparker::unpark (6,961 samples, 2.53%)</title><rect x="92.4715%" y="341" width="2.5281%" height="15" fill="rgb(247,55,37)" fg:x="254612" fg:w="6961"/><text x="92.7215%" y="351.50">pa..</text></g><g><title>parking::Inner::unpark (6,347 samples, 2.31%)</title><rect x="92.6945%" y="325" width="2.3051%" height="15" fill="rgb(222,48,3)" fg:x="255226" fg:w="6347"/><text x="92.9445%" y="335.50">p..</text></g><g><title>syscall (5,706 samples, 2.07%)</title><rect x="92.9273%" y="309" width="2.0723%" height="15" fill="rgb(234,21,33)" fg:x="255867" fg:w="5706"/><text x="93.1773%" y="319.50">s..</text></g><g><title>[unknown] (5,664 samples, 2.06%)</title><rect x="92.9426%" y="293" width="2.0571%" height="15" fill="rgb(247,178,53)" fg:x="255909" fg:w="5664"/><text x="93.1926%" y="303.50">[..</text></g><g><title>[unknown] (5,636 samples, 2.05%)</title><rect x="92.9527%" y="277" width="2.0469%" height="15" fill="rgb(225,75,7)" fg:x="255937" fg:w="5636"/><text x="93.2027%" y="287.50">[..</text></g><g><title>[unknown] (5,614 samples, 2.04%)</title><rect x="92.9607%" y="261" width="2.0389%" height="15" fill="rgb(219,199,7)" fg:x="255959" fg:w="5614"/><text x="93.2107%" y="271.50">[..</text></g><g><title>[unknown] (5,427 samples, 1.97%)</title><rect x="93.0286%" y="245" width="1.9710%" height="15" fill="rgb(209,93,42)" fg:x="256146" fg:w="5427"/><text x="93.2786%" y="255.50">[..</text></g><g><title>[unknown] (5,049 samples, 1.83%)</title><rect x="93.1659%" y="229" width="1.8337%" height="15" fill="rgb(240,175,17)" fg:x="256524" fg:w="5049"/><text x="93.4159%" y="239.50">[..</text></g><g><title>[unknown] (3,697 samples, 1.34%)</title><rect x="93.6570%" y="213" width="1.3427%" height="15" fill="rgb(232,106,7)" fg:x="257876" fg:w="3697"/><text x="93.9070%" y="223.50"></text></g><g><title>[unknown] (2,750 samples, 1.00%)</title><rect x="94.0009%" y="197" width="0.9988%" height="15" fill="rgb(242,106,43)" fg:x="258823" fg:w="2750"/><text x="94.2509%" y="207.50"></text></g><g><title>[unknown] (2,373 samples, 0.86%)</title><rect x="94.1378%" y="181" width="0.8618%" height="15" fill="rgb(242,61,37)" fg:x="259200" fg:w="2373"/><text x="94.3878%" y="191.50"></text></g><g><title>[unknown] (1,359 samples, 0.49%)</title><rect x="94.5061%" y="165" width="0.4936%" height="15" fill="rgb(205,72,10)" fg:x="260214" fg:w="1359"/><text x="94.7561%" y="175.50"></text></g><g><title>[unknown] (384 samples, 0.14%)</title><rect x="94.8602%" y="149" width="0.1395%" height="15" fill="rgb(214,184,36)" fg:x="261189" fg:w="384"/><text x="95.1102%" y="159.50"></text></g><g><title>[unknown] (181 samples, 0.07%)</title><rect x="94.9339%" y="133" width="0.0657%" height="15" fill="rgb(206,107,18)" fg:x="261392" fg:w="181"/><text x="95.1839%" y="143.50"></text></g><g><title>[unknown] (37 samples, 0.01%)</title><rect x="94.9862%" y="117" width="0.0134%" height="15" fill="rgb(210,75,5)" fg:x="261536" fg:w="37"/><text x="95.2362%" y="127.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (7,005 samples, 2.54%)</title><rect x="92.4599%" y="357" width="2.5441%" height="15" fill="rgb(205,3,19)" fg:x="254580" fg:w="7005"/><text x="92.7099%" y="367.50">as..</text></g><g><title>core::task::wake::Waker::wake (7,168 samples, 2.60%)</title><rect x="92.4014%" y="389" width="2.6033%" height="15" fill="rgb(207,181,42)" fg:x="254419" fg:w="7168"/><text x="92.6514%" y="399.50">co..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (7,096 samples, 2.58%)</title><rect x="92.4276%" y="373" width="2.5772%" height="15" fill="rgb(229,179,43)" fg:x="254491" fg:w="7096"/><text x="92.6776%" y="383.50">wa..</text></g><g><title>async_executor::State::notify (7,548 samples, 2.74%)</title><rect x="92.2823%" y="405" width="2.7413%" height="15" fill="rgb(246,95,30)" fg:x="254091" fg:w="7548"/><text x="92.5323%" y="415.50">as..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.02%)</title><rect x="95.0047%" y="389" width="0.0189%" height="15" fill="rgb(234,144,45)" fg:x="261587" fg:w="52"/><text x="95.2547%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.01%)</title><rect x="95.0102%" y="373" width="0.0134%" height="15" fill="rgb(250,54,25)" fg:x="261602" fg:w="37"/><text x="95.2602%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (37 samples, 0.01%)</title><rect x="95.0102%" y="357" width="0.0134%" height="15" fill="rgb(215,195,40)" fg:x="261602" fg:w="37"/><text x="95.2602%" y="367.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (41 samples, 0.01%)</title><rect x="95.0756%" y="373" width="0.0149%" height="15" fill="rgb(233,188,42)" fg:x="261782" fg:w="41"/><text x="95.3256%" y="383.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (40 samples, 0.01%)</title><rect x="95.0759%" y="357" width="0.0145%" height="15" fill="rgb(247,227,35)" fg:x="261783" fg:w="40"/><text x="95.3259%" y="367.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.01%)</title><rect x="95.0759%" y="341" width="0.0145%" height="15" fill="rgb(249,124,27)" fg:x="261783" fg:w="40"/><text x="95.3259%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.01%)</title><rect x="95.0759%" y="325" width="0.0145%" height="15" fill="rgb(219,207,25)" fg:x="261783" fg:w="40"/><text x="95.3259%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (37 samples, 0.01%)</title><rect x="95.0905%" y="373" width="0.0134%" height="15" fill="rgb(241,216,47)" fg:x="261823" fg:w="37"/><text x="95.3405%" y="383.50"></text></g><g><title>async_executor::Sleepers::insert (132 samples, 0.05%)</title><rect x="95.0618%" y="389" width="0.0479%" height="15" fill="rgb(233,82,50)" fg:x="261744" fg:w="132"/><text x="95.3118%" y="399.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (72 samples, 0.03%)</title><rect x="95.1911%" y="373" width="0.0261%" height="15" fill="rgb(232,63,2)" fg:x="262100" fg:w="72"/><text x="95.4411%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (72 samples, 0.03%)</title><rect x="95.1911%" y="357" width="0.0261%" height="15" fill="rgb(236,184,28)" fg:x="262100" fg:w="72"/><text x="95.4411%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.02%)</title><rect x="95.2172%" y="373" width="0.0185%" height="15" fill="rgb(254,63,27)" fg:x="262172" fg:w="51"/><text x="95.4672%" y="383.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (83 samples, 0.03%)</title><rect x="95.2357%" y="373" width="0.0301%" height="15" fill="rgb(253,106,28)" fg:x="262223" fg:w="83"/><text x="95.4857%" y="383.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (73 samples, 0.03%)</title><rect x="95.2394%" y="357" width="0.0265%" height="15" fill="rgb(225,141,39)" fg:x="262233" fg:w="73"/><text x="95.4894%" y="367.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (73 samples, 0.03%)</title><rect x="95.2394%" y="341" width="0.0265%" height="15" fill="rgb(222,157,20)" fg:x="262233" fg:w="73"/><text x="95.4894%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (73 samples, 0.03%)</title><rect x="95.2394%" y="325" width="0.0265%" height="15" fill="rgb(210,190,9)" fg:x="262233" fg:w="73"/><text x="95.4894%" y="335.50"></text></g><g><title>async_executor::Sleepers::update (523 samples, 0.19%)</title><rect x="95.1130%" y="389" width="0.1899%" height="15" fill="rgb(242,167,7)" fg:x="261885" fg:w="523"/><text x="95.3630%" y="399.50"></text></g><g><title>core::task::wake::Waker::will_wake (75 samples, 0.03%)</title><rect x="95.2757%" y="373" width="0.0272%" height="15" fill="rgb(227,82,41)" fg:x="262333" fg:w="75"/><text x="95.5257%" y="383.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (75 samples, 0.03%)</title><rect x="95.2757%" y="357" width="0.0272%" height="15" fill="rgb(222,131,13)" fg:x="262333" fg:w="75"/><text x="95.5257%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (34 samples, 0.01%)</title><rect x="95.2906%" y="341" width="0.0123%" height="15" fill="rgb(221,98,26)" fg:x="262374" fg:w="34"/><text x="95.5406%" y="351.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (34 samples, 0.01%)</title><rect x="95.2906%" y="325" width="0.0123%" height="15" fill="rgb(251,63,52)" fg:x="262374" fg:w="34"/><text x="95.5406%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (399 samples, 0.14%)</title><rect x="95.3029%" y="389" width="0.1449%" height="15" fill="rgb(246,25,43)" fg:x="262408" fg:w="399"/><text x="95.5529%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (399 samples, 0.14%)</title><rect x="95.3029%" y="373" width="0.1449%" height="15" fill="rgb(247,167,15)" fg:x="262408" fg:w="399"/><text x="95.5529%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (230 samples, 0.08%)</title><rect x="95.3643%" y="357" width="0.0835%" height="15" fill="rgb(240,104,42)" fg:x="262577" fg:w="230"/><text x="95.6143%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (230 samples, 0.08%)</title><rect x="95.3643%" y="341" width="0.0835%" height="15" fill="rgb(224,54,6)" fg:x="262577" fg:w="230"/><text x="95.6143%" y="351.50"></text></g><g><title>syscall (84 samples, 0.03%)</title><rect x="95.4173%" y="325" width="0.0305%" height="15" fill="rgb(244,108,35)" fg:x="262723" fg:w="84"/><text x="95.6673%" y="335.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="95.4177%" y="309" width="0.0301%" height="15" fill="rgb(216,154,2)" fg:x="262724" fg:w="83"/><text x="95.6677%" y="319.50"></text></g><g><title>[unknown] (82 samples, 0.03%)</title><rect x="95.4180%" y="293" width="0.0298%" height="15" fill="rgb(222,8,47)" fg:x="262725" fg:w="82"/><text x="95.6680%" y="303.50"></text></g><g><title>[unknown] (82 samples, 0.03%)</title><rect x="95.4180%" y="277" width="0.0298%" height="15" fill="rgb(252,93,1)" fg:x="262725" fg:w="82"/><text x="95.6680%" y="287.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="95.4195%" y="261" width="0.0283%" height="15" fill="rgb(223,226,51)" fg:x="262729" fg:w="78"/><text x="95.6695%" y="271.50"></text></g><g><title>[unknown] (75 samples, 0.03%)</title><rect x="95.4206%" y="245" width="0.0272%" height="15" fill="rgb(206,147,9)" fg:x="262732" fg:w="75"/><text x="95.6706%" y="255.50"></text></g><g><title>[unknown] (62 samples, 0.02%)</title><rect x="95.4253%" y="229" width="0.0225%" height="15" fill="rgb(248,180,41)" fg:x="262745" fg:w="62"/><text x="95.6753%" y="239.50"></text></g><g><title>[unknown] (51 samples, 0.02%)</title><rect x="95.4293%" y="213" width="0.0185%" height="15" fill="rgb(209,47,50)" fg:x="262756" fg:w="51"/><text x="95.6793%" y="223.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="95.4348%" y="197" width="0.0131%" height="15" fill="rgb(243,65,31)" fg:x="262771" fg:w="36"/><text x="95.6848%" y="207.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="95.4377%" y="181" width="0.0102%" height="15" fill="rgb(228,128,1)" fg:x="262779" fg:w="28"/><text x="95.6877%" y="191.50"></text></g><g><title>async_executor::Ticker::sleep (1,231 samples, 0.45%)</title><rect x="95.0236%" y="405" width="0.4471%" height="15" fill="rgb(231,192,16)" fg:x="261639" fg:w="1231"/><text x="95.2736%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (63 samples, 0.02%)</title><rect x="95.4478%" y="389" width="0.0229%" height="15" fill="rgb(224,26,40)" fg:x="262807" fg:w="63"/><text x="95.6978%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.02%)</title><rect x="95.4507%" y="373" width="0.0200%" height="15" fill="rgb(214,192,17)" fg:x="262815" fg:w="55"/><text x="95.7007%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (55 samples, 0.02%)</title><rect x="95.4507%" y="357" width="0.0200%" height="15" fill="rgb(225,147,18)" fg:x="262815" fg:w="55"/><text x="95.7007%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.01%)</title><rect x="95.6556%" y="373" width="0.0138%" height="15" fill="rgb(205,35,11)" fg:x="263379" fg:w="38"/><text x="95.9056%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (38 samples, 0.01%)</title><rect x="95.6556%" y="357" width="0.0138%" height="15" fill="rgb(242,40,42)" fg:x="263379" fg:w="38"/><text x="95.9056%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (38 samples, 0.01%)</title><rect x="95.6556%" y="341" width="0.0138%" height="15" fill="rgb(250,170,13)" fg:x="263379" fg:w="38"/><text x="95.9056%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (33 samples, 0.01%)</title><rect x="95.6574%" y="325" width="0.0120%" height="15" fill="rgb(240,161,28)" fg:x="263384" fg:w="33"/><text x="95.9074%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (380 samples, 0.14%)</title><rect x="95.6726%" y="373" width="0.1380%" height="15" fill="rgb(245,179,12)" fg:x="263426" fg:w="380"/><text x="95.9226%" y="383.50"></text></g><g><title>async_executor::Sleepers::remove (728 samples, 0.26%)</title><rect x="95.5553%" y="389" width="0.2644%" height="15" fill="rgb(250,92,32)" fg:x="263103" fg:w="728"/><text x="95.8053%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (463 samples, 0.17%)</title><rect x="95.8197%" y="389" width="0.1682%" height="15" fill="rgb(233,10,40)" fg:x="263831" fg:w="463"/><text x="96.0697%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (463 samples, 0.17%)</title><rect x="95.8197%" y="373" width="0.1682%" height="15" fill="rgb(217,98,1)" fg:x="263831" fg:w="463"/><text x="96.0697%" y="383.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (273 samples, 0.10%)</title><rect x="95.8887%" y="357" width="0.0991%" height="15" fill="rgb(238,202,7)" fg:x="264021" fg:w="273"/><text x="96.1387%" y="367.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::unlock (273 samples, 0.10%)</title><rect x="95.8887%" y="341" width="0.0991%" height="15" fill="rgb(222,91,3)" fg:x="264021" fg:w="273"/><text x="96.1387%" y="351.50"></text></g><g><title>syscall (94 samples, 0.03%)</title><rect x="95.9537%" y="325" width="0.0341%" height="15" fill="rgb(211,170,49)" fg:x="264200" fg:w="94"/><text x="96.2037%" y="335.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="95.9541%" y="309" width="0.0338%" height="15" fill="rgb(253,139,18)" fg:x="264201" fg:w="93"/><text x="96.2041%" y="319.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="95.9541%" y="293" width="0.0338%" height="15" fill="rgb(222,4,43)" fg:x="264201" fg:w="93"/><text x="96.2041%" y="303.50"></text></g><g><title>[unknown] (93 samples, 0.03%)</title><rect x="95.9541%" y="277" width="0.0338%" height="15" fill="rgb(207,205,12)" fg:x="264201" fg:w="93"/><text x="96.2041%" y="287.50"></text></g><g><title>[unknown] (92 samples, 0.03%)</title><rect x="95.9545%" y="261" width="0.0334%" height="15" fill="rgb(216,159,46)" fg:x="264202" fg:w="92"/><text x="96.2045%" y="271.50"></text></g><g><title>[unknown] (90 samples, 0.03%)</title><rect x="95.9552%" y="245" width="0.0327%" height="15" fill="rgb(236,115,1)" fg:x="264204" fg:w="90"/><text x="96.2052%" y="255.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="95.9610%" y="229" width="0.0269%" height="15" fill="rgb(251,35,33)" fg:x="264220" fg:w="74"/><text x="96.2110%" y="239.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="95.9690%" y="213" width="0.0189%" height="15" fill="rgb(248,62,51)" fg:x="264242" fg:w="52"/><text x="96.2190%" y="223.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="95.9726%" y="197" width="0.0153%" height="15" fill="rgb(254,180,19)" fg:x="264252" fg:w="42"/><text x="96.2226%" y="207.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="95.9774%" y="181" width="0.0105%" height="15" fill="rgb(217,100,32)" fg:x="264265" fg:w="29"/><text x="96.2274%" y="191.50"></text></g><g><title>async_executor::Ticker::wake (1,638 samples, 0.59%)</title><rect x="95.4707%" y="405" width="0.5949%" height="15" fill="rgb(224,71,22)" fg:x="262870" fg:w="1638"/><text x="95.7207%" y="415.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (206 samples, 0.07%)</title><rect x="95.9908%" y="389" width="0.0748%" height="15" fill="rgb(251,185,33)" fg:x="264302" fg:w="206"/><text x="96.2408%" y="399.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (200 samples, 0.07%)</title><rect x="95.9930%" y="373" width="0.0726%" height="15" fill="rgb(209,75,48)" fg:x="264308" fg:w="200"/><text x="96.2430%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (200 samples, 0.07%)</title><rect x="95.9930%" y="357" width="0.0726%" height="15" fill="rgb(253,190,16)" fg:x="264308" fg:w="200"/><text x="96.2430%" y="367.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (20,124 samples, 7.31%)</title><rect x="88.7579%" y="437" width="7.3088%" height="15" fill="rgb(226,140,1)" fg:x="244387" fg:w="20124"/><text x="89.0079%" y="447.50">&lt;futures_l..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (20,003 samples, 7.26%)</title><rect x="88.8019%" y="421" width="7.2648%" height="15" fill="rgb(206,75,30)" fg:x="244508" fg:w="20003"/><text x="89.0519%" y="431.50">async_exec..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,207 samples, 7.34%)</title><rect x="88.7292%" y="469" width="7.3389%" height="15" fill="rgb(231,208,37)" fg:x="244308" fg:w="20207"/><text x="88.9792%" y="479.50">&lt;core::fut..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (20,206 samples, 7.34%)</title><rect x="88.7296%" y="453" width="7.3385%" height="15" fill="rgb(238,136,40)" fg:x="244309" fg:w="20206"/><text x="88.9796%" y="463.50">async_exec..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,499 samples, 7.44%)</title><rect x="88.6345%" y="501" width="7.4450%" height="15" fill="rgb(247,137,17)" fg:x="244047" fg:w="20499"/><text x="88.8845%" y="511.50">&lt;core::fut..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (20,404 samples, 7.41%)</title><rect x="88.6690%" y="485" width="7.4104%" height="15" fill="rgb(240,60,40)" fg:x="244142" fg:w="20404"/><text x="88.9190%" y="495.50">async_exec..</text></g><g><title>async_executor::Runner::runnable (52 samples, 0.02%)</title><rect x="96.0823%" y="501" width="0.0189%" height="15" fill="rgb(236,68,50)" fg:x="264554" fg:w="52"/><text x="96.3323%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (276 samples, 0.10%)</title><rect x="96.1012%" y="501" width="0.1002%" height="15" fill="rgb(230,42,12)" fg:x="264606" fg:w="276"/><text x="96.3512%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (36 samples, 0.01%)</title><rect x="96.1884%" y="485" width="0.0131%" height="15" fill="rgb(219,16,16)" fg:x="264846" fg:w="36"/><text x="96.4384%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (36 samples, 0.01%)</title><rect x="96.1884%" y="469" width="0.0131%" height="15" fill="rgb(220,38,35)" fg:x="264846" fg:w="36"/><text x="96.4384%" y="479.50"></text></g><g><title>async_task::runnable::Runnable::run (349 samples, 0.13%)</title><rect x="96.2014%" y="501" width="0.1268%" height="15" fill="rgb(228,33,1)" fg:x="264882" fg:w="349"/><text x="96.4514%" y="511.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (24,129 samples, 8.76%)</title><rect x="87.5830%" y="549" width="8.7633%" height="15" fill="rgb(241,46,31)" fg:x="241152" fg:w="24129"/><text x="87.8330%" y="559.50">&lt;futures_lit..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (21,441 samples, 7.79%)</title><rect x="88.5593%" y="533" width="7.7871%" height="15" fill="rgb(232,58,20)" fg:x="243840" fg:w="21441"/><text x="88.8093%" y="543.50">&lt;core::futu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (21,397 samples, 7.77%)</title><rect x="88.5753%" y="517" width="7.7711%" height="15" fill="rgb(206,228,53)" fg:x="243884" fg:w="21397"/><text x="88.8253%" y="527.50">async_execu..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (50 samples, 0.02%)</title><rect x="96.3282%" y="501" width="0.0182%" height="15" fill="rgb(206,88,33)" fg:x="265231" fg:w="50"/><text x="96.5782%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (50 samples, 0.02%)</title><rect x="96.3282%" y="485" width="0.0182%" height="15" fill="rgb(238,69,7)" fg:x="265231" fg:w="50"/><text x="96.5782%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24,291 samples, 8.82%)</title><rect x="87.5380%" y="581" width="8.8222%" height="15" fill="rgb(250,21,46)" fg:x="241028" fg:w="24291"/><text x="87.7880%" y="591.50">&lt;core::futur..</text></g><g><title>async_executor::Executor::run::{{closure}} (24,250 samples, 8.81%)</title><rect x="87.5529%" y="565" width="8.8073%" height="15" fill="rgb(215,212,21)" fg:x="241069" fg:w="24250"/><text x="87.8029%" y="575.50">async_execut..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (24,308 samples, 8.83%)</title><rect x="87.5326%" y="597" width="8.8283%" height="15" fill="rgb(211,35,12)" fg:x="241013" fg:w="24308"/><text x="87.7826%" y="607.50">&lt;async_std::..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (25,162 samples, 9.14%)</title><rect x="87.2307%" y="677" width="9.1385%" height="15" fill="rgb(231,184,16)" fg:x="240182" fg:w="25162"/><text x="87.4807%" y="687.50">&lt;async_std::t..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (25,162 samples, 9.14%)</title><rect x="87.2307%" y="661" width="9.1385%" height="15" fill="rgb(242,140,15)" fg:x="240182" fg:w="25162"/><text x="87.4807%" y="671.50">async_std::ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (25,159 samples, 9.14%)</title><rect x="87.2318%" y="645" width="9.1374%" height="15" fill="rgb(220,37,14)" fg:x="240185" fg:w="25159"/><text x="87.4818%" y="655.50">std::thread::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25,074 samples, 9.11%)</title><rect x="87.2627%" y="629" width="9.1065%" height="15" fill="rgb(223,146,22)" fg:x="240270" fg:w="25074"/><text x="87.5127%" y="639.50">std::thread::..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (24,331 samples, 8.84%)</title><rect x="87.5326%" y="613" width="8.8367%" height="15" fill="rgb(216,132,15)" fg:x="241013" fg:w="24331"/><text x="87.7826%" y="623.50">async_std::t..</text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (48 samples, 0.02%)</title><rect x="96.4237%" y="421" width="0.0174%" height="15" fill="rgb(248,83,5)" fg:x="265494" fg:w="48"/><text x="96.6737%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.02%)</title><rect x="96.4197%" y="533" width="0.0225%" height="15" fill="rgb(231,206,48)" fg:x="265483" fg:w="62"/><text x="96.6697%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (62 samples, 0.02%)</title><rect x="96.4197%" y="517" width="0.0225%" height="15" fill="rgb(253,185,37)" fg:x="265483" fg:w="62"/><text x="96.6697%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 0.02%)</title><rect x="96.4197%" y="501" width="0.0225%" height="15" fill="rgb(208,21,44)" fg:x="265483" fg:w="62"/><text x="96.6697%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 0.02%)</title><rect x="96.4197%" y="485" width="0.0225%" height="15" fill="rgb(236,125,4)" fg:x="265483" fg:w="62"/><text x="96.6697%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 0.02%)</title><rect x="96.4197%" y="469" width="0.0225%" height="15" fill="rgb(226,134,25)" fg:x="265483" fg:w="62"/><text x="96.6697%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (60 samples, 0.02%)</title><rect x="96.4204%" y="453" width="0.0218%" height="15" fill="rgb(250,201,12)" fg:x="265485" fg:w="60"/><text x="96.6704%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (51 samples, 0.02%)</title><rect x="96.4237%" y="437" width="0.0185%" height="15" fill="rgb(225,92,18)" fg:x="265494" fg:w="51"/><text x="96.6737%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (437 samples, 0.16%)</title><rect x="96.5330%" y="517" width="0.1587%" height="15" fill="rgb(227,35,22)" fg:x="265795" fg:w="437"/><text x="96.7830%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (29 samples, 0.01%)</title><rect x="96.7034%" y="501" width="0.0105%" height="15" fill="rgb(214,180,52)" fg:x="266264" fg:w="29"/><text x="96.9534%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.01%)</title><rect x="96.7034%" y="485" width="0.0105%" height="15" fill="rgb(233,55,38)" fg:x="266264" fg:w="29"/><text x="96.9534%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (757 samples, 0.27%)</title><rect x="96.4426%" y="533" width="0.2749%" height="15" fill="rgb(249,171,43)" fg:x="265546" fg:w="757"/><text x="96.6926%" y="543.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (71 samples, 0.03%)</title><rect x="96.6917%" y="517" width="0.0258%" height="15" fill="rgb(239,87,2)" fg:x="266232" fg:w="71"/><text x="96.9417%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (36 samples, 0.01%)</title><rect x="96.7175%" y="533" width="0.0131%" height="15" fill="rgb(248,141,5)" fg:x="266303" fg:w="36"/><text x="96.9675%" y="543.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="96.7175%" y="517" width="0.0131%" height="15" fill="rgb(238,33,42)" fg:x="266303" fg:w="36"/><text x="96.9675%" y="527.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read_unlock (29 samples, 0.01%)</title><rect x="96.7201%" y="501" width="0.0105%" height="15" fill="rgb(231,57,19)" fg:x="266310" fg:w="29"/><text x="96.9701%" y="511.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (29 samples, 0.01%)</title><rect x="96.7201%" y="485" width="0.0105%" height="15" fill="rgb(214,78,53)" fg:x="266310" fg:w="29"/><text x="96.9701%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (941 samples, 0.34%)</title><rect x="96.4183%" y="549" width="0.3418%" height="15" fill="rgb(206,132,29)" fg:x="265479" fg:w="941"/><text x="96.6683%" y="559.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (58 samples, 0.02%)</title><rect x="96.7390%" y="533" width="0.0211%" height="15" fill="rgb(248,174,31)" fg:x="266362" fg:w="58"/><text x="96.9890%" y="543.50"></text></g><g><title>std::sys_common::rwlock::MovableRwLock::read (32 samples, 0.01%)</title><rect x="96.7484%" y="517" width="0.0116%" height="15" fill="rgb(221,87,13)" fg:x="266388" fg:w="32"/><text x="96.9984%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (32 samples, 0.01%)</title><rect x="96.7484%" y="501" width="0.0116%" height="15" fill="rgb(223,197,17)" fg:x="266388" fg:w="32"/><text x="96.9984%" y="511.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (65 samples, 0.02%)</title><rect x="96.8076%" y="517" width="0.0236%" height="15" fill="rgb(220,144,50)" fg:x="266551" fg:w="65"/><text x="97.0576%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (65 samples, 0.02%)</title><rect x="96.8076%" y="501" width="0.0236%" height="15" fill="rgb(244,201,11)" fg:x="266551" fg:w="65"/><text x="97.0576%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (218 samples, 0.08%)</title><rect x="96.7622%" y="533" width="0.0792%" height="15" fill="rgb(249,81,34)" fg:x="266426" fg:w="218"/><text x="97.0122%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,252 samples, 0.45%)</title><rect x="96.4063%" y="645" width="0.4547%" height="15" fill="rgb(205,161,12)" fg:x="265446" fg:w="1252"/><text x="96.6563%" y="655.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1,244 samples, 0.45%)</title><rect x="96.4092%" y="629" width="0.4518%" height="15" fill="rgb(252,139,50)" fg:x="265454" fg:w="1244"/><text x="96.6592%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,235 samples, 0.45%)</title><rect x="96.4124%" y="613" width="0.4485%" height="15" fill="rgb(205,169,14)" fg:x="265463" fg:w="1235"/><text x="96.6624%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1,235 samples, 0.45%)</title><rect x="96.4124%" y="597" width="0.4485%" height="15" fill="rgb(248,198,33)" fg:x="265463" fg:w="1235"/><text x="96.6624%" y="607.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,231 samples, 0.45%)</title><rect x="96.4139%" y="581" width="0.4471%" height="15" fill="rgb(236,23,21)" fg:x="265467" fg:w="1231"/><text x="96.6639%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1,226 samples, 0.45%)</title><rect x="96.4157%" y="565" width="0.4453%" height="15" fill="rgb(231,13,38)" fg:x="265472" fg:w="1226"/><text x="96.6657%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (278 samples, 0.10%)</title><rect x="96.7600%" y="549" width="0.1010%" height="15" fill="rgb(239,139,21)" fg:x="266420" fg:w="278"/><text x="97.0100%" y="559.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.01%)</title><rect x="96.8483%" y="533" width="0.0127%" height="15" fill="rgb(222,164,45)" fg:x="266663" fg:w="35"/><text x="97.0983%" y="543.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (34 samples, 0.01%)</title><rect x="96.8486%" y="517" width="0.0123%" height="15" fill="rgb(230,52,27)" fg:x="266664" fg:w="34"/><text x="97.0986%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (34 samples, 0.01%)</title><rect x="96.8486%" y="501" width="0.0123%" height="15" fill="rgb(227,143,42)" fg:x="266664" fg:w="34"/><text x="97.0986%" y="511.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,355 samples, 0.49%)</title><rect x="96.3692%" y="677" width="0.4921%" height="15" fill="rgb(249,127,1)" fg:x="265344" fg:w="1355"/><text x="96.6192%" y="687.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,342 samples, 0.49%)</title><rect x="96.3740%" y="661" width="0.4874%" height="15" fill="rgb(243,107,26)" fg:x="265357" fg:w="1342"/><text x="96.6240%" y="671.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (26,544 samples, 9.64%)</title><rect x="87.2217%" y="693" width="9.6404%" height="15" fill="rgb(225,7,45)" fg:x="240157" fg:w="26544"/><text x="87.4717%" y="703.50">&lt;futures_lite:..</text></g><g><title>async_executor::Executor::state (52 samples, 0.02%)</title><rect x="96.8682%" y="693" width="0.0189%" height="15" fill="rgb(241,88,38)" fg:x="266718" fg:w="52"/><text x="97.1182%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (50 samples, 0.02%)</title><rect x="96.8690%" y="677" width="0.0182%" height="15" fill="rgb(226,121,9)" fg:x="266720" fg:w="50"/><text x="97.1190%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (50 samples, 0.02%)</title><rect x="96.8690%" y="661" width="0.0182%" height="15" fill="rgb(253,60,29)" fg:x="266720" fg:w="50"/><text x="97.1190%" y="671.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (49 samples, 0.02%)</title><rect x="96.8693%" y="645" width="0.0178%" height="15" fill="rgb(244,181,39)" fg:x="266721" fg:w="49"/><text x="97.1193%" y="655.50"></text></g><g><title>once_cell::imp::initialize_or_wait (45 samples, 0.02%)</title><rect x="96.8708%" y="629" width="0.0163%" height="15" fill="rgb(252,203,31)" fg:x="266725" fg:w="45"/><text x="97.1208%" y="639.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (26,700 samples, 9.70%)</title><rect x="87.1981%" y="709" width="9.6971%" height="15" fill="rgb(224,120,8)" fg:x="240092" fg:w="26700"/><text x="87.4481%" y="719.50">async_executor..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26,741 samples, 9.71%)</title><rect x="87.1981%" y="725" width="9.7120%" height="15" fill="rgb(205,171,54)" fg:x="240092" fg:w="26741"/><text x="87.4481%" y="735.50">&lt;core::future:..</text></g><g><title>async_io::driver::block_on (41 samples, 0.01%)</title><rect x="96.8951%" y="709" width="0.0149%" height="15" fill="rgb(235,89,11)" fg:x="266792" fg:w="41"/><text x="97.1451%" y="719.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="96.9133%" y="725" width="0.0120%" height="15" fill="rgb(212,180,28)" fg:x="266842" fg:w="33"/><text x="97.1633%" y="735.50"></text></g><g><title>[unknown] (30 samples, 0.01%)</title><rect x="96.9144%" y="709" width="0.0109%" height="15" fill="rgb(247,84,49)" fg:x="266845" fg:w="30"/><text x="97.1644%" y="719.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="96.9151%" y="693" width="0.0102%" height="15" fill="rgb(236,187,52)" fg:x="266847" fg:w="28"/><text x="97.1651%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27,911 samples, 10.14%)</title><rect x="86.7913%" y="757" width="10.1369%" height="15" fill="rgb(227,24,15)" fg:x="238972" fg:w="27911"/><text x="87.0413%" y="767.50">&lt;core::future::..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (27,909 samples, 10.14%)</title><rect x="86.7920%" y="741" width="10.1362%" height="15" fill="rgb(227,211,13)" fg:x="238974" fg:w="27909"/><text x="87.0420%" y="751.50">async_executor:..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (33 samples, 0.01%)</title><rect x="96.9383%" y="757" width="0.0120%" height="15" fill="rgb(245,52,14)" fg:x="266911" fg:w="33"/><text x="97.1883%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (29 samples, 0.01%)</title><rect x="96.9398%" y="741" width="0.0105%" height="15" fill="rgb(225,185,13)" fg:x="266915" fg:w="29"/><text x="97.1898%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.01%)</title><rect x="96.9398%" y="725" width="0.0105%" height="15" fill="rgb(217,160,29)" fg:x="266915" fg:w="29"/><text x="97.1898%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.01%)</title><rect x="96.9398%" y="709" width="0.0105%" height="15" fill="rgb(216,115,53)" fg:x="266915" fg:w="29"/><text x="97.1898%" y="719.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.01%)</title><rect x="96.9398%" y="693" width="0.0105%" height="15" fill="rgb(236,99,5)" fg:x="266915" fg:w="29"/><text x="97.1898%" y="703.50"></text></g><g><title>malloc (29 samples, 0.01%)</title><rect x="96.9398%" y="677" width="0.0105%" height="15" fill="rgb(222,60,38)" fg:x="266915" fg:w="29"/><text x="97.1898%" y="687.50"></text></g><g><title>async_io::reactor::Reactor::get (183 samples, 0.07%)</title><rect x="96.9503%" y="757" width="0.0665%" height="15" fill="rgb(212,82,22)" fg:x="266944" fg:w="183"/><text x="97.2003%" y="767.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (86 samples, 0.03%)</title><rect x="96.9856%" y="741" width="0.0312%" height="15" fill="rgb(214,48,28)" fg:x="267041" fg:w="86"/><text x="97.2356%" y="751.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (86 samples, 0.03%)</title><rect x="96.9856%" y="725" width="0.0312%" height="15" fill="rgb(245,196,50)" fg:x="267041" fg:w="86"/><text x="97.2356%" y="735.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (86 samples, 0.03%)</title><rect x="96.9856%" y="709" width="0.0312%" height="15" fill="rgb(225,159,46)" fg:x="267041" fg:w="86"/><text x="97.2356%" y="719.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (86 samples, 0.03%)</title><rect x="96.9856%" y="693" width="0.0312%" height="15" fill="rgb(207,195,48)" fg:x="267041" fg:w="86"/><text x="97.2356%" y="703.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (86 samples, 0.03%)</title><rect x="96.9856%" y="677" width="0.0312%" height="15" fill="rgb(240,73,3)" fg:x="267041" fg:w="86"/><text x="97.2356%" y="687.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (86 samples, 0.03%)</title><rect x="96.9856%" y="661" width="0.0312%" height="15" fill="rgb(245,57,23)" fg:x="267041" fg:w="86"/><text x="97.2356%" y="671.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (299 samples, 0.11%)</title><rect x="97.0168%" y="757" width="0.1086%" height="15" fill="rgb(240,75,18)" fg:x="267127" fg:w="299"/><text x="97.2668%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (261 samples, 0.09%)</title><rect x="97.0306%" y="741" width="0.0948%" height="15" fill="rgb(238,168,12)" fg:x="267165" fg:w="261"/><text x="97.2806%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (261 samples, 0.09%)</title><rect x="97.0306%" y="725" width="0.0948%" height="15" fill="rgb(226,20,40)" fg:x="267165" fg:w="261"/><text x="97.2806%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::try_lock (261 samples, 0.09%)</title><rect x="97.0306%" y="709" width="0.0948%" height="15" fill="rgb(224,130,35)" fg:x="267165" fg:w="261"/><text x="97.2806%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (261 samples, 0.09%)</title><rect x="97.0306%" y="693" width="0.0948%" height="15" fill="rgb(225,63,41)" fg:x="267165" fg:w="261"/><text x="97.2806%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (261 samples, 0.09%)</title><rect x="97.0306%" y="677" width="0.0948%" height="15" fill="rgb(219,3,3)" fg:x="267165" fg:w="261"/><text x="97.2806%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.01%)</title><rect x="97.1425%" y="725" width="0.0113%" height="15" fill="rgb(218,157,4)" fg:x="267473" fg:w="31"/><text x="97.3925%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (31 samples, 0.01%)</title><rect x="97.1425%" y="709" width="0.0113%" height="15" fill="rgb(232,76,36)" fg:x="267473" fg:w="31"/><text x="97.3925%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (31 samples, 0.01%)</title><rect x="97.1425%" y="693" width="0.0113%" height="15" fill="rgb(247,36,0)" fg:x="267473" fg:w="31"/><text x="97.3925%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.01%)</title><rect x="97.1425%" y="677" width="0.0113%" height="15" fill="rgb(205,2,34)" fg:x="267473" fg:w="31"/><text x="97.3925%" y="687.50"></text></g><g><title>async_io::reactor::Direction::drain_into (62 samples, 0.02%)</title><rect x="97.1370%" y="741" width="0.0225%" height="15" fill="rgb(239,136,13)" fg:x="267458" fg:w="62"/><text x="97.3870%" y="751.50"></text></g><g><title>async_io::reactor::Reactor::process_timers (94 samples, 0.03%)</title><rect x="97.1668%" y="741" width="0.0341%" height="15" fill="rgb(253,122,12)" fg:x="267540" fg:w="94"/><text x="97.4168%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (28 samples, 0.01%)</title><rect x="97.2133%" y="741" width="0.0102%" height="15" fill="rgb(222,174,7)" fg:x="267668" fg:w="28"/><text x="97.4633%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (28 samples, 0.01%)</title><rect x="97.2133%" y="725" width="0.0102%" height="15" fill="rgb(208,191,42)" fg:x="267668" fg:w="28"/><text x="97.4633%" y="735.50"></text></g><g><title>polling::epoll::Events::iter (36 samples, 0.01%)</title><rect x="97.2485%" y="725" width="0.0131%" height="15" fill="rgb(237,212,15)" fg:x="267765" fg:w="36"/><text x="97.4985%" y="735.50"></text></g><g><title>polling::Poller::wait (132 samples, 0.05%)</title><rect x="97.2234%" y="741" width="0.0479%" height="15" fill="rgb(215,65,20)" fg:x="267696" fg:w="132"/><text x="97.4734%" y="751.50"></text></g><g><title>core::task::wake::Waker::wake (107 samples, 0.04%)</title><rect x="97.2990%" y="597" width="0.0389%" height="15" fill="rgb(232,103,11)" fg:x="267904" fg:w="107"/><text x="97.5490%" y="607.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (107 samples, 0.04%)</title><rect x="97.2990%" y="581" width="0.0389%" height="15" fill="rgb(235,148,18)" fg:x="267904" fg:w="107"/><text x="97.5490%" y="591.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (106 samples, 0.04%)</title><rect x="97.2993%" y="565" width="0.0385%" height="15" fill="rgb(240,173,7)" fg:x="267905" fg:w="106"/><text x="97.5493%" y="575.50"></text></g><g><title>parking::Unparker::unpark (106 samples, 0.04%)</title><rect x="97.2993%" y="549" width="0.0385%" height="15" fill="rgb(228,182,25)" fg:x="267905" fg:w="106"/><text x="97.5493%" y="559.50"></text></g><g><title>parking::Inner::unpark (101 samples, 0.04%)</title><rect x="97.3012%" y="533" width="0.0367%" height="15" fill="rgb(247,3,52)" fg:x="267910" fg:w="101"/><text x="97.5512%" y="543.50"></text></g><g><title>syscall (85 samples, 0.03%)</title><rect x="97.3070%" y="517" width="0.0309%" height="15" fill="rgb(226,155,8)" fg:x="267926" fg:w="85"/><text x="97.5570%" y="527.50"></text></g><g><title>[unknown] (85 samples, 0.03%)</title><rect x="97.3070%" y="501" width="0.0309%" height="15" fill="rgb(243,195,38)" fg:x="267926" fg:w="85"/><text x="97.5570%" y="511.50"></text></g><g><title>[unknown] (84 samples, 0.03%)</title><rect x="97.3073%" y="485" width="0.0305%" height="15" fill="rgb(254,181,33)" fg:x="267927" fg:w="84"/><text x="97.5573%" y="495.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="97.3077%" y="469" width="0.0301%" height="15" fill="rgb(232,98,23)" fg:x="267928" fg:w="83"/><text x="97.5577%" y="479.50"></text></g><g><title>[unknown] (78 samples, 0.03%)</title><rect x="97.3095%" y="453" width="0.0283%" height="15" fill="rgb(205,23,10)" fg:x="267933" fg:w="78"/><text x="97.5595%" y="463.50"></text></g><g><title>[unknown] (76 samples, 0.03%)</title><rect x="97.3102%" y="437" width="0.0276%" height="15" fill="rgb(212,124,38)" fg:x="267935" fg:w="76"/><text x="97.5602%" y="447.50"></text></g><g><title>[unknown] (55 samples, 0.02%)</title><rect x="97.3179%" y="421" width="0.0200%" height="15" fill="rgb(228,207,2)" fg:x="267956" fg:w="55"/><text x="97.5679%" y="431.50"></text></g><g><title>[unknown] (35 samples, 0.01%)</title><rect x="97.3251%" y="405" width="0.0127%" height="15" fill="rgb(215,120,22)" fg:x="267976" fg:w="35"/><text x="97.5751%" y="415.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="97.3262%" y="389" width="0.0116%" height="15" fill="rgb(251,172,33)" fg:x="267979" fg:w="32"/><text x="97.5762%" y="399.50"></text></g><g><title>async_executor::State::notify (138 samples, 0.05%)</title><rect x="97.2885%" y="613" width="0.0501%" height="15" fill="rgb(250,83,2)" fg:x="267875" fg:w="138"/><text x="97.5385%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (28 samples, 0.01%)</title><rect x="97.3633%" y="581" width="0.0102%" height="15" fill="rgb(210,132,53)" fg:x="268081" fg:w="28"/><text x="97.6133%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (28 samples, 0.01%)</title><rect x="97.3633%" y="565" width="0.0102%" height="15" fill="rgb(221,208,36)" fg:x="268081" fg:w="28"/><text x="97.6133%" y="575.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (151 samples, 0.05%)</title><rect x="97.3386%" y="613" width="0.0548%" height="15" fill="rgb(205,192,46)" fg:x="268013" fg:w="151"/><text x="97.5886%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (134 samples, 0.05%)</title><rect x="97.3447%" y="597" width="0.0487%" height="15" fill="rgb(223,163,14)" fg:x="268030" fg:w="134"/><text x="97.5947%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (53 samples, 0.02%)</title><rect x="97.3742%" y="581" width="0.0192%" height="15" fill="rgb(218,41,28)" fg:x="268111" fg:w="53"/><text x="97.6242%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (53 samples, 0.02%)</title><rect x="97.3742%" y="565" width="0.0192%" height="15" fill="rgb(235,104,10)" fg:x="268111" fg:w="53"/><text x="97.6242%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (293 samples, 0.11%)</title><rect x="97.2874%" y="629" width="0.1064%" height="15" fill="rgb(246,17,4)" fg:x="267872" fg:w="293"/><text x="97.5374%" y="639.50"></text></g><g><title>std::panic::catch_unwind (506 samples, 0.18%)</title><rect x="97.2754%" y="741" width="0.1838%" height="15" fill="rgb(240,7,16)" fg:x="267839" fg:w="506"/><text x="97.5254%" y="751.50"></text></g><g><title>std::panicking::try (506 samples, 0.18%)</title><rect x="97.2754%" y="725" width="0.1838%" height="15" fill="rgb(213,160,23)" fg:x="267839" fg:w="506"/><text x="97.5254%" y="735.50"></text></g><g><title>std::panicking::try::do_call (506 samples, 0.18%)</title><rect x="97.2754%" y="709" width="0.1838%" height="15" fill="rgb(251,179,49)" fg:x="267839" fg:w="506"/><text x="97.5254%" y="719.50"></text></g><g><title>async_io::reactor::ReactorLock::react::{{closure}} (506 samples, 0.18%)</title><rect x="97.2754%" y="693" width="0.1838%" height="15" fill="rgb(247,198,10)" fg:x="267839" fg:w="506"/><text x="97.5254%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (506 samples, 0.18%)</title><rect x="97.2754%" y="677" width="0.1838%" height="15" fill="rgb(220,65,29)" fg:x="267839" fg:w="506"/><text x="97.5254%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (506 samples, 0.18%)</title><rect x="97.2754%" y="661" width="0.1838%" height="15" fill="rgb(237,171,28)" fg:x="267839" fg:w="506"/><text x="97.5254%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (486 samples, 0.18%)</title><rect x="97.2826%" y="645" width="0.1765%" height="15" fill="rgb(228,44,26)" fg:x="267859" fg:w="486"/><text x="97.5326%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (180 samples, 0.07%)</title><rect x="97.3938%" y="629" width="0.0654%" height="15" fill="rgb(216,210,27)" fg:x="268165" fg:w="180"/><text x="97.6438%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (180 samples, 0.07%)</title><rect x="97.3938%" y="613" width="0.0654%" height="15" fill="rgb(252,10,17)" fg:x="268165" fg:w="180"/><text x="97.6438%" y="623.50"></text></g><g><title>async_io::reactor::ReactorLock::react (956 samples, 0.35%)</title><rect x="97.1254%" y="757" width="0.3472%" height="15" fill="rgb(214,172,30)" fg:x="267426" fg:w="956"/><text x="97.3754%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.01%)</title><rect x="97.4592%" y="741" width="0.0134%" height="15" fill="rgb(253,130,48)" fg:x="268345" fg:w="37"/><text x="97.7092%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.01%)</title><rect x="97.4595%" y="725" width="0.0131%" height="15" fill="rgb(226,99,43)" fg:x="268346" fg:w="36"/><text x="97.7095%" y="735.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (36 samples, 0.01%)</title><rect x="97.4595%" y="709" width="0.0131%" height="15" fill="rgb(239,111,26)" fg:x="268346" fg:w="36"/><text x="97.7095%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;core::result::Result&lt;(),async_channel::RecvError&gt;,async_channel::Recv&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (28 samples, 0.01%)</title><rect x="97.4740%" y="757" width="0.0102%" height="15" fill="rgb(240,27,53)" fg:x="268386" fg:w="28"/><text x="97.7240%" y="767.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="97.4740%" y="741" width="0.0102%" height="15" fill="rgb(254,163,12)" fg:x="268386" fg:w="28"/><text x="97.7240%" y="751.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (28 samples, 0.01%)</title><rect x="97.4740%" y="725" width="0.0102%" height="15" fill="rgb(225,51,48)" fg:x="268386" fg:w="28"/><text x="97.7240%" y="735.50"></text></g><g><title>std::sync::poison::Flag::done (195 samples, 0.07%)</title><rect x="97.5499%" y="693" width="0.0708%" height="15" fill="rgb(205,19,32)" fg:x="268595" fg:w="195"/><text x="97.7999%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (201 samples, 0.07%)</title><rect x="97.5499%" y="725" width="0.0730%" height="15" fill="rgb(218,119,26)" fg:x="268595" fg:w="201"/><text x="97.7999%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (201 samples, 0.07%)</title><rect x="97.5499%" y="709" width="0.0730%" height="15" fill="rgb(231,173,33)" fg:x="268595" fg:w="201"/><text x="97.7999%" y="719.50"></text></g><g><title>std::sys::unix::futex::futex_wait (3,267 samples, 1.19%)</title><rect x="97.6952%" y="661" width="1.1865%" height="15" fill="rgb(241,100,29)" fg:x="268995" fg:w="3267"/><text x="97.9452%" y="671.50"></text></g><g><title>syscall (3,108 samples, 1.13%)</title><rect x="97.7530%" y="645" width="1.1288%" height="15" fill="rgb(250,194,34)" fg:x="269154" fg:w="3108"/><text x="98.0030%" y="655.50"></text></g><g><title>[unknown] (3,088 samples, 1.12%)</title><rect x="97.7602%" y="629" width="1.1215%" height="15" fill="rgb(215,23,50)" fg:x="269174" fg:w="3088"/><text x="98.0102%" y="639.50"></text></g><g><title>[unknown] (3,060 samples, 1.11%)</title><rect x="97.7704%" y="613" width="1.1113%" height="15" fill="rgb(206,49,37)" fg:x="269202" fg:w="3060"/><text x="98.0204%" y="623.50"></text></g><g><title>[unknown] (3,047 samples, 1.11%)</title><rect x="97.7751%" y="597" width="1.1066%" height="15" fill="rgb(247,39,21)" fg:x="269215" fg:w="3047"/><text x="98.0251%" y="607.50"></text></g><g><title>[unknown] (2,948 samples, 1.07%)</title><rect x="97.8111%" y="581" width="1.0707%" height="15" fill="rgb(209,220,15)" fg:x="269314" fg:w="2948"/><text x="98.0611%" y="591.50"></text></g><g><title>[unknown] (2,777 samples, 1.01%)</title><rect x="97.8732%" y="565" width="1.0086%" height="15" fill="rgb(206,41,33)" fg:x="269485" fg:w="2777"/><text x="98.1232%" y="575.50"></text></g><g><title>[unknown] (2,549 samples, 0.93%)</title><rect x="97.9560%" y="549" width="0.9258%" height="15" fill="rgb(221,225,45)" fg:x="269713" fg:w="2549"/><text x="98.2060%" y="559.50"></text></g><g><title>[unknown] (2,459 samples, 0.89%)</title><rect x="97.9887%" y="533" width="0.8931%" height="15" fill="rgb(216,27,18)" fg:x="269803" fg:w="2459"/><text x="98.2387%" y="543.50"></text></g><g><title>[unknown] (2,036 samples, 0.74%)</title><rect x="98.1423%" y="517" width="0.7394%" height="15" fill="rgb(250,193,34)" fg:x="270226" fg:w="2036"/><text x="98.3923%" y="527.50"></text></g><g><title>[unknown] (1,613 samples, 0.59%)</title><rect x="98.2959%" y="501" width="0.5858%" height="15" fill="rgb(227,215,20)" fg:x="270649" fg:w="1613"/><text x="98.5459%" y="511.50"></text></g><g><title>[unknown] (1,264 samples, 0.46%)</title><rect x="98.4227%" y="485" width="0.4591%" height="15" fill="rgb(242,211,27)" fg:x="270998" fg:w="1264"/><text x="98.6727%" y="495.50"></text></g><g><title>[unknown] (707 samples, 0.26%)</title><rect x="98.6250%" y="469" width="0.2568%" height="15" fill="rgb(229,190,30)" fg:x="271555" fg:w="707"/><text x="98.8750%" y="479.50"></text></g><g><title>[unknown] (333 samples, 0.12%)</title><rect x="98.7608%" y="453" width="0.1209%" height="15" fill="rgb(253,31,29)" fg:x="271929" fg:w="333"/><text x="99.0108%" y="463.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="98.8701%" y="437" width="0.0116%" height="15" fill="rgb(229,177,52)" fg:x="272230" fg:w="32"/><text x="99.1201%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (76 samples, 0.03%)</title><rect x="98.8818%" y="661" width="0.0276%" height="15" fill="rgb(226,88,8)" fg:x="272262" fg:w="76"/><text x="99.1318%" y="671.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait (3,492 samples, 1.27%)</title><rect x="97.6433%" y="693" width="1.2682%" height="15" fill="rgb(214,55,27)" fg:x="268852" fg:w="3492"/><text x="97.8933%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex::Condvar::wait_optional_timeout (3,372 samples, 1.22%)</title><rect x="97.6869%" y="677" width="1.2247%" height="15" fill="rgb(233,202,5)" fg:x="268972" fg:w="3372"/><text x="97.9369%" y="687.50"></text></g><g><title>std::sys_common::condvar::check::NoCheck::verify (28 samples, 0.01%)</title><rect x="98.9115%" y="693" width="0.0102%" height="15" fill="rgb(251,49,30)" fg:x="272344" fg:w="28"/><text x="99.1615%" y="703.50"></text></g><g><title>std::sync::condvar::Condvar::wait (3,590 samples, 1.30%)</title><rect x="97.6259%" y="725" width="1.3038%" height="15" fill="rgb(235,18,52)" fg:x="268804" fg:w="3590"/><text x="97.8759%" y="735.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (3,570 samples, 1.30%)</title><rect x="97.6331%" y="709" width="1.2966%" height="15" fill="rgb(250,111,51)" fg:x="268824" fg:w="3570"/><text x="97.8831%" y="719.50"></text></g><g><title>parking::Parker::park (3,983 samples, 1.45%)</title><rect x="97.4871%" y="757" width="1.4466%" height="15" fill="rgb(218,13,25)" fg:x="268422" fg:w="3983"/><text x="97.7371%" y="767.50"></text></g><g><title>parking::Inner::park (3,950 samples, 1.43%)</title><rect x="97.4991%" y="741" width="1.4346%" height="15" fill="rgb(248,96,7)" fg:x="268455" fg:w="3950"/><text x="97.7491%" y="751.50"></text></g><g><title>parking::Parker::park_timeout (154 samples, 0.06%)</title><rect x="98.9337%" y="757" width="0.0559%" height="15" fill="rgb(217,31,15)" fg:x="272405" fg:w="154"/><text x="99.1837%" y="767.50"></text></g><g><title>parking::Inner::park (80 samples, 0.03%)</title><rect x="98.9606%" y="741" width="0.0291%" height="15" fill="rgb(228,59,49)" fg:x="272479" fg:w="80"/><text x="99.2106%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (54 samples, 0.02%)</title><rect x="98.9700%" y="725" width="0.0196%" height="15" fill="rgb(210,152,38)" fg:x="272505" fg:w="54"/><text x="99.2200%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (54 samples, 0.02%)</title><rect x="98.9700%" y="709" width="0.0196%" height="15" fill="rgb(206,71,11)" fg:x="272505" fg:w="54"/><text x="99.2200%" y="719.50"></text></g><g><title>parking::Parker::new (39 samples, 0.01%)</title><rect x="98.9940%" y="741" width="0.0142%" height="15" fill="rgb(244,199,5)" fg:x="272571" fg:w="39"/><text x="99.2440%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (39 samples, 0.01%)</title><rect x="98.9940%" y="725" width="0.0142%" height="15" fill="rgb(253,49,1)" fg:x="272571" fg:w="39"/><text x="99.2440%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (39 samples, 0.01%)</title><rect x="98.9940%" y="709" width="0.0142%" height="15" fill="rgb(225,206,40)" fg:x="272571" fg:w="39"/><text x="99.2440%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.01%)</title><rect x="98.9940%" y="693" width="0.0142%" height="15" fill="rgb(243,116,47)" fg:x="272571" fg:w="39"/><text x="99.2440%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.01%)</title><rect x="98.9940%" y="677" width="0.0142%" height="15" fill="rgb(219,225,16)" fg:x="272571" fg:w="39"/><text x="99.2440%" y="687.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.01%)</title><rect x="98.9940%" y="661" width="0.0142%" height="15" fill="rgb(233,29,47)" fg:x="272571" fg:w="39"/><text x="99.2440%" y="671.50"></text></g><g><title>malloc (37 samples, 0.01%)</title><rect x="98.9947%" y="645" width="0.0134%" height="15" fill="rgb(250,179,18)" fg:x="272573" fg:w="37"/><text x="99.2447%" y="655.50"></text></g><g><title>parking::pair (41 samples, 0.01%)</title><rect x="98.9940%" y="757" width="0.0149%" height="15" fill="rgb(215,176,6)" fg:x="272571" fg:w="41"/><text x="99.2440%" y="767.50"></text></g><g><title>std::time::Instant::elapsed (40 samples, 0.01%)</title><rect x="99.0110%" y="757" width="0.0145%" height="15" fill="rgb(214,117,39)" fg:x="272618" fg:w="40"/><text x="99.2610%" y="767.50"></text></g><g><title>std::time::Instant::now (28 samples, 0.01%)</title><rect x="99.0154%" y="741" width="0.0102%" height="15" fill="rgb(247,183,36)" fg:x="272630" fg:w="28"/><text x="99.2654%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (28 samples, 0.01%)</title><rect x="99.0154%" y="725" width="0.0102%" height="15" fill="rgb(237,200,3)" fg:x="272630" fg:w="28"/><text x="99.2654%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (28 samples, 0.01%)</title><rect x="99.0154%" y="709" width="0.0102%" height="15" fill="rgb(212,220,24)" fg:x="272630" fg:w="28"/><text x="99.2654%" y="719.50"></text></g><g><title>async_io::driver::block_on (33,727 samples, 12.25%)</title><rect x="86.7822%" y="773" width="12.2492%" height="15" fill="rgb(245,216,20)" fg:x="238947" fg:w="33727"/><text x="87.0322%" y="783.50">async_io::driver::..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (33,745 samples, 12.26%)</title><rect x="86.7771%" y="789" width="12.2557%" height="15" fill="rgb(219,124,7)" fg:x="238933" fg:w="33745"/><text x="87.0271%" y="799.50">async_global_execu..</text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (32 samples, 0.01%)</title><rect x="99.0463%" y="677" width="0.0116%" height="15" fill="rgb(227,167,8)" fg:x="272715" fg:w="32"/><text x="99.2963%" y="687.50"></text></g><g><title>__cxa_thread_atexit_impl (31 samples, 0.01%)</title><rect x="99.0466%" y="661" width="0.0113%" height="15" fill="rgb(241,37,2)" fg:x="272716" fg:w="31"/><text x="99.2966%" y="671.50"></text></g><g><title>async_global_executor::reactor::block_on (33,832 samples, 12.29%)</title><rect x="86.7709%" y="805" width="12.2873%" height="15" fill="rgb(238,134,33)" fg:x="238916" fg:w="33832"/><text x="87.0209%" y="815.50">async_global_execu..</text></g><g><title>tokio::runtime::handle::Handle::enter (62 samples, 0.02%)</title><rect x="99.0357%" y="789" width="0.0225%" height="15" fill="rgb(248,48,27)" fg:x="272686" fg:w="62"/><text x="99.2857%" y="799.50"></text></g><g><title>tokio::runtime::context::enter (38 samples, 0.01%)</title><rect x="99.0445%" y="773" width="0.0138%" height="15" fill="rgb(212,14,16)" fg:x="272710" fg:w="38"/><text x="99.2945%" y="783.50"></text></g><g><title>tokio::runtime::context::try_enter (35 samples, 0.01%)</title><rect x="99.0455%" y="757" width="0.0127%" height="15" fill="rgb(217,205,37)" fg:x="272713" fg:w="35"/><text x="99.2955%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.01%)</title><rect x="99.0459%" y="741" width="0.0123%" height="15" fill="rgb(233,185,47)" fg:x="272714" fg:w="34"/><text x="99.2959%" y="751.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (34 samples, 0.01%)</title><rect x="99.0459%" y="725" width="0.0123%" height="15" fill="rgb(244,88,8)" fg:x="272714" fg:w="34"/><text x="99.2959%" y="735.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (34 samples, 0.01%)</title><rect x="99.0459%" y="709" width="0.0123%" height="15" fill="rgb(213,0,20)" fg:x="272714" fg:w="34"/><text x="99.2959%" y="719.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (34 samples, 0.01%)</title><rect x="99.0459%" y="693" width="0.0123%" height="15" fill="rgb(238,159,36)" fg:x="272714" fg:w="34"/><text x="99.2959%" y="703.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (33,835 samples, 12.29%)</title><rect x="86.7702%" y="821" width="12.2884%" height="15" fill="rgb(253,173,17)" fg:x="238914" fg:w="33835"/><text x="87.0202%" y="831.50">async_global_execu..</text></g><g><title>__libc_calloc (47 samples, 0.02%)</title><rect x="99.0670%" y="773" width="0.0171%" height="15" fill="rgb(221,23,28)" fg:x="272772" fg:w="47"/><text x="99.3170%" y="783.50"></text></g><g><title>__cxa_thread_atexit_impl (95 samples, 0.03%)</title><rect x="99.0601%" y="789" width="0.0345%" height="15" fill="rgb(218,113,15)" fg:x="272753" fg:w="95"/><text x="99.3101%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (101 samples, 0.04%)</title><rect x="99.0586%" y="821" width="0.0367%" height="15" fill="rgb(233,58,3)" fg:x="272749" fg:w="101"/><text x="99.3086%" y="831.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (101 samples, 0.04%)</title><rect x="99.0586%" y="805" width="0.0367%" height="15" fill="rgb(250,46,35)" fg:x="272749" fg:w="101"/><text x="99.3086%" y="815.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (34,000 samples, 12.35%)</title><rect x="86.7513%" y="965" width="12.3483%" height="15" fill="rgb(210,169,11)" fg:x="238862" fg:w="34000"/><text x="87.0013%" y="975.50">async_std::task::b..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (33,999 samples, 12.35%)</title><rect x="86.7517%" y="949" width="12.3480%" height="15" fill="rgb(246,88,19)" fg:x="238863" fg:w="33999"/><text x="87.0017%" y="959.50">async_std::task::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33,993 samples, 12.35%)</title><rect x="86.7539%" y="933" width="12.3458%" height="15" fill="rgb(206,81,49)" fg:x="238869" fg:w="33993"/><text x="87.0039%" y="943.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33,986 samples, 12.34%)</title><rect x="86.7564%" y="917" width="12.3432%" height="15" fill="rgb(232,144,18)" fg:x="238876" fg:w="33986"/><text x="87.0064%" y="927.50">std::thread::local..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (33,975 samples, 12.34%)</title><rect x="86.7604%" y="901" width="12.3392%" height="15" fill="rgb(235,2,27)" fg:x="238887" fg:w="33975"/><text x="87.0104%" y="911.50">async_std::task::t..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (33,975 samples, 12.34%)</title><rect x="86.7604%" y="885" width="12.3392%" height="15" fill="rgb(239,157,39)" fg:x="238887" fg:w="33975"/><text x="87.0104%" y="895.50">async_std::task::b..</text></g><g><title>async_global_executor::executor::block_on (33,975 samples, 12.34%)</title><rect x="86.7604%" y="869" width="12.3392%" height="15" fill="rgb(220,11,17)" fg:x="238887" fg:w="33975"/><text x="87.0104%" y="879.50">async_global_execu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33,970 samples, 12.34%)</title><rect x="86.7622%" y="853" width="12.3374%" height="15" fill="rgb(243,94,50)" fg:x="238892" fg:w="33970"/><text x="87.0122%" y="863.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (33,953 samples, 12.33%)</title><rect x="86.7684%" y="837" width="12.3313%" height="15" fill="rgb(218,22,0)" fg:x="238909" fg:w="33953"/><text x="87.0184%" y="847.50">std::thread::local..</text></g><g><title>std::panic::catch_unwind (50,249 samples, 18.25%)</title><rect x="80.8503%" y="1141" width="18.2497%" height="15" fill="rgb(249,70,21)" fg:x="222614" fg:w="50249"/><text x="81.1003%" y="1151.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (50,249 samples, 18.25%)</title><rect x="80.8503%" y="1125" width="18.2497%" height="15" fill="rgb(245,111,46)" fg:x="222614" fg:w="50249"/><text x="81.1003%" y="1135.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (50,249 samples, 18.25%)</title><rect x="80.8503%" y="1109" width="18.2497%" height="15" fill="rgb(244,183,12)" fg:x="222614" fg:w="50249"/><text x="81.1003%" y="1119.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50,249 samples, 18.25%)</title><rect x="80.8503%" y="1093" width="18.2497%" height="15" fill="rgb(207,117,0)" fg:x="222614" fg:w="50249"/><text x="81.1003%" y="1103.50">&lt;core::panic::unwind_safe::A..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (50,249 samples, 18.25%)</title><rect x="80.8503%" y="1077" width="18.2497%" height="15" fill="rgb(206,20,43)" fg:x="222614" fg:w="50249"/><text x="81.1003%" y="1087.50">std::thread::Builder::spawn_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50,246 samples, 18.25%)</title><rect x="80.8514%" y="1061" width="18.2486%" height="15" fill="rgb(221,104,11)" fg:x="222617" fg:w="50246"/><text x="81.1014%" y="1071.50">std::sys_common::backtrace::..</text></g><g><title>zenoh_transport::manager::TransportExecutor::new::{{closure}} (34,061 samples, 12.37%)</title><rect x="86.7295%" y="1045" width="12.3705%" height="15" fill="rgb(254,36,50)" fg:x="238802" fg:w="34061"/><text x="86.9795%" y="1055.50">zenoh_transport::m..</text></g><g><title>async_std::task::block_on::block_on (34,061 samples, 12.37%)</title><rect x="86.7295%" y="1029" width="12.3705%" height="15" fill="rgb(252,17,15)" fg:x="238802" fg:w="34061"/><text x="86.9795%" y="1039.50">async_std::task::b..</text></g><g><title>async_std::task::builder::Builder::blocking (34,061 samples, 12.37%)</title><rect x="86.7295%" y="1013" width="12.3705%" height="15" fill="rgb(219,129,43)" fg:x="238802" fg:w="34061"/><text x="86.9795%" y="1023.50">async_std::task::b..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34,018 samples, 12.35%)</title><rect x="86.7452%" y="997" width="12.3549%" height="15" fill="rgb(205,34,45)" fg:x="238845" fg:w="34018"/><text x="86.9952%" y="1007.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34,016 samples, 12.35%)</title><rect x="86.7459%" y="981" width="12.3541%" height="15" fill="rgb(251,201,32)" fg:x="238847" fg:w="34016"/><text x="86.9959%" y="991.50">std::thread::local..</text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.2043%" y="1045" width="0.0163%" height="15" fill="rgb(205,56,0)" fg:x="273150" fg:w="45"/><text x="99.4543%" y="1055.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.2043%" y="1029" width="0.0163%" height="15" fill="rgb(211,193,27)" fg:x="273150" fg:w="45"/><text x="99.4543%" y="1039.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.2043%" y="1013" width="0.0163%" height="15" fill="rgb(231,100,42)" fg:x="273150" fg:w="45"/><text x="99.4543%" y="1023.50"></text></g><g><title>[unknown] (45 samples, 0.02%)</title><rect x="99.2043%" y="997" width="0.0163%" height="15" fill="rgb(245,85,27)" fg:x="273150" fg:w="45"/><text x="99.4543%" y="1007.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.2050%" y="981" width="0.0156%" height="15" fill="rgb(241,76,24)" fg:x="273152" fg:w="43"/><text x="99.4550%" y="991.50"></text></g><g><title>[unknown] (43 samples, 0.02%)</title><rect x="99.2050%" y="965" width="0.0156%" height="15" fill="rgb(249,157,15)" fg:x="273152" fg:w="43"/><text x="99.4550%" y="975.50"></text></g><g><title>[unknown] (41 samples, 0.01%)</title><rect x="99.2057%" y="949" width="0.0149%" height="15" fill="rgb(222,218,25)" fg:x="273154" fg:w="41"/><text x="99.4557%" y="959.50"></text></g><g><title>[unknown] (38 samples, 0.01%)</title><rect x="99.2068%" y="933" width="0.0138%" height="15" fill="rgb(252,156,52)" fg:x="273157" fg:w="38"/><text x="99.4568%" y="943.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="99.2083%" y="917" width="0.0123%" height="15" fill="rgb(211,185,7)" fg:x="273161" fg:w="34"/><text x="99.4583%" y="927.50"></text></g><g><title>__mmap (137 samples, 0.05%)</title><rect x="99.2206%" y="1045" width="0.0498%" height="15" fill="rgb(234,108,24)" fg:x="273195" fg:w="137"/><text x="99.4706%" y="1055.50"></text></g><g><title>[unknown] (137 samples, 0.05%)</title><rect x="99.2206%" y="1029" width="0.0498%" height="15" fill="rgb(227,218,2)" fg:x="273195" fg:w="137"/><text x="99.4706%" y="1039.50"></text></g><g><title>[unknown] (136 samples, 0.05%)</title><rect x="99.2210%" y="1013" width="0.0494%" height="15" fill="rgb(224,0,36)" fg:x="273196" fg:w="136"/><text x="99.4710%" y="1023.50"></text></g><g><title>[unknown] (135 samples, 0.05%)</title><rect x="99.2213%" y="997" width="0.0490%" height="15" fill="rgb(233,201,10)" fg:x="273197" fg:w="135"/><text x="99.4713%" y="1007.50"></text></g><g><title>[unknown] (132 samples, 0.05%)</title><rect x="99.2224%" y="981" width="0.0479%" height="15" fill="rgb(252,209,14)" fg:x="273200" fg:w="132"/><text x="99.4724%" y="991.50"></text></g><g><title>[unknown] (116 samples, 0.04%)</title><rect x="99.2282%" y="965" width="0.0421%" height="15" fill="rgb(205,93,49)" fg:x="273216" fg:w="116"/><text x="99.4782%" y="975.50"></text></g><g><title>[unknown] (83 samples, 0.03%)</title><rect x="99.2402%" y="949" width="0.0301%" height="15" fill="rgb(234,116,45)" fg:x="273249" fg:w="83"/><text x="99.4902%" y="959.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="99.2584%" y="933" width="0.0120%" height="15" fill="rgb(248,89,35)" fg:x="273299" fg:w="33"/><text x="99.5084%" y="943.50"></text></g><g><title>__mprotect (32 samples, 0.01%)</title><rect x="99.2704%" y="1045" width="0.0116%" height="15" fill="rgb(233,167,45)" fg:x="273332" fg:w="32"/><text x="99.5204%" y="1055.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="99.2704%" y="1029" width="0.0116%" height="15" fill="rgb(248,228,14)" fg:x="273332" fg:w="32"/><text x="99.5204%" y="1039.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="99.2704%" y="1013" width="0.0116%" height="15" fill="rgb(246,91,14)" fg:x="273332" fg:w="32"/><text x="99.5204%" y="1023.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="99.2704%" y="997" width="0.0116%" height="15" fill="rgb(227,142,5)" fg:x="273332" fg:w="32"/><text x="99.5204%" y="1007.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="99.2704%" y="981" width="0.0116%" height="15" fill="rgb(221,63,33)" fg:x="273332" fg:w="32"/><text x="99.5204%" y="991.50"></text></g><g><title>[unknown] (32 samples, 0.01%)</title><rect x="99.2704%" y="965" width="0.0116%" height="15" fill="rgb(233,49,0)" fg:x="273332" fg:w="32"/><text x="99.5204%" y="975.50"></text></g><g><title>[unknown] (31 samples, 0.01%)</title><rect x="99.2707%" y="949" width="0.0113%" height="15" fill="rgb(251,115,38)" fg:x="273333" fg:w="31"/><text x="99.5207%" y="959.50"></text></g><g><title>[unknown] (28 samples, 0.01%)</title><rect x="99.2718%" y="933" width="0.0102%" height="15" fill="rgb(231,214,32)" fg:x="273336" fg:w="28"/><text x="99.5218%" y="943.50"></text></g><g><title>[libc.so.6] (241 samples, 0.09%)</title><rect x="99.2014%" y="1061" width="0.0875%" height="15" fill="rgb(248,73,46)" fg:x="273142" fg:w="241"/><text x="99.4514%" y="1071.50"></text></g><g><title>[libc.so.6] (392 samples, 0.14%)</title><rect x="99.1520%" y="1077" width="0.1424%" height="15" fill="rgb(237,156,4)" fg:x="273006" fg:w="392"/><text x="99.4020%" y="1087.50"></text></g><g><title>malloc (481 samples, 0.17%)</title><rect x="99.1200%" y="1109" width="0.1747%" height="15" fill="rgb(227,132,2)" fg:x="272918" fg:w="481"/><text x="99.3700%" y="1119.50"></text></g><g><title>[libc.so.6] (471 samples, 0.17%)</title><rect x="99.1236%" y="1093" width="0.1711%" height="15" fill="rgb(248,161,9)" fg:x="272928" fg:w="471"/><text x="99.3736%" y="1103.50"></text></g><g><title>[libc.so.6] (49 samples, 0.02%)</title><rect x="99.3045%" y="1093" width="0.0178%" height="15" fill="rgb(238,77,38)" fg:x="273426" fg:w="49"/><text x="99.5545%" y="1103.50"></text></g><g><title>__libc_calloc (42 samples, 0.02%)</title><rect x="99.3070%" y="1077" width="0.0153%" height="15" fill="rgb(222,166,40)" fg:x="273433" fg:w="42"/><text x="99.5570%" y="1087.50"></text></g><g><title>pthread_attr_setaffinity_np (64 samples, 0.02%)</title><rect x="99.3034%" y="1109" width="0.0232%" height="15" fill="rgb(214,168,45)" fg:x="273423" fg:w="64"/><text x="99.5534%" y="1119.50"></text></g><g><title>pthread_getaffinity_np (157 samples, 0.06%)</title><rect x="99.3267%" y="1109" width="0.0570%" height="15" fill="rgb(226,64,37)" fg:x="273487" fg:w="157"/><text x="99.5767%" y="1119.50"></text></g><g><title>[unknown] (135 samples, 0.05%)</title><rect x="99.3346%" y="1093" width="0.0490%" height="15" fill="rgb(232,210,43)" fg:x="273509" fg:w="135"/><text x="99.5846%" y="1103.50"></text></g><g><title>[unknown] (131 samples, 0.05%)</title><rect x="99.3361%" y="1077" width="0.0476%" height="15" fill="rgb(214,76,33)" fg:x="273513" fg:w="131"/><text x="99.5861%" y="1087.50"></text></g><g><title>[unknown] (130 samples, 0.05%)</title><rect x="99.3365%" y="1061" width="0.0472%" height="15" fill="rgb(210,78,5)" fg:x="273514" fg:w="130"/><text x="99.5865%" y="1071.50"></text></g><g><title>[unknown] (117 samples, 0.04%)</title><rect x="99.3412%" y="1045" width="0.0425%" height="15" fill="rgb(211,107,37)" fg:x="273527" fg:w="117"/><text x="99.5912%" y="1055.50"></text></g><g><title>[unknown] (104 samples, 0.04%)</title><rect x="99.3459%" y="1029" width="0.0378%" height="15" fill="rgb(249,67,16)" fg:x="273540" fg:w="104"/><text x="99.5959%" y="1039.50"></text></g><g><title>[unknown] (73 samples, 0.03%)</title><rect x="99.3572%" y="1013" width="0.0265%" height="15" fill="rgb(222,114,31)" fg:x="273571" fg:w="73"/><text x="99.6072%" y="1023.50"></text></g><g><title>pthread_getattr_np (791 samples, 0.29%)</title><rect x="99.1047%" y="1125" width="0.2873%" height="15" fill="rgb(242,118,19)" fg:x="272876" fg:w="791"/><text x="99.3547%" y="1135.50"></text></g><g><title>std::sys::unix::thread::guard::current (825 samples, 0.30%)</title><rect x="99.1000%" y="1141" width="0.2996%" height="15" fill="rgb(223,115,1)" fg:x="272863" fg:w="825"/><text x="99.3500%" y="1151.50"></text></g><g><title>__cxa_thread_atexit_impl (44 samples, 0.02%)</title><rect x="99.4007%" y="1061" width="0.0160%" height="15" fill="rgb(241,182,54)" fg:x="273691" fg:w="44"/><text x="99.6507%" y="1071.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (49 samples, 0.02%)</title><rect x="99.4004%" y="1093" width="0.0178%" height="15" fill="rgb(244,166,36)" fg:x="273690" fg:w="49"/><text x="99.6504%" y="1103.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (48 samples, 0.02%)</title><rect x="99.4007%" y="1077" width="0.0174%" height="15" fill="rgb(241,52,43)" fg:x="273691" fg:w="48"/><text x="99.6507%" y="1087.50"></text></g><g><title>std::sys_common::thread_info::set (53 samples, 0.02%)</title><rect x="99.3997%" y="1141" width="0.0192%" height="15" fill="rgb(236,82,9)" fg:x="273688" fg:w="53"/><text x="99.6497%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (52 samples, 0.02%)</title><rect x="99.4000%" y="1125" width="0.0189%" height="15" fill="rgb(241,119,0)" fg:x="273689" fg:w="52"/><text x="99.6500%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (51 samples, 0.02%)</title><rect x="99.4004%" y="1109" width="0.0185%" height="15" fill="rgb(221,19,22)" fg:x="273690" fg:w="51"/><text x="99.6504%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51,266 samples, 18.62%)</title><rect x="80.8103%" y="1205" width="18.6191%" height="15" fill="rgb(254,144,35)" fg:x="222504" fg:w="51266"/><text x="81.0603%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A&gt; as co..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51,263 samples, 18.62%)</title><rect x="80.8114%" y="1189" width="18.6180%" height="15" fill="rgb(246,132,30)" fg:x="222507" fg:w="51263"/><text x="81.0614%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as co..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (51,263 samples, 18.62%)</title><rect x="80.8114%" y="1173" width="18.6180%" height="15" fill="rgb(234,69,28)" fg:x="222507" fg:w="51263"/><text x="81.0614%" y="1183.50">core::ops::function::FnOnce::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (51,258 samples, 18.62%)</title><rect x="80.8132%" y="1157" width="18.6162%" height="15" fill="rgb(219,106,47)" fg:x="222512" fg:w="51258"/><text x="81.0632%" y="1167.50">std::thread::Builder::spawn_u..</text></g><g><title>std::thread::Thread::cname (29 samples, 0.01%)</title><rect x="99.4189%" y="1141" width="0.0105%" height="15" fill="rgb(218,79,24)" fg:x="273741" fg:w="29"/><text x="99.6689%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (51 samples, 0.02%)</title><rect x="99.4316%" y="1173" width="0.0185%" height="15" fill="rgb(225,26,21)" fg:x="273776" fg:w="51"/><text x="99.6816%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (37 samples, 0.01%)</title><rect x="99.4367%" y="1157" width="0.0134%" height="15" fill="rgb(217,68,49)" fg:x="273790" fg:w="37"/><text x="99.6867%" y="1167.50"></text></g><g><title>sigaltstack (91 samples, 0.03%)</title><rect x="99.4501%" y="1173" width="0.0330%" height="15" fill="rgb(220,204,28)" fg:x="273827" fg:w="91"/><text x="99.7001%" y="1183.50"></text></g><g><title>[unknown] (74 samples, 0.03%)</title><rect x="99.4563%" y="1157" width="0.0269%" height="15" fill="rgb(237,208,43)" fg:x="273844" fg:w="74"/><text x="99.7063%" y="1167.50"></text></g><g><title>[unknown] (67 samples, 0.02%)</title><rect x="99.4589%" y="1141" width="0.0243%" height="15" fill="rgb(213,97,42)" fg:x="273851" fg:w="67"/><text x="99.7089%" y="1151.50"></text></g><g><title>[unknown] (63 samples, 0.02%)</title><rect x="99.4603%" y="1125" width="0.0229%" height="15" fill="rgb(238,96,52)" fg:x="273855" fg:w="63"/><text x="99.7103%" y="1135.50"></text></g><g><title>[unknown] (47 samples, 0.02%)</title><rect x="99.4661%" y="1109" width="0.0171%" height="15" fill="rgb(228,14,13)" fg:x="273871" fg:w="47"/><text x="99.7161%" y="1119.50"></text></g><g><title>__mmap (401 samples, 0.15%)</title><rect x="99.4832%" y="1141" width="0.1456%" height="15" fill="rgb(219,123,13)" fg:x="273918" fg:w="401"/><text x="99.7332%" y="1151.50"></text></g><g><title>[unknown] (396 samples, 0.14%)</title><rect x="99.4850%" y="1125" width="0.1438%" height="15" fill="rgb(216,144,17)" fg:x="273923" fg:w="396"/><text x="99.7350%" y="1135.50"></text></g><g><title>[unknown] (396 samples, 0.14%)</title><rect x="99.4850%" y="1109" width="0.1438%" height="15" fill="rgb(230,228,29)" fg:x="273923" fg:w="396"/><text x="99.7350%" y="1119.50"></text></g><g><title>[unknown] (396 samples, 0.14%)</title><rect x="99.4850%" y="1093" width="0.1438%" height="15" fill="rgb(233,18,5)" fg:x="273923" fg:w="396"/><text x="99.7350%" y="1103.50"></text></g><g><title>[unknown] (384 samples, 0.14%)</title><rect x="99.4894%" y="1077" width="0.1395%" height="15" fill="rgb(233,197,12)" fg:x="273935" fg:w="384"/><text x="99.7394%" y="1087.50"></text></g><g><title>[unknown] (316 samples, 0.11%)</title><rect x="99.5141%" y="1061" width="0.1148%" height="15" fill="rgb(234,140,29)" fg:x="274003" fg:w="316"/><text x="99.7641%" y="1071.50"></text></g><g><title>[unknown] (239 samples, 0.09%)</title><rect x="99.5420%" y="1045" width="0.0868%" height="15" fill="rgb(233,113,19)" fg:x="274080" fg:w="239"/><text x="99.7920%" y="1055.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="99.6067%" y="1029" width="0.0222%" height="15" fill="rgb(246,209,13)" fg:x="274258" fg:w="61"/><text x="99.8567%" y="1039.50"></text></g><g><title>__mprotect (391 samples, 0.14%)</title><rect x="99.6288%" y="1141" width="0.1420%" height="15" fill="rgb(242,79,54)" fg:x="274319" fg:w="391"/><text x="99.8788%" y="1151.50"></text></g><g><title>[unknown] (391 samples, 0.14%)</title><rect x="99.6288%" y="1125" width="0.1420%" height="15" fill="rgb(219,73,16)" fg:x="274319" fg:w="391"/><text x="99.8788%" y="1135.50"></text></g><g><title>[unknown] (391 samples, 0.14%)</title><rect x="99.6288%" y="1109" width="0.1420%" height="15" fill="rgb(224,52,10)" fg:x="274319" fg:w="391"/><text x="99.8788%" y="1119.50"></text></g><g><title>[unknown] (391 samples, 0.14%)</title><rect x="99.6288%" y="1093" width="0.1420%" height="15" fill="rgb(237,179,5)" fg:x="274319" fg:w="391"/><text x="99.8788%" y="1103.50"></text></g><g><title>[unknown] (391 samples, 0.14%)</title><rect x="99.6288%" y="1077" width="0.1420%" height="15" fill="rgb(231,20,6)" fg:x="274319" fg:w="391"/><text x="99.8788%" y="1087.50"></text></g><g><title>[unknown] (387 samples, 0.14%)</title><rect x="99.6303%" y="1061" width="0.1406%" height="15" fill="rgb(253,171,45)" fg:x="274323" fg:w="387"/><text x="99.8803%" y="1071.50"></text></g><g><title>[unknown] (374 samples, 0.14%)</title><rect x="99.6350%" y="1045" width="0.1358%" height="15" fill="rgb(230,75,49)" fg:x="274336" fg:w="374"/><text x="99.8850%" y="1055.50"></text></g><g><title>[unknown] (313 samples, 0.11%)</title><rect x="99.6572%" y="1029" width="0.1137%" height="15" fill="rgb(216,83,46)" fg:x="274397" fg:w="313"/><text x="99.9072%" y="1039.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.7519%" y="1013" width="0.0189%" height="15" fill="rgb(236,56,9)" fg:x="274658" fg:w="52"/><text x="100.0019%" y="1023.50"></text></g><g><title>[unknown] (36 samples, 0.01%)</title><rect x="99.7578%" y="997" width="0.0131%" height="15" fill="rgb(215,28,34)" fg:x="274674" fg:w="36"/><text x="100.0078%" y="1007.50"></text></g><g><title>[libc.so.6] (52,648 samples, 19.12%)</title><rect x="80.6778%" y="1237" width="19.1210%" height="15" fill="rgb(230,222,20)" fg:x="222139" fg:w="52648"/><text x="80.9278%" y="1247.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (52,308 samples, 19.00%)</title><rect x="80.8013%" y="1221" width="18.9975%" height="15" fill="rgb(235,209,51)" fg:x="222479" fg:w="52308"/><text x="81.0513%" y="1231.50">std::sys::unix::thread::Thread..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1,017 samples, 0.37%)</title><rect x="99.4294%" y="1205" width="0.3694%" height="15" fill="rgb(235,167,1)" fg:x="273770" fg:w="1017"/><text x="99.6794%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1,017 samples, 0.37%)</title><rect x="99.4294%" y="1189" width="0.3694%" height="15" fill="rgb(248,220,0)" fg:x="273770" fg:w="1017"/><text x="99.6794%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (869 samples, 0.32%)</title><rect x="99.4832%" y="1173" width="0.3156%" height="15" fill="rgb(239,0,18)" fg:x="273918" fg:w="869"/><text x="99.7332%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (869 samples, 0.32%)</title><rect x="99.4832%" y="1157" width="0.3156%" height="15" fill="rgb(229,179,11)" fg:x="273918" fg:w="869"/><text x="99.7332%" y="1167.50"></text></g><g><title>std::sys::unix::os::page_size (72 samples, 0.03%)</title><rect x="99.7726%" y="1141" width="0.0261%" height="15" fill="rgb(226,116,53)" fg:x="274715" fg:w="72"/><text x="100.0226%" y="1151.50"></text></g><g><title>__sysconf (72 samples, 0.03%)</title><rect x="99.7726%" y="1125" width="0.0261%" height="15" fill="rgb(218,1,49)" fg:x="274715" fg:w="72"/><text x="100.0226%" y="1135.50"></text></g><g><title>__clone (52,657 samples, 19.12%)</title><rect x="80.6763%" y="1253" width="19.1243%" height="15" fill="rgb(208,184,47)" fg:x="222135" fg:w="52657"/><text x="80.9263%" y="1263.50">__clone</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.01%)</title><rect x="99.8358%" y="709" width="0.0105%" height="15" fill="rgb(238,174,3)" fg:x="274889" fg:w="29"/><text x="100.0858%" y="719.50"></text></g><g><title>async_std::task::sleep::sleep::{{closure}} (29 samples, 0.01%)</title><rect x="99.8358%" y="693" width="0.0105%" height="15" fill="rgb(247,188,6)" fg:x="274889" fg:w="29"/><text x="100.0858%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.01%)</title><rect x="99.8358%" y="741" width="0.0120%" height="15" fill="rgb(211,165,46)" fg:x="274889" fg:w="33"/><text x="100.0858%" y="751.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::try_pull_queue::{{closure}} (33 samples, 0.01%)</title><rect x="99.8358%" y="725" width="0.0120%" height="15" fill="rgb(222,190,10)" fg:x="274889" fg:w="33"/><text x="100.0858%" y="735.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="1221" width="0.0163%" height="15" fill="rgb(206,185,3)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1231.50"></text></g><g><title>async_global_executor::reactor::block_on (45 samples, 0.02%)</title><rect x="99.8358%" y="1205" width="0.0163%" height="15" fill="rgb(244,125,37)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1215.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="1189" width="0.0163%" height="15" fill="rgb(211,43,7)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1199.50"></text></g><g><title>async_io::driver::block_on (45 samples, 0.02%)</title><rect x="99.8358%" y="1173" width="0.0163%" height="15" fill="rgb(250,41,42)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="1157" width="0.0163%" height="15" fill="rgb(254,54,42)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1167.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="1141" width="0.0163%" height="15" fill="rgb(213,71,43)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="1125" width="0.0163%" height="15" fill="rgb(249,3,44)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1135.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="1109" width="0.0163%" height="15" fill="rgb(229,80,41)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="1093" width="0.0163%" height="15" fill="rgb(231,25,28)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1103.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="1077" width="0.0163%" height="15" fill="rgb(208,79,48)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (45 samples, 0.02%)</title><rect x="99.8358%" y="1061" width="0.0163%" height="15" fill="rgb(207,196,38)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (45 samples, 0.02%)</title><rect x="99.8358%" y="1045" width="0.0163%" height="15" fill="rgb(228,105,49)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (45 samples, 0.02%)</title><rect x="99.8358%" y="1029" width="0.0163%" height="15" fill="rgb(237,99,15)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1039.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="1013" width="0.0163%" height="15" fill="rgb(224,207,46)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="997" width="0.0163%" height="15" fill="rgb(249,117,50)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="981" width="0.0163%" height="15" fill="rgb(248,17,13)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="991.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="965" width="0.0163%" height="15" fill="rgb(228,187,36)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="975.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="949" width="0.0163%" height="15" fill="rgb(234,132,20)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="933" width="0.0163%" height="15" fill="rgb(209,170,46)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="917" width="0.0163%" height="15" fill="rgb(237,23,19)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (45 samples, 0.02%)</title><rect x="99.8358%" y="901" width="0.0163%" height="15" fill="rgb(227,21,26)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="885" width="0.0163%" height="15" fill="rgb(222,220,48)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="895.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="869" width="0.0163%" height="15" fill="rgb(214,9,16)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="853" width="0.0163%" height="15" fill="rgb(209,73,30)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="863.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="837" width="0.0163%" height="15" fill="rgb(207,20,33)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="821" width="0.0163%" height="15" fill="rgb(219,153,12)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="831.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="805" width="0.0163%" height="15" fill="rgb(235,97,25)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="815.50"></text></g><g><title>&lt;async_std::future::timeout::TimeoutFuture&lt;F&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="789" width="0.0163%" height="15" fill="rgb(244,30,34)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.02%)</title><rect x="99.8358%" y="773" width="0.0163%" height="15" fill="rgb(214,106,45)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="783.50"></text></g><g><title>zenoh_transport::common::pipeline::TransmissionPipeline::pull::{{closure}} (45 samples, 0.02%)</title><rect x="99.8358%" y="757" width="0.0163%" height="15" fill="rgb(226,41,9)" fg:x="274889" fg:w="45"/><text x="100.0858%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (83 samples, 0.03%)</title><rect x="99.8358%" y="1253" width="0.0301%" height="15" fill="rgb(253,139,29)" fg:x="274889" fg:w="83"/><text x="100.0858%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (83 samples, 0.03%)</title><rect x="99.8358%" y="1237" width="0.0301%" height="15" fill="rgb(213,205,39)" fg:x="274889" fg:w="83"/><text x="100.0858%" y="1247.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="1221" width="0.0123%" height="15" fill="rgb(209,27,10)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1231.50"></text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="1205" width="0.0123%" height="15" fill="rgb(249,142,16)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1215.50"></text></g><g><title>async_global_executor::executor::block_on (34 samples, 0.01%)</title><rect x="99.8536%" y="1189" width="0.0123%" height="15" fill="rgb(242,65,12)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34 samples, 0.01%)</title><rect x="99.8536%" y="1173" width="0.0123%" height="15" fill="rgb(232,48,10)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.01%)</title><rect x="99.8536%" y="1157" width="0.0123%" height="15" fill="rgb(253,67,19)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1167.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="1141" width="0.0123%" height="15" fill="rgb(227,93,29)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1151.50"></text></g><g><title>async_global_executor::reactor::block_on (34 samples, 0.01%)</title><rect x="99.8536%" y="1125" width="0.0123%" height="15" fill="rgb(226,189,53)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1135.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="1109" width="0.0123%" height="15" fill="rgb(223,224,1)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1119.50"></text></g><g><title>async_io::driver::block_on (34 samples, 0.01%)</title><rect x="99.8536%" y="1093" width="0.0123%" height="15" fill="rgb(221,84,32)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="1077" width="0.0123%" height="15" fill="rgb(214,189,28)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1087.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="1061" width="0.0123%" height="15" fill="rgb(234,7,52)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="1045" width="0.0123%" height="15" fill="rgb(249,73,31)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1055.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="1029" width="0.0123%" height="15" fill="rgb(253,153,41)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1039.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="1013" width="0.0123%" height="15" fill="rgb(249,52,34)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1023.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="997" width="0.0123%" height="15" fill="rgb(236,177,47)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="1007.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (34 samples, 0.01%)</title><rect x="99.8536%" y="981" width="0.0123%" height="15" fill="rgb(252,185,45)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (34 samples, 0.01%)</title><rect x="99.8536%" y="965" width="0.0123%" height="15" fill="rgb(251,15,30)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.01%)</title><rect x="99.8536%" y="949" width="0.0123%" height="15" fill="rgb(233,31,4)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="959.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="933" width="0.0123%" height="15" fill="rgb(254,44,24)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="943.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="917" width="0.0123%" height="15" fill="rgb(218,54,1)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="901" width="0.0123%" height="15" fill="rgb(243,209,39)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="911.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="885" width="0.0123%" height="15" fill="rgb(206,75,33)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="895.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="869" width="0.0123%" height="15" fill="rgb(223,108,18)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="853" width="0.0123%" height="15" fill="rgb(244,89,31)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="863.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="837" width="0.0123%" height="15" fill="rgb(222,167,27)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (34 samples, 0.01%)</title><rect x="99.8536%" y="821" width="0.0123%" height="15" fill="rgb(247,41,16)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="805" width="0.0123%" height="15" fill="rgb(233,168,40)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="815.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="789" width="0.0123%" height="15" fill="rgb(205,211,8)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="773" width="0.0123%" height="15" fill="rgb(238,105,11)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="783.50"></text></g><g><title>zenoh_transport::unicast::link::TransportLinkUnicast::start_tx::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="757" width="0.0123%" height="15" fill="rgb(223,142,52)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="99.8536%" y="741" width="0.0123%" height="15" fill="rgb(238,51,33)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="751.50"></text></g><g><title>zenoh_transport::unicast::link::tx_task::{{closure}} (34 samples, 0.01%)</title><rect x="99.8536%" y="725" width="0.0123%" height="15" fill="rgb(231,188,43)" fg:x="274938" fg:w="34"/><text x="100.1036%" y="735.50"></text></g><g><title>async-std/runti (270,903 samples, 98.39%)</title><rect x="1.4782%" y="1269" width="98.3882%" height="15" fill="rgb(216,92,17)" fg:x="4070" fg:w="270903"/><text x="1.7282%" y="1279.50">async-std/runti</text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="99.8743%" y="1221" width="0.0120%" height="15" fill="rgb(228,2,40)" fg:x="274995" fg:w="33"/><text x="100.1243%" y="1231.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="99.8758%" y="1205" width="0.0105%" height="15" fill="rgb(226,73,15)" fg:x="274999" fg:w="29"/><text x="100.1258%" y="1215.50"></text></g><g><title>prctl (42 samples, 0.02%)</title><rect x="99.8914%" y="1141" width="0.0153%" height="15" fill="rgb(227,66,46)" fg:x="275042" fg:w="42"/><text x="100.1414%" y="1151.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.8914%" y="1125" width="0.0153%" height="15" fill="rgb(209,71,6)" fg:x="275042" fg:w="42"/><text x="100.1414%" y="1135.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.8914%" y="1109" width="0.0153%" height="15" fill="rgb(246,100,25)" fg:x="275042" fg:w="42"/><text x="100.1414%" y="1119.50"></text></g><g><title>[unknown] (42 samples, 0.02%)</title><rect x="99.8914%" y="1093" width="0.0153%" height="15" fill="rgb(248,185,27)" fg:x="275042" fg:w="42"/><text x="100.1414%" y="1103.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="99.8921%" y="1077" width="0.0145%" height="15" fill="rgb(225,118,47)" fg:x="275044" fg:w="40"/><text x="100.1421%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (47 samples, 0.02%)</title><rect x="99.8910%" y="1205" width="0.0171%" height="15" fill="rgb(220,185,44)" fg:x="275041" fg:w="47"/><text x="100.1410%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (46 samples, 0.02%)</title><rect x="99.8914%" y="1189" width="0.0167%" height="15" fill="rgb(227,95,24)" fg:x="275042" fg:w="46"/><text x="100.1414%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (46 samples, 0.02%)</title><rect x="99.8914%" y="1173" width="0.0167%" height="15" fill="rgb(252,84,24)" fg:x="275042" fg:w="46"/><text x="100.1414%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (46 samples, 0.02%)</title><rect x="99.8914%" y="1157" width="0.0167%" height="15" fill="rgb(240,34,44)" fg:x="275042" fg:w="46"/><text x="100.1414%" y="1167.50"></text></g><g><title>__mmap (61 samples, 0.02%)</title><rect x="99.9172%" y="1141" width="0.0222%" height="15" fill="rgb(209,72,54)" fg:x="275113" fg:w="61"/><text x="100.1672%" y="1151.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="99.9172%" y="1125" width="0.0222%" height="15" fill="rgb(226,19,45)" fg:x="275113" fg:w="61"/><text x="100.1672%" y="1135.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="99.9172%" y="1109" width="0.0222%" height="15" fill="rgb(246,7,45)" fg:x="275113" fg:w="61"/><text x="100.1672%" y="1119.50"></text></g><g><title>[unknown] (61 samples, 0.02%)</title><rect x="99.9172%" y="1093" width="0.0222%" height="15" fill="rgb(225,45,2)" fg:x="275113" fg:w="61"/><text x="100.1672%" y="1103.50"></text></g><g><title>[unknown] (59 samples, 0.02%)</title><rect x="99.9179%" y="1077" width="0.0214%" height="15" fill="rgb(221,80,29)" fg:x="275115" fg:w="59"/><text x="100.1679%" y="1087.50"></text></g><g><title>[unknown] (52 samples, 0.02%)</title><rect x="99.9205%" y="1061" width="0.0189%" height="15" fill="rgb(228,11,19)" fg:x="275122" fg:w="52"/><text x="100.1705%" y="1071.50"></text></g><g><title>[unknown] (33 samples, 0.01%)</title><rect x="99.9274%" y="1045" width="0.0120%" height="15" fill="rgb(243,17,21)" fg:x="275141" fg:w="33"/><text x="100.1774%" y="1055.50"></text></g><g><title>__mprotect (64 samples, 0.02%)</title><rect x="99.9393%" y="1141" width="0.0232%" height="15" fill="rgb(243,88,8)" fg:x="275174" fg:w="64"/><text x="100.1893%" y="1151.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="99.9393%" y="1125" width="0.0232%" height="15" fill="rgb(214,17,9)" fg:x="275174" fg:w="64"/><text x="100.1893%" y="1135.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="99.9393%" y="1109" width="0.0232%" height="15" fill="rgb(232,169,15)" fg:x="275174" fg:w="64"/><text x="100.1893%" y="1119.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="99.9393%" y="1093" width="0.0232%" height="15" fill="rgb(232,86,53)" fg:x="275174" fg:w="64"/><text x="100.1893%" y="1103.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="99.9393%" y="1077" width="0.0232%" height="15" fill="rgb(222,100,4)" fg:x="275174" fg:w="64"/><text x="100.1893%" y="1087.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="99.9393%" y="1061" width="0.0232%" height="15" fill="rgb(253,151,38)" fg:x="275174" fg:w="64"/><text x="100.1893%" y="1071.50"></text></g><g><title>[unknown] (64 samples, 0.02%)</title><rect x="99.9393%" y="1045" width="0.0232%" height="15" fill="rgb(238,215,29)" fg:x="275174" fg:w="64"/><text x="100.1893%" y="1055.50"></text></g><g><title>[unknown] (40 samples, 0.01%)</title><rect x="99.9481%" y="1029" width="0.0145%" height="15" fill="rgb(205,128,53)" fg:x="275198" fg:w="40"/><text x="100.1981%" y="1039.50"></text></g><g><title>[libc.so.6] (260 samples, 0.09%)</title><rect x="99.8714%" y="1237" width="0.0944%" height="15" fill="rgb(248,183,14)" fg:x="274987" fg:w="260"/><text x="100.1214%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (209 samples, 0.08%)</title><rect x="99.8900%" y="1221" width="0.0759%" height="15" fill="rgb(244,172,35)" fg:x="275038" fg:w="209"/><text x="100.1400%" y="1231.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (159 samples, 0.06%)</title><rect x="99.9081%" y="1205" width="0.0577%" height="15" fill="rgb(234,93,19)" fg:x="275088" fg:w="159"/><text x="100.1581%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (159 samples, 0.06%)</title><rect x="99.9081%" y="1189" width="0.0577%" height="15" fill="rgb(227,109,7)" fg:x="275088" fg:w="159"/><text x="100.1581%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (134 samples, 0.05%)</title><rect x="99.9172%" y="1173" width="0.0487%" height="15" fill="rgb(233,136,54)" fg:x="275113" fg:w="134"/><text x="100.1672%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (134 samples, 0.05%)</title><rect x="99.9172%" y="1157" width="0.0487%" height="15" fill="rgb(233,19,40)" fg:x="275113" fg:w="134"/><text x="100.1672%" y="1167.50"></text></g><g><title>router-eval-tes (277 samples, 0.10%)</title><rect x="99.8663%" y="1269" width="0.1006%" height="15" fill="rgb(247,41,18)" fg:x="274973" fg:w="277"/><text x="100.1163%" y="1279.50"></text></g><g><title>__clone (263 samples, 0.10%)</title><rect x="99.8714%" y="1253" width="0.0955%" height="15" fill="rgb(220,34,34)" fg:x="274987" fg:w="263"/><text x="100.1214%" y="1263.50"></text></g><g><title>tokio::loom::std::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.01%)</title><rect x="99.9728%" y="1013" width="0.0120%" height="15" fill="rgb(222,135,32)" fg:x="275266" fg:w="33"/><text x="100.2228%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (33 samples, 0.01%)</title><rect x="99.9728%" y="997" width="0.0120%" height="15" fill="rgb(214,80,19)" fg:x="275266" fg:w="33"/><text x="100.2228%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.01%)</title><rect x="99.9728%" y="981" width="0.0120%" height="15" fill="rgb(234,54,46)" fg:x="275266" fg:w="33"/><text x="100.2228%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock (33 samples, 0.01%)</title><rect x="99.9728%" y="965" width="0.0120%" height="15" fill="rgb(251,48,23)" fg:x="275266" fg:w="33"/><text x="100.2228%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex::Mutex::lock_contended (33 samples, 0.01%)</title><rect x="99.9728%" y="949" width="0.0120%" height="15" fill="rgb(254,109,52)" fg:x="275266" fg:w="33"/><text x="100.2228%" y="959.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (60 samples, 0.02%)</title><rect x="99.9688%" y="1029" width="0.0218%" height="15" fill="rgb(240,186,19)" fg:x="275255" fg:w="60"/><text x="100.2188%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (63 samples, 0.02%)</title><rect x="99.9684%" y="1141" width="0.0229%" height="15" fill="rgb(246,187,17)" fg:x="275254" fg:w="63"/><text x="100.2184%" y="1151.50"></text></g><g><title>std::panicking::try (63 samples, 0.02%)</title><rect x="99.9684%" y="1125" width="0.0229%" height="15" fill="rgb(212,21,5)" fg:x="275254" fg:w="63"/><text x="100.2184%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (63 samples, 0.02%)</title><rect x="99.9684%" y="1109" width="0.0229%" height="15" fill="rgb(225,185,18)" fg:x="275254" fg:w="63"/><text x="100.2184%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (63 samples, 0.02%)</title><rect x="99.9684%" y="1093" width="0.0229%" height="15" fill="rgb(245,114,17)" fg:x="275254" fg:w="63"/><text x="100.2184%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (63 samples, 0.02%)</title><rect x="99.9684%" y="1077" width="0.0229%" height="15" fill="rgb(223,164,24)" fg:x="275254" fg:w="63"/><text x="100.2184%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (63 samples, 0.02%)</title><rect x="99.9684%" y="1061" width="0.0229%" height="15" fill="rgb(211,228,3)" fg:x="275254" fg:w="63"/><text x="100.2184%" y="1071.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (63 samples, 0.02%)</title><rect x="99.9684%" y="1045" width="0.0229%" height="15" fill="rgb(223,16,38)" fg:x="275254" fg:w="63"/><text x="100.2184%" y="1055.50"></text></g><g><title>all (275,341 samples, 100%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(207,31,54)" fg:x="0" fg:w="275341"/><text x="0.2500%" y="1295.50"></text></g><g><title>tokio-runtime-w (91 samples, 0.03%)</title><rect x="99.9670%" y="1269" width="0.0330%" height="15" fill="rgb(220,39,11)" fg:x="275250" fg:w="91"/><text x="100.2170%" y="1279.50"></text></g><g><title>__clone (90 samples, 0.03%)</title><rect x="99.9673%" y="1253" width="0.0327%" height="15" fill="rgb(235,185,0)" fg:x="275251" fg:w="90"/><text x="100.2173%" y="1263.50"></text></g><g><title>[libc.so.6] (90 samples, 0.03%)</title><rect x="99.9673%" y="1237" width="0.0327%" height="15" fill="rgb(249,39,18)" fg:x="275251" fg:w="90"/><text x="100.2173%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (90 samples, 0.03%)</title><rect x="99.9673%" y="1221" width="0.0327%" height="15" fill="rgb(240,110,33)" fg:x="275251" fg:w="90"/><text x="100.2173%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (90 samples, 0.03%)</title><rect x="99.9673%" y="1205" width="0.0327%" height="15" fill="rgb(210,92,42)" fg:x="275251" fg:w="90"/><text x="100.2173%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (90 samples, 0.03%)</title><rect x="99.9673%" y="1189" width="0.0327%" height="15" fill="rgb(218,215,28)" fg:x="275251" fg:w="90"/><text x="100.2173%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (90 samples, 0.03%)</title><rect x="99.9673%" y="1173" width="0.0327%" height="15" fill="rgb(238,215,36)" fg:x="275251" fg:w="90"/><text x="100.2173%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (90 samples, 0.03%)</title><rect x="99.9673%" y="1157" width="0.0327%" height="15" fill="rgb(220,31,10)" fg:x="275251" fg:w="90"/><text x="100.2173%" y="1167.50"></text></g></svg></svg>